SQL,filename
 CREATE TABLE junk AS  (  select b.* FROM mrdw_dim_date b LIMIT 500  )  ;,(no Add Dem) ESFactor MRDW Data Pull.sas
" CREATE TABLE daysinmo AS  (  select b.year_cal, b.month_cal_id , CASE WHEN b.ab_day_of_week_cd IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' END AS wdwe , COUNT( b.date_dt) AS days FROM mrdw_dim_date b WHERE 100*b.year_cal+b.month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo, &curr_mo-100, &l2_mo-100, &l3_mo-100) GROUP BY b.year_cal, b.month_cal_id, wdwe ORDER BY b.year_cal, b.month_cal_id, wdwe  )  ;",(no Add Dem) ESFactor MRDW Data Pull.sas
" CREATE TABLE daysinmo2 AS ( SELECT  * , CASE WHEN  100*year_cal+month_cal_id = &curr_mo  THEN days END AS MN_days, CASE WHEN  100*year_cal+month_cal_id = &curr_mo-100  THEN days END AS MN_days_ly, CASE WHEN  100*year_cal+month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo)  THEN days END AS L3_days, CASE WHEN  100*year_cal+month_cal_id+100 IN ( &curr_mo, &l2_mo, &l3_mo)  THEN days END AS L3_days_ly, CASE WHEN  wdwe='WD' AND 100*year_cal+month_cal_id = &curr_mo  THEN days END AS MN_WD_days, CASE WHEN  wdwe='WD' AND 100*year_cal+month_cal_id = &curr_mo-100  THEN days END AS MN_WD_days_ly, CASE WHEN  wdwe='WD' AND 100*year_cal+month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo)  THEN days END AS L3_WD_days, CASE WHEN  wdwe='WD' AND 100*year_cal+month_cal_id+100 IN ( &curr_mo, &l2_mo, &l3_mo)  THEN days END AS L3_WD_days_ly, CASE WHEN  wdwe='WE' AND 100*year_cal+month_cal_id = &curr_mo  THEN days END AS MN_WE_days, CASE WHEN  wdwe='WE' AND 100*year_cal+month_cal_id = &curr_mo-100  THEN days END AS MN_WE_days_ly, CASE WHEN  wdwe='WE' AND 100*year_cal+month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo)  THEN days END AS L3_WE_days, CASE WHEN  wdwe='WE' AND 100*year_cal+month_cal_id+100 IN ( &curr_mo, &l2_mo, &l3_mo)  THEN days END AS L3_WE_days_ly FROM daysinmo );",(no Add Dem) ESFactor MRDW Data Pull.sas
" CREATE TABLE daysinmonth AS select &curr_mo AS yrmo, SUM( MN_days) AS MN_days, SUM( MN_days_ly) AS MN_days_ly , SUM( L3_days) AS L3_days, SUM( L3_days_ly) AS L3_days_ly , SUM( MN_WD_days) AS MN_WD_days, SUM( MN_WD_days_ly) AS MN_WD_days_ly , SUM( L3_WD_days) AS L3_WD_days, SUM( L3_WD_days_ly) AS L3_WD_days_ly , SUM( MN_WE_days) AS MN_WE_days, SUM( MN_WE_days_ly) AS MN_WE_days_ly , SUM( L3_WE_days) AS L3_WE_days, SUM( L3_WE_days_ly) AS L3_WE_days_ly FROM daysinmo2;",(no Add Dem) ESFactor MRDW Data Pull.sas
" CREATE TABLE AdtlDemand AS  (  select a14.property_cd AS MARSHA, a13.year_cal, a13.month_cal_id , CASE WHEN qy_stay_nights <= 4 THEN 'T1' ELSE 'ES' END AS esflag , CASE WHEN a12.cd_room_pool like 'T%' THEN 'TBD' when a12.cd_room_pool like 'O%' THEN 'TBD' when a12.cd_room_pool like 'S%' THEN 'STD' when a12.cd_room_pool like 'G%' THEN 'STD' ELSE 'TBD' END AS rmpool , SUM( a12.qy_addl_demand_total) AS DEMAND FROM mrdw_fact_ddm_stat_unconstrain AS a12 JOIN mrdw_dim_date AS a13 ON ( a12.id_date_stay = a13.date_key) JOIN mrdw_dim_property AS a14 ON ( a12.id_property = a14.property_id) WHERE 100*a13.year_cal+a13.month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo, &curr_mo-100, &l2_mo-100, &l3_mo-100) GROUP BY a14.property_cd, a13.year_cal, a13.month_cal_id, esflag, rmpool ORDER BY a14.property_cd, a13.year_cal, a13.month_cal_id, esflag, rmpool )  ;",(no Add Dem) ESFactor MRDW Data Pull.sas
" CREATE TABLE adem_mn AS select marsha , CASE WHEN 100*a.year_cal+a.month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo) THEN &curryr ELSE &curryr-1 END AS yr , 'MN' AS timeframe, esflag, rmpool , DEMAND FROM AdtlDemand AS a WHERE 100*a.year_cal+a.month_cal_id = &curr_mo OR 100*a.year_cal+a.month_cal_id = &curr_mo-100;",(no Add Dem) ESFactor MRDW Data Pull.sas
" CREATE TABLE adem_l3 AS select marsha , CASE WHEN 100*a.year_cal+a.month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo) THEN &curryr ELSE &curryr-1 END AS yr , 'L3' AS timeframe, esflag, rmpool , SUM( Demand) AS demand FROM AdtlDemand AS a GROUP BY marsha, calculated yr, timeframe, esflag, rmpool;",(no Add Dem) ESFactor MRDW Data Pull.sas
" CREATE TABLE ademall AS ( SELECT  *  , compress( timeframe||'_'||esflag||'_'||rmpool||'_Dem_'||yr_lbl ) AS idVAR , CASE WHEN  yr=&curryr  THEN 'TY' WHEN  yr=&curryr-1  THEN 'LY' END AS yr_lbl FROM adem_mn UNION ALL SELECT  *  , compress( timeframe||'_'||esflag||'_'||rmpool||'_Dem_'||yr_lbl ) AS idVAR , CASE WHEN  yr=&curryr  THEN 'TY' WHEN  yr=&curryr-1  THEN 'LY' END AS yr_lbl FROM adem_l3);",(no Add Dem) ESFactor MRDW Data Pull.sas
SELECT * FROM ademall ORDER BY marsha;,(no Add Dem) ESFactor MRDW Data Pull.sas
" CREATE TABLE MC29_RN_L12 AS  (  select a.property_cd , SUM( a.roomnights_qty) AS MC29_RN_L12 FROM mrdw_fact_agg_dr_rev_analysis a, mrdw_dim_date b WHERE a.date_stay_dt=b.date_dt AND a.brand_cd IN ( 'RI', 'TS', 'ER') AND a.market_prefix_cd = '29' AND 100*b.year_cal+b.month_cal_id > &curr_mo - 100 AND 100*b.year_cal+b.month_cal_id <= &curr_mo GROUP BY a.property_cd ORDER BY a.property_cd  )  ;",(no Add Dem) ESFactor MRDW Data Pull.sas
" CREATE TABLE daysytd_ty AS  (  select b.year_cal , COUNT( b.date_dt) AS days_ytd_ty FROM mrdw_dim_date b WHERE 100*b.year_cal+b.month_cal_id <= &curr_mo AND 100*b.year_cal+b.month_cal_id >= &curr_mo-12 GROUP BY b.year_cal ORDER BY b.year_cal  )  ;",(no Add Dem) ESFactor MRDW Data Pull.sas
" CREATE TABLE daysytd_ly AS  (  select b.year_cal , COUNT( b.date_dt) AS days_ytd_ly FROM mrdw_dim_date b WHERE 100*b.year_cal+b.month_cal_id <= &curr_mo-100 AND 100*b.year_cal+b.month_cal_id >= &curr_mo-112 GROUP BY b.year_cal ORDER BY b.year_cal  )  ;",(no Add Dem) ESFactor MRDW Data Pull.sas
" CREATE TABLE esytddata_ty AS  (  select a.property_cd, b.year_cal , SUM( a.roomnights_qty) AS rn, SUM( a.net_rev_local_amt) AS rv , SUM( net_rev_usd_sub_amt) AS rv_usd FROM mrdw_fact_agg_dr_rev_analysis a, mrdw_dim_date b WHERE a.date_stay_dt=b.date_dt AND a.brand_cd IN ( 'RI', 'TS', 'ER') AND a.ab_tier_los_txt <> 'LOS:1-4' AND 100*b.year_cal+b.month_cal_id <= &curr_mo AND 100*b.year_cal+b.month_cal_id >= &curr_mo-12 GROUP BY a.property_cd, b.year_cal ORDER BY a.property_cd, b.year_cal  )  ;",(no Add Dem) ESFactor MRDW Data Pull.sas
" CREATE TABLE esytddata_ly AS  (  select a.property_cd, b.year_cal , SUM( a.roomnights_qty) AS rn, SUM( a.net_rev_local_amt) AS rv , SUM( net_rev_usd_sub_amt) AS rv_usd FROM mrdw_fact_agg_dr_rev_analysis a, mrdw_dim_date b WHERE a.date_stay_dt=b.date_dt AND a.brand_cd IN ( 'RI', 'TS', 'ER') AND a.ab_tier_los_txt <> 'LOS:1-4' AND 100*b.year_cal+b.month_cal_id <= &curr_mo-100 AND 100*b.year_cal+b.month_cal_id >= &curr_mo-112 GROUP BY a.property_cd, b.year_cal ORDER BY a.property_cd, b.year_cal  )  ;",(no Add Dem) ESFactor MRDW Data Pull.sas
" CREATE TABLE esytddata AS select a.marsha, a.hcap, d.days_ytd_ty, e.days_ytd_ly, b.rn AS esrn_ty , CASE WHEN a.curr='USD' THEN b.rv_usd ELSE b.rv END AS esrv_ty , c.rn AS esrn_ly , CASE WHEN a.curr='USD' THEN c.rv_usd ELSE c.rv END AS esrv_ly , b.rn/( a.hcap*d.days_ytd_ty) AS EsOcc_YTD , c.rn/( a.hcap*e.days_ytd_ly) AS EsOcc_ly_YTD , ( calculated EsOcc_YTD+- calculated EsOcc_ly_YTD) AS ESOcc_chg_YTD , calculated esrv_ty/( a.hcap*d.days_ytd_ty) AS EsRevPAR_YTD , calculated esrv_ly/( a.hcap*e.days_ytd_ly) AS EsRevPAR_ly_YTD , ( calculated EsRevPAR_YTD/calculated EsRevPAR_ly_YTD) - 1 AS EsRevPAR_chg_YTD , calculated esrv_ty/b.rn AS EsADR_YTD , calculated esrv_ly/c.rn AS EsADR_ly_YTD , ( calculated EsADR_YTD/calculated EsADR_ly_YTD) - 1 AS EsADR_chg_YTD FROM dss.prop AS a LEFT JOIN esytddata_ty AS b ON a.marsha=b.property_cd LEFT JOIN esytddata_ly AS c ON a.marsha=c.property_cd LEFT JOIN daysytd_ty AS d ON b.year_cal=d.year_cal LEFT JOIN daysytd_ly AS e ON c.year_cal=e.year_cal WHERE a.openflag='Y' AND a.brnd IN ( 'RI', 'TS', 'ER' ) ;",(no Add Dem) ESFactor MRDW Data Pull.sas
" CREATE TABLE mrdwdata AS  (  select a.property_cd, b.year_cal, b.month_cal_id, a.ab_tier_los_txt , CASE WHEN a.market_prefix_cd IN ( '10', '12', '30', '34', '37', '20', '23', '24', '21') THEN 'NQ' when a.market_prefix_cd IN ( '17', '18') THEN 'SC' when a.market_prefix_cd = '16' THEN 'GV' when a.market_prefix_cd IN ( 'GR', 'CN', 'CT') THEN a.market_prefix_cd ELSE 'OT' END AS segment , CASE WHEN b.ab_day_of_week_cd IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' END AS wdwe , CASE WHEN a.ab_tier_los_txt = 'LOS:1-4' THEN 'T1' ELSE 'ES' END AS es_flag , CASE WHEN a.room_pool_cd like 'O%' THEN 'STD' when a.room_pool_cd like 'S%' THEN 'STD' when a.room_pool_cd like 'G%' THEN 'STD' ELSE 'TBD' END AS rmpool , CASE WHEN a.market_prefix_cd IN ( '10', '12') THEN a.market_prefix_cd ELSE 'OT' END AS bnch , SUM( a.roomnights_qty) AS rn, SUM( a.net_rev_local_amt) AS rv , SUM( net_rev_usd_sub_amt) AS rv_usd FROM mrdw_fact_agg_dr_rev_analysis a, mrdw_dim_date b WHERE a.date_stay_dt=b.date_dt AND a.brand_cd IN ( 'RI', 'TS', 'ER') AND 100*b.year_cal+b.month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo, &curr_mo-100, &l2_mo-100, &l3_mo-100) GROUP BY a.property_cd, b.year_cal, b.month_cal_id, a.ab_tier_los_txt, segment, wdwe, es_flag, rmpool, bnch ORDER BY a.property_cd, b.year_cal, b.month_cal_id, a.ab_tier_los_txt, segment, wdwe, es_flag, rmpool, bnch  )  ;",(no Add Dem) ESFactor MRDW Data Pull.sas
" CREATE TABLE mndata AS select property_cd , CASE WHEN 100*a.year_cal+a.month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo) THEN &curryr ELSE &curryr-1 END AS yr , 'MN' AS timeframe, ab_tier_los_txt, segment, wdwe, es_flag, rmpool, bnch , rn, rv, rv_usd FROM mrdwdata AS a WHERE 100*a.year_cal+a.month_cal_id = &curr_mo OR 100*a.year_cal+a.month_cal_id = &curr_mo-100;",(no Add Dem) ESFactor MRDW Data Pull.sas
" CREATE TABLE l3data AS select property_cd , CASE WHEN 100*a.year_cal+a.month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo) THEN &curryr ELSE &curryr-1 END AS yr , 'L3' AS timeframe, ab_tier_los_txt, segment, wdwe, es_flag, rmpool, bnch , SUM( rn) AS rn, SUM( rv) AS rv, SUM( rv_usd) AS rv_usd FROM mrdwdata AS a GROUP BY property_cd, calculated yr, ab_tier_los_txt, segment, wdwe, es_flag, rmpool, bnch;",(no Add Dem) ESFactor MRDW Data Pull.sas
 CREATE TABLE mrdwdata2 AS ( SELECT  *  FROM l3data UNION ALL SELECT  *  FROM mndata);,(no Add Dem) ESFactor MRDW Data Pull.sas
" CREATE TABLE mrdwdata3 AS select coalesce( a.property_cd,b.property_cd) AS marsha, coalesce( a.timeframe,b.timeframe) AS timeframe , CASE WHEN coalesce( a.ab_tier_los_txt,b.ab_tier_los_txt) = 'LOS:1-4' THEN 'T1' when coalesce( a.ab_tier_los_txt,b.ab_tier_los_txt) = 'LOS:5-11' THEN 'T2' when coalesce( a.ab_tier_los_txt,b.ab_tier_los_txt) = 'LOS:12-29' THEN 'T3' when coalesce( a.ab_tier_los_txt,b.ab_tier_los_txt) = 'LOS:30+' THEN 'T4' END AS tier , coalesce( a.segment,b.segment) AS segment, coalesce( a.wdwe,b.wdwe) AS wdwe , coalesce( a.es_flag,b.es_flag) AS esflag, coalesce( a.rmpool,b.rmpool) AS rmpool , coalesce( a.bnch,b.bnch) AS bnch , a.rn AS rn, a.rv_usd AS rv, b.rn AS rn_ly, b.rv_usd AS rv_ly FROM mrdwdata2 AS a full JOIN mrdwdata2 AS b ON a.property_cd=b.property_cd AND a.yr=b.yr+1 AND a.timeframe=b.timeframe AND a.ab_tier_los_txt=b.ab_tier_los_txt AND a.segment=b.segment AND a.wdwe=b.wdwe AND a.es_flag=b.es_flag AND a.rmpool=b.rmpool AND a.bnch=b.bnch WHERE coalesce( a.yr,b.yr+1)=&curryr;",(no Add Dem) ESFactor MRDW Data Pull.sas
"SELECT * FROM mrdwdata3 ORDER BY marsha ,timeframe ,tier ,segment ,wdwe ,esflag ,rmpool ,bnch;",(no Add Dem) ESFactor MRDW Data Pull.sas
" CREATE TABLE tranmrdw2 AS ( SELECT  *  , compress( timeframe||'_'||tier||'_'||segment||'_'||wdwe||'_'||_name_ ) AS idVAR  FROM tranmrdw );",(no Add Dem) ESFactor MRDW Data Pull.sas
" CREATE TABLE tr_sum1 AS select marsha, compress( timeframe||'_'||esflag||'_'||segment||'_'||'FW'||'_'||_name_) AS idVAR, SUM( col1) AS col1 FROM tranmrdw GROUP BY marsha, calculated idVAR;",(no Add Dem) ESFactor MRDW Data Pull.sas
" CREATE TABLE tr_sum2 AS select marsha, compress( timeframe||'_'||esflag||'_'||'TO'||'_'||wdwe||'_'||_name_) AS idVAR, SUM( col1) AS col1 FROM tranmrdw GROUP BY marsha, calculated idVAR;",(no Add Dem) ESFactor MRDW Data Pull.sas
" CREATE TABLE tr_sum3 AS select marsha, compress( timeframe||'_'||tier||'_'||segment||'_'||wdwe||'_'||_name_) AS idVAR, SUM( col1) AS col1 FROM tranmrdw GROUP BY marsha, calculated idVAR;",(no Add Dem) ESFactor MRDW Data Pull.sas
" CREATE TABLE tr_sum4 AS select marsha, compress( timeframe||'_'||esflag||'_'||'TO'||'_'||'FW'||'_'||_name_) AS idVAR, SUM( col1) AS col1 FROM tranmrdw GROUP BY marsha, calculated idVAR;",(no Add Dem) ESFactor MRDW Data Pull.sas
" CREATE TABLE tr_sum5 AS select marsha, compress( timeframe||'_'||esflag||'_'||segment||'_'||wdwe||'_'||rmpool||'_'||_name_) AS idVAR, SUM( col1) AS col1 FROM tranmrdw GROUP BY marsha, calculated idVAR;",(no Add Dem) ESFactor MRDW Data Pull.sas
" CREATE TABLE tr_sum6 AS select marsha, compress( timeframe||'_'||esflag||'_'||bnch||'_'||wdwe||'_'||_name_) AS idVAR, SUM( col1) AS col1 FROM tranmrdw WHERE bnch<>'OT' GROUP BY marsha, calculated idVAR;",(no Add Dem) ESFactor MRDW Data Pull.sas
" CREATE TABLE tr_sum7 AS select marsha, compress( timeframe||'_'||tier||'_'||bnch||'_'||'FW'||'_'||_name_) AS idVAR, SUM( col1) AS col1 FROM tranmrdw WHERE bnch = '12' GROUP BY marsha, calculated idVAR;",(no Add Dem) ESFactor MRDW Data Pull.sas
" CREATE TABLE tr_sum8 AS select marsha, compress( timeframe||'_'||tier||'_'||segment||'_'||'FW'||'_'||_name_) AS idVAR, SUM( col1) AS col1 FROM tranmrdw WHERE segment='GR' AND tier<>'T1' GROUP BY marsha, calculated idVAR;",(no Add Dem) ESFactor MRDW Data Pull.sas
" CREATE TABLE tr_sumall AS ( SELECT  *  , &curr_mo AS yrmo  FROM tr_sum5 UNION ALL SELECT  *  , &curr_mo AS yrmo  FROM tr_sum1 UNION ALL SELECT  *  , &curr_mo AS yrmo  FROM tr_sum2 UNION ALL SELECT  *  , &curr_mo AS yrmo  FROM tr_sum3 UNION ALL SELECT  *  , &curr_mo AS yrmo  FROM tr_sum4 UNION ALL SELECT  *  , &curr_mo AS yrmo  FROM tr_sum6 UNION ALL SELECT  *  , &curr_mo AS yrmo  FROM tr_sum7 UNION ALL SELECT  *  , &curr_mo AS yrmo  FROM tr_sum8);",(no Add Dem) ESFactor MRDW Data Pull.sas
"SELECT * FROM tr_sumall ORDER BY marsha ,idVAR;",(no Add Dem) ESFactor MRDW Data Pull.sas
" CREATE TABLE esf.esf_mrdw AS select a.marsha, ( L3_ES_GR_FW_rn/L3_ES_GR_FW_rn_ly) - 1 AS Es_GR_RN_Chg_L3 , ( MN_ES_GR_FW_rn/MN_ES_GR_FW_rn_ly) - 1 AS Es_GR_RN_Chg_MN , L3_ES_GR_FW_rn / ( L3_ES_TO_WD_rn+L3_ES_TO_WE_rn) AS Es_GR_RN_Mix_L3 , ( L3_ES_TO_FW_rn/L3_ES_TO_FW_rn_ly) - 1 AS Es_RN_Chg_L3 , ( MN_ES_TO_FW_rn/MN_ES_TO_FW_rn_ly) - 1 AS Es_RN_Chg_MN , L3_ES_TO_FW_rn/( L3_ES_TO_FW_rn+L3_T1_TO_FW_rn) - L3_ES_TO_FW_rn_ly/( L3_ES_TO_FW_rn_ly+L3_T1_TO_FW_rn_ly) AS Es_RN_Mix_Chg_L3 , L3_ES_TO_FW_rn/( L3_ES_TO_FW_rn+L3_T1_TO_FW_rn) AS Es_RN_Mix_L3 , ( L3_ES_TO_FW_rv/L3_ES_TO_FW_rn) AS EsADR_L3 , ( L3_ES_TO_FW_rv/L3_ES_TO_FW_rn)/( L3_ES_TO_FW_rv_ly/L3_ES_TO_FW_rn_ly) - 1 AS EsADR_Chg_L3 , L3_ES_TO_FW_rn/( c.hcap*L3_days) AS ESOcc_L3 , L3_ES_TO_FW_rn/( c.hcap*L3_days) - L3_ES_TO_FW_rn_ly/( c.hcap*L3_days_ly) AS EsOcc_Chg_L3 , MN_ES_TO_FW_rn/( c.hcap*MN_days) AS ESOcc_MN , MN_ES_TO_FW_rn/( c.hcap*MN_days) - MN_ES_TO_FW_rn_ly/( c.hcap*MN_days_ly) AS EsOcc_Chg_MN , L3_ES_SC_FW_rn/L3_ES_SC_FW_rn_ly - 1 AS Especialcorp_RN_Chg_L3 , L3_ES_SC_FW_rn AS Especialcorp_RN_L3 , ( L3_ES_TO_FW_rv/( c.hcap*L3_days)) / ( L3_ES_TO_FW_rv_ly/( c.hcap*L3_days_ly)) - 1 AS EsRevPAR_Chg_L3 , ( L3_ES_TO_FW_rv/( c.hcap*L3_days)) AS EsRevPAR_L3 , ( MN_ES_TO_FW_rv/MN_ES_TO_FW_rn) AS EsADR_MN , ( MN_ES_TO_FW_rv/MN_ES_TO_FW_rn)/( MN_ES_TO_FW_rv_ly/MN_ES_TO_FW_rn_ly) - 1 AS EsADR_chg_MN , ( MN_ES_TO_FW_rv/( c.hcap*MN_days)) AS EsRevPAR_MN , ( MN_ES_TO_FW_rv/( c.hcap*MN_days))/( MN_ES_TO_FW_rv_ly/( c.hcap*MN_days_ly)) - 1 AS EsRevPAR_chg_MN , L3_ES_TO_FW_rn AS EsRN_L3 , ( L3_ES_GR_FW_rn+L3_T1_GR_FW_rn)/( L3_ES_GR_FW_rn_ly+L3_T1_GR_FW_rn_ly) - 1 AS FW_GR_RN_Chg_L3 , ( L3_ES_GR_FW_rn+L3_T1_GR_FW_rn)/( L3_ES_TO_FW_rn+L3_T1_TO_FW_rn) AS FW_GR_RN_Mix_L3 , ( L3_ES_SC_FW_rn+L3_T1_SC_FW_rn)/( L3_ES_TO_FW_rn+L3_T1_TO_FW_rn) AS FW_Specialcorp_Mix_L3 , ( L3_ES_TO_FW_rn+L3_T1_TO_FW_rn)/( c.hcap*L3_days) AS Occ_L3 , ( MN_ES_TO_FW_rn+MN_T1_TO_FW_rn)/( c.hcap*MN_days) AS Occ_MN , ( ( MN_ES_TO_FW_rv+MN_T1_TO_FW_rv)/( c.hcap*MN_days)) AS RevPAR_MN , L3_ES_SC_FW_rn/( L3_ES_TO_FW_rn+L3_T1_TO_FW_rn) AS SpecCorp_Es_Mix_L3 , ( MN_T1_NQ_FW_rv/MN_T1_NQ_FW_rn)/( MN_T1_NQ_FW_rv_ly/MN_T1_NQ_FW_rn_ly) - 1 AS T1_LM_NQ_ADR_Chg , L3_T1_NQ_FW_rn/L3_T1_TO_FW_rn AS T1_NQ_Mix_L3 , L3_T1_NQ_FW_rn/L3_T1_TO_FW_rn - L3_T1_NQ_FW_rn_ly/L3_T1_TO_FW_rn_ly AS T1_NQ_Mix_L3_Chg , L3_T1_NQ_WD_rn/L3_T1_TO_WD_rn AS T1_WD_NQ_Mix_L3 , L3_T1_NQ_WD_rn/L3_T1_TO_WD_rn - L3_T1_NQ_WD_rn_ly/L3_T1_TO_WD_rn_ly AS T1_WD_NQ_Mix_L3_Chg , ( ( L3_T1_10_WD_rv+L3_T1_10_WE_rv)/( L3_T1_10_WD_rn+L3_T1_10_WE_rn)) / ( ( L3_T1_12_WD_rv+L3_T1_12_WE_rv)/( L3_T1_12_WD_rn+L3_T1_12_WE_rn)) - 1 AS T1_Prem_2BD_vs_Studio_L3 , ( L3_T1_NQ_WD_STD_rv+L3_T1_SC_WD_STD_rv+L3_T1_GV_WD_STD_rv+L3_T1_OT_WD_STD_rv)/( L3_T1_NQ_WD_STD_rn+L3_T1_SC_WD_STD_rn+L3_T1_GV_WD_STD_rn+L3_T1_OT_WD_STD_rn) / ( L3_T1_NQ_WD_STD_rv/L3_T1_NQ_WD_STD_rn) AS T1_TransRateEff_L3 , ( L3_T1_NQ_WD_STD_rv+L3_T1_SC_WD_STD_rv+L3_T1_GV_WD_STD_rv+L3_T1_OT_WD_STD_rv)/( L3_T1_NQ_WD_STD_rn+L3_T1_SC_WD_STD_rn+L3_T1_GV_WD_STD_rn+L3_T1_OT_WD_STD_rn) / ( L3_T1_NQ_WD_STD_rv/L3_T1_NQ_WD_STD_rn) - ( L3_T1_NQ_WD_STD_rv_ly+L3_T1_SC_WD_STD_rv_ly+L3_T1_GV_WD_STD_rv_ly+L3_T1_OT_WD_STD_rv_ly)/( L3_T1_NQ_WD_STD_rn_ly+L3_T1_SC_WD_STD_rn_ly+L3_T1_GV_WD_STD_rn_ly+L3_T1_OT_WD_STD_rn_ly) / ( L3_T1_NQ_WD_STD_rv_ly/L3_T1_NQ_WD_STD_rn_ly) AS T1_TransRateEff_Chg_L3 , L3_T1_NQ_WD_rn/L3_T1_TO_WD_rn AS T1_WD_NQ_Mix_L3 , L3_T1_GR_WE_rn/L3_T1_TO_WE_rn AS T1_WE_GR_Mix_L3 , L3_T1_NQ_WE_rn/L3_T1_TO_WE_rn AS T1_WE_NQ_Mix_L3 , ( L3_T1_NQ_WE_STD_rv+L3_T1_SC_WE_STD_rv+L3_T1_GV_WE_STD_rv+L3_T1_OT_WE_STD_rv)/( L3_T1_NQ_WE_STD_rn+L3_T1_SC_WE_STD_rn+L3_T1_GV_WE_STD_rn+L3_T1_OT_WE_STD_rn) / ( L3_T1_NQ_WE_STD_rv/L3_T1_NQ_WE_STD_rn) - ( L3_T1_NQ_WE_STD_rv_ly+L3_T1_SC_WE_STD_rv_ly+L3_T1_GV_WE_STD_rv_ly+L3_T1_OT_WE_STD_rv_ly)/( L3_T1_NQ_WE_STD_rn_ly+L3_T1_SC_WE_STD_rn_ly+L3_T1_GV_WE_STD_rn_ly+L3_T1_OT_WE_STD_rn_ly) / ( L3_T1_NQ_WE_STD_rv_ly/L3_T1_NQ_WE_STD_rn_ly) AS T1_WE_TRE_Chg_L3 , ( MN_T1_NQ_WE_STD_rv+MN_T1_SC_WE_STD_rv+MN_T1_GV_WE_STD_rv+MN_T1_OT_WE_STD_rv)/( MN_T1_NQ_WE_STD_rn+MN_T1_SC_WE_STD_rn+MN_T1_GV_WE_STD_rn+MN_T1_OT_WE_STD_rn) / ( MN_T1_NQ_WE_STD_rv/MN_T1_NQ_WE_STD_rn) AS T1_WE_TRE_MN , ( ( MN_T2_NQ_WD_rv+MN_T2_NQ_WD_rv)/( MN_T2_NQ_WD_rn+MN_T2_NQ_WD_rn)) / ( ( MN_T2_NQ_WD_rv_ly+MN_T2_NQ_WD_rv_ly)/( MN_T2_NQ_WD_rn_ly+MN_T2_NQ_WD_rn_ly)) - 1 AS T2_LM_NQ_ADR_Chg , ( ( MN_T3_NQ_WD_rv+MN_T3_NQ_WD_rv)/( MN_T3_NQ_WD_rn+MN_T3_NQ_WD_rn)) / ( ( MN_T3_NQ_WD_rv_ly+MN_T3_NQ_WD_rv_ly)/( MN_T3_NQ_WD_rn_ly+MN_T3_NQ_WD_rn_ly)) - 1 AS T3_LM_NQ_ADR_Chg , ( ( MN_T4_NQ_WD_rv+MN_T4_NQ_WD_rv)/( MN_T4_NQ_WD_rn+MN_T4_NQ_WD_rn)) / ( ( MN_T4_NQ_WD_rv_ly+MN_T4_NQ_WD_rv_ly)/( MN_T4_NQ_WD_rn_ly+MN_T4_NQ_WD_rn_ly)) - 1 AS T4_LM_NQ_ADR_Chg , ( L3_T1_GR_WD_rn+L3_T2_GR_WD_rn+L3_T3_GR_WD_rn+L3_T4_GR_WD_rn)/( L3_T1_GR_WD_rn_ly+L3_T2_GR_WD_rn_ly+L3_T3_GR_WD_rn_ly+L3_T4_GR_WD_rn_ly) - 1 AS WD_Gr_RN_Chg_L3 , ( L3_T1_TO_WD_rn+L3_ES_TO_WD_rn)/( c.hcap*L3_WD_days) AS WD_Occ_L3 , ( L3_T1_GR_WE_rn+L3_T2_GR_WE_rn+L3_T3_GR_WE_rn+L3_T4_GR_WE_rn)/( L3_T1_GR_WE_rn_ly+L3_T2_GR_WE_rn_ly+L3_T3_GR_WE_rn_ly+L3_T4_GR_WE_rn_ly) - 1 AS WE_Gr_RN_Chg_L3 , ( MN_T1_GR_WE_rn+MN_T2_GR_WE_rn+MN_T3_GR_WE_rn+MN_T4_GR_WE_rn)/( MN_T1_GR_WE_rn_ly+MN_T2_GR_WE_rn_ly+MN_T3_GR_WE_rn_ly+MN_T4_GR_WE_rn_ly) - 1 AS WE_GR_RN_Chg_MN , SUM( ( L3_T1_GR_WE_rn+L3_T2_GR_WE_rn+L3_T3_GR_WE_rn+L3_T4_GR_WE_rn),-( L3_T1_GR_WE_rn_ly+L3_T2_GR_WE_rn_ly+L3_T3_GR_WE_rn_ly+L3_T4_GR_WE_rn_ly)) AS WE_Gr_RN_Var_L3 , SUM( ( MN_T1_GR_WE_rn+MN_T2_GR_WE_rn+MN_T3_GR_WE_rn+MN_T4_GR_WE_rn),-( MN_T1_GR_WE_rn_ly+MN_T2_GR_WE_rn_ly+MN_T3_GR_WE_rn_ly+MN_T4_GR_WE_rn_ly)) AS WE_Gr_RN_Var_MN , ( MN_T1_GR_WE_rn/MN_T1_GR_WE_rn_ly) - 1 AS WE_T1_Gr_RN_Chg_MN , ( MN_T1_GR_WE_rn+-MN_T1_GR_WE_rn_ly) AS WE_T1_Gr_RN_Var_MN , ( L3_T1_GR_WE_rn/L3_T1_GR_WE_rn_ly) - 1 AS WE_T1_Gr_RN_Chg_L3 , ( L3_T1_GR_WE_rn+-L3_T1_GR_WE_rn_ly) AS WE_T1_Gr_RN_Var_L3 , ( L3_T1_TO_WE_rn+L3_ES_TO_WE_rn)/( c.hcap*L3_WE_days) AS WE_Occ_L3 , ( MN_T1_TO_WE_rn+MN_ES_TO_WE_rn)/( c.hcap*MN_WE_days) AS WE_Occ_MN , ( L3_ES_NQ_WD_STD_rn+L3_ES_SC_WD_STD_rn+L3_ES_OT_WD_STD_rn+L3_ES_GR_WD_STD_rn+L3_ES_CN_WD_STD_rn +L3_ES_NQ_WE_STD_rn+L3_ES_SC_WE_STD_rn+L3_ES_OT_WE_STD_rn+L3_ES_GR_WE_STD_rn+L3_ES_CN_WE_STD_rn) AS L3_STD_RN , ( L3_ES_TO_FW_rn+L3_T1_TO_FW_rn) AS L3_TOT_RN , 1 - calculated L3_STD_RN / calculated L3_TOT_RN AS PremiumRoomPool_Mix_L3 , d.MC29_RN_L12 , . AS Studio_TotDem_L3 , . AS TotDem_L3 , . AS ES_Add_Demand_Chg_MN , . AS ES_Add_Demand_Chg_L3 , ( MN_T2_GR_FW_rv/MN_T2_GR_FW_rn) AS T2_GR_ADR_MN , ( MN_T3_GR_FW_rv/MN_T3_GR_FW_rn) AS T3_GR_ADR_MN , ( MN_T4_GR_FW_rv/MN_T4_GR_FW_rn) AS T4_GR_ADR_MN , ( MN_T2_GR_FW_rv_ly/MN_T2_GR_FW_rn_ly) AS T2_GR_ADR_LY_MN , ( MN_T3_GR_FW_rv_ly/MN_T3_GR_FW_rn_ly) AS T3_GR_ADR_LY_MN , ( MN_T4_GR_FW_rv_ly/MN_T4_GR_FW_rn_ly) AS T4_GR_ADR_LY_MN , ( calculated T2_GR_ADR_MN / calculated T2_GR_ADR_LY_MN) - 1 AS T2_GR_ADR_Chg_MN , ( calculated T3_GR_ADR_MN / calculated T3_GR_ADR_LY_MN) - 1 AS T3_GR_ADR_Chg_MN , ( calculated T4_GR_ADR_MN / calculated T4_GR_ADR_LY_MN) - 1 AS T4_GR_ADR_Chg_MN , ( MN_T2_12_FW_rv/MN_T2_12_FW_rn) AS T2_12_ADR_MN , ( MN_T3_12_FW_rv/MN_T3_12_FW_rn) AS T3_12_ADR_MN , ( MN_T4_12_FW_rv/MN_T4_12_FW_rn) AS T4_12_ADR_MN , ( MN_T2_12_FW_rv_ly/MN_T2_12_FW_rn_ly) AS T2_12_ADR_LY_MN , ( MN_T3_12_FW_rv_ly/MN_T3_12_FW_rn_ly) AS T3_12_ADR_LY_MN , ( MN_T4_12_FW_rv_ly/MN_T4_12_FW_rn_ly) AS T4_12_ADR_LY_MN , ( calculated T2_12_ADR_MN / calculated T2_12_ADR_LY_MN) - 1 AS T2_12_ADR_Chg_MN , ( calculated T3_12_ADR_MN / calculated T3_12_ADR_LY_MN) - 1 AS T3_12_ADR_Chg_MN , ( calculated T4_12_ADR_MN / calculated T4_12_ADR_LY_MN) - 1 AS T4_12_ADR_Chg_MN , f.EsOcc_YTD, f.EsOcc_chg_YTD , f.EsADR_YTD, f.EsADR_chg_YTD , f.EsRevPAR_YTD, f.EsRevPAR_chg_YTD , L3_T1_GV_WD_rn/L3_T1_TO_WD_rn AS T1_WD_GV_MIX_L3 , L3_ES_GV_FW_rn/L3_ES_TO_FW_rn AS ES_FW_GV_MIX_L3 , MN_T1_12_WD_rv/MN_T1_12_WD_rn AS T1_WD_MC12_ADR_MN , ( MN_T2_12_FW_rv+MN_T3_12_FW_rv+MN_T4_12_FW_rv)/( MN_T2_12_FW_rn+MN_T3_12_FW_rn+MN_T4_12_FW_rn) AS ES_FW_MC12_ADR_MN FROM tran2_mrdw AS a INNER JOIN daysinmonth AS b ON a.yrmo=b.yrmo INNER JOIN dss.prop AS c ON a.marsha=c.marsha LEFT JOIN MC29_RN_L12 AS d ON a.marsha=d.property_cd LEFT JOIN tran_adem AS e ON a.marsha=e.marsha LEFT JOIN esytddata AS f ON a.marsha=f.marsha ORDER BY a.marsha;",(no Add Dem) ESFactor MRDW Data Pull.sas
" CREATE TABLE PROPERTIES AS SELECT A.MARSHA, A.PEOPLESOFT_ID, CASE WHEN A.MARSHA IN ( 'BOBXR','BOBMD') THEN 'XPF' ELSE A.CURR END AS CURRENCY FROM AWPROD.PROPERTY_MASTER_HIST A WHERE A.ASOF_YRMO=&CURYRPD. AND A.OPENFLAG='Y' ORDER BY A.MARSHA ;",01_Hotel_Acct_MA_SA_ID.sas
" CREATE TABLE TOT_REVTY_BUD_HA_PRE AS  ( SELECT A.CHARTFIELD1, A.DEPTID, A.MI_SA_ID, A.OPERATING_UNIT, A.FISCAL_YEAR, A.ACCOUNTING_PERIOD, A.ACCOUNT, A.PRODUCT, A.BASE_CURRENCY, SUM( A.POSTED_TOTAL_AMT) AS SUM_A_POSTED_TOTAL_AMT_ FROM PS_MI_SA_LED_F00 A WHERE LEDGER = 'S_BUDAP' AND CHARTFIELD1 IN ( '16', '1L', '14', '1M', '60', '1B', '1F', 'BF', '09', '1H', '08', '1K', '29', '1B', '1B', '1Q', '1N', '2F', '29', '42', '1G', '1T', '84', '1D', '1R', '05', '1J', '1K', '1V', '19','20','21','26','27','31','33','34','39','43','47','56','57','58','61','64','65','68','73','93', '96','97') AND FISCAL_YEAR = &YearC AND MI_SA_ID IN ( 'PR_ROOM_SALES') AND ( BASE_CURRENCY = CURRENCY_CD OR CURRENCY_CD = ' ') AND A.FISCAL_YEAR = &year GROUP BY A.CHARTFIELD1, A.DEPTID, A.MI_SA_ID, A.OPERATING_UNIT, A.FISCAL_YEAR, A.ACCOUNTING_PERIOD, A.ACCOUNT, A.PRODUCT, A.BASE_CURRENCY ORDER BY A.CHARTFIELD1 ASC, A.ACCOUNTING_PERIOD DESC  ) ;",01_Hotel_Acct_MA_SA_ID.sas
" CREATE TABLE &DEST2..TOT_REVTY_BUD_HA AS SELECT A.CHARTFIELD1, A.DEPTID, A.MI_SA_ID, A.OPERATING_UNIT, A.FISCAL_YEAR, A.ACCOUNTING_PERIOD, A.ACCOUNT, A.PRODUCT, SUM( A.SUM_A_POSTED_TOTAL_AMT_) AS SUM_A_POSTED_TOTAL_AMT_ FROM TOT_REVTY_BUD_HA_PRE A INNER JOIN PROPERTIES B ON A.OPERATING_UNIT=B.PEOPLESOFT_ID AND A.BASE_CURRENCY=B.CURRENCY GROUP BY A.CHARTFIELD1, A.DEPTID, A.MI_SA_ID, A.OPERATING_UNIT, A.FISCAL_YEAR, A.ACCOUNTING_PERIOD, A.ACCOUNT, A.PRODUCT ;",01_Hotel_Acct_MA_SA_ID.sas
" CREATE TABLE TOT_REVTY_ACT_HA_PRE AS  ( SELECT A.CHARTFIELD1, A.DEPTID, A.MI_SA_ID, A.OPERATING_UNIT, A.FISCAL_YEAR, A.ACCOUNTING_PERIOD, A.ACCOUNT, A.PRODUCT, A.BASE_CURRENCY, SUM( A.POSTED_TOTAL_AMT) AS SUM_A_POSTED_TOTAL_AMT_ FROM PS_MI_SA_LED_F00 A WHERE LEDGER = 'S_ACTAP' AND CHARTFIELD1 IN ( '16', '1L', '14', '1M', '60', '1B', '1F', 'BF', '09', '1H', '08', '1K', '29', '1B', '1B', '1Q', '1N', '2F', '29', '42', '1G', '1T', '84', '1D', '1R', '05', '1J', '1K', '1V', '19','20','21','26','27','31','33','34','39','43','47','56','57','58','61','64','65','68','73','93', '96','97') AND FISCAL_YEAR = &YearC AND MI_SA_ID IN ( 'PR_ROOM_SALES') AND ( BASE_CURRENCY = CURRENCY_CD OR CURRENCY_CD = ' ') AND A.FISCAL_YEAR = &year GROUP BY A.CHARTFIELD1, A.DEPTID, A.MI_SA_ID, A.OPERATING_UNIT, A.FISCAL_YEAR, A.ACCOUNTING_PERIOD, A.ACCOUNT, A.PRODUCT, A.BASE_CURRENCY ORDER BY A.CHARTFIELD1 ASC, A.ACCOUNTING_PERIOD DESC  ) ;",01_Hotel_Acct_MA_SA_ID.sas
" CREATE TABLE &DEST2..TOT_REVTY_ACT_HA AS SELECT A.CHARTFIELD1, A.DEPTID, A.MI_SA_ID, A.OPERATING_UNIT, A.FISCAL_YEAR, A.ACCOUNTING_PERIOD, A.ACCOUNT, A.PRODUCT, SUM( A.SUM_A_POSTED_TOTAL_AMT_) AS SUM_A_POSTED_TOTAL_AMT_ FROM TOT_REVTY_ACT_HA_PRE A INNER JOIN PROPERTIES B ON A.OPERATING_UNIT=B.PEOPLESOFT_ID AND A.BASE_CURRENCY=B.CURRENCY GROUP BY A.CHARTFIELD1, A.DEPTID, A.MI_SA_ID, A.OPERATING_UNIT, A.FISCAL_YEAR, A.ACCOUNTING_PERIOD, A.ACCOUNT, A.PRODUCT ;",01_Hotel_Acct_MA_SA_ID.sas
" CREATE TABLE Flat_Dept_Tree AS  ( SELECT T1.TREE_NAME, T1.TREE_NODE PARENT_NODE, T2.TREE_NODE CHILD_NODE, D.DEPTID DETAIL_VALUE, D.DESCR DETAIL_DESCR FROM PS_DEPARTMENT_TBL D , PSTREENODE T1 , PSTREENODE T2 , PSTREELEAF L WHERE T1.TREE_NAME = 'FULLSRV_DEPARTMENT' AND T1.SETID = 'MIDIV' AND T1.EFFDT = TO_DATE( '01-OCT-2013', 'DD-MON-YYYY') AND T2.SETID = T1.SETID AND T2.TREE_NAME = T1.TREE_NAME AND T2.EFFDT = T1.EFFDT AND T2.TREE_NODE_NUM BETWEEN T1.TREE_NODE_NUM AND T1.TREE_NODE_NUM_END AND L.SETID = T2.SETID AND L.TREE_NAME = T2.TREE_NAME AND L.EFFDT = T2.EFFDT AND L.TREE_NODE_NUM = T2.TREE_NODE_NUM AND D.SETID = L.SETID AND D.DEPTID BETWEEN L.RANGE_FROM AND L.RANGE_TO AND D.EFFDT = ( SELECT MAX( EFFDT) FROM PS_DEPARTMENT_TBL WHERE SETID = D.SETID AND DEPTID = D.DEPTID AND EFFDT <= SYSDATE) ORDER BY T1.TREE_NODE_NUM, T2.TREE_NODE_NUM  ) ;",03_EPM_Catering_HotelAcct with AV.sas
" CREATE TABLE Flat_Acct_Tree AS  ( SELECT T1.TREE_NAME, T1.TREE_NODE PARENT_NODE, T2.TREE_NODE CHILD_NODE, D.ACCOUNT DETAIL_VALUE, D.DESCR DETAIL_DESCR FROM PS_GL_ACCOUNT_TBL D , PSTREENODE T1 , PSTREENODE T2 , PSTREELEAF L WHERE T1.TREE_NAME = 'FULLSRV_ACCOUNT' AND T1.SETID = 'MIDIV' AND T1.EFFDT = TO_DATE( '01-JUL-2013', 'DD-MON-YYYY') AND T2.SETID = T1.SETID AND T2.TREE_NAME = T1.TREE_NAME AND T2.EFFDT = T1.EFFDT AND T2.TREE_NODE_NUM BETWEEN T1.TREE_NODE_NUM AND T1.TREE_NODE_NUM_END AND L.SETID = T2.SETID AND L.TREE_NAME = T2.TREE_NAME AND L.EFFDT = T2.EFFDT AND L.TREE_NODE_NUM = T2.TREE_NODE_NUM AND D.SETID = L.SETID AND D.ACCOUNT BETWEEN L.RANGE_FROM AND L.RANGE_TO AND D.EFFDT = ( SELECT MAX( EFFDT) FROM PS_GL_ACCOUNT_TBL WHERE SETID = D.SETID AND ACCOUNT = D.ACCOUNT AND EFFDT <= SYSDATE) ORDER BY T1.TREE_NODE_NUM, T2.TREE_NODE_NUM  ) ;",03_EPM_Catering_HotelAcct with AV.sas
"CREATE TABLE Inc_Stat_Accts AS ( SELECT  *, DETAIL_VALUE AS ACCOUNT, DETAIL_DESCR AS ACCT_DESCR, CHILD_NODE AS SUB_CAT, PARENT_NODE AS CATEGORY FROM Flat_Acct_Tree );",03_EPM_Catering_HotelAcct with AV.sas
"ALTER TABLE Inc_Stat_Accts DROP COLUMN TREE_NAME ,  CATEGORY ;",03_EPM_Catering_HotelAcct with AV.sas
SELECT DISTINCT * FROM Inc_Stat_Accts ORDER BY account;,03_EPM_Catering_HotelAcct with AV.sas
"CREATE TABLE Depts AS ( SELECT  *, DETAIL_VALUE AS DEPTID, DETAIL_DESCR AS DEPT_DESCR, CHILD_NODE AS SUB_CAT, PARENT_NODE AS CATEGORY FROM Flat_Dept_Tree  WHERE SUBSTRING( DEPTID,1,3) IN ( '023','020' ));",03_EPM_Catering_HotelAcct with AV.sas
"ALTER TABLE Depts DROP COLUMN TREE_NAME ,  CATEGORY ;",03_EPM_Catering_HotelAcct with AV.sas
SELECT DISTINCT * FROM Depts ORDER BY DEPTID;,03_EPM_Catering_HotelAcct with AV.sas
" CREATE TABLE tempfb AS ( SELECT  *, _1_Jan AS M01, _2_Feb AS M02, _3_Mar AS M03, _4_Apr AS M04, _5_May AS M05, _6_Jun AS M06, _7_Jul AS M07, _8_Aug AS M08, _9_Sep AS M09, _0_Oct AS M10, _1_Nov AS M11, _2_Dec AS M12 FROM &DEST..EPM_act_F00_mgd_&curyr._FB UNION ALL SELECT  *, _1_Jan AS M01, _2_Feb AS M02, _3_Mar AS M03, _4_Apr AS M04, _5_May AS M05, _6_Jun AS M06, _7_Jul AS M07, _8_Aug AS M08, _9_Sep AS M09, _0_Oct AS M10, _1_Nov AS M11, _2_Dec AS M12 FROM &DEST..Epm_budrv_f00_mgd_fb WHERE SUBSTRING( account,1,1)='3');",03_EPM_Catering_HotelAcct with AV.sas
SELECT * FROM tempfb ORDER BY DEPTID;,03_EPM_Catering_HotelAcct with AV.sas
 CREATE TABLE tempfb_FS AS ( SELECT  *  FROM tempfb A INNER JOIN Depts B ON  A.DEPTID =  B.DEPTID);,03_EPM_Catering_HotelAcct with AV.sas
SELECT * FROM tempfb_FS ORDER BY account;,03_EPM_Catering_HotelAcct with AV.sas
" CREATE TABLE TEMPFB_FS2 AS SELECT A.*, B.COUNTRY FROM TEMPFB_FS A INNER JOIN AWPROD.PROPERTY_MASTER_HIST B ON A.OPERATING_UNIT=B.PEOPLESOFT_ID AND B.ASOF_YRMO=&CURYRPD. AND B.OPENFLAG='Y' ORDER BY A.ACCOUNT ;",03_EPM_Catering_HotelAcct with AV.sas
"CREATE TABLE tempfb_FS AS ( SELECT  * , CASE WHEN  DEPTID IN ( '0200','0201','0202','0203')  THEN 'Audio Visual' WHEN  DEPTID NOT IN( '0231','0232','0200','0201','0202','0203')  THEN 'Banquet Other' END AS DEPT_DESCR FROM tempfb_FS2 A LEFT JOIN Inc_Stat_Accts B ON  A.account =  B.account WHERE SUBSTRING( account,1,1)='3' AND ledger<>'FORECAST' AND year=&curyr AND CHARTFIELD1 in( '19','31') AND COUNTRY='Canada' AND CURRENCY_CD='CAD' OR COUNTRY not IN ( 'Canada') AND CURRENCY_CD='USD');",03_EPM_Catering_HotelAcct with AV.sas
ALTER TABLE tempfb_FS DROP COLUMN COUNTRY ;,03_EPM_Catering_HotelAcct with AV.sas
"SELECT * FROM tempfb_FS ORDER BY OPERATING_UNIT ,CURRENCY_CD ,LEDGER;",03_EPM_Catering_HotelAcct with AV.sas
"CREATE TABLE tempfb_sum1 AS (SELECT OPERATING_UNIT, CURRENCY_CD, LEDGER, SUM(M01) AS M01, SUM(M02) AS M02, SUM(M03) AS M03, SUM(M04) AS M04, SUM(M05) AS M05, SUM(M06) AS M06, SUM(M07) AS M07, SUM(M08) AS M08, SUM(M09) AS M09, SUM(M10) AS M10, SUM(M11) AS M11, SUM(M12) AS M12 FROM tempfb_FS GROUP BY OPERATING_UNIT, CURRENCY_CD, LEDGER );",03_EPM_Catering_HotelAcct with AV.sas
" CREATE TABLE tempfb_sum AS ( SELECT  *  , ""Banquets_w_AV"" AS DEPT_DESCR  FROM tempfb_sum1 );",03_EPM_Catering_HotelAcct with AV.sas
"SELECT * FROM tempfb_sum ORDER BY OPERATING_UNIT ,DEPT_DESCR;",03_EPM_Catering_HotelAcct with AV.sas
" CREATE TABLE tempfb_sum_trans AS ( SELECT  *  , ACTUALS*-1 AS ACTUALS , BUDGET*-1 AS BUDGET , SUBSTRING( _NAME_,2,2 ) AS name , CAST( name,best8.  ) AS monno , CASE WHEN  ACTUALS in( ' ' )  THEN 0 END AS ACTUALS, CASE WHEN  BUDGET in( ' ' )  THEN 0 END AS BUDGET, CASE WHEN  _NAME_='M01'  THEN 'JAN' WHEN   _NAME_='M02'  THEN 'FEB' WHEN   _NAME_='M03'  THEN 'MAR' WHEN   _NAME_='M04'  THEN 'APR' WHEN   _NAME_='M05'  THEN 'MAY' WHEN   _NAME_='M06'  THEN 'JUN' WHEN   _NAME_='M07'  THEN 'JUL' WHEN   _NAME_='M08'  THEN 'AUG' WHEN   _NAME_='M09'  THEN 'SEP' WHEN   _NAME_='M10'  THEN 'OCT' WHEN   _NAME_='M11'  THEN 'NOV' WHEN   _NAME_='M12'  THEN 'DEC' END AS Mon FROM tempfb_sum_trans  WHERE ACTUALS<>0 AND BUDGET<>0);",03_EPM_Catering_HotelAcct with AV.sas
"SELECT * FROM tempfb_sum_trans ORDER BY OPERATING_UNIT ,Mon;",03_EPM_Catering_HotelAcct with AV.sas
"CREATE TABLE tempfb_sum_final AS (SELECT OPERATING_UNIT, Mon, SUM(ACTUALS) AS ACTUALS, SUM(BUDGET) AS BUDGET FROM tempfb_sum_trans GROUP BY OPERATING_UNIT, Mon );",03_EPM_Catering_HotelAcct with AV.sas
" CREATE TABLE TEMPFB_2 AS SELECT A.*, B.COUNTRY FROM TEMPFB A INNER JOIN AWPROD.PROPERTY_MASTER_HIST B ON A.OPERATING_UNIT=B.PEOPLESOFT_ID AND B.ASOF_YRMO=&CURYRPD. AND B.OPENFLAG='Y' WHERE CHARTFIELD1 IN ( '19','31') ORDER BY A.ACCOUNT ;",03_EPM_Catering_HotelAcct with AV.sas
" CREATE TABLE SHS_CY_CATERING AS ( SELECT  *  FROM TEMPFB_2  WHERE CHARTFIELD1 IN ( '19','31') AND ACCOUNT IN ( '314017','314041','314042','314043','324049','354001','355020','360001','390001') AND YEAR = &CURYR AND COUNTRY='Canada' AND CURRENCY_CD='CAD' OR COUNTRY not IN ( 'Canada') AND CURRENCY_CD='USD');",03_EPM_Catering_HotelAcct with AV.sas
"SELECT * FROM SHS_CY_CATERING ORDER BY OPERATING_UNIT ,CURRENCY_CD ,LEDGER;",03_EPM_Catering_HotelAcct with AV.sas
"CREATE TABLE SLCT_SRVC_CATERING1 AS (SELECT OPERATING_UNIT, CURRENCY_CD, LEDGER, SUM(M01) AS M01, SUM(M02) AS M02, SUM(M03) AS M03, SUM(M04) AS M04, SUM(M05) AS M05, SUM(M06) AS M06, SUM(M07) AS M07, SUM(M08) AS M08, SUM(M09) AS M09, SUM(M10) AS M10, SUM(M11) AS M11, SUM(M12) AS M12 FROM SHS_CY_CATERING GROUP BY OPERATING_UNIT, CURRENCY_CD, LEDGER );",03_EPM_Catering_HotelAcct with AV.sas
" CREATE TABLE SLCT_SRVC_CATERING AS ( SELECT  *  , ""Banquets_w_AV"" AS DEPT_DESCR  FROM SLCT_SRVC_CATERING1 );",03_EPM_Catering_HotelAcct with AV.sas
SELECT * FROM SLCT_SRVC_CATERING ORDER BY OPERATING_UNIT;,03_EPM_Catering_HotelAcct with AV.sas
" CREATE TABLE SLCT_SRVC_CATERING_TRANS AS ( SELECT  *  , ACTUALS*-1 AS ACTUALS , BUDGET*-1 AS BUDGET , SUBSTRING( _NAME_,2,2 ) AS name , CAST( name,best8.  ) AS monno , CASE WHEN  ACTUALS in( ' ' )  THEN 0 END AS ACTUALS, CASE WHEN  BUDGET in( ' ' )  THEN 0 END AS BUDGET, CASE WHEN  _NAME_='M01'  THEN 'JAN' WHEN   _NAME_='M02'  THEN 'FEB' WHEN   _NAME_='M03'  THEN 'MAR' WHEN   _NAME_='M04'  THEN 'APR' WHEN   _NAME_='M05'  THEN 'MAY' WHEN   _NAME_='M06'  THEN 'JUN' WHEN   _NAME_='M07'  THEN 'JUL' WHEN   _NAME_='M08'  THEN 'AUG' WHEN   _NAME_='M09'  THEN 'SEP' WHEN   _NAME_='M10'  THEN 'OCT' WHEN   _NAME_='M11'  THEN 'NOV' WHEN   _NAME_='M12'  THEN 'DEC' END AS Mon FROM SLCT_SRVC_CATERING_TRANS  WHERE ACTUALS<>0 AND BUDGET<>0);",03_EPM_Catering_HotelAcct with AV.sas
"SELECT * FROM SLCT_SRVC_CATERING_TRANS ORDER BY OPERATING_UNIT ,Mon;",03_EPM_Catering_HotelAcct with AV.sas
"CREATE TABLE SLCT_SRVC_CATERING_FINAL_AV AS (SELECT OPERATING_UNIT, Mon, SUM(ACTUALS) AS ACTUALS, SUM(BUDGET) AS BUDGET FROM SLCT_SRVC_CATERING_TRANS GROUP BY OPERATING_UNIT, Mon );",03_EPM_Catering_HotelAcct with AV.sas
" CREATE TABLE &DEST..NALOFB_finalw_AV AS ( SELECT OPERATING_UNIT, Mon, ACTUALS AS BANQUET_REV_W_AV, BUDGET AS BANQUET_BUD_W_AV FROM tempfb_sum_final UNION ALL SELECT OPERATING_UNIT, Mon, ACTUALS AS BANQUET_REV_W_AV, BUDGET AS BANQUET_BUD_W_AV FROM SLCT_SRVC_CATERING_FINAL_AV);",03_EPM_Catering_HotelAcct with AV.sas
"SELECT * FROM &DEST..NALOFB_finalw_AV ORDER BY OPERATING_UNIT ,Mon;",03_EPM_Catering_HotelAcct with AV.sas
" CREATE TABLE Flat_Dept_Tree AS  ( SELECT T1.TREE_NAME, T1.TREE_NODE PARENT_NODE, T2.TREE_NODE CHILD_NODE, D.DEPTID DETAIL_VALUE, D.DESCR DETAIL_DESCR FROM PS_DEPARTMENT_TBL D , PSTREENODE T1 , PSTREENODE T2 , PSTREELEAF L WHERE T1.TREE_NAME = 'FULLSRV_DEPARTMENT' AND T1.SETID = 'MIDIV' AND T1.EFFDT = TO_DATE( '01-OCT-2013', 'DD-MON-YYYY') AND T2.SETID = T1.SETID AND T2.TREE_NAME = T1.TREE_NAME AND T2.EFFDT = T1.EFFDT AND T2.TREE_NODE_NUM BETWEEN T1.TREE_NODE_NUM AND T1.TREE_NODE_NUM_END AND L.SETID = T2.SETID AND L.TREE_NAME = T2.TREE_NAME AND L.EFFDT = T2.EFFDT AND L.TREE_NODE_NUM = T2.TREE_NODE_NUM AND D.SETID = L.SETID AND D.DEPTID BETWEEN L.RANGE_FROM AND L.RANGE_TO AND D.EFFDT = ( SELECT MAX( EFFDT) FROM PS_DEPARTMENT_TBL WHERE SETID = D.SETID AND DEPTID = D.DEPTID AND EFFDT <= SYSDATE) ORDER BY T1.TREE_NODE_NUM, T2.TREE_NODE_NUM  ) ;",03_EPM_Catering_HotelAcct.sas
" CREATE TABLE Flat_Acct_Tree AS  ( SELECT T1.TREE_NAME, T1.TREE_NODE PARENT_NODE, T2.TREE_NODE CHILD_NODE, D.ACCOUNT DETAIL_VALUE, D.DESCR DETAIL_DESCR FROM PS_GL_ACCOUNT_TBL D , PSTREENODE T1 , PSTREENODE T2 , PSTREELEAF L WHERE T1.TREE_NAME = 'FULLSRV_ACCOUNT' AND T1.SETID = 'MIDIV' AND T1.EFFDT = TO_DATE( '01-JUL-2013', 'DD-MON-YYYY') AND T2.SETID = T1.SETID AND T2.TREE_NAME = T1.TREE_NAME AND T2.EFFDT = T1.EFFDT AND T2.TREE_NODE_NUM BETWEEN T1.TREE_NODE_NUM AND T1.TREE_NODE_NUM_END AND L.SETID = T2.SETID AND L.TREE_NAME = T2.TREE_NAME AND L.EFFDT = T2.EFFDT AND L.TREE_NODE_NUM = T2.TREE_NODE_NUM AND D.SETID = L.SETID AND D.ACCOUNT BETWEEN L.RANGE_FROM AND L.RANGE_TO AND D.EFFDT = ( SELECT MAX( EFFDT) FROM PS_GL_ACCOUNT_TBL WHERE SETID = D.SETID AND ACCOUNT = D.ACCOUNT AND EFFDT <= SYSDATE) ORDER BY T1.TREE_NODE_NUM, T2.TREE_NODE_NUM  ) ;",03_EPM_Catering_HotelAcct.sas
"CREATE TABLE Inc_Stat_Accts AS ( SELECT  *, DETAIL_VALUE AS ACCOUNT, DETAIL_DESCR AS ACCT_DESCR, CHILD_NODE AS SUB_CAT, PARENT_NODE AS CATEGORY FROM Flat_Acct_Tree );",03_EPM_Catering_HotelAcct.sas
"ALTER TABLE Inc_Stat_Accts DROP COLUMN TREE_NAME ,  CATEGORY ;",03_EPM_Catering_HotelAcct.sas
SELECT DISTINCT * FROM Inc_Stat_Accts ORDER BY account;,03_EPM_Catering_HotelAcct.sas
"CREATE TABLE Depts AS ( SELECT  *, DETAIL_VALUE AS DEPTID, DETAIL_DESCR AS DEPT_DESCR, CHILD_NODE AS SUB_CAT, PARENT_NODE AS CATEGORY FROM Flat_Dept_Tree  WHERE SUBSTRING( DEPTID,1,3)='023');",03_EPM_Catering_HotelAcct.sas
"ALTER TABLE Depts DROP COLUMN TREE_NAME ,  CATEGORY ;",03_EPM_Catering_HotelAcct.sas
SELECT DISTINCT * FROM Depts ORDER BY DEPTID;,03_EPM_Catering_HotelAcct.sas
" CREATE TABLE tempfb AS ( SELECT  *, _1_Jan AS M01, _2_Feb AS M02, _3_Mar AS M03, _4_Apr AS M04, _5_May AS M05, _6_Jun AS M06, _7_Jul AS M07, _8_Aug AS M08, _9_Sep AS M09, _0_Oct AS M10, _1_Nov AS M11, _2_Dec AS M12 FROM &DEST..EPM_act_F00_mgd_&curyr._FB UNION ALL SELECT  *, _1_Jan AS M01, _2_Feb AS M02, _3_Mar AS M03, _4_Apr AS M04, _5_May AS M05, _6_Jun AS M06, _7_Jul AS M07, _8_Aug AS M08, _9_Sep AS M09, _0_Oct AS M10, _1_Nov AS M11, _2_Dec AS M12 FROM &DEST..Epm_budrv_f00_mgd_fb WHERE SUBSTRING( account,1,1)='3');",03_EPM_Catering_HotelAcct.sas
SELECT * FROM tempfb ORDER BY DEPTID;,03_EPM_Catering_HotelAcct.sas
 CREATE TABLE tempfb_FS AS ( SELECT  *  FROM tempfb A INNER JOIN Depts B ON  A.DEPTID =  B.DEPTID);,03_EPM_Catering_HotelAcct.sas
SELECT * FROM tempfb_FS ORDER BY account;,03_EPM_Catering_HotelAcct.sas
" CREATE TABLE TEMPFB2_FS AS SELECT A.*, B.COUNTRY FROM tempfb_FS A INNER JOIN AWPROD.PROPERTY_MASTER_HIST B ON A.OPERATING_UNIT=B.PEOPLESOFT_ID AND B.ASOF_YRMO=&CURYRPD. AND B.OPENFLAG='Y' ORDER BY A.ACCOUNT ;",03_EPM_Catering_HotelAcct.sas
"CREATE TABLE tempfb_FS_Accts AS ( SELECT  * , CASE WHEN  DEPTID NOT IN( '0231','0232','0200','0201','0202','0203')  THEN 'Banquet Other' END AS DEPT_DESCR FROM tempfb2_FS A LEFT JOIN Inc_Stat_Accts B ON  A.account =  B.account WHERE SUBSTRING( account,1,1)='3' AND ledger<>'FORECAST' AND year=&curyr AND CHARTFIELD1 in( '19','31') AND COUNTRY='Canada' AND CURRENCY_CD='CAD' OR COUNTRY not IN ( 'Canada') AND CURRENCY_CD='USD');",03_EPM_Catering_HotelAcct.sas
ALTER TABLE tempfb_FS_Accts DROP COLUMN COUNTRY ;,03_EPM_Catering_HotelAcct.sas
"SELECT * FROM tempfb_FS_Accts ORDER BY OPERATING_UNIT ,CURRENCY_CD ,LEDGER;",03_EPM_Catering_HotelAcct.sas
"CREATE TABLE tempfb_sum AS (SELECT OPERATING_UNIT, CURRENCY_CD, LEDGER, SUM(M01) AS M01, SUM(M02) AS M02, SUM(M03) AS M03, SUM(M04) AS M04, SUM(M05) AS M05, SUM(M06) AS M06, SUM(M07) AS M07, SUM(M08) AS M08, SUM(M09) AS M09, SUM(M10) AS M10, SUM(M11) AS M11, SUM(M12) AS M12 FROM tempfb_FS_Accts GROUP BY OPERATING_UNIT, CURRENCY_CD, LEDGER );",03_EPM_Catering_HotelAcct.sas
"SELECT * FROM tempfb_sum ORDER BY OPERATING_UNIT ,DEPT_DESCR;",03_EPM_Catering_HotelAcct.sas
" CREATE TABLE tempfb_sum_trans AS ( SELECT  *  , ACTUALS*-1 AS ACTUALS , BUDGET*-1 AS BUDGET , SUBSTRING( _NAME_,2,2 ) AS name , CAST( name,best8.  ) AS monno , CASE WHEN  ACTUALS in( ' ' )  THEN 0 END AS ACTUALS, CASE WHEN  BUDGET in( ' ' )  THEN 0 END AS BUDGET, CASE WHEN  _NAME_='M01'  THEN 'JAN' WHEN   _NAME_='M02'  THEN 'FEB' WHEN   _NAME_='M03'  THEN 'MAR' WHEN   _NAME_='M04'  THEN 'APR' WHEN   _NAME_='M05'  THEN 'MAY' WHEN   _NAME_='M06'  THEN 'JUN' WHEN   _NAME_='M07'  THEN 'JUL' WHEN   _NAME_='M08'  THEN 'AUG' WHEN   _NAME_='M09'  THEN 'SEP' WHEN   _NAME_='M10'  THEN 'OCT' WHEN   _NAME_='M11'  THEN 'NOV' WHEN   _NAME_='M12'  THEN 'DEC' END AS Mon FROM tempfb_sum_trans  WHERE ACTUALS<>0 AND BUDGET<>0);",03_EPM_Catering_HotelAcct.sas
"SELECT * FROM tempfb_sum_trans ORDER BY OPERATING_UNIT ,Mon;",03_EPM_Catering_HotelAcct.sas
"CREATE TABLE tempfb_sum_final AS (SELECT OPERATING_UNIT, Mon, SUM(ACTUALS) AS ACTUALS, SUM(BUDGET) AS BUDGET FROM tempfb_sum_trans GROUP BY OPERATING_UNIT, Mon );",03_EPM_Catering_HotelAcct.sas
" CREATE TABLE TEMPFB2 AS SELECT A.*, B.COUNTRY FROM TEMPFB A INNER JOIN AWPROD.PROPERTY_MASTER_HIST B ON A.OPERATING_UNIT=B.PEOPLESOFT_ID AND B.ASOF_YRMO=&CURYRPD. AND B.OPENFLAG='Y' WHERE CHARTFIELD1 IN ( '19','31') ORDER BY A.ACCOUNT ;",03_EPM_Catering_HotelAcct.sas
" CREATE TABLE SHS_CY_CATERING AS ( SELECT  *  FROM TEMPFB2  WHERE CHARTFIELD1 IN ( '19','31') AND ACCOUNT IN ( '314017','314043','314042','314041','324049','360001','354001','390001') AND YEAR = &CURYR AND COUNTRY='Canada' AND CURRENCY_CD='CAD' OR COUNTRY not IN ( 'Canada') AND CURRENCY_CD='USD');",03_EPM_Catering_HotelAcct.sas
"SELECT * FROM SHS_CY_CATERING ORDER BY OPERATING_UNIT ,CURRENCY_CD ,LEDGER;",03_EPM_Catering_HotelAcct.sas
"CREATE TABLE SLCT_SRVC_CATERING AS (SELECT OPERATING_UNIT, CURRENCY_CD, LEDGER, SUM(M01) AS M01, SUM(M02) AS M02, SUM(M03) AS M03, SUM(M04) AS M04, SUM(M05) AS M05, SUM(M06) AS M06, SUM(M07) AS M07, SUM(M08) AS M08, SUM(M09) AS M09, SUM(M10) AS M10, SUM(M11) AS M11, SUM(M12) AS M12 FROM SHS_CY_CATERING GROUP BY OPERATING_UNIT, CURRENCY_CD, LEDGER );",03_EPM_Catering_HotelAcct.sas
SELECT * FROM SLCT_SRVC_CATERING ORDER BY OPERATING_UNIT;,03_EPM_Catering_HotelAcct.sas
" CREATE TABLE SLCT_SRVC_CATERING_TRANS AS ( SELECT  *  , ACTUALS*-1 AS ACTUALS , BUDGET*-1 AS BUDGET , SUBSTRING( _NAME_,2,2 ) AS name , CAST( name,best8.  ) AS monno , CASE WHEN  ACTUALS in( ' ' )  THEN 0 END AS ACTUALS, CASE WHEN  BUDGET in( ' ' )  THEN 0 END AS BUDGET, CASE WHEN  _NAME_='M01'  THEN 'JAN' WHEN   _NAME_='M02'  THEN 'FEB' WHEN   _NAME_='M03'  THEN 'MAR' WHEN   _NAME_='M04'  THEN 'APR' WHEN   _NAME_='M05'  THEN 'MAY' WHEN   _NAME_='M06'  THEN 'JUN' WHEN   _NAME_='M07'  THEN 'JUL' WHEN   _NAME_='M08'  THEN 'AUG' WHEN   _NAME_='M09'  THEN 'SEP' WHEN   _NAME_='M10'  THEN 'OCT' WHEN   _NAME_='M11'  THEN 'NOV' WHEN   _NAME_='M12'  THEN 'DEC' END AS Mon FROM SLCT_SRVC_CATERING_TRANS  WHERE ACTUALS<>0 AND BUDGET<>0);",03_EPM_Catering_HotelAcct.sas
"SELECT * FROM SLCT_SRVC_CATERING_TRANS ORDER BY OPERATING_UNIT ,Mon;",03_EPM_Catering_HotelAcct.sas
"CREATE TABLE SLCT_SRVC_CATERING_FINAL AS (SELECT OPERATING_UNIT, Mon, SUM(ACTUALS) AS ACTUALS, SUM(BUDGET) AS BUDGET FROM SLCT_SRVC_CATERING_TRANS GROUP BY OPERATING_UNIT, Mon );",03_EPM_Catering_HotelAcct.sas
" CREATE TABLE &DEST..NALOFB_final AS ( SELECT OPERATING_UNIT, Mon, ACTUALS AS BANQUET_REV_ACT, BUDGET AS BANQUET_REV_BUD FROM tempfb_sum_final UNION ALL SELECT OPERATING_UNIT, Mon, ACTUALS AS BANQUET_REV_ACT, BUDGET AS BANQUET_REV_BUD FROM SLCT_SRVC_CATERING_FINAL);",03_EPM_Catering_HotelAcct.sas
"SELECT * FROM &DEST..NALOFB_final ORDER BY OPERATING_UNIT ,Mon;",03_EPM_Catering_HotelAcct.sas
" CREATE TABLE tempbud AS ( SELECT  *  , 'Budget' AS Ledger  FROM SFODATA.TOT_REVTY_BUD_HA );",04_Hotel_Acct_MA_SA_ID_Output.sas
" CREATE TABLE tempact AS ( SELECT  *  , 'Actual' AS Ledger  FROM SFODATA.TOT_REVTY_ACT_HA );",04_Hotel_Acct_MA_SA_ID_Output.sas
 CREATE TABLE temp AS ( SELECT  *  FROM tempbud UNION ALL SELECT  *  FROM tempact);,04_Hotel_Acct_MA_SA_ID_Output.sas
"SELECT * FROM temp ORDER BY OPERATING_UNIT ,ACCOUNTING_PERIOD ,Ledger ,MI_SA_ID;",04_Hotel_Acct_MA_SA_ID_Output.sas
"CREATE TABLE tempsum AS (SELECT OPERATING_UNIT, ACCOUNTING_PERIOD, Ledger, MI_SA_ID, SUM(SUM_A_POSTED_TOTAL_AMT_) AS SUM_A_POSTED_TOTAL_AMT_ FROM temp GROUP BY OPERATING_UNIT, ACCOUNTING_PERIOD, Ledger, MI_SA_ID );",04_Hotel_Acct_MA_SA_ID_Output.sas
"CREATE TABLE actoutput AS ( SELECT  *, PR_ROOM_SALES AS ROOM_REV, ( PR_CATERING_REVENUE+PR_GROUP_CATERING_REVENUE+PR_LOCAL_CATERING_REVENUE ) AS BANQUET_REV , CASE WHEN  ACCOUNTING_PERIOD=1  THEN 'JAN' WHEN   ACCOUNTING_PERIOD=2  THEN 'FEB' WHEN   ACCOUNTING_PERIOD=3  THEN 'MAR' WHEN   ACCOUNTING_PERIOD=4  THEN 'APR' WHEN   ACCOUNTING_PERIOD=5  THEN 'MAY' WHEN   ACCOUNTING_PERIOD=6  THEN 'JUN' WHEN   ACCOUNTING_PERIOD=7  THEN 'JUL' WHEN   ACCOUNTING_PERIOD=8  THEN 'AUG' WHEN   ACCOUNTING_PERIOD=9  THEN 'SEP' WHEN   ACCOUNTING_PERIOD=10  THEN 'OCT' WHEN   ACCOUNTING_PERIOD=11  THEN 'NOV' WHEN   ACCOUNTING_PERIOD=12  THEN 'DEC' END AS Mon FROM tempsum_transp  WHERE ledger='Actual');",04_Hotel_Acct_MA_SA_ID_Output.sas
"ALTER TABLE actoutput DROP COLUMN _LABEL_ ,  _NAME_ ,  PR_CATERING_REVENUE ,  PR_GROUP_CATERING_REVENUE ,  PR_LOCAL_CATERING_REVENUE ;",04_Hotel_Acct_MA_SA_ID_Output.sas
"CREATE TABLE budoutput AS ( SELECT  *, PR_ROOM_SALES AS ROOM_REV, ( PR_CATERING_REVENUE+PR_GROUP_CATERING_REVENUE+PR_LOCAL_CATERING_REVENUE ) AS BANQUET_REV , CASE WHEN  ACCOUNTING_PERIOD=1  THEN 'JAN' WHEN   ACCOUNTING_PERIOD=2  THEN 'FEB' WHEN   ACCOUNTING_PERIOD=3  THEN 'MAR' WHEN   ACCOUNTING_PERIOD=4  THEN 'APR' WHEN   ACCOUNTING_PERIOD=5  THEN 'MAY' WHEN   ACCOUNTING_PERIOD=6  THEN 'JUN' WHEN   ACCOUNTING_PERIOD=7  THEN 'JUL' WHEN   ACCOUNTING_PERIOD=8  THEN 'AUG' WHEN   ACCOUNTING_PERIOD=9  THEN 'SEP' WHEN   ACCOUNTING_PERIOD=10  THEN 'OCT' WHEN   ACCOUNTING_PERIOD=11  THEN 'NOV' WHEN   ACCOUNTING_PERIOD=12  THEN 'DEC' END AS Mon FROM tempsum_transp  WHERE ledger='Budget');",04_Hotel_Acct_MA_SA_ID_Output.sas
"ALTER TABLE budoutput DROP COLUMN _LABEL_ ,  _NAME_ ,  PR_CATERING_REVENUE ,  PR_GROUP_CATERING_REVENUE ,  PR_LOCAL_CATERING_REVENUE ;",04_Hotel_Acct_MA_SA_ID_Output.sas
"CREATE TABLE junk AS ( SELECT  *, PR_ROOM_SALES AS ROOM_REV, ( PR_CATERING_REVENUE+PR_GROUP_CATERING_REVENUE+PR_LOCAL_CATERING_REVENUE ) AS BANQUET_REV , CASE WHEN  ACCOUNTING_PERIOD=1  THEN 'JAN' WHEN   ACCOUNTING_PERIOD=2  THEN 'FEB' WHEN   ACCOUNTING_PERIOD=3  THEN 'MAR' WHEN   ACCOUNTING_PERIOD=4  THEN 'APR' WHEN   ACCOUNTING_PERIOD=5  THEN 'MAY' WHEN   ACCOUNTING_PERIOD=6  THEN 'JUN' WHEN   ACCOUNTING_PERIOD=7  THEN 'JUL' WHEN   ACCOUNTING_PERIOD=8  THEN 'AUG' WHEN   ACCOUNTING_PERIOD=9  THEN 'SEP' WHEN   ACCOUNTING_PERIOD=10  THEN 'OCT' WHEN   ACCOUNTING_PERIOD=11  THEN 'NOV' WHEN   ACCOUNTING_PERIOD=12  THEN 'DEC' END AS Mon FROM tempsum_transp  WHERE ledger<>'Actual' AND ledger<>'Budget');",04_Hotel_Acct_MA_SA_ID_Output.sas
"ALTER TABLE junk DROP COLUMN _LABEL_ ,  _NAME_ ,  PR_CATERING_REVENUE ,  PR_GROUP_CATERING_REVENUE ,  PR_LOCAL_CATERING_REVENUE ;",04_Hotel_Acct_MA_SA_ID_Output.sas
"CREATE TABLE actfinal AS ( SELECT  *, ROOM_REV AS ROOM_REV_ACT, ACCOUNTING_PERIOD AS Monnum, CASE WHEN  ROOM_REV_ACT in( ' ' )  THEN 0 END AS ROOM_REV_ACT FROM actoutCAST );",04_Hotel_Acct_MA_SA_ID_Output.sas
"ALTER TABLE actfinal DROP COLUMN BANQUET_REV ,  ledger ;",04_Hotel_Acct_MA_SA_ID_Output.sas
"CREATE TABLE budfinal AS ( SELECT  *, ROOM_REV AS ROOM_REV_BUD, ACCOUNTING_PERIOD AS Monnum, CASE WHEN  ROOM_REV_BUD in( ' ' )  THEN 0 END AS ROOM_REV_BUD FROM budoutCAST );",04_Hotel_Acct_MA_SA_ID_Output.sas
"ALTER TABLE budfinal DROP COLUMN BANQUET_REV ,  ledger ;",04_Hotel_Acct_MA_SA_ID_Output.sas
"SELECT * FROM actfinal ORDER BY OPERATING_UNIT ,Mon;",04_Hotel_Acct_MA_SA_ID_Output.sas
"SELECT * FROM budfinal ORDER BY OPERATING_UNIT ,Mon;",04_Hotel_Acct_MA_SA_ID_Output.sas
"CREATE TABLE final AS ( SELECT  *  , OPERATING_UNIT AS PEOPLESOFT_ID , ( ROOM_REV_ACT-ROOM_REV_BUD)/ROOM_REV_BUD AS Rm_pchg_Bud , ( ROOM_REV_ACT/ROOM_REV_BUD)*100 AS Rm_pctofbud , ( BANQUET_REV_ACT-BANQUET_REV_BUD)/BANQUET_REV_BUD AS Cat_pchg_Bud , ( BANQUET_REV_ACT/BANQUET_REV_BUD)*100 AS Cat_pctofbud , CASE WHEN  room_rev_act=' '  THEN 0 ELSE room_rev_act END AS room_rev_act, CASE WHEN  banquet_rev_act=' '  THEN 0 ELSE banquet_rev_act END AS banquet_rev_act, CASE WHEN  banquet_rev_w_av=' '  THEN 0 ELSE banquet_rev_w_av END AS banquet_rev_w_av, CASE WHEN  banquet_rev_bud=' '  THEN 0 ELSE banquet_rev_bud END AS banquet_rev_bud, CASE WHEN  banquet_bud_w_av=' '  THEN 0 ELSE banquet_bud_w_av END AS banquet_bud_w_av FROM actfinal A JOIN budfinal B ON  A.OPERATING_UNIT =  B.OPERATING_UNIT AND  A.Mon =  B.Mon&DEST..NALOFB_final C ON  B.OPERATING_UNIT =  C.OPERATING_UNIT AND  B.Mon =  C.Mon&DEST..NALOFB_finalw_AV D ON  C.OPERATING_UNIT =  D.OPERATING_UNIT AND  C.Mon =  D.Mon);",04_Hotel_Acct_MA_SA_ID_Output.sas
ALTER TABLE final DROP COLUMN OPERATING_UNIT ;,04_Hotel_Acct_MA_SA_ID_Output.sas
" CREATE TABLE plu AS ( SELECT MARSHA, PEOPLESOFT_ID, ACOMP FROM awprod.property_master_hist  WHERE asof_yrmo=&curyrpd.);",04_Hotel_Acct_MA_SA_ID_Output.sas
SELECT * FROM plu ORDER BY PEOPLESOFT_ID;,04_Hotel_Acct_MA_SA_ID_Output.sas
SELECT * FROM final ORDER BY PEOPLESOFT_ID;,04_Hotel_Acct_MA_SA_ID_Output.sas
" CREATE TABLE final1 AS select a.*,b.MARSHA,b.ACOMP FROM final AS a LEFT JOIN plu AS b ON a.PEOPLESOFT_ID=b.PEOPLESOFT_ID ;",04_Hotel_Acct_MA_SA_ID_Output.sas
"SELECT * FROM final1 ORDER BY PEOPLESOFT_ID ,Monnum ,Mon;",04_Hotel_Acct_MA_SA_ID_Output.sas
"SELECT * FROM Final_order ORDER BY PEOPLESOFT_ID ,Monnum ,Mon;",04_Hotel_Acct_MA_SA_ID_Output.sas
 CREATE TABLE HotAcc.final AS ( SELECT  *  FROM Final_order A JOIN final1 B ON  A.PEOPLESOFT_ID =  B.PEOPLESOFT_ID AND  A.Monnum =  B.Monnum AND  A.Mon =  B.Mon WHERE PEOPLESOFT_ID<>'AAAAA' AND BANQUET_REV_ACT<>' ' AND BANQUET_REV_BUD<>0 AND ROOM_REV_ACT<>' ' AND ROOM_REV_BUD<>0 AND Marsha<>' ');,04_Hotel_Acct_MA_SA_ID_Output.sas
"CREATE TABLE ""\\Hdqmdm1fpcl4v1\Dev-dss\Dev-dss\SalesForce1\BonusComp\HotelAccountability\&Curyrpd.\Hotel_Accountability_&Curyrpd..csv"" AS ( SELECT * FROM HotAcc.final) ;",04_Hotel_Acct_MA_SA_ID_Output.sas
"CREATE TABLE ""\\omarcfp2\areaSales\RoomREV_CateringREV_&Curyrpd..csv"" AS ( SELECT * FROM HotAcc.final) ;",04_Hotel_Acct_MA_SA_ID_Output.sas
" CREATE TABLE temp_Daystar AS ( SELECT Marsha, TIMEF, REVPARINDEX, REVPARINDEXLY, RICHG FROM DAYSTAR.master_final  WHERE TIMEF in( 'L28','WE-28','WD-28','L28_G') AND MARSHA IN ( %PropsList) );",14_MarketSharePerf.sas
" CREATE TABLE temp_strMonytd1 AS  ( select MARSHA, TIMEF, CAST( MARSOLD AS DOUBLE) AS MARSOLD, CAST( MARAVAIL AS DOUBLE) AS MARAVAIL, CAST( MARREV AS DOUBLE) AS MARREV, CAST( MKTSOLD AS DOUBLE) AS MKTSOLD, CAST( MKTAVAIL AS DOUBLE) AS MKTAVAIL, CAST( MKTREV AS DOUBLE) AS MKTREV, CAST( MARSOLDLY AS DOUBLE) AS MARSOLDLY, CAST( MARAVAILLY AS DOUBLE) AS MARAVAILLY, CAST( MARREVLY AS DOUBLE) AS MARREVLY, CAST( MKTSOLDLY AS DOUBLE) AS MKTSOLDLY, CAST( MKTAVAILLY AS DOUBLE) AS MKTAVAILLY, CAST( MKTREVLY AS DOUBLE) AS MKTREVLY FROM AW_CMP_DBO.STR_MONTHLY_DATA WHERE TIMEF IN ( 'YTD','YTD_GP') AND ASOF_YRMO=&CURYRPD AND YRMNTH=&STARMNTH AND CURRENCY_TYPE='Constant USD' AND MARSHA IN ( %PropsList)  ) ;",14_MarketSharePerf.sas
" CREATE TABLE temp_strWDWEytd1 AS  ( select MARSHA, TIMEF, CAST( MARSOLD AS DOUBLE) AS MARSOLD, CAST( MARAVAIL AS DOUBLE) AS MARAVAIL, CAST( MARREV AS DOUBLE) AS MARREV, CAST( MKTSOLD AS DOUBLE) AS MKTSOLD, CAST( MKTAVAIL AS DOUBLE) AS MKTAVAIL, CAST( MKTREV AS DOUBLE) AS MKTREV, CAST( MARSOLDLY AS DOUBLE) AS MARSOLDLY, CAST( MARAVAILLY AS DOUBLE) AS MARAVAILLY, CAST( MARREVLY AS DOUBLE) AS MARREVLY, CAST( MKTSOLDLY AS DOUBLE) AS MKTSOLDLY, CAST( MKTAVAILLY AS DOUBLE) AS MKTAVAILLY, CAST( MKTREVLY AS DOUBLE) AS MKTREVLY FROM AW_CMP_DBO.STR_MONTHLY_DATA WHERE TIMEF IN ( 'YTD_WD','YTD_WE') AND ASOF_YRMO=&CURYRPD AND YRMNTH=&STARMNTH AND CURRENCY_TYPE='Constant USD' AND MARSHA IN ( %PropsList)  )  ;",14_MarketSharePerf.sas
" CREATE TABLE temp_strMonytd AS SELECT MARSHA, TIMEF, ( MARSOLD/MARAVAIL)*( MARREV/MARSOLD) AS MAR_REVPAR, ( MKTSOLD/MKTAVAIL)*( MKTREV/MKTSOLD) AS MKT_REVPAR, ( ( MARSOLD/MARAVAIL)*( MARREV/MARSOLD)) / ( ( MKTSOLD/MKTAVAIL)*( MKTREV/MKTSOLD)) AS REVPARINDEX, CASE WHEN MARAVAILLY = 0 AND MARSOLDLY = 0 THEN 0 ELSE ( MARSOLDLY/MARAVAILLY)*( MARREVLY/MARSOLDLY) END AS MAR_REVPARLY, CASE WHEN MKTAVAILLY = 0 AND MKTSOLDLY = 0 THEN 0 ELSE ( MKTSOLDLY/MKTAVAILLY)*( MKTREVLY/MKTSOLDLY) END AS MKT_REVPARLY, CASE WHEN MARAVAILLY = 0 AND MARSOLDLY = 0 AND MKTAVAILLY = 0 AND MKTSOLDLY = 0 THEN 0 ELSE ( ( MARSOLDLY/MARAVAILLY)*( MARREVLY/MARSOLDLY)) / ( ( MKTSOLDLY/MKTAVAILLY)*( MKTREVLY/MKTSOLDLY)) END AS REVPARINDEX_LY, CASE WHEN MARAVAILLY = 0 AND MARSOLDLY = 0 AND MKTAVAILLY = 0 AND MKTSOLDLY = 0 THEN 0 ELSE ( ( ( MARSOLD/MARAVAIL)*( MARREV/MARSOLD)) / ( ( MKTSOLD/MKTAVAIL)*( MKTREV/MKTSOLD))) / ( ( ( MARSOLDLY/MARAVAILLY)*( MARREVLY/MARSOLDLY)) / ( ( MKTSOLDLY/MKTAVAILLY)*( MKTREVLY/MKTSOLDLY)))-1 END AS RICHG FORMAT=10.5 FROM temp_strMonytd1 ;",14_MarketSharePerf.sas
" CREATE TABLE temp_strWDWEytd AS SELECT MARSHA, TIMEF, ( MARSOLD/MARAVAIL)*( MARREV/MARSOLD) AS MAR_REVPAR, ( MKTSOLD/MKTAVAIL)*( MKTREV/MKTSOLD) AS MKT_REVPAR, ( ( MARSOLD/MARAVAIL)*( MARREV/MARSOLD)) / ( ( MKTSOLD/MKTAVAIL)*( MKTREV/MKTSOLD)) AS REVPARINDEX, CASE WHEN MARAVAILLY = 0 AND MARSOLDLY = 0 THEN 0 ELSE ( MARSOLDLY/MARAVAILLY)*( MARREVLY/MARSOLDLY) END AS MAR_REVPARLY, CASE WHEN MKTAVAILLY = 0 AND MKTSOLDLY = 0 THEN 0 ELSE ( MKTSOLDLY/MKTAVAILLY)*( MKTREVLY/MKTSOLDLY) END AS MKT_REVPARLY, CASE WHEN MARAVAILLY = 0 AND MARSOLDLY = 0 AND MKTAVAILLY = 0 AND MKTSOLDLY = 0 THEN 0 ELSE ( ( MARSOLDLY/MARAVAILLY)*( MARREVLY/MARSOLDLY)) / ( ( MKTSOLDLY/MKTAVAILLY)*( MKTREVLY/MKTSOLDLY)) END AS REVPARINDEX_LY, CASE WHEN MARAVAILLY = 0 AND MARSOLDLY = 0 AND MKTAVAILLY = 0 AND MKTSOLDLY = 0 THEN 0 ELSE ( ( ( MARSOLD/MARAVAIL)*( MARREV/MARSOLD)) / ( ( MKTSOLD/MKTAVAIL)*( MKTREV/MKTSOLD))) / ( ( ( MARSOLDLY/MARAVAILLY)*( MARREVLY/MARSOLDLY)) / ( ( MKTSOLDLY/MKTAVAILLY)*( MKTREVLY/MKTSOLDLY)))-1 END AS RICHG FORMAT=10.5 FROM temp_strWDWEytd1 GROUP BY MARSHA, TIMEF ;",14_MarketSharePerf.sas
SELECT * FROM temp_strMonytd ORDER BY marsha;,14_MarketSharePerf.sas
SELECT * FROM temp_strWDWEytd ORDER BY marsha;,14_MarketSharePerf.sas
SELECT * FROM temp_Daystar ORDER BY marsha;,14_MarketSharePerf.sas
 CREATE TABLE MktShPerf AS ( SELECT  *  FROM temp_strMonytd A JOIN temp_strWDWEytd B ON  A.Marsha =  B.Marsha JOIN temp_Daystar C ON  B.Marsha =  C.Marsha);,14_MarketSharePerf.sas
" CREATE TABLE sfodata.final_mktshre AS ( SELECT  * , CASE WHEN  l28=' '  THEN 0 END AS l28, CASE WHEN  we_28=' '  THEN 0 END AS we_28, CASE WHEN  wd_28=' '  THEN 0 END AS wd_28, CASE WHEN  ytd=' '  THEN 0 END AS ytd, CASE WHEN  ytd_wd=' '  THEN 0 END AS ytd_wd, CASE WHEN  ytd_we=' '  THEN 0 END AS ytd_we, CASE WHEN  ytd_gp=' '  THEN 0 END AS ytd_gp, CASE WHEN  l28_g=' '  THEN 0 END AS l28_g FROM mktshperf_trans  WHERE ( l28+we_28+wd_28+ytd+ytd_wd+ytd_we+ytd_gp+l28_g)<>0);",14_MarketSharePerf.sas
" CREATE TABLE Roster AS  ( select distinct upper( team_member_eid) AS executive_eid, full_name FROM VISIBILITY_HIERARCHY_VW WHERE org_name='Canada' ORDER BY executive_eid  ) ;",2019_BT_Report_for_Sabrina.sas
" CREATE TABLE canada_account_list_&month AS ( SELECT  *  , &month AS month  FROM account_list_&month );",2019_BT_Report_for_Sabrina.sas
 CREATE TABLE canada_account_list AS ( SELECT  *  FROM canada_account_list_01 UNION ALL SELECT  *  FROM canada_account_list_02 UNION ALL SELECT  *  FROM canada_account_list_03 UNION ALL SELECT  *  FROM canada_account_list_04 UNION ALL SELECT  *  FROM canada_account_list_05 UNION ALL SELECT  *  FROM canada_account_list_06 UNION ALL SELECT  *  FROM canada_account_list_07 UNION ALL SELECT  *  FROM canada_account_list_08 WHERE role_title is not missing);,2019_BT_Report_for_Sabrina.sas
"SELECT * FROM canada_account_list ORDER BY company_id DESC ,month;",2019_BT_Report_for_Sabrina.sas
" CREATE TABLE canada_account_list_first_rec AS ( SELECT   * , FIRST(company_id) OVER ( PARTITION BY company_id GROUP BY company_id , month ORDER BY company_id , month DESC )  FROM canada_account_list );",2019_BT_Report_for_Sabrina.sas
"CREATE TABLE canada_account_list_dedupe AS (SELECT DISTINCT * FROM canada_account_list_first_rec ORDER BY role_title ,goal_type ,company_id ,company_name);",2019_BT_Report_for_Sabrina.sas
" CREATE TABLE AP_Inbound AS  ( select stay_year, stay_pd_mo, feed_pd_mo, mgr_eid, cast( account_id AS VARCHAR( 15)) AS account_id, prop_code, market_type, SUM( roomnights_net) AS roomnights_net, SUM( usd_rev_amt_net) AS usd_rev_amt_net FROM sgr_etl_ap_snapshot a WHERE a.stay_year IN ( '2019') AND mgr_eid IN ( %EIDList) AND stay_pd_mo <= &shortpd GROUP BY stay_year, stay_pd_mo, feed_pd_mo, mgr_eid, account_id, prop_code, market_type  ) ;",2019_BT_Report_for_Sabrina.sas
" CREATE TABLE AP_Outbound AS  ( select stay_year, stay_pd_mo, feed_pd_mo, mgr_eid, cast( account_id AS VARCHAR( 15)) AS account_id, prop_code, market_type, SUM( roomnights_net) AS roomnights_net, SUM( usd_rev_amt_net) AS usd_rev_amt_net FROM sgr_etl_outbound_ap_snapshot a WHERE a.stay_year IN ( '2019') AND mgr_eid IN ( %EIDList) AND stay_pd_mo <= &shortpd GROUP BY stay_year, stay_pd_mo, feed_pd_mo, mgr_eid, account_id, prop_code, market_type  ) ;",2019_BT_Report_for_Sabrina.sas
" CREATE TABLE AP_Adjustments AS  ( select a.stay_year, a.stay_pd_mo, a.mgr_eid, a.account_id, a.marsha_code AS prop_code, SUM( a.roomnights) AS roomnights_net, SUM( a.rm_rev_amt) AS cad_rev_amt_net FROM sgr_flat_sw_transient a WHERE a.stay_year IN ( '2019') AND mgr_eid IN ( %EIDList) GROUP BY a.stay_year, a.stay_pd_mo, a.mgr_eid, a.account_id, a.marsha_code  ) ;",2019_BT_Report_for_Sabrina.sas
 CREATE TABLE COMBINED_DATA AS ( SELECT  *  FROM AP_INBOUND UNION ALL SELECT  *  FROM AP_OUTBOUND);,2019_BT_Report_for_Sabrina.sas
"CREATE TABLE JUNK AS (SELECT STAY_YEAR, STAY_PD_MO, MGR_EID, ACCOUNT_ID, PROP_CODE, MARKET_TYPE, SUM(ROOMNIGHTS_NET) AS ROOMNIGHTS_NET, SUM(USD_REV_AMT_NET) AS USD_REV_AMT_NET FROM COMBINED_DATA GROUP BY STAY_YEAR, STAY_PD_MO, MGR_EID, ACCOUNT_ID, PROP_CODE, MARKET_TYPE );",2019_BT_Report_for_Sabrina.sas
" CREATE TABLE CAD_CONVERSION_TABLE AS  ( SELECT CURRENCY_EXCH_DT, EXTRACT( YEAR FROM CURRENCY_EXCH_DT) AS YEAR, EXTRACT( MONTH FROM CURRENCY_EXCH_DT) AS MONTH, CURRENCY_EXCH_RTE, FROM_CURRENCY_CD, TO_CURRENCY_CD FROM EDW_DIM_CURRENCY WHERE CURRENCY_EXCH_DT >= '01JAN2019' AND FROM_CURRENCY_CD = 'CAD' ORDER BY CURRENCY_EXCH_DT DESC, YEAR DESC, MONTH DESC  ) ;",2019_BT_Report_for_Sabrina.sas
" CREATE TABLE CAD_CONVERSION_LAST_REC AS ( SELECT   * , FIRST(MONTH) OVER ( PARTITION BY MONTH GROUP BY DESC , YEAR , DESC , MONTH ORDER BY DESC , YEAR , DESC , MONTH )  FROM CAD_CONVERSION_TABLE  WHERE MONTH <=&SHORTPD.);",2019_BT_Report_for_Sabrina.sas
" CREATE TABLE SGR_AP_CAD AS select a.stay_year, a.stay_pd_mo, a.mgr_eid, a.account_id, a.prop_code, SUM( a.roomnights_net) AS roomnights_net, SUM( a.usd_rev_amt_net/b.currency_exch_rte) AS cad_rev_amt_net FROM Combined_Data a LEFT JOIN CAD_CONVERSION_LAST_REC b ON a.feed_pd_mo=b.month GROUP BY a.stay_year, a.stay_pd_mo, a.mgr_eid, a.account_id, a.prop_code ;",2019_BT_Report_for_Sabrina.sas
 CREATE TABLE Combine_Canada_AP AS ( SELECT  *  FROM sgr_ap_cad UNION ALL SELECT  *  FROM ap_adjustments);,2019_BT_Report_for_Sabrina.sas
" CREATE TABLE Canada_AP_w_PropInfo AS select 'Canada' AS organization, e.full_name AS executive_name, c.role_title AS position, CASE WHEN b.sfo_org='CAN' THEN 'Canada' when b.sfo_org='MA' THEN 'Mid Atlantic' when b.sfo_org='ENE' THEN 'East Northeast' when b.sfo_org='NMA' THEN 'Northern Mid-America' when b.sfo_org='WMP' THEN 'Western Mountain Pacific' when b.sfo_org='WSW' THEN 'West Southwest' when b.sfo_org='FL' THEN 'Florida' when b.sfo_org='SSE' THEN 'South Southeast' when b.sfo_org='WSC' THEN 'West South Central' when b.sfo_org='HI' THEN 'Hawaii' when b.sfo_org='CAL' THEN 'CALA' when compress( b.sfo_org)='' AND b.country_cd='CA' THEN 'CA Non-Participating' when compress( b.sfo_org)='' AND b.country_cd='US' THEN 'US Non-Participating' when compress( b.sfo_org)='' AND b.country_cd not IN ( 'US','CA') AND b.mf='M' THEN ""Int'l Managed"" when compress( b.sfo_org)='' AND b.country_cd not IN ( 'US','CA') AND b.mf='F' THEN ""Int'l Franchise"" ELSE '' END AS business_sent_to, a.prop_code, a.account_id, c.company_name, a.stay_pd_mo, CASE WHEN a.stay_pd_mo between 1 AND 3 THEN 'Q1' when a.stay_pd_mo between 4 AND 6 THEN 'Q2' when a.stay_pd_mo between 7 AND 9 THEN 'Q3' when a.stay_pd_mo between 10 AND 12 THEN 'Q4' ELSE '' END AS quarter, CASE WHEN b.misw_flag='MI' THEN 'Marriott Rewards Hotel' ELSE 'SPG Hotel' END AS property_legacy, d.currency_exch_rte, SUM( roomnights_net) AS rn, SUM( cad_rev_amt_net) AS cad_rev_amt_net FROM Combine_Canada_AP a LEFT JOIN awprod.property_master b ON a.prop_code=b.marsha LEFT JOIN canada_account_list_dedupe c ON a.account_id=c.company_id LEFT JOIN cad_conversion_last_rec d ON a.stay_pd_mo=d.month LEFT JOIN roster e ON a.mgr_eid=e.executive_eid GROUP BY organization, e.full_name, c.role_title, business_sent_to, a.prop_code, a.account_id, c.company_name, a.stay_pd_mo, quarter, b.misw_flag, d.currency_exch_rte HAVING rn <>0 OR cad_rev_amt_net <>0 ;",2019_BT_Report_for_Sabrina.sas
" CREATE TABLE Currents AS  ( select marsha, stay_year, coalesce( crossover_rms,0) AS CO_RN_Goal, coalesce( ( crossover_rms*crossover_gadr),0) AS CO_Rev_Goal, def_rms AS Def_OTB, ( def_rms*def_gadr) AS Def_Rev, CID_Rms AS Target, Avg_rms AS Avg_Bkd FROM AW_TGT_BUS_DBO.OY_ANNUALCROSSOVER WHERE stay_year < &YEARNXT3 AND ASOF_YRMO=&CURYRPD ORDER BY marsha, stay_year  )  ;",7_CrossOverData.sas
" CREATE TABLE Futures AS  ( select marsha, 'Futures' AS Stay_Year, coalesce( SUM( crossover_rms),0) AS CO_RN_Goal, coalesce( SUM( crossover_rms*def_gadr),0) AS CO_Rev_Goal, SUM( def_rms) AS Def_OTB, SUM( def_rms*def_gadr) AS Def_Rev, SUM( cid_rms) AS Target, SUM( avg_rms) AS Avg_Bkd FROM AW_TGT_BUS_DBO.OY_ANNUALCROSSOVER WHERE stay_year > &curyr AND ASOF_YRMO=&CURYRPD GROUP BY marsha ORDER BY marsha  )  ;",7_CrossOverData.sas
"CREATE TABLE merge_CrossOver1 AS ( SELECT  *, marsha AS marsha2, FORMAT(stay_year, VARCHAR(7)) AS stay_year , marsha2 AS marsha , CASE WHEN  CO_Rev_Goal=' ' OR CO_Rev_Goal=' ' OR CO_RN_Goal=0 OR CO_Rev_Goal=0  THEN 0 ELSE CO_Rev_Goal/CO_RN_Goal END AS CO_RN_Goal_ADR, CASE WHEN  Def_OTB=' ' OR Def_REV=' ' OR Def_OTB=' ' OR Def_REV=0  THEN 0 ELSE Def_REV/Def_OTB END AS Def_ADR FROM Currents A JOIN Futures B ON  A.marsha2 =  B.marsha2 AND  A.stay_year =  B.stay_year);",7_CrossOverData.sas
ALTER TABLE merge_CrossOver1 DROP COLUMN marsha2 ;,7_CrossOverData.sas
 CREATE TABLE sfodata.CrossOver_YTD AS ( SELECT  *  FROM merge_CrossOver1 );,7_CrossOverData.sas
" CREATE TABLE dow_count_p3 AS selectEXTRACT(YEAR FROM date_dt_p) AS year,EXTRACT(MONTH FROM date_dt_p) AS mnth, COUNT( date_dt_p) AS COUNT FROM dow_count_p GROUP BY year, mnth ORDER BY year, mnth;",7_Group_Projection_Comparision_RMSAD_LockedFcst.sas
" CREATE TABLE RMSAD_PLU AS  (  SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER A WHERE openflag = 'Y' AND project_status='Open' AND brnd not IN ( 'DS', 'MV','ZC') AND interface='2'   ) ;",7_Group_Projection_Comparision_RMSAD_LockedFcst.sas
 CREATE TABLE RP_snap AS  (  SELECT * FROM AW_REV_DBO.PROJECTIONS_MISW_BYMO_&runmo.   ) ;,7_Group_Projection_Comparision_RMSAD_LockedFcst.sas
" CREATE TABLE rp_group AS select a.marsha AS prop_code, year AS year, mo AS month, rn, budget_rn FROM rp_snap AS a INNER JOIN rmsad_plu AS b ON a.marsha=b.marsha WHERE market_segment_misw='Group' AND year >= ( &ACT_LYr. ) GROUP BY a.marsha, year, month;",7_Group_Projection_Comparision_RMSAD_LockedFcst.sas
 CREATE TABLE hotel AS select distinct( prop_code) FROM rp_group;,7_Group_Projection_Comparision_RMSAD_LockedFcst.sas
" CREATE TABLE time_p AS select year, mnth AS month FROM dow_count_p3 GROUP BY year, month;",7_Group_Projection_Comparision_RMSAD_LockedFcst.sas
" CREATE TABLE projection_backbone AS select a.prop_code, b.year, b.month FROM hotel a, time_p b;",7_Group_Projection_Comparision_RMSAD_LockedFcst.sas
" CREATE TABLE group_yoy AS select a.*, b.rn AS rn_ty, b.budget_rn, c.rn AS rn_ly FROM projection_backbone AS a LEFT JOIN rp_group AS b ON a.prop_code=b.prop_code AND a.year=b.year AND a.month=b.month LEFT JOIN rp_group AS c ON a.prop_code=c.prop_code AND a.year=c.year+1 AND a.month=c.month ORDER BY a.prop_code, a.year, a.month;",7_Group_Projection_Comparision_RMSAD_LockedFcst.sas
" CREATE TABLE group_yoy2 AS ( SELECT  * , CASE WHEN  rn_ly=' '  THEN 0 END AS rn_ly, CASE WHEN  rn_ty=' '  THEN 0 END AS rn_ty, CASE WHEN  budget_rn=' '  THEN 0 END AS budget_rn FROM group_yoy );",7_Group_Projection_Comparision_RMSAD_LockedFcst.sas
 CREATE TABLE gfcstcmp.group_yoy2_&runmo. AS ( SELECT  *  FROM group_yoy2 );,7_Group_Projection_Comparision_RMSAD_LockedFcst.sas
" CREATE TABLE = group_yoy2 outfile=""G:\\RM EAnlys\\Shared_Data\\OYSData\\Suppy - Group Projection\\RMSAD Data\\grp_fcst_comparison_&runmo..csv"" dbms=csv replace  , group_yoy2 outfile=""G:\RM EAnlys\Shared_Data\OYSData\Suppy - Group Projection\RMSAD Data\grp_fcst_comparison_&runmo..csv"" dbms=csv replace AS data ;",7_Group_Projection_Comparision_RMSAD_LockedFcst.sas
" CREATE TABLE PLU AS  (  SELECT a.*, b.ERS2_USER FROM AW_TGT_BUS_DBO.PROPERTY_MASTER A LEFT JOIN AW_TGT_PROXY_DBO.IT_OY_PROP_CD_WEEKLY B ON a.marsha=b.prop_code WHERE openflag = 'Y' AND project_status='Open' AND interface='2'   ) ;",7_SRL_data.sas
 CREATE TABLE UAT1_d AS  (  SELECT a.* FROM AW_TGT_PROXY_DBO.IT_SCE8_POP_STD_RM_CAP_HIST AS a INNER JOIN ( select max( data_dt) AS maxdate FROM AW_TGT_PROXY_DBO.IT_SCE8_POP_STD_RM_CAP_HIST) AS b ON a.data_dt=b.maxdate WHERE a.set_status='ON'   ) ;,7_SRL_data.sas
" CREATE TABLE data_2a AS select distinct prop_code,EXTRACT(YEAR FROM stay_dt) AS year,EXTRACT(MONTH FROM stay_dt) AS month, COUNT( user_capped) AS cap_ct FROM uat1_d GROUP BY prop_code, year, month;",7_SRL_data.sas
" CREATE TABLE data_3a AS select distinct prop_code,EXTRACT(YEAR FROM stay_dt) AS year,EXTRACT(MONTH FROM stay_dt) AS month, COUNT( user_capped) AS act_ct FROM uat1_d WHERE act_status='Y' GROUP BY prop_code, year, month;",7_SRL_data.sas
" CREATE TABLE srl_data AS select b.*, coalesce( c.act_ct, 0) AS act_ct FROM data_2a AS b LEFT JOIN data_3a AS c ON b.prop_code=c.prop_code AND b.year=c.year AND b.month=c.month ORDER BY b.prop_code, b.year, b.month;",7_SRL_data.sas
 CREATE TABLE srlsetup.srl_data_&yrmn. AS ( SELECT  *  FROM srl_data );,7_SRL_data.sas
"CREATE TABLE ""G:\RM EAnlys\Shared_Data\OYSData\Standard Room Limit Data\RMSAD Data\srl_data_&yrmn..csv"" AS ( SELECT * FROM srl_data) ;",7_SRL_data.sas
"CREATE TABLE AcctList_NoWH AS ( SELECT  *  FROM AccountList  WHERE role_title<>'Market Account Executive, Whsale/FIT/Tour & Travel');",Account_Dashboard_BT_MI.sas
"CREATE TABLE AcctList_WH AS ( SELECT  *  FROM AccountList  WHERE role_title='Market Account Executive, Whsale/FIT/Tour & Travel');",Account_Dashboard_BT_MI.sas
" CREATE TABLE Prospect_and_Mid_Market AS ( SELECT  *  FROM AcctList_NoWH  WHERE role_title IN ( 'Market Account Executive, Mid-Market' ));",Account_Dashboard_BT_MI.sas
CREATE TABLE AcctList_NoWH_DeDupe AS (SELECT DISTINCT ACCOUNT_ID FROM AcctList_NoWH ORDER BY ACCOUNT_ID);,Account_Dashboard_BT_MI.sas
CREATE TABLE AcctList_WH_DeDupe AS (SELECT DISTINCT ACCOUNT_ID FROM AcctList_WH ORDER BY ACCOUNT_ID);,Account_Dashboard_BT_MI.sas
CREATE TABLE Prospect_and_Mid_Market_DeDupe AS (SELECT DISTINCT ACCOUNT_ID FROM Prospect_and_Mid_Market ORDER BY ACCOUNT_ID);,Account_Dashboard_BT_MI.sas
"CREATE TABLE AcctNames AS (SELECT DISTINCT org_name, market_name, area_name, account_id, account_name FROM AccountList ORDER BY account_id ,account_name);",Account_Dashboard_BT_MI.sas
"CREATE TABLE AccountList1 AS ( SELECT  *, account_id1 AS account_id, CAST( account_id AS INT  ) AS account_id1  FROM AccountList );",Account_Dashboard_BT_MI.sas
ALTER TABLE AccountList1 DROP COLUMN account_id ;,Account_Dashboard_BT_MI.sas
 CREATE TABLE PLU AS  ( SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER_HIST WHERE asof_yrmo=&curyrpd.  )  ;,Account_Dashboard_BT_MI.sas
" CREATE TABLE prop AS ( SELECT marsha, domint, country_cd , FORMAT(deployed_org, VARCHAR(36)) AS deployed_org , FORMAT(geo_org, VARCHAR(36)) AS geo_org , CASE WHEN  sfo_org=""ENE""  THEN ""East Northeast"" WHEN   sfo_org=""MA""  THEN ""Mid Atlantic"" WHEN   sfo_org=""WMP""  THEN ""Western Mountain Pacific"" WHEN   sfo_org=""WSW""  THEN ""West Southwest"" WHEN   sfo_org=""NMA""  THEN ""Northern Mid-America"" WHEN   sfo_org=""SSE""  THEN ""South Southeast"" WHEN   sfo_org=""FL""  THEN ""Florida"" WHEN   sfo_org=""WSC""  THEN ""West South Central"" WHEN   sfo_org=""CAN""  THEN ""Canada"" ELSE ""Not Participating"" END AS deployed_org, CASE WHEN  state IN ( 'CT','DE','NH','NY','NJ','MA','ME','PA','RI','VT')  THEN ""East Northeast"" WHEN   state IN ( 'KS','IA','IL','IN','MO','WI','MN','MI','OH','KY')  THEN ""Northern Mid-America"" WHEN   state IN ( 'MD','VA','WV','NC','SC','DC')  THEN ""Mid Atlantic"" WHEN   state IN ( 'NV','AZ')  THEN ""West Southwest"" WHEN   state IN ( 'FL')  THEN ""Florida"" WHEN   state IN ( 'AL','AR','GA','LA','MS','TN')  THEN ""South Southeast"" WHEN   state IN ( 'ID','MT','NE','NM','ND','OK','SD','TX','WY')  THEN 'West South Central' WHEN   state IN ( 'CO', 'OR', 'UT', 'WA')  THEN ""Western Mountain Pacific"", CASE WHEN  zip IN ( '90001','90002','90003','90004','90005','90006','90007','90008','90009','90010','90011','90012','90013','90014','90015','90016','90017','90018','90019','90020', '90021','90022','90023','90024','90025','90026','90027','90028','90029','90030','90031','90032','90033','90034','90035','90036','90037','90038','90039','90040', '90041','90042','90043','90044','90045','90046','90047','90048','90049','90050','90051','90052','90053','90054','90055','90056','90057','90058','90059','90060', '90061','90062','90063','90064','90065','90066','90067','90068','90069','90070','90071','90072','90073','90074','90075','90076','90077','90078','90079','90080', '90081','90082','90083','90084','90086','90087','90088','90089','90091','90093','90094','90095','90096','90101','90102','90103','90174','90185','90189','90201', '90202','90209','90210','90211','90212','90213','90220','90221','90222','90223','90224','90230','90231','90232','90233','90239','90240','90241','90242','90245', '90247','90248','90249','90250','90251','90254','90255','90260','90261','90262','90263','90264','90265','90266','90267','90270','90272','90274','90275','90277', '90278','90280','90290','90291','90292','90293','90294','90295','90296','90301','90302','90303','90304','90305','90306','90307','90308','90309','90310','90311', '90312','90313','90397','90398','90401','90402','90403','90404','90405','90406','90407','90408','90409','90410','90411','90501','90502','90503','90504','90505', '90506','90507','90508','90509','90510','90601','90602','90603','90604','90605','90606','90607','90608','90609','90610','90612','90620','90621','90622','90623', '90624','90630','90631','90632','90633','90637','90638','90639','90640','90650','90651','90652','90659','90660','90661','90662','90665','90670','90671','90680', '90701','90702','90703','90704','90706','90707','90710','90711','90712','90713','90714','90715','90716','90717','90720','90721','90723','90731','90732','90733', '90734','90740','90742','90743','90744','90745','90746','90747','90748','90749','90755','90801','90802','90803','90804','90805','90806','90807','90808','90809', '90810','90813','90814','90815','90822','90831','90832','90833','90834','90835','90840','90842','90844','90845','90846','90847','90848','90853','90888','90895', '90899','91001','91003','91006','91007','91009','91010','91011','91012','91016','91017','91020','91021','91023','91024','91025','91030','91031','91040','91041', '91042','91043','91046','91050','91051','91066','91077','91101','91102','91103','91104','91105','91106','91107','91108','91109','91110','91114','91115','91116', '91117','91118','91121','91123','91124','91125','91126','91129','91131','91175','91182','91184','91185','91186','91187','91188','91189','91191','91201','91202', '91203','91204','91205','91206','91207','91208','91209','91210','91214','91221','91222','91224','91225','91226','91301','91302','91303','91304','91305','91306', '91307','91308','91309','91310','91311','91312','91313','91316','91319','91320','91321','91322','91324','91325','91326','91327','91328','91329','91330','91331', '91333','91334','91335','91337','91340','91341','91342','91343','91344','91345','91346','91350','91351','91352','91353','91354','91355','91356','91357','91358', '91359','91360','91361','91362','91363','91364','91365','91367','91371','91372','91376','91377','91380','91381','91382','91383','91384','91385','91386','91387', '91388','91390','91392','91393','91394','91395','91396','91399','91401','91402','91403','91404','91405','91406','91407','91408','91409','91410','91411','91412', '91413','91416','91423','91426','91436','91470','91482','91495','91496','91497','91499','91501','91502','91503','91504','91505','91506','91507','91508','91510', '91521','91522','91523','91526','91601','91602','91603','91604','91605','91606','91607','91608','91609','91610','91611','91612','91614','91615','91616','91617', '91618','91701','91702','91706','91708','91709','91710','91711','91714','91715','91716','91722','91723','91724','91729','91730','91731','91732','91733','91734', '91735','91737','91739','91740','91741','91743','91744','91745','91746','91747','91748','91749','91750','91752','91754','91755','91756','91758','91759','91761', '91762','91763','91764','91765','91766','91767','91768','91769','91770','91771','91772','91773','91775','91776','91778','91780','91784','91785','91786','91788', '91789','91790','91791','91792','91793','91795','91797','91798','91799','91801','91802','91803','91804','91841','91896','91899','91901','91902','91903','91905', '91906','91908','91909','91910','91911','91912','91913','91914','91915','91916','91917','91921','91931','91932','91933','91934','91935','91941','91942','91943', '91944','91945','91946','91947','91948','91950','91951','91962','91963','91976','91977','91978','91979','91980','91990','92003','92004','92007','92008','92009', '92010','92011','92013','92014','92018','92019','92020','92021','92022','92023','92024','92025','92026','92027','92028','92029','92030','92033','92036','92037', '92038','92039','92040','92046','92049','92051','92052','92054','92055','92056','92057','92058','92059','92060','92061','92064','92065','92066','92067','92068', '92069','92070','92071','92072','92074','92075','92078','92079','92081','92082','92083','92084','92085','92086','92088','92090','92091','92092','92093','92096', '92101','92102','92103','92104','92105','92106','92107','92108','92109','92110','92111','92112','92113','92114','92115','92116','92117','92118','92119','92120', '92121','92122','92123','92124','92126','92127','92128','92129','92130','92131','92132','92133','92134','92135','92136','92137','92138','92139','92140','92142', '92143','92145','92147','92149','92150','92152','92153','92154','92155','92158','92159','92160','92161','92162','92163','92164','92165','92166','92167','92168', '92169','92170','92171','92172','92173','92174','92175','92176','92177','92178','92179','92182','92184','92186','92187','92190','92191','92192','92193','92194', '92195','92196','92197','92198','92199','92201','92202','92203','92210','92211','92220','92223','92225','92227','92230','92231','92233','92234','92235','92236', '92239','92240','92241','92242','92243','92244','92247','92248','92249','92250','92251','92252','92253','92254','92255','92256','92257','92258','92259','92260', '92261','92262','92263','92264','92267','92268','92270','92273','92274','92275','92276','92277','92278','92280','92281','92282','92283','92284','92285','92286', '92292','92301','92304','92305','92307','92308','92309','92310','92311','92312','92313','92314','92315','92316','92317','92318','92320','92321','92322','92323', '92324','92325','92326','92327','92328','92329','92332','92333','92334','92335','92336','92337','92338','92339','92340','92341','92342','92344','92345','92346', '92347','92350','92352','92354','92356','92357','92358','92359','92363','92364','92365','92366','92368','92369','92371','92372','92373','92374','92375','92376', '92377','92378','92382','92384','92385','92386','92389','92391','92392','92393','92394','92395','92397','92398','92399','92401','92402','92403','92404','92405', '92406','92407','92408','92410','92411','92412','92413','92414','92415','92418','92420','92423','92424','92427','92501','92502','92503','92504','92505','92506', '92507','92508','92509','92513','92514','92515','92516','92517','92518','92519','92521','92522','92530','92531','92532','92536','92539','92543','92544','92545', '92546','92548','92549','92551','92552','92553','92554','92555','92556','92557','92561','92562','92563','92564','92567','92570','92571','92572','92581','92582', '92583','92584','92585','92586','92587','92589','92590','92591','92592','92593','92595','92596','92599','92602','92603','92604','92605','92606','92607','92609', '92610','92612','92614','92615','92616','92617','92618','92619','92620','92623','92624','92625','92626','92627','92628','92629','92630','92637','92646','92647', '92648','92649','92650','92651','92652','92653','92654','92655','92656','92657','92658','92659','92660','92661','92662','92663','92672','92673','92674','92675', '92676','92677','92678','92679','92683','92684','92685','92688','92690','92691','92692','92693','92694','92697','92698','92701','92702','92703','92704','92705', '92706','92707','92708','92709','92710','92711','92712','92725','92728','92735','92780','92781','92782','92799','92801','92802','92803','92804','92805','92806', '92807','92808','92809','92811','92812','92814','92815','92816','92817','92821','92822','92823','92825','92831','92832','92833','92834','92835','92836','92837', '92838','92840','92841','92842','92843','92844','92845','92846','92850','92856','92857','92859','92860','92861','92862','92863','92864','92865','92866','92867', '92868','92869','92870','92871','92877','92878','92879','92880','92881','92882','92883','92885','92886','92887','92899','93001','93002','93003','93004','93005', '93006','93007','93009','93010','93011','93012','93013','93014','93015','93016','93020','93021','93022','93023','93024','93030','93031','93032','93033','93034', '93035','93036','93040','93041','93042','93043','93044','93060','93061','93062','93063','93064','93065','93066','93067','93093','93094','93099','93101','93102', '93103','93105','93106','93107','93108','93109','93110','93111','93116','93117','93118','93120','93121','93130','93140','93150','93160','93190','93199','93201', '93203','93205','93206','93207','93215','93216','93218','93219','93220','93222','93224','93225','93226','93238','93240','93241','93243','93249','93250','93251', '93252','93254','93255','93256','93257','93258','93260','93261','93263','93268','93270','93276','93280','93283','93285','93287','93301','93302','93303','93304', '93305','93306','93307','93308','93309','93311','93312','93313','93314','93380','93381','93382','93383','93384','93385','93386','93387','93388','93389','93390', '93401','93402','93403','93405','93406','93407','93408','93409','93410','93412','93420','93421','93422','93423','93424','93427','93428','93429','93430','93432', '93433','93434','93436','93437','93438','93440','93441','93442','93443','93444','93445','93446','93447','93448','93449','93453','93454','93455','93456','93457', '93458','93460','93461','93463','93464','93465','93475','93483','93501','93502','93504','93505','93510','93516','93518','93519','93523','93524','93527','93528', '93531','93532','93534','93535','93536','93539','93542','93543','93544','93550','93551','93552','93553','93554','93555','93556','93558','93560','93561','93562', '93563','93581','93584','93586','93590','93591','93592','93596','93599','95644')  THEN ""West Southwest"" ELSE ""Western Mountain Pacific"" END AS GEO_ORG ELSE ""Undeployed"" END AS GEO_ORG, CASE WHEN  country_cd='CA'  THEN ""Canada"" END AS GEO_ORG FROM PLU  WHERE state='CA');",Account_Dashboard_BT_MI.sas
" CREATE TABLE MRDW_No_Wholesale_A AS  ( SELECT sd.year_cal AS stay_year, sd.month_cal_id AS stay_pd_mo, pr.property_cd AS prop_code, pr.brand_cd AS brand_code, hi.base_business_id AS goal_account_id, SUM( dr.rooms_qty) AS rn, SUM ( ROUND( dr.proj_net_local_rev_amt,2)) AS local_rev, SUM(  CASE WHEN cc.exch_per_us_dlr_rte IN ( 0) THEN ROUND( dr.proj_net_local_rev_amt,2) ELSE ROUND( ( dr.proj_net_local_rev_amt/cc.exch_per_us_dlr_rte),2) END) AS usd_rev FROM mrdw_fact_daily_revenue dr INNER JOIN mrdw_dim_currency_conversion cc ON ( dr.date_currency_stay_key = cc.date_currency_key) INNER JOIN mrdw_dim_date sd ON ( cc.date_key = sd.date_key) INNER JOIN mrdw_dim_market_rates mr ON ( dr.market_rate_key = mr.market_rate_key) INNER JOIN mrdw_dim_property pr ON ( mr.property_id = pr.property_id) INNER JOIN mrdw_brg_master_account_ids m ON ( dr.confo_num_curr_id = m.confo_num_curr_id AND dr.confo_num_orig_id = m.confo_num_orig_id AND dr.date_create_key = m.date_create_key) INNER JOIN Edw_dim_descendent_accounts_v hi ON ( hi.descendent_account_key = m.derived_account_id ) INNER JOIN edw_dim_account_site edw ON ( edw.account_nat_key = m.derived_account_id) INNER JOIN mrdw_dim_status_accom AS a19 ON ( a19.status_accom_key = DR.status_accom_key) WHERE edw.dw_current_ind=1 AND ( ( sd.year_cal = &curyr AND sd.month_cal_id <=&shortpd) OR sd.year_cal IN ( &curyr-1, &curyr-2, &curyr-3)) AND hi.base_business_id IN ( %ClaritasList2) AND mr.market_type_cd IN ( 'B','P','C') AND a19.action_cd <> 'NR' AND dr.proj_net_local_rev_amt/dr.rooms_qty NOT IN ( 999,999.99,9999,9999.99,99999,99999.99,999999,999999.99) GROUP BY stay_year, stay_pd_mo, prop_code, brand_code, goal_account_id  ) ;",Account_Dashboard_BT_MI.sas
 CREATE TABLE MRDW_No_Wholesale1 AS ( SELECT  *  FROM MRDW_No_Wholesale_A );,Account_Dashboard_BT_MI.sas
" CREATE TABLE MRDW_No_Wholesale AS select stay_year, stay_pd_mo, prop_code, brand_code, goal_account_id, rn, local_rev, usd_rev FROM MRDW_No_Wholesale1 ;",Account_Dashboard_BT_MI.sas
" CREATE TABLE MRDW_Wholesale_A AS  ( SELECT sd.year_cal AS stay_year, sd.month_cal_id AS stay_pd_mo, pr.property_cd AS prop_code, pr.brand_cd AS brand_code, di.intermediary_id AS goal_account_id, SUM( dr.rooms_qty) AS rn, SUM( ROUND( dr.proj_net_local_rev_amt,2)) AS local_rev, SUM( CASE WHEN cc.exch_per_us_dlr_rte IN ( 0) THEN ROUND( dr.proj_net_local_rev_amt,2) ELSE ROUND( ( dr.proj_net_local_rev_amt/cc.exch_per_us_dlr_rte),2) END) AS usd_rev FROM mrdw_fact_daily_revenue dr INNER JOIN mrdw_dim_currency_conversion cc ON ( dr.date_currency_stay_key = cc.date_currency_key) INNER JOIN mrdw_dim_date sd ON ( cc.date_key = sd.date_key) INNER JOIN mrdw_dim_market_rates mr ON ( dr.market_rate_key = mr.market_rate_key) INNER JOIN mrdw_dim_property pr ON ( mr.property_id = pr.property_id) INNER JOIN mrdw_brg_intermediary brg   ON ( dr.confo_num_curr_id = brg.confo_num_curr_id AND dr.confo_num_orig_id = brg.confo_num_orig_id AND dr.date_create_key = brg.date_create_key) INNER JOIN mrdw_dim_intermediary di  ON ( brg.intermediary_key = di.intermediary_key) INNER JOIN mrdw_dim_status_accom AS a19 ON ( a19.status_accom_key = DR.status_accom_key) WHERE di.intermediary_id IN ( %WholesaleList) AND ( ( sd.year_cal = &curyr AND sd.month_cal_id <=&shortpd) OR sd.year_cal IN ( &curyr-1, &curyr-2, &curyr-3)) AND di.intermediary_type_cd='WH' AND mr.market_type_cd IN ( 'B','P','C') AND a19.action_cd <> 'NR' AND dr.proj_net_local_rev_amt/dr.rooms_qty NOT IN ( 999,999.99,9999,9999.99,99999,99999.99,999999,999999.99) GROUP BY stay_year, stay_pd_mo, prop_code, brand_code, goal_account_id ORDER BY stay_year, stay_pd_mo, prop_code, brand_code, goal_account_id  ) ;",Account_Dashboard_BT_MI.sas
" CREATE TABLE MRDW_Wholesale_D AS  ( SELECT sd.year_cal AS stay_year, sd.month_cal_id AS stay_pd_mo, pr.property_cd AS prop_code, pr.brand_cd AS brand_code, di.intermediary_id AS goal_account_id, mr.rate_pgm_cd AS rate_prog_code, SUM( dr.rooms_qty) AS rn, SUM( ROUND( dr.proj_net_local_rev_amt,2)) AS local_rev, SUM( CASE WHEN cc.exch_per_us_dlr_rte IN ( 0) THEN ROUND( dr.proj_net_local_rev_amt,2) ELSE ROUND( ( dr.proj_net_local_rev_amt/cc.exch_per_us_dlr_rte),2) END) AS usd_rev FROM mrdw_fact_daily_revenue dr INNER JOIN mrdw_dim_currency_conversion cc ON ( dr.date_currency_stay_key = cc.date_currency_key) INNER JOIN mrdw_dim_date sd ON ( cc.date_key = sd.date_key) INNER JOIN mrdw_dim_market_rates mr ON ( dr.market_rate_key = mr.market_rate_key) INNER JOIN mrdw_dim_property pr ON ( mr.property_id = pr.property_id) INNER JOIN mrdw_brg_intermediary brg   ON ( dr.confo_num_curr_id = brg.confo_num_curr_id AND dr.confo_num_orig_id = brg.confo_num_orig_id AND dr.date_create_key = brg.date_create_key) INNER JOIN mrdw_dim_intermediary di  ON ( brg.intermediary_key = di.intermediary_key) INNER JOIN mrdw_dim_status_accom AS a19 ON ( a19.status_accom_key = DR.status_accom_key) WHERE di.intermediary_id IN ( %WholesaleList) AND ( ( sd.year_cal = &curyr AND sd.month_cal_id <=&shortpd) OR sd.year_cal IN ( &curyr-1, &curyr-2, &curyr-3)) AND di.intermediary_type_cd='IA' AND mr.market_type_cd IN ( 'B','P','C') AND a19.action_cd <> 'NR' AND dr.proj_net_local_rev_amt/dr.rooms_qty NOT IN ( 999,999.99,9999,9999.99,99999,99999.99,999999,999999.99) GROUP BY stay_year, stay_pd_mo, prop_code, brand_code, goal_account_id, rate_prog_code ORDER BY stay_year, stay_pd_mo, prop_code, brand_code, goal_account_id  ) ;",Account_Dashboard_BT_MI.sas
" CREATE TABLE MRDW_Wholesale_D_RtProg AS select a.stay_year, a.stay_pd_mo, a.prop_code, a.brand_code, a.goal_account_id, SUM( a.rn) AS rn, SUM( a.local_rev) AS local_rev, SUM( a.usd_rev) AS usd_rev FROM MRDW_Wholesale_D a INNER JOIN ( select distinct iata_number, rate_pgm_cd FROM Deployed_Accts) b ON a.goal_account_id=b.iata_number AND a.rate_prog_code=b.rate_pgm_cd GROUP BY a.stay_year, a.stay_pd_mo, a.prop_code, a.brand_code, a.goal_account_id ;",Account_Dashboard_BT_MI.sas
 CREATE TABLE MRDW_Wholesale AS ( SELECT  *  FROM MRDW_Wholesale_A UNION ALL SELECT  *  FROM MRDW_Wholesale_D_RtProg);,Account_Dashboard_BT_MI.sas
" CREATE TABLE AcctProd_w_PropDetail AS select b.deployed_org, b.geo_org, a.stay_year, a.stay_pd_mo, a.prop_code, a.brand_code, b.domint, b.country_cd AS prop_country, a.goal_account_id, SUM( a.rn) AS rn, SUM( a.local_rev) AS local_rev, SUM( a.usd_rev) AS usd_rev FROM MRDW_No_Wholesale a INNER JOIN Prop b ON a.prop_code=b.marsha WHERE a.goal_account_id not IN ( %ClaritasList3) GROUP BY b.deployed_org, b.geo_org, a.stay_year, a.stay_pd_mo, a.prop_code, a.brand_code, b.domint, b.country_cd, a.goal_account_id ;",Account_Dashboard_BT_MI.sas
" CREATE TABLE MidMarket_w_PropDetail AS select b.deployed_org, b.geo_org, a.stay_year, a.stay_pd_mo, a.prop_code, a.brand_code, b.domint, b.country_cd AS prop_country, a.goal_account_id, SUM( a.rn) AS rn, SUM( a.local_rev) AS local_rev, SUM( a.usd_rev) AS usd_rev FROM MRDW_No_Wholesale a INNER JOIN Prop b ON a.prop_code=b.marsha WHERE a.goal_account_id IN ( %ClaritasList3) GROUP BY b.deployed_org, b.geo_org, a.stay_year, a.stay_pd_mo, a.prop_code, a.brand_code, b.domint, b.country_cd, a.goal_account_id ;",Account_Dashboard_BT_MI.sas
 CREATE TABLE MM_GeographicLead_&curyrpd AS select * FROM OTBND.MM_GEO_ORG_&CURYR._&PERIOD ;,Account_Dashboard_BT_MI.sas
"CREATE TABLE dedupe_MM_list AS (SELECT distinct executive_eid, executive_name, org_name, role_title, account_id FROM accountlist1 WHERE role_title IN ( 'Market Account Executive, Mid-Market')  ORDER BY org_name ,account_id);",Account_Dashboard_BT_MI.sas
" CREATE TABLE AP_MM_PRODUCTION AS select a.stay_year, a.stay_pd_mo, a.prop_code, a.brand_code, d.account_name, a.goal_account_id, a.rn, a.local_rev, a.usd_rev, b.executive_eid, b.executive_name, b.role_title, c.deployed_org AS prp_org label=""Property_Org"", c.geo_org label=""Property_Geographic_Org"", b.org_name AS mgr_org_name label=""Manager_Assigned_Org"" FROM MidMarket_w_PropDetail a INNER JOIN dedupe_MM_list b ON a.goal_account_id=b.account_id INNER JOIN prop c ON a.prop_code=c.marsha INNER JOIN acctnames d ON CAST( d.account_id AS INT )=a.goal_account_id ORDER BY a.goal_account_id, a.prop_code ;",Account_Dashboard_BT_MI.sas
CREATE TABLE AP_AS_MM_Production AS (SELECT * FROM AP_MM_Production ORDER BY prop_code);,Account_Dashboard_BT_MI.sas
"CREATE TABLE MidMarket_DataCheck AS (SELECT mgr_org_name, executive_eid, goal_account_id, SUM(rn) AS rn, SUM(usd_rev) AS usd_rev FROM AP_AS_MM_Production GROUP BY mgr_org_name, executive_eid, goal_account_id );",Account_Dashboard_BT_MI.sas
" CREATE TABLE ACCTPROD_WH_PROPDETAIL AS select b.deployed_org, b.geo_org, a.stay_year, a.stay_pd_mo, a.prop_code, a.brand_code, b.domint, b.country_cd AS prop_country, goal_account_id, SUM( a.rn) AS rn, SUM( a.local_rev) AS local_rev, SUM( a.usd_rev) AS usd_rev FROM MRDW_Wholesale a INNER JOIN Prop b ON a.prop_code=b.marsha GROUP BY b.deployed_org, b.geo_org, a.stay_year, a.stay_pd_mo, a.prop_code, a.brand_code, b.domint, b.country_cd, a.goal_account_id ;",Account_Dashboard_BT_MI.sas
" CREATE TABLE AP_MINUS_MM_PROSPECT AS SELECT A.STAY_YEAR, A.STAY_PD_MO, A.PROP_CODE, A.BRAND_CODE, B.ACCOUNT_NAME, LTRIM( CAST( A.GOAL_ACCOUNT_ID AS INT )) AS GOAL_ACCOUNT_ID, A.RN, A.LOCAL_REV, A.USD_REV, B.EXECUTIVE_EID, B.EXECUTIVE_NAME, B.ROLE_TITLE, A.DEPLOYED_ORG AS PRP_ORG LABEL=""Property_Org"", A.GEO_ORG LABEL=""Property_Geographic_Org"", A.DEPLOYED_ORG AS MGR_ORG_NAME LABEL=""Manager_Assigned_Org"" FROM ACCTPROD_W_PROPDETAIL A INNER JOIN ( SELECT * FROM ACCTLIST_NOWH WHERE EXECUTIVE_EID IS NOT NULL) B ON A.DEPLOYED_ORG=B.ORG_NAME AND A.GOAL_ACCOUNT_ID=CAST( B.ACCOUNT_ID AS INT ) UNION ALL SELECT A.STAY_YEAR, A.STAY_PD_MO, A.PROP_CODE, A.BRAND_CODE, B.ACCOUNT_NAME, A.GOAL_ACCOUNT_ID, A.RN, A.LOCAL_REV, A.USD_REV, B.EXECUTIVE_EID, B.EXECUTIVE_NAME, B.ROLE_TITLE, A.DEPLOYED_ORG AS PRP_ORG LABEL=""Property_Org"", A.GEO_ORG LABEL=""Property_Geographic_Org"", A.DEPLOYED_ORG AS MGR_ORG_NAME LABEL=""Manager_Assigned_Org"" FROM ACCTPROD_WH_PROPDETAIL A INNER JOIN ( SELECT * FROM ACCTLIST_WH WHERE EXECUTIVE_EID IS NOT NULL) B ON A.DEPLOYED_ORG=B.ORG_NAME AND A.GOAL_ACCOUNT_ID=B.ACCOUNT_ID ;",Account_Dashboard_BT_MI.sas
" CREATE TABLE ALL_MI_AP_DATA AS SELECT STAY_YEAR, STAY_PD_MO, PROP_CODE AS MARSHA, BRAND_CODE, ACCOUNT_NAME, GOAL_ACCOUNT_ID, RN, LOCAL_REV, USD_REV, EXECUTIVE_EID, EXECUTIVE_NAME, ROLE_TITLE, PRP_ORG LABEL=""Property_Org"", GEO_ORG LABEL=""Property_Geographic_Org"", MGR_ORG_NAME LABEL=""Manager_Assigned_Org"", CASE WHEN PRP_ORG=MGR_ORG_NAME THEN ""N"" ELSE ""Y"" END AS OUTBOUND FROM AP_MINUS_MM_PROSPECT UNION ALL SELECT STAY_YEAR, STAY_PD_MO, PROP_CODE AS MARSHA, BRAND_CODE, ACCOUNT_NAME, LTRIM( CAST( GOAL_ACCOUNT_ID AS VARCHAR(10) )) AS GOAL_ACCOUNT_ID, RN, LOCAL_REV, USD_REV, EXECUTIVE_EID, EXECUTIVE_NAME, ROLE_TITLE, PRP_ORG LABEL=""Property_Org"", GEO_ORG LABEL=""Property_Geographic_Org"", MGR_ORG_NAME LABEL=""Manager_Assigned_Org"", CASE WHEN PRP_ORG=MGR_ORG_NAME THEN ""N"" ELSE ""Y"" END AS OUTBOUND FROM AP_AS_MM_PRODUCTION ;",Account_Dashboard_BT_MI.sas
" CREATE TABLE CAD_CONVERSION_TABLE AS  ( SELECT CURRENCY_EXCH_DT, EXTRACT( YEAR FROM CURRENCY_EXCH_DT) AS YEAR, EXTRACT( MONTH FROM CURRENCY_EXCH_DT) AS MONTH, CURRENCY_EXCH_RTE, FROM_CURRENCY_CD, TO_CURRENCY_CD FROM EDW_DIM_CURRENCY WHERE CURRENCY_EXCH_DT >= &STRT_YR. AND FROM_CURRENCY_CD = 'CAD' ORDER BY CURRENCY_EXCH_DT DESC, YEAR DESC, MONTH DESC  ) ;",Account_Dashboard_BT_MI.sas
" CREATE TABLE CAD_CONVERSION_LAST_REC AS ( SELECT   * , FIRST(MONTH) OVER ( PARTITION BY MONTH GROUP BY DESC , YEAR , DESC , MONTH ORDER BY DESC , YEAR , DESC , MONTH )  FROM CAD_CONVERSION_TABLE );",Account_Dashboard_BT_MI.sas
"CREATE TABLE CAN_INBOUND AS ( SELECT  *, LOCAL_REV AS ROOM_REV FROM ALL_MI_AP_DATA  WHERE MGR_ORG_NAME='Canada' AND OUTBOUND='N');",Account_Dashboard_BT_MI.sas
ALTER TABLE CAN_INBOUND DROP COLUMN USD_REV ;,Account_Dashboard_BT_MI.sas
"CREATE TABLE CAN_OTBND_IN_CNTRY AS ( SELECT  *, LOCAL_REV AS ROOM_REV FROM ALL_MI_AP_DATA  WHERE MGR_ORG_NAME='Canada' AND OUTBOUND='Y' AND GEO_ORG='Canada');",Account_Dashboard_BT_MI.sas
ALTER TABLE CAN_OTBND_IN_CNTRY DROP COLUMN USD_REV ;,Account_Dashboard_BT_MI.sas
CREATE TABLE CAN_OUTBOUND AS ( SELECT  *  FROM ALL_MI_AP_DATA  WHERE MGR_ORG_NAME='Canada' AND OUTBOUND='Y' AND GEO_ORG<>'Canada');,Account_Dashboard_BT_MI.sas
"CREATE TABLE OTHER_MI_AP_DATA AS ( SELECT  *, USD_REV AS ROOM_REV FROM ALL_MI_AP_DATA  WHERE MGR_ORG_NAME<>'Canada' AND OUTBOUND<>'N');",Account_Dashboard_BT_MI.sas
ALTER TABLE OTHER_MI_AP_DATA DROP COLUMN LOCAL_REV ;,Account_Dashboard_BT_MI.sas
" CREATE TABLE CAN_OTBND_CONVERT AS SELECT A.STAY_YEAR, A.STAY_PD_MO, A.MARSHA, A.BRAND_CODE, A.ACCOUNT_NAME, A.GOAL_ACCOUNT_ID, A.RN, A.USD_REV/B.CURRENCY_EXCH_RTE AS ROOM_REV FORMAT=BEST12., A.EXECUTIVE_EID, A.EXECUTIVE_NAME, A.ROLE_TITLE, A.PRP_ORG LABEL=""Property_Org"", A.GEO_ORG LABEL=""Property_Geographic_Org"", A.MGR_ORG_NAME LABEL=""Manager_Assigned_Org"", A.OUTBOUND FROM CAN_OUTBOUND A INNER JOIN CAD_CONVERSION_LAST_REC B ON A.STAY_YEAR=B.YEAR AND A.STAY_PD_MO=B.MONTH ;",Account_Dashboard_BT_MI.sas
 CREATE TABLE ACCTDASH.FINAL_AP_CONVERTED AS ( SELECT  *  FROM CAN_INBOUND UNION ALL SELECT  *  FROM CAN_OTBND_IN_CNTRY UNION ALL SELECT  *  FROM CAN_OTBND_CONVERT UNION ALL SELECT  *  FROM OTHER_MI_AP_DATA);,Account_Dashboard_BT_MI.sas
" CREATE TABLE CURR_ACCT_LIST AS ( SELECT  * , CASE WHEN  SPLIT_ASGN_ID=""""  THEN COMPANY_ID ELSE SPLIT_ASGN_ID END AS TOTAL_PACE_ID FROM CURR_ACCT_LIST1 );",Account_Dash_Sources.sas
"CREATE TABLE ACCT_LIST_DEDUPE AS (SELECT DISTINCT TOTAL_PACE_ID, COMPANY_ID, BOOKING_YR, ORG_NAME, EXECUTIVE_EID, COMPANY_NAME FROM CURR_ACCT_LIST ORDER BY TOTAL_PACE_ID ,COMPANY_ID ,COMPANY_NAME);",Account_Dash_Sources.sas
CREATE TABLE CURR_ACCT_LIST_P AS ( SELECT  *  FROM CURR_ACCT_LIST  WHERE GOAL_TYPE='P');,Account_Dash_Sources.sas
CREATE TABLE CURR_ACCT_LIST_AP AS ( SELECT  *  FROM CURR_ACCT_LIST  WHERE GOAL_TYPE='A');,Account_Dash_Sources.sas
"CREATE TABLE ACCT_LIST_PACE AS (SELECT TOTAL_PACE_ID, COMPANY_ID, BOOKING_YR, ORG_NAME, EXECUTIVE_EID, EXECUTIVE_NAME, ROLE_TITLE, COMPANY_NAME FROM CURR_ACCT_LIST_P ORDER BY TOTAL_PACE_ID);",Account_Dash_Sources.sas
"CREATE TABLE ACCT_LIST_AP AS (SELECT TOTAL_PACE_ID, COMPANY_ID, BOOKING_YR, ORG_NAME, EXECUTIVE_EID, EXECUTIVE_NAME, ROLE_TITLE, COMPANY_NAME FROM CURR_ACCT_LIST_AP ORDER BY TOTAL_PACE_ID ,ORG_NAME);",Account_Dash_Sources.sas
" CREATE TABLE ACS_ROSTER1 AS  ( SELECT ORG_NAME AS ORGANIZATION, MARKET_NAME AS MARKET, AREA_NAME AS AREA, ALT_ROLE_TITLE AS ROLE, UPPER( TEAM_MEMBER_EID) AS EID, FULL_NAME AS NAME, UPPER( AREA_SUB_LEADER_EID) AS AREA_SUB_LEADER_EID, UPPER( AREA_LEADER_EID) AS AREA_LEADER_EID, UPPER( SR_MAE_EID) AS SR_MAE_EID, UPPER( MKT_LEADER_EID) AS MKT_LEADER_EID FROM VISIBILITY_HIERARCHY_VW WHERE TEAM_MEMBER_EID IS NOT NULL AND STATUS NOT IN ( 'FUTURE') AND START_DATE<=%NRBQUOTE( ')&END_DT%NRBQUOTE( ')AND END_DATE>=%NRBQUOTE( ')&END_DT%NRBQUOTE( ') AND UPPER( ALT_ROLE_TITLE) NOT IN ( 'ORG VP','MARKET ACCOUNT EXECUTIVE LEADER', 'SR. MARKET ACCOUNT EXECUTIVE','MARKET SALES LEADER','AREA SALES LEADER', 'AREA SALES SUB LEADER')  ) ;",Account_Dash_Sources.sas
 CREATE TABLE PLU AS  ( SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER_HIST WHERE OPENFLAG='Y' AND asof_yrmo=&curyrpd.  )  ;,Account_Dash_Sources.sas
 CREATE TABLE QD AS ( SELECT  *  FROM ACDASHQD.QD_Deployed UNION ALL SELECT  *  FROM ACDASHQD.QD_Whls);,Account_Dash_Sources.sas
 CREATE TABLE AP_TOTAL AS ( SELECT  *  FROM BTPROD.FINAL_AP_CONVERTED );,Account_Dash_Sources.sas
" CREATE TABLE AP AS SELECT STAY_YEAR AS REPORT_YEAR, STAY_PD_MO AS REPORT_MONTH, MARSHA AS MARSHA_CODE, ACCOUNT_NAME, GOAL_ACCOUNT_ID AS ACCOUNT_ID, EXECUTIVE_EID, ROLE_TITLE, PRP_ORG AS property_organization_name, mgr_org_name AS organization_name, CASE WHEN OUTBOUND='Y' THEN 'Outbound' WHEN OUTBOUND='N' THEN 'Inbound' END AS AP_INDICATOR, CASE WHEN OUTBOUND='N' THEN RN ELSE 0 END AS ap_inbound_roomnights, CASE WHEN OUTBOUND='Y' THEN RN ELSE 0 END AS ap_outbound_roomnights, CASE WHEN OUTBOUND='N' THEN ROOM_REV ELSE 0 END AS ap_inbound_room_revenue, CASE WHEN OUTBOUND='Y' THEN ROOM_REV ELSE 0 END AS ap_outbound_room_revenue, rn AS AP_ROOMNIGHTS, ROOM_REV AS AP_ROOM_REVENUE FROM AP_TOTAL;",Account_Dash_Sources.sas
 CREATE TABLE SOC AS  ( SELECT * FROM AW_SLS_PRD_AM.ACCT_DASH_SALES_ORGS_COORDINATES ) ;,Account_Dash_Sources.sas
" CREATE TABLE INDUSTRY AS  ( SELECT CLARITAS_ID AS ACCOUNT_ID, SITE_PRIMARY_INDUSTRY_NM AS INDUSTRY FROM AW_TGT_PROXY_DBO.SRW_LNK_CI_ACCOUNT WHERE dw_curr_ind =1 AND dw_active_ind='Y' AND Claritas_ID is not NULL AND Claritas_ID <> '0' AND SITE_PRIMARY_INDUSTRY_NM is not null ) ;",Account_Dash_Sources.sas
 CREATE TABLE DATE_RANGE AS  ( SELECT * FROM AW_SLS_PRD_AM.ACCT_DASH_DATE_RANGE )  ;,Account_Dash_Sources.sas
CREATE TABLE IND AS (SELECT DISTINCT * FROM INDUSTRY ORDER BY ACCOUNT_ID);,Account_Dash_Sources.sas
" CREATE TABLE COMPANY_NAMES AS SELECT A.BOOKING_YR, A.COMPANY_ID AS TOTAL_PACE_ID, B.COMPANY_NAME FROM CURR_ACCT_LIST A INNER JOIN ACCT_LIST_DEDUPE B ON A.COMPANY_ID=B.COMPANY_ID;",Account_Dash_Sources.sas
"CREATE TABLE COMPANY_LIST AS (SELECT DISTINCT BOOKING_YR, TOTAL_PACE_ID, COMPANY_NAME FROM COMPANY_NAMES ORDER BY BOOKING_YR ,TOTAL_PACE_ID);",Account_Dash_Sources.sas
" CREATE TABLE AS_Roster_wLeadership AS  ( select a.year, a.month, CASE WHEN a.organization = 'HQBSO' THEN 'East Northeast' when a.organization = 'HQWSO' THEN 'West Southwest' when a.organization = 'MARSO' THEN 'Mid Atlantic' when a.organization = 'SSESO' THEN 'South Southeast' when a.organization = 'CNWSO' THEN 'Northern Mid-America' when a.organization = 'SFLSO' THEN 'Florida' when a.organization = 'WMPSO' THEN 'Western Mountain Pacific' when a.organization = 'WSCSO' THEN 'West South Central' when a.organization = 'CANSO' THEN 'Canada' END AS Organization, a.position, upper( a.eid) AS mgr_eid, a.fullname AS mgr_name, '' AS ASL_Name, '' AS ASL_EID, '' AS MSL_Name, '' AS MSL_EID, f.FullName AS Acct_Sales_Ldr_Name, upper( f.eid) AS Acct_Sales_Ldr_EID, e.FullName AS Segment_Leader_Name, upper( e.eid) AS Segment_Leader_EID, c.FullName AS VP_Name, upper( c.eid) AS vp_eid FROM ( select * FROM ASroster WHERE ActiveStatus='Y') a INNER JOIN ASTeamRole b ON a.year=b.year AND a.month=b.month AND a.organization=b.organization AND a.roleid=b.roleid LEFT JOIN ( select distinct eid, fullname FROM ASRoster WHERE month=&shortpd. ) c ON ( b.VPEID=c.eid) LEFT JOIN ( select distinct eid, fullname FROM ASRoster WHERE month=&shortpd. ) e ON ( b.SegmentLeaderEID=e.eid AND b.NatlLocal='Natl') LEFT JOIN ( select distinct eid, fullname FROM ASRoster WHERE month=&shortpd. ) f ON ( b.TeamLeaderEID=f.eid AND b.NatlLocal='Natl') WHERE a.month=&shortpd. AND a.year=&curyr.  ) ;",Account_Dash_Sources.sas
" CREATE TABLE LOC_SALES_ROSTER AS  ( select a.year, a.month, CASE WHEN a.EBCCODENAME='MARSO' THEN 'Mid Atlantic' WHEN a.EBCCODENAME='CNWSO' THEN 'Northern Mid-America' WHEN a.EBCCODENAME='WMPSO' THEN 'Western Mountain Pacific' WHEN a.EBCCODENAME='HQBSO' THEN 'East Northeast' WHEN a.EBCCODENAME='HQWSO' THEN 'West Southwest' WHEN a.EBCCODENAME='SSESO' THEN 'South Southeast' WHEN a.EBCCODENAME='SFLSO' THEN 'Florida' WHEN a.EBCCODENAME='WSCSO' THEN 'West South Central' END AS Organization, CASE WHEN a.position = 'Account Executive, Affinity' THEN 'Area Account Executive, Affinity' when a.position = 'Account Executive, Government' THEN 'Area Account Executive, Government' when a.position IN ( 'Sales Executive Group', 'Sales Executive Transient') THEN 'Sales Executive' ELSE a.position END AS position, upper( a.eid) AS mgr_eid, a.fullname AS mgr_name, upper( B.EID) AS ASL_EID, b.fullname AS ASL_NAME, upper( c.eid) AS MSL_EID, c.fullname AS MSL_NAME, '' AS ACCT_SALES_LDR_EID, '' AS ACCT_SALES_LDR_NAME, '' AS SEGMENT_LEADER_EID, '' AS SEGMENT_LEADER_NAME, upper( d.eid) AS VP_EID, d.fullname AS VP_Name FROM AreaSalesRoster a LEFT JOIN ( SELECT * FROM AreaSalesRoster WHERE position IN ( 'Area Sales Leader') AND YEAR=&curyr. ) B ON UPPER( A.SUPVEID)=UPPER( B.EID) AND A.MONTH=B.MONTH LEFT JOIN ( SELECT * FROM AreaSalesRoster WHERE position IN ( 'Area Director of Sales') AND YEAR=&curyr. ) C ON ( UPPER( B.SUPVEID)=UPPER( C.EID) OR UPPER( A.SUPVEID)=UPPER( C.EID)) AND A.MONTH=C.MONTH LEFT JOIN ( SELECT * FROM AreaSalesRoster WHERE position IN ( 'Vice President of Sales', 'ORG VP') AND YEAR=&curyr. ) D ON UPPER( C.SUPVEID)=UPPER( D.EID) AND A.MONTH=D.MONTH WHERE a.year=&curyr. AND a.month=&shortpd. AND a.position not IN ( 'Area Sales Leader','Area Director of Sales','Vice President of Sales','ORG VP') ORDER BY organization, a.eid  ) ;",Account_Dash_Sources.sas
" CREATE TABLE COMBINED_ROSTER AS ( SELECT  *  , FORMAT(ASL_EID, VARCHAR(50)) AS ASL_EID , FORMAT(MSL_EID, VARCHAR(50)) AS MSL_EID , FORMAT(ASL_NAME, VARCHAR(250)) AS ASL_NAME , FORMAT(MSL_NAME, VARCHAR(250)) AS MSL_NAME  FROM AS_ROSTER_WLEADERSHIP UNION ALL SELECT  *  , FORMAT(ASL_EID, VARCHAR(50)) AS ASL_EID , FORMAT(MSL_EID, VARCHAR(50)) AS MSL_EID , FORMAT(ASL_NAME, VARCHAR(250)) AS ASL_NAME , FORMAT(MSL_NAME, VARCHAR(250)) AS MSL_NAME  FROM LOC_SALES_ROSTER);",Account_Dash_Sources.sas
" CREATE TABLE ACS_ROSTER AS SELECT &SHORTPD AS MONTH, A.ORGANIZATION, A.MARKET, A.AREA, A.EID, propcase( A.NAME) AS NAME, A.ROLE, B.ASL_EID AS AREA_SALES_LDR_EID, B.ASL_NAME AS AREA_SALES_LDR_NAME, B.MSL_EID AS MARKET_SALES_LDR_EID, B.MSL_NAME AS MARKET_SALES_LDR_NAME, B.ACCT_SALES_LDR_EID AS ACCOUNT_SALES_LDR_EID, B.ACCT_SALES_LDR_NAME AS ACCOUNT_SALES_LDR_NAME, B.SEGMENT_LEADER_EID, B.SEGMENT_LEADER_NAME, B.VP_EID, B.VP_NAME FROM ACS_ROSTER1 A LEFT JOIN COMBINED_ROSTER B ON A.ORGANIZATION=B.ORGANIZATION AND A.EID=B.MGR_EID ;",Account_Dash_Sources.sas
" CREATE TABLE Account_Sales AS SELECT DISTINCT ACS02.EID, ACS02.ORGANIZATION, COALESCE( ACS02.MARKET, 'Market Deployed') AS MARKET, COALESCE( ACS02.AREA, 'Market Deployed') AS AREA, ACS02.NAME, ACS02.ROLE, ACS02.ACCOUNT_SALES_LDR_NAME AS MSL_SRMAE, ACS02.Segment_Leader_Name AS ASL, VP_Name FROM ACS_ROSTER AS ACS02 WHERE ACS02.ROLE IN ( 'Market Account Executive, Airline','Market Account Executive, Prospect', 'Market Account Executive, EST', 'Market Account Executive, Association', 'Market Account Executive, Whsale/FIT/Tour & Travel', 'Market Account Executive, Mid-Market') AND ACS02.ORGANIZATION <> 'Canada' GROUP BY ACS02.EID, ACS02.ORGANIZATION, ACS02.MARKET, ACS02.AREA, ACS02.NAME, MSL_SRMAE, ASL, ACS02.ROLE;",Account_Dash_Sources.sas
" CREATE TABLE Local_Sales AS SELECT DISTINCT ACS02.EID, ACS02.ORGANIZATION, COALESCE( ACS02.MARKET, 'Market Deployed') AS MARKET, COALESCE( ACS02.AREA, 'Market Deployed') AS AREA, ACS02.NAME, ACS02.ROLE, ACS02.AREA_SALES_LDR_NAME AS MSL_SRMAE, ACS02.MARKET_SALES_LDR_NAME AS ASL, VP_Name FROM ACS_ROSTER AS ACS02 WHERE ACS02.ROLE IN ( 'Area Account Executive, Affinity', 'Area Account Executive, Government', 'Sales Executive') AND ACS02.ORGANIZATION <> 'Canada' GROUP BY ACS02.EID, ACS02.ORGANIZATION, ACS02.MARKET, ACS02.AREA, ACS02.NAME, MSL_SRMAE, ASL, ACS02.ROLE;",Account_Dash_Sources.sas
" CREATE TABLE Canada_Sales AS SELECT DISTINCT ACS02.EID, ACS02.ORGANIZATION, COALESCE( ACS02.MARKET, 'Market Deployed') AS MARKET, COALESCE( ACS02.AREA, 'Market Deployed') AS AREA, ACS02.NAME, ACS02.ROLE, ACS02.ACCOUNT_SALES_LDR_NAME AS MSL_SRMAE, ACS02.Segment_Leader_Name AS ASL, VP_Name FROM ACS_ROSTER AS ACS02 WHERE ACS02.ORGANIZATION = 'Canada' GROUP BY ACS02.EID, ACS02.ORGANIZATION, ACS02.MARKET, ACS02.AREA, ACS02.NAME, MSL_SRMAE, ASL, ACS02.ROLE;",Account_Dash_Sources.sas
 CREATE TABLE leader_roll AS ( SELECT  *  FROM Account_Sales UNION ALL SELECT  *  FROM Local_Sales UNION ALL SELECT  *  FROM Canada_sales);,Account_Dash_Sources.sas
" CREATE TABLE MadMktShr AS  (  select a.MARSHA_cd AS marsha, TIER, company_nm AS coname , COMRN_TY AS RNTY_PD, comrvlocal_ty AS RVTY_PD, COMRN_LY AS RNLY_PD, comrvlocal_ly AS RVLY_PD , sprt_local_ty AS SPRT, prrt_local_ty AS PRRT, COMRN_TY AS SPRN, disc_local_ty AS DISC , COMRN_LY AS SPRNLY, disc_local_ly AS DISCLY , sprt_local_ly AS SPRTY_LY, dh_rev_local_ty AS DHRV , CASE WHEN sav_local_ty > 0 THEN net_rev_local_ty/sav_local_ty ELSE 0 END AS VR_TY , CASE WHEN sav_local_ly > 0 THEN net_rev_local_ly/sav_local_ly ELSE 0 END AS cVR_LY FROM mrdw_fact_act_prop_dtls AS a WHERE tier not IN ( 'CONTR', 'Ecommerce', 'GOVT', 'QUAL') AND year_id=2019 AND month_id=9 )  ;",ACT_MAMS_full_procedure.sas
" CREATE TABLE MadMktShr1 AS select a.marsha, a.coname, a.tier, a.VR_TY, a.SPRN, a.RNTY_PD, a.SPRN/( &WD_YTD) AS avg, ROUND( ( a.SPRN/( &WD_YTD)),0.1) AS rnd_avg FROM MadMktShr a ORDER BY a.marsha, a.coname, a.tier, a.VR_TY, a.SPRN, a.RNTY_PD ;",ACT_MAMS_full_procedure.sas
" CREATE TABLE MadMktShr2 AS select a.marsha, a.coname, a.tier, a.VR_TY, a.SPRN, a.RNTY_PD, a.avg, a.rnd_avg , CASE WHEN a.avg<a.rnd_avg THEN a.rnd_avg-0.1 ELSE a.rnd_avg END AS rn1 , CASE WHEN a.avg<a.rnd_avg THEN a.rnd_avg ELSE a.rnd_avg+0.1 END AS rn2 FROM MadMktShr1 a ORDER BY a.marsha, a.coname, a.tier, a.VR_TY, a.SPRN, a.RNTY_PD, a.avg, a.rnd_avg ;",ACT_MAMS_full_procedure.sas
" CREATE TABLE MadMktShr3 AS select a.marsha, a.coname, a.tier, a.VR_TY, a.SPRN, a.RNTY_PD, a.avg, a.rnd_avg, a.rn1, a.rn2, b.lo AS lo1, b.hi AS hi1 FROM MadMktShr2 a LEFT JOIN regression AS b ON ROUND( a.rn1,0.1)=ROUND( b.rn,0.1) ORDER BY a.marsha, a.coname, a.tier, a.VR_TY, a.SPRN, a.RNTY_PD, a.avg, a.rnd_avg, a.rn1, a.rn2, lo1, hi1 ;",ACT_MAMS_full_procedure.sas
" CREATE TABLE MadMktShr4 AS select a.marsha, a.coname, a.tier, a.VR_TY, a.SPRN, a.RNTY_PD AS RNTY_YTD, a.avg, a.rnd_avg, a.rn1, a.rn2, a.lo1, a.hi1, b.lo AS lo2, b.hi AS hi2 , CASE WHEN ( a.lo1-b.lo)/( a.rn1-a.rn2)=0 THEN a.lo1 ELSE ( a.lo1+( a.rn1-a.avg)/( ( a.lo1-b.lo)/( a.rn1-a.rn2))) END AS low , CASE WHEN ( a.hi1-b.hi)/( a.rn1-a.rn2)=0 THEN a.hi1 ELSE ( a.hi1+( a.rn1-a.avg)/( ( a.hi1-b.hi)/( a.rn1-a.rn2))) END AS high FROM MadMktShr3 a LEFT JOIN regression AS b ON ROUND( a.rn2,0.1)=ROUND( b.rn,0.1) ORDER BY a.marsha, a.coname, a.tier, a.VR_TY, a.SPRN, RNTY_YTD, a.avg, a.rnd_avg, a.rn1, a.rn2, a.lo1, lo2, a.hi1, hi2 ;",ACT_MAMS_full_procedure.sas
" CREATE TABLE MadMktShr5 AS select marsha, coname, tier, RNTY_YTD , CASE WHEN VR_TY < low THEN 3 when VR_TY >= high THEN 1 ELSE 2 END AS level FROM MadMktShr4 WHERE tier not IN ( '' 'GOVT' 'TIER') ORDER BY marsha, coname, tier, RNTY_YTD, level ;",ACT_MAMS_full_procedure.sas
" CREATE TABLE mams.actdata AS select marsha, SUM( RNTY_YTD) AS rn, SUM( RNTY_YTD*level)/SUM( RNTY_YTD) AS avg_level FROM MadMktShr5 GROUP BY marsha;",ACT_MAMS_full_procedure.sas
 CREATE TABLE esf.actdata AS ( SELECT  *  FROM mams.actdata );,ACT_MAMS_full_procedure.sas
" CREATE TABLE PROPERTIES AS SELECT A.MARSHA, A.PEOPLESOFT_ID, CASE WHEN A.MARSHA IN ( 'BOBXR','BOBMD') THEN 'XPF' ELSE A.CURR END AS CURRENCY FROM AWPROD.PROPERTY_MASTER_HIST A WHERE A.ASOF_YRMO=&CURYRPD. AND A.OPENFLAG='Y' ORDER BY A.MARSHA ;",Americas_01_Hotel_Acct_MA_SA_ID.sas
" CREATE TABLE TOT_REVTY_BUD_HA_PRE AS  ( SELECT A.CHARTFIELD1, A.DEPTID, A.MI_SA_ID, A.OPERATING_UNIT, A.FISCAL_YEAR, A.ACCOUNTING_PERIOD, A.ACCOUNT, A.PRODUCT, A.BASE_CURRENCY, SUM( A.POSTED_TOTAL_AMT) AS SUM_A_POSTED_TOTAL_AMT_ FROM PS_MI_SA_LED_F00 A WHERE LEDGER = 'S_BUDAP' AND CHARTFIELD1 IN ( '16', '1L', '14', '1M', '60', '1B', '1F', 'BF', '09', '1H', '08', '1K', '29', '1B', '1B', '1Q', '1N', '2F', '29', '42', '1G', '1T', '84', '1D', '1R', '05', '1J', '1K', '1V', '19','20','21','26','27','31','33','34','39','43','47','56','57','58','61','64','65','68','73','93', '96','97') AND FISCAL_YEAR = &YearC AND MI_SA_ID IN ( 'PR_ROOM_SALES') AND ( BASE_CURRENCY = CURRENCY_CD OR CURRENCY_CD = ' ') AND A.FISCAL_YEAR = &year GROUP BY A.CHARTFIELD1, A.DEPTID, A.MI_SA_ID, A.OPERATING_UNIT, A.FISCAL_YEAR, A.ACCOUNTING_PERIOD, A.ACCOUNT, A.PRODUCT, A.BASE_CURRENCY ORDER BY A.CHARTFIELD1 ASC, A.ACCOUNTING_PERIOD DESC  ) ;",Americas_01_Hotel_Acct_MA_SA_ID.sas
" CREATE TABLE &DEST2..TOT_REVTY_BUD_HA AS SELECT A.CHARTFIELD1, A.DEPTID, A.MI_SA_ID, A.OPERATING_UNIT, A.FISCAL_YEAR, A.ACCOUNTING_PERIOD, A.ACCOUNT, A.PRODUCT, SUM( A.SUM_A_POSTED_TOTAL_AMT_) AS SUM_A_POSTED_TOTAL_AMT_ FROM TOT_REVTY_BUD_HA_PRE A INNER JOIN PROPERTIES B ON A.OPERATING_UNIT=B.PEOPLESOFT_ID AND A.BASE_CURRENCY=B.CURRENCY GROUP BY A.CHARTFIELD1, A.DEPTID, A.MI_SA_ID, A.OPERATING_UNIT, A.FISCAL_YEAR, A.ACCOUNTING_PERIOD, A.ACCOUNT, A.PRODUCT ;",Americas_01_Hotel_Acct_MA_SA_ID.sas
" CREATE TABLE TOT_REVTY_ACT_HA_PRE AS  ( SELECT A.CHARTFIELD1, A.DEPTID, A.MI_SA_ID, A.OPERATING_UNIT, A.FISCAL_YEAR, A.ACCOUNTING_PERIOD, A.ACCOUNT, A.PRODUCT, A.BASE_CURRENCY, SUM( A.POSTED_TOTAL_AMT) AS SUM_A_POSTED_TOTAL_AMT_ FROM PS_MI_SA_LED_F00 A WHERE LEDGER = 'S_ACTAP' AND CHARTFIELD1 IN ( '16', '1L', '14', '1M', '60', '1B', '1F', 'BF', '09', '1H', '08', '1K', '29', '1B', '1B', '1Q', '1N', '2F', '29', '42', '1G', '1T', '84', '1D', '1R', '05', '1J', '1K', '1V', '19','20','21','26','27','31','33','34','39','43','47','56','57','58','61','64','65','68','73','93', '96','97') AND FISCAL_YEAR = &YearC AND MI_SA_ID IN ( 'PR_ROOM_SALES') AND ( BASE_CURRENCY = CURRENCY_CD OR CURRENCY_CD = ' ') AND A.FISCAL_YEAR = &year GROUP BY A.CHARTFIELD1, A.DEPTID, A.MI_SA_ID, A.OPERATING_UNIT, A.FISCAL_YEAR, A.ACCOUNTING_PERIOD, A.ACCOUNT, A.PRODUCT, A.BASE_CURRENCY ORDER BY A.CHARTFIELD1 ASC, A.ACCOUNTING_PERIOD DESC  ) ;",Americas_01_Hotel_Acct_MA_SA_ID.sas
" CREATE TABLE &DEST2..TOT_REVTY_ACT_HA AS SELECT A.CHARTFIELD1, A.DEPTID, A.MI_SA_ID, A.OPERATING_UNIT, A.FISCAL_YEAR, A.ACCOUNTING_PERIOD, A.ACCOUNT, A.PRODUCT, SUM( A.SUM_A_POSTED_TOTAL_AMT_) AS SUM_A_POSTED_TOTAL_AMT_ FROM TOT_REVTY_ACT_HA_PRE A INNER JOIN PROPERTIES B ON A.OPERATING_UNIT=B.PEOPLESOFT_ID AND A.BASE_CURRENCY=B.CURRENCY GROUP BY A.CHARTFIELD1, A.DEPTID, A.MI_SA_ID, A.OPERATING_UNIT, A.FISCAL_YEAR, A.ACCOUNTING_PERIOD, A.ACCOUNT, A.PRODUCT ;",Americas_01_Hotel_Acct_MA_SA_ID.sas
" CREATE TABLE Flat_Dept_Tree AS  ( SELECT T1.TREE_NAME, T1.TREE_NODE PARENT_NODE, T2.TREE_NODE CHILD_NODE, D.DEPTID DETAIL_VALUE, D.DESCR DETAIL_DESCR FROM PS_DEPARTMENT_TBL D , PSTREENODE T1 , PSTREENODE T2 , PSTREELEAF L WHERE T1.TREE_NAME = 'FULLSRV_DEPARTMENT' AND T1.SETID = 'MIDIV' AND T1.EFFDT = TO_DATE( '01-OCT-2013', 'DD-MON-YYYY') AND T2.SETID = T1.SETID AND T2.TREE_NAME = T1.TREE_NAME AND T2.EFFDT = T1.EFFDT AND T2.TREE_NODE_NUM BETWEEN T1.TREE_NODE_NUM AND T1.TREE_NODE_NUM_END AND L.SETID = T2.SETID AND L.TREE_NAME = T2.TREE_NAME AND L.EFFDT = T2.EFFDT AND L.TREE_NODE_NUM = T2.TREE_NODE_NUM AND D.SETID = L.SETID AND D.DEPTID BETWEEN L.RANGE_FROM AND L.RANGE_TO AND D.EFFDT = ( SELECT MAX( EFFDT) FROM PS_DEPARTMENT_TBL WHERE SETID = D.SETID AND DEPTID = D.DEPTID AND EFFDT <= SYSDATE) ORDER BY T1.TREE_NODE_NUM, T2.TREE_NODE_NUM  ) ;",Americas_03_EPM_Catering_HotelAcct.sas
" CREATE TABLE Flat_Acct_Tree AS  ( SELECT T1.TREE_NAME, T1.TREE_NODE PARENT_NODE, T2.TREE_NODE CHILD_NODE, D.ACCOUNT DETAIL_VALUE, D.DESCR DETAIL_DESCR FROM PS_GL_ACCOUNT_TBL D , PSTREENODE T1 , PSTREENODE T2 , PSTREELEAF L WHERE T1.TREE_NAME = 'FULLSRV_ACCOUNT' AND T1.SETID = 'MIDIV' AND T1.EFFDT = TO_DATE( '01-JUL-2013', 'DD-MON-YYYY') AND T2.SETID = T1.SETID AND T2.TREE_NAME = T1.TREE_NAME AND T2.EFFDT = T1.EFFDT AND T2.TREE_NODE_NUM BETWEEN T1.TREE_NODE_NUM AND T1.TREE_NODE_NUM_END AND L.SETID = T2.SETID AND L.TREE_NAME = T2.TREE_NAME AND L.EFFDT = T2.EFFDT AND L.TREE_NODE_NUM = T2.TREE_NODE_NUM AND D.SETID = L.SETID AND D.ACCOUNT BETWEEN L.RANGE_FROM AND L.RANGE_TO AND D.EFFDT = ( SELECT MAX( EFFDT) FROM PS_GL_ACCOUNT_TBL WHERE SETID = D.SETID AND ACCOUNT = D.ACCOUNT AND EFFDT <= SYSDATE) ORDER BY T1.TREE_NODE_NUM, T2.TREE_NODE_NUM  ) ;",Americas_03_EPM_Catering_HotelAcct.sas
"CREATE TABLE Inc_Stat_Accts AS ( SELECT  *, DETAIL_VALUE AS ACCOUNT, DETAIL_DESCR AS ACCT_DESCR, CHILD_NODE AS SUB_CAT, PARENT_NODE AS CATEGORY FROM Flat_Acct_Tree );",Americas_03_EPM_Catering_HotelAcct.sas
"ALTER TABLE Inc_Stat_Accts DROP COLUMN TREE_NAME ,  CATEGORY ;",Americas_03_EPM_Catering_HotelAcct.sas
SELECT DISTINCT * FROM Inc_Stat_Accts ORDER BY account;,Americas_03_EPM_Catering_HotelAcct.sas
"CREATE TABLE Depts AS ( SELECT  *, DETAIL_VALUE AS DEPTID, DETAIL_DESCR AS DEPT_DESCR, CHILD_NODE AS SUB_CAT, PARENT_NODE AS CATEGORY FROM Flat_Dept_Tree  WHERE SUBSTRING( DEPTID,1,3)='023');",Americas_03_EPM_Catering_HotelAcct.sas
"ALTER TABLE Depts DROP COLUMN TREE_NAME ,  CATEGORY ;",Americas_03_EPM_Catering_HotelAcct.sas
SELECT DISTINCT * FROM Depts ORDER BY DEPTID;,Americas_03_EPM_Catering_HotelAcct.sas
" CREATE TABLE tempfb AS ( SELECT  *, _1_Jan AS M01, _2_Feb AS M02, _3_Mar AS M03, _4_Apr AS M04, _5_May AS M05, _6_Jun AS M06, _7_Jul AS M07, _8_Aug AS M08, _9_Sep AS M09, _0_Oct AS M10, _1_Nov AS M11, _2_Dec AS M12 FROM &DEST..EPM_act_F00_mgd_&curyr._FB UNION ALL SELECT  *, _1_Jan AS M01, _2_Feb AS M02, _3_Mar AS M03, _4_Apr AS M04, _5_May AS M05, _6_Jun AS M06, _7_Jul AS M07, _8_Aug AS M08, _9_Sep AS M09, _0_Oct AS M10, _1_Nov AS M11, _2_Dec AS M12 FROM &DEST..Epm_budrv_f00_mgd_fb WHERE SUBSTRING( account,1,1)='3');",Americas_03_EPM_Catering_HotelAcct.sas
SELECT * FROM tempfb ORDER BY DEPTID;,Americas_03_EPM_Catering_HotelAcct.sas
 CREATE TABLE tempfb_FS AS ( SELECT  *  FROM tempfb A INNER JOIN Depts B ON  A.DEPTID =  B.DEPTID);,Americas_03_EPM_Catering_HotelAcct.sas
SELECT * FROM tempfb_FS ORDER BY account;,Americas_03_EPM_Catering_HotelAcct.sas
" CREATE TABLE TEMPFB2_FS AS SELECT A.*, B.COUNTRY FROM tempfb_FS A INNER JOIN AWPROD.PROPERTY_MASTER_HIST B ON A.OPERATING_UNIT=B.PEOPLESOFT_ID AND B.ASOF_YRMO=&CURYRPD. AND B.OPENFLAG='Y' ORDER BY A.ACCOUNT ;",Americas_03_EPM_Catering_HotelAcct.sas
"CREATE TABLE tempfb_FS_Accts AS ( SELECT  * , CASE WHEN  DEPTID NOT IN( '0231','0232','0200','0201','0202','0203')  THEN 'Banquet Other' END AS DEPT_DESCR FROM tempfb2_FS A LEFT JOIN Inc_Stat_Accts B ON  A.account =  B.account WHERE SUBSTRING( account,1,1)='3' AND ledger<>'FORECAST' AND year=&curyr AND CHARTFIELD1 in( '19','31') AND COUNTRY='Canada' AND CURRENCY_CD='CAD' OR COUNTRY not IN ( 'Canada') AND CURRENCY_CD='USD');",Americas_03_EPM_Catering_HotelAcct.sas
ALTER TABLE tempfb_FS_Accts DROP COLUMN COUNTRY ;,Americas_03_EPM_Catering_HotelAcct.sas
"SELECT * FROM tempfb_FS_Accts ORDER BY OPERATING_UNIT ,CURRENCY_CD ,LEDGER;",Americas_03_EPM_Catering_HotelAcct.sas
"CREATE TABLE tempfb_sum AS (SELECT OPERATING_UNIT, CURRENCY_CD, LEDGER, SUM(M01) AS M01, SUM(M02) AS M02, SUM(M03) AS M03, SUM(M04) AS M04, SUM(M05) AS M05, SUM(M06) AS M06, SUM(M07) AS M07, SUM(M08) AS M08, SUM(M09) AS M09, SUM(M10) AS M10, SUM(M11) AS M11, SUM(M12) AS M12 FROM tempfb_FS_Accts GROUP BY OPERATING_UNIT, CURRENCY_CD, LEDGER );",Americas_03_EPM_Catering_HotelAcct.sas
"SELECT * FROM tempfb_sum ORDER BY OPERATING_UNIT ,DEPT_DESCR;",Americas_03_EPM_Catering_HotelAcct.sas
" CREATE TABLE tempfb_sum_trans AS ( SELECT  *  , ACTUALS*-1 AS ACTUALS , BUDGET*-1 AS BUDGET , SUBSTRING( _NAME_,2,2 ) AS name , CAST( name,best8.  ) AS monno , CASE WHEN  ACTUALS in( ' ' )  THEN 0 END AS ACTUALS, CASE WHEN  BUDGET in( ' ' )  THEN 0 END AS BUDGET, CASE WHEN  _NAME_='M01'  THEN 'JAN' WHEN   _NAME_='M02'  THEN 'FEB' WHEN   _NAME_='M03'  THEN 'MAR' WHEN   _NAME_='M04'  THEN 'APR' WHEN   _NAME_='M05'  THEN 'MAY' WHEN   _NAME_='M06'  THEN 'JUN' WHEN   _NAME_='M07'  THEN 'JUL' WHEN   _NAME_='M08'  THEN 'AUG' WHEN   _NAME_='M09'  THEN 'SEP' WHEN   _NAME_='M10'  THEN 'OCT' WHEN   _NAME_='M11'  THEN 'NOV' WHEN   _NAME_='M12'  THEN 'DEC' END AS Mon FROM tempfb_sum_trans  WHERE ACTUALS<>0 AND BUDGET<>0);",Americas_03_EPM_Catering_HotelAcct.sas
"SELECT * FROM tempfb_sum_trans ORDER BY OPERATING_UNIT ,Mon;",Americas_03_EPM_Catering_HotelAcct.sas
"CREATE TABLE tempfb_sum_final AS (SELECT OPERATING_UNIT, Mon, SUM(ACTUALS) AS ACTUALS, SUM(BUDGET) AS BUDGET FROM tempfb_sum_trans GROUP BY OPERATING_UNIT, Mon );",Americas_03_EPM_Catering_HotelAcct.sas
" CREATE TABLE TEMPFB2 AS SELECT A.*, B.COUNTRY FROM TEMPFB A INNER JOIN AWPROD.PROPERTY_MASTER_HIST B ON A.OPERATING_UNIT=B.PEOPLESOFT_ID AND B.ASOF_YRMO=&CURYRPD. AND B.OPENFLAG='Y' WHERE CHARTFIELD1 IN ( '19','31') ORDER BY A.ACCOUNT ;",Americas_03_EPM_Catering_HotelAcct.sas
" CREATE TABLE SHS_CY_CATERING AS ( SELECT  *  FROM TEMPFB2  WHERE CHARTFIELD1 IN ( '19','31') AND ACCOUNT IN ( '314017','314043','314042','314041','324049','360001','354001','390001') AND YEAR = &CURYR AND COUNTRY='Canada' AND CURRENCY_CD='CAD' OR COUNTRY not IN ( 'Canada') AND CURRENCY_CD='USD');",Americas_03_EPM_Catering_HotelAcct.sas
"SELECT * FROM SHS_CY_CATERING ORDER BY OPERATING_UNIT ,CURRENCY_CD ,LEDGER;",Americas_03_EPM_Catering_HotelAcct.sas
"CREATE TABLE SLCT_SRVC_CATERING AS (SELECT OPERATING_UNIT, CURRENCY_CD, LEDGER, SUM(M01) AS M01, SUM(M02) AS M02, SUM(M03) AS M03, SUM(M04) AS M04, SUM(M05) AS M05, SUM(M06) AS M06, SUM(M07) AS M07, SUM(M08) AS M08, SUM(M09) AS M09, SUM(M10) AS M10, SUM(M11) AS M11, SUM(M12) AS M12 FROM SHS_CY_CATERING GROUP BY OPERATING_UNIT, CURRENCY_CD, LEDGER );",Americas_03_EPM_Catering_HotelAcct.sas
SELECT * FROM SLCT_SRVC_CATERING ORDER BY OPERATING_UNIT;,Americas_03_EPM_Catering_HotelAcct.sas
" CREATE TABLE SLCT_SRVC_CATERING_TRANS AS ( SELECT  *  , ACTUALS*-1 AS ACTUALS , BUDGET*-1 AS BUDGET , SUBSTRING( _NAME_,2,2 ) AS name , CAST( name,best8.  ) AS monno , CASE WHEN  ACTUALS in( ' ' )  THEN 0 END AS ACTUALS, CASE WHEN  BUDGET in( ' ' )  THEN 0 END AS BUDGET, CASE WHEN  _NAME_='M01'  THEN 'JAN' WHEN   _NAME_='M02'  THEN 'FEB' WHEN   _NAME_='M03'  THEN 'MAR' WHEN   _NAME_='M04'  THEN 'APR' WHEN   _NAME_='M05'  THEN 'MAY' WHEN   _NAME_='M06'  THEN 'JUN' WHEN   _NAME_='M07'  THEN 'JUL' WHEN   _NAME_='M08'  THEN 'AUG' WHEN   _NAME_='M09'  THEN 'SEP' WHEN   _NAME_='M10'  THEN 'OCT' WHEN   _NAME_='M11'  THEN 'NOV' WHEN   _NAME_='M12'  THEN 'DEC' END AS Mon FROM SLCT_SRVC_CATERING_TRANS  WHERE ACTUALS<>0 AND BUDGET<>0);",Americas_03_EPM_Catering_HotelAcct.sas
"SELECT * FROM SLCT_SRVC_CATERING_TRANS ORDER BY OPERATING_UNIT ,Mon;",Americas_03_EPM_Catering_HotelAcct.sas
"CREATE TABLE SLCT_SRVC_CATERING_FINAL AS (SELECT OPERATING_UNIT, Mon, SUM(ACTUALS) AS ACTUALS, SUM(BUDGET) AS BUDGET FROM SLCT_SRVC_CATERING_TRANS GROUP BY OPERATING_UNIT, Mon );",Americas_03_EPM_Catering_HotelAcct.sas
" CREATE TABLE &DEST..NALOFB_final AS ( SELECT OPERATING_UNIT, Mon, ACTUALS AS BANQUET_REV_ACT, BUDGET AS BANQUET_REV_BUD FROM tempfb_sum_final UNION ALL SELECT OPERATING_UNIT, Mon, ACTUALS AS BANQUET_REV_ACT, BUDGET AS BANQUET_REV_BUD FROM SLCT_SRVC_CATERING_FINAL);",Americas_03_EPM_Catering_HotelAcct.sas
"SELECT * FROM &DEST..NALOFB_final ORDER BY OPERATING_UNIT ,Mon;",Americas_03_EPM_Catering_HotelAcct.sas
" CREATE TABLE Flat_Dept_Tree AS  ( SELECT T1.TREE_NAME, T1.TREE_NODE PARENT_NODE, T2.TREE_NODE CHILD_NODE, D.DEPTID DETAIL_VALUE, D.DESCR DETAIL_DESCR FROM PS_DEPARTMENT_TBL D , PSTREENODE T1 , PSTREENODE T2 , PSTREELEAF L WHERE T1.TREE_NAME = 'FULLSRV_DEPARTMENT' AND T1.SETID = 'MIDIV' AND T1.EFFDT = TO_DATE( '01-OCT-2013', 'DD-MON-YYYY') AND T2.SETID = T1.SETID AND T2.TREE_NAME = T1.TREE_NAME AND T2.EFFDT = T1.EFFDT AND T2.TREE_NODE_NUM BETWEEN T1.TREE_NODE_NUM AND T1.TREE_NODE_NUM_END AND L.SETID = T2.SETID AND L.TREE_NAME = T2.TREE_NAME AND L.EFFDT = T2.EFFDT AND L.TREE_NODE_NUM = T2.TREE_NODE_NUM AND D.SETID = L.SETID AND D.DEPTID BETWEEN L.RANGE_FROM AND L.RANGE_TO AND D.EFFDT = ( SELECT MAX( EFFDT) FROM PS_DEPARTMENT_TBL WHERE SETID = D.SETID AND DEPTID = D.DEPTID AND EFFDT <= SYSDATE) ORDER BY T1.TREE_NODE_NUM, T2.TREE_NODE_NUM  ) ;",Americas_03_EPM_Catering_HotelAcct_with_AV.sas
" CREATE TABLE Flat_Acct_Tree AS  ( SELECT T1.TREE_NAME, T1.TREE_NODE PARENT_NODE, T2.TREE_NODE CHILD_NODE, D.ACCOUNT DETAIL_VALUE, D.DESCR DETAIL_DESCR FROM PS_GL_ACCOUNT_TBL D , PSTREENODE T1 , PSTREENODE T2 , PSTREELEAF L WHERE T1.TREE_NAME = 'FULLSRV_ACCOUNT' AND T1.SETID = 'MIDIV' AND T1.EFFDT = TO_DATE( '01-JUL-2013', 'DD-MON-YYYY') AND T2.SETID = T1.SETID AND T2.TREE_NAME = T1.TREE_NAME AND T2.EFFDT = T1.EFFDT AND T2.TREE_NODE_NUM BETWEEN T1.TREE_NODE_NUM AND T1.TREE_NODE_NUM_END AND L.SETID = T2.SETID AND L.TREE_NAME = T2.TREE_NAME AND L.EFFDT = T2.EFFDT AND L.TREE_NODE_NUM = T2.TREE_NODE_NUM AND D.SETID = L.SETID AND D.ACCOUNT BETWEEN L.RANGE_FROM AND L.RANGE_TO AND D.EFFDT = ( SELECT MAX( EFFDT) FROM PS_GL_ACCOUNT_TBL WHERE SETID = D.SETID AND ACCOUNT = D.ACCOUNT AND EFFDT <= SYSDATE) ORDER BY T1.TREE_NODE_NUM, T2.TREE_NODE_NUM  ) ;",Americas_03_EPM_Catering_HotelAcct_with_AV.sas
"CREATE TABLE Inc_Stat_Accts AS ( SELECT  *, DETAIL_VALUE AS ACCOUNT, DETAIL_DESCR AS ACCT_DESCR, CHILD_NODE AS SUB_CAT, PARENT_NODE AS CATEGORY FROM Flat_Acct_Tree );",Americas_03_EPM_Catering_HotelAcct_with_AV.sas
"ALTER TABLE Inc_Stat_Accts DROP COLUMN TREE_NAME ,  CATEGORY ;",Americas_03_EPM_Catering_HotelAcct_with_AV.sas
SELECT DISTINCT * FROM Inc_Stat_Accts ORDER BY account;,Americas_03_EPM_Catering_HotelAcct_with_AV.sas
"CREATE TABLE Depts AS ( SELECT  *, DETAIL_VALUE AS DEPTID, DETAIL_DESCR AS DEPT_DESCR, CHILD_NODE AS SUB_CAT, PARENT_NODE AS CATEGORY FROM Flat_Dept_Tree  WHERE SUBSTRING( DEPTID,1,3) IN ( '023','020' ));",Americas_03_EPM_Catering_HotelAcct_with_AV.sas
"ALTER TABLE Depts DROP COLUMN TREE_NAME ,  CATEGORY ;",Americas_03_EPM_Catering_HotelAcct_with_AV.sas
SELECT DISTINCT * FROM Depts ORDER BY DEPTID;,Americas_03_EPM_Catering_HotelAcct_with_AV.sas
" CREATE TABLE tempfb AS ( SELECT  *, _1_Jan AS M01, _2_Feb AS M02, _3_Mar AS M03, _4_Apr AS M04, _5_May AS M05, _6_Jun AS M06, _7_Jul AS M07, _8_Aug AS M08, _9_Sep AS M09, _0_Oct AS M10, _1_Nov AS M11, _2_Dec AS M12 FROM &DEST..EPM_act_F00_mgd_&curyr._FB UNION ALL SELECT  *, _1_Jan AS M01, _2_Feb AS M02, _3_Mar AS M03, _4_Apr AS M04, _5_May AS M05, _6_Jun AS M06, _7_Jul AS M07, _8_Aug AS M08, _9_Sep AS M09, _0_Oct AS M10, _1_Nov AS M11, _2_Dec AS M12 FROM &DEST..Epm_budrv_f00_mgd_fb WHERE SUBSTRING( account,1,1)='3');",Americas_03_EPM_Catering_HotelAcct_with_AV.sas
SELECT * FROM tempfb ORDER BY DEPTID;,Americas_03_EPM_Catering_HotelAcct_with_AV.sas
 CREATE TABLE tempfb_FS AS ( SELECT  *  FROM tempfb A INNER JOIN Depts B ON  A.DEPTID =  B.DEPTID);,Americas_03_EPM_Catering_HotelAcct_with_AV.sas
SELECT * FROM tempfb_FS ORDER BY account;,Americas_03_EPM_Catering_HotelAcct_with_AV.sas
" CREATE TABLE TEMPFB_FS2 AS SELECT A.*, B.COUNTRY FROM TEMPFB_FS A INNER JOIN AWPROD.PROPERTY_MASTER_HIST B ON A.OPERATING_UNIT=B.PEOPLESOFT_ID AND B.ASOF_YRMO=&CURYRPD. AND B.OPENFLAG='Y' ORDER BY A.ACCOUNT ;",Americas_03_EPM_Catering_HotelAcct_with_AV.sas
"CREATE TABLE tempfb_FS AS ( SELECT  * , CASE WHEN  DEPTID IN ( '0200','0201','0202','0203')  THEN 'Audio Visual' WHEN  DEPTID NOT IN( '0231','0232','0200','0201','0202','0203')  THEN 'Banquet Other' END AS DEPT_DESCR FROM tempfb_FS2 A LEFT JOIN Inc_Stat_Accts B ON  A.account =  B.account WHERE SUBSTRING( account,1,1)='3' AND ledger<>'FORECAST' AND year=&curyr AND CHARTFIELD1 in( '19','31') AND COUNTRY='Canada' AND CURRENCY_CD='CAD' OR COUNTRY not IN ( 'Canada') AND CURRENCY_CD='USD');",Americas_03_EPM_Catering_HotelAcct_with_AV.sas
ALTER TABLE tempfb_FS DROP COLUMN COUNTRY ;,Americas_03_EPM_Catering_HotelAcct_with_AV.sas
"SELECT * FROM tempfb_FS ORDER BY OPERATING_UNIT ,CURRENCY_CD ,LEDGER;",Americas_03_EPM_Catering_HotelAcct_with_AV.sas
"CREATE TABLE tempfb_sum1 AS (SELECT OPERATING_UNIT, CURRENCY_CD, LEDGER, SUM(M01) AS M01, SUM(M02) AS M02, SUM(M03) AS M03, SUM(M04) AS M04, SUM(M05) AS M05, SUM(M06) AS M06, SUM(M07) AS M07, SUM(M08) AS M08, SUM(M09) AS M09, SUM(M10) AS M10, SUM(M11) AS M11, SUM(M12) AS M12 FROM tempfb_FS GROUP BY OPERATING_UNIT, CURRENCY_CD, LEDGER );",Americas_03_EPM_Catering_HotelAcct_with_AV.sas
" CREATE TABLE tempfb_sum AS ( SELECT  *  , ""Banquets_w_AV"" AS DEPT_DESCR  FROM tempfb_sum1 );",Americas_03_EPM_Catering_HotelAcct_with_AV.sas
"SELECT * FROM tempfb_sum ORDER BY OPERATING_UNIT ,DEPT_DESCR;",Americas_03_EPM_Catering_HotelAcct_with_AV.sas
" CREATE TABLE tempfb_sum_trans AS ( SELECT  *  , ACTUALS*-1 AS ACTUALS , BUDGET*-1 AS BUDGET , SUBSTRING( _NAME_,2,2 ) AS name , CAST( name,best8.  ) AS monno , CASE WHEN  ACTUALS in( ' ' )  THEN 0 END AS ACTUALS, CASE WHEN  BUDGET in( ' ' )  THEN 0 END AS BUDGET, CASE WHEN  _NAME_='M01'  THEN 'JAN' WHEN   _NAME_='M02'  THEN 'FEB' WHEN   _NAME_='M03'  THEN 'MAR' WHEN   _NAME_='M04'  THEN 'APR' WHEN   _NAME_='M05'  THEN 'MAY' WHEN   _NAME_='M06'  THEN 'JUN' WHEN   _NAME_='M07'  THEN 'JUL' WHEN   _NAME_='M08'  THEN 'AUG' WHEN   _NAME_='M09'  THEN 'SEP' WHEN   _NAME_='M10'  THEN 'OCT' WHEN   _NAME_='M11'  THEN 'NOV' WHEN   _NAME_='M12'  THEN 'DEC' END AS Mon FROM tempfb_sum_trans  WHERE ACTUALS<>0 AND BUDGET<>0);",Americas_03_EPM_Catering_HotelAcct_with_AV.sas
"SELECT * FROM tempfb_sum_trans ORDER BY OPERATING_UNIT ,Mon;",Americas_03_EPM_Catering_HotelAcct_with_AV.sas
"CREATE TABLE tempfb_sum_final AS (SELECT OPERATING_UNIT, Mon, SUM(ACTUALS) AS ACTUALS, SUM(BUDGET) AS BUDGET FROM tempfb_sum_trans GROUP BY OPERATING_UNIT, Mon );",Americas_03_EPM_Catering_HotelAcct_with_AV.sas
" CREATE TABLE TEMPFB_2 AS SELECT A.*, B.COUNTRY FROM TEMPFB A INNER JOIN AWPROD.PROPERTY_MASTER_HIST B ON A.OPERATING_UNIT=B.PEOPLESOFT_ID AND B.ASOF_YRMO=&CURYRPD. AND B.OPENFLAG='Y' WHERE CHARTFIELD1 IN ( '19','31') ORDER BY A.ACCOUNT ;",Americas_03_EPM_Catering_HotelAcct_with_AV.sas
" CREATE TABLE SHS_CY_CATERING AS ( SELECT  *  FROM TEMPFB_2  WHERE CHARTFIELD1 IN ( '19','31') AND ACCOUNT IN ( '314017','314041','314042','314043','324049','354001','355020','360001','390001') AND YEAR = &CURYR AND COUNTRY='Canada' AND CURRENCY_CD='CAD' OR COUNTRY not IN ( 'Canada') AND CURRENCY_CD='USD');",Americas_03_EPM_Catering_HotelAcct_with_AV.sas
"SELECT * FROM SHS_CY_CATERING ORDER BY OPERATING_UNIT ,CURRENCY_CD ,LEDGER;",Americas_03_EPM_Catering_HotelAcct_with_AV.sas
"CREATE TABLE SLCT_SRVC_CATERING1 AS (SELECT OPERATING_UNIT, CURRENCY_CD, LEDGER, SUM(M01) AS M01, SUM(M02) AS M02, SUM(M03) AS M03, SUM(M04) AS M04, SUM(M05) AS M05, SUM(M06) AS M06, SUM(M07) AS M07, SUM(M08) AS M08, SUM(M09) AS M09, SUM(M10) AS M10, SUM(M11) AS M11, SUM(M12) AS M12 FROM SHS_CY_CATERING GROUP BY OPERATING_UNIT, CURRENCY_CD, LEDGER );",Americas_03_EPM_Catering_HotelAcct_with_AV.sas
" CREATE TABLE SLCT_SRVC_CATERING AS ( SELECT  *  , ""Banquets_w_AV"" AS DEPT_DESCR  FROM SLCT_SRVC_CATERING1 );",Americas_03_EPM_Catering_HotelAcct_with_AV.sas
SELECT * FROM SLCT_SRVC_CATERING ORDER BY OPERATING_UNIT;,Americas_03_EPM_Catering_HotelAcct_with_AV.sas
" CREATE TABLE SLCT_SRVC_CATERING_TRANS AS ( SELECT  *  , ACTUALS*-1 AS ACTUALS , BUDGET*-1 AS BUDGET , SUBSTRING( _NAME_,2,2 ) AS name , CAST( name,best8.  ) AS monno , CASE WHEN  ACTUALS in( ' ' )  THEN 0 END AS ACTUALS, CASE WHEN  BUDGET in( ' ' )  THEN 0 END AS BUDGET, CASE WHEN  _NAME_='M01'  THEN 'JAN' WHEN   _NAME_='M02'  THEN 'FEB' WHEN   _NAME_='M03'  THEN 'MAR' WHEN   _NAME_='M04'  THEN 'APR' WHEN   _NAME_='M05'  THEN 'MAY' WHEN   _NAME_='M06'  THEN 'JUN' WHEN   _NAME_='M07'  THEN 'JUL' WHEN   _NAME_='M08'  THEN 'AUG' WHEN   _NAME_='M09'  THEN 'SEP' WHEN   _NAME_='M10'  THEN 'OCT' WHEN   _NAME_='M11'  THEN 'NOV' WHEN   _NAME_='M12'  THEN 'DEC' END AS Mon FROM SLCT_SRVC_CATERING_TRANS  WHERE ACTUALS<>0 AND BUDGET<>0);",Americas_03_EPM_Catering_HotelAcct_with_AV.sas
"SELECT * FROM SLCT_SRVC_CATERING_TRANS ORDER BY OPERATING_UNIT ,Mon;",Americas_03_EPM_Catering_HotelAcct_with_AV.sas
"CREATE TABLE SLCT_SRVC_CATERING_FINAL_AV AS (SELECT OPERATING_UNIT, Mon, SUM(ACTUALS) AS ACTUALS, SUM(BUDGET) AS BUDGET FROM SLCT_SRVC_CATERING_TRANS GROUP BY OPERATING_UNIT, Mon );",Americas_03_EPM_Catering_HotelAcct_with_AV.sas
" CREATE TABLE &DEST..NALOFB_finalw_AV AS ( SELECT OPERATING_UNIT, Mon, ACTUALS AS BANQUET_REV_W_AV, BUDGET AS BANQUET_BUD_W_AV FROM tempfb_sum_final UNION ALL SELECT OPERATING_UNIT, Mon, ACTUALS AS BANQUET_REV_W_AV, BUDGET AS BANQUET_BUD_W_AV FROM SLCT_SRVC_CATERING_FINAL_AV);",Americas_03_EPM_Catering_HotelAcct_with_AV.sas
"SELECT * FROM &DEST..NALOFB_finalw_AV ORDER BY OPERATING_UNIT ,Mon;",Americas_03_EPM_Catering_HotelAcct_with_AV.sas
" CREATE TABLE tempbud AS ( SELECT  *  , 'Budget' AS Ledger  FROM SFODATA.TOT_REVTY_BUD_HA );",Americas_04_Hotel_Acct_MA_SA_ID_Output.sas
" CREATE TABLE tempact AS ( SELECT  *  , 'Actual' AS Ledger  FROM SFODATA.TOT_REVTY_ACT_HA );",Americas_04_Hotel_Acct_MA_SA_ID_Output.sas
 CREATE TABLE temp AS ( SELECT  *  FROM tempbud UNION ALL SELECT  *  FROM tempact);,Americas_04_Hotel_Acct_MA_SA_ID_Output.sas
"SELECT * FROM temp ORDER BY OPERATING_UNIT ,ACCOUNTING_PERIOD ,Ledger ,MI_SA_ID;",Americas_04_Hotel_Acct_MA_SA_ID_Output.sas
"CREATE TABLE tempsum AS (SELECT OPERATING_UNIT, ACCOUNTING_PERIOD, Ledger, MI_SA_ID, SUM(SUM_A_POSTED_TOTAL_AMT_) AS SUM_A_POSTED_TOTAL_AMT_ FROM temp GROUP BY OPERATING_UNIT, ACCOUNTING_PERIOD, Ledger, MI_SA_ID );",Americas_04_Hotel_Acct_MA_SA_ID_Output.sas
"CREATE TABLE actoutput AS ( SELECT  *, PR_ROOM_SALES AS ROOM_REV, ( PR_CATERING_REVENUE+PR_GROUP_CATERING_REVENUE+PR_LOCAL_CATERING_REVENUE ) AS BANQUET_REV , CASE WHEN  ACCOUNTING_PERIOD=1  THEN 'JAN' WHEN   ACCOUNTING_PERIOD=2  THEN 'FEB' WHEN   ACCOUNTING_PERIOD=3  THEN 'MAR' WHEN   ACCOUNTING_PERIOD=4  THEN 'APR' WHEN   ACCOUNTING_PERIOD=5  THEN 'MAY' WHEN   ACCOUNTING_PERIOD=6  THEN 'JUN' WHEN   ACCOUNTING_PERIOD=7  THEN 'JUL' WHEN   ACCOUNTING_PERIOD=8  THEN 'AUG' WHEN   ACCOUNTING_PERIOD=9  THEN 'SEP' WHEN   ACCOUNTING_PERIOD=10  THEN 'OCT' WHEN   ACCOUNTING_PERIOD=11  THEN 'NOV' WHEN   ACCOUNTING_PERIOD=12  THEN 'DEC' END AS Mon FROM tempsum_transp  WHERE ledger='Actual');",Americas_04_Hotel_Acct_MA_SA_ID_Output.sas
"ALTER TABLE actoutput DROP COLUMN _LABEL_ ,  _NAME_ ,  PR_CATERING_REVENUE ,  PR_GROUP_CATERING_REVENUE ,  PR_LOCAL_CATERING_REVENUE ;",Americas_04_Hotel_Acct_MA_SA_ID_Output.sas
"CREATE TABLE budoutput AS ( SELECT  *, PR_ROOM_SALES AS ROOM_REV, ( PR_CATERING_REVENUE+PR_GROUP_CATERING_REVENUE+PR_LOCAL_CATERING_REVENUE ) AS BANQUET_REV , CASE WHEN  ACCOUNTING_PERIOD=1  THEN 'JAN' WHEN   ACCOUNTING_PERIOD=2  THEN 'FEB' WHEN   ACCOUNTING_PERIOD=3  THEN 'MAR' WHEN   ACCOUNTING_PERIOD=4  THEN 'APR' WHEN   ACCOUNTING_PERIOD=5  THEN 'MAY' WHEN   ACCOUNTING_PERIOD=6  THEN 'JUN' WHEN   ACCOUNTING_PERIOD=7  THEN 'JUL' WHEN   ACCOUNTING_PERIOD=8  THEN 'AUG' WHEN   ACCOUNTING_PERIOD=9  THEN 'SEP' WHEN   ACCOUNTING_PERIOD=10  THEN 'OCT' WHEN   ACCOUNTING_PERIOD=11  THEN 'NOV' WHEN   ACCOUNTING_PERIOD=12  THEN 'DEC' END AS Mon FROM tempsum_transp  WHERE ledger='Budget');",Americas_04_Hotel_Acct_MA_SA_ID_Output.sas
"ALTER TABLE budoutput DROP COLUMN _LABEL_ ,  _NAME_ ,  PR_CATERING_REVENUE ,  PR_GROUP_CATERING_REVENUE ,  PR_LOCAL_CATERING_REVENUE ;",Americas_04_Hotel_Acct_MA_SA_ID_Output.sas
"CREATE TABLE junk AS ( SELECT  *, PR_ROOM_SALES AS ROOM_REV, ( PR_CATERING_REVENUE+PR_GROUP_CATERING_REVENUE+PR_LOCAL_CATERING_REVENUE ) AS BANQUET_REV , CASE WHEN  ACCOUNTING_PERIOD=1  THEN 'JAN' WHEN   ACCOUNTING_PERIOD=2  THEN 'FEB' WHEN   ACCOUNTING_PERIOD=3  THEN 'MAR' WHEN   ACCOUNTING_PERIOD=4  THEN 'APR' WHEN   ACCOUNTING_PERIOD=5  THEN 'MAY' WHEN   ACCOUNTING_PERIOD=6  THEN 'JUN' WHEN   ACCOUNTING_PERIOD=7  THEN 'JUL' WHEN   ACCOUNTING_PERIOD=8  THEN 'AUG' WHEN   ACCOUNTING_PERIOD=9  THEN 'SEP' WHEN   ACCOUNTING_PERIOD=10  THEN 'OCT' WHEN   ACCOUNTING_PERIOD=11  THEN 'NOV' WHEN   ACCOUNTING_PERIOD=12  THEN 'DEC' END AS Mon FROM tempsum_transp  WHERE ledger<>'Actual' AND ledger<>'Budget');",Americas_04_Hotel_Acct_MA_SA_ID_Output.sas
"ALTER TABLE junk DROP COLUMN _LABEL_ ,  _NAME_ ,  PR_CATERING_REVENUE ,  PR_GROUP_CATERING_REVENUE ,  PR_LOCAL_CATERING_REVENUE ;",Americas_04_Hotel_Acct_MA_SA_ID_Output.sas
"CREATE TABLE actfinal AS ( SELECT  *, ROOM_REV AS ROOM_REV_ACT, ACCOUNTING_PERIOD AS Monnum, CASE WHEN  ROOM_REV_ACT in( ' ' )  THEN 0 END AS ROOM_REV_ACT FROM actoutCAST );",Americas_04_Hotel_Acct_MA_SA_ID_Output.sas
"ALTER TABLE actfinal DROP COLUMN BANQUET_REV ,  ledger ;",Americas_04_Hotel_Acct_MA_SA_ID_Output.sas
"CREATE TABLE budfinal AS ( SELECT  *, ROOM_REV AS ROOM_REV_BUD, ACCOUNTING_PERIOD AS Monnum, CASE WHEN  ROOM_REV_BUD in( ' ' )  THEN 0 END AS ROOM_REV_BUD FROM budoutCAST );",Americas_04_Hotel_Acct_MA_SA_ID_Output.sas
"ALTER TABLE budfinal DROP COLUMN BANQUET_REV ,  ledger ;",Americas_04_Hotel_Acct_MA_SA_ID_Output.sas
"SELECT * FROM actfinal ORDER BY OPERATING_UNIT ,Mon;",Americas_04_Hotel_Acct_MA_SA_ID_Output.sas
"SELECT * FROM budfinal ORDER BY OPERATING_UNIT ,Mon;",Americas_04_Hotel_Acct_MA_SA_ID_Output.sas
"CREATE TABLE final AS ( SELECT  *  , OPERATING_UNIT AS PEOPLESOFT_ID , ( ROOM_REV_ACT-ROOM_REV_BUD)/ROOM_REV_BUD AS Rm_pchg_Bud , ( ROOM_REV_ACT/ROOM_REV_BUD)*100 AS Rm_pctofbud , ( BANQUET_REV_ACT-BANQUET_REV_BUD)/BANQUET_REV_BUD AS Cat_pchg_Bud , ( BANQUET_REV_ACT/BANQUET_REV_BUD)*100 AS Cat_pctofbud , CASE WHEN  room_rev_act=' '  THEN 0 ELSE room_rev_act END AS room_rev_act, CASE WHEN  banquet_rev_act=' '  THEN 0 ELSE banquet_rev_act END AS banquet_rev_act, CASE WHEN  banquet_rev_w_av=' '  THEN 0 ELSE banquet_rev_w_av END AS banquet_rev_w_av, CASE WHEN  banquet_rev_bud=' '  THEN 0 ELSE banquet_rev_bud END AS banquet_rev_bud, CASE WHEN  banquet_bud_w_av=' '  THEN 0 ELSE banquet_bud_w_av END AS banquet_bud_w_av FROM actfinal A JOIN budfinal B ON  A.OPERATING_UNIT =  B.OPERATING_UNIT AND  A.Mon =  B.Mon&DEST..NALOFB_final C ON  B.OPERATING_UNIT =  C.OPERATING_UNIT AND  B.Mon =  C.Mon&DEST..NALOFB_finalw_AV D ON  C.OPERATING_UNIT =  D.OPERATING_UNIT AND  C.Mon =  D.Mon);",Americas_04_Hotel_Acct_MA_SA_ID_Output.sas
ALTER TABLE final DROP COLUMN OPERATING_UNIT ;,Americas_04_Hotel_Acct_MA_SA_ID_Output.sas
" CREATE TABLE plu AS ( SELECT MARSHA, PEOPLESOFT_ID, ACOMP FROM awprod.property_master_hist  WHERE asof_yrmo=&curyrpd.);",Americas_04_Hotel_Acct_MA_SA_ID_Output.sas
SELECT * FROM plu ORDER BY PEOPLESOFT_ID;,Americas_04_Hotel_Acct_MA_SA_ID_Output.sas
SELECT * FROM final ORDER BY PEOPLESOFT_ID;,Americas_04_Hotel_Acct_MA_SA_ID_Output.sas
" CREATE TABLE final1 AS select a.*,b.MARSHA,b.ACOMP FROM final AS a LEFT JOIN plu AS b ON a.PEOPLESOFT_ID=b.PEOPLESOFT_ID ;",Americas_04_Hotel_Acct_MA_SA_ID_Output.sas
"SELECT * FROM final1 ORDER BY PEOPLESOFT_ID ,Monnum ,Mon;",Americas_04_Hotel_Acct_MA_SA_ID_Output.sas
"SELECT * FROM Final_order ORDER BY PEOPLESOFT_ID ,Monnum ,Mon;",Americas_04_Hotel_Acct_MA_SA_ID_Output.sas
 CREATE TABLE HotAcc.final AS ( SELECT  *  FROM Final_order A JOIN final1 B ON  A.PEOPLESOFT_ID =  B.PEOPLESOFT_ID AND  A.Monnum =  B.Monnum AND  A.Mon =  B.Mon WHERE PEOPLESOFT_ID<>'AAAAA' AND BANQUET_REV_ACT<>' ' AND BANQUET_REV_BUD<>0 AND ROOM_REV_ACT<>' ' AND ROOM_REV_BUD<>0 AND Marsha<>' ');,Americas_04_Hotel_Acct_MA_SA_ID_Output.sas
"CREATE TABLE ""\\Hdqmdm1fpcl4v1\Dev-dss\Dev-dss\SalesForce1\BonusComp\HotelAccountability\&Curyrpd.\Hotel_Accountability_&Curyrpd..csv"" AS ( SELECT * FROM HotAcc.final) ;",Americas_04_Hotel_Acct_MA_SA_ID_Output.sas
"CREATE TABLE ""\\omarcfp2\areaSales\RoomREV_CateringREV_&Curyrpd..csv"" AS ( SELECT * FROM HotAcc.final) ;",Americas_04_Hotel_Acct_MA_SA_ID_Output.sas
" CREATE TABLE temp_Daystar AS ( SELECT Marsha, TIMEF, REVPARINDEX, REVPARINDEXLY, RICHG FROM DAYSTAR.master_final  WHERE TIMEF in( 'L28','WE-28','WD-28','L28_G') AND MARSHA IN ( %PropsList) );",Americas_14_MarketSharePerf.sas
" CREATE TABLE temp_strMonytd1 AS  ( select MARSHA, TIMEF, CAST( MARSOLD AS DOUBLE) AS MARSOLD, CAST( MARAVAIL AS DOUBLE) AS MARAVAIL, CAST( MARREV AS DOUBLE) AS MARREV, CAST( MKTSOLD AS DOUBLE) AS MKTSOLD, CAST( MKTAVAIL AS DOUBLE) AS MKTAVAIL, CAST( MKTREV AS DOUBLE) AS MKTREV, CAST( MARSOLDLY AS DOUBLE) AS MARSOLDLY, CAST( MARAVAILLY AS DOUBLE) AS MARAVAILLY, CAST( MARREVLY AS DOUBLE) AS MARREVLY, CAST( MKTSOLDLY AS DOUBLE) AS MKTSOLDLY, CAST( MKTAVAILLY AS DOUBLE) AS MKTAVAILLY, CAST( MKTREVLY AS DOUBLE) AS MKTREVLY FROM AW_CMP_DBO.STR_MONTHLY_DATA WHERE TIMEF IN ( 'YTD','YTD_GP') AND ASOF_YRMO=&CURYRPD AND YRMNTH=&STARMNTH AND CURRENCY_TYPE='Constant USD' AND MARSHA IN ( %PropsList)  ) ;",Americas_14_MarketSharePerf.sas
" CREATE TABLE temp_strWDWEytd1 AS  ( select MARSHA, TIMEF, CAST( MARSOLD AS DOUBLE) AS MARSOLD, CAST( MARAVAIL AS DOUBLE) AS MARAVAIL, CAST( MARREV AS DOUBLE) AS MARREV, CAST( MKTSOLD AS DOUBLE) AS MKTSOLD, CAST( MKTAVAIL AS DOUBLE) AS MKTAVAIL, CAST( MKTREV AS DOUBLE) AS MKTREV, CAST( MARSOLDLY AS DOUBLE) AS MARSOLDLY, CAST( MARAVAILLY AS DOUBLE) AS MARAVAILLY, CAST( MARREVLY AS DOUBLE) AS MARREVLY, CAST( MKTSOLDLY AS DOUBLE) AS MKTSOLDLY, CAST( MKTAVAILLY AS DOUBLE) AS MKTAVAILLY, CAST( MKTREVLY AS DOUBLE) AS MKTREVLY FROM AW_CMP_DBO.STR_MONTHLY_DATA WHERE TIMEF IN ( 'YTD_WD','YTD_WE') AND ASOF_YRMO=&CURYRPD AND YRMNTH=&STARMNTH AND CURRENCY_TYPE='Constant USD' AND MARSHA IN ( %PropsList)  )  ;",Americas_14_MarketSharePerf.sas
" CREATE TABLE temp_strMonytd AS SELECT MARSHA, TIMEF, ( MARSOLD/MARAVAIL)*( MARREV/MARSOLD) AS MAR_REVPAR, ( MKTSOLD/MKTAVAIL)*( MKTREV/MKTSOLD) AS MKT_REVPAR, ( ( MARSOLD/MARAVAIL)*( MARREV/MARSOLD)) / ( ( MKTSOLD/MKTAVAIL)*( MKTREV/MKTSOLD)) AS REVPARINDEX, CASE WHEN MARAVAILLY = 0 AND MARSOLDLY = 0 THEN 0 ELSE ( MARSOLDLY/MARAVAILLY)*( MARREVLY/MARSOLDLY) END AS MAR_REVPARLY, CASE WHEN MKTAVAILLY = 0 AND MKTSOLDLY = 0 THEN 0 ELSE ( MKTSOLDLY/MKTAVAILLY)*( MKTREVLY/MKTSOLDLY) END AS MKT_REVPARLY, CASE WHEN MARAVAILLY = 0 AND MARSOLDLY = 0 AND MKTAVAILLY = 0 AND MKTSOLDLY = 0 THEN 0 ELSE ( ( MARSOLDLY/MARAVAILLY)*( MARREVLY/MARSOLDLY)) / ( ( MKTSOLDLY/MKTAVAILLY)*( MKTREVLY/MKTSOLDLY)) END AS REVPARINDEX_LY, CASE WHEN MARAVAILLY = 0 AND MARSOLDLY = 0 AND MKTAVAILLY = 0 AND MKTSOLDLY = 0 THEN 0 ELSE ( ( ( MARSOLD/MARAVAIL)*( MARREV/MARSOLD)) / ( ( MKTSOLD/MKTAVAIL)*( MKTREV/MKTSOLD))) / ( ( ( MARSOLDLY/MARAVAILLY)*( MARREVLY/MARSOLDLY)) / ( ( MKTSOLDLY/MKTAVAILLY)*( MKTREVLY/MKTSOLDLY)))-1 END AS RICHG FORMAT=10.5 FROM temp_strMonytd1 ;",Americas_14_MarketSharePerf.sas
" CREATE TABLE temp_strWDWEytd AS SELECT MARSHA, TIMEF, ( MARSOLD/MARAVAIL)*( MARREV/MARSOLD) AS MAR_REVPAR, ( MKTSOLD/MKTAVAIL)*( MKTREV/MKTSOLD) AS MKT_REVPAR, ( ( MARSOLD/MARAVAIL)*( MARREV/MARSOLD)) / ( ( MKTSOLD/MKTAVAIL)*( MKTREV/MKTSOLD)) AS REVPARINDEX, CASE WHEN MARAVAILLY = 0 AND MARSOLDLY = 0 THEN 0 ELSE ( MARSOLDLY/MARAVAILLY)*( MARREVLY/MARSOLDLY) END AS MAR_REVPARLY, CASE WHEN MKTAVAILLY = 0 AND MKTSOLDLY = 0 THEN 0 ELSE ( MKTSOLDLY/MKTAVAILLY)*( MKTREVLY/MKTSOLDLY) END AS MKT_REVPARLY, CASE WHEN MARAVAILLY = 0 AND MARSOLDLY = 0 AND MKTAVAILLY = 0 AND MKTSOLDLY = 0 THEN 0 ELSE ( ( MARSOLDLY/MARAVAILLY)*( MARREVLY/MARSOLDLY)) / ( ( MKTSOLDLY/MKTAVAILLY)*( MKTREVLY/MKTSOLDLY)) END AS REVPARINDEX_LY, CASE WHEN MARAVAILLY = 0 AND MARSOLDLY = 0 AND MKTAVAILLY = 0 AND MKTSOLDLY = 0 THEN 0 ELSE ( ( ( MARSOLD/MARAVAIL)*( MARREV/MARSOLD)) / ( ( MKTSOLD/MKTAVAIL)*( MKTREV/MKTSOLD))) / ( ( ( MARSOLDLY/MARAVAILLY)*( MARREVLY/MARSOLDLY)) / ( ( MKTSOLDLY/MKTAVAILLY)*( MKTREVLY/MKTSOLDLY)))-1 END AS RICHG FORMAT=10.5 FROM temp_strWDWEytd1 GROUP BY MARSHA, TIMEF ;",Americas_14_MarketSharePerf.sas
SELECT * FROM temp_strMonytd ORDER BY marsha;,Americas_14_MarketSharePerf.sas
SELECT * FROM temp_strWDWEytd ORDER BY marsha;,Americas_14_MarketSharePerf.sas
SELECT * FROM temp_Daystar ORDER BY marsha;,Americas_14_MarketSharePerf.sas
 CREATE TABLE MktShPerf AS ( SELECT  *  FROM temp_strMonytd A JOIN temp_strWDWEytd B ON  A.Marsha =  B.Marsha JOIN temp_Daystar C ON  B.Marsha =  C.Marsha);,Americas_14_MarketSharePerf.sas
" CREATE TABLE sfodata.final_mktshre AS ( SELECT  * , CASE WHEN  l28=' '  THEN 0 END AS l28, CASE WHEN  we_28=' '  THEN 0 END AS we_28, CASE WHEN  wd_28=' '  THEN 0 END AS wd_28, CASE WHEN  ytd=' '  THEN 0 END AS ytd, CASE WHEN  ytd_wd=' '  THEN 0 END AS ytd_wd, CASE WHEN  ytd_we=' '  THEN 0 END AS ytd_we, CASE WHEN  ytd_gp=' '  THEN 0 END AS ytd_gp, CASE WHEN  l28_g=' '  THEN 0 END AS l28_g FROM mktshperf_trans  WHERE ( l28+we_28+wd_28+ytd+ytd_wd+ytd_we+ytd_gp+l28_g)<>0);",Americas_14_MarketSharePerf.sas
" CREATE TABLE Roster AS  ( select distinct upper( team_member_eid) AS executive_eid, full_name FROM VISIBILITY_HIERARCHY_VW WHERE org_name='Canada' ORDER BY executive_eid  ) ;",Americas_2019_BT_Report_for_Sabrina.sas
" CREATE TABLE canada_account_list_&month AS ( SELECT  *  , &month AS month  FROM account_list_&month );",Americas_2019_BT_Report_for_Sabrina.sas
 CREATE TABLE canada_account_list AS ( SELECT  *  FROM canada_account_list_01 UNION ALL SELECT  *  FROM canada_account_list_02 UNION ALL SELECT  *  FROM canada_account_list_03 UNION ALL SELECT  *  FROM canada_account_list_04 UNION ALL SELECT  *  FROM canada_account_list_05 UNION ALL SELECT  *  FROM canada_account_list_06 UNION ALL SELECT  *  FROM canada_account_list_07 UNION ALL SELECT  *  FROM canada_account_list_08 WHERE role_title is not missing);,Americas_2019_BT_Report_for_Sabrina.sas
"SELECT * FROM canada_account_list ORDER BY company_id DESC ,month;",Americas_2019_BT_Report_for_Sabrina.sas
" CREATE TABLE canada_account_list_first_rec AS ( SELECT   * , FIRST(company_id) OVER ( PARTITION BY company_id GROUP BY company_id , month ORDER BY company_id , month DESC )  FROM canada_account_list );",Americas_2019_BT_Report_for_Sabrina.sas
"CREATE TABLE canada_account_list_dedupe AS (SELECT DISTINCT * FROM canada_account_list_first_rec ORDER BY role_title ,goal_type ,company_id ,company_name);",Americas_2019_BT_Report_for_Sabrina.sas
" CREATE TABLE AP_Inbound AS  ( select stay_year, stay_pd_mo, feed_pd_mo, mgr_eid, cast( account_id AS VARCHAR( 15)) AS account_id, prop_code, market_type, SUM( roomnights_net) AS roomnights_net, SUM( usd_rev_amt_net) AS usd_rev_amt_net FROM sgr_etl_ap_snapshot a WHERE a.stay_year IN ( '2019') AND mgr_eid IN ( %EIDList) AND stay_pd_mo <= &shortpd GROUP BY stay_year, stay_pd_mo, feed_pd_mo, mgr_eid, account_id, prop_code, market_type  ) ;",Americas_2019_BT_Report_for_Sabrina.sas
" CREATE TABLE AP_Outbound AS  ( select stay_year, stay_pd_mo, feed_pd_mo, mgr_eid, cast( account_id AS VARCHAR( 15)) AS account_id, prop_code, market_type, SUM( roomnights_net) AS roomnights_net, SUM( usd_rev_amt_net) AS usd_rev_amt_net FROM sgr_etl_outbound_ap_snapshot a WHERE a.stay_year IN ( '2019') AND mgr_eid IN ( %EIDList) AND stay_pd_mo <= &shortpd GROUP BY stay_year, stay_pd_mo, feed_pd_mo, mgr_eid, account_id, prop_code, market_type  ) ;",Americas_2019_BT_Report_for_Sabrina.sas
" CREATE TABLE AP_Adjustments AS  ( select a.stay_year, a.stay_pd_mo, a.mgr_eid, a.account_id, a.marsha_code AS prop_code, SUM( a.roomnights) AS roomnights_net, SUM( a.rm_rev_amt) AS cad_rev_amt_net FROM sgr_flat_sw_transient a WHERE a.stay_year IN ( '2019') AND mgr_eid IN ( %EIDList) GROUP BY a.stay_year, a.stay_pd_mo, a.mgr_eid, a.account_id, a.marsha_code  ) ;",Americas_2019_BT_Report_for_Sabrina.sas
 CREATE TABLE COMBINED_DATA AS ( SELECT  *  FROM AP_INBOUND UNION ALL SELECT  *  FROM AP_OUTBOUND);,Americas_2019_BT_Report_for_Sabrina.sas
"CREATE TABLE JUNK AS (SELECT STAY_YEAR, STAY_PD_MO, MGR_EID, ACCOUNT_ID, PROP_CODE, MARKET_TYPE, SUM(ROOMNIGHTS_NET) AS ROOMNIGHTS_NET, SUM(USD_REV_AMT_NET) AS USD_REV_AMT_NET FROM COMBINED_DATA GROUP BY STAY_YEAR, STAY_PD_MO, MGR_EID, ACCOUNT_ID, PROP_CODE, MARKET_TYPE );",Americas_2019_BT_Report_for_Sabrina.sas
" CREATE TABLE CAD_CONVERSION_TABLE AS  ( SELECT CURRENCY_EXCH_DT, EXTRACT( YEAR FROM CURRENCY_EXCH_DT) AS YEAR, EXTRACT( MONTH FROM CURRENCY_EXCH_DT) AS MONTH, CURRENCY_EXCH_RTE, FROM_CURRENCY_CD, TO_CURRENCY_CD FROM EDW_DIM_CURRENCY WHERE CURRENCY_EXCH_DT >= '01JAN2019' AND FROM_CURRENCY_CD = 'CAD' ORDER BY CURRENCY_EXCH_DT DESC, YEAR DESC, MONTH DESC  ) ;",Americas_2019_BT_Report_for_Sabrina.sas
" CREATE TABLE CAD_CONVERSION_LAST_REC AS ( SELECT   * , FIRST(MONTH) OVER ( PARTITION BY MONTH GROUP BY DESC , YEAR , DESC , MONTH ORDER BY DESC , YEAR , DESC , MONTH )  FROM CAD_CONVERSION_TABLE  WHERE MONTH <=&SHORTPD.);",Americas_2019_BT_Report_for_Sabrina.sas
" CREATE TABLE SGR_AP_CAD AS select a.stay_year, a.stay_pd_mo, a.mgr_eid, a.account_id, a.prop_code, SUM( a.roomnights_net) AS roomnights_net, SUM( a.usd_rev_amt_net/b.currency_exch_rte) AS cad_rev_amt_net FROM Combined_Data a LEFT JOIN CAD_CONVERSION_LAST_REC b ON a.feed_pd_mo=b.month GROUP BY a.stay_year, a.stay_pd_mo, a.mgr_eid, a.account_id, a.prop_code ;",Americas_2019_BT_Report_for_Sabrina.sas
 CREATE TABLE Combine_Canada_AP AS ( SELECT  *  FROM sgr_ap_cad UNION ALL SELECT  *  FROM ap_adjustments);,Americas_2019_BT_Report_for_Sabrina.sas
" CREATE TABLE Canada_AP_w_PropInfo AS select 'Canada' AS organization, e.full_name AS executive_name, c.role_title AS position, CASE WHEN b.sfo_org='CAN' THEN 'Canada' when b.sfo_org='MA' THEN 'Mid Atlantic' when b.sfo_org='ENE' THEN 'East Northeast' when b.sfo_org='NMA' THEN 'Northern Mid-America' when b.sfo_org='WMP' THEN 'Western Mountain Pacific' when b.sfo_org='WSW' THEN 'West Southwest' when b.sfo_org='FL' THEN 'Florida' when b.sfo_org='SSE' THEN 'South Southeast' when b.sfo_org='WSC' THEN 'West South Central' when b.sfo_org='HI' THEN 'Hawaii' when b.sfo_org='CAL' THEN 'CALA' when compress( b.sfo_org)='' AND b.country_cd='CA' THEN 'CA Non-Participating' when compress( b.sfo_org)='' AND b.country_cd='US' THEN 'US Non-Participating' when compress( b.sfo_org)='' AND b.country_cd not IN ( 'US','CA') AND b.mf='M' THEN ""Int'l Managed"" when compress( b.sfo_org)='' AND b.country_cd not IN ( 'US','CA') AND b.mf='F' THEN ""Int'l Franchise"" ELSE '' END AS business_sent_to, a.prop_code, a.account_id, c.company_name, a.stay_pd_mo, CASE WHEN a.stay_pd_mo between 1 AND 3 THEN 'Q1' when a.stay_pd_mo between 4 AND 6 THEN 'Q2' when a.stay_pd_mo between 7 AND 9 THEN 'Q3' when a.stay_pd_mo between 10 AND 12 THEN 'Q4' ELSE '' END AS quarter, CASE WHEN b.misw_flag='MI' THEN 'Marriott Rewards Hotel' ELSE 'SPG Hotel' END AS property_legacy, d.currency_exch_rte, SUM( roomnights_net) AS rn, SUM( cad_rev_amt_net) AS cad_rev_amt_net FROM Combine_Canada_AP a LEFT JOIN awprod.property_master b ON a.prop_code=b.marsha LEFT JOIN canada_account_list_dedupe c ON a.account_id=c.company_id LEFT JOIN cad_conversion_last_rec d ON a.stay_pd_mo=d.month LEFT JOIN roster e ON a.mgr_eid=e.executive_eid GROUP BY organization, e.full_name, c.role_title, business_sent_to, a.prop_code, a.account_id, c.company_name, a.stay_pd_mo, quarter, b.misw_flag, d.currency_exch_rte HAVING rn <>0 OR cad_rev_amt_net <>0 ;",Americas_2019_BT_Report_for_Sabrina.sas
" CREATE TABLE Currents AS  ( select marsha, stay_year, coalesce( crossover_rms,0) AS CO_RN_Goal, coalesce( ( crossover_rms*crossover_gadr),0) AS CO_Rev_Goal, def_rms AS Def_OTB, ( def_rms*def_gadr) AS Def_Rev, CID_Rms AS Target, Avg_rms AS Avg_Bkd FROM AW_TGT_BUS_DBO.OY_ANNUALCROSSOVER WHERE stay_year < &YEARNXT3 AND ASOF_YRMO=&CURYRPD ORDER BY marsha, stay_year  )  ;",Americas_7_CrossOverData.sas
" CREATE TABLE Futures AS  ( select marsha, 'Futures' AS Stay_Year, coalesce( SUM( crossover_rms),0) AS CO_RN_Goal, coalesce( SUM( crossover_rms*def_gadr),0) AS CO_Rev_Goal, SUM( def_rms) AS Def_OTB, SUM( def_rms*def_gadr) AS Def_Rev, SUM( cid_rms) AS Target, SUM( avg_rms) AS Avg_Bkd FROM AW_TGT_BUS_DBO.OY_ANNUALCROSSOVER WHERE stay_year > &curyr AND ASOF_YRMO=&CURYRPD GROUP BY marsha ORDER BY marsha  )  ;",Americas_7_CrossOverData.sas
"CREATE TABLE merge_CrossOver1 AS ( SELECT  *, marsha AS marsha2, FORMAT(stay_year, VARCHAR(7)) AS stay_year , marsha2 AS marsha , CASE WHEN  CO_Rev_Goal=' ' OR CO_Rev_Goal=' ' OR CO_RN_Goal=0 OR CO_Rev_Goal=0  THEN 0 ELSE CO_Rev_Goal/CO_RN_Goal END AS CO_RN_Goal_ADR, CASE WHEN  Def_OTB=' ' OR Def_REV=' ' OR Def_OTB=' ' OR Def_REV=0  THEN 0 ELSE Def_REV/Def_OTB END AS Def_ADR FROM Currents A JOIN Futures B ON  A.marsha2 =  B.marsha2 AND  A.stay_year =  B.stay_year);",Americas_7_CrossOverData.sas
ALTER TABLE merge_CrossOver1 DROP COLUMN marsha2 ;,Americas_7_CrossOverData.sas
 CREATE TABLE sfodata.CrossOver_YTD AS ( SELECT  *  FROM merge_CrossOver1 );,Americas_7_CrossOverData.sas
"CREATE TABLE AcctList_NoWH AS ( SELECT  *  FROM AccountList  WHERE role_title<>'Market Account Executive, Whsale/FIT/Tour & Travel');",Americas_Account_Dashboard_BT_MI.sas
"CREATE TABLE AcctList_WH AS ( SELECT  *  FROM AccountList  WHERE role_title='Market Account Executive, Whsale/FIT/Tour & Travel');",Americas_Account_Dashboard_BT_MI.sas
" CREATE TABLE Prospect_and_Mid_Market AS ( SELECT  *  FROM AcctList_NoWH  WHERE role_title IN ( 'Market Account Executive, Mid-Market' ));",Americas_Account_Dashboard_BT_MI.sas
CREATE TABLE AcctList_NoWH_DeDupe AS (SELECT DISTINCT ACCOUNT_ID FROM AcctList_NoWH ORDER BY ACCOUNT_ID);,Americas_Account_Dashboard_BT_MI.sas
CREATE TABLE AcctList_WH_DeDupe AS (SELECT DISTINCT ACCOUNT_ID FROM AcctList_WH ORDER BY ACCOUNT_ID);,Americas_Account_Dashboard_BT_MI.sas
CREATE TABLE Prospect_and_Mid_Market_DeDupe AS (SELECT DISTINCT ACCOUNT_ID FROM Prospect_and_Mid_Market ORDER BY ACCOUNT_ID);,Americas_Account_Dashboard_BT_MI.sas
"CREATE TABLE AcctNames AS (SELECT DISTINCT org_name, market_name, area_name, account_id, account_name FROM AccountList ORDER BY account_id ,account_name);",Americas_Account_Dashboard_BT_MI.sas
"CREATE TABLE AccountList1 AS ( SELECT  *, account_id1 AS account_id, CAST( account_id AS INT  ) AS account_id1  FROM AccountList );",Americas_Account_Dashboard_BT_MI.sas
ALTER TABLE AccountList1 DROP COLUMN account_id ;,Americas_Account_Dashboard_BT_MI.sas
 CREATE TABLE PLU AS  ( SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER_HIST WHERE asof_yrmo=&curyrpd.  )  ;,Americas_Account_Dashboard_BT_MI.sas
" CREATE TABLE prop AS ( SELECT marsha, domint, country_cd , FORMAT(deployed_org, VARCHAR(36)) AS deployed_org , FORMAT(geo_org, VARCHAR(36)) AS geo_org , CASE WHEN  sfo_org=""ENE""  THEN ""East Northeast"" WHEN   sfo_org=""MA""  THEN ""Mid Atlantic"" WHEN   sfo_org=""WMP""  THEN ""Western Mountain Pacific"" WHEN   sfo_org=""WSW""  THEN ""West Southwest"" WHEN   sfo_org=""NMA""  THEN ""Northern Mid-America"" WHEN   sfo_org=""SSE""  THEN ""South Southeast"" WHEN   sfo_org=""FL""  THEN ""Florida"" WHEN   sfo_org=""WSC""  THEN ""West South Central"" WHEN   sfo_org=""CAN""  THEN ""Canada"" ELSE ""Not Participating"" END AS deployed_org, CASE WHEN  state IN ( 'CT','DE','NH','NY','NJ','MA','ME','PA','RI','VT')  THEN ""East Northeast"" WHEN   state IN ( 'KS','IA','IL','IN','MO','WI','MN','MI','OH','KY')  THEN ""Northern Mid-America"" WHEN   state IN ( 'MD','VA','WV','NC','SC','DC')  THEN ""Mid Atlantic"" WHEN   state IN ( 'NV','AZ')  THEN ""West Southwest"" WHEN   state IN ( 'FL')  THEN ""Florida"" WHEN   state IN ( 'AL','AR','GA','LA','MS','TN')  THEN ""South Southeast"" WHEN   state IN ( 'ID','MT','NE','NM','ND','OK','SD','TX','WY')  THEN 'West South Central' WHEN   state IN ( 'CO', 'OR', 'UT', 'WA')  THEN ""Western Mountain Pacific"", CASE WHEN  zip IN ( '90001','90002','90003','90004','90005','90006','90007','90008','90009','90010','90011','90012','90013','90014','90015','90016','90017','90018','90019','90020', '90021','90022','90023','90024','90025','90026','90027','90028','90029','90030','90031','90032','90033','90034','90035','90036','90037','90038','90039','90040', '90041','90042','90043','90044','90045','90046','90047','90048','90049','90050','90051','90052','90053','90054','90055','90056','90057','90058','90059','90060', '90061','90062','90063','90064','90065','90066','90067','90068','90069','90070','90071','90072','90073','90074','90075','90076','90077','90078','90079','90080', '90081','90082','90083','90084','90086','90087','90088','90089','90091','90093','90094','90095','90096','90101','90102','90103','90174','90185','90189','90201', '90202','90209','90210','90211','90212','90213','90220','90221','90222','90223','90224','90230','90231','90232','90233','90239','90240','90241','90242','90245', '90247','90248','90249','90250','90251','90254','90255','90260','90261','90262','90263','90264','90265','90266','90267','90270','90272','90274','90275','90277', '90278','90280','90290','90291','90292','90293','90294','90295','90296','90301','90302','90303','90304','90305','90306','90307','90308','90309','90310','90311', '90312','90313','90397','90398','90401','90402','90403','90404','90405','90406','90407','90408','90409','90410','90411','90501','90502','90503','90504','90505', '90506','90507','90508','90509','90510','90601','90602','90603','90604','90605','90606','90607','90608','90609','90610','90612','90620','90621','90622','90623', '90624','90630','90631','90632','90633','90637','90638','90639','90640','90650','90651','90652','90659','90660','90661','90662','90665','90670','90671','90680', '90701','90702','90703','90704','90706','90707','90710','90711','90712','90713','90714','90715','90716','90717','90720','90721','90723','90731','90732','90733', '90734','90740','90742','90743','90744','90745','90746','90747','90748','90749','90755','90801','90802','90803','90804','90805','90806','90807','90808','90809', '90810','90813','90814','90815','90822','90831','90832','90833','90834','90835','90840','90842','90844','90845','90846','90847','90848','90853','90888','90895', '90899','91001','91003','91006','91007','91009','91010','91011','91012','91016','91017','91020','91021','91023','91024','91025','91030','91031','91040','91041', '91042','91043','91046','91050','91051','91066','91077','91101','91102','91103','91104','91105','91106','91107','91108','91109','91110','91114','91115','91116', '91117','91118','91121','91123','91124','91125','91126','91129','91131','91175','91182','91184','91185','91186','91187','91188','91189','91191','91201','91202', '91203','91204','91205','91206','91207','91208','91209','91210','91214','91221','91222','91224','91225','91226','91301','91302','91303','91304','91305','91306', '91307','91308','91309','91310','91311','91312','91313','91316','91319','91320','91321','91322','91324','91325','91326','91327','91328','91329','91330','91331', '91333','91334','91335','91337','91340','91341','91342','91343','91344','91345','91346','91350','91351','91352','91353','91354','91355','91356','91357','91358', '91359','91360','91361','91362','91363','91364','91365','91367','91371','91372','91376','91377','91380','91381','91382','91383','91384','91385','91386','91387', '91388','91390','91392','91393','91394','91395','91396','91399','91401','91402','91403','91404','91405','91406','91407','91408','91409','91410','91411','91412', '91413','91416','91423','91426','91436','91470','91482','91495','91496','91497','91499','91501','91502','91503','91504','91505','91506','91507','91508','91510', '91521','91522','91523','91526','91601','91602','91603','91604','91605','91606','91607','91608','91609','91610','91611','91612','91614','91615','91616','91617', '91618','91701','91702','91706','91708','91709','91710','91711','91714','91715','91716','91722','91723','91724','91729','91730','91731','91732','91733','91734', '91735','91737','91739','91740','91741','91743','91744','91745','91746','91747','91748','91749','91750','91752','91754','91755','91756','91758','91759','91761', '91762','91763','91764','91765','91766','91767','91768','91769','91770','91771','91772','91773','91775','91776','91778','91780','91784','91785','91786','91788', '91789','91790','91791','91792','91793','91795','91797','91798','91799','91801','91802','91803','91804','91841','91896','91899','91901','91902','91903','91905', '91906','91908','91909','91910','91911','91912','91913','91914','91915','91916','91917','91921','91931','91932','91933','91934','91935','91941','91942','91943', '91944','91945','91946','91947','91948','91950','91951','91962','91963','91976','91977','91978','91979','91980','91990','92003','92004','92007','92008','92009', '92010','92011','92013','92014','92018','92019','92020','92021','92022','92023','92024','92025','92026','92027','92028','92029','92030','92033','92036','92037', '92038','92039','92040','92046','92049','92051','92052','92054','92055','92056','92057','92058','92059','92060','92061','92064','92065','92066','92067','92068', '92069','92070','92071','92072','92074','92075','92078','92079','92081','92082','92083','92084','92085','92086','92088','92090','92091','92092','92093','92096', '92101','92102','92103','92104','92105','92106','92107','92108','92109','92110','92111','92112','92113','92114','92115','92116','92117','92118','92119','92120', '92121','92122','92123','92124','92126','92127','92128','92129','92130','92131','92132','92133','92134','92135','92136','92137','92138','92139','92140','92142', '92143','92145','92147','92149','92150','92152','92153','92154','92155','92158','92159','92160','92161','92162','92163','92164','92165','92166','92167','92168', '92169','92170','92171','92172','92173','92174','92175','92176','92177','92178','92179','92182','92184','92186','92187','92190','92191','92192','92193','92194', '92195','92196','92197','92198','92199','92201','92202','92203','92210','92211','92220','92223','92225','92227','92230','92231','92233','92234','92235','92236', '92239','92240','92241','92242','92243','92244','92247','92248','92249','92250','92251','92252','92253','92254','92255','92256','92257','92258','92259','92260', '92261','92262','92263','92264','92267','92268','92270','92273','92274','92275','92276','92277','92278','92280','92281','92282','92283','92284','92285','92286', '92292','92301','92304','92305','92307','92308','92309','92310','92311','92312','92313','92314','92315','92316','92317','92318','92320','92321','92322','92323', '92324','92325','92326','92327','92328','92329','92332','92333','92334','92335','92336','92337','92338','92339','92340','92341','92342','92344','92345','92346', '92347','92350','92352','92354','92356','92357','92358','92359','92363','92364','92365','92366','92368','92369','92371','92372','92373','92374','92375','92376', '92377','92378','92382','92384','92385','92386','92389','92391','92392','92393','92394','92395','92397','92398','92399','92401','92402','92403','92404','92405', '92406','92407','92408','92410','92411','92412','92413','92414','92415','92418','92420','92423','92424','92427','92501','92502','92503','92504','92505','92506', '92507','92508','92509','92513','92514','92515','92516','92517','92518','92519','92521','92522','92530','92531','92532','92536','92539','92543','92544','92545', '92546','92548','92549','92551','92552','92553','92554','92555','92556','92557','92561','92562','92563','92564','92567','92570','92571','92572','92581','92582', '92583','92584','92585','92586','92587','92589','92590','92591','92592','92593','92595','92596','92599','92602','92603','92604','92605','92606','92607','92609', '92610','92612','92614','92615','92616','92617','92618','92619','92620','92623','92624','92625','92626','92627','92628','92629','92630','92637','92646','92647', '92648','92649','92650','92651','92652','92653','92654','92655','92656','92657','92658','92659','92660','92661','92662','92663','92672','92673','92674','92675', '92676','92677','92678','92679','92683','92684','92685','92688','92690','92691','92692','92693','92694','92697','92698','92701','92702','92703','92704','92705', '92706','92707','92708','92709','92710','92711','92712','92725','92728','92735','92780','92781','92782','92799','92801','92802','92803','92804','92805','92806', '92807','92808','92809','92811','92812','92814','92815','92816','92817','92821','92822','92823','92825','92831','92832','92833','92834','92835','92836','92837', '92838','92840','92841','92842','92843','92844','92845','92846','92850','92856','92857','92859','92860','92861','92862','92863','92864','92865','92866','92867', '92868','92869','92870','92871','92877','92878','92879','92880','92881','92882','92883','92885','92886','92887','92899','93001','93002','93003','93004','93005', '93006','93007','93009','93010','93011','93012','93013','93014','93015','93016','93020','93021','93022','93023','93024','93030','93031','93032','93033','93034', '93035','93036','93040','93041','93042','93043','93044','93060','93061','93062','93063','93064','93065','93066','93067','93093','93094','93099','93101','93102', '93103','93105','93106','93107','93108','93109','93110','93111','93116','93117','93118','93120','93121','93130','93140','93150','93160','93190','93199','93201', '93203','93205','93206','93207','93215','93216','93218','93219','93220','93222','93224','93225','93226','93238','93240','93241','93243','93249','93250','93251', '93252','93254','93255','93256','93257','93258','93260','93261','93263','93268','93270','93276','93280','93283','93285','93287','93301','93302','93303','93304', '93305','93306','93307','93308','93309','93311','93312','93313','93314','93380','93381','93382','93383','93384','93385','93386','93387','93388','93389','93390', '93401','93402','93403','93405','93406','93407','93408','93409','93410','93412','93420','93421','93422','93423','93424','93427','93428','93429','93430','93432', '93433','93434','93436','93437','93438','93440','93441','93442','93443','93444','93445','93446','93447','93448','93449','93453','93454','93455','93456','93457', '93458','93460','93461','93463','93464','93465','93475','93483','93501','93502','93504','93505','93510','93516','93518','93519','93523','93524','93527','93528', '93531','93532','93534','93535','93536','93539','93542','93543','93544','93550','93551','93552','93553','93554','93555','93556','93558','93560','93561','93562', '93563','93581','93584','93586','93590','93591','93592','93596','93599','95644')  THEN ""West Southwest"" ELSE ""Western Mountain Pacific"" END AS GEO_ORG ELSE ""Undeployed"" END AS GEO_ORG, CASE WHEN  country_cd='CA'  THEN ""Canada"" END AS GEO_ORG FROM PLU  WHERE state='CA');",Americas_Account_Dashboard_BT_MI.sas
" CREATE TABLE MRDW_No_Wholesale_A AS  ( SELECT sd.year_cal AS stay_year, sd.month_cal_id AS stay_pd_mo, pr.property_cd AS prop_code, pr.brand_cd AS brand_code, hi.base_business_id AS goal_account_id, SUM( dr.rooms_qty) AS rn, SUM ( ROUND( dr.proj_net_local_rev_amt,2)) AS local_rev, SUM(  CASE WHEN cc.exch_per_us_dlr_rte IN ( 0) THEN ROUND( dr.proj_net_local_rev_amt,2) ELSE ROUND( ( dr.proj_net_local_rev_amt/cc.exch_per_us_dlr_rte),2) END) AS usd_rev FROM mrdw_fact_daily_revenue dr INNER JOIN mrdw_dim_currency_conversion cc ON ( dr.date_currency_stay_key = cc.date_currency_key) INNER JOIN mrdw_dim_date sd ON ( cc.date_key = sd.date_key) INNER JOIN mrdw_dim_market_rates mr ON ( dr.market_rate_key = mr.market_rate_key) INNER JOIN mrdw_dim_property pr ON ( mr.property_id = pr.property_id) INNER JOIN mrdw_brg_master_account_ids m ON ( dr.confo_num_curr_id = m.confo_num_curr_id AND dr.confo_num_orig_id = m.confo_num_orig_id AND dr.date_create_key = m.date_create_key) INNER JOIN Edw_dim_descendent_accounts_v hi ON ( hi.descendent_account_key = m.derived_account_id ) INNER JOIN edw_dim_account_site edw ON ( edw.account_nat_key = m.derived_account_id) INNER JOIN mrdw_dim_status_accom AS a19 ON ( a19.status_accom_key = DR.status_accom_key) WHERE edw.dw_current_ind=1 AND ( ( sd.year_cal = &curyr AND sd.month_cal_id <=&shortpd) OR sd.year_cal IN ( &curyr-1, &curyr-2, &curyr-3)) AND hi.base_business_id IN ( %ClaritasList2) AND mr.market_type_cd IN ( 'B','P','C') AND a19.action_cd <> 'NR' AND dr.proj_net_local_rev_amt/dr.rooms_qty NOT IN ( 999,999.99,9999,9999.99,99999,99999.99,999999,999999.99) GROUP BY stay_year, stay_pd_mo, prop_code, brand_code, goal_account_id  ) ;",Americas_Account_Dashboard_BT_MI.sas
 CREATE TABLE MRDW_No_Wholesale1 AS ( SELECT  *  FROM MRDW_No_Wholesale_A );,Americas_Account_Dashboard_BT_MI.sas
" CREATE TABLE MRDW_No_Wholesale AS select stay_year, stay_pd_mo, prop_code, brand_code, goal_account_id, rn, local_rev, usd_rev FROM MRDW_No_Wholesale1 ;",Americas_Account_Dashboard_BT_MI.sas
" CREATE TABLE MRDW_Wholesale_A AS  ( SELECT sd.year_cal AS stay_year, sd.month_cal_id AS stay_pd_mo, pr.property_cd AS prop_code, pr.brand_cd AS brand_code, di.intermediary_id AS goal_account_id, SUM( dr.rooms_qty) AS rn, SUM( ROUND( dr.proj_net_local_rev_amt,2)) AS local_rev, SUM( CASE WHEN cc.exch_per_us_dlr_rte IN ( 0) THEN ROUND( dr.proj_net_local_rev_amt,2) ELSE ROUND( ( dr.proj_net_local_rev_amt/cc.exch_per_us_dlr_rte),2) END) AS usd_rev FROM mrdw_fact_daily_revenue dr INNER JOIN mrdw_dim_currency_conversion cc ON ( dr.date_currency_stay_key = cc.date_currency_key) INNER JOIN mrdw_dim_date sd ON ( cc.date_key = sd.date_key) INNER JOIN mrdw_dim_market_rates mr ON ( dr.market_rate_key = mr.market_rate_key) INNER JOIN mrdw_dim_property pr ON ( mr.property_id = pr.property_id) INNER JOIN mrdw_brg_intermediary brg   ON ( dr.confo_num_curr_id = brg.confo_num_curr_id AND dr.confo_num_orig_id = brg.confo_num_orig_id AND dr.date_create_key = brg.date_create_key) INNER JOIN mrdw_dim_intermediary di  ON ( brg.intermediary_key = di.intermediary_key) INNER JOIN mrdw_dim_status_accom AS a19 ON ( a19.status_accom_key = DR.status_accom_key) WHERE di.intermediary_id IN ( %WholesaleList) AND ( ( sd.year_cal = &curyr AND sd.month_cal_id <=&shortpd) OR sd.year_cal IN ( &curyr-1, &curyr-2, &curyr-3)) AND di.intermediary_type_cd='WH' AND mr.market_type_cd IN ( 'B','P','C') AND a19.action_cd <> 'NR' AND dr.proj_net_local_rev_amt/dr.rooms_qty NOT IN ( 999,999.99,9999,9999.99,99999,99999.99,999999,999999.99) GROUP BY stay_year, stay_pd_mo, prop_code, brand_code, goal_account_id ORDER BY stay_year, stay_pd_mo, prop_code, brand_code, goal_account_id  ) ;",Americas_Account_Dashboard_BT_MI.sas
" CREATE TABLE MRDW_Wholesale_D AS  ( SELECT sd.year_cal AS stay_year, sd.month_cal_id AS stay_pd_mo, pr.property_cd AS prop_code, pr.brand_cd AS brand_code, di.intermediary_id AS goal_account_id, mr.rate_pgm_cd AS rate_prog_code, SUM( dr.rooms_qty) AS rn, SUM( ROUND( dr.proj_net_local_rev_amt,2)) AS local_rev, SUM( CASE WHEN cc.exch_per_us_dlr_rte IN ( 0) THEN ROUND( dr.proj_net_local_rev_amt,2) ELSE ROUND( ( dr.proj_net_local_rev_amt/cc.exch_per_us_dlr_rte),2) END) AS usd_rev FROM mrdw_fact_daily_revenue dr INNER JOIN mrdw_dim_currency_conversion cc ON ( dr.date_currency_stay_key = cc.date_currency_key) INNER JOIN mrdw_dim_date sd ON ( cc.date_key = sd.date_key) INNER JOIN mrdw_dim_market_rates mr ON ( dr.market_rate_key = mr.market_rate_key) INNER JOIN mrdw_dim_property pr ON ( mr.property_id = pr.property_id) INNER JOIN mrdw_brg_intermediary brg   ON ( dr.confo_num_curr_id = brg.confo_num_curr_id AND dr.confo_num_orig_id = brg.confo_num_orig_id AND dr.date_create_key = brg.date_create_key) INNER JOIN mrdw_dim_intermediary di  ON ( brg.intermediary_key = di.intermediary_key) INNER JOIN mrdw_dim_status_accom AS a19 ON ( a19.status_accom_key = DR.status_accom_key) WHERE di.intermediary_id IN ( %WholesaleList) AND ( ( sd.year_cal = &curyr AND sd.month_cal_id <=&shortpd) OR sd.year_cal IN ( &curyr-1, &curyr-2, &curyr-3)) AND di.intermediary_type_cd='IA' AND mr.market_type_cd IN ( 'B','P','C') AND a19.action_cd <> 'NR' AND dr.proj_net_local_rev_amt/dr.rooms_qty NOT IN ( 999,999.99,9999,9999.99,99999,99999.99,999999,999999.99) GROUP BY stay_year, stay_pd_mo, prop_code, brand_code, goal_account_id, rate_prog_code ORDER BY stay_year, stay_pd_mo, prop_code, brand_code, goal_account_id  ) ;",Americas_Account_Dashboard_BT_MI.sas
" CREATE TABLE MRDW_Wholesale_D_RtProg AS select a.stay_year, a.stay_pd_mo, a.prop_code, a.brand_code, a.goal_account_id, SUM( a.rn) AS rn, SUM( a.local_rev) AS local_rev, SUM( a.usd_rev) AS usd_rev FROM MRDW_Wholesale_D a INNER JOIN ( select distinct iata_number, rate_pgm_cd FROM Deployed_Accts) b ON a.goal_account_id=b.iata_number AND a.rate_prog_code=b.rate_pgm_cd GROUP BY a.stay_year, a.stay_pd_mo, a.prop_code, a.brand_code, a.goal_account_id ;",Americas_Account_Dashboard_BT_MI.sas
 CREATE TABLE MRDW_Wholesale AS ( SELECT  *  FROM MRDW_Wholesale_A UNION ALL SELECT  *  FROM MRDW_Wholesale_D_RtProg);,Americas_Account_Dashboard_BT_MI.sas
" CREATE TABLE AcctProd_w_PropDetail AS select b.deployed_org, b.geo_org, a.stay_year, a.stay_pd_mo, a.prop_code, a.brand_code, b.domint, b.country_cd AS prop_country, a.goal_account_id, SUM( a.rn) AS rn, SUM( a.local_rev) AS local_rev, SUM( a.usd_rev) AS usd_rev FROM MRDW_No_Wholesale a INNER JOIN Prop b ON a.prop_code=b.marsha WHERE a.goal_account_id not IN ( %ClaritasList3) GROUP BY b.deployed_org, b.geo_org, a.stay_year, a.stay_pd_mo, a.prop_code, a.brand_code, b.domint, b.country_cd, a.goal_account_id ;",Americas_Account_Dashboard_BT_MI.sas
" CREATE TABLE MidMarket_w_PropDetail AS select b.deployed_org, b.geo_org, a.stay_year, a.stay_pd_mo, a.prop_code, a.brand_code, b.domint, b.country_cd AS prop_country, a.goal_account_id, SUM( a.rn) AS rn, SUM( a.local_rev) AS local_rev, SUM( a.usd_rev) AS usd_rev FROM MRDW_No_Wholesale a INNER JOIN Prop b ON a.prop_code=b.marsha WHERE a.goal_account_id IN ( %ClaritasList3) GROUP BY b.deployed_org, b.geo_org, a.stay_year, a.stay_pd_mo, a.prop_code, a.brand_code, b.domint, b.country_cd, a.goal_account_id ;",Americas_Account_Dashboard_BT_MI.sas
 CREATE TABLE MM_GeographicLead_&curyrpd AS select * FROM OTBND.MM_GEO_ORG_&CURYR._&PERIOD ;,Americas_Account_Dashboard_BT_MI.sas
"CREATE TABLE dedupe_MM_list AS (SELECT distinct executive_eid, executive_name, org_name, role_title, account_id FROM accountlist1 WHERE role_title IN ( 'Market Account Executive, Mid-Market')  ORDER BY org_name ,account_id);",Americas_Account_Dashboard_BT_MI.sas
" CREATE TABLE AP_MM_PRODUCTION AS select a.stay_year, a.stay_pd_mo, a.prop_code, a.brand_code, d.account_name, a.goal_account_id, a.rn, a.local_rev, a.usd_rev, b.executive_eid, b.executive_name, b.role_title, c.deployed_org AS prp_org label=""Property_Org"", c.geo_org label=""Property_Geographic_Org"", b.org_name AS mgr_org_name label=""Manager_Assigned_Org"" FROM MidMarket_w_PropDetail a INNER JOIN dedupe_MM_list b ON a.goal_account_id=b.account_id INNER JOIN prop c ON a.prop_code=c.marsha INNER JOIN acctnames d ON CAST( d.account_id AS INT )=a.goal_account_id ORDER BY a.goal_account_id, a.prop_code ;",Americas_Account_Dashboard_BT_MI.sas
CREATE TABLE AP_AS_MM_Production AS (SELECT * FROM AP_MM_Production ORDER BY prop_code);,Americas_Account_Dashboard_BT_MI.sas
"CREATE TABLE MidMarket_DataCheck AS (SELECT mgr_org_name, executive_eid, goal_account_id, SUM(rn) AS rn, SUM(usd_rev) AS usd_rev FROM AP_AS_MM_Production GROUP BY mgr_org_name, executive_eid, goal_account_id );",Americas_Account_Dashboard_BT_MI.sas
" CREATE TABLE ACCTPROD_WH_PROPDETAIL AS select b.deployed_org, b.geo_org, a.stay_year, a.stay_pd_mo, a.prop_code, a.brand_code, b.domint, b.country_cd AS prop_country, goal_account_id, SUM( a.rn) AS rn, SUM( a.local_rev) AS local_rev, SUM( a.usd_rev) AS usd_rev FROM MRDW_Wholesale a INNER JOIN Prop b ON a.prop_code=b.marsha GROUP BY b.deployed_org, b.geo_org, a.stay_year, a.stay_pd_mo, a.prop_code, a.brand_code, b.domint, b.country_cd, a.goal_account_id ;",Americas_Account_Dashboard_BT_MI.sas
" CREATE TABLE AP_MINUS_MM_PROSPECT AS SELECT A.STAY_YEAR, A.STAY_PD_MO, A.PROP_CODE, A.BRAND_CODE, B.ACCOUNT_NAME, LTRIM( CAST( A.GOAL_ACCOUNT_ID AS INT )) AS GOAL_ACCOUNT_ID, A.RN, A.LOCAL_REV, A.USD_REV, B.EXECUTIVE_EID, B.EXECUTIVE_NAME, B.ROLE_TITLE, A.DEPLOYED_ORG AS PRP_ORG LABEL=""Property_Org"", A.GEO_ORG LABEL=""Property_Geographic_Org"", A.DEPLOYED_ORG AS MGR_ORG_NAME LABEL=""Manager_Assigned_Org"" FROM ACCTPROD_W_PROPDETAIL A INNER JOIN ( SELECT * FROM ACCTLIST_NOWH WHERE EXECUTIVE_EID IS NOT NULL) B ON A.DEPLOYED_ORG=B.ORG_NAME AND A.GOAL_ACCOUNT_ID=CAST( B.ACCOUNT_ID AS INT ) UNION ALL SELECT A.STAY_YEAR, A.STAY_PD_MO, A.PROP_CODE, A.BRAND_CODE, B.ACCOUNT_NAME, A.GOAL_ACCOUNT_ID, A.RN, A.LOCAL_REV, A.USD_REV, B.EXECUTIVE_EID, B.EXECUTIVE_NAME, B.ROLE_TITLE, A.DEPLOYED_ORG AS PRP_ORG LABEL=""Property_Org"", A.GEO_ORG LABEL=""Property_Geographic_Org"", A.DEPLOYED_ORG AS MGR_ORG_NAME LABEL=""Manager_Assigned_Org"" FROM ACCTPROD_WH_PROPDETAIL A INNER JOIN ( SELECT * FROM ACCTLIST_WH WHERE EXECUTIVE_EID IS NOT NULL) B ON A.DEPLOYED_ORG=B.ORG_NAME AND A.GOAL_ACCOUNT_ID=B.ACCOUNT_ID ;",Americas_Account_Dashboard_BT_MI.sas
" CREATE TABLE ALL_MI_AP_DATA AS SELECT STAY_YEAR, STAY_PD_MO, PROP_CODE AS MARSHA, BRAND_CODE, ACCOUNT_NAME, GOAL_ACCOUNT_ID, RN, LOCAL_REV, USD_REV, EXECUTIVE_EID, EXECUTIVE_NAME, ROLE_TITLE, PRP_ORG LABEL=""Property_Org"", GEO_ORG LABEL=""Property_Geographic_Org"", MGR_ORG_NAME LABEL=""Manager_Assigned_Org"", CASE WHEN PRP_ORG=MGR_ORG_NAME THEN ""N"" ELSE ""Y"" END AS OUTBOUND FROM AP_MINUS_MM_PROSPECT UNION ALL SELECT STAY_YEAR, STAY_PD_MO, PROP_CODE AS MARSHA, BRAND_CODE, ACCOUNT_NAME, LTRIM( CAST( GOAL_ACCOUNT_ID AS VARCHAR(10) )) AS GOAL_ACCOUNT_ID, RN, LOCAL_REV, USD_REV, EXECUTIVE_EID, EXECUTIVE_NAME, ROLE_TITLE, PRP_ORG LABEL=""Property_Org"", GEO_ORG LABEL=""Property_Geographic_Org"", MGR_ORG_NAME LABEL=""Manager_Assigned_Org"", CASE WHEN PRP_ORG=MGR_ORG_NAME THEN ""N"" ELSE ""Y"" END AS OUTBOUND FROM AP_AS_MM_PRODUCTION ;",Americas_Account_Dashboard_BT_MI.sas
" CREATE TABLE CAD_CONVERSION_TABLE AS  ( SELECT CURRENCY_EXCH_DT, EXTRACT( YEAR FROM CURRENCY_EXCH_DT) AS YEAR, EXTRACT( MONTH FROM CURRENCY_EXCH_DT) AS MONTH, CURRENCY_EXCH_RTE, FROM_CURRENCY_CD, TO_CURRENCY_CD FROM EDW_DIM_CURRENCY WHERE CURRENCY_EXCH_DT >= &STRT_YR. AND FROM_CURRENCY_CD = 'CAD' ORDER BY CURRENCY_EXCH_DT DESC, YEAR DESC, MONTH DESC  ) ;",Americas_Account_Dashboard_BT_MI.sas
" CREATE TABLE CAD_CONVERSION_LAST_REC AS ( SELECT   * , FIRST(MONTH) OVER ( PARTITION BY MONTH GROUP BY DESC , YEAR , DESC , MONTH ORDER BY DESC , YEAR , DESC , MONTH )  FROM CAD_CONVERSION_TABLE );",Americas_Account_Dashboard_BT_MI.sas
"CREATE TABLE CAN_INBOUND AS ( SELECT  *, LOCAL_REV AS ROOM_REV FROM ALL_MI_AP_DATA  WHERE MGR_ORG_NAME='Canada' AND OUTBOUND='N');",Americas_Account_Dashboard_BT_MI.sas
ALTER TABLE CAN_INBOUND DROP COLUMN USD_REV ;,Americas_Account_Dashboard_BT_MI.sas
"CREATE TABLE CAN_OTBND_IN_CNTRY AS ( SELECT  *, LOCAL_REV AS ROOM_REV FROM ALL_MI_AP_DATA  WHERE MGR_ORG_NAME='Canada' AND OUTBOUND='Y' AND GEO_ORG='Canada');",Americas_Account_Dashboard_BT_MI.sas
ALTER TABLE CAN_OTBND_IN_CNTRY DROP COLUMN USD_REV ;,Americas_Account_Dashboard_BT_MI.sas
CREATE TABLE CAN_OUTBOUND AS ( SELECT  *  FROM ALL_MI_AP_DATA  WHERE MGR_ORG_NAME='Canada' AND OUTBOUND='Y' AND GEO_ORG<>'Canada');,Americas_Account_Dashboard_BT_MI.sas
"CREATE TABLE OTHER_MI_AP_DATA AS ( SELECT  *, USD_REV AS ROOM_REV FROM ALL_MI_AP_DATA  WHERE MGR_ORG_NAME<>'Canada' AND OUTBOUND<>'N');",Americas_Account_Dashboard_BT_MI.sas
ALTER TABLE OTHER_MI_AP_DATA DROP COLUMN LOCAL_REV ;,Americas_Account_Dashboard_BT_MI.sas
" CREATE TABLE CAN_OTBND_CONVERT AS SELECT A.STAY_YEAR, A.STAY_PD_MO, A.MARSHA, A.BRAND_CODE, A.ACCOUNT_NAME, A.GOAL_ACCOUNT_ID, A.RN, A.USD_REV/B.CURRENCY_EXCH_RTE AS ROOM_REV FORMAT=BEST12., A.EXECUTIVE_EID, A.EXECUTIVE_NAME, A.ROLE_TITLE, A.PRP_ORG LABEL=""Property_Org"", A.GEO_ORG LABEL=""Property_Geographic_Org"", A.MGR_ORG_NAME LABEL=""Manager_Assigned_Org"", A.OUTBOUND FROM CAN_OUTBOUND A INNER JOIN CAD_CONVERSION_LAST_REC B ON A.STAY_YEAR=B.YEAR AND A.STAY_PD_MO=B.MONTH ;",Americas_Account_Dashboard_BT_MI.sas
 CREATE TABLE ACCTDASH.FINAL_AP_CONVERTED AS ( SELECT  *  FROM CAN_INBOUND UNION ALL SELECT  *  FROM CAN_OTBND_IN_CNTRY UNION ALL SELECT  *  FROM CAN_OTBND_CONVERT UNION ALL SELECT  *  FROM OTHER_MI_AP_DATA);,Americas_Account_Dashboard_BT_MI.sas
" CREATE TABLE CURR_ACCT_LIST AS ( SELECT  * , CASE WHEN  SPLIT_ASGN_ID=""""  THEN COMPANY_ID ELSE SPLIT_ASGN_ID END AS TOTAL_PACE_ID FROM CURR_ACCT_LIST1 );",Americas_Account_Dash_Sources.sas
"CREATE TABLE ACCT_LIST_DEDUPE AS (SELECT DISTINCT TOTAL_PACE_ID, COMPANY_ID, BOOKING_YR, ORG_NAME, EXECUTIVE_EID, COMPANY_NAME FROM CURR_ACCT_LIST ORDER BY TOTAL_PACE_ID ,COMPANY_ID ,COMPANY_NAME);",Americas_Account_Dash_Sources.sas
CREATE TABLE CURR_ACCT_LIST_P AS ( SELECT  *  FROM CURR_ACCT_LIST  WHERE GOAL_TYPE='P');,Americas_Account_Dash_Sources.sas
CREATE TABLE CURR_ACCT_LIST_AP AS ( SELECT  *  FROM CURR_ACCT_LIST  WHERE GOAL_TYPE='A');,Americas_Account_Dash_Sources.sas
"CREATE TABLE ACCT_LIST_PACE AS (SELECT TOTAL_PACE_ID, COMPANY_ID, BOOKING_YR, ORG_NAME, EXECUTIVE_EID, EXECUTIVE_NAME, ROLE_TITLE, COMPANY_NAME FROM CURR_ACCT_LIST_P ORDER BY TOTAL_PACE_ID);",Americas_Account_Dash_Sources.sas
"CREATE TABLE ACCT_LIST_AP AS (SELECT TOTAL_PACE_ID, COMPANY_ID, BOOKING_YR, ORG_NAME, EXECUTIVE_EID, EXECUTIVE_NAME, ROLE_TITLE, COMPANY_NAME FROM CURR_ACCT_LIST_AP ORDER BY TOTAL_PACE_ID ,ORG_NAME);",Americas_Account_Dash_Sources.sas
" CREATE TABLE ACS_ROSTER1 AS  ( SELECT ORG_NAME AS ORGANIZATION, MARKET_NAME AS MARKET, AREA_NAME AS AREA, ALT_ROLE_TITLE AS ROLE, UPPER( TEAM_MEMBER_EID) AS EID, FULL_NAME AS NAME, UPPER( AREA_SUB_LEADER_EID) AS AREA_SUB_LEADER_EID, UPPER( AREA_LEADER_EID) AS AREA_LEADER_EID, UPPER( SR_MAE_EID) AS SR_MAE_EID, UPPER( MKT_LEADER_EID) AS MKT_LEADER_EID FROM VISIBILITY_HIERARCHY_VW WHERE TEAM_MEMBER_EID IS NOT NULL AND STATUS NOT IN ( 'FUTURE') AND START_DATE<=%NRBQUOTE( ')&END_DT%NRBQUOTE( ')AND END_DATE>=%NRBQUOTE( ')&END_DT%NRBQUOTE( ') AND UPPER( ALT_ROLE_TITLE) NOT IN ( 'ORG VP','MARKET ACCOUNT EXECUTIVE LEADER', 'SR. MARKET ACCOUNT EXECUTIVE','MARKET SALES LEADER','AREA SALES LEADER', 'AREA SALES SUB LEADER')  ) ;",Americas_Account_Dash_Sources.sas
 CREATE TABLE PLU AS  ( SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER_HIST WHERE OPENFLAG='Y' AND asof_yrmo=&curyrpd.  )  ;,Americas_Account_Dash_Sources.sas
 CREATE TABLE QD AS ( SELECT  *  FROM ACDASHQD.QD_Deployed UNION ALL SELECT  *  FROM ACDASHQD.QD_Whls);,Americas_Account_Dash_Sources.sas
 CREATE TABLE AP_TOTAL AS ( SELECT  *  FROM BTPROD.FINAL_AP_CONVERTED );,Americas_Account_Dash_Sources.sas
" CREATE TABLE AP AS SELECT STAY_YEAR AS REPORT_YEAR, STAY_PD_MO AS REPORT_MONTH, MARSHA AS MARSHA_CODE, ACCOUNT_NAME, GOAL_ACCOUNT_ID AS ACCOUNT_ID, EXECUTIVE_EID, ROLE_TITLE, PRP_ORG AS property_organization_name, mgr_org_name AS organization_name, CASE WHEN OUTBOUND='Y' THEN 'Outbound' WHEN OUTBOUND='N' THEN 'Inbound' END AS AP_INDICATOR, CASE WHEN OUTBOUND='N' THEN RN ELSE 0 END AS ap_inbound_roomnights, CASE WHEN OUTBOUND='Y' THEN RN ELSE 0 END AS ap_outbound_roomnights, CASE WHEN OUTBOUND='N' THEN ROOM_REV ELSE 0 END AS ap_inbound_room_revenue, CASE WHEN OUTBOUND='Y' THEN ROOM_REV ELSE 0 END AS ap_outbound_room_revenue, rn AS AP_ROOMNIGHTS, ROOM_REV AS AP_ROOM_REVENUE FROM AP_TOTAL;",Americas_Account_Dash_Sources.sas
 CREATE TABLE SOC AS  ( SELECT * FROM AW_SLS_PRD_AM.ACCT_DASH_SALES_ORGS_COORDINATES ) ;,Americas_Account_Dash_Sources.sas
" CREATE TABLE INDUSTRY AS  ( SELECT CLARITAS_ID AS ACCOUNT_ID, SITE_PRIMARY_INDUSTRY_NM AS INDUSTRY FROM AW_TGT_PROXY_DBO.SRW_LNK_CI_ACCOUNT WHERE dw_curr_ind =1 AND dw_active_ind='Y' AND Claritas_ID is not NULL AND Claritas_ID <> '0' AND SITE_PRIMARY_INDUSTRY_NM is not null ) ;",Americas_Account_Dash_Sources.sas
 CREATE TABLE DATE_RANGE AS  ( SELECT * FROM AW_SLS_PRD_AM.ACCT_DASH_DATE_RANGE )  ;,Americas_Account_Dash_Sources.sas
CREATE TABLE IND AS (SELECT DISTINCT * FROM INDUSTRY ORDER BY ACCOUNT_ID);,Americas_Account_Dash_Sources.sas
" CREATE TABLE COMPANY_NAMES AS SELECT A.BOOKING_YR, A.COMPANY_ID AS TOTAL_PACE_ID, B.COMPANY_NAME FROM CURR_ACCT_LIST A INNER JOIN ACCT_LIST_DEDUPE B ON A.COMPANY_ID=B.COMPANY_ID;",Americas_Account_Dash_Sources.sas
"CREATE TABLE COMPANY_LIST AS (SELECT DISTINCT BOOKING_YR, TOTAL_PACE_ID, COMPANY_NAME FROM COMPANY_NAMES ORDER BY BOOKING_YR ,TOTAL_PACE_ID);",Americas_Account_Dash_Sources.sas
" CREATE TABLE AS_Roster_wLeadership AS  ( select a.year, a.month, CASE WHEN a.organization = 'HQBSO' THEN 'East Northeast' when a.organization = 'HQWSO' THEN 'West Southwest' when a.organization = 'MARSO' THEN 'Mid Atlantic' when a.organization = 'SSESO' THEN 'South Southeast' when a.organization = 'CNWSO' THEN 'Northern Mid-America' when a.organization = 'SFLSO' THEN 'Florida' when a.organization = 'WMPSO' THEN 'Western Mountain Pacific' when a.organization = 'WSCSO' THEN 'West South Central' when a.organization = 'CANSO' THEN 'Canada' END AS Organization, a.position, upper( a.eid) AS mgr_eid, a.fullname AS mgr_name, '' AS ASL_Name, '' AS ASL_EID, '' AS MSL_Name, '' AS MSL_EID, f.FullName AS Acct_Sales_Ldr_Name, upper( f.eid) AS Acct_Sales_Ldr_EID, e.FullName AS Segment_Leader_Name, upper( e.eid) AS Segment_Leader_EID, c.FullName AS VP_Name, upper( c.eid) AS vp_eid FROM ( select * FROM ASroster WHERE ActiveStatus='Y') a INNER JOIN ASTeamRole b ON a.year=b.year AND a.month=b.month AND a.organization=b.organization AND a.roleid=b.roleid LEFT JOIN ( select distinct eid, fullname FROM ASRoster WHERE month=&shortpd. ) c ON ( b.VPEID=c.eid) LEFT JOIN ( select distinct eid, fullname FROM ASRoster WHERE month=&shortpd. ) e ON ( b.SegmentLeaderEID=e.eid AND b.NatlLocal='Natl') LEFT JOIN ( select distinct eid, fullname FROM ASRoster WHERE month=&shortpd. ) f ON ( b.TeamLeaderEID=f.eid AND b.NatlLocal='Natl') WHERE a.month=&shortpd. AND a.year=&curyr.  ) ;",Americas_Account_Dash_Sources.sas
" CREATE TABLE LOC_SALES_ROSTER AS  ( select a.year, a.month, CASE WHEN a.EBCCODENAME='MARSO' THEN 'Mid Atlantic' WHEN a.EBCCODENAME='CNWSO' THEN 'Northern Mid-America' WHEN a.EBCCODENAME='WMPSO' THEN 'Western Mountain Pacific' WHEN a.EBCCODENAME='HQBSO' THEN 'East Northeast' WHEN a.EBCCODENAME='HQWSO' THEN 'West Southwest' WHEN a.EBCCODENAME='SSESO' THEN 'South Southeast' WHEN a.EBCCODENAME='SFLSO' THEN 'Florida' WHEN a.EBCCODENAME='WSCSO' THEN 'West South Central' END AS Organization, CASE WHEN a.position = 'Account Executive, Affinity' THEN 'Area Account Executive, Affinity' when a.position = 'Account Executive, Government' THEN 'Area Account Executive, Government' when a.position IN ( 'Sales Executive Group', 'Sales Executive Transient') THEN 'Sales Executive' ELSE a.position END AS position, upper( a.eid) AS mgr_eid, a.fullname AS mgr_name, upper( B.EID) AS ASL_EID, b.fullname AS ASL_NAME, upper( c.eid) AS MSL_EID, c.fullname AS MSL_NAME, '' AS ACCT_SALES_LDR_EID, '' AS ACCT_SALES_LDR_NAME, '' AS SEGMENT_LEADER_EID, '' AS SEGMENT_LEADER_NAME, upper( d.eid) AS VP_EID, d.fullname AS VP_Name FROM AreaSalesRoster a LEFT JOIN ( SELECT * FROM AreaSalesRoster WHERE position IN ( 'Area Sales Leader') AND YEAR=&curyr. ) B ON UPPER( A.SUPVEID)=UPPER( B.EID) AND A.MONTH=B.MONTH LEFT JOIN ( SELECT * FROM AreaSalesRoster WHERE position IN ( 'Area Director of Sales') AND YEAR=&curyr. ) C ON ( UPPER( B.SUPVEID)=UPPER( C.EID) OR UPPER( A.SUPVEID)=UPPER( C.EID)) AND A.MONTH=C.MONTH LEFT JOIN ( SELECT * FROM AreaSalesRoster WHERE position IN ( 'Vice President of Sales', 'ORG VP') AND YEAR=&curyr. ) D ON UPPER( C.SUPVEID)=UPPER( D.EID) AND A.MONTH=D.MONTH WHERE a.year=&curyr. AND a.month=&shortpd. AND a.position not IN ( 'Area Sales Leader','Area Director of Sales','Vice President of Sales','ORG VP') ORDER BY organization, a.eid  ) ;",Americas_Account_Dash_Sources.sas
" CREATE TABLE COMBINED_ROSTER AS ( SELECT  *  , FORMAT(ASL_EID, VARCHAR(50)) AS ASL_EID , FORMAT(MSL_EID, VARCHAR(50)) AS MSL_EID , FORMAT(ASL_NAME, VARCHAR(250)) AS ASL_NAME , FORMAT(MSL_NAME, VARCHAR(250)) AS MSL_NAME  FROM AS_ROSTER_WLEADERSHIP UNION ALL SELECT  *  , FORMAT(ASL_EID, VARCHAR(50)) AS ASL_EID , FORMAT(MSL_EID, VARCHAR(50)) AS MSL_EID , FORMAT(ASL_NAME, VARCHAR(250)) AS ASL_NAME , FORMAT(MSL_NAME, VARCHAR(250)) AS MSL_NAME  FROM LOC_SALES_ROSTER);",Americas_Account_Dash_Sources.sas
" CREATE TABLE ACS_ROSTER AS SELECT &SHORTPD AS MONTH, A.ORGANIZATION, A.MARKET, A.AREA, A.EID, propcase( A.NAME) AS NAME, A.ROLE, B.ASL_EID AS AREA_SALES_LDR_EID, B.ASL_NAME AS AREA_SALES_LDR_NAME, B.MSL_EID AS MARKET_SALES_LDR_EID, B.MSL_NAME AS MARKET_SALES_LDR_NAME, B.ACCT_SALES_LDR_EID AS ACCOUNT_SALES_LDR_EID, B.ACCT_SALES_LDR_NAME AS ACCOUNT_SALES_LDR_NAME, B.SEGMENT_LEADER_EID, B.SEGMENT_LEADER_NAME, B.VP_EID, B.VP_NAME FROM ACS_ROSTER1 A LEFT JOIN COMBINED_ROSTER B ON A.ORGANIZATION=B.ORGANIZATION AND A.EID=B.MGR_EID ;",Americas_Account_Dash_Sources.sas
" CREATE TABLE Account_Sales AS SELECT DISTINCT ACS02.EID, ACS02.ORGANIZATION, COALESCE( ACS02.MARKET, 'Market Deployed') AS MARKET, COALESCE( ACS02.AREA, 'Market Deployed') AS AREA, ACS02.NAME, ACS02.ROLE, ACS02.ACCOUNT_SALES_LDR_NAME AS MSL_SRMAE, ACS02.Segment_Leader_Name AS ASL, VP_Name FROM ACS_ROSTER AS ACS02 WHERE ACS02.ROLE IN ( 'Market Account Executive, Airline','Market Account Executive, Prospect', 'Market Account Executive, EST', 'Market Account Executive, Association', 'Market Account Executive, Whsale/FIT/Tour & Travel', 'Market Account Executive, Mid-Market') AND ACS02.ORGANIZATION <> 'Canada' GROUP BY ACS02.EID, ACS02.ORGANIZATION, ACS02.MARKET, ACS02.AREA, ACS02.NAME, MSL_SRMAE, ASL, ACS02.ROLE;",Americas_Account_Dash_Sources.sas
" CREATE TABLE Local_Sales AS SELECT DISTINCT ACS02.EID, ACS02.ORGANIZATION, COALESCE( ACS02.MARKET, 'Market Deployed') AS MARKET, COALESCE( ACS02.AREA, 'Market Deployed') AS AREA, ACS02.NAME, ACS02.ROLE, ACS02.AREA_SALES_LDR_NAME AS MSL_SRMAE, ACS02.MARKET_SALES_LDR_NAME AS ASL, VP_Name FROM ACS_ROSTER AS ACS02 WHERE ACS02.ROLE IN ( 'Area Account Executive, Affinity', 'Area Account Executive, Government', 'Sales Executive') AND ACS02.ORGANIZATION <> 'Canada' GROUP BY ACS02.EID, ACS02.ORGANIZATION, ACS02.MARKET, ACS02.AREA, ACS02.NAME, MSL_SRMAE, ASL, ACS02.ROLE;",Americas_Account_Dash_Sources.sas
" CREATE TABLE Canada_Sales AS SELECT DISTINCT ACS02.EID, ACS02.ORGANIZATION, COALESCE( ACS02.MARKET, 'Market Deployed') AS MARKET, COALESCE( ACS02.AREA, 'Market Deployed') AS AREA, ACS02.NAME, ACS02.ROLE, ACS02.ACCOUNT_SALES_LDR_NAME AS MSL_SRMAE, ACS02.Segment_Leader_Name AS ASL, VP_Name FROM ACS_ROSTER AS ACS02 WHERE ACS02.ORGANIZATION = 'Canada' GROUP BY ACS02.EID, ACS02.ORGANIZATION, ACS02.MARKET, ACS02.AREA, ACS02.NAME, MSL_SRMAE, ASL, ACS02.ROLE;",Americas_Account_Dash_Sources.sas
 CREATE TABLE leader_roll AS ( SELECT  *  FROM Account_Sales UNION ALL SELECT  *  FROM Local_Sales UNION ALL SELECT  *  FROM Canada_sales);,Americas_Account_Dash_Sources.sas
" CREATE TABLE MgrProd_BT_Prop_TY AS  ( select a.rpt_yr AS report_year, a.rpt_pd_mo AS STAY_PD_MO, a.sm_org_nm AS mgr_org_name, a.sm_mkt_nm AS market_name, a.sm_area_nm AS area_name, a.sm_eid AS executive_eid, a.sm_name AS executive_name, a.prop_cd AS marsha, CASE WHEN a.prp_org_nm is null THEN 'Not Participating' ELSE a.prp_org_nm END AS property_org, a.prp_mkt_nm AS prop_market, a.prp_area_nm AS prop_area, a.account_id AS goal_account_id, a.account_nm AS account_name, a.sm_role_nm AS role_title, CASE WHEN a.act_comp IN ( 'Assigned Account IN Organization') THEN 'N' ELSE 'Y' END AS Outbound_IND, SUM( a.ap_tot_rm_nts) AS RN, SUM( a.ap_tot_rm_rev) AS ROOM_REVENUE, 'SGR_Data' AS Data_Source FROM sgr_fact_smry_mgr_prp_acct_prod a WHERE rpt_yr IN ( %bquote( ')&curyr.%bquote( ')) AND sls_segment not IN ( 'Citywide') GROUP BY rpt_yr, rpt_pd_mo, sm_org_nm, sm_mkt_nm, sm_area_nm, sm_eid, sm_name, sm_role_nm, prop_cd, prp_org_nm, prp_mkt_nm, prp_area_nm, account_id, account_nm, act_comp, outbound_ind ORDER BY rpt_yr ) ;",Americas_AP_Combined_MISW.sas
 CREATE TABLE ALLPROP_MISW AS  ( SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER  )  ;,Americas_AP_Combined_MISW.sas
" CREATE TABLE ADD_PROPERTY_DATA AS SELECT A.*,B.MISW_FLAG,B.BRND AS BRAND_CODE,B.DOMINT AS DOM_INT,B.MF AS MGD_FRN FROM MGRPROD_BT_PROP_TY A LEFT JOIN ALLPROP_MISW B ON A.MARSHA=B.MARSHA ;",Americas_AP_Combined_MISW.sas
"CREATE TABLE ADD_PROPERTY_DATA2 AS ( SELECT  * , CASE WHEN  misw_flag='MI'  THEN 'Marriott Rewards Hotels' WHEN  misw_flag='SW'  THEN 'SPG Hotels' END AS SW_MI FROM ADD_PROPERTY_DATA );",Americas_AP_Combined_MISW.sas
ALTER TABLE ADD_PROPERTY_DATA2 DROP COLUMN misw_flag ;,Americas_AP_Combined_MISW.sas
" CREATE TABLE BTPROD.BT_IN_OUT_YTD AS ( SELECT  *  , FORMAT(UPPER( property_org ), VARCHAR(40)) AS property_org , FORMAT(data_source, VARCHAR(9)) AS data_source , FORMAT(sw_mi, VARCHAR(30)) AS sw_mi , '' AS market_name , '' AS area_name , UPPER( account_name ) AS account_name  FROM ADD_PROPERTY_DATA2 );",Americas_AP_Combined_MISW.sas
 CREATE TABLE BTPROD.BT_IN_OUT_YTD_&curyr. AS ( SELECT  *  FROM BTPROD.BT_IN_OUT_YTD );,Americas_AP_Combined_MISW.sas
" CREATE TABLE HAWAII_PROPS AS  ( SELECT MARSHACODE AS MARSHA, 'Hawaii' AS ORG_NAME FROM HICALAPROPDICT WHERE MONTH = &SHORTPD AND YEAR = &CURYR AND UPPER( REGION) = 'HAWAII'  ) ;",Americas_Archive_Hawaii_Property_List.sas
" CREATE TABLE HI_PROPS AS SELECT A.ORG_NAME, B.BRND AS BRAND, B.BRND_NAME AS BRAND_NAME, A.MARSHA, B.HOTEL_NAME AS PROPERTY_NAME, B.MISW_FLAG FROM HAWAII_PROPS A INNER JOIN AWPROD.PROPERTY_MASTER B ON A.MARSHA=B.MARSHA ORDER BY A.MARSHA ;",Americas_Archive_Hawaii_Property_List.sas
"CREATE TABLE ""&SWPROPS.\Hotel List Archive\Hawaii_Property_List_&NXTPD..xlsb"" DATA=HI_PROPS AS ( SELECT * FROM HI_PROPS) ;",Americas_Archive_Hawaii_Property_List.sas
" CREATE TABLE props AS  ( SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER WHERE BRND IN ( 'AL','AR','CY','EL','FI','FP','RI','SH','TS') AND UCASE( REGION_NAME) IN ( 'AMERICAS EAST','AMERICAS WEST') AND MF='M'  )  ;",Americas_AreaSales_ATRTop100.sas
"CREATE TABLE top_matched AS   ( select hi.highest_level_account_name AS highest_level_company_name, hi.highest_level_business_id AS highest_level_claritas_id, SUM( dr.rooms_qty) AS rn, SUM( CASE WHEN cc.exch_per_us_dlr_rte IN ( 0) THEN ROUND( dr.proj_net_local_rev_amt,2) ELSE ROUND( ( dr.proj_net_local_rev_amt/cc.exch_per_us_dlr_rte),0) END) AS rv FROM mrdw_fact_daily_revenue dr INNER JOIN mrdw_dim_currency_conversion cc ON ( dr.date_currency_stay_key = cc.date_currency_key) INNER JOIN mrdw_dim_date sd ON ( cc.date_key = sd.date_key) INNER JOIN mrdw_dim_market_rates mr ON ( dr.market_rate_key = mr.market_rate_key) INNER JOIN mrdw_dim_property pr ON ( mr.property_id = pr.property_id) INNER JOIN mrdw_dim_status_accom AS a19 ON ( a19.status_accom_key = DR.status_accom_key) INNER JOIN mrdw_brg_master_account_ids m ON ( dr.confo_num_curr_id = m.confo_num_curr_id AND dr.confo_num_orig_id = m.confo_num_orig_id AND dr.date_create_key = m.date_create_key) INNER JOIN edw_dim_highest_level_account_v hi ON ( hi.account_nat_key = m.derived_account_id ) INNER JOIN edw_dim_account_site edw ON ( edw.account_nat_key = m.derived_account_id) LEFT OUTER JOIN mrdw_brg_res_account_ids br ON ( dr.confo_num_curr_id = br.confo_num_curr_id AND dr.confo_num_orig_id = br.confo_num_orig_id AND dr.date_create_key = br.date_create_key) WHERE ( 100*sd.year_cal+sd.month_cal_id >= &YBEG. AND 100*sd.year_cal+sd.month_cal_id <= &curyrpd. ) AND dr.proj_net_local_rev_amt/dr.rooms_qty NOT IN ( 999,999.99,9999,9999.99,99999,99999.99,999999,999999.99) AND edw.dw_current_ind=1 AND pr.property_cd IN ( %prp_list) GROUP BY highest_level_claritas_id, highest_level_company_name ORDER BY rn desc LIMIT 100 ) ;",Americas_AreaSales_ATRTop100.sas
"CREATE TABLE top_unmatched AS   ( select br.company_cleansed_nm AS cleansed_company_name, SUM( dr.rooms_qty) AS rn, SUM( CASE WHEN cc.exch_per_us_dlr_rte IN ( 0) THEN ROUND( dr.proj_net_local_rev_amt,2) ELSE ROUND( ( dr.proj_net_local_rev_amt/cc.exch_per_us_dlr_rte),0) END) AS rv FROM mrdw_fact_daily_revenue dr INNER JOIN mrdw_dim_currency_conversion cc ON ( dr.date_currency_stay_key = cc.date_currency_key) INNER JOIN mrdw_dim_date sd ON ( cc.date_key = sd.date_key) INNER JOIN mrdw_dim_market_rates mr ON ( dr.market_rate_key = mr.market_rate_key) INNER JOIN mrdw_dim_property pr ON ( mr.property_id = pr.property_id) INNER JOIN mrdw_dim_status_accom AS a19 ON ( a19.status_accom_key = DR.status_accom_key) LEFT OUTER JOIN mrdw_brg_res_account_ids br ON ( dr.confo_num_curr_id = br.confo_num_curr_id AND dr.confo_num_orig_id = br.confo_num_orig_id AND dr.date_create_key = br.date_create_key) INNER JOIN mrdw_brg_unmatched_company u ON ( dr.confo_num_curr_id=u.confo_num_curr_id AND dr.confo_num_orig_id=u.confo_num_orig_id AND dr.date_create_key=u.date_create_key) WHERE ( 100*sd.year_cal+sd.month_cal_id >= &YBEG. AND 100*sd.year_cal+sd.month_cal_id <= &curyrpd. ) AND dr.proj_net_local_rev_amt/dr.rooms_qty NOT IN ( 999,999.99,9999,9999.99,99999,99999.99,999999,999999.99) AND pr.property_cd IN ( %prp_list) GROUP BY cleansed_company_name ORDER BY rn desc LIMIT 100 ) ;",Americas_AreaSales_ATRTop100.sas
" CREATE TABLE top_matched2 AS ( SELECT  *  , 'matched' AS cleansed_company_name  FROM top_matched );",Americas_AreaSales_ATRTop100.sas
" CREATE TABLE top_unmatched2 AS ( SELECT  *  , 'unmatched' AS highest_level_company_name , 0 AS highest_level_claritas_id , REPLACE( cleansed_company_name,""'"",""''"" ) AS cleansed_company_name  FROM top_unmatched );",Americas_AreaSales_ATRTop100.sas
" CREATE TABLE top2hundred AS ( SELECT  *  , FORMAT(cleansed_company_name, VARCHAR(100)) AS cleansed_company_name  FROM top_matched2 UNION ALL SELECT  *  , FORMAT(cleansed_company_name, VARCHAR(100)) AS cleansed_company_name  FROM top_unmatched2);",Americas_AreaSales_ATRTop100.sas
SELECT * FROM top2hundred ORDER BY rn desc;,Americas_AreaSales_ATRTop100.sas
CREATE TABLE tophundred AS select * FROM top2hundred;,Americas_AreaSales_ATRTop100.sas
"CREATE TABLE tophundred2 AS SELECT * FROM ( SELECT *, RANK() OVER (  ORDER BY RN DESC  ) AS Rank FROM tophundred2);",Americas_AreaSales_ATRTop100.sas
" CREATE TABLE top AS ( SELECT  * , CASE WHEN  cleansed_company_name = 'matched'  THEN highest_level_company_name ELSE cleansed_company_name END AS company_name FROM tophundred2 );",Americas_AreaSales_ATRTop100.sas
CREATE TABLE matched AS ( SELECT  *  FROM tophundred2  WHERE cleansed_company_name='matched');,Americas_AreaSales_ATRTop100.sas
CREATE TABLE unmatched AS ( SELECT  *  FROM tophundred2 );,Americas_AreaSales_ATRTop100.sas
" CREATE TABLE atr_pull_matched AS   ( select hi.highest_level_account_name AS company_name, hi.highest_level_business_id AS highest_level_claritas_id, avg( dr.days_stay_qty) AS los, pr.property_cd AS Marsha, sd.year_cal AS year, sd.month_cal_id AS month, sd.qtr_cal_id AS qtr, CASE WHEN sd.weekend_ind = 1 THEN 'Weekend' ELSE 'Weekday' END AS Weekday_Weekend, sd.date_dt, sd.ab_day_of_week_cd, sd.week_acctg_id, CASE WHEN mr.market_type_cd IN ( 'G') THEN 'Group' when mr.market_type_cd IN ( 'C') THEN 'Contract' ELSE 'Transient' END AS Rate_Type, SUM( dr.rooms_qty) AS rn, SUM( CASE WHEN cc.exch_per_us_dlr_rte IN ( 0) THEN ROUND( dr.proj_net_local_rev_amt,2) ELSE ROUND( ( dr.proj_net_local_rev_amt/cc.exch_per_us_dlr_rte),0) END) AS rv FROM mrdw_fact_daily_revenue dr INNER JOIN mrdw_dim_currency_conversion cc ON ( dr.date_currency_stay_key = cc.date_currency_key) INNER JOIN mrdw_dim_date sd ON ( cc.date_key = sd.date_key) INNER JOIN mrdw_dim_market_rates mr ON ( dr.market_rate_key = mr.market_rate_key) INNER JOIN mrdw_dim_property pr ON ( mr.property_id = pr.property_id) INNER JOIN mrdw_dim_status_accom AS a19 ON ( a19.status_accom_key = DR.status_accom_key) INNER JOIN mrdw_brg_master_account_ids m ON ( dr.confo_num_curr_id = m.confo_num_curr_id AND dr.confo_num_orig_id = m.confo_num_orig_id AND dr.date_create_key = m.date_create_key) INNER JOIN edw_dim_highest_level_account_v hi ON ( hi.account_nat_key = m.derived_account_id ) INNER JOIN edw_dim_account_site edw ON ( edw.account_nat_key = m.derived_account_id) LEFT OUTER JOIN mrdw_brg_res_account_ids br ON ( dr.confo_num_curr_id = br.confo_num_curr_id AND dr.confo_num_orig_id = br.confo_num_orig_id AND dr.date_create_key = br.date_create_key) WHERE ( 100*sd.year_cal+sd.month_cal_id >= &YRBEG2YR. AND 100*sd.year_cal+sd.month_cal_id <= &curyrpd. ) AND highest_level_claritas_id IN ( %macc_list) AND dr.proj_net_local_rev_amt/dr.rooms_qty NOT IN ( 999,999.99,9999,9999.99,99999,99999.99,999999,999999.99) AND edw.dw_current_ind=1 AND pr.property_cd IN ( %prp_list) GROUP BY highest_level_claritas_id, company_name, Marsha, year, month, qtr, Weekday_Weekend, Rate_Type, sd.date_dt, ab_day_of_week_cd, sd.week_acctg_id ORDER BY Marsha, year, month, qtr  ) ;",Americas_AreaSales_ATRTop100.sas
" CREATE TABLE atr_pull_unmatched AS   ( select br.company_cleansed_nm AS company_name, avg( dr.days_stay_qty) AS los, pr.property_cd AS Marsha, sd.year_cal AS year, sd.month_cal_id AS month, sd.qtr_cal_id AS qtr, CASE WHEN sd.weekend_ind = 1 THEN 'Weekend' ELSE 'Weekday' END AS Weekday_Weekend, sd.date_dt, sd.ab_day_of_week_cd, sd.week_acctg_id, CASE WHEN mr.market_type_cd IN ( 'G') THEN 'Group' when mr.market_type_cd IN ( 'C') THEN 'Contract' ELSE 'Transient' END AS Rate_Type, SUM( dr.rooms_qty) AS rn, SUM( CASE WHEN cc.exch_per_us_dlr_rte IN ( 0) THEN ROUND( dr.proj_net_local_rev_amt,2) ELSE ROUND( ( dr.proj_net_local_rev_amt/cc.exch_per_us_dlr_rte),0) END) AS rv FROM mrdw_fact_daily_revenue dr INNER JOIN mrdw_dim_currency_conversion cc ON ( dr.date_currency_stay_key = cc.date_currency_key) INNER JOIN mrdw_dim_date sd ON ( cc.date_key = sd.date_key) INNER JOIN mrdw_dim_market_rates mr ON ( dr.market_rate_key = mr.market_rate_key) INNER JOIN mrdw_dim_property pr ON ( mr.property_id = pr.property_id) INNER JOIN mrdw_dim_status_accom AS a19 ON ( a19.status_accom_key = DR.status_accom_key) LEFT OUTER JOIN mrdw_brg_res_account_ids br ON ( dr.confo_num_curr_id = br.confo_num_curr_id AND dr.confo_num_orig_id = br.confo_num_orig_id AND dr.date_create_key = br.date_create_key) INNER JOIN mrdw_brg_unmatched_company u ON ( dr.confo_num_curr_id=u.confo_num_curr_id AND dr.confo_num_orig_id=u.confo_num_orig_id AND dr.date_create_key=u.date_create_key) WHERE ( 100*sd.year_cal+sd.month_cal_id >= &YRBEG2YR. AND 100*sd.year_cal+sd.month_cal_id <= &curyrpd. ) AND company_name IN ( %unmatch) AND dr.proj_net_local_rev_amt/dr.rooms_qty NOT IN ( 999,999.99,9999,9999.99,99999,99999.99,999999,999999.99) AND pr.property_cd IN ( %prp_list) GROUP BY company_name, Marsha, year, month, qtr, Weekday_Weekend, Rate_Type, sd.date_dt, ab_day_of_week_cd, sd.week_acctg_id ORDER BY Marsha, year, month, qtr  ) ;",Americas_AreaSales_ATRTop100.sas
" CREATE TABLE atr_pull_unmatched2 AS ( SELECT  *  , 0 AS highest_level_claritas_id  FROM atr_pull_unmatched );",Americas_AreaSales_ATRTop100.sas
 CREATE TABLE atr_pull AS ( SELECT  *  FROM atr_pull_matched UNION ALL SELECT  *  FROM atr_pull_unmatched2);,Americas_AreaSales_ATRTop100.sas
" CREATE TABLE atr_pull2a AS select coalesce( a.company_name,b.company_name) AS company_name, coalesce( a.highest_level_claritas_id,b.highest_level_claritas_id) AS highest_level_claritas_id, coalesce( a.los,0) AS los, a.marsha, b.marsha AS marsha2, coalesce( a.date_dt,b.date_dt+364) AS stay_date_ty format=date9., coalesce( b.date_dt,a.date_dt-364) AS stay_date_ly format=date9., a.month, a.qtr, a.year, coalesce( a.weekday_weekend,b.weekday_weekend) AS weekday_weekend, coalesce( a.ab_day_of_week_cd,b.ab_day_of_week_cd) AS dayofweek, coalesce( a.rate_type,b.rate_type) AS rate_type, coalesce( a.rn,0) AS rn, coalesce( a.rv,0) AS rv, coalesce( b.rn,0) AS rn_ly, coalesce( b.rv,0) AS rv_ly FROM atr_pull AS a full JOIN atr_pull AS b ON a.marsha=b.marsha AND a.date_dt=b.date_dt+364 AND a.company_name=b.company_name AND a.ab_day_of_week_cd=b.ab_day_of_week_cd AND a.rate_type=b.rate_type AND a.highest_level_claritas_id=b.highest_level_claritas_id AND b.date_dt=a.date_dt-364 WHERE coalesce( a.year,b.year+1)=&curyr.;",Americas_AreaSales_ATRTop100.sas
" CREATE TABLE atr_pull2b AS select coalesce( a.company_name,b.company_name) AS company_name, coalesce( a.highest_level_claritas_id,b.highest_level_claritas_id) AS highest_level_claritas_id, coalesce( a.los,0) AS los, a.marsha, b.marsha AS marsha2, coalesce( a.date_dt,b.date_dt+364) AS stay_date_ty format=date9., coalesce( b.date_dt,a.date_dt-364) AS stay_date_ly format=date9., a.month, a.qtr, a.year, coalesce( a.weekday_weekend,b.weekday_weekend) AS weekday_weekend, coalesce( a.ab_day_of_week_cd,b.ab_day_of_week_cd) AS dayofweek, coalesce( a.rate_type,b.rate_type) AS rate_type, coalesce( a.rn,0) AS rn, coalesce( a.rv,0) AS rv, coalesce( b.rn,0) AS rn_ly, coalesce( b.rv,0) AS rv_ly FROM atr_pull AS a full JOIN atr_pull AS b ON a.marsha=b.marsha AND a.date_dt=b.date_dt+364 AND a.company_name=b.company_name AND a.ab_day_of_week_cd=b.ab_day_of_week_cd AND a.rate_type=b.rate_type AND a.highest_level_claritas_id=b.highest_level_claritas_id AND b.date_dt=a.date_dt-364 WHERE coalesce( a.year,b.year+1)=&lastyr.;",Americas_AreaSales_ATRTop100.sas
 CREATE TABLE atr_pull2 AS ( SELECT  *  FROM atr_pull2a UNION ALL SELECT  *  FROM atr_pull2b);,Americas_AreaSales_ATRTop100.sas
"CREATE TABLE atr_pull3 AS ( SELECT  *  , EXTRACT(WEEK FROM stay_date_ty ) AS week , EXTRACT(WEEK FROM stay_date_ly ) AS week_ly , EXTRACT(MONTH FROM stay_date_ly ) AS month_ly , EXTRACT(QUARTER FROM stay_date_ly ) AS qtr_ly , EXTRACT(YEAR FROM stay_date_ly ) AS year_ly , REPLACE( company_name,""'"",""''"" ) AS company_name , CASE WHEN  month=''  THEN month( stay_date_ty ) END AS month, CASE WHEN  qtr=''  THEN qtr( stay_date_ty ) END AS qtr, CASE WHEN  year=''  THEN year( stay_date_ty ) END AS year, CASE WHEN  marsha=''  THEN marsha2 END AS marsha FROM atr_pull2 );",Americas_AreaSales_ATRTop100.sas
ALTER TABLE atr_pull3 DROP COLUMN marsha2 ;,Americas_AreaSales_ATRTop100.sas
" CREATE TABLE atr_pull3b AS select a.*, b.rank FROM atr_pull3 AS a LEFT JOIN top AS b ON RTRIM( a.company_name)=RTRIM( b.company_name) AND a.highest_level_claritas_id=b.highest_level_claritas_id WHERE year IN ( &curyr.,&lstyear.  ) ;",Americas_AreaSales_ATRTop100.sas
" CREATE TABLE atr_pull4 AS select a.*, b.rd, b.region, b.region_name, b.owner, b.hotel_name, b.sfo_org, b.sfo_market, b.acomp, b.state, b.brnd, b.market_name FROM atr_pull3b a LEFT JOIN props b ON ( a.marsha=b.marsha ) ;",Americas_AreaSales_ATRTop100.sas
"CREATE TABLE atr_pull4b AS ( SELECT  *  , FORMAT(Region, VARCHAR(4)) AS Region , FORMAT(AST, VARCHAR(50)) AS AST , FORMAT(company_name, VARCHAR(100)) AS company_name , FORMAT(MARSHA, VARCHAR(5)) AS MARSHA , FORMAT(WEEKDAY_WEEKEND, VARCHAR(7)) AS WEEKDAY_WEEKEND , FORMAT(DAYOFWEEK, VARCHAR(3)) AS DAYOFWEEK , FORMAT(RATE_TYPE, VARCHAR(9)) AS RATE_TYPE , FORMAT(OWNER, VARCHAR(50)) AS OWNER , FORMAT(ACOMP, VARCHAR(1)) AS ACOMP , FORMAT(MARKET, VARCHAR(37)) AS MARKET , FORMAT(RD, VARCHAR(30)) AS AD , FORMAT(AMERICAS_REGION, VARCHAR(25)) AS AMERICAS_REGION , FORMAT(HAWAII, VARCHAR(1)) AS HAWAII , market_name AS Market , Region_Name AS Americas_Region , CASE WHEN  sfo_org=''  THEN 'Non - Deployed' ELSE sfo_org || ' - ' || sfo_market END AS AST, CASE WHEN  Region = 'E_'  THEN 'East' WHEN  Region = 'W_'  THEN 'West' END AS Region, CASE WHEN  State = 'HI'  THEN 'Y' ELSE 'N' END AS Hawaii FROM atr_pull4 );",Americas_AreaSales_ATRTop100.sas
"ALTER TABLE atr_pull4b DROP COLUMN sfo_org ,  sfo_market ,  market_name ,  region_name ,  state ,  RD ;",Americas_AreaSales_ATRTop100.sas
"SELECT * FROM atr_pull4b ORDER BY stay_date_ty ,marsha;",Americas_AreaSales_ATRTop100.sas
 CREATE TABLE atr_pull5a AS select * FROM atr_pull4b WHERE year=&lstyr.;,Americas_AreaSales_ATRTop100.sas
 CREATE TABLE atr_pull5b AS select * FROM atr_pull4b WHERE year=&curyr. AND month<=&shortpd.;,Americas_AreaSales_ATRTop100.sas
 CREATE TABLE atr_pull5 AS ( SELECT  *  FROM atr_pull5a UNION ALL SELECT  *  FROM atr_pull5b);,Americas_AreaSales_ATRTop100.sas
   TRUNCATE Table AW_SLS_PRD_AM.ACCT_DASH_AP_CLEANSED ) by odbc ;,Americas_AW_Americas_Load_Acct_Dash_AP_Cleansed.sas
"  CREATE TABLE AW_SLS_PRD_AM.&TBLNM._STG ( Prop_Org Varchar( 25), TOTAL_PACE_ID Varchar( 10) , CLARITAS_BUSINESS_NAME Varchar( 88) , ORGANIZATION Varchar( 50) , LAT_ORG Double , LON_ORG Double , MARKET Varchar( 50) , LAT_MARKET Double , LON_MARKET Double , AREA Varchar( 50) , LAT_AREA Double , LON_AREA Double , SALES_ASSOCIATE Varchar( 102) , ROLE Varchar( 50) , MSL_SRMAE Varchar( 255) , ASL Varchar( 255) , REPORT_DATE Date , marsha_code Varchar( 10) , HOTEL_NAME Varchar( 100) , AP_IN_RN Double , AP_IN_RR Double , AP_OUT_RN Double , AP_OUT_RR Double , AP_RN Double , AP_RR Double , AP_Indicator Varchar( 10) ) ) by odbc ;",Americas_AW_Americas_Load_Acct_Dash_AP_Cleansed.sas
INSERT INTO TABLE AWPROD.&TBLNM._STG SELECT * FROM work.&TBLNM;,Americas_AW_Americas_Load_Acct_Dash_AP_Cleansed.sas
  INSERT INTO AW_SLS_PRD_AM.ACCT_DASH_AP_CLEANSED Select * FROM AW_SLS_PRD_AM.&TBLNM._STG ) by odbc ;,Americas_AW_Americas_Load_Acct_Dash_AP_Cleansed.sas
DROP TABLE AWPROD.&TBLNM._STG;,Americas_AW_Americas_Load_Acct_Dash_AP_Cleansed.sas
 CREATE TABLE ACCT_DASH_ACCT_DATA_CONSOL2 AS ( SELECT  *  FROM ACCT_DASH_ACCT_DATA_CONSOL );,Americas_AW_Americas_Load_Acct_Data_Consolidated.sas
" CREATE TABLE AW_SLS_PRD_AM.ACCT_DASH_ACCT_DATA_CONSOL_STG (  REPORT_DATE Date , TOTAL_PACE_ID Varchar( 10) , ACCOUNT_NAME Varchar( 88) , INDUSTRY Varchar( 18) , ORGANIZATION Varchar( 50) , MARKET Varchar( 50) , AREA Varchar( 50) , SALES_ASSOCIATE Varchar( 102) , ROLE Varchar( 50) , MSL_SRMAE Varchar( 255) , ASL Varchar( 255) , PACE_RN Double , PACE_RR Double , PACE_CR Double , PACE_TR Double , AP_IN_RN Double , AP_IN_RR Double , AP_OUT_RN Double , AP_OUT_RR Double , AP_RN Double , AP_RR Double ) ) by odbc ;",Americas_AW_Americas_Load_Acct_Data_Consolidated.sas
INSERT INTO TABLE AWPROD.ACCT_DASH_ACCT_DATA_CONSOL_STG SELECT * FROM work.ACCT_DASH_ACCT_DATA_CONSOL2;,Americas_AW_Americas_Load_Acct_Data_Consolidated.sas
   TRUNCATE Table AW_SLS_PRD_AM.ACCT_DASH_ACCT_DATA_CONSOL ) by odbc ;,Americas_AW_Americas_Load_Acct_Data_Consolidated.sas
   INSERT INTO AW_SLS_PRD_AM.ACCT_DASH_ACCT_DATA_CONSOL Select * FROM AW_SLS_PRD_AM.ACCT_DASH_ACCT_DATA_CONSOL_STG ) by odbc ;,Americas_AW_Americas_Load_Acct_Data_Consolidated.sas
DROP TABLE AWPROD.ACCT_DASH_ACCT_DATA_CONSOL_STG;,Americas_AW_Americas_Load_Acct_Data_Consolidated.sas
   TRUNCATE Table AW_SLS_PRD_AM.ACCT_DASH_DETAIL_CLEANSED ) by odbc ;,Americas_AW_Americas_Load_Acct_Detail_Cleansed.sas
"  CREATE TABLE AW_SLS_PRD_AM.&TBLNM._STG (  PROP_ORG Varchar( 25), TOTAL_PACE_ID Varchar( 10) , COMPANY_NAME Varchar( 88) , ORGANIZATION Varchar( 50) , LAT_ORG Double , LON_ORG Double , MARKET Varchar( 50) , LAT_MARKET Double , LON_MARKET Double , AREA Varchar( 50) , LAT_AREA Double , LON_AREA Double , SALES_ASSOCIATE Varchar( 102) , ROLE Varchar( 50) , MSL_SRMAE Varchar( 255) , ASL Varchar( 255) , DATA_SOURCE Varchar( 13) , OPPTY_NUMBER Varchar( 50) , OPPTY_STATUS Varchar( 30) , quote_number Varchar( 50) , quote_name Varchar( 1000) , QUOTE_ACCT_NAME Varchar( 1000) , PROJECTED_QUOTE_FLAG Varchar( 50) , REPORT_DATE Date , STATUS_CHANGE_DATE Date , ORIGINAL_DEFINITE_DATE Date , QUOTE_CREATED_DATE Date , QUOTE_ARRIVAL_DATE Date , QUOTE_DEPARTURE_DATE Date , marsha_code Varchar( 255) , HOTEL_NAME Varchar( 100) , quote_status Varchar( 50) , STATUS_CHANGE_TYPE Varchar( 50) , LTC_REASON Varchar( 250) , INORG_OUTBOUND Varchar( 8) , CURRENT_FUTURE Varchar( 7) , WEEKDAY_WEEKEND Varchar( 7) , PACE_RN Double , PACE_RR Double , PACE_CR Double , PACE_TR Double ) ) by odbc ;",Americas_AW_Americas_Load_Acct_Detail_Cleansed.sas
INSERT INTO TABLE AWPROD.&TBLNM._STG SELECT * FROM work.&TBLNM;,Americas_AW_Americas_Load_Acct_Detail_Cleansed.sas
  INSERT INTO AW_SLS_PRD_AM.ACCT_DASH_DETAIL_CLEANSED Select * FROM AW_SLS_PRD_AM.&TBLNM._STG ) by odbc ;,Americas_AW_Americas_Load_Acct_Detail_Cleansed.sas
DROP TABLE AWPROD.&TBLNM._STG;,Americas_AW_Americas_Load_Acct_Detail_Cleansed.sas
 CREATE TABLE BT_IN_OUT_YTD AS ( SELECT  *  FROM BTPROD.BT_IN_OUT_YTD );,Americas_AW_Americas_Load_AP_Combined_MISW.sas
"  CREATE TABLE AW_SLS_STG_AM.AP_COMBINED_MISW_STG ( property_org Varchar( 40) , data_source Varchar( 9) , SW_MI Varchar( 30) , REPORT_YEAR Double , STAY_PD_MO Double , MGR_ORG_NAME Varchar( 100) , EXECUTIVE_EID Varchar( 10) , EXECUTIVE_NAME Varchar( 100) , ROLE_TITLE Varchar( 100) , MARSHA Varchar( 10) , BRAND_CODE Varchar( 2) , goal_account_id Varchar( 15) , ACCOUNT_NAME Varchar( 100) , RN Double , ROOM_REVENUE Double , OUTBOUND_IND Varchar( 1) , DOM_INT Varchar( 1) , MGD_FRN Varchar( 1) , MARKET_NAME Varchar( 100) , AREA_NAME Varchar( 100) , prop_market Varchar( 100) , prop_area Varchar( 100) ) ) by odbc ;",Americas_AW_Americas_Load_AP_Combined_MISW.sas
INSERT INTO TABLE AWPROD.AP_COMBINED_MISW_STG SELECT * FROM work.BT_IN_OUT_YTD;,Americas_AW_Americas_Load_AP_Combined_MISW.sas
   TRUNCATE Table AW_SLS_PRD_AM.AP_COMBINED_MISW ) by odbc ;,Americas_AW_Americas_Load_AP_Combined_MISW.sas
   TRUNCATE Table AW_SLS_PRD_AM.AP_COMBINED_MISW_&CURYR ) by odbc ;,Americas_AW_Americas_Load_AP_Combined_MISW.sas
  INSERT INTO AW_SLS_PRD_AM.AP_COMBINED_MISW Select * FROM AW_SLS_STG_AM.AP_COMBINED_MISW_STG ) by odbc ;,Americas_AW_Americas_Load_AP_Combined_MISW.sas
  INSERT INTO AW_SLS_PRD_AM.AP_COMBINED_MISW_&CURYR Select * FROM AW_SLS_STG_AM.AP_COMBINED_MISW_STG ) by odbc ;,Americas_AW_Americas_Load_AP_Combined_MISW.sas
DROP TABLE AWPROD.AP_COMBINED_MISW_STG;,Americas_AW_Americas_Load_AP_Combined_MISW.sas
 CREATE TABLE ACCT_DASH_MARSHA_CONSOLIDATED2 AS ( SELECT  *  FROM ACCT_DASH_MARSHA_CONSOLIDATED );,Americas_AW_Americas_Load_MARSHA_Data_Consolidated.sas
" CREATE TABLE AW_SLS_PRD_AM.ACCT_DASH_MARSHA_CONSOL_STG (  MARSHA_CODE Varchar( 20) , REPORT_DATE Date , HOTEL_NAME Varchar( 100) , PROPERTY_TYPE Varchar( 10) , BRND Varchar( 2) , OWNER Varchar( 100) , LATITUDE Decimal( 12,8) , LONGITUDE Decimal( 12,8) , PROPERTY_ORG Varchar( 24) , EXECUTIVE_EID Varchar( 10) , SALES_ORG Varchar( 24) , PACE_RN Double , PACE_RR Double , PACE_CR Double , PACE_TR Double , AP_RN Double , AP_RR Double ) ) by odbc ;",Americas_AW_Americas_Load_MARSHA_Data_Consolidated.sas
INSERT INTO TABLE AWPROD.ACCT_DASH_MARSHA_CONSOL_STG SELECT * FROM work.ACCT_DASH_MARSHA_CONSOLIDATED2;,Americas_AW_Americas_Load_MARSHA_Data_Consolidated.sas
   TRUNCATE Table AW_SLS_PRD_AM.ACCT_DASH_MARSHA_CONSOLIDATED ) by odbc ;,Americas_AW_Americas_Load_MARSHA_Data_Consolidated.sas
   INSERT INTO AW_SLS_PRD_AM.ACCT_DASH_MARSHA_CONSOLIDATED Select * FROM AW_SLS_PRD_AM.ACCT_DASH_MARSHA_CONSOL_STG ) by odbc ;,Americas_AW_Americas_Load_MARSHA_Data_Consolidated.sas
DROP TABLE AWPROD.ACCT_DASH_MARSHA_CONSOL_STG;,Americas_AW_Americas_Load_MARSHA_Data_Consolidated.sas
"  CREATE TABLE AW_SLS_STG_AM.&TBLNM._STG (  CONFO_NUM_CURR_ID DOUBLE , CONFO_NUM_ORIG_ID DOUBLE , DATE_CREATE_KEY DOUBLE , HIGHEST_LEVEL_COMPANY_NAME VARCHAR( 100) , HIGHEST_LEVEL_CLARITAS_ID DOUBLE , DESCENDENT_NAME VARCHAR( 100) , DESCENDENT_CLARITAS_ID DOUBLE , PRIMARY_SIC_DESCRIPTION VARCHAR( 100) , MONTH DOUBLE , YEAR DOUBLE ) ) by odbc ;",Americas_AW_Area_Sales_CFD_Macro.sas
INSERT INTO TABLE AWPROD.&TBLNM._STG SELECT * FROM work.&TBLNM;,Americas_AW_Area_Sales_CFD_Macro.sas
  INSERT INTO AW_SLS_PRD_AM.ACCOUNT_TRACKING_KEYS Select * FROM AW_SLS_STG_AM.&TBLNM._STG ) by odbc ;,Americas_AW_Area_Sales_CFD_Macro.sas
DROP TABLE AWPROD.&TBLNM._STG;,Americas_AW_Area_Sales_CFD_Macro.sas
 CREATE TABLE US_BT_ENTERTAINMENT_YTD AS ( SELECT  *  FROM ent.US_BT_ENTERTAINMENT_YTD );,Americas_AW_Entertainment_BT_Load.sas
"  CREATE TABLE AW_SLS_PRD_AM.US_BT_entertainment_STG (  stay_year Double , stay_month Double , prop_code Varchar( 5) , brand_code Varchar( 2) , goal_account_id Double , ACCOUNT_NAME Varchar( 32) , rn Double , usd_rev Double ) ) by odbc ;",Americas_AW_Entertainment_BT_Load.sas
INSERT INTO TABLE AWPROD.US_BT_ENTERTAINMENT_STG SELECT * FROM work.US_BT_ENTERTAINMENT_YTD;,Americas_AW_Entertainment_BT_Load.sas
   TRUNCATE Table AW_SLS_PRD_AM.US_BT_entertainment ) by odbc ;,Americas_AW_Entertainment_BT_Load.sas
  INSERT INTO AW_SLS_PRD_AM.US_BT_ENTERTAINMENT Select * FROM AW_SLS_PRD_AM.US_BT_ENTERTAINMENT_STG ) by odbc ;,Americas_AW_Entertainment_BT_Load.sas
DROP TABLE AWPROD.US_BT_ENTERTAINMENT_STG;,Americas_AW_Entertainment_BT_Load.sas
 CREATE TABLE AreaSales_Final2 AS ( SELECT  *  FROM AS_DATA_FINAL5 );,Americas_AW_Load_AreaSales_Final.sas
"  CREATE TABLE AW_TGT_TABLEAU_DBO.AREASALES_SLS_MGR_FINAL_STG (  rpt_pd_mo Double , sm_eid Varchar( 50) , sm_name Varchar( 102) , sm_role_nm Varchar( 100) , sls_channel Varchar( 50) , sls_segment Varchar( 50) , sm_org_nm Varchar( 100) , sm_mkt_nm Varchar( 100) , sm_area_nm Varchar( 100) , account_id Varchar( 15) , act_comp Varchar( 100) , segment Varchar( 50) , status Varchar( 8) , data_source Varchar( 11) , UPDATEd_date Date , rn_2018 Double , rn_2019 Double , rv_2018 Double , rv_2019 Double , grpcat_rv_2018 Double , grpcat_rv_2019 Double , loccat_rv_2018 Double , loccat_rv_2019 Double , cat_rv_2018 Double , cat_rv_2019 Double , tot_rv_2018 Double , tot_rv_2019 Double , AP_RN_OTBND_2018 Double , AP_RN_OTBND_2019 Double , AP_PROD_OTBND_2018 Double , AP_PROD_OTBND_2019 Double , ap_rn_2018 Double , ap_rn_2019 Double , ap_prod_2018 Double , ap_prod_2019 Double , es_rn_2018 Double , es_rn_2019 Double , es_rev_2018 Double , es_rev_2019 Double , tot_pace_goal_2019 Double , ap_goal_2019 Double ) ) by odbc ;",Americas_AW_Load_AreaSales_Final.sas
INSERT INTO TABLE AWPROD.AREASALES_SLS_MGR_FINAL_STG SELECT * FROM work.AreaSales_Final2;,Americas_AW_Load_AreaSales_Final.sas
   TRUNCATE Table AW_TGT_TABLEAU_DBO.AREASALES_SLS_MGR_FINAL ) by odbc ;,Americas_AW_Load_AreaSales_Final.sas
  INSERT INTO AW_TGT_TABLEAU_DBO.AREASALES_SLS_MGR_FINAL Select * FROM AW_TGT_TABLEAU_DBO.AREASALES_SLS_MGR_FINAL_STG ) by odbc ;,Americas_AW_Load_AreaSales_Final.sas
DROP TABLE AWPROD.AREASALES_SLS_MGR_FINAL_STG;,Americas_AW_Load_AreaSales_Final.sas
   TRUNCATE Table AW_SLS_PRD_AM.AREASALES_SLS_MGR_FINAL ) by odbc ;,Americas_AW_Load_AreaSales_Final.sas
  INSERT INTO AW_SLS_PRD_AM.AREASALES_SLS_MGR_FINAL Select * FROM AW_TGT_TABLEAU_DBO.AREASALES_SLS_MGR_FINAL ) by odbc ;,Americas_AW_Load_AreaSales_Final.sas
   TRUNCATE Table AW_SLS_PRD_AM.Areasales_ATRTop100 ) by odbc ;,Americas_AW_Load_Area_ATR.sas
"  CREATE TABLE AW_SLS_STG_AM.&TBLNM._STG ( Region Varchar( 4) , AST Varchar( 30) , company_name Varchar( 100) , MARSHA Varchar( 5) , WEEKDAY_WEEKEND Varchar( 7) , DAYOFWEEK Varchar( 3) , RATE_TYPE Varchar( 9) , OWNER Varchar( 50) , ACOMP Varchar( 1) , MARKET Varchar( 37) , AD Varchar( 30) , AMERICAS_REGION Varchar( 25) , HAWAII Varchar( 1) , rn_ly Double , rv_ly Double , stay_date_ty Date , stay_date_ly Date , highest_level_claritas_id Double , los Double , month Double , qtr Double , year Double , rn Double , rv Double , week Double , week_ly Double , month_ly Double , qtr_ly Double , year_ly Double , Rank Double , HOTEL_NAME Varchar( 100) , BRND Varchar( 2)) ) by odbc ;",Americas_AW_Load_Area_ATR.sas
INSERT INTO TABLE AWPROD.&TBLNM._STG SELECT * FROM work.&TBLNM;,Americas_AW_Load_Area_ATR.sas
  INSERT INTO AW_SLS_PRD_AM.Areasales_ATRTop100 Select * FROM AW_SLS_STG_AM.&TBLNM._STG ) by odbc ;,Americas_AW_Load_Area_ATR.sas
DROP TABLE AWPROD.&TBLNM._STG;,Americas_AW_Load_Area_ATR.sas
   TRUNCATE Table AW_TGT_TABLEAU_DBO.Areasales_ATRTop100 ) by odbc ;,Americas_AW_Load_Area_ATR.sas
  INSERT INTO AW_TGT_TABLEAU_DBO.Areasales_ATRTop100 Select * FROM AW_SLS_PRD_AM.Areasales_ATRTop100 ) by odbc ;,Americas_AW_Load_Area_ATR.sas
   TRUNCATE Table AW_SLS_PRD_AM.AREA_SALES_FUNNEL ) by odbc ;,Americas_AW_Load_Area_Sales_Funnel.sas
"  CREATE TABLE AW_SLS_PRD_AM.&TBLNM._STG ( quote_created_dt Date , opty_proj_prop_flg Varchar( 1) , opty_num Varchar( 15) , opty_nm Varchar( 300) , opty_status Varchar( 30) , quote_num Varchar( 30) , quote_nm Varchar( 300) , curr_prop_status Varchar( 30) , opty_status_change_dt Date , opty_created_dt Date , quote_status_change_dt Date , business_type Varchar( 30) , lost_turndown_short_desc Varchar( 30) , lost_turndown_long_desc Varchar( 300) , arrival_dt Date , departure_dt Date , stay_year Varchar( 4) , property_nm Varchar( 100) , marsha_cd Varchar( 20) , property_location Varchar( 30) , claritas_id Double , claritas_nm Varchar( 100) , sfa_account_nm Varchar( 100) , sfa_account_type Varchar( 30) , quote_inter_claritas_id Double , quote_inter_account_nm Varchar( 100) , originating_mgr_id Varchar( 15) , orig_mgr_login Varchar( 15) , orig_mgr_fname Varchar( 50) , orig_mgr_lname Varchar( 50) , mkt_segment Varchar( 100) , sales_mgr_1_id Varchar( 15) , sales_mgr_1_login Varchar( 15) , sales_mgr_fname Varchar( 50) , sales_mgr_lname Varchar( 50) , proj_rns Double , rm_rev Double , function_rev Double , tot_proj_rev Double , goal_mgr_nm Varchar( 30) , goal_mgr_eid Varchar( 8) , mgr_sfo_org Varchar( 100) , goal_mgr_market Varchar( 100) , goal_mgr_area Varchar( 100) , goal_mgr_role Varchar( 50) , sales_channel Varchar( 12) , goal_mgr_segment Varchar( 20) , goal_mgr_acct_comp Varchar( 100) , outbound_ind Varchar( 1) , tracked_by_cd Varchar( 1) , dual_assignment_flag Varchar( 1) , dw_load_ts Timestamp) ) by odbc ;",Americas_AW_Load_Area_Sales_Funnel.sas
INSERT INTO TABLE AWPROD.&TBLNM._STG SELECT * FROM work.&TBLNM;,Americas_AW_Load_Area_Sales_Funnel.sas
  INSERT INTO AW_SLS_PRD_AM.AREA_SALES_FUNNEL Select * FROM AW_SLS_PRD_AM.&TBLNM._STG ) by odbc ;,Americas_AW_Load_Area_Sales_Funnel.sas
DROP TABLE AWPROD.&TBLNM._STG;,Americas_AW_Load_Area_Sales_Funnel.sas
   TRUNCATE Table AW_SLS_PRD_AM.SPECIAL_CORP ) by odbc ;,Americas_AW_Load_Area_Special_Corp.sas
"  CREATE TABLE AW_SLS_STG_AM.SPECIAL_CORP_STG ( Region Varchar( 4) , AST Varchar( 30) , MARSHA Varchar( 5) , WEEKDAY_WEEKEND Varchar( 7) , DAYOFWEEK Varchar( 3) , RATE_TYPE Varchar( 9) , OWNER Varchar( 50) , ACOMP Varchar( 1) , MARKET Varchar( 37) , AD Varchar( 30) , AMERICAS_REGION Varchar( 25) , HAWAII Varchar( 1) , rn_ly Double , rv_ly Double , stay_date_ty Date , stay_date_ly Date , month Double , qtr Double , year Double , rn Double , rv Double , week Double , week_ly Double , month_ly Double , qtr_ly Double , year_ly Double , HOTEL_NAME Varchar( 100) , BRND Varchar( 2)) ) by odbc ;",Americas_AW_Load_Area_Special_Corp.sas
INSERT INTO TABLE AWPROD.SPECIAL_CORP_STG SELECT * FROM work.SPECIAL_CORP;,Americas_AW_Load_Area_Special_Corp.sas
  INSERT INTO AW_SLS_PRD_AM.SPECIAL_CORP Select * FROM AW_SLS_STG_AM.SPECIAL_CORP_STG ) by odbc ;,Americas_AW_Load_Area_Special_Corp.sas
DROP TABLE AWPROD.SPECIAL_CORP_STG;,Americas_AW_Load_Area_Special_Corp.sas
   TRUNCATE Table AW_TGT_TABLEAU_DBO.SPECIAL_CORP ) by odbc ;,Americas_AW_Load_Area_Special_Corp.sas
  INSERT INTO AW_TGT_TABLEAU_DBO.SPECIAL_CORP Select * FROM AW_SLS_PRD_AM.SPECIAL_CORP ) by odbc ;,Americas_AW_Load_Area_Special_Corp.sas
 CREATE TABLE Production_wRollup2 AS ( SELECT  *  FROM Load_Assoc_Prod_to_AW );,Americas_AW_Load_AssociateProduction_Dashboard.sas
"  CREATE TABLE AW_TGT_TABLEAU_DBO.AREASALES_ASSOCIATE_PROD_RPT_STG (  VP_Name Varchar( 102) , Mkt_Ldr_Name Varchar( 102) , MAE_Ldr_Name Varchar( 102) , Sr_MAE_Name Varchar( 102) , Area_Ldr_Name Varchar( 102) , data_source Varchar( 11) , rpt_yr Double , rpt_pd_mo Double , sm_name Varchar( 100) , sm_role_nm Varchar( 100) , sls_channel Varchar( 50) , sls_segment Varchar( 50) , sls_sub_segment Varchar( 50) , sm_org_nm Varchar( 100) , sm_mkt_nm Varchar( 100) , sm_area_nm Varchar( 100) , act_comp Varchar( 100) , segment Varchar( 50) , track_to_acct_sales Varchar( 1) , Tot_AP_Rev_2019 Double , Tot_AP_Goal_2019 Double , Tot_Pace_Rev_2019 Double , Tot_Pace_Goal_2019 Double , UPDATEd_date Date ) ) by odbc ;",Americas_AW_Load_AssociateProduction_Dashboard.sas
INSERT INTO TABLE AWPROD.AREASALES_ASSOCIATE_PROD_RPT_STG SELECT * FROM work.Production_wRollup2;,Americas_AW_Load_AssociateProduction_Dashboard.sas
   TRUNCATE Table AW_TGT_TABLEAU_DBO.AREASALES_ASSOCIATE_PROD_RPT ) by odbc ;,Americas_AW_Load_AssociateProduction_Dashboard.sas
  INSERT INTO AW_TGT_TABLEAU_DBO.AREASALES_ASSOCIATE_PROD_RPT Select * FROM AW_TGT_TABLEAU_DBO.AREASALES_ASSOCIATE_PROD_RPT_STG ) by odbc ;,Americas_AW_Load_AssociateProduction_Dashboard.sas
DROP TABLE AWPROD.AREASALES_ASSOCIATE_PROD_RPT_STG;,Americas_AW_Load_AssociateProduction_Dashboard.sas
 CREATE TABLE CleanData_Adjustments2 AS ( SELECT  *  FROM Clean_Data_Adjustments );,Americas_AW_Load_AS_DataAdjustments_Final.sas
"  CREATE TABLE AW_SLS_PRD_AM.CLEANSED_DATA_ADJUSTMENTS_STG (  RPT_PD_MO Double, sm_eid Varchar( 8), sm_name Varchar( 24), sm_role_nm Varchar( 36), sls_channel Varchar( 12), sls_segment Varchar( 10), sm_org_nm Varchar( 50), SM_MKT_NM Varchar( 100), SM_AREA_NM Varchar( 100), segment Varchar( 30), act_comp Varchar( 32), AP_PROD_2019 Double, AP_GOAL_2019 Double, TOT_RV_2019 Double, tot_pace_goal_2019 Double, STATUS Varchar( 4), DATA_SOURCE Varchar( 6), UPDATED_DATE Date ) ) by odbc ;",Americas_AW_Load_AS_DataAdjustments_Final.sas
INSERT INTO TABLE AWPROD.CLEANSED_DATA_ADJUSTMENTS_STG SELECT * FROM work.CleanData_Adjustments2;,Americas_AW_Load_AS_DataAdjustments_Final.sas
   TRUNCATE Table AW_SLS_PRD_AM.CLEANSED_DATA_ADJUSTMENTS_FINAL ) by odbc ;,Americas_AW_Load_AS_DataAdjustments_Final.sas
  INSERT INTO AW_SLS_PRD_AM.CLEANSED_DATA_ADJUSTMENTS_FINAL Select * FROM AW_SLS_PRD_AM.CLEANSED_DATA_ADJUSTMENTS_STG ) by odbc ;,Americas_AW_Load_AS_DataAdjustments_Final.sas
DROP TABLE AWPROD.CLEANSED_DATA_ADJUSTMENTS_STG;,Americas_AW_Load_AS_DataAdjustments_Final.sas
 CREATE TABLE BTSM_BT_GOAL_PROD2 AS ( SELECT  *  FROM BTSM_BT_GOAL_PROD );,Americas_AW_Load_BTSM_BT_GOAL_PROD.sas
"  CREATE TABLE AW_TGT_TABLEAU_DBO.AREASALES_BTSM_BT_GOAL_FINAL_STG (  Year Double , Month Double , Organization Varchar( 255) , EXECUTIVE_EID Varchar( 255) , Full_Name Varchar( 255) , BT_RN_COUNT Double , BT_RN_GOAL Double  ) ) by odbc ;",Americas_AW_Load_BTSM_BT_GOAL_PROD.sas
INSERT INTO TABLE AWPROD.AREASALES_BTSM_BT_GOAL_FINAL_STG SELECT * FROM work.BTSM_BT_GOAL_PROD2;,Americas_AW_Load_BTSM_BT_GOAL_PROD.sas
   TRUNCATE Table AW_TGT_TABLEAU_DBO.AREASALES_BTSM_BT_GOAL_FINAL ) by odbc ;,Americas_AW_Load_BTSM_BT_GOAL_PROD.sas
  INSERT INTO AW_TGT_TABLEAU_DBO.AREASALES_BTSM_BT_GOAL_FINAL Select * FROM AW_TGT_TABLEAU_DBO.AREASALES_BTSM_BT_GOAL_FINAL_STG ) by odbc ;,Americas_AW_Load_BTSM_BT_GOAL_PROD.sas
DROP TABLE AWPROD.AREASALES_BTSM_BT_GOAL_FINAL_STG;,Americas_AW_Load_BTSM_BT_GOAL_PROD.sas
 CREATE TABLE BTSM_QUAL_GOAL_PROD2 AS ( SELECT  *  FROM BTSM_QUAL_GOAL_PROD );,Americas_AW_Load_BTSM_QUAL_GOAL_PROD.sas
"  CREATE TABLE AW_TGT_TABLEAU_DBO.AREASALES_BTSM_QUAL_FINAL_STG (  Year Double , Month Double , Organization Varchar( 50) , EXECUTIVE_EID Varchar( 8) , Full_Name Varchar( 255) , QUAL_COUNT Double , QUAL_GOAL Double  ) ) by odbc ;",Americas_AW_Load_BTSM_QUAL_GOAL_PROD.sas
INSERT INTO TABLE AWPROD.AREASALES_BTSM_QUAL_FINAL_STG SELECT * FROM work.BTSM_QUAL_GOAL_PROD2;,Americas_AW_Load_BTSM_QUAL_GOAL_PROD.sas
   TRUNCATE Table AW_TGT_TABLEAU_DBO.AREASALES_BTSM_QUAL_FINAL ) by odbc ;,Americas_AW_Load_BTSM_QUAL_GOAL_PROD.sas
  INSERT INTO AW_TGT_TABLEAU_DBO.AREASALES_BTSM_QUAL_FINAL Select * FROM AW_TGT_TABLEAU_DBO.AREASALES_BTSM_QUAL_FINAL_STG ) by odbc ;,Americas_AW_Load_BTSM_QUAL_GOAL_PROD.sas
DROP TABLE AWPROD.AREASALES_BTSM_QUAL_FINAL_STG;,Americas_AW_Load_BTSM_QUAL_GOAL_PROD.sas
"CREATE TABLE BTSM_RNDETAIL2 AS ( SELECT  *, eid AS eid1, UPPER( eid1 ) AS EID  FROM BTSM_RNDETAIL );",Americas_AW_Load_BTSM_RN_Detail.sas
ALTER TABLE BTSM_RNDETAIL2 DROP COLUMN eid1 ;,Americas_AW_Load_BTSM_RN_Detail.sas
"  CREATE TABLE AW_TGT_TABLEAU_DBO.AREASALES_BTSM_RNDETAIL_STG (  Year Double , Cycle Double , Month Double , Organization Varchar( 255) , eid Varchar( 255) , Full_Name Varchar( 255) , MarshaCode Varchar( 5) , Company_Name Varchar( 255) , MarketRateCode Varchar( 20) , RoomNights Double , Revenue Double ) ) by odbc ;",Americas_AW_Load_BTSM_RN_Detail.sas
INSERT INTO TABLE AWPROD.AREASALES_BTSM_RNDETAIL_STG SELECT * FROM work.BTSM_RNDETAIL2;,Americas_AW_Load_BTSM_RN_Detail.sas
   TRUNCATE Table AW_TGT_TABLEAU_DBO.AREASALES_BTSM_RNDETAIL_FINAL ) by odbc ;,Americas_AW_Load_BTSM_RN_Detail.sas
  INSERT INTO AW_TGT_TABLEAU_DBO.AREASALES_BTSM_RNDETAIL_FINAL Select * FROM AW_TGT_TABLEAU_DBO.AREASALES_BTSM_RNDETAIL_STG ) by odbc ;,Americas_AW_Load_BTSM_RN_Detail.sas
DROP TABLE AWPROD.AREASALES_BTSM_RNDETAIL_STG;,Americas_AW_Load_BTSM_RN_Detail.sas
   TRUNCATE Table AW_SLS_DBO.BT_INBND_OTBND_PROD ) by odbc ;,Americas_AW_Load_BT_Inbnd_Otbnd.sas
"  CREATE TABLE AW_SLS_STG_AM.&TBLNM._STG ( rpt_pd_mo Double, ORG_NAME Varchar( 100), MARKET_NAME Varchar( 100), AREA_NAME Varchar( 100), ROLE_TITLE Varchar( 100), account_id Varchar( 15), MARSHA Varchar( 10), ap_tot_rm_nts Double, ap_tot_rm_rev Double, outbound_ind Varchar( 1)) ) by odbc ;",Americas_AW_Load_BT_Inbnd_Otbnd.sas
INSERT INTO TABLE AWPROD.&TBLNM._STG SELECT * FROM work.&TBLNM;,Americas_AW_Load_BT_Inbnd_Otbnd.sas
  INSERT INTO AW_SLS_DBO.BT_INBND_OTBND_PROD Select * FROM AW_SLS_STG_AM.&TBLNM._STG ) by odbc ;,Americas_AW_Load_BT_Inbnd_Otbnd.sas
DROP TABLE AWPROD.&TBLNM._STG;,Americas_AW_Load_BT_Inbnd_Otbnd.sas
   TRUNCATE Table AW_SLS_PRD_AM.CI07_Month ) by odbc ;,Americas_AW_Load_CI07Dash.sas
"  CREATE TABLE AW_SLS_PRD_AM.CI07_Month_STG ( marsha Varchar( 5) , ArrivalYear Varchar( 100), mnth Double , rn_ty Double , rn_ly Double , rr_ty Double , rr_ly Double , brnd Varchar( 40) , HOTEL_NAME Varchar( 100) , OWNER Varchar( 200) , SFO_ORG Varchar( 40) , RD Varchar( 40) , MF Varchar( 1) , ACOMP Varchar( 1) , status Varchar( 50) , tract Varchar ( 50), ytd_rr_ty Double , ytd_rr_ly Double , UPDATEd_date VARCHAR( 9)) ) by odbc ;",Americas_AW_Load_CI07Dash.sas
INSERT INTO TABLE AWPROD.CI07_Month_STG SELECT * FROM work.CI07_Month;,Americas_AW_Load_CI07Dash.sas
  INSERT INTO AW_SLS_PRD_AM.CI07_Month Select * FROM AW_SLS_PRD_AM.CI07_Month_STG ) by odbc ;,Americas_AW_Load_CI07Dash.sas
DROP TABLE AWPROD.CI07_Month_STG;,Americas_AW_Load_CI07Dash.sas
"CREATE TABLE AP_Inbnd_Pre AS (SELECT rpt_pd_mo, org_name, market_name, area_name, role_title, account_id, prop_cd, SUM(ap_tot_rm_nts) AS ap_tot_rm_nts, SUM(ap_tot_rm_rev) AS ap_tot_rm_rev FROM mgrprodfinal WHERE rpt_yr=&curyr AND rpt_pd_mo <=&shortpd GROUP BY rpt_pd_mo, org_name, market_name, area_name, role_title, account_id, prop_cd );",Americas_AW_Load_InbndOutbnd_WIG_Data_v2.sas
" CREATE TABLE AP_Inbnd AS ( SELECT  *, prop_cd AS MARSHA, 'N' AS outbound_ind  FROM AP_Inbnd_Pre );",Americas_AW_Load_InbndOutbnd_WIG_Data_v2.sas
"CREATE TABLE AP_Otbnd_Pre AS (SELECT stay_pd_mo, mgr_org_name, market_name, area_name, role_title, goal_account_id, MARSHA, SUM(rn) AS rn, SUM(room_revenue) AS room_revenue FROM otbnd.BT_IN_OUT_YTD WHERE report_year=&curyr AND stay_pd_mo <=&shortpd AND outbound_ind not IN ( 'N') AND UPPER( ROLE_TITLE) IN ( 'MARKET ACCOUNT EXECUTIVE, MID-MARKET','MARKET ACCOUNT EXECUTIVE, PROSPECT','AREA ACCOUNT EXECUTIVE, MID-MARKET' ) GROUP BY stay_pd_mo, mgr_org_name, market_name, area_name, role_title, goal_account_id, MARSHA );",Americas_AW_Load_InbndOutbnd_WIG_Data_v2.sas
"CREATE TABLE AP_Otbnd AS ( SELECT  *, mgr_org_name AS org_name, stay_pd_mo AS rpt_pd_mo, rn AS ap_tot_rm_nts, room_revenue AS ap_tot_rm_rev, 'Y' AS outbound_ind , CAST( goal_account_id AS INT  ) AS account_id  FROM AP_Otbnd_Pre );",Americas_AW_Load_InbndOutbnd_WIG_Data_v2.sas
ALTER TABLE AP_Otbnd DROP COLUMN goal_account_id ;,Americas_AW_Load_InbndOutbnd_WIG_Data_v2.sas
 CREATE TABLE AP_Inbound_Outbound AS ( SELECT  *  FROM AP_Inbnd UNION ALL SELECT  *  FROM AP_Otbnd);,Americas_AW_Load_InbndOutbnd_WIG_Data_v2.sas
 CREATE TABLE PROPS_W_STARWOOD AS  ( SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER ORDER BY MARSHA  )  ;,Americas_AW_Load_InbndOutbnd_WIG_Data_v2.sas
 CREATE TABLE AP_Inbound_Outbound1 AS select a.* FROM AP_Inbound_Outbound a LEFT JOIN props_w_starwood b ON a.marsha=b.marsha WHERE ap_tot_rm_nts <> 0 AND ap_tot_rm_rev <> 0 ;,Americas_AW_Load_InbndOutbnd_WIG_Data_v2.sas
 CREATE TABLE AP_Inbound_Outbound2 AS ( SELECT  *  FROM AP_Inbound_Outbound1 );,Americas_AW_Load_InbndOutbnd_WIG_Data_v2.sas
"  CREATE TABLE AW_SLS_STG_AM.Lux_RateProg_Prod_STG (  Associate Varchar ( 14), Associate_eid Varchar ( 8), MARSHA Varchar ( 5), rate_pgm_txt Varchar ( 22), market_cd Varchar ( 8), ORG_NAME Varchar ( 50), YEARMO Double, RN Double, RV Double ) ) by odbc ;",Americas_AW_Load_LUX_Rate_Program_Prod.sas
INSERT INTO TABLE AWPROD.Lux_RateProg_Prod_STG SELECT * FROM work.LUX_RateProgram_Only;,Americas_AW_Load_LUX_Rate_Program_Prod.sas
   TRUNCATE Table AW_SLS_PRD_AM.Lux_RateProg_Prod_&CURYR ) by odbc ;,Americas_AW_Load_LUX_Rate_Program_Prod.sas
   INSERT INTO AW_SLS_PRD_AM.Lux_RateProg_Prod_&CURYR Select * FROM AW_SLS_STG_AM.Lux_RateProg_Prod_STG ) by odbc ;,Americas_AW_Load_LUX_Rate_Program_Prod.sas
DROP TABLE AWPROD.Lux_RateProg_Prod_STG;,Americas_AW_Load_LUX_Rate_Program_Prod.sas
"  CREATE TABLE AW_SLS_STG_AM.Lux_RateProg_Details_STG (  Intermediary_ID Varchar ( 9), Intermediary_Company_NM Varchar ( 50), Intermediary_City_NM Varchar ( 50), Curr_TMC_Parent_IATA_ID Varchar ( 9), Curr_TMC_Parent_NM Varchar ( 50), Associate Varchar ( 14), Associate_eid Varchar ( 8), MARSHA Varchar ( 5), Curr_Rate_Pgm_Txt Varchar ( 22), Curr_Market_Cd Varchar ( 8), ORG_NAME Varchar ( 50), YEARMO Double, RN Double, RV Double ) ) by odbc ;",Americas_AW_Load_LUX_RP_Details_Prod.sas
INSERT INTO TABLE AWPROD.Lux_RateProg_Details_STG SELECT * FROM work.LUX_RateProgram_Details;,Americas_AW_Load_LUX_RP_Details_Prod.sas
   TRUNCATE Table AW_SLS_PRD_AM.Lux_RateProg_Details_&CURYR ) by odbc ;,Americas_AW_Load_LUX_RP_Details_Prod.sas
   INSERT INTO AW_SLS_PRD_AM.Lux_RateProg_Details_&CURYR Select * FROM AW_SLS_STG_AM.Lux_RateProg_Details_STG ) by odbc ;,Americas_AW_Load_LUX_RP_Details_Prod.sas
DROP TABLE AWPROD.Lux_RateProg_Details_STG;,Americas_AW_Load_LUX_RP_Details_Prod.sas
 CREATE TABLE Manual_Adjustments AS ( SELECT  *  FROM junk );,Americas_AW_Load_Manual_Adjustments.sas
"  CREATE TABLE AW_SLS_STG_AM.MANUAL_ADJUSTMENTS_STG ( sls_mgr_nm Varchar( 100) , sls_mgr_login Varchar( 30) , org_nm Varchar( 50) , org_num Double , market_nm Varchar( 100) , market_num Double , area_nm Varchar( 100) , area_num Double , prop_org_nm Varchar( 50) , prop_org_num Double , prop_market_nm Varchar( 100) , prop_market_num Double , prop_area_nm Varchar( 100) , prop_area_num Double , role_num Double , sls_mgr_role Varchar( 100) , quote_number Varchar( 15) , quote_nm Varchar( 100) , quote_status Varchar( 30) , cancel_fee_collected_flg Varchar( 1) , orig_def_dt Date , claritas_id Varchar( 50) , account_nm Varchar( 100) , arrival_dt Date , marsha_cd Varchar( 10) , asof_month_id Double , asof_year_id Double , adj_month_id Double , adj_year_id Double , goal_num Double , acct_comp_type Varchar( 50) , curr_rm_ngts Double , net_rm_ngts Double , currency_cd Varchar( 3) , net_rm_rev Double , curr_rm_rev Double , currency_2_cd Varchar( 3) , net_func_rev Double , curr_func_rev Double , currency_3_cd Varchar( 3) , total_curr_rev Double , total_net_rev Double , reason_dtl Varchar( 300) , adj_category Varchar( 100) , new_def_flg Varchar( 1) , reverse_adj_flg Varchar( 1) , business_type Varchar( 100) , do_not_track_flg Varchar( 1) , account_type Varchar( 100) , market_segment Varchar( 300) , stay_year Double , departure_dt Date , ext_channel Varchar( 100) , orig_mgr Varchar( 100) , sls_mgr_1 Varchar( 100) , created_dt Date , status_dt Date , change_type Varchar( 100) , dw_lock_ind Double , dw_load_ts Timestamp ) ) by odbc ;",Americas_AW_Load_Manual_Adjustments.sas
INSERT INTO TABLE AWPROD.MANUAL_ADJUSTMENTS_STG SELECT * FROM work.MANUAL_ADJUSTMENTS;,Americas_AW_Load_Manual_Adjustments.sas
   TRUNCATE Table AW_SLS_PRD_AM.MANUAL_ADJUSTMENTS ) by odbc ;,Americas_AW_Load_Manual_Adjustments.sas
  INSERT INTO AW_SLS_PRD_AM.MANUAL_ADJUSTMENTS Select * FROM AW_SLS_STG_AM.MANUAL_ADJUSTMENTS_STG ) by odbc ;,Americas_AW_Load_Manual_Adjustments.sas
DROP TABLE AWPROD.MANUAL_ADJUSTMENTS_STG;,Americas_AW_Load_Manual_Adjustments.sas
 CREATE TABLE MgrProdFinal2 AS ( SELECT  *  FROM MgrProdFinal );,Americas_AW_Load_MgrProd_Final.sas
"  CREATE TABLE AW_TGT_TABLEAU_DBO.AREASALES_MGR_PROD_FINAL_STG (  rpt_yr Double , rpt_pd_mo Double , ORG_NAME Varchar( 100) , MARKET_NAME Varchar( 100) , AREA_NAME Varchar( 100) , ROLE_TITLE Varchar( 100) , account_id Varchar( 15) , account_name Varchar( 100) , EXECUTIVE_EID Varchar( 10) , EXECUTIVE_NAME Varchar( 100) , prop_cd Varchar( 10) , PROP_NM Varchar( 100) , prp_org_nm Varchar( 100) , account_flg Varchar( 1) , act_comp Varchar( 100) , data_source Varchar( 8) , pace_rm_nts Double , pace_rm_rev Double , pace_grp_cat_rev Double , pace_loc_cat_rev Double , pace_tot_cat_rev Double , pace_tot_rev Double , ap_trns_rm_nts Double , ap_trns_rm_rev Double , ap_cntr_rm_nts Double , ap_cntr_rm_rev Double , ap_tot_rm_nts Double , ap_tot_rm_rev Double , ext_trns_rm_nts Double , ext_trns_rm_rev Double , ext_cntr_rm_nts Double , ext_cntr_rm_rev Double , ext_tot_rm_nts Double , ext_tot_rm_rev Double ) ) by odbc ;",Americas_AW_Load_MgrProd_Final.sas
INSERT INTO TABLE AWPROD.AREASALES_MGR_PROD_FINAL_STG SELECT * FROM work.MgrProdFinal2;,Americas_AW_Load_MgrProd_Final.sas
   TRUNCATE Table AW_TGT_TABLEAU_DBO.AREASALES_MGR_PROD_FINAL ) by odbc ;,Americas_AW_Load_MgrProd_Final.sas
  INSERT INTO AW_TGT_TABLEAU_DBO.AREASALES_MGR_PROD_FINAL Select * FROM AW_TGT_TABLEAU_DBO.AREASALES_MGR_PROD_FINAL_STG ) by odbc ;,Americas_AW_Load_MgrProd_Final.sas
DROP TABLE AWPROD.AREASALES_MGR_PROD_FINAL_STG;,Americas_AW_Load_MgrProd_Final.sas
   TRUNCATE Table AW_SLS_PRD_AM.AREASALES_MGR_PROD_FINAL ) by odbc ;,Americas_AW_Load_MgrProd_Final.sas
  INSERT INTO AW_SLS_PRD_AM.AREASALES_MGR_PROD_FINAL Select * FROM AW_TGT_TABLEAU_DBO.AREASALES_MGR_PROD_FINAL ) by odbc ;,Americas_AW_Load_MgrProd_Final.sas
   TRUNCATE Table AW_SLS_PRD_AM.MGR_PROD_BY_ACCT ) by odbc ;,Americas_AW_Load_Mgr_Prod_by_Account.sas
"  CREATE TABLE AW_SLS_STG_AM.&TBLNM._STG ( rpt_yr Double , rpt_pd_mo Double , sm_eid Varchar ( 10), sm_name Varchar ( 100), sm_role_id Double , sm_role_nm Varchar ( 100), sls_channel Varchar ( 50), sls_segment Varchar ( 50), sm_org_id Double , sm_org_nm Varchar ( 100), sm_mkt_id Double , sm_mkt_nm Varchar ( 100), sm_area_id Double , sm_area_nm Varchar ( 100), prop_cd Varchar ( 10), prop_nm Varchar ( 100), prp_org_id Double , prp_org_nm Varchar ( 100), prp_mkt_id Double , prp_mkt_nm Varchar ( 100), prp_area_id Double , prp_area_nm Varchar ( 100), account_id Varchar ( 15), account_nm Varchar ( 100), total_pace_id Double , total_pace_nm Varchar ( 100), account_flg Varchar ( 1), act_comp Varchar ( 100), pace_cur_rm_nts Double , pace_cur_rm_rev Double , pace_cur_grp_cat_rev Double , pace_cur_loc_cat_rev Double , pace_cur_tot_cat_rev Double , pace_fut_rm_nts Double , pace_fut_rm_rev Double , pace_fut_grp_cat_rev Double , pace_fut_loc_cat_rev Double , pace_fut_tot_cat_rev Double , pace_rm_nts Double , pace_rm_rev Double , pace_grp_cat_rev Double , pace_loc_cat_rev Double , pace_tot_cat_rev Double , pace_tot_rev Double , ap_trns_rm_nts Double , ap_trns_rm_rev Double , ap_cntr_rm_nts Double , ap_cntr_rm_rev Double , ap_tot_rm_nts Double , ap_tot_rm_rev Double , ext_trns_rm_nts Double , ext_trns_rm_rev Double , ext_cntr_rm_nts Double , ext_cntr_rm_rev Double , ext_tot_rm_nts Double , ext_tot_rm_rev Double , cw_dual_trk_flg Varchar ( 1)) ) by odbc ;",Americas_AW_Load_Mgr_Prod_by_Account.sas
INSERT INTO TABLE AWPROD.&TBLNM._STG SELECT * FROM work.&TBLNM;,Americas_AW_Load_Mgr_Prod_by_Account.sas
  INSERT INTO AW_SLS_PRD_AM.MGR_PROD_BY_ACCT Select * FROM AW_SLS_STG_AM.&TBLNM._STG ) by odbc ;,Americas_AW_Load_Mgr_Prod_by_Account.sas
DROP TABLE AWPROD.&TBLNM._STG;,Americas_AW_Load_Mgr_Prod_by_Account.sas
 CREATE TABLE OUTBOUND_FINAL AS ( SELECT  *  FROM OUTBOUND2 );,Americas_AW_Load_OutboundData.sas
"  CREATE TABLE AW_TGT_TABLEAU_DBO.AREASALES_OUTBOUND_FINAL_STG (  report_year Double , report_month Double , goal_mgr_channel Varchar( 50) , org_name Varchar( 100) , mrkt_name Varchar( 100) , area_name Varchar( 100) , sm_role_nm Varchar( 100) , eid Varchar( 8) , goal_mgr_name Varchar( 100) , act_comp Varchar( 100) , org_of_property Varchar( 100) , marsha_cd Varchar( 10) , pace_rm_rev Double , DATA_SOURCE Varchar( 11) , OWNER Varchar( 100) , HOTEL_NAME Varchar( 100), SFO_Market Varchar( 50) , SFO_Area Varchar( 50) ) ) by odbc ;",Americas_AW_Load_OutboundData.sas
INSERT INTO TABLE AWPROD.AREASALES_OUTBOUND_FINAL_STG SELECT * FROM work.OUTBOUND_FINAL;,Americas_AW_Load_OutboundData.sas
   TRUNCATE Table AW_TGT_TABLEAU_DBO.AREASALES_OUTBOUND_FINAL ) by odbc ;,Americas_AW_Load_OutboundData.sas
  INSERT INTO AW_TGT_TABLEAU_DBO.AREASALES_OUTBOUND_FINAL Select * FROM AW_TGT_TABLEAU_DBO.AREASALES_OUTBOUND_FINAL_STG ) by odbc ;,Americas_AW_Load_OutboundData.sas
DROP TABLE AWPROD.AREASALES_OUTBOUND_FINAL_STG;,Americas_AW_Load_OutboundData.sas
   TRUNCATE Table AW_SLS_PRD_AM.AREASALES_OUTBOUND_FINAL ) by odbc ;,Americas_AW_Load_OutboundData.sas
  INSERT INTO AW_SLS_PRD_AM.AREASALES_OUTBOUND_FINAL Select * FROM AW_TGT_TABLEAU_DBO.AREASALES_OUTBOUND_FINAL ) by odbc ;,Americas_AW_Load_OutboundData.sas
" CREATE TABLE FILL_MISSING_DATA AS SELECT REPORT_YEAR AS STAY_YEAR, STAY_PD_MO, MGR_ORG_NAME, PROPCASE( PROPERTY_ORG) AS ORG_NAME, PROPCASE( PROPERTY_ORG) AS PRP_ORG, ACCOUNT_NAME, GOAL_ACCOUNT_ID, PROP_MARKET, PROP_AREA, CASE WHEN ROLE_TITLE IN ( 'Market Account Executive, Mid-Market','Market Account Executive, Prospect') THEN 'Market-Deployed' ELSE MARKET_NAME END AS MRKT_NAME, CASE WHEN ROLE_TITLE IN ( 'Market Account Executive, Mid-Market','Market Account Executive, Prospect') THEN 'Market-Deployed' ELSE AREA_NAME END AS AREA_NAME, EXECUTIVE_EID, EXECUTIVE_NAME, ROLE_TITLE, MARSHA, MGD_FRN, DOM_INT, BRAND_CODE, RN, ROOM_REVENUE AS USD_REV FROM OTBND.BT_IN_OUT_YTD WHERE OUTBOUND_IND NOT IN ( 'N') AND ROLE_TITLE IN ( 'Market Account Executive, Mid-Market','Market Account Executive, Prospect') ;",Americas_AW_Load_Outbound_AP_Leadership_Dashboard_v2.sas
" CREATE TABLE OTBND_BT_PRODUCTION_YTD AS select a.stay_year, a.stay_pd_mo, a.mgr_org_name, a.prp_org AS org_name, a.prp_org, a.account_name, a.goal_account_id, a.prop_market, a.prop_area, a.mrkt_name, a.area_name, CASE WHEN b.org_name is null THEN 'Non-Participating' ELSE b.market_name END AS sfo_market, CASE WHEN b.org_name is null THEN 'Non-Participating' ELSE b.area_name END AS sfo_area, a.executive_eid, a.executive_name, a.role_title, CASE WHEN a.prp_org = 'Not Participating' AND c.region_name IN ( 'Americas East','Americas West') AND c.state <> 'HI' THEN 'Non-Participating US' when a.prp_org = 'Not Participating' AND c.region_name IN ( 'Canada') THEN 'Non-Participating Canada' when a.prp_org = 'Not Participating' AND c.region_name IN ( 'Americas West') AND c.state = 'HI' THEN 'Non-Participating Hawaii' when a.prp_org = 'Not Participating' AND c.region_name IN ( 'Caribbean Latin America') THEN 'Non-Participating CALA' when a.prp_org = 'Not Participating' AND c.region_name not IN ( 'Americas East','Americas West','Caribbean Latin America','Canada') THEN 'Non-Participating Other' ELSE a.prp_org END AS property_org, a.marsha, a.mgd_frn, a.dom_int, a.brand_code, a.rn, a.usd_rev, 'MRDW_Data' AS data_source FROM FILL_MISSING_DATA a LEFT JOIN prp_snap.areasls_prop_&curyr._&period B ON a.marsha=b.marsha_code LEFT JOIN AWPROD.PROPERTY_MASTER c ON a.marsha=c.marsha ;",Americas_AW_Load_Outbound_AP_Leadership_Dashboard_v2.sas
DROP TABLE AWPROD.AS_OTBND_FINAL_PROD_YTD_STG;,Americas_AW_Load_Outbound_AP_Leadership_Dashboard_v2.sas
"  CREATE TABLE AW_TGT_TABLEAU_DBO.AS_OTBND_FINAL_PROD_YTD_STG ( stay_year Double , STAY_PD_MO Double , MGR_ORG_NAME Varchar( 50) , org_name Varchar( 50) , PRP_ORG Varchar( 50) , account_name Varchar( 100), goal_account_id VARCHAR( 10), prop_market Varchar( 50) , prop_area Varchar( 50) , mrkt_name Varchar( 29) , area_name Varchar( 38) , sfo_market Varchar( 50) , sfo_area Varchar( 50) , EXECUTIVE_EID Varchar( 8) , EXECUTIVE_NAME Varchar( 50) , ROLE_TITLE Varchar( 50) , property_org Varchar( 50) , MARSHA Varchar( 5) , MGD_FRN Varchar( 1) , DOM_INT Varchar( 1) , BRAND_CODE Varchar( 2) , RN Double , usd_rev Double , data_source Varchar( 9) ) ) by odbc ;",Americas_AW_Load_Outbound_AP_Leadership_Dashboard_v2.sas
INSERT INTO TABLE AWPROD.AS_OTBND_FINAL_PROD_YTD_STG SELECT * FROM work.OTBND_BT_PRODUCTION_YTD;,Americas_AW_Load_Outbound_AP_Leadership_Dashboard_v2.sas
  TRUNCATE Table AW_TGT_TABLEAU_DBO.AREASALES_BT_OTBND_FINAL_PROD_YTD ) by odbc ;,Americas_AW_Load_Outbound_AP_Leadership_Dashboard_v2.sas
  INSERT INTO AW_TGT_TABLEAU_DBO.AREASALES_BT_OTBND_FINAL_PROD_YTD Select * FROM AW_TGT_TABLEAU_DBO.AS_OTBND_FINAL_PROD_YTD_STG ) by odbc ;,Americas_AW_Load_Outbound_AP_Leadership_Dashboard_v2.sas
DROP TABLE AWPROD.AS_OTBND_FINAL_PROD_YTD_STG;,Americas_AW_Load_Outbound_AP_Leadership_Dashboard_v2.sas
 CREATE TABLE Prop_Data_Owner_Deck2 AS ( SELECT  *  FROM Prop_Data_Owner_Deck );,Americas_AW_Load_OwnerDashboard_Final.sas
" CREATE TABLE AW_TGT_TABLEAU_DBO.AREASALES_OWNER_DASHBOARD_STG (  rpt_yr Double , rpt_pd_mo Double , marsha Varchar( 10) , act_comp Varchar( 100) , rn Double , rr Double , cr Double , tr Double , tot_rev_goal Double , ap_rn Double , ap_rr Double , ap_rev_goal Double , brand Varchar( 2) , MF Varchar( 1) , HOTEL_NAME Varchar( 100) , REGION_NAME Varchar( 25) , SFO_ORG Varchar( 3) , ADDRESS Varchar( 40) , CITY Varchar( 30) , STATE Varchar( 2) , ZIP Varchar( 9) , OWNER Varchar( 50) , AVP Varchar( 25) , RD Varchar( 30) , LATITUDE Decimal( 12,8) , LONGITUDE Decimal( 12,8) ) ) by odbc ;",Americas_AW_Load_OwnerDashboard_Final.sas
INSERT INTO TABLE AWPROD.AREASALES_OWNER_DASHBOARD_STG SELECT * FROM work.Prop_Data_Owner_Deck2;,Americas_AW_Load_OwnerDashboard_Final.sas
   TRUNCATE Table AW_TGT_TABLEAU_DBO.AREASALES_OWNER_DASHBOARD ) by odbc ;,Americas_AW_Load_OwnerDashboard_Final.sas
   INSERT INTO AW_TGT_TABLEAU_DBO.AREASALES_OWNER_DASHBOARD Select * FROM AW_TGT_TABLEAU_DBO.AREASALES_OWNER_DASHBOARD_STG ) by odbc ;,Americas_AW_Load_OwnerDashboard_Final.sas
DROP TABLE AWPROD.AREASALES_OWNER_DASHBOARD_STG;,Americas_AW_Load_OwnerDashboard_Final.sas
 CREATE TABLE MthProd_Load AS ( SELECT  *  FROM Dynamic_Wholesale_Data );,Americas_AW_Load_Prod_Dynamic_Wholesale_Mth.sas
"  CREATE TABLE AW_SLS_PRD_AM.Prod_Dynamic_Wholesale_Mth_STG (  marsha_code Varchar( 5) , SFO_ORG Varchar( 3) , iata_number Varchar( 9) , intermediary_company_nm Varchar( 100) , SAE_Name_Only Varchar( 100) , executive_eid Varchar( 8) , month_cal_id Double , qtr Varchar( 2) , rnty Double , net_usd_rev_ty Double ) ) by odbc ;",Americas_AW_Load_Prod_Dynamic_Wholesale_Mth.sas
INSERT INTO TABLE AWPROD.Prod_Dynamic_Wholesale_Mth_STG SELECT * FROM work.MthProd_Load;,Americas_AW_Load_Prod_Dynamic_Wholesale_Mth.sas
   TRUNCATE Table AW_SLS_PRD_AM.Prod_Dynamic_Wholesale_&CURYR ) by odbc ;,Americas_AW_Load_Prod_Dynamic_Wholesale_Mth.sas
   INSERT INTO AW_SLS_PRD_AM.Prod_Dynamic_Wholesale_&CURYR Select * FROM AW_SLS_PRD_AM.Prod_Dynamic_Wholesale_Mth_STG ) by odbc ;,Americas_AW_Load_Prod_Dynamic_Wholesale_Mth.sas
DROP TABLE AWPROD.Prod_Dynamic_Wholesale_Mth_STG;,Americas_AW_Load_Prod_Dynamic_Wholesale_Mth.sas
 CREATE TABLE PropProd_Final2 AS ( SELECT  *  FROM PropProd_Final );,Americas_AW_Load_PropProd_Final.sas
"  CREATE TABLE AW_TGT_TABLEAU_DBO.AREASALES_PROP_PROD_FINAL_STG (  rpt_yr Double , rpt_pd_mo Double , prop_cd Varchar( 10) , prop_nm Varchar( 100) , prp_org_id Double , prp_org_nm Varchar( 100) , prp_mkt_id Double , prp_mkt_nm Varchar( 100) , prp_area_id Double , prp_area_nm Varchar( 100) , act_comp Varchar( 100) , pace_cur_rm_nts Double , pace_cur_rm_rev Double , pace_cur_grp_cat_rev Double , pace_cur_loc_cat_rev Double , pace_cur_tot_cat_rev Double , pace_fut_rm_nts Double , pace_fut_rm_rev Double , pace_fut_grp_cat_rev Double , pace_fut_loc_cat_rev Double , pace_fut_tot_cat_rev Double , pace_rm_nts Double , pace_rm_rev Double , pace_grp_cat_rev Double , pace_loc_cat_rev Double , pace_tot_cat_rev Double , pace_tot_rev_prd Double , pace_tot_rev_gl Double , ap_trns_rm_nts Double , ap_trns_rm_rev Double , ap_cntr_rm_nts Double , ap_cntr_rm_rev Double , ap_tot_rm_nts Double , ap_tot_rm_rev_prd Double , ap_tot_rm_rev_gl Double , ext_trns_rm_nts Double , ext_trns_rm_rev Double , ext_cntr_rm_nts Double , ext_cntr_rm_rev Double , ext_tot_rm_nts Double , ext_tot_rm_rev Double , cw_dual_trk_flg Varchar( 1) , yr_lock_ind Double , dw_load_ts TIMESTAMP , data_source Varchar( 8) ) ) by odbc ;",Americas_AW_Load_PropProd_Final.sas
INSERT INTO TABLE AWPROD.AREASALES_PROP_PROD_FINAL_STG SELECT * FROM work.PropProd_Final2;,Americas_AW_Load_PropProd_Final.sas
   TRUNCATE Table AW_TGT_TABLEAU_DBO.AREASALES_PROP_PROD_FINAL ) by odbc ;,Americas_AW_Load_PropProd_Final.sas
  INSERT INTO AW_TGT_TABLEAU_DBO.AREASALES_PROP_PROD_FINAL Select * FROM AW_TGT_TABLEAU_DBO.AREASALES_PROP_PROD_FINAL_STG ) by odbc ;,Americas_AW_Load_PropProd_Final.sas
DROP TABLE AWPROD.AREASALES_PROP_PROD_FINAL_STG;,Americas_AW_Load_PropProd_Final.sas
 CREATE TABLE QUOTEDETAIL2 AS ( SELECT  *  FROM QUOTEDETAIL );,Americas_AW_Load_QuoteData.sas
"  CREATE TABLE AW_TGT_TABLEAU_DBO.AREASALES_QUOTE_INFO_STG (  Report_Month Double , REPORT_YEAR Double , Organization Varchar( 255) , EID Varchar( 255) , role Varchar( 255) , Account_Name Varchar( 255) , ACCOUNT_COMPONENT Varchar( 40) , MARSHA Varchar( 255) , Quote_Num Varchar( 255) , RN Double , RR Double , CR Double , TR Double , Associate_Name Varchar( 102) , PROP_NM Varchar( 100) , PROPERTY_ORGANIZATION Varchar( 100) ) ) by odbc ;",Americas_AW_Load_QuoteData.sas
INSERT INTO TABLE AWPROD.AREASALES_QUOTE_INFO_STG SELECT * FROM work.QUOTEDETAIL2;,Americas_AW_Load_QuoteData.sas
   TRUNCATE Table AW_TGT_TABLEAU_DBO.AREASALES_QUOTE_INFO ) by odbc ;,Americas_AW_Load_QuoteData.sas
  INSERT INTO AW_TGT_TABLEAU_DBO.AREASALES_QUOTE_INFO Select * FROM AW_TGT_TABLEAU_DBO.AREASALES_QUOTE_INFO_STG ) by odbc ;,Americas_AW_Load_QuoteData.sas
DROP TABLE AWPROD.AREASALES_QUOTE_INFO_STG;,Americas_AW_Load_QuoteData.sas
" CREATE TABLE Prop_Data2 AS ( SELECT SFO_Org, MARSHA_CODE, MARKET_NAME, AREA_NAME FROM Prop_Data UNION ALL SELECT SFO_Org, MARSHA_CODE, MARKET_NAME, AREA_NAME FROM Cala_haw);",Americas_AW_Load_Sales_Participating_Properties.sas
"  CREATE TABLE AW_TGT_METADATA_DBO.SALES_PARTICIPATING_PROPS_STG ( SFO_Org Varchar( 3), Market_Name Varchar( 50), Area_Name Varchar( 50), MARSHA_Code Varchar( 10)) ) by odbc ;",Americas_AW_Load_Sales_Participating_Properties.sas
INSERT INTO TABLE AWMETA.SALES_PARTICIPATING_PROPS_STG SELECT * FROM work.Prop_Data2;,Americas_AW_Load_Sales_Participating_Properties.sas
   TRUNCATE Table AW_TGT_METADATA_DBO.SALES_PARTICIPATING_PROPS ) by odbc ;,Americas_AW_Load_Sales_Participating_Properties.sas
  INSERT INTO AW_TGT_METADATA_DBO.SALES_PARTICIPATING_PROPS Select * FROM AW_TGT_METADATA_DBO.SALES_PARTICIPATING_PROPS_STG ) by odbc ;,Americas_AW_Load_Sales_Participating_Properties.sas
DROP TABLE AWMETA.SALES_PARTICIPATING_PROPS_STG;,Americas_AW_Load_Sales_Participating_Properties.sas
"  CREATE TABLE AW_SLS_STG_AM.TMC_Consortia_Prod_STG (  iata_number Varchar ( 9), brand_code Varchar ( 2), marsha_code Varchar ( 5), property_name Varchar ( 40), property_city Varchar ( 36), property_state Varchar ( 2), market_code Varchar ( 8), property_country_code Varchar ( 2), intermediary_company_nm Varchar ( 36), iata_city Varchar ( 36), iata_state Varchar ( 2), iata_country Varchar ( 2), parent_iata_number Varchar ( 8), parent_tmc_name Varchar ( 36), YrMonth Varchar ( 6), month Double, roomnights_ty Double, gross_usd_rev_ty Double, net_usd_rev_ty Double, qtr Double, org_name Varchar ( 50), Associate Varchar ( 14), Associate_eid Varchar ( 8) ) ) by odbc ;",Americas_AW_Load_TMC_Consortia_Prod.sas
INSERT INTO TABLE awprod.TMC_Consortia_Prod_STG SELECT * FROM work.Consortia_Production;,Americas_AW_Load_TMC_Consortia_Prod.sas
   TRUNCATE Table AW_SLS_PRD_AM.TMC_Consortia_Prod_&CURYR ) by odbc ;,Americas_AW_Load_TMC_Consortia_Prod.sas
   INSERT INTO AW_SLS_PRD_AM.TMC_Consortia_Prod_&CURYR Select * FROM AW_SLS_STG_AM.TMC_Consortia_Prod_STG ) by odbc ;,Americas_AW_Load_TMC_Consortia_Prod.sas
DROP TABLE AWPROD.TMC_Consortia_Prod_STG;,Americas_AW_Load_TMC_Consortia_Prod.sas
" CREATE TABLE PACE_ADJUSTMENTS1 AS  ( SELECT MARSHA_CD AS MARSHA, ORG_NM AS ORGANIZATION, SLS_MGR_ROLE AS ROLE_SEGMENT, QUOTE_NUMBER AS QUOTE_, QUOTE_NM AS QUOTE_NAME, NET_RM_NGTS AS RN, NET_RM_REV AS RR, NET_FUNC_REV AS CR FROM AW_SLS_PRD_AM.MANUAL_ADJUSTMENTS WHERE ADJ_YEAR_ID=&CURYR  )  ;",Americas_Import_ManualAdj.sas
" CREATE TABLE ManAdj_ AS ( SELECT MARSHA, Organization, Role_Segment, Quote_, Quote_Name, RN, RR, CR, CASE WHEN  rn=' '  THEN 0 END AS rn, CASE WHEN  rr=' '  THEN 0 END AS rr, CASE WHEN  cr=' '  THEN 0 END AS cr FROM PACE_ADJUSTMENTS1  WHERE marsha<>'');",Americas_Import_ManualAdj.sas
"CREATE TABLE ManAdj_Detail AS (SELECT MARSHA, Role_Segment, Organization, Quote_, Quote_Name, SUM(RN) AS RN, SUM(RR) AS RR, SUM(CR) AS CR FROM ManAdj_Data GROUP BY MARSHA, Role_Segment, Organization, Quote_, Quote_Name );",Americas_Import_ManualAdj.sas
"CREATE TABLE SFODATA.MA_Detail2 AS (SELECT * FROM ManAdj_Detail ORDER BY MARSHA ,Role_Segment ,Quote_ ,Quote_Name);",Americas_Import_ManualAdj.sas
" CREATE TABLE Inb_Outb AS ( SELECT  * , CASE WHEN  organization='East Northeast'  THEN 'ENE' WHEN   organization='Florida'  THEN 'FL' WHEN   organization='Mid Atlantic'  THEN 'MA' WHEN   organization='Northern Mid-America'  THEN 'NMA' WHEN   organization='Western Mountain Pacific'  THEN 'WMP' WHEN   organization='West Southwest'  THEN 'WSW' WHEN   organization='West South Central'  THEN 'WSC' WHEN   organization='South Southeast'  THEN 'SSE' END AS Org2 FROM ManAdj_Data );",Americas_Import_ManualAdj.sas
SELECT * FROM Inb_Outb ORDER BY Marsha;,Americas_Import_ManualAdj.sas
" CREATE TABLE SFO_orgs5 AS ( SELECT  *, Organization AS Verify_org FROM SFO_Orgs4 );",Americas_Import_ManualAdj.sas
SELECT * FROM SFO_orgs5 ORDER BY marsha;,Americas_Import_ManualAdj.sas
" CREATE TABLE combin AS ( SELECT  * , CASE WHEN  Org2=verify_org  THEN 'Inbound' ELSE 'Outbound' END AS MA_Org FROM Inb_Outb A LEFT JOIN SFO_orgs5 B ON  A.marsha =  B.marsha);",Americas_Import_ManualAdj.sas
"CREATE TABLE SFODATA.InboundMA AS (SELECT MARSHA, SUM(RN) AS RN, SUM(RR) AS RR, SUM(CR) AS CR FROM combin WHERE MA_Org='Inbound' GROUP BY MARSHA );",Americas_Import_ManualAdj.sas
"CREATE TABLE SFODATA.OtherOrg AS (SELECT MARSHA, SUM(RN) AS RN, SUM(RR) AS RR, SUM(CR) AS CR FROM combin WHERE MA_Org<>'Inbound' GROUP BY MARSHA );",Americas_Import_ManualAdj.sas
" CREATE TABLE PACE_ADJUSTMENTS1 AS  ( select ORG_NM AS ORGANIZATION, MARSHA_CD AS MARSHA, SLS_MGR_LOGIN AS ASSOCIATE_EID, CLARITAS_ID AS DEPLOYED_CLARITAS_ID, QUOTE_NUMBER AS QUOTE_, ADJ_MONTH_ID AS PERIOD_IMPACTED, MARKET_NM AS MARKET, AREA_NM AS AREA, SLS_MGR_ROLE AS ROLE_SEGMENT, ACCT_COMP_TYPE AS REVENUE_TYPE, ARRIVAL_DT AS ARRIVAL_DATE, NET_RM_NGTS AS RN, NET_RM_REV AS RR, NET_FUNC_REV AS CR, NEW_DEF_FLG AS NEW_DEFINITE_FLAG FROM AW_SLS_DBO.MANUAL_ADJUSTMENTS WHERE adj_year_id=&curyr)  ;",Americas_Import_Manual_Adjustments.sas
 CREATE TABLE CLEAN_ADJUSTMENTS AS ( SELECT  *  FROM pace_adjustments1  WHERE SLS_MGR_ROLE not IN ( 'Citywide Sales Executive'));,Americas_Import_Manual_Adjustments.sas
"CREATE TABLE Manual_Adds_&CURYR AS (SELECT * FROM Manual_Adds_&CURYR.a WHERE period<>.  ORDER BY year ,period);",Americas_Import_Manual_Adjustments.sas
" CREATE TABLE Adj AS ( SELECT  *, year AS rpt_yr, period AS rpt_pd_mo, org AS organization, segment AS position_title, Executive_EID AS Associate_EID, 0 AS Booked_Assigned_REV , 0 AS Booked_Non_Assigned_REV , 0 AS Booked_Assigned_REV_Goal , 0 AS Booked_Non_Assigned_REV_Goal , 0 AS Bkd_Assigned_Outbound_REV , 0 AS Bkd_Assigned_Outbound_REV_Goal , 0 AS Bkd_NonAssn_Outbound_REV , 0 AS Bkd_NonAssn_Outbound_REV_Goal , 0 AS Actual_Assigned_REV , 0 AS Actual_Assigned_REV_Goal , ""Pace-M"" AS House_Credit , CASE WHEN  acct_comp_type=""Non Assigned Account IN Organization""  THEN ( curr_rv_ly+fut_rv_ly+curr_cat_revenue_ly+fut_cat_revenue_ly ) WHEN   acct_comp_type=""Assigned Account IN Organization""  THEN ( curr_rv_ly+fut_rv_ly+curr_cat_revenue_ly+fut_cat_revenue_ly ) FROM Manual_Adds_&CURYR );",Americas_Import_Manual_Adjustments.sas
"CREATE TABLE CY_Manual_Adds AS (SELECT rpt_yr, rpt_pd_mo, Organization, Market, Area, Associate_EID, Position_Title, House_Credit, SUM(Booked_Assigned_REV) AS Booked_Assigned_REV, SUM(Booked_Assigned_REV_Goal) AS Booked_Assigned_REV_Goal, SUM(Booked_Non_Assigned_REV) AS Booked_Non_Assigned_REV, SUM(Booked_Non_Assigned_REV_Goal) AS Booked_Non_Assigned_REV_Goal, SUM(Bkd_Assigned_Outbound_REV) AS Bkd_Assigned_Outbound_REV, SUM(Bkd_Assigned_Outbound_REV_Goal) AS Bkd_Assigned_Outbound_REV_Goal, SUM(Bkd_NonAssn_Outbound_REV) AS Bkd_NonAssn_Outbound_REV, SUM(Bkd_NonAssn_Outbound_REV_Goal) AS Bkd_NonAssn_Outbound_REV_Goal, SUM(Actual_Assigned_REV) AS Actual_Assigned_REV, SUM(Actual_Assigned_REV_Goal) AS Actual_Assigned_REV_Goal FROM adj GROUP BY rpt_yr, rpt_pd_mo, Organization, Market, Area, Associate_EID, Position_Title, House_Credit );",Americas_Import_Manual_Adjustments.sas
" CREATE TABLE OutboundData AS  ( select a.report_year, a.report_pd_mo AS report_month, btrim( a.sm_channel) AS goal_mgr_channel, btrim( a.sm_curr_org_nm) AS org_name, btrim( a.sm_curr_market_nm) AS mrkt_name, btrim( a.sm_curr_area_nm) AS area_name, CASE WHEN a.sm_segment='Sales Executive' THEN 'Sales Executive' when a.sm_segment='Prospect' THEN 'Market Account Executive, Prospect' when a.sm_segment='Association' THEN 'Market Account Executive, Association' when a.sm_segment='EST' THEN 'Market Account Executive, EST' when a.sm_segment='Affinity' THEN 'Area Account Executive, Affinity' when a.sm_segment='Government' THEN 'Area Account Executive, Government' when a.sm_segment='Mid-Market' THEN 'Market Account Executive, Mid-Market' when a.sm_segment='Whsale/FIT/Tour & Travel' THEN 'Market Account Executive, Whsale/FIT/Tour & Travel' END AS sm_role_nm, a.sm_eid AS EID, a.sm_name AS goal_mgr_name, a.acct_comp_type AS act_comp, a.marsha_cd, SUM( a.net_rm_rev) AS pace_rm_rev, SUM( a.net_cat_rev) AS pace_tot_cat_rev, 'SGR_Data' AS data_source FROM sgr_fact_smry_quote_flt a WHERE a.report_year IN ( &curyr.-1,&curyr. ) AND a.acct_comp_type IN ( 'Assigned Account out of Organization','Non Assigned Account out of Organization') AND a.net_rm_rev <>0 AND a.sm_eid=a.orig_mgr_eid GROUP BY a.report_year, a.report_pd_mo, a.sm_channel, a.sm_curr_org_nm, a.sm_curr_market_nm, a.sm_curr_area_nm, a.sm_segment, a.sm_eid, a.sm_name, a.acct_comp_type, a.marsha_cd, data_source  ) ;",Americas_OutboundData.sas
" CREATE TABLE OTBND_ADJST AS ( SELECT SM_ROLE_NM, ACT_COMP, PACE_RM_REV, PACE_TOT_CAT_REV, RPT_YR AS REPORT_YEAR, RPT_PD_MO AS REPORT_MONTH, SLS_CHANNEL AS GOAL_MGR_CHANNEL, MARSHA AS MARSHA_CD, SM_ORG_NM AS ORG_NAME, SM_MKT_NM AS MRKT_NAME, SM_AREA_NM AS AREA_NAME, SM_EID AS EID, SM_NAME AS GOAL_MGR_NAME, 'Manual_Adds' AS DATA_SOURCE , CASE WHEN  RTRIM( PRP_ORG_NM) =""""  THEN 'Not Participating' ELSE PRP_ORG_NM END AS ORG_OF_PROPERTY, CASE WHEN  SM_ROLE_NM='Area Account Executive, Mid-Market'  THEN 'Market Account Executive, Mid-Market' END AS SM_ROLE_NM FROM MGR_ADJST  WHERE ACT_COMP IN ( 'Assigned Account out of Organization','Non Assigned Account out of Organization') AND UPPER( SM_EID)=UPPER( ORIG_MGR_EID ) );",Americas_OutboundData.sas
" CREATE TABLE Outbound AS ( SELECT  *  , FORMAT(DATA_SOURCE, VARCHAR(11)) AS DATA_SOURCE , CASE WHEN  MARSHA_CD='WASSH'  THEN 'WASAK' WHEN  MARSHA_CD='STLDT'  THEN 'STLMG' END AS MARSHA_CD FROM OutboundData UNION ALL SELECT  *  , FORMAT(DATA_SOURCE, VARCHAR(11)) AS DATA_SOURCE , CASE WHEN  MARSHA_CD='WASSH'  THEN 'WASAK' WHEN  MARSHA_CD='STLDT'  THEN 'STLMG' END AS MARSHA_CD FROM OTBND_ADJST);",Americas_OutboundData.sas
 CREATE TABLE PROPS_W_STARWOOD AS  ( SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER ORDER BY MARSHA  )  ;,Americas_OutboundData.sas
" CREATE TABLE Outbound2 AS select a.report_year, a.report_month, a.goal_mgr_channel, a.org_name, CASE WHEN a.goal_mgr_channel = 'Market Sales' THEN 'Market-Deployed' ELSE a.mrkt_name END AS mrkt_name, CASE WHEN a.goal_mgr_channel = 'Market Sales' THEN 'Market-Deployed' ELSE a.area_name END AS area_name, CASE WHEN b.org_name is null THEN 'Non-Participating' ELSE b.market_name END AS sfo_market, CASE WHEN b.org_name is null THEN 'Non-Participating' ELSE b.area_name END AS sfo_area, a.sm_role_nm, a.eid, a.goal_mgr_name, a.act_comp, CASE WHEN b.org_name is not null THEN b.org_name when b.org_name is null AND c.region_name IN ( 'Americas East','Americas West') AND c.state <> 'HI' THEN 'Non-Participating US' when b.org_name is null AND c.region_name IN ( 'Canada') THEN 'Non-Participating Canada' when b.org_name is null AND c.region_name IN ( 'Americas West') AND c.state = 'HI' THEN 'Non-Participating Hawaii' when b.org_name is null AND c.region_name IN ( 'Caribbean Latin America') THEN 'Non-Participating CALA' ELSE 'Non-Participating Other' END AS org_of_property, a.marsha_cd, a.pace_rm_rev, a.pace_tot_cat_rev, a.data_source, c.owner, c.hotel_name FROM Outbound a LEFT JOIN prp_snap.areasls_prop_&curyr._&period B ON a.marsha_cd=b.marsha_code LEFT JOIN props_w_starwood c ON a.marsha_cd=c.marsha ;",Americas_OutboundData.sas
"CREATE TABLE ""&DEST.\OTBNDProd.CSV"" AS ( SELECT * FROM Outbound2) ;",Americas_OutboundData.sas
"CREATE TABLE ""&DEST2.\OTBNDProd.CSV"" AS ( SELECT * FROM Outbound2) ;",Americas_OutboundData.sas
" CREATE TABLE PACE_ADJUSTMENTS1 AS  ( select * FROM sgr_flat_manual_adjustments WHERE adj_year_id IN ( &lyyear,&curyr)  )  ;",Americas_Pace_ManAdjustments_Detail_AW.sas
"CREATE TABLE CLEANDATA AS ( SELECT  *, ORIG_SLS_MGR_LOGIN AS SLS_MGR_LOGIN FROM PACE_ADJUSTMENTS1  WHERE UPPER( ACCT_COMP_TYPE) not IN ( ""NON ASSIGNED ACCOUNT not IN ORGANIZATION"",""NON ASSIGNED ACCOUNT OUT OF ORGANIZATION"") AND SLS_MGR_ROLE IN ( ""Market Account Executive, Whsale/FIT/Tour & Travel"",""Sales Executive""));",Americas_Pace_ManAdjustments_Detail_AW.sas
ALTER TABLE CLEANDATA DROP COLUMN SLS_MGR_LOGIN ;,Americas_Pace_ManAdjustments_Detail_AW.sas
" CREATE TABLE CLEANDATA1 AS ( SELECT  * , CASE WHEN  MARSHA_CD=""WASSH""  THEN ""WASAK"" WHEN  MARSHA_CD=""STLDT""  THEN ""STLMG"" END AS MARSHA_CD FROM CLEANDATA );",Americas_Pace_ManAdjustments_Detail_AW.sas
SELECT * FROM CLEANDATA1 ORDER BY MARSHA_CD;,Americas_Pace_ManAdjustments_Detail_AW.sas
" CREATE TABLE SGR_PRP_NAMES1 AS SELECT RPT_PD_MO, PROP_CD AS MARSHA_CD, PROP_NM, PRP_ORG_ID, PRP_ORG_NM, PRP_MKT_ID, PRP_MKT_NM, PRP_AREA_ID, PRP_AREA_NM FROM NZPROD.sgr_fact_smry_prp_perf WHERE RPT_YR=&CURYR. AND CW_DUAL_TRK_FLG <> ""F"" ORDER BY PROP_CD, RPT_PD_MO DESC;",Americas_Pace_ManAdjustments_Detail_AW.sas
"CREATE TABLE SGR_PRP_NAMES AS ( SELECT   * , FIRST(MARSHA_CD) OVER ( PARTITION BY MARSHA_CD GROUP BY MARSHA_CD , DESC , RPT_PD_MO ORDER BY MARSHA_CD , DESC , RPT_PD_MO )  FROM SGR_PRP_NAMES1 );",Americas_Pace_ManAdjustments_Detail_AW.sas
ALTER TABLE SGR_PRP_NAMES DROP COLUMN RPT_PD_MO ;,Americas_Pace_ManAdjustments_Detail_AW.sas
 CREATE TABLE PROPS_W_STARWOOD AS  ( SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER ORDER BY MARSHA  )  ;,Americas_Pace_ManAdjustments_Detail_AW.sas
 CREATE TABLE CLEANDATA BAD_MARSHA AS ( SELECT  *  FROM CLEANDATA1 A JOIN PROPS_W_STARWOOD B ON  A.MARSHA_CD =  B.MARSHA_CD JOIN SGR_PRP_NAMES C ON  B.MARSHA_CD =  C.MARSHA_CD WHERE A AND B AND not C);,Americas_Pace_ManAdjustments_Detail_AW.sas
" CREATE TABLE PROP_ADJST AS ( SELECT  *, ADJ_YEAR_ID AS RPT_YR, ADJ_MONTH_ID AS RPT_PD_MO, MARSHA_CD AS PROP_CD, NET_RM_NGTS AS PACE_RM_NTS, NET_RM_REV AS PACE_RM_REV, NET_FUNC_REV AS PACE_TOT_CAT_REV, TOTAL_NET_REV AS PACE_TOT_REV_PRD, ACCT_COMP_TYPE AS ACT_COMP, 0 AS PACE_CUR_RM_NTS , 0 AS PACE_CUR_RM_REV , 0 AS PACE_CUR_GRP_CAT_REV , 0 AS PACE_CUR_LOC_CAT_REV , 0 AS PACE_CUR_TOT_CAT_REV , 0 AS PACE_FUT_RM_NTS , 0 AS PACE_FUT_RM_REV , 0 AS PACE_FUT_GRP_CAT_REV , 0 AS PACE_FUT_LOC_CAT_REV , 0 AS PACE_FUT_TOT_CAT_REV , 0 AS PACE_GRP_CAT_REV , 0 AS PACE_LOC_CAT_REV , 0 AS PACE_TOT_REV_GL , 0 AS AP_TRNS_RM_NTS , 0 AS AP_TRNS_RM_REV , 0 AS AP_CNTR_RM_NTS , 0 AS AP_CNTR_RM_REV , 0 AS AP_TOT_RM_REV_GL , 0 AS EXT_TRNS_RM_NTS , 0 AS EXT_TRNS_RM_REV , 0 AS EXT_CNTR_RM_NTS , 0 AS EXT_CNTR_RM_REV , 0 AS EXT_TOT_RM_NTS , 0 AS EXT_TOT_RM_REV , ""N"" AS CW_DUAL_TRK_FLG , 1 AS YR_LOCK_IND , ""Man_Adj"" AS DATA_SOURCE , CASE WHEN  AP_TOT_RM_NTS=' '  THEN 0 END AS AP_TOT_RM_NTS, CASE WHEN  AP_TOT_RM_REV_PRD=' '  THEN 0 END AS AP_TOT_RM_REV_PRD FROM CLEANDATA UNION ALL SELECT  *, ADJ_YEAR_ID AS RPT_YR, ADJ_MONTH_ID AS RPT_PD_MO, MARSHA_CD AS PROP_CD, NET_RM_NGTS AS PACE_RM_NTS, NET_RM_REV AS PACE_RM_REV, NET_FUNC_REV AS PACE_TOT_CAT_REV, TOTAL_NET_REV AS PACE_TOT_REV_PRD, ACCT_COMP_TYPE AS ACT_COMP, 0 AS PACE_CUR_RM_NTS , 0 AS PACE_CUR_RM_REV , 0 AS PACE_CUR_GRP_CAT_REV , 0 AS PACE_CUR_LOC_CAT_REV , 0 AS PACE_CUR_TOT_CAT_REV , 0 AS PACE_FUT_RM_NTS , 0 AS PACE_FUT_RM_REV , 0 AS PACE_FUT_GRP_CAT_REV , 0 AS PACE_FUT_LOC_CAT_REV , 0 AS PACE_FUT_TOT_CAT_REV , 0 AS PACE_GRP_CAT_REV , 0 AS PACE_LOC_CAT_REV , 0 AS PACE_TOT_REV_GL , 0 AS AP_TRNS_RM_NTS , 0 AS AP_TRNS_RM_REV , 0 AS AP_CNTR_RM_NTS , 0 AS AP_CNTR_RM_REV , 0 AS AP_TOT_RM_REV_GL , 0 AS EXT_TRNS_RM_NTS , 0 AS EXT_TRNS_RM_REV , 0 AS EXT_CNTR_RM_NTS , 0 AS EXT_CNTR_RM_REV , 0 AS EXT_TOT_RM_NTS , 0 AS EXT_TOT_RM_REV , ""N"" AS CW_DUAL_TRK_FLG , 1 AS YR_LOCK_IND , ""Man_Adj"" AS DATA_SOURCE , CASE WHEN  AP_TOT_RM_NTS=' '  THEN 0 END AS AP_TOT_RM_NTS, CASE WHEN  AP_TOT_RM_REV_PRD=' '  THEN 0 END AS AP_TOT_RM_REV_PRD FROM BAD_MARSHA);",Americas_Pace_ManAdjustments_Detail_AW.sas
"CREATE TABLE PROP_ADJ_SUM AS (SELECT RPT_YR, RPT_PD_MO, PROP_CD, PROP_NM, PRP_ORG_ID, PRP_ORG_NM, PRP_MKT_ID, PRP_MKT_NM, PRP_AREA_ID, PRP_AREA_NM, ACT_COMP, CW_DUAL_TRK_FLG, YR_LOCK_IND, DATA_SOURCE, SUM(PACE_CUR_RM_NTS) AS PACE_CUR_RM_NTS, SUM(PACE_CUR_RM_REV) AS PACE_CUR_RM_REV, SUM(PACE_CUR_GRP_CAT_REV) AS PACE_CUR_GRP_CAT_REV, SUM(PACE_CUR_LOC_CAT_REV) AS PACE_CUR_LOC_CAT_REV, SUM(PACE_CUR_TOT_CAT_REV) AS PACE_CUR_TOT_CAT_REV, SUM(PACE_FUT_RM_NTS) AS PACE_FUT_RM_NTS, SUM(PACE_FUT_RM_REV) AS PACE_FUT_RM_REV, SUM(PACE_FUT_GRP_CAT_REV) AS PACE_FUT_GRP_CAT_REV, SUM(PACE_FUT_LOC_CAT_REV) AS PACE_FUT_LOC_CAT_REV, SUM(PACE_FUT_TOT_CAT_REV) AS PACE_FUT_TOT_CAT_REV, SUM(PACE_RM_NTS) AS PACE_RM_NTS, SUM(PACE_RM_REV) AS PACE_RM_REV, SUM(PACE_GRP_CAT_REV) AS PACE_GRP_CAT_REV, SUM(PACE_LOC_CAT_REV) AS PACE_LOC_CAT_REV, SUM(PACE_TOT_CAT_REV) AS PACE_TOT_CAT_REV, SUM(PACE_TOT_REV_PRD) AS PACE_TOT_REV_PRD, SUM(PACE_TOT_REV_GL) AS PACE_TOT_REV_GL, SUM(AP_TRNS_RM_NTS) AS AP_TRNS_RM_NTS, SUM(AP_TRNS_RM_REV) AS AP_TRNS_RM_REV, SUM(AP_CNTR_RM_NTS) AS AP_CNTR_RM_NTS, SUM(AP_CNTR_RM_REV) AS AP_CNTR_RM_REV, SUM(AP_TOT_RM_NTS) AS AP_TOT_RM_NTS, SUM(AP_TOT_RM_REV_PRD) AS AP_TOT_RM_REV_PRD, SUM(AP_TOT_RM_REV_GL) AS AP_TOT_RM_REV_GL, SUM(EXT_TRNS_RM_NTS) AS EXT_TRNS_RM_NTS, SUM(EXT_TRNS_RM_REV) AS EXT_TRNS_RM_REV, SUM(EXT_CNTR_RM_NTS) AS EXT_CNTR_RM_NTS, SUM(EXT_CNTR_RM_REV) AS EXT_CNTR_RM_REV, SUM(EXT_TOT_RM_NTS) AS EXT_TOT_RM_NTS, SUM(EXT_TOT_RM_REV) AS EXT_TOT_RM_REV FROM PROP_ADJST GROUP BY RPT_YR, RPT_PD_MO, PROP_CD, PROP_NM, PRP_ORG_ID, PRP_ORG_NM, PRP_MKT_ID, PRP_MKT_NM, PRP_AREA_ID, PRP_AREA_NM, ACT_COMP, CW_DUAL_TRK_FLG, YR_LOCK_IND, DATA_SOURCE );",Americas_Pace_ManAdjustments_Detail_AW.sas
"CREATE TABLE MGR_ADJST AS ( SELECT  *, ADJ_YEAR_ID AS RPT_YR, ADJ_MONTH_ID AS RPT_PD_MO, MARSHA_CD AS PROP_CD, NET_RM_NGTS AS PACE_RM_NTS, NET_RM_REV AS PACE_RM_REV, NET_FUNC_REV AS PACE_TOT_CAT_REV, TOTAL_NET_REV AS PACE_TOT_REV_PRD, SLS_MGR_NM AS SM_NAME, SLS_MGR_LOGIN AS SM_EID, SLS_MGR_ROLE AS SM_ROLE_NM, ORG_NM AS SM_ORG_NM, ORG_NM AS SM_ORG_NM, ACCT_COMP_TYPE AS ACT_COMP, MARSHA_CD AS MARSHA, 0 AS PACE_GRP_CAT_REV , 0 AS PACE_LOC_CAT_REV , 0 AS PACE_TOT_REV_GL , 0 AS AP_TRNS_RM_NTS , 0 AS AP_TRNS_RM_REV , 0 AS AP_CNTR_RM_NTS , 0 AS AP_CNTR_RM_REV , 0 AS AP_TOT_RM_REV_GL , 0 AS EXT_TRNS_RM_NTS , 0 AS EXT_TRNS_RM_REV , 0 AS EXT_CNTR_RM_NTS , 0 AS EXT_CNTR_RM_REV , 0 AS EXT_TOT_RM_NTS , 0 AS EXT_TOT_RM_REV , ""N"" AS CW_DUAL_TRK_FLG , 1 AS YR_LOCK_IND , 0 AS TOTAL_PACE_ID , """" AS TOTAL_PACE_NM , ""ManAdj"" AS DATA_SOURCE , ""C"" AS ACCOUNT_FLG , RTRIM( SUBSTRING( SLS_MGR_ROLE,( INDEX( SLS_MGR_ROLE,"","")+1),RTRIM( LENGTH( SLS_MGR_ROLE))) ) AS SLS_SEGMENT , ORG_NUM AS SM_ORG_ID , MARKET_NUM AS SM_MKT_ID , AREA_NUM AS SM_AREA_ID , CAST( RTRIM( CLARITAS_ID) AS VARCHAR(15)  ) AS ACCOUNT_ID , CASE WHEN  AP_TOT_RM_NTS=' '  THEN 0 END AS AP_TOT_RM_NTS, CASE WHEN  AP_TOT_RM_REV_PRD=' '  THEN 0 END AS AP_TOT_RM_REV_PRD, CASE WHEN  SLS_MGR_ROLE =: ""Market Account""  THEN ""Market Sales"" ELSE ""Area Sales"" END AS SLS_CHANNEL, CASE WHEN  SLS_MGR_ROLE =: ""Market Account""  THEN ""Market-Deployed"" ELSE MARKET_NM END AS SM_MKT_NM, CASE WHEN  SLS_MGR_ROLE =: ""Market Account""  THEN ""Market-Deployed"" ELSE AREA_NM END AS SM_AREA_NM, CASE WHEN  SLS_SEGMENT='Travel Industry Sales'  THEN 'Whsale/FIT/Tour & Travel' ELSE SLS_SEGMENT END AS SLS_SEGMENT1 FROM CLEANDATA UNION ALL SELECT  *, ADJ_YEAR_ID AS RPT_YR, ADJ_MONTH_ID AS RPT_PD_MO, MARSHA_CD AS PROP_CD, NET_RM_NGTS AS PACE_RM_NTS, NET_RM_REV AS PACE_RM_REV, NET_FUNC_REV AS PACE_TOT_CAT_REV, TOTAL_NET_REV AS PACE_TOT_REV_PRD, SLS_MGR_NM AS SM_NAME, SLS_MGR_LOGIN AS SM_EID, SLS_MGR_ROLE AS SM_ROLE_NM, ORG_NM AS SM_ORG_NM, ORG_NM AS SM_ORG_NM, ACCT_COMP_TYPE AS ACT_COMP, MARSHA_CD AS MARSHA, 0 AS PACE_GRP_CAT_REV , 0 AS PACE_LOC_CAT_REV , 0 AS PACE_TOT_REV_GL , 0 AS AP_TRNS_RM_NTS , 0 AS AP_TRNS_RM_REV , 0 AS AP_CNTR_RM_NTS , 0 AS AP_CNTR_RM_REV , 0 AS AP_TOT_RM_REV_GL , 0 AS EXT_TRNS_RM_NTS , 0 AS EXT_TRNS_RM_REV , 0 AS EXT_CNTR_RM_NTS , 0 AS EXT_CNTR_RM_REV , 0 AS EXT_TOT_RM_NTS , 0 AS EXT_TOT_RM_REV , ""N"" AS CW_DUAL_TRK_FLG , 1 AS YR_LOCK_IND , 0 AS TOTAL_PACE_ID , """" AS TOTAL_PACE_NM , ""ManAdj"" AS DATA_SOURCE , ""C"" AS ACCOUNT_FLG , RTRIM( SUBSTRING( SLS_MGR_ROLE,( INDEX( SLS_MGR_ROLE,"","")+1),RTRIM( LENGTH( SLS_MGR_ROLE))) ) AS SLS_SEGMENT , ORG_NUM AS SM_ORG_ID , MARKET_NUM AS SM_MKT_ID , AREA_NUM AS SM_AREA_ID , CAST( RTRIM( CLARITAS_ID) AS VARCHAR(15)  ) AS ACCOUNT_ID , CASE WHEN  AP_TOT_RM_NTS=' '  THEN 0 END AS AP_TOT_RM_NTS, CASE WHEN  AP_TOT_RM_REV_PRD=' '  THEN 0 END AS AP_TOT_RM_REV_PRD, CASE WHEN  SLS_MGR_ROLE =: ""Market Account""  THEN ""Market Sales"" ELSE ""Area Sales"" END AS SLS_CHANNEL, CASE WHEN  SLS_MGR_ROLE =: ""Market Account""  THEN ""Market-Deployed"" ELSE MARKET_NM END AS SM_MKT_NM, CASE WHEN  SLS_MGR_ROLE =: ""Market Account""  THEN ""Market-Deployed"" ELSE AREA_NM END AS SM_AREA_NM, CASE WHEN  SLS_SEGMENT='Travel Industry Sales'  THEN 'Whsale/FIT/Tour & Travel' ELSE SLS_SEGMENT END AS SLS_SEGMENT1 FROM BAD_MARSHA WHERE SLS_MGR_ROLE<>""Citywide Sales Executive"");",Americas_Pace_ManAdjustments_Detail_AW.sas
ALTER TABLE MGR_ADJST DROP COLUMN SLS_SEGMENT ;,Americas_Pace_ManAdjustments_Detail_AW.sas
"CREATE INDEX SLS_MGR_ROLE,"","" ON MGR_ADJST(SLS_MGR_ROLE,"","");",Americas_Pace_ManAdjustments_Detail_AW.sas
" CREATE TABLE SlsMgr_Adjst1 AS ( SELECT  *  , FORMAT(sls_channel, VARCHAR(16)) AS sls_channel , sls_segment AS segment , CASE WHEN  sm_role_nm = 'Sales Executive'  THEN 'Sales Executive' END AS sls_channel FROM Mgr_Adjst  WHERE ACT_COMP<>""Non Assigned Account out of Organization"" AND sm_role_nm IN ( ""Sales Executive"",""Market Account Executive, Whsale/FIT/Tour & Travel""));",Americas_Pace_ManAdjustments_Detail_AW.sas
"CREATE TABLE SM_Prop_Adjst1 AS (SELECT rpt_yr, rpt_pd_mo, sm_eid, sm_name, orig_mgr_eid, sm_role_nm, sls_channel, sls_segment, sm_org_nm, sm_org_id, sm_mkt_nm, sm_mkt_id, sm_area_nm, sm_area_id, act_comp, segment, account_id, MARSHA, data_source,  SUM(pace_rm_nts) AS rn, SUM(pace_rm_rev) AS rv, SUM(pace_tot_cat_rev) AS cat_revenue, SUM(pace_tot_rev_prd) AS tot_rv FROM SlsMgr_Adjst1 GROUP BY rpt_yr, rpt_pd_mo, sm_eid, sm_name, orig_mgr_eid, sm_role_nm, sls_channel, sls_segment, sm_org_nm, sm_org_id, sm_mkt_nm, sm_mkt_id, sm_area_nm, sm_area_id, act_comp, segment, account_id, MARSHA, data_source );",Americas_Pace_ManAdjustments_Detail_AW.sas
"CREATE TABLE SlsMgr_Adjst AS (SELECT rpt_yr, rpt_pd_mo, sm_eid, sm_name, orig_mgr_eid, sm_role_nm, sls_channel, sls_segment, sm_org_nm, sm_org_id, sm_mkt_nm, sm_mkt_id, sm_area_nm, sm_area_id, act_comp, segment, data_source,  SUM(pace_rm_nts) AS rn, SUM(pace_rm_rev) AS rv, SUM(pace_tot_cat_rev) AS cat_revenue, SUM(pace_tot_rev_prd) AS tot_rv FROM SlsMgr_Adjst1 WHERE rpt_yr=&curyr. GROUP BY rpt_yr, rpt_pd_mo, sm_eid, sm_name, orig_mgr_eid, sm_role_nm, sls_channel, sls_segment, sm_org_nm, sm_org_id, sm_mkt_nm, sm_mkt_id, sm_area_nm, sm_area_id, act_comp, segment, data_source );",Americas_Pace_ManAdjustments_Detail_AW.sas
" CREATE TABLE PropProd_vGoal AS  ( select *, 'SGR_Data' AS Data_Source FROM sgr_fact_smry_prp_perf WHERE rpt_yr IN ( %bquote( ')&year.%bquote( '),%bquote( ')&LYYEAR.%bquote( ')) ORDER BY rpt_yr, prp_org_nm ) ;",Americas_Prop_Prod_v_Goal.sas
CREATE TABLE PropProd_Final AS ( SELECT  *  FROM PropProd_vGoal UNION ALL SELECT  *  FROM prop_adj_sum);,Americas_Prop_Prod_v_Goal.sas
"ALTER TABLE PropProd_Final DROP COLUMN prop_nm ,  prp_org_id ,  prp_org_nm ,  prp_mkt_id ,  prp_mkt_nm ,  prp_area_id ,  prp_area_nm ;",Americas_Prop_Prod_v_Goal.sas
" CREATE TABLE Property_Information AS  ( select rpt_yr, rpt_pd_mo, prop_cd, prop_nm, prp_org_id, prp_org_nm, prp_mkt_id, prp_mkt_nm, prp_area_id, prp_area_nm FROM sgr_fact_smry_prp_perf ORDER BY PROP_CD, rpt_yr desc, rpt_pd_mo desc  ) ;",Americas_Prop_Prod_v_Goal.sas
"CREATE TABLE RECENT_PRP_REC AS ( SELECT   * ,FIRST(PROP_CD) OVER ( PARTITION BY PROP_CD GROUP BY PROP_CD , DESC , RPT_YR , DESC , RPT_PD_MO ORDER BY PROP_CD , DESC , RPT_YR , DESC , RPT_PD_MO )  FROM PROPERTY_INFORMATION );",Americas_Prop_Prod_v_Goal.sas
CREATE TABLE OTHER AS ( SELECT  *  FROM PROPERTY_INFORMATION );,Americas_Prop_Prod_v_Goal.sas
 CREATE TABLE PROPS_W_STARWOOD AS  ( SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER ORDER BY MARSHA  )  ;,Americas_Prop_Prod_v_Goal.sas
" CREATE TABLE PROPPROD_FINAL2 AS SELECT A.*, COALESCE( B.PROP_NM,C.HOTEL_NAME) AS PROP_NM, CASE WHEN B.PRP_ORG_ID IS NULL THEN 0 ELSE B.PRP_ORG_ID END AS PRP_ORG_ID, CASE WHEN B.PRP_ORG_NM IS NULL THEN '' ELSE B.PRP_ORG_NM END AS PRP_ORG_NM, CASE WHEN B.PRP_MKT_ID IS NULL THEN 0 ELSE B.PRP_MKT_ID END AS PRP_MKT_ID, CASE WHEN B.PRP_MKT_NM IS NULL THEN '' ELSE B.PRP_MKT_NM END AS PRP_MKT_NM, CASE WHEN B.PRP_AREA_ID IS NULL THEN 0 ELSE B.PRP_AREA_ID END AS PRP_AREA_ID, CASE WHEN B.PRP_AREA_NM IS NULL THEN '' ELSE B.PRP_AREA_NM END AS PRP_AREA_NM FROM PROPPROD_FINAL A LEFT JOIN RECENT_PRP_REC B ON A.PROP_CD=B.PROP_CD LEFT JOIN PROPS_W_STARWOOD C ON A.PROP_CD=C.MARSHA ;",Americas_Prop_Prod_v_Goal.sas
 CREATE TABLE PROP_PROD_FINAL AS ( SELECT  *  FROM PROPPROD_FINAL2 );,Americas_Prop_Prod_v_Goal.sas
"CREATE TABLE ""&DEST.\PropProd_vGoal.CSV"" AS ( SELECT * FROM PROP_PROD_FINAL) ;",Americas_Prop_Prod_v_Goal.sas
"CREATE TABLE ""&DEST2.\PropProd_vGoal.CSV"" AS ( SELECT * FROM PROP_PROD_FINAL) ;",Americas_Prop_Prod_v_Goal.sas
" CREATE TABLE Pace_Detail_M AS  ( select a.year AS report_year, a.month AS report_month, a.quotenumber AS quote_number, a.marshacode AS marsha_code, a.opportunityname AS quote_name, a.accountname AS CLARITAS_BUSINESS_NAME, a.propertystatus AS quote_status, a.claritasbusinessid AS CLARITAS_ID, a.revenueflag AS STATUS_CHANGE_TYPE, a.orig_source, a.arrivalyear AS stay_year, a.originatingmanagereid AS ORIGINATING_MANAGER_EID, a.statuschangedate, CASE WHEN a.businesstype='Group' THEN 'G' ELSE 'L' END AS business_type, a.asofdate, a.originaldefinitestatusshortdate, a.OpportunityCreatedShortDate AS QUOTE_CREATED_DATE, a.arrivaldate, a.DepartureDate, a.currencycode, SUM( a.paceroomnights) AS NET_ROOMNIGHTS, SUM( a.paceroomrev) AS NET_LOC_ROOM_REVENUE, SUM( a.paceroomrevusd) AS NET_USD_ROOM_REVENUE, SUM( a.pacecaterrev) AS NET_LOC_FUNCTION_REVENUE, SUM( a.pacecaterrevusd) AS NET_USD_FUNCTION_REVENUE, SUM( a.ttlrev) AS TOTAL_LOCAL_NET_REVENUE, SUM( a.paceroomrevusd+a.pacecaterrevusd) AS TOTAL_NET_USD_REVENUE FROM PdPaceOptyDetail_MISW a WHERE year>=&curyr.-3 andEXTRACT(YEAR FROM arrivaldate)>=&curyr.-3 AND claritasbusinessid IN ( %paceid) GROUP BY a.year, a.month, a.arrivalyear, a.quotenumber, a.marshacode, a.opportunityname, a.accountname, a.propertystatus, a.claritasbusinessid, a.originatingmanagereid, a.statuschangedate, a.asofdate, a.businesstype, a.OriginalDefiniteStatusShortDate, a.OpportunityCreatedShortDate, a.ArrivalDate, a.DepartureDate, a.revenueflag, a.currencycode, a.asofdate, a.orig_source HAVING ( SUM( a.paceroomnights) <> 0 OR SUM( a.paceroomrevusd+a.pacecaterrevusd) <> 0)  ) ;",Americas_QD.sas
"CREATE TABLE Pace_Detail2_M AS ( SELECT  *, QUOTE_CREATED_DATE1 AS QUOTE_CREATED_DATE, orig_def_date1 AS ORIGINAL_DEFINITE_DATE, asofdate1 AS asofdate, quote_status_date1 AS quote_status_date, arrival_date1 AS QUOTE_ARRIVAL_DATE, departure_date1 AS QUOTE_DEPARTURE_DATE, FORMAT(DATEPART( arrivaldate ), ""ddMMMyyyy"") AS arrival_date1 , FORMAT(DATEPART( asofdate ), ""ddMMMyyyy"") AS asofdate1 , FORMAT(DATEPART( statuschangedate ), ""ddMMMyyyy"") AS quote_status_date1 , FORMAT(DATEPART( originaldefinitestatusshortdate ), ""ddMMMyyyy"") AS orig_def_date1 , FORMAT(DATEPART( DepartureDate ), ""ddMMMyyyy"") AS departure_date1 , FORMAT(DATEPART( QUOTE_CREATED_DATE ), ""ddMMMyyyy"") AS QUOTE_CREATED_DATE1  FROM Pace_Detail_M );",Americas_QD.sas
"ALTER TABLE Pace_Detail2_M DROP COLUMN QUOTE_CREATED_DATE ,  DepartureDate ,  arrivaldate ,  statuschangedate ,  asofdate ,  originaldefinitestatusshortdate ;",Americas_QD.sas
CREATE TABLE total_pace_detail AS ( SELECT  *  FROM Pace_Detail2_M );,Americas_QD.sas
ALTER TABLE total_pace_detail DROP COLUMN isac_id ;,Americas_QD.sas
" CREATE TABLE total_pace_detail_manager AS select a.*,b.org_name AS area_sales_manager_org_name,b.role_title AS area_sales_manager_segment,b.executive_eid AS area_sales_manager_eid, b.executive_name AS area_sales_manager_name FROM total_pace_detail a LEFT JOIN ACCT_LIST_PACE b ON a.claritas_id=b.company_id;",Americas_QD.sas
" CREATE TABLE CAD_CONVERSION_TABLE AS  ( SELECT CURRENCY_EXCH_DT, EXTRACT( YEAR FROM CURRENCY_EXCH_DT) AS YEAR, EXTRACT( MONTH FROM CURRENCY_EXCH_DT) AS MONTH, CURRENCY_EXCH_RTE, FROM_CURRENCY_CD, TO_CURRENCY_CD FROM EDW_DIM_CURRENCY WHERE CURRENCY_EXCH_DT >= '01JAN2005' AND FROM_CURRENCY_CD = 'CAD' ORDER BY CURRENCY_EXCH_DT DESC, YEAR DESC, MONTH DESC  ) ;",Americas_QD.sas
" CREATE TABLE CAD_CONVERSION_LAST_REC AS ( SELECT   * , FIRST(MONTH) OVER ( PARTITION BY MONTH GROUP BY DESC , YEAR , DESC , MONTH ORDER BY DESC , YEAR , DESC , MONTH )  FROM CAD_CONVERSION_TABLE );",Americas_QD.sas
" CREATE TABLE curr_conv AS ( SELECT  *  , month( ORIGINAL_DEFINITE_DATE ) AS def_month , year( ORIGINAL_DEFINITE_DATE ) AS def_year , CASE WHEN  area_sales_manager_org_name IN ( 'Mid Atlantic','South Southeast','East Northeast','Florida', 'Northern Mid-America','West South Central', 'West Southwest','Western Mountain Pacific')  THEN NET_USD_ROOM_REVENUE WHEN  area_sales_manager_org_name IN ( 'Canada') AND currencycode='CAD'  THEN NET_LOC_ROOM_REVENUE WHEN  area_sales_manager_org_name IN ( 'Canada') AND currencycode not IN ( 'CAD')  THEN NET_USD_ROOM_REVENUE END AS NET_ROOM_REVENUE, CASE WHEN  area_sales_manager_org_name IN ( 'Mid Atlantic','South Southeast','East Northeast','Florida', 'Northern Mid-America','West South Central', 'West Southwest','Western Mountain Pacific')  THEN NET_USD_FUNCTION_REVENUE WHEN  area_sales_manager_org_name IN ( 'Canada') AND currencycode='CAD'  THEN NET_LOC_FUNCTION_REVENUE WHEN  area_sales_manager_org_name IN ( 'Canada') AND currencycode not IN ( 'CAD')  THEN NET_USD_FUNCTION_REVENUE END AS NET_FUNCTION_REVENUE, CASE WHEN  area_sales_manager_org_name IN ( 'Mid Atlantic','South Southeast','East Northeast','Florida', 'Northern Mid-America','West South Central', 'West Southwest','Western Mountain Pacific')  THEN TOTAL_NET_USD_REVENUE WHEN  area_sales_manager_org_name IN ( 'Canada') AND currencycode='CAD'  THEN TOTAL_LOCAL_NET_REVENUE WHEN  area_sales_manager_org_name IN ( 'Canada') AND currencycode not IN ( 'CAD')  THEN TOTAL_NET_USD_REVENUE END AS TOTAL_NET_REVENUE FROM total_pace_detail_manager );",Americas_QD.sas
" CREATE TABLE curr_conv_ca_rate AS select a.*, b.currency_exch_rte FROM curr_conv a LEFT JOIN CAD_CONVERSION_LAST_REC b ON a.def_month=b.month AND a.def_year=b.year;",Americas_QD.sas
"CREATE TABLE Currency_Conv_Final AS ( SELECT  * , CASE WHEN  area_sales_manager_org_name IN ( 'Canada') AND currencycode not IN ( 'CAD')  THEN NET_ROOM_REVENUE/currency_exch_rte END AS NET_ROOM_REVENUE, CASE WHEN  area_sales_manager_org_name IN ( 'Canada') AND currencycode not IN ( 'CAD')  THEN NET_FUNCTION_REVENUE/currency_exch_rte END AS NET_FUNCTION_REVENUE, CASE WHEN  area_sales_manager_org_name IN ( 'Canada') AND currencycode not IN ( 'CAD')  THEN TOTAL_NET_REVENUE/currency_exch_rte END AS TOTAL_NET_REVENUE FROM curr_conv_ca_rate );",Americas_QD.sas
"ALTER TABLE Currency_Conv_Final DROP COLUMN def_month ,  def_year ,  currencycode ,  currency_exch_rte ,  NET_LOC_ROOM_REVENUE ,  NET_USD_ROOM_REVENUE ,  NET_LOC_FUNCTION_REVENUE ,  NET_USD_FUNCTION_REVENUE ,  TOTAL_LOCAL_NET_REVENUE ,  TOTAL_NET_USD_REVENUE ;",Americas_QD.sas
" CREATE TABLE PLU AS  ( SELECT SFO_ORG, MARSHA, Hotel_name FROM AW_TGT_BUS_DBO.PROPERTY_MASTER  )  ;",Americas_QD.sas
" CREATE TABLE PART AS SELECT A.*, CASE WHEN B.SFO_ORG = 'SSE' THEN 'South Southeast' WHEN B.SFO_ORG = 'MA' THEN 'Mid Atlantic' WHEN B.SFO_ORG = 'ENE' THEN 'East Northeast' WHEN B.SFO_ORG = 'FL' THEN 'Florida' WHEN B.SFO_ORG = 'NMA' THEN 'Northern Mid-America' WHEN B.SFO_ORG = 'WSC' THEN 'West South Central' WHEN B.SFO_ORG = 'WSW' THEN 'West Southwest' WHEN B.SFO_ORG = 'WMP' THEN 'Western Mountain Pacific' WHEN B.SFO_ORG = 'CAN' THEN 'Canada' ELSE '' END AS SFO_ORG, B.Hotel_name AS property_name FROM Currency_Conv_Final A LEFT JOIN PLU B ON A.MARSHA_CODE=B.MARSHA;",Americas_QD.sas
" CREATE TABLE QD_Deployed AS SELECT *, CASE WHEN area_sales_manager_org_name=SFO_ORG THEN 'Inbound' ELSE 'Outbound' END AS Participation, CASE WHEN area_sales_manager_segment = 'Area Account Executive, Affinity' THEN 'Affinity' WHEN area_sales_manager_segment = 'Area Account Executive, Government' THEN 'Government' WHEN area_sales_manager_segment = 'Market Account Executive, Mid-Market' THEN 'Mid-Market' WHEN area_sales_manager_segment = 'Market Account Executive, Prospect' THEN 'Prospect' WHEN area_sales_manager_segment = 'Market Account Executive, EST' THEN 'EST' WHEN area_sales_manager_segment = 'Market Account Executive, Association' THEN 'Association' WHEN area_sales_manager_segment = 'Market Account Executive, Whsale/FIT/Tour & Travel' THEN 'Whsale/FIT/Tour & Travel' ELSE '' END AS area_sales_manager_segment_2 FROM PART;",Americas_QD.sas
"CREATE TABLE ACDASHQD.QD_Deployed AS ( SELECT  *, area_sales_manager_segment_2 AS area_sales_manager_segment FROM QD_Deployed );",Americas_QD.sas
"ALTER TABLE ACDASHQD.QD_Deployed DROP COLUMN area_sales_manager_segment ,  SFO_ORG ;",Americas_QD.sas
" CREATE TABLE whlsale_account_list AS ( SELECT executive_eid, org_name, role_title, company_name FROM Curr_acct_list  WHERE ROLE_TITLE IN ( 'Market Account Executive, Whsale/FIT/Tour & Travel'));",Americas_QD_Whlsale.sas
CREATE TABLE whlsale_acct_list AS (SELECT DISTINCT * FROM whlsale_account_list ORDER BY executive_eid);,Americas_QD_Whlsale.sas
" CREATE TABLE Pace_Detail_M_W AS  ( select a.year AS report_year, a.month AS report_month, a.quotenumber AS quote_number, a.marshacode AS marsha_code, a.opportunityname AS quote_name, a.accountname AS CLARITAS_BUSINESS_NAME, a.propertystatus AS quote_status, a.claritasbusinessid AS CLARITAS_ID, a.revenueflag AS STATUS_CHANGE_TYPE, a.orig_source, a.arrivalyear AS stay_year, a.originatingmanagereid AS ORIGINATING_MANAGER_EID, a.statuschangedate, CASE WHEN a.businesstype='Group' THEN 'G' ELSE 'L' END AS business_type, a.asofdate, a.originaldefinitestatusshortdate, a.OpportunityCreatedShortDate AS QUOTE_CREATED_DATE, a.arrivaldate, a.DepartureDate, a.currencycode, SUM( a.paceroomnights) AS NET_ROOMNIGHTS, SUM( a.paceroomrev) AS NET_LOC_ROOM_REVENUE, SUM( a.paceroomrevusd) AS NET_USD_ROOM_REVENUE, SUM( a.pacecaterrev) AS NET_LOC_FUNCTION_REVENUE, SUM( a.pacecaterrevusd) AS NET_USD_FUNCTION_REVENUE, SUM( a.ttlrev) AS TOTAL_LOCAL_NET_REVENUE, SUM( a.paceroomrevusd+a.pacecaterrevusd) AS TOTAL_NET_USD_REVENUE FROM PdPaceOptyDetail_MISW a WHERE year>=&curyr.-3 andEXTRACT(YEAR FROM arrivaldate)>=&curyr.-3 AND originatingmanagereid IN ( %miwhlsid) GROUP BY a.year, a.month, a.arrivalyear, a.quotenumber, a.marshacode, a.opportunityname, a.accountname, a.propertystatus, a.claritasbusinessid, a.originatingmanagereid, a.statuschangedate, a.asofdate, a.businesstype, a.OriginalDefiniteStatusShortDate, a.OpportunityCreatedShortDate, a.ArrivalDate, a.DepartureDate, a.revenueflag, a.currencycode, a.asofdate, a.orig_source HAVING ( SUM( a.paceroomnights) <> 0 OR SUM( a.paceroomrevusd+a.pacecaterrevusd) <> 0)  ) ;",Americas_QD_Whlsale.sas
"CREATE TABLE Pace_Detail2_M_W AS ( SELECT  *, QUOTE_CREATED_DATE1 AS QUOTE_CREATED_DATE, orig_def_date1 AS ORIGINAL_DEFINITE_DATE, asofdate1 AS asofdate, quote_status_date1 AS quote_status_date, arrival_date1 AS QUOTE_ARRIVAL_DATE, departure_date1 AS QUOTE_DEPARTURE_DATE, FORMAT(DATEPART( QUOTE_CREATED_DATE ), ""ddMMMyyyy"") AS QUOTE_CREATED_DATE1 , FORMAT(DATEPART( arrivaldate ), ""ddMMMyyyy"") AS arrival_date1 , FORMAT(DATEPART( asofdate ), ""ddMMMyyyy"") AS asofdate1 , FORMAT(DATEPART( statuschangedate ), ""ddMMMyyyy"") AS quote_status_date1 , FORMAT(DATEPART( originaldefinitestatusshortdate ), ""ddMMMyyyy"") AS orig_def_date1 , FORMAT(DATEPART( DepartureDate ), ""ddMMMyyyy"") AS departure_date1  FROM Pace_Detail_M_W );",Americas_QD_Whlsale.sas
"ALTER TABLE Pace_Detail2_M_W DROP COLUMN QUOTE_CREATED_DATE ,  DepartureDate ,  arrivaldate ,  statuschangedate ,  asofdate ,  originaldefinitestatusshortdate ;",Americas_QD_Whlsale.sas
 CREATE TABLE total_pace_detail_wh AS ( SELECT  *  FROM Pace_Detail2_M_W );,Americas_QD_Whlsale.sas
" CREATE TABLE total_pace_detail_manager_wh AS select a.*,b.org_name AS area_sales_manager_org_name,b.role_title AS area_sales_manager_segment,b.executive_eid AS area_sales_manager_eid, b.executive_name AS area_sales_manager_name FROM total_pace_detail_wh a LEFT JOIN ACCT_LIST_PACE b ON a.claritas_id=b.company_id;",Americas_QD_Whlsale.sas
 CREATE TABLE total_pace_detail_manager_wh2 AS SELECT * FROM total_pace_detail_manager_wh WHERE area_sales_manager_name IS NULL;,Americas_QD_Whlsale.sas
" CREATE TABLE MI_Whls AS ( SELECT EID FROM ACS_ROSTER1  whereORGANIZATION = 'Canada' AND ROLE='Market Account Executive, Whsale/FIT/Tour & Travel');",Americas_QD_Whlsale.sas
 CREATE TABLE CA_whls AS ( SELECT  *  FROM MI_whls );,Americas_QD_Whlsale.sas
" CREATE TABLE CAD_CONVERSION_TABLE AS  ( SELECT CURRENCY_EXCH_DT, EXTRACT( YEAR FROM CURRENCY_EXCH_DT) AS YEAR, EXTRACT( MONTH FROM CURRENCY_EXCH_DT) AS MONTH, CURRENCY_EXCH_RTE, FROM_CURRENCY_CD, TO_CURRENCY_CD FROM EDW_DIM_CURRENCY WHERE CURRENCY_EXCH_DT >= '01JAN2005' AND FROM_CURRENCY_CD = 'CAD' ORDER BY CURRENCY_EXCH_DT DESC, YEAR DESC, MONTH DESC  ) ;",Americas_QD_Whlsale.sas
" CREATE TABLE CAD_CONVERSION_LAST_REC AS ( SELECT   * , FIRST(MONTH) OVER ( PARTITION BY MONTH GROUP BY DESC , YEAR , DESC , MONTH ORDER BY DESC , YEAR , DESC , MONTH )  FROM CAD_CONVERSION_TABLE );",Americas_QD_Whlsale.sas
" CREATE TABLE curr_conv_WH AS ( SELECT  *  , month( ORIGINAL_DEFINITE_DATE ) AS def_month , year( ORIGINAL_DEFINITE_DATE ) AS def_year , CASE WHEN  UPPER( ORIGINATING_MANAGER_EID) not IN ( %CAWHLSID)  THEN NET_USD_ROOM_REVENUE WHEN  UPPER( ORIGINATING_MANAGER_EID) IN ( %CAWHLSID) AND currencycode='CAD'  THEN NET_LOC_ROOM_REVENUE WHEN  UPPER( ORIGINATING_MANAGER_EID) IN ( %CAWHLSID) AND currencycode not IN ( 'CAD')  THEN NET_USD_ROOM_REVENUE END AS NET_ROOM_REVENUE, CASE WHEN  UPPER( ORIGINATING_MANAGER_EID) not IN ( %CAWHLSID)  THEN NET_USD_FUNCTION_REVENUE WHEN  UPPER( ORIGINATING_MANAGER_EID) IN ( %CAWHLSID) AND currencycode='CAD'  THEN NET_LOC_FUNCTION_REVENUE WHEN  UPPER( ORIGINATING_MANAGER_EID) IN ( %CAWHLSID) AND currencycode not IN ( 'CAD')  THEN NET_USD_FUNCTION_REVENUE END AS NET_FUNCTION_REVENUE, CASE WHEN  UPPER( ORIGINATING_MANAGER_EID) not IN ( %CAWHLSID)  THEN TOTAL_NET_USD_REVENUE WHEN  UPPER( ORIGINATING_MANAGER_EID) IN ( %CAWHLSID) AND currencycode='CAD'  THEN TOTAL_LOCAL_NET_REVENUE WHEN  UPPER( ORIGINATING_MANAGER_EID) IN ( %CAWHLSID) AND currencycode not IN ( 'CAD')  THEN TOTAL_NET_USD_REVENUE END AS TOTAL_NET_REVENUE FROM total_pace_detail_manager_wh2 );",Americas_QD_Whlsale.sas
" CREATE TABLE curr_conv_ca_rate_wh AS select a.*, b.currency_exch_rte FROM curr_conv_WH a LEFT JOIN CAD_CONVERSION_LAST_REC b ON a.def_month=b.month AND a.def_year=b.year;",Americas_QD_Whlsale.sas
"CREATE TABLE Currency_Conv_Final_WH AS ( SELECT  * , CASE WHEN  UPPER( ORIGINATING_MANAGER_EID) IN ( %CAWHLSID) AND currencycode not IN ( 'CAD')  THEN NET_ROOM_REVENUE/currency_exch_rte END AS NET_ROOM_REVENUE, CASE WHEN  UPPER( ORIGINATING_MANAGER_EID) IN ( %CAWHLSID) AND currencycode not IN ( 'CAD')  THEN NET_FUNCTION_REVENUE/currency_exch_rte END AS NET_FUNCTION_REVENUE, CASE WHEN  UPPER( ORIGINATING_MANAGER_EID) IN ( %CAWHLSID) AND currencycode not IN ( 'CAD')  THEN TOTAL_NET_REVENUE/currency_exch_rte END AS TOTAL_NET_REVENUE FROM curr_conv_ca_rate_wh );",Americas_QD_Whlsale.sas
"ALTER TABLE Currency_Conv_Final_WH DROP COLUMN def_month ,  def_year ,  currencycode ,  currency_exch_rte ,  NET_LOC_ROOM_REVENUE ,  NET_USD_ROOM_REVENUE ,  NET_LOC_FUNCTION_REVENUE ,  NET_USD_FUNCTION_REVENUE ,  TOTAL_LOCAL_NET_REVENUE ,  TOTAL_NET_USD_REVENUE ;",Americas_QD_Whlsale.sas
" CREATE TABLE PLU AS  ( SELECT SFO_ORG, MARSHA, Hotel_name FROM AW_TGT_BUS_DBO.PROPERTY_MASTER  )  ;",Americas_QD_Whlsale.sas
" CREATE TABLE PART_WH AS SELECT A.*, C.ORG_NAME AS area_sales_manager_org_name_2, CASE WHEN B.SFO_ORG = 'SSE' THEN 'South Southeast' WHEN B.SFO_ORG = 'MA' THEN 'Mid Atlantic' WHEN B.SFO_ORG = 'ENE' THEN 'East Northeast' WHEN B.SFO_ORG = 'FL' THEN 'Florida' WHEN B.SFO_ORG = 'NMA' THEN 'Northern Mid-America' WHEN B.SFO_ORG = 'WSC' THEN 'West South Central' WHEN B.SFO_ORG = 'WSW' THEN 'West Southwest' WHEN B.SFO_ORG = 'WMP' THEN 'Western Mountain Pacific' WHEN B.SFO_ORG = 'CAN' THEN 'Canada' ELSE '' END AS SFO_ORG, B.Hotel_name AS property_name FROM Currency_Conv_Final_WH A LEFT JOIN PLU B ON A.MARSHA_CODE=B.MARSHA LEFT JOIN whlsale_account_list C ON UPPER( a.ORIGINATING_MANAGER_EID)=c.Executive_EID;",Americas_QD_Whlsale.sas
" CREATE TABLE QD_Deployed_Wholesale AS SELECT *, CASE WHEN area_sales_manager_org_name=SFO_ORG THEN 'Inbound' ELSE 'Outbound' END AS Participation, 'Whsale/FIT/Tour & Travel' AS area_sales_manager_segment_2 FROM PART_WH;",Americas_QD_Whlsale.sas
"CREATE TABLE ACDASHQD.QD_Whls AS ( SELECT  *, area_sales_manager_segment_2 AS area_sales_manager_segment FROM QD_Deployed_Wholesale );",Americas_QD_Whlsale.sas
"ALTER TABLE ACDASHQD.QD_Whls DROP COLUMN area_sales_manager_segment ,  SFO_ORG ;",Americas_QD_Whlsale.sas
" CREATE TABLE CLEANDATA_&CURYR AS  ( select ADJ_MONTH_ID AS REPORT_MONTH, ADJ_YEAR_ID AS REPORT_YEAR, ORG_NM AS ORGANIZATION, SLS_MGR_LOGIN AS EID, SLS_MGR_ROLE AS ROLE, UPPER( ACCOUNT_NM) AS ACCOUNT_NAME, ACCT_COMP_TYPE AS ACCOUNT_COMPONENT, MARSHA_CD AS MARSHA, QUOTE_NUMBER AS QUOTE_NUM, NET_RM_NGTS AS RN, NET_RM_REV AS RR, NET_FUNC_REV AS CR, TOTAL_NET_REV AS TR FROM AW_SLS_PRD_AM.MANUAL_ADJUSTMENTS WHERE ADJ_YEAR_ID IN ( &LSTYR, &CURYR)  )  ;",Americas_Quote_Detail_with_Manual_Adds_AW.sas
" CREATE TABLE SGR_Quotes AS  ( select a.report_pd_mo AS report_month, a.report_year, btrim( a.sm_curr_org_nm) AS organization, a.sm_eid AS EID, CASE WHEN a.sm_role=3 THEN 'Market Account Executive, EST' when a.sm_role=9 THEN 'Area Account Executive, Affinity' when a.sm_role=10 THEN 'Market Account Executive, Mid-Market' when a.sm_role=4 THEN 'Market Account Executive, Association' when a.sm_role=11 THEN 'Area Account Executive, Government' when a.sm_role=15 THEN 'Market Account Executive, Prospect' when a.sm_role=13 THEN 'Market Account Executive, Whsale/FIT/Tour & Travel' when a.sm_role=21 THEN 'Sales Executive' END AS role, upper( a.acct_name) AS Account_Name, a.acct_comp_type AS Account_Component, a.marsha_cd AS MARSHA, a.quote_num, a.net_rm_nights AS RN, a.net_rm_rev AS RR, a.net_cat_rev CR, a.tot_net_rev AS TR FROM sgr_fact_smry_quote_flt a WHERE a.report_year IN ( &lstyr.,&curyr. )  ) ;",Americas_Quote_Detail_with_Manual_Adds_AW.sas
" CREATE TABLE CLEANDATA AS ( SELECT  * , CASE WHEN  ROLE='Area Account Executive, Mid-Market'  THEN 'Market Account Executive, Mid-Market' END AS ROLE FROM CLEANDATA_&CURYR UNION ALL SELECT  * , CASE WHEN  ROLE='Area Account Executive, Mid-Market'  THEN 'Market Account Executive, Mid-Market' END AS ROLE FROM SGR_QUOTES);",Americas_Quote_Detail_with_Manual_Adds_AW.sas
" CREATE TABLE Roster1 AS  ( select upper( team_member_eid) AS sm_eid, full_name AS Associate_Name, last_UPDATEd_date FROM VISIBILITY_HIERARCHY_VW WHERE status not IN ( 'Future') ORDER BY sm_eid, last_UPDATEd_date desc  ) ;",Americas_Quote_Detail_with_Manual_Adds_AW.sas
CREATE TABLE EID_Names AS (SELECT DISTINCT * FROM roster1 ORDER BY sm_eid);,Americas_Quote_Detail_with_Manual_Adds_AW.sas
" CREATE TABLE clean_data AS select a.*, CASE WHEN b.Associate_Name is null THEN 'House Account' ELSE b.Associate_Name END AS Associate_Name FROM CleanData a LEFT JOIN EID_Names b ON a.eid=b.sm_eid ;",Americas_Quote_Detail_with_Manual_Adds_AW.sas
SELECT * FROM clean_data ORDER BY MARSHA;,Americas_Quote_Detail_with_Manual_Adds_AW.sas
" CREATE TABLE SGR_PRP_NAMES AS SELECT DISTINCT PROP_CD AS MARSHA, PROP_NM, CASE WHEN PRP_ORG_NM IS NULL THEN 'Not Participating' ELSE PRP_ORG_NM END AS PROPERTY_ORGANIZATION FROM NZPROD.sgr_fact_smry_prp_perf WHERE RPT_YR=&CURYR. AND PROP_NM IS NOT NULL ORDER BY PROP_CD;",Americas_Quote_Detail_with_Manual_Adds_AW.sas
" CREATE TABLE MERGE_PROP_DATASETS AS  ( select MARSHA AS MARSHA, HOTEL_NAME FROM AW_TGT_BUS_DBO.PROPERTY_MASTER_HIST WHERE ASOF_YRMO = ( SELECT MAX( ASOF_YRMO) FROM AW_TGT_BUS_DBO.PROPERTY_MASTER_HIST) ORDER BY MARSHA  )  ;",Americas_Quote_Detail_with_Manual_Adds_AW.sas
CREATE TABLE ALL_PROPERTIES AS (SELECT DISTINCT * FROM MERGE_PROP_DATASETS ORDER BY MARSHA);,Americas_Quote_Detail_with_Manual_Adds_AW.sas
 CREATE TABLE QUOTEDETAIL AS ( SELECT  *  FROM QUOTE_DETAILS UNION ALL SELECT  *  FROM BAD_MARSHA);,Americas_Quote_Detail_with_Manual_Adds_AW.sas
"CREATE TABLE ""&DEST.\&curyr._QuoteDetail_for_Tableau.csv"" AS ( SELECT * FROM QuoteDetail) ;",Americas_Quote_Detail_with_Manual_Adds_AW.sas
"CREATE TABLE ""&DEST2.\&curyr._QuoteDetail_for_Tableau.csv"" AS ( SELECT * FROM QuoteDetail) ;",Americas_Quote_Detail_with_Manual_Adds_AW.sas
" CREATE TABLE DCHOTELS1 AS ( SELECT MARKET_NAME, AREA_NAME, MARSHA_CODE AS MARSHA, ORG_NAME AS ORGANIZATION_NAME FROM PRP_SNAP.AREASLS_PROP_&YEAR._&PERIOD.  WHERE UPPER( ORG_NAME)<>'CANADA');",Americas_SFO_Wholesale_Data_(FINAL).sas
CREATE TABLE DCHOTELS AS (SELECT DISTINCT * FROM DCHOTELS1 ORDER BY MARSHA);,Americas_SFO_Wholesale_Data_(FINAL).sas
" CREATE TABLE PROPS AS  ( select MARSHA, SFO_ORG, MISW_FLAG FROM AW_TGT_BUS_DBO.PROPERTY_MASTER_HIST WHERE ASOF_YRMO = &CURYRPD. AND SFO_ORG NOT IN ( '','CAL','CAN') ORDER BY MARSHA  )  ;",Americas_SFO_Wholesale_Data_(FINAL).sas
 CREATE TABLE PROPMERGE AS ( SELECT  *  FROM DCHOTELS A LEFT JOIN PROPS B ON  A.MARSHA =  B.MARSHA);,Americas_SFO_Wholesale_Data_(FINAL).sas
" CREATE TABLE WHOLESALE_MRDW_TOTAL1 AS SELECT PROPERTY_CD AS MARSHA, ( 100*YEAR_CAL_ID+MONTH_CAL_ID) AS YEARMO, SUM( ROOMNIGHTS_QTY) AS RN, SUM( NET_REV_USD_SUB_AMT) AS RV FROM NZTFP.MRDW_FACT_AGG_DR_REV_ANALYSIS WHERE YEAR_CAL_ID =&CURYR AND MONTH_CAL_ID BETWEEN 1 AND &SHORTPD AND PROPERTY_CD IN ( %PROPMAR) AND UPPER( MARKET_SEG_NM)='WHOLESALER' AND MARKET_PREFIX_CD='26' AND PROPERTY_CD NOT IN ( 'MCODW','MCOSI') GROUP BY MARSHA, YEARMO HAVING ( RN<>0 OR RV<>0) ORDER BY MARSHA, YEARMO;",Americas_SFO_Wholesale_Data_(FINAL).sas
" CREATE TABLE FINAL_DYNAMIC1 AS  ( SELECT PROP_CD AS MARSHA, RTRIM( TO_CHAR( RPT_YR,'9999')) || CASE WHEN RPT_PD_MO BETWEEN 1 AND 9 THEN '0'||RTRIM( TO_CHAR( RPT_PD_MO,'99')) ELSE RTRIM( TO_CHAR( RPT_PD_MO,'99')) END AS YEARMO, SUM( AP_TOT_RM_NTS) AS DYNAMIC_RN, SUM( AP_TOT_RM_REV) AS DYNAMIC_RV FROM SGR_FACT_SMRY_MGR_PRP_ACCT_PROD WHERE RPT_YR=&CURYR AND RPT_PD_MO BETWEEN 1 AND &SHORTPD AND ACCOUNT_FLG = 'W' AND LENGTH( ACCOUNT_ID)>5 AND PROP_CD IN ( %PROPMAR) AND PROP_CD NOT IN ( 'MCODW','MCOSI') GROUP BY RPT_YR, RPT_PD_MO, PROP_CD  ) ;",Americas_SFO_Wholesale_Data_(FINAL).sas
"CREATE TABLE FINAL_DYNAMIC AS ( SELECT  *, YEARMO AS YEARMO1, FORMAT(YEARMO1*1, INT)  AS YEARMO  FROM FINAL_DYNAMIC1 );",Americas_SFO_Wholesale_Data_(FINAL).sas
ALTER TABLE FINAL_DYNAMIC DROP COLUMN YEARMO1 ;,Americas_SFO_Wholesale_Data_(FINAL).sas
" CREATE TABLE WHOLESALE_MRDW_TOTAL_ANALYSIS AS SELECT COALESCE( A.MARSHA, B.MARSHA) AS MARSHA, COALESCE( A.YEARMO, B.YEARMO) AS YEARMO, COALESCE( A.RN,0) AS RN, COALESCE( A.RV,0) AS RV, COALESCE( B.DYNAMIC_RN,0) AS DYNAMIC_RN, COALESCE( B.DYNAMIC_RV,0) AS DYNAMIC_RV FROM WHOLESALE_MRDW_TOTAL1 A FULL JOIN FINAL_DYNAMIC B ON A.MARSHA=B.MARSHA AND A.YEARMO=B.YEARMO ;",Americas_SFO_Wholesale_Data_(FINAL).sas
" CREATE TABLE COMBINE_WHOLESALE AS ( SELECT  *  FROM WHOLESALE_MRDW_TOTAL1 UNION ALL SELECT  *, DYNAMIC_RN AS RN, DYNAMIC_RV AS RV FROM FINAL_DYNAMIC);",Americas_SFO_Wholesale_Data_(FINAL).sas
"CREATE TABLE WHOLESALE_MRDW_TOTAL AS (SELECT MARSHA, YEARMO, SUM(RN) AS RN, SUM(RV) AS RV FROM COMBINE_WHOLESALE GROUP BY MARSHA, YEARMO );",Americas_SFO_Wholesale_Data_(FINAL).sas
"CREATE TABLE ""\\HDQMDM1FPCL3V1\LODG-MKTFNAC\SHARED SERVICE\SOURCE DATA\WHOLESALE - MRDW & SFA\&CURYR.\YTD_SFO_MRDW_WHOLESALE_DATA_AS_OF_&CURYRPD..XLS"" AS ( SELECT *, MARSHA,YEARMO,RN,RV  FROM WHOLESALE_MRDW_TOTAL) ;",Americas_SFO_Wholesale_Data_(FINAL).sas
" CREATE TABLE CONTRACT_MRDW_TOTAL1 AS SELECT PROPERTY_CD AS MARSHA, ( 100*YEAR_CAL_ID+MONTH_CAL_ID) AS YEARMO, SUM( ROOMNIGHTS_QTY) AS RN, SUM( NET_REV_USD_SUB_AMT) AS RV FROM NZTFP.MRDW_FACT_AGG_DR_REV_ANALYSIS WHERE YEAR_CAL_ID IN ( &CURYR. ) AND MONTH_CAL_ID BETWEEN 1 AND &SHORTPD. AND PROPERTY_CD IN ( %PROPMAR) AND UPPER( MARKET_SEG_NM)='CONTRACT' AND MARKET_PREFIX_CD='CN' GROUP BY MARSHA, YEARMO HAVING ( RN<>0 OR RV<>0) ORDER BY MARSHA, YEARMO;",Americas_SFO_Wholesale_Data_(FINAL).sas
 CREATE TABLE COMBINE_AIRLINE AS ( SELECT  *  FROM CONTRACT_MRDW_TOTAL1 );,Americas_SFO_Wholesale_Data_(FINAL).sas
"CREATE TABLE AIRLINE_MRDW_TOTAL AS (SELECT MARSHA, YEARMO, SUM(RN) AS RN, SUM(RV) AS RV FROM COMBINE_AIRLINE GROUP BY MARSHA, YEARMO );",Americas_SFO_Wholesale_Data_(FINAL).sas
"CREATE TABLE CONTRACT_MRDW_TOTAL AS (SELECT * FROM AIRLINE_MRDW_TOTAL ORDER BY MARSHA ,YEARMO);",Americas_SFO_Wholesale_Data_(FINAL).sas
"CREATE TABLE ""\\HDQMDM1FPCL3V1\LODG-MKTFNAC\SHARED SERVICE\SOURCE DATA\WHOLESALE - MRDW & SFA\&CURYR.\YTD_SFO_MRDW_WHOLESALE_DATA_AS_OF_&CURYRPD..XLS"" AS ( SELECT *, MARSHA,YEARMO,RN,RV  FROM CONTRACT_MRDW_TOTAL) ;",Americas_SFO_Wholesale_Data_(FINAL).sas
" CREATE TABLE AW_Manual_Adjustments AS  ( select ADJ_YEAR_ID AS YEAR, ADJ_MONTH_ID AS month, SLS_MGR_NM AS EXECUTIVE_NAME, MARSHA_CD AS PROPERTY_CODE, SUM( NET_RM_NGTS) AS RN, SUM( NET_RM_REV) AS RV FROM AW_SLS_PRD_AM.MANUAL_ADJUSTMENTS WHERE ADJ_YEAR_ID=&CURYR. AND ADJ_MONTH_ID BETWEEN 1 AND &SHORTPD AND ACCT_COMP_TYPE IN ( 'Non Assigned Account IN Organization') AND SLS_MGR_ROLE IN ( 'Market Account Executive, Whsale/FIT/Tour & Travel') GROUP BY ADJ_YEAR_ID, ADJ_MONTH_ID, SLS_MGR_NM, MARSHA_CD  )  ;",Americas_SFO_Wholesale_Data_(FINAL).sas
" CREATE TABLE WHOLESALE_SFA AS  ( SELECT RPT_YR AS YEAR, RPT_PD_MO AS MONTH, SM_NAME AS EXECUTIVE_NAME, PROP_CD AS PROPERTY_CODE, SUM( PACE_RM_NTS) AS RN, SUM( PACE_RM_REV) AS RV FROM SGR_FACT_SMRY_MGR_PRP_PROD WHERE RPT_YR=&CURYR AND RPT_PD_MO BETWEEN 1 AND &SHORTPD AND UPPER( SM_ROLE_NM)='MARKET ACCOUNT EXECUTIVE, WHSALE/FIT/TOUR & TRAVEL' AND UPPER( ACT_COMP) NOT IN ( 'NON ASSIGNED ACCOUNT OUT OF ORGANIZATION', 'ASSIGNED ACCOUNT IN ORGANIZATION', 'ASSIGNED ACCOUNT OUT OF ORGANIZATION') GROUP BY RPT_YR, RPT_PD_MO, SM_NAME, PROP_CD  ) ;",Americas_SFO_Wholesale_Data_(FINAL).sas
 CREATE TABLE WHOLESALE_SFA AS ( SELECT  *  FROM WHOLESALE_SFA UNION ALL SELECT  *  FROM AW_Manual_Adjustments WHERE ( RN+RV)<>0);,Americas_SFO_Wholesale_Data_(FINAL).sas
"CREATE TABLE ""\\HDQMDM1FPCL3V1\LODG-MKTFNAC\SHARED SERVICE\SOURCE DATA\WHOLESALE - MRDW & SFA\&CURYR.\YTD_SFO_WHOLESALE_SFA_DATA_AS_OF_&CURYRPD..XLS"" AS ( SELECT * FROM WHOLESALE_SFA) ;",Americas_SFO_Wholesale_Data_(FINAL).sas
" CREATE TABLE props AS  ( SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER WHERE BRND IN ( 'AL','AR','CY','EL','FI','FP','RI','SH','TS') AND UCASE( REGION_NAME) IN ( 'AMERICAS EAST','AMERICAS WEST') AND MF='M'  )  ;",Americas_Special_Corporate.sas
" CREATE TABLE mrdwprod AS   ( select pr.property_cd AS Marsha, sd.year_cal AS year, sd.month_cal_id AS month, sd.qtr_cal_id AS qtr, CASE WHEN sd.weekend_ind = 1 THEN 'Weekend' ELSE 'Weekday' END AS Weekday_Weekend, sd.date_dt, sd.ab_day_of_week_cd, sd.week_acctg_id, CASE WHEN mr.market_type_cd IN ( 'G') THEN 'Group' when mr.market_type_cd IN ( 'C') THEN 'Contract' ELSE 'Transient' END AS Rate_Type, SUM( dr.rooms_qty) AS rn, SUM( CASE WHEN cc.exch_per_us_dlr_rte IN ( 0) THEN ROUND( dr.proj_net_local_rev_amt,2) ELSE ROUND( ( dr.proj_net_local_rev_amt/cc.exch_per_us_dlr_rte),0) END) AS rv FROM mrdw_fact_daily_revenue dr INNER JOIN mrdw_dim_currency_conversion cc ON ( dr.date_currency_stay_key = cc.date_currency_key) INNER JOIN mrdw_dim_date sd ON ( cc.date_key = sd.date_key) INNER JOIN mrdw_dim_market_rates mr ON ( dr.market_rate_key = mr.market_rate_key) INNER JOIN mrdw_dim_property pr ON ( mr.property_id = pr.property_id) INNER JOIN mrdw_dim_status_accom AS a19 ON ( a19.status_accom_key = DR.status_accom_key) WHERE ( 100*sd.year_cal+sd.month_cal_id >= 201510 AND 100*sd.year_cal+sd.month_cal_id <= &curyrpd. ) AND dr.proj_net_local_rev_amt/dr.rooms_qty NOT IN ( 999,999.99,9999,9999.99,99999,99999.99,999999,999999.99) AND a19.action_cd <> 'NR' AND pr.property_cd IN ( %prp_list) AND SUBSTRING( mr.market_cd,1,2) IN ( '15','17','18') GROUP BY Marsha, year, month, qtr, Weekday_Weekend, Rate_Type, sd.date_dt, ab_day_of_week_cd, sd.week_acctg_id ORDER BY Marsha, year, month, qtr  ) ;",Americas_Special_Corporate.sas
" CREATE TABLE mrdwprod2a AS select coalesce( a.marsha,b.marsha) AS marsha, coalesce( a.date_dt,b.date_dt+364) AS stay_date_ty format=date9., coalesce( b.date_dt,a.date_dt-364) AS stay_date_ly format=date9., a.month, a.qtr, a.year, coalesce( a.weekday_weekend,b.weekday_weekend) AS weekday_weekend, coalesce( a.ab_day_of_week_cd,b.ab_day_of_week_cd) AS dayofweek, coalesce( a.rate_type,b.rate_type) AS rate_type, coalesce( a.rn,0) AS rn, coalesce( a.rv,0) AS rv, coalesce( b.rn,0) AS rn_ly, coalesce( b.rv,0) AS rv_ly FROM mrdwprod AS a full JOIN mrdwprod AS b ON a.marsha=b.marsha AND a.date_dt=b.date_dt+364 AND a.ab_day_of_week_cd=b.ab_day_of_week_cd AND a.rate_type=b.rate_type WHERE coalesce( a.date_dt,b.date_dt+364) >= '01OCT2016'd AND coalesce( a.date_dt,b.date_dt+364) <= &LPDED.;",Americas_Special_Corporate.sas
" CREATE TABLE mrdwprod2b AS ( SELECT  *  , EXTRACT(WEEK FROM stay_date_ty ) AS week , EXTRACT(WEEK FROM stay_date_ly ) AS week_ly , EXTRACT(MONTH FROM stay_date_ly ) AS month_ly , EXTRACT(QUARTER FROM stay_date_ly ) AS qtr_ly , EXTRACT(YEAR FROM stay_date_ly ) AS year_ly , CASE WHEN  month=''  THEN month( stay_date_ty ) END AS month, CASE WHEN  qtr=''  THEN qtr( stay_date_ty ) END AS qtr, CASE WHEN  year=''  THEN year( stay_date_ty ) END AS year FROM mrdwprod2a );",Americas_Special_Corporate.sas
" CREATE TABLE mrdwprod3 AS select a.*, b.rd, b.region, b.region_name, b.owner, b.hotel_name, b.sfo_org, b.sfo_market, b.acomp, b.state, b.brnd, b.market_name FROM mrdwprod2b a LEFT JOIN props b ON ( a.marsha=b.marsha ) ;",Americas_Special_Corporate.sas
"CREATE TABLE special_corp AS ( SELECT  *  , FORMAT(Region, VARCHAR(4)) AS Region , FORMAT(AST, VARCHAR(30)) AS AST , FORMAT(MARSHA, VARCHAR(5)) AS MARSHA , FORMAT(WEEKDAY_WEEKEND, VARCHAR(7)) AS WEEKDAY_WEEKEND , FORMAT(DAYOFWEEK, VARCHAR(3)) AS DAYOFWEEK , FORMAT(RATE_TYPE, VARCHAR(9)) AS RATE_TYPE , FORMAT(OWNER, VARCHAR(50)) AS OWNER , FORMAT(ACOMP, VARCHAR(1)) AS ACOMP , FORMAT(MARKET, VARCHAR(37)) AS MARKET , FORMAT(RD, VARCHAR(30)) AS AD , FORMAT(AMERICAS_REGION, VARCHAR(25)) AS AMERICAS_REGION , FORMAT(HAWAII, VARCHAR(1)) AS HAWAII , market_name AS Market , Region_Name AS Americas_Region , CASE WHEN  sfo_org=''  THEN 'Non - Deployed' ELSE sfo_org || ' - ' || sfo_market END AS AST, CASE WHEN  Region = 'E_'  THEN 'East' WHEN  Region = 'W_'  THEN 'West' END AS Region, CASE WHEN  State = 'HI'  THEN 'Y' ELSE 'N' END AS Hawaii FROM mrdwprod3 );",Americas_Special_Corporate.sas
"ALTER TABLE special_corp DROP COLUMN sfo_org ,  sfo_market ,  market_name ,  region_name ,  state ,  RD ;",Americas_Special_Corporate.sas
"SELECT * FROM special_corp ORDER BY stay_date_ty ,marsha;",Americas_Special_Corporate.sas
" CREATE TABLE AW_Manual_Adjustments AS  ( select ASOF_YEAR_ID AS REPORT_YEAR, ASOF_MONTH_ID AS REPORT_MONTH, CASE WHEN SLS_MGR_ROLE = 'Market Account Executive, Association' THEN 'Association ( Pace)' WHEN SLS_MGR_ROLE = 'Area Account Executive, Affinity' THEN 'Affinity ( Pace)' WHEN SLS_MGR_ROLE = 'Area Account Executive, Government' THEN 'Government ( Pace)' END AS SEGMENT , MARSHA_CD AS MARSHA , SUM( NET_RM_NGTS) AS RN , SUM( NET_RM_REV) AS RV , CASE WHEN ORG_NM IN ( 'Canada') THEN 'CAD' ELSE 'USD' END AS RV_CURRENCY FROM AW_SLS_PRD_AM.MANUAL_ADJUSTMENTS WHERE ASOF_YEAR_ID IN ( &CURYR.-3, &CURYR.-2, &CURYR.-1, &CURYR. ) AND SLS_MGR_ROLE IN ( 'Market Account Executive, Association', 'Area Account Executive, Affinity', 'Area Account Executive, Government') GROUP BY ASOF_YEAR_ID, ASOF_MONTH_ID, SLS_MGR_ROLE, MARSHA_CD, ORG_NM  ) ;",Americas_US_Account_Sales_ASAR_Project.sas
" CREATE TABLE AW_MANUAL_ADDS_SUM AS SELECT REPORT_YEAR, REPORT_MONTH, SEGMENT, MARSHA, SUM( RN) AS RN, SUM( RV) AS RV, RV_CURRENCY FROM AW_MANUAL_ADJUSTMENTS GROUP BY REPORT_YEAR, REPORT_MONTH, SEGMENT, MARSHA, RV_CURRENCY ;",Americas_US_Account_Sales_ASAR_Project.sas
" CREATE TABLE AW_MANUAL_ADJ_%EVAL( &CURYR.-&HOWMANY. ) AS SELECT A.REPORT_YEAR, A.REPORT_MONTH, A.SEGMENT, A.MARSHA, ( A.RN+0) AS RN_TY, ( B.RN+0) AS RN_LY, ( A.RV+0) AS RV_TY, ( B.RV+0) AS RV_LY, A.RV_CURRENCY FROM AW_MANUAL_ADDS_SUM A LEFT JOIN ( SELECT * FROM AW_MANUAL_ADDS_SUM WHERE REPORT_YEAR=%EVAL( &CURYR.-&ONEMORE. )) B ON A.REPORT_MONTH=B.REPORT_MONTH AND A.SEGMENT=B.SEGMENT AND A.MARSHA=B.MARSHA AND A.RV_CURRENCY=B.RV_CURRENCY WHERE A.REPORT_YEAR = %EVAL( &CURYR.-&HOWMANY. ) ;",Americas_US_Account_Sales_ASAR_Project.sas
" CREATE TABLE Quote_Detail AS  ( select REPORT_YEAR, REPORT_MONTH, CASE WHEN AREA_SALES_MANAGER_SEGMENT = 'Association' THEN 'Association ( Pace)' WHEN AREA_SALES_MANAGER_SEGMENT = 'Affinity' THEN 'Affinity ( Pace)' WHEN AREA_SALES_MANAGER_SEGMENT = 'Government' THEN 'Government ( Pace)' END AS SEGMENT , MARSHA_CODE AS MARSHA , SUM( NET_ROOMNIGHTS) AS RN , SUM( NET_ROOM_REVENUE) AS RV , CASE WHEN AREA_SALES_MANAGER_ORG_NAME IN ( 'Canada') THEN 'CAD' ELSE 'USD' END AS RV_CURRENCY FROM AW_SLS_PRD_AM.QUOTE_DETAIL WHERE REPORT_YEAR IN ( &CURYR.-3, &CURYR.-2, &CURYR.-1, &CURYR. ) AND AREA_SALES_MANAGER_SEGMENT IN ( 'Association', 'Affinity', 'Government') GROUP BY REPORT_YEAR, REPORT_MONTH, AREA_SALES_MANAGER_SEGMENT, MARSHA_CODE, AREA_SALES_MANAGER_ORG_NAME  ) ;",Americas_US_Account_Sales_ASAR_Project.sas
" CREATE TABLE AW_QUOTE_DETAIL_SUM AS SELECT REPORT_YEAR, REPORT_MONTH, SEGMENT, MARSHA, SUM( RN) AS RN, SUM( RV) AS RV, RV_CURRENCY FROM QUOTE_DETAIL GROUP BY REPORT_YEAR, REPORT_MONTH, SEGMENT, MARSHA, RV_CURRENCY ;",Americas_US_Account_Sales_ASAR_Project.sas
" CREATE TABLE AW_QUOTE_DETAIL_%EVAL( &CURYR.-&HOWMANY. ) AS SELECT A.REPORT_YEAR, A.REPORT_MONTH, A.SEGMENT, A.MARSHA, ( A.RN+0) AS RN_TY, ( B.RN+0) AS RN_LY, ( A.RV+0) AS RV_TY, ( B.RV+0) AS RV_LY, A.RV_CURRENCY FROM AW_QUOTE_DETAIL_SUM A LEFT JOIN ( SELECT * FROM AW_QUOTE_DETAIL_SUM WHERE REPORT_YEAR=%EVAL( &CURYR.-&ONEMORE. )) B ON A.REPORT_MONTH=B.REPORT_MONTH AND A.SEGMENT=B.SEGMENT AND A.MARSHA=B.MARSHA AND A.RV_CURRENCY=B.RV_CURRENCY WHERE A.REPORT_YEAR = %EVAL( &CURYR.-&HOWMANY. ) ;",Americas_US_Account_Sales_ASAR_Project.sas
 CREATE TABLE GROUP_PACE2 AS ( SELECT  *  FROM QUOTE_DETAIL UNION ALL SELECT  *  FROM MANUAL_ADJUSTMENTS);,Americas_US_Account_Sales_ASAR_Project.sas
" CREATE TABLE GROUP_PACE AS SELECT REPORT_YEAR, REPORT_MONTH, SEGMENT, MARSHA, RV_CURRENCY, SUM( RN_TY) AS RN_TY, SUM( RV_TY) AS RV_TY, SUM( RN_LY) AS RN_LY, SUM( RV_LY) AS RV_LY FROM GROUP_PACE2 GROUP BY REPORT_YEAR, REPORT_MONTH, SEGMENT, MARSHA, RV_CURRENCY ;",Americas_US_Account_Sales_ASAR_Project.sas
" CREATE TABLE AP_DATASET_%EVAL( &CURYR.-&HOWMANY. ) AS  ( SELECT %EVAL( &CURYR.-&HOWMANY. ) AS REPORT_YEAR, STAY_PD_MO AS REPORT_MONTH, CASE WHEN ROLE_TITLE IN ( 'Market Account Executive, Mid-Market','Area Account Executive, Mid-Market') THEN 'Mid-Market' WHEN ROLE_TITLE='Market Account Executive, EST' THEN 'EST' WHEN ROLE_TITLE='Market Account Executive, Airline' THEN 'Airline' WHEN ROLE_TITLE='Market Account Executive, Prospect' THEN 'Prospect' WHEN ROLE_TITLE='Market Account Executive, Whsale/FIT/Tour & Travel' THEN 'Wholesale' END AS SEGMENT , MARSHA , SUM( RN) AS RN , SUM( ROOM_REVENUE) AS RV , CASE WHEN MGR_ORG_NAME IN ( 'Canada') THEN 'CAD' ELSE 'USD' END AS RV_CURRENCY FROM AW_SLS_PRD_AM.AP_COMBINED_MISW_%EVAL( &CURYR.-&HOWMANY. ) WHERE ROLE_TITLE IN ( 'Market Account Executive, Mid-Market','Area Account Executive, Mid-Market','Market Account Executive, EST','Market Account Executive, Airline', 'Market Account Executive, Prospect','Market Account Executive, Whsale/FIT/Tour & Travel') GROUP BY REPORT_YEAR, STAY_PD_MO, ROLE_TITLE, MARSHA, MGR_ORG_NAME  ) ;",Americas_US_Account_Sales_ASAR_Project.sas
" CREATE TABLE ACCOUNT_PRODUCTION_SUM AS SELECT REPORT_YEAR, REPORT_MONTH, SEGMENT, MARSHA, SUM( RN) AS RN, SUM( RV) AS RV, RV_CURRENCY FROM AP_DATASET GROUP BY REPORT_YEAR, REPORT_MONTH, SEGMENT, MARSHA, RV_CURRENCY ;",Americas_US_Account_Sales_ASAR_Project.sas
" CREATE TABLE ACCOUNT_PRODUCTION_%EVAL( &CURYR.-&HOWMANY. ) AS SELECT A.REPORT_YEAR, A.REPORT_MONTH, A.SEGMENT, A.MARSHA, ( A.RN+0) AS RN_TY, ( B.RN+0) AS RN_LY, ( A.RV+0) AS RV_TY, ( B.RV+0) AS RV_LY, A.RV_CURRENCY FROM ACCOUNT_PRODUCTION_SUM A LEFT JOIN ( SELECT * FROM ACCOUNT_PRODUCTION_SUM WHERE REPORT_YEAR=%EVAL( &CURYR.-&ONEMORE. )) B ON A.REPORT_MONTH=B.REPORT_MONTH AND A.SEGMENT=B.SEGMENT AND A.MARSHA=B.MARSHA AND A.RV_CURRENCY=B.RV_CURRENCY WHERE A.REPORT_YEAR = %EVAL( &CURYR.-&HOWMANY. ) ;",Americas_US_Account_Sales_ASAR_Project.sas
" CREATE TABLE COMBINED_DATASETS AS ( SELECT  * , CASE WHEN  MARSHA='1189'  THEN 'PDXWI' WHEN  MARSHA='142'  THEN 'FRASI' WHEN  MARSHA='1439'  THEN 'TIASI' WHEN  MARSHA='1452'  THEN 'RIOSR' WHEN  MARSHA='357'  THEN 'BKKLC' WHEN  MARSHA='3894'  THEN 'SSASB' WHEN  MARSHA='828'  THEN 'PVDSI' WHEN  MARSHA='3571'  THEN 'CANWI' END AS MARSHA FROM GROUP_PACE UNION ALL SELECT  * , CASE WHEN  MARSHA='1189'  THEN 'PDXWI' WHEN  MARSHA='142'  THEN 'FRASI' WHEN  MARSHA='1439'  THEN 'TIASI' WHEN  MARSHA='1452'  THEN 'RIOSR' WHEN  MARSHA='357'  THEN 'BKKLC' WHEN  MARSHA='3894'  THEN 'SSASB' WHEN  MARSHA='828'  THEN 'PVDSI' WHEN  MARSHA='3571'  THEN 'CANWI' END AS MARSHA FROM ACCOUNT_PRODUCTION);",Americas_US_Account_Sales_ASAR_Project.sas
CREATE TABLE VALIDATE_PROPS AS ( SELECT  *  FROM COMBINED_DATASETS  WHERE MARSHA <= '99999');,Americas_US_Account_Sales_ASAR_Project.sas
CREATE TABLE VALID_PROP_DATA AS ( SELECT  *  FROM COMBINED_DATASETS  WHERE MARSHA <<> '99999');,Americas_US_Account_Sales_ASAR_Project.sas
CREATE TABLE VALIDATE_PROPS_NODUPE AS (SELECT DISTINCT MARSHA FROM VALIDATE_PROPS ORDER BY MARSHA);,Americas_US_Account_Sales_ASAR_Project.sas
" CREATE TABLE FIX_MARSHA_CODES AS SELECT A.REPORT_YEAR, A.REPORT_MONTH, A.SEGMENT, A.MARSHA, A.RN_TY, A.RN_LY, A.RV_TY, A.RV_LY, A.RV_CURRENCY FROM VALID_PROP_DATA A ;",Americas_US_Account_Sales_ASAR_Project.sas
" CREATE TABLE ACCOUNT_SALES_SUMMARY_LOAD1 AS ( SELECT  *  , FORMAT(AS_DATE, INT)  AS AS_DATE , FORMAT(RV_TY, FLOAT(10, 2))  AS RV_TY , FORMAT(RV_LY, FLOAT(10, 2))  AS RV_LY , FORMAT(SEGMENT, VARCHAR(100)) AS SEGMENT , FORMAT(RV_CURRENCY, VARCHAR(5)) AS RV_CURRENCY  FROM FIX_MARSHA_CODES  WHERE REPORT_MONTH < 10 AND REPORT_YEAR<&CURYR. OR ( REPORT_YEAR=&CURYR. AND REPORT_MONTH<=&SHORTPD. ) );",Americas_US_Account_Sales_ASAR_Project.sas
 CREATE TABLE MAX_DATE_TABLE AS SELECT MAX( AS_DATE) AS MAX_RPT_DATE FROM ACCOUNT_SALES_SUMMARY_LOAD1 ;,Americas_US_Account_Sales_ASAR_Project.sas
" CREATE TABLE ACCOUNT_SALES_SUMMARY_LOAD AS ( SELECT  *  , &MAX_DATE AS AS_DATE  FROM ACCOUNT_SALES_SUMMARY_LOAD1 );",Americas_US_Account_Sales_ASAR_Project.sas
"CREATE TABLE ACCOUNT_SLS_SUMMARY_CNT AS (SELECT AS_DATE, COUNT(AS_DATE),  FROM ACCOUNT_SALES_SUMMARY_LOAD GROUP BY AS_DATE );",Americas_US_Account_Sales_ASAR_Project.sas
"CREATE TABLE ""\\hdqmdm1fpcl4v1\dev-dss\Dev-dss\SalesForce1\Account_Sales_Project\&CURYRPD.\mrdw_fact_agg_us_account_sales.dat"" DATA=ACCOUNT_SALES_SUMMARY_LOAD AS ( SELECT * FROM ACCOUNT_SALES_SUMMARY_LOAD) ;",Americas_US_Account_Sales_ASAR_Project.sas
"CREATE TABLE ""\\hdqmdm1fpcl4v1\dev-dss\Dev-dss\SalesForce1\Account_Sales_Project\&CURYRPD.\mrdw_fact_agg_us_account_sales_control.dat"" DATA=ACCOUNT_SLS_SUMMARY_CNT AS ( SELECT * FROM ACCOUNT_SLS_SUMMARY_CNT) ;",Americas_US_Account_Sales_ASAR_Project.sas
" CREATE TABLE TMC_Parent_IATA AS ( SELECT  *  , 'TMC' AS data_src  FROM Consortia );",Americas_W_Consortia_Production.sas
"CREATE TABLE NYC_Props AS ( SELECT  *, Organization AS MARSHA FROM Properties  WHERE associate_eid = 'AMAQB233');",Americas_W_Consortia_Production.sas
CREATE TABLE Other AS ( SELECT  *  FROM Properties  WHERE associate_eid <> 'AMAQB233');,Americas_W_Consortia_Production.sas
" CREATE TABLE W_CONSORTIA_PROPS AS ( SELECT HOTEL_NAME, BRND, MARSHA AS MARSHA, PROP_MASTER_ID AS OLD_MARSHA, MISW_FLAG AS COMPANY, SFO_ORG AS ORG_ACRONYM, FORMAT(ORG_NAME, VARCHAR(50)) AS ORG_NAME , CASE WHEN  SFO_ORG='ENE'  THEN 'East Northeast' WHEN   SFO_ORG='MA'  THEN 'Mid Atlantic' WHEN   SFO_ORG='NMA'  THEN 'Northern Mid-America' WHEN   SFO_ORG='WMP'  THEN 'Western Mountain Pacific' WHEN   SFO_ORG='WSW'  THEN 'West Southwest' WHEN   SFO_ORG='WSC'  THEN 'West South Central' WHEN   SFO_ORG='SSE'  THEN 'South Southeast' WHEN   SFO_ORG='FL'  THEN 'Florida' END AS ORG_NAME FROM AWPROD.PROPERTY_MASTER_HIST  WHERE BRND='WH' AND SFO_ORG not IN ( 'CAL','') AND MF='M' AND COUNTRY_CD='US' AND OPENFLAG='Y' AND ASOF_YRMO=&CURYRPD.);",Americas_W_Consortia_Production.sas
 CREATE TABLE AllProps AS ( SELECT MARSHA FROM NYC_Props UNION ALL SELECT MARSHA FROM W_Consortia_Props);,Americas_W_Consortia_Production.sas
CREATE TABLE dedupe_TMC_PARENT_IATA AS (SELECT DISTINCT P_IATA FROM TMC_PARENT_IATA ORDER BY P_IATA);,Americas_W_Consortia_Production.sas
 CREATE TABLE STARS_Luminous_List AS ( SELECT IATA_8_digit AS IATA_Number FROM STARS UNION ALL SELECT IATA_8_digit AS IATA_Number FROM Luminous);,Americas_W_Consortia_Production.sas
CREATE TABLE dedupe_STARS_Luminous_List AS (SELECT DISTINCT IATA_Number FROM STARS_Luminous_List ORDER BY IATA_Number);,Americas_W_Consortia_Production.sas
" CREATE TABLE W_Consortia_Detail AS  ( select a15.intermediary_id AS IATA_Number, a17.brand_cd AS Brand_Code, a17.property_cd AS MARSHA_Code, a17.property_nm AS Property_Name, a17.city_nm AS Property_City, a17.ab_state_cd AS Property_State, a16.market_cd AS Market_Code, a17.country_cd AS Property_Country_Code, a15.intermediary_company_nm AS intermediary_company_nm, a15.city_nm AS IATA_City, a15.ab_state_cd AS IATA_State, a15.country_cd AS IATA_Country, a20.parent_iata_cd AS Parent_IATA_Number, a20.tmc_nm AS Parent_TMC_Name, RTRIM( to_char( a13.year_cal,'9999')) || CASE WHEN a13.month_cal_id between 1 AND 9 THEN '0'|| RTRIM( to_char( a13.month_cal_id,'99')) ELSE RTRIM( to_char( a13.month_cal_id,'99')) END AS YrMonth, a13.month_cal_id AS Month, SUM( a12.rooms_qty) AS Roomnights_TY, SUM( a12.proj_gr_local_rev_amt / a11.exch_per_us_dlr_rte) AS Gross_USD_Rev_TY, SUM( a12.proj_net_local_rev_amt / a11.exch_per_us_dlr_rte) AS Net_USD_Rev_TY, CASE WHEN a13.month_cal_id between 1 AND 3 THEN 1 when a13.month_cal_id between 4 AND 6 THEN 2 when a13.month_cal_id between 7 AND 9 THEN 3 when a13.month_cal_id between 10 AND 12 THEN 4 END AS Qtr FROM mrdw_dim_currency_conversion AS a11 JOIN mrdw_fact_daily_revenue AS a12 ON ( a11.date_currency_key = a12.date_currency_stay_key) JOIN mrdw_dim_date AS a13 ON ( a11.date_key = a13.date_key) JOIN mrdw_dim_date AS a21 ON ( a12.date_arrival_key = a21.date_key) JOIN mrdw_brg_intermediary AS a14 ON ( a12.confo_num_curr_id = a14.confo_num_curr_id AND a12.confo_num_orig_id = a14.confo_num_orig_id AND a12.date_create_key = a14.date_create_key) JOIN mrdw_dim_intermediary AS a15 ON ( a14.intermediary_key = a15.intermediary_key AND a14.intermediary_type_resv_cd = a15.intermediary_type_cd) JOIN Mrdw_dim_tmc_vs_biata_rel AS a10 ON ( a15.intermediary_id = a10.booking_iata_cd) JOIN Mrdw_dim_tmc_parent_master AS a20 ON ( a10.parent_iata_cd = a20.parent_iata_cd) JOIN mrdw_dim_market_rates AS a16 ON ( a12.market_rate_key = a16.market_rate_key) JOIN mrdw_dim_property AS a17 ON ( a16.property_id = a17.property_id) JOIN mrdw_dim_status_accom AS a19 ON ( a12.status_accom_key = a19.status_accom_key) WHERE a13.year_cal=&curyr. AND a13.month_cal_id = &shortpd. AND a15.intermediary_type_cd='IA' AND a20.parent_iata_cd IN ( %PIATAList) AND a17.property_cd IN ( %MARSHAList) AND SUBSTRING( a16.market_cd,1,2) IN ( '10','11','12','19','20','21','22','23','24','33','35','43','90') AND a19.action_cd <> 'NR' AND ( a21.date_dt between a10.start_dt AND a10.end_dt) GROUP BY a15.intermediary_id, a15.intermediary_company_nm, a17.brand_cd, a16.market_cd, a15.city_nm, a15.ab_state_cd, a15.country_cd, a17.property_cd, a17.property_nm, a17.city_nm, a17.ab_state_cd, a17.country_cd, a20.parent_iata_cd, a20.tmc_nm, YrMonth, Month, Qtr ORDER BY a15.intermediary_id, a15.intermediary_company_nm, a17.brand_cd, a16.market_cd, a17.property_cd, YrMonth ) ;",Americas_W_Consortia_Production.sas
" CREATE TABLE Consortia_Final AS select a.IATA_Number, a.Brand_Code, a.MARSHA_Code, a.Property_Name, a.Property_City, a.Property_State, a.Market_Code, a.Property_Country_Code, a.intermediary_company_nm, a.IATA_City, a.IATA_State, a.IATA_Country, a.Parent_IATA_Number, a.Parent_TMC_Name, a.YrMonth LENGTH=6 format=$6., a.Month, a.Roomnights_TY, a.Gross_USD_Rev_TY, a.Net_USD_Rev_TY, a.Qtr, CASE WHEN c.sfo_org='ENE' THEN 'East Northeast' ELSE 'Other' END AS org_name, b.associate, b.associate_eid FROM w_consortia_detail a INNER JOIN nyc_props b ON a.marsha_code = b.marsha INNER JOIN ( select * FROM AWPROD.PROPERTY_MASTER_HIST WHERE sfo_org='ENE' AND asof_yrmo=&curyrpd. ) c ON a.marsha_code = c.marsha UNION ALL select a.*, b.org_name, c.associate, c.associate_eid FROM w_consortia_detail a INNER JOIN w_consortia_props b ON a.marsha_code = b.marsha INNER JOIN ( select * FROM properties WHERE associate_eid not IN ( 'AMAQB233')) c ON b.org_name = c.organization ;",Americas_W_Consortia_Production.sas
" CREATE TABLE Luxury_Data_RateProgram_Only AS SELECT C.ASSOCIATE, C.ASSOCIATE_EID, A1.PROPERTY_CD AS MARSHA, A1.RATE_PGM_TXT, A1.MARKET_CD, CASE WHEN B.SFO_ORG = 'ENE' THEN 'East Northeast' ELSE 'Other' END AS ORG_NAME, ( 100*A1.YEAR_CAL_ID+A1.MONTH_CAL_ID) AS YEARMO, SUM( A1.ROOMNIGHTS_QTY) AS RN, SUM( A1.NET_REV_USD_SUB_AMT) AS RV FROM NZTFP.MRDW_FACT_AGG_DR_REV_ANALYSIS A1 INNER JOIN ( SELECT * FROM AWPROD.PROPERTY_MASTER_HIST WHERE SFO_ORG='ENE' AND ASOF_YRMO=&CURYRPD. ) B ON A1.PROPERTY_CD = B.MARSHA INNER JOIN NYC_PROPS C ON A1.PROPERTY_CD = C.MARSHA WHERE A1.YEAR_CAL_ID = &curyr. AND A1.MONTH_CAL_ID = &shortpd. AND A1.PROPERTY_CD IN ( %MARSHAList) AND A1.MARKET_PREFIX_CD='22' GROUP BY C.ASSOCIATE, C.ASSOCIATE_EID, A1.PROPERTY_CD, A1.RATE_PGM_TXT, A1.MARKET_CD, YEARMO, ORG_NAME UNION ALL SELECT C.ASSOCIATE, C.ASSOCIATE_EID, A2.PROPERTY_CD AS MARSHA, A2.RATE_PGM_TXT, A2.MARKET_CD, B.ORG_NAME, ( 100*A2.YEAR_CAL_ID+A2.MONTH_CAL_ID) AS YEARMO, SUM( A2.ROOMNIGHTS_QTY) AS RN, SUM( A2.NET_REV_USD_SUB_AMT) AS RV FROM NZTFP.MRDW_FACT_AGG_DR_REV_ANALYSIS A2 INNER JOIN W_CONSORTIA_PROPS B ON A2.PROPERTY_CD = B.MARSHA INNER JOIN ( SELECT * FROM PROPERTIES WHERE ASSOCIATE_EID NOT IN ( 'AMAQB233')) C ON B.ORG_NAME = C.ORGANIZATION WHERE A2.YEAR_CAL_ID = &curyr. AND A2.MONTH_CAL_ID = &shortpd. AND A2.PROPERTY_CD IN ( %MARSHAList) AND A2.MARKET_PREFIX_CD='22' GROUP BY C.ASSOCIATE, C.ASSOCIATE_EID, A2.PROPERTY_CD, A2.RATE_PGM_TXT, A2.MARKET_CD, YEARMO, B.ORG_NAME ;",Americas_W_Consortia_Production.sas
 CREATE TABLE TMCLUX.LUX_RateProgram_Only_&curyrpd AS ( SELECT  *  FROM Luxury_Data_RateProgram_Only );,Americas_W_Consortia_Production.sas
 CREATE TABLE TMCLUX.Consortia_Production_&curyrpd AS ( SELECT  *  FROM Consortia_Final );,Americas_W_Consortia_Production.sas
" CREATE TABLE Luxury_Data_RP_Details AS SELECT A1.INTERMEDIARY_ID, A1.INTERMEDIARY_COMPANY_NM, A1.INTERMEDIARY_CITY_NM, A1.CURR_TMC_PARENT_IATA_ID, A1.CURR_TMC_PARENT_NM, C.ASSOCIATE, C.ASSOCIATE_EID, A1.PROPERTY_CD AS MARSHA, A1.CURR_RATE_PGM_TXT, A1.CURR_MARKET_CD, CASE WHEN B.SFO_ORG = 'ENE' THEN 'East Northeast' ELSE 'Other' END AS ORG_NAME, ( 100*A1.STAY_YEAR+A1.STAY_MONTH) AS YEARMO, SUM( A1.CURR_ROOMS_QTY) AS RN, SUM( A1.CURR_TOT_REV_USD_SUB_AMT) AS RV FROM AWPROD.MRDW_BI_FACT_STAYED_PAID_NOS A1 INNER JOIN ( SELECT * FROM AWPROD.PROPERTY_MASTER_HIST WHERE SFO_ORG='ENE' AND ASOF_YRMO=&CURYRPD. ) B ON A1.PROPERTY_CD = B.MARSHA INNER JOIN NYC_PROPS C ON A1.PROPERTY_CD = C.MARSHA WHERE A1.STAY_YEAR = &curyr. AND A1.STAY_MONTH = &shortpd. AND A1.PROPERTY_CD IN ( %MARSHAList) AND A1.CURR_MARKET_PREFIX_CD='22' GROUP BY A1.INTERMEDIARY_ID, A1.INTERMEDIARY_COMPANY_NM, A1.INTERMEDIARY_CITY_NM, A1.CURR_TMC_PARENT_IATA_ID, A1.CURR_TMC_PARENT_NM, C.ASSOCIATE, C.ASSOCIATE_EID, A1.PROPERTY_CD, A1.CURR_RATE_PGM_TXT, A1.CURR_MARKET_CD, YEARMO, ORG_NAME UNION ALL SELECT A2.INTERMEDIARY_ID, A2.INTERMEDIARY_COMPANY_NM, A2.INTERMEDIARY_CITY_NM, A2.CURR_TMC_PARENT_IATA_ID, A2.CURR_TMC_PARENT_NM, C.ASSOCIATE, C.ASSOCIATE_EID, A2.PROPERTY_CD AS MARSHA, A2.CURR_RATE_PGM_TXT, A2.CURR_MARKET_CD, B.ORG_NAME, ( 100*A2.STAY_YEAR+A2.STAY_MONTH) AS YEARMO, SUM( A2.CURR_ROOMS_QTY) AS RN, SUM( A2.CURR_TOT_REV_USD_SUB_AMT) AS RV FROM AWPROD.MRDW_BI_FACT_STAYED_PAID_NOS A2 INNER JOIN W_CONSORTIA_PROPS B ON A2.PROPERTY_CD = B.MARSHA INNER JOIN ( SELECT * FROM PROPERTIES WHERE ASSOCIATE_EID NOT IN ( 'AMAQB233')) C ON B.ORG_NAME = C.ORGANIZATION WHERE A2.STAY_YEAR = &curyr. AND A2.STAY_MONTH = &shortpd. AND A2.PROPERTY_CD IN ( %MARSHAList) AND A2.CURR_MARKET_PREFIX_CD='22' GROUP BY A2.INTERMEDIARY_ID, A2.INTERMEDIARY_COMPANY_NM, A2.INTERMEDIARY_CITY_NM, A2.CURR_TMC_PARENT_IATA_ID, A2.CURR_TMC_PARENT_NM, C.ASSOCIATE, C.ASSOCIATE_EID, A2.PROPERTY_CD, A2.CURR_RATE_PGM_TXT, A2.CURR_MARKET_CD, YEARMO, B.ORG_NAME ;",Americas_W_Consortia_Production.sas
 CREATE TABLE TMCLUX.LUX_RP_Details_&curyrpd AS ( SELECT  *  FROM Luxury_Data_RP_Details );,Americas_W_Consortia_Production.sas
" CREATE TABLE AW_Manual_Adjustments AS  ( select MARSHA_CD AS MARSHA, SLS_MGR_ROLE, SUM( NET_RM_NGTS) AS MAN_ADJ_RNS FROM AW_SLS_PRD_AM.MANUAL_ADJUSTMENTS WHERE ADJ_YEAR_ID=&CURYR. AND ACCT_COMP_TYPE NOT IN ( 'Assigned Account IN Organization','Non Assigned Account IN Organization') AND SLS_MGR_ROLE NOT IN ( 'Sales Executive') GROUP BY MARSHA_CD, SLS_MGR_ROLE  )  ;",Americas_YTD_Cost_Allocation.sas
"CREATE TABLE MANUAL_ADJUSTMENTS2 AS ( SELECT  *  , RTRIM( SUBSTRING( SLS_MGR_ROLE,( INDEX( SLS_MGR_ROLE,"","")+1),RTRIM( LENGTH( SLS_MGR_ROLE))) ) AS SLS_SEGMENT  FROM AW_MANUAL_ADJUSTMENTS );",Americas_YTD_Cost_Allocation.sas
ALTER TABLE MANUAL_ADJUSTMENTS2 DROP COLUMN SLS_MGR_ROLE ;,Americas_YTD_Cost_Allocation.sas
"CREATE INDEX SLS_MGR_ROLE,"","" ON MANUAL_ADJUSTMENTS2(SLS_MGR_ROLE,"","");",Americas_YTD_Cost_Allocation.sas
" CREATE TABLE MANUAL_ADJUSTMENTS AS SELECT MARSHA, SUM( CASE WHEN SLS_SEGMENT='Association' THEN MAN_ADJ_RNS ELSE 0 END) AS ASSOC_MAN_ADJ_RNS, SUM( CASE WHEN SLS_SEGMENT NOT IN ( 'Association') THEN MAN_ADJ_RNS ELSE 0 END) AS OTHER_MAN_ADJ_RNS, SUM( MAN_ADJ_RNS) AS TOTAL_MAN_ADJ_RNS FROM MANUAL_ADJUSTMENTS2 GROUP BY MARSHA ;",Americas_YTD_Cost_Allocation.sas
" CREATE TABLE Cost_Allocation1 AS select TimeFrame format=$15. LENGTH=15 , Organization_Name format=$25. LENGTH=25 , MARSHA , Property_Name , Property_Unit_Number , Total_Group_RNs2 , Association_RNs , Other_Group_RNs_Total_Pre_Cap2 label='Other Group RNs Total Pre-Cap', Other_Group_RNs_Total_Post_Cap2 label='Other Group RNs Total Post-Cap', Special_Corp_RNs_Total_Pre_Cap label='Special Corp RNs Total Pre-Cap', Special_Corp_RNs_Total_Post_Cap label='Special Corp RNs Post-Cap', Special_Corp_RNs_Org_Percent_Cap format=4.2 label='Special Corp RNs Organization % Cap', Ttl_Othr_Grp_SpCorp_RNs_Pre label='Total Other Group AND Sp Corp RNs Pre-Cap', Ttl_Othr_Grp_SpCorp_RNs_Post label='Total Other Group AND Sp Corp RNs Post-Cap' FROM  ( select 'YTD '||( to_char( to_date( &shortpd.,'MM'),'MONTH')) AS TimeFrame, organization_name AS Organization_Name, marsha_cd AS MARSHA, property_nm AS Property_Name, product_no AS Property_Unit_Number, SUM( association_rm+other_grp_rm_tot_pre_cap) AS Total_Group_RNs2, SUM( association_rm) AS Association_RNs, SUM( other_grp_rm_tot_pre_cap) AS Other_Group_RNs_Total_Pre_Cap2, SUM( other_grp_rm_tot_post_cap) AS Other_Group_RNs_Total_Post_Cap2, SUM( spcl_corp_rm_tot_pre_cap) AS Special_Corp_RNs_Total_Pre_Cap, SUM( spcl_corp_rm_tot_post_cap) AS Special_Corp_RNs_Total_Post_Cap, SUM( spcl_corp_org_pct_cap) AS Special_Corp_RNs_Org_Percent_Cap, SUM( tot_oth_grp_spcl_corp_rm_pre) AS Ttl_Othr_Grp_SpCorp_RNs_Pre, SUM( tot_oth_grp_spcl_corp_rm_post) AS Ttl_Othr_Grp_SpCorp_RNs_Post FROM sgr_fact_smry_cost_alloc_v WHERE snapshot_pd_mo = &shortpd. AND snapshot_year=&curyr. AND organization_name not IN ( 'Canada') GROUP BY organization_name, marsha_cd, property_nm, product_no ORDER BY organization_name, marsha_cd  ) ;",Americas_YTD_Cost_Allocation.sas
" CREATE TABLE Cost_Allocation AS select TimeFrame, Organization_Name format=$35. LENGTH=35 , a.MARSHA , Property_Name , Property_Unit_Number , CASE WHEN total_man_adj_rns IN ( 0,. ) THEN total_group_rns2 ELSE SUM( total_man_adj_rns+total_group_rns2) END AS Total_Group_RNs label='Total Group RNs - No Citywide', SUM( 0) AS Citywide_Group_RNs , CASE WHEN assoc_man_adj_rns IN ( 0,. ) THEN 0 ELSE SUM( assoc_man_adj_rns) END AS Manual_Adj_Association_RNs , Association_RNs , CASE WHEN other_man_adj_rns IN ( 0,. ) THEN 0 ELSE SUM( other_man_adj_rns) END AS Manual_Adj_Other_RNs , CASE WHEN other_man_adj_rns IN ( 0,. ) THEN Other_Group_RNs_Total_Pre_Cap2 ELSE SUM( other_man_adj_rns+Other_Group_RNs_Total_Pre_Cap2) END AS Other_Group_RNs_Total_Pre_Cap label='Other Group RNs Total Pre-Cap', CASE WHEN other_man_adj_rns IN ( 0,. ) THEN Other_Group_RNs_Total_Post_Cap2 ELSE SUM( other_man_adj_rns+Other_Group_RNs_Total_Post_Cap2) END AS Other_Group_RNs_Total_Post_Cap label='Other Group RNs Total Post-Cap', Special_Corp_RNs_Total_Pre_Cap label='Special Corp RNs Pre-Cap', Special_Corp_RNs_Total_Post_Cap label='Special Corp RNs Post-Cap', Special_Corp_RNs_Org_Percent_Cap format=4.2 label='Special Corp RNs Organization % Cap', Ttl_Othr_Grp_SpCorp_RNs_Pre label='Total Other Group AND Sp Corp RNs Pre-Cap', Ttl_Othr_Grp_SpCorp_RNs_Post label='Total Other Group AND Sp Corp RNs Post-Cap' FROM Cost_Allocation1 a LEFT JOIN Manual_Adjustments b ON a.marsha=b.marsha GROUP BY organization_name, a.marsha, Property_Name, Property_Unit_Number ORDER BY organization_name, a.marsha ;",Americas_YTD_Cost_Allocation.sas
"CREATE TABLE ""&COST.SLS_TRANS_&CURYRPD..XLS"" AS ( SELECT * FROM Cost_Allocation) ;",Americas_YTD_Cost_Allocation.sas
" CREATE TABLE Strike_Annual AS select c.MARSHA , b.MARSHA_NEW, b.BRND, b.STR_ID, b.PEOPLESOFT_ID, b.MF, b.AVP , 'MONTH' AS TIMEF , CASE WHEN a.MARSHA IN ( &NONCOMP. ) THEN ""N"" ELSE a.SCOMP END AS SCOMP , SUM( a.COMPLETE_DATA) AS COMPLETE_DATA , b.HOTEL_NAME, b.REGION, b.DOMINT , CASE WHEN b.BRND IN ( ""CY"", ""FI"", ""RI"", ""SH"", ""TS"", ""AR"", ""OX"", ""FP"", ""AL"", ""EL"") THEN ""MSB"" ELSE ""FS"" end AS TYPE , SUM( a.MARAVAIL) AS MARAVAIL, SUM( a.MARREV) AS MARREV, SUM( a.MKTAVAIL) AS MKTAVAIL, SUM( a.MKTREV) AS MKTREV , SUM( a.MARAVAILLY) AS MARAVAILLY, SUM( a.MARREVLY) AS MARREVLY, SUM( a.MKTAVAILLY) AS MKTAVAILLY, SUM( a.MKTREVLY) AS MKTREVLY , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( (  ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))/100 , ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100 )-1,.00001) AS RPI_PCT_CHG , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100 ,.00001) AS RPI_PNT_CHG , ""Y"" AS Strike_Hotel FROM CMP.STR_MONTHLY_DATA AS a LEFT JOIN TGT_BUS.PROPERTY_MASTER_MISW_HIST AS b ON a.MARSHA = b.MARSHA_NEW AND a.asof_yrmo = b.asof_yrmo LEFT JOIN STRIKE AS c ON a.MARSHA = c.MARSHA WHERE a.TIMEF ='MONTH' AND a.DATA_CATEGORY = 'Rooms' AND a.CURRENCY_TYPE = 'Constant USD' AND a.asof_yrmo = &YRMNTH. AND a.YRMNTH >= 201801 AND c.MARSHA <> """" AND ( a.YRMNTH <= c.YTD_Data_to_Pull OR a.YRMNTH >= c.Post_Strike_Pull) GROUP BY c.MARSHA , b.MARSHA_NEW, b.BRND, b.STR_ID, b.PEOPLESOFT_ID, b.MF, b.AVP , calculated TIMEF , calculated SCOMP, b.HOTEL_NAME, b.REGION, b.DOMINT, calculated TYPE, calculated Strike_Hotel ORDER BY c.MARSHA;",Annual Bonus Reporting 2018 Converted to AW.sas
"CREATE TABLE ""&OUTPUT.\Strike Hotels.xlsx"" AS ( SELECT * FROM Strike_Annual) ;",Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE WEST2 AS ( SELECT F1, RevPAR_Index___Change, _018_RevPAR_Index_Goal FROM WEST  WHERE F1 <> """");",Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE EAST2 AS ( SELECT F1, RevPAR_Index___Change, _018_RevPAR_Index_Goal FROM EAST  WHERE F1 <> """");",Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE CANADA2 AS ( SELECT F1, RevPAR_Index___Change, _018_RevPAR_Index_Goal FROM CANADA  WHERE F1 <> """");",Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE CALA2 AS ( SELECT F1 , CAST( _018_Scomp_Status_in_Column_J, percent20.  ) AS RevPAR_Index___Change , F32 AS _018_RevPAR_Index_Goal  FROM CALA  WHERE F1 <> """");",Annual Bonus Reporting 2018 Converted to AW.sas
"CREATE TABLE AMERICAS_GOALS_1 AS ( SELECT  *  , F1 AS MARSHA , _018_RevPAR_Index_Goal AS RC_GOAL  FROM WEST2 UNION ALL SELECT  *  , F1 AS MARSHA , _018_RevPAR_Index_Goal AS RC_GOAL  FROM EAST2 UNION ALL SELECT  *  , F1 AS MARSHA , _018_RevPAR_Index_Goal AS RC_GOAL  FROM CANADA2 UNION ALL SELECT  *  , F1 AS MARSHA , _018_RevPAR_Index_Goal AS RC_GOAL  FROM CALA2);",Annual Bonus Reporting 2018 Converted to AW.sas
"ALTER TABLE AMERICAS_GOALS_1 DROP COLUMN F1 ,  _018_RevPAR_Index_Goal ;",Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE AMERICAS_GOALS AS select b.MARSHA_NEW AS MARSHA, a.RevPAR_Index___Change, a.RC_GOAL FROM AMERICAS_GOALS_1 a LEFT JOIN ( select * FROM TGT_BUS.PROPERTY_MASTER_MISW_HIST WHERE asof_yrmo = &YRMNTH. ) AS b ON ( a.MARSHA=b.marsha OR a.MARSHA=b.MARSHA_NEW);",Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE Annual AS select a.MARSHA, b.MARSHA_NEW, b.BRND, b.STR_ID, b.PEOPLESOFT_ID, b.MF, b.AVP , a.TIMEF , CASE WHEN a.MARSHA IN ( &NONCOMP. ) THEN ""N"" ELSE a.SCOMP END AS SCOMP , a.COMPLETE_DATA, b.HOTEL_NAME, b.REGION, b.DOMINT , CASE WHEN b.BRND IN ( ""CY"", ""FI"", ""RI"", ""SH"", ""TS"", ""AR"", ""OX"", ""FP"", ""AL"", ""EL"") THEN ""MSB"" ELSE ""FS"" end AS TYPE , MARAVAIL, MARREV, MKTAVAIL, MKTREV, MARAVAILLY, MARREVLY, MKTAVAILLY, MKTREVLY , ROUND( ( ( a.MARREV/ a.MARAVAIL)/( a.MKTREV/a.MKTAVAIL))*100,.00001) AS RPI_TY , ROUND( ( ( a.MARREVLY/ a.MARAVAILLY)/( a.MKTREVLY/a.MKTAVAILLY))*100,.00001) AS RPI_LY , ROUND( (  ( ( a.MARREV/ a.MARAVAIL)/( a.MKTREV/a.MKTAVAIL))/100 , ( ( a.MARREVLY/ a.MARAVAILLY)/( a.MKTREVLY/a.MKTAVAILLY))*100 )-1,.00001) AS RPI_PCT_CHG , ROUND( ( ( a.MARREV/ a.MARAVAIL)/( a.MKTREV/a.MKTAVAIL))*100 - ( ( a.MARREVLY/ a.MARAVAILLY)/( a.MKTREVLY/a.MKTAVAILLY))*100 ,.00001) AS RPI_PNT_CHG FROM CMP.STR_MONTHLY_DATA AS a LEFT JOIN TGT_BUS.PROPERTY_MASTER_MISW_HIST AS b ON a.MARSHA = b.MARSHA_NEW AND a.asof_yrmo = b.asof_yrmo WHERE a.TIMEF ='LAST12' AND a.DATA_CATEGORY = 'Rooms' AND a.CURRENCY_TYPE = 'Constant USD' AND a.YRMNTH = &YRMNTH. AND a.asof_yrmo = &YRMNTH.;",Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE annual_check AS select a.MARSHA, CASE WHEN a.RPI_PCT_CHG < b.RPI_PCT_CHG THEN 'Skip_Months' ELSE 'Full_Period' END AS Strike_Hotel_Check FROM annual a LEFT JOIN Strike_Annual AS b ON a.MARSHA = b.MARSHA;",Annual Bonus Reporting 2018 Converted to AW.sas
 CREATE TABLE annual_full AS select a.* FROM annual a LEFT JOIN annual_check AS b ON a.MARSHA = b.MARSHA WHERE b.Strike_Hotel_Check = 'Full_Period';,Annual Bonus Reporting 2018 Converted to AW.sas
 CREATE TABLE annual_skip AS select a.* FROM Strike_annual a LEFT JOIN annual_check AS b ON a.MARSHA = b.MARSHA WHERE b.Strike_Hotel_Check = 'Skip_Months';,Annual Bonus Reporting 2018 Converted to AW.sas
 CREATE TABLE annual AS ( SELECT  *  FROM annual_skip UNION ALL SELECT  *  FROM annual_full);,Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE AMERICAS_SYSTEMWIDE_SCOMP AS select a.MARSHA, a.MARSHA_NEW, a.HOTEL_NAME, a.REGION, a.BRND, a.TYPE, a.SCOMP , CASE WHEN a.SCOMP = 'Y' THEN 1 ELSE 0 END AS SCOMP_NUM , RPI_TY, RPI_LY, a.RPI_PCT_CHG FROM ANNUAL AS a ORDER BY a.TYPE, a.MARSHA;",Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE Full_Service_Property_Level AS select a.MARSHA, a.MARSHA_NEW, a.HOTEL_NAME, a.REGION, a.AVP, a.BRND, a.SCOMP , CASE WHEN a.SCOMP = 'Y' THEN 1 ELSE 0 END AS SCOMP_NUM , RPI_TY, RPI_LY, a.RPI_PCT_CHG , b.RevPAR_Index___Change AS RPI_GOAL_PCT_CHG FROM ANNUAL AS a INNER JOIN AMERICAS_GOALS AS b ON a.MARSHA = b.MARSHA WHERE a.MF = 'M' AND ( a.TYPE = 'FS' OR a.REGION = 'S_') AND a.REGION<>'C_' AND a.BRND not IN ( 'RZ', 'EB') AND a.MARSHA not IN ( 'MCOJW', 'MCORZ' ) ;",Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE Canadian_Local AS select a.MARSHA, b.MARSHA_NEW, b.HOTEL_NAME, b.REGION, b.AVP, b.BRND, a.SCOMP , CASE WHEN a.SCOMP = 'Y' THEN 1 ELSE 0 END AS SCOMP_NUM , ROUND( ( ( a.MARREV/ a.MARAVAIL)/( a.MKTREV/a.MKTAVAIL))*100,.00001) AS RPI_TY , ROUND( ( ( a.MARREVLY/ a.MARAVAILLY)/( a.MKTREVLY/a.MKTAVAILLY))*100,.00001) AS RPI_LY , ROUND( (  ( ( a.MARREV/ a.MARAVAIL)/( a.MKTREV/a.MKTAVAIL))/100 , ( ( a.MARREVLY/ a.MARAVAILLY)/( a.MKTREVLY/a.MKTAVAILLY))*100 )-1,.00001) AS RPI_PCT_CHG , c.RevPAR_Index___Change AS RPI_GOAL_PCT_CHG FROM CMP.STR_MONTHLY_DATA AS a LEFT JOIN TGT_BUS.PROPERTY_MASTER_MISW_HIST AS b ON a.MARSHA = b.MARSHA_NEW AND a.asof_yrmo = b.asof_yrmo INNER JOIN AMERICAS_GOALS AS c ON a.MARSHA = c.MARSHA WHERE a.TIMEF ='LAST12' AND a.DATA_CATEGORY = 'Rooms' AND a.CURRENCY_TYPE = 'Local' AND a.YRMNTH = &YRMNTH. AND b.REGION = 'C_' AND b.MF = 'M' AND b.BRND not IN ( ""CY"", ""FI"", ""RI"", ""SH"", ""TS"", ""AR"", ""OX"", ""FP"", ""AL"", ""EL"") AND b.BRND not IN ( 'RZ', 'EB') AND a.MARSHA not IN ( 'MCOJW', 'MCORZ' ) ;",Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE FS_consolidated_1 AS select a.MARSHA, a.MARSHA_NEW, CASE WHEN a.SCOMP = 'Y' THEN 1 ELSE 0 END AS SCOMP_COUNT , a.MARREV, a.MARAVAIL, a.MKTREV, a.MKTAVAIL, a.MARREVLY, a.MARAVAILLY, a.MKTREVLY, a.MKTAVAILLY , b.RevPAR_Index___Change , a.MARREVLY/a.MARAVAILLY / ( a.MKTREVLY/a.MKTAVAILLY)*100 * ( 1 + b.RevPAR_Index___Change) / 100 * a.MKTREV AS MARREV_GOAL FROM ANNUAL AS a INNER JOIN AMERICAS_GOALS AS b ON a.MARSHA=b.MARSHA WHERE a.MARSHA IN ( 'MCOJW', 'MCORZ' ) ;",Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE FS_consolidated_2 AS select '33GLR' AS MARSHA, '33GLR' AS MARSHA_NEW , SUM ( SCOMP_COUNT) AS SCOMP_COUNT , SUM( MARREV) AS MARREV, SUM( MARAVAIL) AS MARAVAIL, SUM( MKTREV) AS MKTREV, SUM( MKTAVAIL) AS MKTAVAIL , SUM( MARREVLY) AS MARREVLY, SUM( MARAVAILLY) AS MARAVAILLY, SUM( MKTREVLY) AS MKTREVLY, SUM( MKTAVAILLY) AS MKTAVAILLY , SUM( MARREV_GOAL) AS MARREV_GOAL FROM FS_consolidated_1 a GROUP BY calculated MARSHA, calculated MARSHA_NEW;",Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE FS_consolidated_3 AS select a.MARSHA, a.MARSHA_NEW, 'Combined MCOJW AND MCORZ for bonus purposes' AS HOTEL_NAME, 'E_' AS REGION, '' AS AVP, '' AS BRND , CASE WHEN SCOMP_COUNT = 2 THEN 'Y' ELSE 'N' END AS SCOMP , CASE WHEN SCOMP_COUNT = 2 THEN 1 ELSE 0 END AS SCOMP_NUM , ROUND( ( a.MARREV/ a.MKTREV)*100,.000001) AS RPI_TY , ROUND( ( a.MARREVLY/a.MKTREVLY)*100,.000001)AS RPI_LY , ROUND( ( a.MARREV_GOAL/ a.MARAVAIL)/( a.MKTREV/ a.MKTAVAIL)*100 / ( ( a.MARREVLY/ a.MARAVAILLY)/( a.MKTREVLY/ a.MKTAVAILLY)*100) - 1, .000001) AS RPI_GOAL_PCT_CHG , ROUND( (  ( ( a.MARREV/ a.MARAVAIL)/( a.MKTREV/a.MKTAVAIL))/100 , ( ( a.MARREVLY/ a.MARAVAILLY)/( a.MKTREVLY/a.MKTAVAILLY))*100 )-1,.00001) AS RPI_PCT_CHG FROM FS_consolidated_2 a;",Annual Bonus Reporting 2018 Converted to AW.sas
 CREATE TABLE FIELD_BONUS_REPORT AS ( SELECT  *  FROM Full_Service_Property_Level UNION ALL SELECT  *  FROM FS_consolidated_3 UNION ALL SELECT  *  FROM Canadian_Local);,Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE MSB_hotels AS select a.MARSHA, a.MARSHA_NEW, a.HOTEL_NAME, a.REGION, a.BRND, a.MF, a.SCOMP , CASE WHEN a.SCOMP = 'Y' THEN 1 ELSE 0 END AS SCOMP_NUM , a.RPI_TY, a.RPI_LY, a.RPI_PCT_CHG FROM ANNUAL a WHERE a.TYPE = 'MSB' AND a.MF = 'M' AND a.REGION IN ( 'E_', 'W_', 'C_') AND a.SCOMP = 'Y';",Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE MSB_Consolidated_1 AS select '31LLB' AS MARSHA, '33LLB' AS MARSHA_NEW, ""Consolidated Little Lake Bryan"" AS HOTEL_NAME, 'E_' AS REGION , '' AS BRND, 'M' AS MF , SUM ( CASE WHEN a.SCOMP = 'Y' THEN 1 ELSE 0 end ) AS SCOMP_COUNT , SUM( MARAVAIL) AS MARAVAIL, SUM( MARREV) AS MARREV, SUM( MKTAVAIL) AS MKTAVAIL, SUM( MKTREV) AS MKTREV , SUM( MARAVAILLY) AS MARAVAILLY, SUM( MARREVLY) AS MARREVLY, SUM( MKTAVAILLY) AS MKTAVAILLY, SUM( MKTREVLY) AS MKTREVLY FROM ANNUAL a WHERE a.MARSHA IN ( 'MCOLX', 'MCOLY', 'MCOLZ' ) ;",Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE MSB_Consolidated_2 AS select a.MARSHA, a.MARSHA_NEW, a.HOTEL_NAME, a.REGION, a.BRND, a.MF , CASE WHEN SCOMP_COUNT = 3 THEN 'Y' ELSE 'N' END AS SCOMP , CASE WHEN SCOMP_COUNT = 3 THEN 1 ELSE 0 END AS SCOMP_NUM , ROUND( ( ( a.MARREV/ a.MARAVAIL)/( a.MKTREV/a.MKTAVAIL))*100,.00001) AS RPI_TY , ROUND( ( ( a.MARREVLY/ a.MARAVAILLY)/( a.MKTREVLY/a.MKTAVAILLY))*100,.00001) AS RPI_LY , ROUND( (  ( ( a.MARREV/ a.MARAVAIL)/( a.MKTREV/a.MKTAVAIL))/100 , ( ( a.MARREVLY/ a.MARAVAILLY)/( a.MKTREVLY/a.MKTAVAILLY))*100 )-1,.00001) AS RPI_PCT_CHG FROM MSB_Consolidated_1 a;",Annual Bonus Reporting 2018 Converted to AW.sas
 CREATE TABLE MSB_Property_Level AS ( SELECT  *  FROM MSB_hotels UNION ALL SELECT  *  FROM MSB_consolidated_2);,Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE Ritz_Property_Level AS select a.MARSHA, a.HOTEL_NAME, a.REGION, a.BRND, a.MF, a.SCOMP , CASE WHEN a.SCOMP = 'Y' THEN 1 ELSE 0 END AS SCOMP_NUM , a.RPI_TY , b.RC_GOAL FROM ANNUAL a LEFT JOIN AMERICAS_GOALS AS b ON a.MARSHA=b.MARSHA WHERE a.BRND IN ( 'RZ', 'EB') AND a.REGION IN ( 'E_', 'W_' ) ;",Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE MSB_NONCOMP AS select a.MARSHA, a.MARSHA_NEW, a.HOTEL_NAME, a.REGION, a.BRND, a.MF , 'N' AS SCOMP, 0 AS SCOMP_NUM FROM TGT_BUS.PROPERTY_MASTER_MISW_HIST a LEFT JOIN MSB_hotels AS b ON a.MARSHA = b.MARSHA WHERE a.asof_yrmo = &yrmnth. AND b.SCOMP <> 'Y' AND a.BRND IN ( ""CY"", ""FI"", ""RI"", ""SH"", ""TS"", ""AR"", ""OX"", ""FP"", ""AL"", ""EL"") AND a.MF = 'M' AND a.REGION IN ( 'E_', 'W_', 'C_') ORDER BY a.MARSHA;",Annual Bonus Reporting 2018 Converted to AW.sas
"CREATE TABLE ""&OUTPUT.\Property AND Plan Tabs &CURDATE..xlsx"" AS ( SELECT * FROM AMERICAS_SYSTEMWIDE_SCOMP) ;",Annual Bonus Reporting 2018 Converted to AW.sas
"CREATE TABLE ""&OUTPUT.\Property AND Plan Tabs &CURDATE..xlsx"" AS ( SELECT * FROM MSB_Property_Level) ;",Annual Bonus Reporting 2018 Converted to AW.sas
"CREATE TABLE ""&OUTPUT.\Property AND Plan Tabs &CURDATE..xlsx"" AS ( SELECT * FROM FIELD_BONUS_REPORT) ;",Annual Bonus Reporting 2018 Converted to AW.sas
"CREATE TABLE ""&OUTPUT.\Property AND Plan Tabs &CURDATE..xlsx"" AS ( SELECT * FROM RITZ_Property_Level) ;",Annual Bonus Reporting 2018 Converted to AW.sas
"CREATE TABLE ""&OUTPUT.\Property AND Plan Tabs &CURDATE..xlsx"" AS ( SELECT * FROM MSB_NONCOMP) ;",Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE Global AS select 'Global' AS DESCRIPTION, COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a WHERE a.SCOMP = 'Y' GROUP BY calculated DESCRIPTION;",Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE Americas AS select 'Americas' AS DESCRIPTION, COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a WHERE a.SCOMP = 'Y' AND a.REGION IN ( 'E_', 'W_', 'C_', 'S_') AND a.MF = 'M' GROUP BY calculated DESCRIPTION;",Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE Americas_MSB AS select 'Americas_MSB' AS DESCRIPTION, COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a WHERE a.SCOMP = 'Y' AND a.TYPE = 'MSB' AND a.REGION IN ( 'E_', 'W_', 'C_', 'S_') AND a.MF = 'M' GROUP BY calculated DESCRIPTION;",Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE CALA AS select 'CALA' AS DESCRIPTION, COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a WHERE a.SCOMP = 'Y' AND a.REGION = 'S_' AND a.MF = 'M' GROUP BY calculated DESCRIPTION;",Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE Amer_MSB_System_FS_Fran AS select 'Americas_MSB_Systemwide_FS_Franchised' AS DESCRIPTION, COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a WHERE a.SCOMP = 'Y' AND a.REGION IN ( 'E_', 'W_', 'C_', 'S_') AND ( a.TYPE = 'MSB' OR a.MF = 'F') GROUP BY calculated DESCRIPTION;",Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE Ritz_Company AS select 'Ritz_Company' AS DESCRIPTION, COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a WHERE a.SCOMP = 'Y' AND a.BRND = 'RZ' GROUP BY calculated DESCRIPTION;",Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE St_Regis AS select 'St. Regis' AS DESCRIPTION, COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a WHERE a.SCOMP = 'Y' AND a.BRND = 'ST' GROUP BY calculated DESCRIPTION;",Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE Edition AS select 'Edition' AS DESCRIPTION, COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a WHERE a.SCOMP = 'Y' AND a.BRND = 'EB' GROUP BY calculated DESCRIPTION;",Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE RH_OX_AC AS select 'Renaissance, Moxy, AND AC' AS DESCRIPTION, COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a WHERE a.SCOMP = 'Y' AND a.BRND IN ( 'BR', 'OX', 'AR') AND a.REGION IN ( 'E_', 'W_', 'C_') GROUP BY calculated DESCRIPTION;",Annual Bonus Reporting 2018 Converted to AW.sas
 CREATE TABLE PLAN_TAB AS ( SELECT  *  FROM Amer_MSB_System_FS_Fran UNION ALL SELECT  *  FROM Global UNION ALL SELECT  *  FROM Americas UNION ALL SELECT  *  FROM Americas_MSB UNION ALL SELECT  *  FROM CALA UNION ALL SELECT  *  FROM Ritz_Company UNION ALL SELECT  *  FROM St_Regis UNION ALL SELECT  *  FROM Edition UNION ALL SELECT  *  FROM RH_OX_AC);,Annual Bonus Reporting 2018 Converted to AW.sas
"CREATE TABLE ""&OUTPUT.\Property AND Plan Tabs &CURDATE..xlsx"" AS ( SELECT * FROM PLAN_TAB) ;",Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE Region_All_Brands AS select CASE WHEN a.REGION = 'W_' THEN 'West Managed Region' when a.REGION = 'E_' THEN 'East Managed Region' when a.REGION = 'S_' THEN 'CALA Managed Region' when a.REGION = 'C_' THEN 'Canada Managed Region' END AS DESCRIPTION, COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a WHERE a.SCOMP = 'Y' AND a.REGION IN ( 'E_', 'W_', 'C_', 'S_') AND a.MF = 'M' GROUP BY calculated DESCRIPTION;",Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE Region_MSB AS select CASE WHEN a.REGION = 'W_' THEN 'MSB West Managed Region' when a.REGION = 'E_' THEN 'MSB East Managed Region' when a.REGION = 'S_' THEN 'MSB CALA Managed Region' when a.REGION = 'C_' THEN 'MSB Canada Managed Region' END AS DESCRIPTION, COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a WHERE a.SCOMP = 'Y' AND a.REGION IN ( 'E_', 'W_', 'C_', 'S_') AND a.MF = 'M' AND a.TYPE = 'MSB' GROUP BY calculated DESCRIPTION;",Annual Bonus Reporting 2018 Converted to AW.sas
 CREATE TABLE Region AS ( SELECT  *  FROM Region_MSB UNION ALL SELECT  *  FROM Region_All_Brands);,Annual Bonus Reporting 2018 Converted to AW.sas
"CREATE TABLE ""&OUTPUT.\Region Tab &CURDATE..xlsx"" AS ( SELECT * FROM Region) ;",Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE unique_BMD_3399 AS ( SELECT marsha, Unit, Peoplesoft_EEID, PEOPLESOFT_NAME FROM BMD_3399 );",Annual Bonus Reporting 2018 Converted to AW.sas
"SELECT DISTINCT * FROM unique_BMD_3399 ORDER BY marsha ,Unit ,Peoplesoft_EEID ,PEOPLESOFT_NAME;",Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE BMD_3399_ROLLUPS AS select b.Peoplesoft_EEID, b.PEOPLESOFT_NAME, ""3399"" AS Plan_ID , COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a LEFT JOIN unique_BMD_3399 AS b ON a.MARSHA_NEW = b.MARSHA WHERE a.SCOMP = 'Y' AND b.MARSHA <> '' GROUP BY b.Peoplesoft_EEID, b.PEOPLESOFT_NAME, Plan_ID;",Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE unique_BMD_3400 AS ( SELECT marsha, Unit, Peoplesoft_EEID, PEOPLESOFT_NAME FROM BMD_3400 );",Annual Bonus Reporting 2018 Converted to AW.sas
"SELECT DISTINCT * FROM unique_BMD_3400 ORDER BY marsha ,Unit ,Peoplesoft_EEID ,PEOPLESOFT_NAME;",Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE BMD_3400_ROLLUPS AS select b.Peoplesoft_EEID, b.PEOPLESOFT_NAME, ""3400"" AS Plan_ID , COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a LEFT JOIN unique_BMD_3400 AS b ON a.MARSHA_NEW = b.MARSHA WHERE a.SCOMP = 'Y' AND b.MARSHA <> '' GROUP BY b.Peoplesoft_EEID, b.PEOPLESOFT_NAME, Plan_ID;",Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE unique_Column_4364 AS ( SELECT marshacode, Unit, Property_Name FROM Column_4364 );",Annual Bonus Reporting 2018 Converted to AW.sas
"SELECT DISTINCT * FROM unique_Column_4364 ORDER BY marshacode ,Unit ,Property_Name;",Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE Column_4364_ROLLUPS AS select ""Column_4364"" AS Plan_ID , COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a LEFT JOIN unique_Column_4364 AS b ON a.MARSHA_NEW = b.marshacode WHERE a.SCOMP = 'Y' AND b.marshacode <> '' GROUP BY Plan_ID;",Annual Bonus Reporting 2018 Converted to AW.sas
 CREATE TABLE BMD_ROLLUPS AS ( SELECT  *  FROM Column_4364_ROLLUPS UNION ALL SELECT  *  FROM BMD_3400_ROLLUPS UNION ALL SELECT  *  FROM BMD_3399_ROLLUPS);,Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE unique_area_list AS ( SELECT MARSHA_Code, EMPL_ID, EMPLOYEE, PLID FROM area_list );",Annual Bonus Reporting 2018 Converted to AW.sas
"SELECT DISTINCT * FROM unique_area_list ORDER BY MARSHA_Code ,EMPL_ID ,EMPLOYEE ,PLID;",Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE AREA_ROLLUPS AS select b.EMPL_ID, b.EMPLOYEE, b.PLID , COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a INNER JOIN UNIQUE_AREA_LIST AS b ON a.MARSHA_NEW = b.MARSHA_Code WHERE a.SCOMP = 'Y' AND b.MARSHA_Code <> '' GROUP BY b.EMPL_ID, b.EMPLOYEE, b.PLID;",Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE unique_sales_list AS ( SELECT MARSHACode, EEID, PLID FROM sales_list );",Annual Bonus Reporting 2018 Converted to AW.sas
"SELECT DISTINCT * FROM unique_sales_list ORDER BY MARSHACode ,EEID ,PLID;",Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE SALES_ROLLUPS AS select b.EEID, b.PLID , COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( (  ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))/100 , ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100 )-1,.00001) AS RPI_PCT_CHG FROM ANNUAL a INNER JOIN UNIQUE_SALES_LIST AS b ON a.MARSHA_NEW = b.MARSHACode WHERE a.SCOMP = 'Y' AND b.MARSHACode <> '' GROUP BY b.EEID, b.PLID;",Annual Bonus Reporting 2018 Converted to AW.sas
"CREATE TABLE ""&OUTPUT.\Employee Tab &CURDATE..xlsx"" AS ( SELECT * FROM BMD_ROLLUPS) ;",Annual Bonus Reporting 2018 Converted to AW.sas
"CREATE TABLE ""&OUTPUT.\Employee Tab &CURDATE..xlsx"" AS ( SELECT * FROM AREA_ROLLUPS) ;",Annual Bonus Reporting 2018 Converted to AW.sas
"CREATE TABLE ""&OUTPUT.\Employee Tab &CURDATE..xlsx"" AS ( SELECT * FROM SALES_ROLLUPS) ;",Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE RPI_Kicker AS select a.MARSHA_NEW AS MARSHA, a.HOTEL_NAME, a.REGION , CASE WHEN b.RevPAR_Index___Change = . AND b.RC_Goal = . THEN ""N"" ELSE ""Y"" END AS Has_RPI_Goal , CASE WHEN a.BRND IN ( 'RZ','EB') THEN b.RC_GOAL ELSE RPI_LY * ( 1 + b.RevPAR_Index___Change) END AS Absolute_RPI_Goal , RPI_TY, a.RPI_PCT_CHG , CASE WHEN b.RevPAR_Index___Change = . AND b.RC_Goal = . THEN '' when b.RC_Goal = . AND a.RPI_PCT_CHG > b.RevPAR_Index___Change THEN ""Y"" when b.RevPAR_Index___Change = . AND a.RPI_TY > b.RC_Goal THEN ""Y"" ELSE ""N"" END AS Achieved_Goal FROM ANNUAL AS a LEFT JOIN AMERICAS_GOALS AS b ON a.MARSHA = b.MARSHA WHERE a.MF = 'M' AND a.REGION IN ( 'W_', 'E_', 'C_', 'S_') AND a.BRND IN ( 'JW', 'RZ', 'BG', 'EB', 'FS', 'DE', 'BR', 'GE', 'AK', 'CY', 'FI', 'RI', 'SH', 'TS', 'OX', 'AR', 'PR') AND a.RPI_TY > 0;",Annual Bonus Reporting 2018 Converted to AW.sas
"CREATE TABLE ""&OUTPUT.\RPI_Kicker &CURDATE..xlsx"" AS ( SELECT * FROM RPI_Kicker) ;",Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE MgrProd_BT_Prop_TY AS  ( select a.rpt_yr AS report_year, a.rpt_pd_mo AS STAY_PD_MO, a.sm_org_nm AS mgr_org_name, a.sm_mkt_nm AS market_name, a.sm_area_nm AS area_name, a.sm_eid AS executive_eid, a.sm_name AS executive_name, a.prop_cd AS marsha, CASE WHEN a.prp_org_nm is null THEN 'Not Participating' ELSE a.prp_org_nm END AS property_org, a.prp_mkt_nm AS prop_market, a.prp_area_nm AS prop_area, a.account_id AS goal_account_id, a.account_nm AS account_name, a.sm_role_nm AS role_title, CASE WHEN a.act_comp IN ( 'Assigned Account IN Organization') THEN 'N' ELSE 'Y' END AS Outbound_IND, SUM( a.ap_tot_rm_nts) AS RN, SUM( a.ap_tot_rm_rev) AS ROOM_REVENUE, 'SGR_Data' AS Data_Source FROM sgr_fact_smry_mgr_prp_acct_prod a WHERE rpt_yr IN ( %bquote( ')&curyr.%bquote( ')) AND sls_segment not IN ( 'Citywide') GROUP BY rpt_yr, rpt_pd_mo, sm_org_nm, sm_mkt_nm, sm_area_nm, sm_eid, sm_name, sm_role_nm, prop_cd, prp_org_nm, prp_mkt_nm, prp_area_nm, account_id, account_nm, act_comp, outbound_ind ORDER BY rpt_yr ) ;",AP_Combined_MISW.sas
 CREATE TABLE ALLPROP_MISW AS  ( SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER  )  ;,AP_Combined_MISW.sas
" CREATE TABLE ADD_PROPERTY_DATA AS SELECT A.*,B.MISW_FLAG,B.BRND AS BRAND_CODE,B.DOMINT AS DOM_INT,B.MF AS MGD_FRN FROM MGRPROD_BT_PROP_TY A LEFT JOIN ALLPROP_MISW B ON A.MARSHA=B.MARSHA ;",AP_Combined_MISW.sas
"CREATE TABLE ADD_PROPERTY_DATA2 AS ( SELECT  * , CASE WHEN  misw_flag='MI'  THEN 'Marriott Rewards Hotels' WHEN  misw_flag='SW'  THEN 'SPG Hotels' END AS SW_MI FROM ADD_PROPERTY_DATA );",AP_Combined_MISW.sas
ALTER TABLE ADD_PROPERTY_DATA2 DROP COLUMN misw_flag ;,AP_Combined_MISW.sas
" CREATE TABLE BTPROD.BT_IN_OUT_YTD AS ( SELECT  *  , FORMAT(UPPER( property_org ), VARCHAR(40)) AS property_org , FORMAT(data_source, VARCHAR(9)) AS data_source , FORMAT(sw_mi, VARCHAR(30)) AS sw_mi , '' AS market_name , '' AS area_name , UPPER( account_name ) AS account_name  FROM ADD_PROPERTY_DATA2 );",AP_Combined_MISW.sas
 CREATE TABLE BTPROD.BT_IN_OUT_YTD_&curyr. AS ( SELECT  *  FROM BTPROD.BT_IN_OUT_YTD );,AP_Combined_MISW.sas
" CREATE TABLE HAWAII_PROPS AS  ( SELECT MARSHACODE AS MARSHA, 'Hawaii' AS ORG_NAME FROM HICALAPROPDICT WHERE MONTH = &SHORTPD AND YEAR = &CURYR AND UPPER( REGION) = 'HAWAII'  ) ;",Archive_Hawaii_Property_List.sas
" CREATE TABLE HI_PROPS AS SELECT A.ORG_NAME, B.BRND AS BRAND, B.BRND_NAME AS BRAND_NAME, A.MARSHA, B.HOTEL_NAME AS PROPERTY_NAME, B.MISW_FLAG FROM HAWAII_PROPS A INNER JOIN AWPROD.PROPERTY_MASTER B ON A.MARSHA=B.MARSHA ORDER BY A.MARSHA ;",Archive_Hawaii_Property_List.sas
"CREATE TABLE ""&SWPROPS.\Hotel List Archive\Hawaii_Property_List_&NXTPD..xlsb"" DATA=HI_PROPS AS ( SELECT * FROM HI_PROPS) ;",Archive_Hawaii_Property_List.sas
" CREATE TABLE props AS  ( SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER WHERE BRND IN ( 'AL','AR','CY','EL','FI','FP','RI','SH','TS') AND UCASE( REGION_NAME) IN ( 'AMERICAS EAST','AMERICAS WEST') AND MF='M'  )  ;",AreaSales_ATRTop100.sas
"CREATE TABLE top_matched AS   ( select hi.highest_level_account_name AS highest_level_company_name, hi.highest_level_business_id AS highest_level_claritas_id, SUM( dr.rooms_qty) AS rn, SUM( CASE WHEN cc.exch_per_us_dlr_rte IN ( 0) THEN ROUND( dr.proj_net_local_rev_amt,2) ELSE ROUND( ( dr.proj_net_local_rev_amt/cc.exch_per_us_dlr_rte),0) END) AS rv FROM mrdw_fact_daily_revenue dr INNER JOIN mrdw_dim_currency_conversion cc ON ( dr.date_currency_stay_key = cc.date_currency_key) INNER JOIN mrdw_dim_date sd ON ( cc.date_key = sd.date_key) INNER JOIN mrdw_dim_market_rates mr ON ( dr.market_rate_key = mr.market_rate_key) INNER JOIN mrdw_dim_property pr ON ( mr.property_id = pr.property_id) INNER JOIN mrdw_dim_status_accom AS a19 ON ( a19.status_accom_key = DR.status_accom_key) INNER JOIN mrdw_brg_master_account_ids m ON ( dr.confo_num_curr_id = m.confo_num_curr_id AND dr.confo_num_orig_id = m.confo_num_orig_id AND dr.date_create_key = m.date_create_key) INNER JOIN edw_dim_highest_level_account_v hi ON ( hi.account_nat_key = m.derived_account_id ) INNER JOIN edw_dim_account_site edw ON ( edw.account_nat_key = m.derived_account_id) LEFT OUTER JOIN mrdw_brg_res_account_ids br ON ( dr.confo_num_curr_id = br.confo_num_curr_id AND dr.confo_num_orig_id = br.confo_num_orig_id AND dr.date_create_key = br.date_create_key) WHERE ( 100*sd.year_cal+sd.month_cal_id >= &YBEG. AND 100*sd.year_cal+sd.month_cal_id <= &curyrpd. ) AND dr.proj_net_local_rev_amt/dr.rooms_qty NOT IN ( 999,999.99,9999,9999.99,99999,99999.99,999999,999999.99) AND edw.dw_current_ind=1 AND pr.property_cd IN ( %prp_list) GROUP BY highest_level_claritas_id, highest_level_company_name ORDER BY rn desc LIMIT 100 ) ;",AreaSales_ATRTop100.sas
"CREATE TABLE top_unmatched AS   ( select br.company_cleansed_nm AS cleansed_company_name, SUM( dr.rooms_qty) AS rn, SUM( CASE WHEN cc.exch_per_us_dlr_rte IN ( 0) THEN ROUND( dr.proj_net_local_rev_amt,2) ELSE ROUND( ( dr.proj_net_local_rev_amt/cc.exch_per_us_dlr_rte),0) END) AS rv FROM mrdw_fact_daily_revenue dr INNER JOIN mrdw_dim_currency_conversion cc ON ( dr.date_currency_stay_key = cc.date_currency_key) INNER JOIN mrdw_dim_date sd ON ( cc.date_key = sd.date_key) INNER JOIN mrdw_dim_market_rates mr ON ( dr.market_rate_key = mr.market_rate_key) INNER JOIN mrdw_dim_property pr ON ( mr.property_id = pr.property_id) INNER JOIN mrdw_dim_status_accom AS a19 ON ( a19.status_accom_key = DR.status_accom_key) LEFT OUTER JOIN mrdw_brg_res_account_ids br ON ( dr.confo_num_curr_id = br.confo_num_curr_id AND dr.confo_num_orig_id = br.confo_num_orig_id AND dr.date_create_key = br.date_create_key) INNER JOIN mrdw_brg_unmatched_company u ON ( dr.confo_num_curr_id=u.confo_num_curr_id AND dr.confo_num_orig_id=u.confo_num_orig_id AND dr.date_create_key=u.date_create_key) WHERE ( 100*sd.year_cal+sd.month_cal_id >= &YBEG. AND 100*sd.year_cal+sd.month_cal_id <= &curyrpd. ) AND dr.proj_net_local_rev_amt/dr.rooms_qty NOT IN ( 999,999.99,9999,9999.99,99999,99999.99,999999,999999.99) AND pr.property_cd IN ( %prp_list) GROUP BY cleansed_company_name ORDER BY rn desc LIMIT 100 ) ;",AreaSales_ATRTop100.sas
" CREATE TABLE top_matched2 AS ( SELECT  *  , 'matched' AS cleansed_company_name  FROM top_matched );",AreaSales_ATRTop100.sas
" CREATE TABLE top_unmatched2 AS ( SELECT  *  , 'unmatched' AS highest_level_company_name , 0 AS highest_level_claritas_id , REPLACE( cleansed_company_name,""'"",""''"" ) AS cleansed_company_name  FROM top_unmatched );",AreaSales_ATRTop100.sas
" CREATE TABLE top2hundred AS ( SELECT  *  , FORMAT(cleansed_company_name, VARCHAR(100)) AS cleansed_company_name  FROM top_matched2 UNION ALL SELECT  *  , FORMAT(cleansed_company_name, VARCHAR(100)) AS cleansed_company_name  FROM top_unmatched2);",AreaSales_ATRTop100.sas
SELECT * FROM top2hundred ORDER BY rn desc;,AreaSales_ATRTop100.sas
CREATE TABLE tophundred AS select * FROM top2hundred;,AreaSales_ATRTop100.sas
"CREATE TABLE tophundred2 AS SELECT * FROM ( SELECT *, RANK() OVER (  ORDER BY RN DESC  ) AS Rank FROM tophundred2);",AreaSales_ATRTop100.sas
" CREATE TABLE top AS ( SELECT  * , CASE WHEN  cleansed_company_name = 'matched'  THEN highest_level_company_name ELSE cleansed_company_name END AS company_name FROM tophundred2 );",AreaSales_ATRTop100.sas
CREATE TABLE matched AS ( SELECT  *  FROM tophundred2  WHERE cleansed_company_name='matched');,AreaSales_ATRTop100.sas
CREATE TABLE unmatched AS ( SELECT  *  FROM tophundred2 );,AreaSales_ATRTop100.sas
" CREATE TABLE atr_pull_matched AS   ( select hi.highest_level_account_name AS company_name, hi.highest_level_business_id AS highest_level_claritas_id, avg( dr.days_stay_qty) AS los, pr.property_cd AS Marsha, sd.year_cal AS year, sd.month_cal_id AS month, sd.qtr_cal_id AS qtr, CASE WHEN sd.weekend_ind = 1 THEN 'Weekend' ELSE 'Weekday' END AS Weekday_Weekend, sd.date_dt, sd.ab_day_of_week_cd, sd.week_acctg_id, CASE WHEN mr.market_type_cd IN ( 'G') THEN 'Group' when mr.market_type_cd IN ( 'C') THEN 'Contract' ELSE 'Transient' END AS Rate_Type, SUM( dr.rooms_qty) AS rn, SUM( CASE WHEN cc.exch_per_us_dlr_rte IN ( 0) THEN ROUND( dr.proj_net_local_rev_amt,2) ELSE ROUND( ( dr.proj_net_local_rev_amt/cc.exch_per_us_dlr_rte),0) END) AS rv FROM mrdw_fact_daily_revenue dr INNER JOIN mrdw_dim_currency_conversion cc ON ( dr.date_currency_stay_key = cc.date_currency_key) INNER JOIN mrdw_dim_date sd ON ( cc.date_key = sd.date_key) INNER JOIN mrdw_dim_market_rates mr ON ( dr.market_rate_key = mr.market_rate_key) INNER JOIN mrdw_dim_property pr ON ( mr.property_id = pr.property_id) INNER JOIN mrdw_dim_status_accom AS a19 ON ( a19.status_accom_key = DR.status_accom_key) INNER JOIN mrdw_brg_master_account_ids m ON ( dr.confo_num_curr_id = m.confo_num_curr_id AND dr.confo_num_orig_id = m.confo_num_orig_id AND dr.date_create_key = m.date_create_key) INNER JOIN edw_dim_highest_level_account_v hi ON ( hi.account_nat_key = m.derived_account_id ) INNER JOIN edw_dim_account_site edw ON ( edw.account_nat_key = m.derived_account_id) LEFT OUTER JOIN mrdw_brg_res_account_ids br ON ( dr.confo_num_curr_id = br.confo_num_curr_id AND dr.confo_num_orig_id = br.confo_num_orig_id AND dr.date_create_key = br.date_create_key) WHERE ( 100*sd.year_cal+sd.month_cal_id >= &YRBEG2YR. AND 100*sd.year_cal+sd.month_cal_id <= &curyrpd. ) AND highest_level_claritas_id IN ( %macc_list) AND dr.proj_net_local_rev_amt/dr.rooms_qty NOT IN ( 999,999.99,9999,9999.99,99999,99999.99,999999,999999.99) AND edw.dw_current_ind=1 AND pr.property_cd IN ( %prp_list) GROUP BY highest_level_claritas_id, company_name, Marsha, year, month, qtr, Weekday_Weekend, Rate_Type, sd.date_dt, ab_day_of_week_cd, sd.week_acctg_id ORDER BY Marsha, year, month, qtr  ) ;",AreaSales_ATRTop100.sas
" CREATE TABLE atr_pull_unmatched AS   ( select br.company_cleansed_nm AS company_name, avg( dr.days_stay_qty) AS los, pr.property_cd AS Marsha, sd.year_cal AS year, sd.month_cal_id AS month, sd.qtr_cal_id AS qtr, CASE WHEN sd.weekend_ind = 1 THEN 'Weekend' ELSE 'Weekday' END AS Weekday_Weekend, sd.date_dt, sd.ab_day_of_week_cd, sd.week_acctg_id, CASE WHEN mr.market_type_cd IN ( 'G') THEN 'Group' when mr.market_type_cd IN ( 'C') THEN 'Contract' ELSE 'Transient' END AS Rate_Type, SUM( dr.rooms_qty) AS rn, SUM( CASE WHEN cc.exch_per_us_dlr_rte IN ( 0) THEN ROUND( dr.proj_net_local_rev_amt,2) ELSE ROUND( ( dr.proj_net_local_rev_amt/cc.exch_per_us_dlr_rte),0) END) AS rv FROM mrdw_fact_daily_revenue dr INNER JOIN mrdw_dim_currency_conversion cc ON ( dr.date_currency_stay_key = cc.date_currency_key) INNER JOIN mrdw_dim_date sd ON ( cc.date_key = sd.date_key) INNER JOIN mrdw_dim_market_rates mr ON ( dr.market_rate_key = mr.market_rate_key) INNER JOIN mrdw_dim_property pr ON ( mr.property_id = pr.property_id) INNER JOIN mrdw_dim_status_accom AS a19 ON ( a19.status_accom_key = DR.status_accom_key) LEFT OUTER JOIN mrdw_brg_res_account_ids br ON ( dr.confo_num_curr_id = br.confo_num_curr_id AND dr.confo_num_orig_id = br.confo_num_orig_id AND dr.date_create_key = br.date_create_key) INNER JOIN mrdw_brg_unmatched_company u ON ( dr.confo_num_curr_id=u.confo_num_curr_id AND dr.confo_num_orig_id=u.confo_num_orig_id AND dr.date_create_key=u.date_create_key) WHERE ( 100*sd.year_cal+sd.month_cal_id >= &YRBEG2YR. AND 100*sd.year_cal+sd.month_cal_id <= &curyrpd. ) AND company_name IN ( %unmatch) AND dr.proj_net_local_rev_amt/dr.rooms_qty NOT IN ( 999,999.99,9999,9999.99,99999,99999.99,999999,999999.99) AND pr.property_cd IN ( %prp_list) GROUP BY company_name, Marsha, year, month, qtr, Weekday_Weekend, Rate_Type, sd.date_dt, ab_day_of_week_cd, sd.week_acctg_id ORDER BY Marsha, year, month, qtr  ) ;",AreaSales_ATRTop100.sas
" CREATE TABLE atr_pull_unmatched2 AS ( SELECT  *  , 0 AS highest_level_claritas_id  FROM atr_pull_unmatched );",AreaSales_ATRTop100.sas
 CREATE TABLE atr_pull AS ( SELECT  *  FROM atr_pull_matched UNION ALL SELECT  *  FROM atr_pull_unmatched2);,AreaSales_ATRTop100.sas
" CREATE TABLE atr_pull2a AS select coalesce( a.company_name,b.company_name) AS company_name, coalesce( a.highest_level_claritas_id,b.highest_level_claritas_id) AS highest_level_claritas_id, coalesce( a.los,0) AS los, a.marsha, b.marsha AS marsha2, coalesce( a.date_dt,b.date_dt+364) AS stay_date_ty format=date9., coalesce( b.date_dt,a.date_dt-364) AS stay_date_ly format=date9., a.month, a.qtr, a.year, coalesce( a.weekday_weekend,b.weekday_weekend) AS weekday_weekend, coalesce( a.ab_day_of_week_cd,b.ab_day_of_week_cd) AS dayofweek, coalesce( a.rate_type,b.rate_type) AS rate_type, coalesce( a.rn,0) AS rn, coalesce( a.rv,0) AS rv, coalesce( b.rn,0) AS rn_ly, coalesce( b.rv,0) AS rv_ly FROM atr_pull AS a full JOIN atr_pull AS b ON a.marsha=b.marsha AND a.date_dt=b.date_dt+364 AND a.company_name=b.company_name AND a.ab_day_of_week_cd=b.ab_day_of_week_cd AND a.rate_type=b.rate_type AND a.highest_level_claritas_id=b.highest_level_claritas_id AND b.date_dt=a.date_dt-364 WHERE coalesce( a.year,b.year+1)=&curyr.;",AreaSales_ATRTop100.sas
" CREATE TABLE atr_pull2b AS select coalesce( a.company_name,b.company_name) AS company_name, coalesce( a.highest_level_claritas_id,b.highest_level_claritas_id) AS highest_level_claritas_id, coalesce( a.los,0) AS los, a.marsha, b.marsha AS marsha2, coalesce( a.date_dt,b.date_dt+364) AS stay_date_ty format=date9., coalesce( b.date_dt,a.date_dt-364) AS stay_date_ly format=date9., a.month, a.qtr, a.year, coalesce( a.weekday_weekend,b.weekday_weekend) AS weekday_weekend, coalesce( a.ab_day_of_week_cd,b.ab_day_of_week_cd) AS dayofweek, coalesce( a.rate_type,b.rate_type) AS rate_type, coalesce( a.rn,0) AS rn, coalesce( a.rv,0) AS rv, coalesce( b.rn,0) AS rn_ly, coalesce( b.rv,0) AS rv_ly FROM atr_pull AS a full JOIN atr_pull AS b ON a.marsha=b.marsha AND a.date_dt=b.date_dt+364 AND a.company_name=b.company_name AND a.ab_day_of_week_cd=b.ab_day_of_week_cd AND a.rate_type=b.rate_type AND a.highest_level_claritas_id=b.highest_level_claritas_id AND b.date_dt=a.date_dt-364 WHERE coalesce( a.year,b.year+1)=&lastyr.;",AreaSales_ATRTop100.sas
 CREATE TABLE atr_pull2 AS ( SELECT  *  FROM atr_pull2a UNION ALL SELECT  *  FROM atr_pull2b);,AreaSales_ATRTop100.sas
"CREATE TABLE atr_pull3 AS ( SELECT  *  , EXTRACT(WEEK FROM stay_date_ty ) AS week , EXTRACT(WEEK FROM stay_date_ly ) AS week_ly , EXTRACT(MONTH FROM stay_date_ly ) AS month_ly , EXTRACT(QUARTER FROM stay_date_ly ) AS qtr_ly , EXTRACT(YEAR FROM stay_date_ly ) AS year_ly , REPLACE( company_name,""'"",""''"" ) AS company_name , CASE WHEN  month=''  THEN month( stay_date_ty ) END AS month, CASE WHEN  qtr=''  THEN qtr( stay_date_ty ) END AS qtr, CASE WHEN  year=''  THEN year( stay_date_ty ) END AS year, CASE WHEN  marsha=''  THEN marsha2 END AS marsha FROM atr_pull2 );",AreaSales_ATRTop100.sas
ALTER TABLE atr_pull3 DROP COLUMN marsha2 ;,AreaSales_ATRTop100.sas
" CREATE TABLE atr_pull3b AS select a.*, b.rank FROM atr_pull3 AS a LEFT JOIN top AS b ON RTRIM( a.company_name)=RTRIM( b.company_name) AND a.highest_level_claritas_id=b.highest_level_claritas_id WHERE year IN ( &curyr.,&lstyear.  ) ;",AreaSales_ATRTop100.sas
" CREATE TABLE atr_pull4 AS select a.*, b.rd, b.region, b.region_name, b.owner, b.hotel_name, b.sfo_org, b.sfo_market, b.acomp, b.state, b.brnd, b.market_name FROM atr_pull3b a LEFT JOIN props b ON ( a.marsha=b.marsha ) ;",AreaSales_ATRTop100.sas
"CREATE TABLE atr_pull4b AS ( SELECT  *  , FORMAT(Region, VARCHAR(4)) AS Region , FORMAT(AST, VARCHAR(50)) AS AST , FORMAT(company_name, VARCHAR(100)) AS company_name , FORMAT(MARSHA, VARCHAR(5)) AS MARSHA , FORMAT(WEEKDAY_WEEKEND, VARCHAR(7)) AS WEEKDAY_WEEKEND , FORMAT(DAYOFWEEK, VARCHAR(3)) AS DAYOFWEEK , FORMAT(RATE_TYPE, VARCHAR(9)) AS RATE_TYPE , FORMAT(OWNER, VARCHAR(50)) AS OWNER , FORMAT(ACOMP, VARCHAR(1)) AS ACOMP , FORMAT(MARKET, VARCHAR(37)) AS MARKET , FORMAT(RD, VARCHAR(30)) AS AD , FORMAT(AMERICAS_REGION, VARCHAR(25)) AS AMERICAS_REGION , FORMAT(HAWAII, VARCHAR(1)) AS HAWAII , market_name AS Market , Region_Name AS Americas_Region , CASE WHEN  sfo_org=''  THEN 'Non - Deployed' ELSE sfo_org || ' - ' || sfo_market END AS AST, CASE WHEN  Region = 'E_'  THEN 'East' WHEN  Region = 'W_'  THEN 'West' END AS Region, CASE WHEN  State = 'HI'  THEN 'Y' ELSE 'N' END AS Hawaii FROM atr_pull4 );",AreaSales_ATRTop100.sas
"ALTER TABLE atr_pull4b DROP COLUMN sfo_org ,  sfo_market ,  market_name ,  region_name ,  state ,  RD ;",AreaSales_ATRTop100.sas
"SELECT * FROM atr_pull4b ORDER BY stay_date_ty ,marsha;",AreaSales_ATRTop100.sas
 CREATE TABLE atr_pull5a AS select * FROM atr_pull4b WHERE year=&lstyr.;,AreaSales_ATRTop100.sas
 CREATE TABLE atr_pull5b AS select * FROM atr_pull4b WHERE year=&curyr. AND month<=&shortpd.;,AreaSales_ATRTop100.sas
 CREATE TABLE atr_pull5 AS ( SELECT  *  FROM atr_pull5a UNION ALL SELECT  *  FROM atr_pull5b);,AreaSales_ATRTop100.sas
" CREATE TABLE rmblk AS select * FROM share.rmblk2006 WHERE hotel_cd IN ( select marsha FROM aw_tgt.property_master WHERE region IN ( 'EC','GC')) andEXTRACT(YEAR FROM arr_date) = 2019 andEXTRACT(MONTH FROM arr_date) <= 10;",Asia_SGDS_Data.sas
" CREATE TABLE bk AS select * FROM share.bkdata2006 WHERE hotel_cd IN ( select marsha FROM aw_tgt.property_master WHERE region IN ( 'EC','GC')) andEXTRACT(YEAR FROM arr_dt) = 2019 andEXTRACT(MONTH FROM arr_dt) <= 10;",Asia_SGDS_Data.sas
" CREATE TABLE fs AS select * FROM share.fsdata2006 WHERE hotel_cd IN ( select marsha FROM aw_tgt.property_master WHERE region IN ( 'EC','GC')) AND book_key IN ( select book_key FROM bk ) ;",Asia_SGDS_Data.sas
CREATE TABLE fs AS ( SELECT  *  FROM fs );,Asia_SGDS_Data.sas
"ALTER TABLE fs DROP COLUMN func_st_tm ,  func_en_tm ;",Asia_SGDS_Data.sas
" CREATE TABLE AUTO_HOTELS AS ( SELECT  *  , FORMAT(MDY( SUBSTRING( MI_OPEN_DATE, 1, 2), 1, SUBSTRING( MI_OPEN_DATE, 7, 4) ), ""ddMMMyyyy"") AS OPENDATE2 , FORMAT(( DATEADD('MONTH',-12,OPENDATE2) ), ""ddMMMyyyy"") AS ONE_YEAR_PRE , FORMAT(( DATEADD('MONTH',+12,OPENDATE2) ), ""ddMMMyyyy"") AS ONE_YEAR_POST , FORMAT(( DATEADD('MONTH',+24,OPENDATE2) ), ""ddMMMyyyy"") AS TWO_YEARS_POST , CAST( SUBSTRING( MI_OPEN_DATE, 7, 4) || SUBSTRING( MI_OPEN_DATE, 1, 2) AS INT  ) AS YEARMN_OPEN  FROM FDD_COMP );",Autograph Hotel Groupings by Open Date Converted to AW.sas
" CREATE TABLE RECENT_STR_DATA AS select a.MARSHA, b.MARSHA_NEW, b.BRND_NAME , e.Comp_Status_per_YE17_Tree_Node AS FRAN_COMP , a.YRMNTH , a.MARAVAIL, a.MARSOLD, a.MARREV FROM CMP.STR_MONTHLY_DATA a LEFT JOIN TGT_BUS.PROPERTY_MASTER_MISW_HIST AS b ON a.MARSHA = b.MARSHA AND a.ASOF_YRMO = b.ASOF_YRMO LEFT JOIN FDD_Comp AS e ON b.MARSHA_NEW = e.MARSHA WHERE a.TIMEF ='MONTH' AND a.DATA_CATEGORY = 'Rooms' AND a.CURRENCY_TYPE = 'Constant USD' AND a.ASOF_YRMO = &YRMNTH. AND a.YRMNTH >= &YRMNTH. - 500 AND b.COUNTRY IN ( 'United States', 'Canada') AND a.MARAVAIL * a.MARREV > 0 AND e.Comp_Status_per_YE17_Tree_Node <> """" AND b.BRND IN ( 'AK', 'DE', 'LC', 'TX') ORDER BY a.MARSHA, b.MARSHA_NEW, b.BRND_NAME, e.Comp_Status_per_YE17_Tree_Node;",Autograph Hotel Groupings by Open Date Converted to AW.sas
" CREATE TABLE OLD_STR_DATA AS select a.MARSHA, b.MARSHA_NEW, b.BRND_NAME , e.Comp_Status_per_YE17_Tree_Node AS FRAN_COMP , a.YRMNTH , a.MARCAP AS MARAVAIL, a.MAROCC AS MARSOLD, a.MARREV FROM OldStar.x60_month_cd a LEFT JOIN TGT_BUS.PROPERTY_MASTER_MISW_HIST AS b ON a.MARSHA = b.MARSHA LEFT JOIN FDD_Comp AS e ON b.MARSHA_NEW = e.MARSHA WHERE a.YRMNTH < &YRMNTH. - 500 AND b.asof_yrmo = &YRMNTH. AND b.COUNTRY IN ( 'United States', 'Canada') AND a.MARCAP * a.MARREV > 0 AND e.Comp_Status_per_YE17_Tree_Node <> """" AND b.BRND IN ( 'AK', 'DE', 'LC', 'TX') ORDER BY a.MARSHA, b.MARSHA_NEW, b.BRND_NAME, e.Comp_Status_per_YE17_Tree_Node;",Autograph Hotel Groupings by Open Date Converted to AW.sas
" CREATE TABLE STR_DATA AS ( SELECT  *  , FORMAT(mdy( SUBSTRING ( yrmnth,5,6),1,SUBSTRING( yrmnth, 1, 4)), ""ddMMMyyyy"") AS date  FROM RECENT_STR_DATA UNION ALL SELECT  *  , FORMAT(mdy( SUBSTRING ( yrmnth,5,6),1,SUBSTRING( yrmnth, 1, 4)), ""ddMMMyyyy"") AS date  FROM OLD_STR_DATA);",Autograph Hotel Groupings by Open Date Converted to AW.sas
" CREATE TABLE auto_data AS select a.MARSHA, a.BRND_NAME, a.YRMNTH , a.MARAVAIL, a.MARSOLD, a.MARREV , c.opendate2 AS MI_OPEN_DATE , CASE WHEN a.date = c.opendate2 THEN ""Open_Month"" when a.date >= c.One_Year_Pre AND a.date < c.opendate2 THEN ""One Year Pre"" when a.date > c.opendate2 AND a.date <= c.One_Year_Post THEN ""One Year Post"" when a.date > c.One_Year_Post AND a.date <= c.Two_Years_Post THEN ""Two Years Post"" ELSE """" END AS Time_Period , CASE WHEN c.yearmn_open <= &YRMNTH. - 200 THEN ""Two & Three Year"" when c.yearmn_open > &YRMNTH. - 200 AND c.yearmn_open <= &YRMNTH. - 100 THEN ""One Year"" when c.yearmn_open > &YRMNTH. - 100 THEN ""Less Than One Year"" ELSE """" END AS Hotel_Grouping FROM STR_DATA a LEFT JOIN auto_hotels AS c ON a.MARSHA_NEW=c.MARSHA;",Autograph Hotel Groupings by Open Date Converted to AW.sas
" CREATE TABLE good_data_flags_TY AS select a.*, COUNT( a.marsha) AS complete_months_TY FROM auto_data a GROUP BY a.marsha, a.time_period;",Autograph Hotel Groupings by Open Date Converted to AW.sas
"CREATE TABLE Good_Data AS ( SELECT  * , CASE WHEN  time_period = ""One Year Pre"" AND complete_months_TY = 12  THEN ""Y"" WHEN  Hotel_Grouping = ""One Year"" AND time_period = ""One Year Post"" AND complete_months_TY = 12  THEN ""Y"" WHEN  Hotel_Grouping = ""Two & Three Year"" AND time_period = ""One Year Post"" AND complete_months_TY = 12  THEN ""Y"" WHEN  Hotel_Grouping = ""Two & Three Year"" AND time_period = ""Two Years Post"" AND complete_months_TY = 12  THEN ""Y"" END AS good_data FROM good_data_flags_TY );",Autograph Hotel Groupings by Open Date Converted to AW.sas
ALTER TABLE Good_Data DROP COLUMN complete_months_TY ;,Autograph Hotel Groupings by Open Date Converted to AW.sas
"CREATE TABLE Good_Data_DE_DUPED AS (SELECT DISTINCT * FROM Good_Data ORDER BY marsha ,time_period ,hotel_grouping ,good_data);",Autograph Hotel Groupings by Open Date Converted to AW.sas
" CREATE TABLE no_dupes AS select a.marsha, a.hotel_grouping, COUNT( a.good_data) AS good_data FROM Good_Data_DE_DUPED a GROUP BY a.marsha, a.hotel_grouping;",Autograph Hotel Groupings by Open Date Converted to AW.sas
" CREATE TABLE no_dupes2 AS ( SELECT  * , CASE WHEN  hotel_grouping = ""One Year"" AND good_data = 2  THEN ""Y"" WHEN  hotel_grouping = ""Two & Three Year"" AND good_data = 3  THEN ""Y"" END AS good_data_all_years FROM no_dupes );",Autograph Hotel Groupings by Open Date Converted to AW.sas
" CREATE TABLE Good_TY_Absolute_Data AS select a.*, b.good_data_all_years FROM Good_Data a LEFT JOIN no_dupes2 AS b ON a.marsha=b.marsha;",Autograph Hotel Groupings by Open Date Converted to AW.sas
"CREATE TABLE ""&OUTPUT.\Autograph Pre Post Conversion &Run_Date..xlsx"" AS ( SELECT * FROM Good_TY_Absolute_Data) ;",Autograph Hotel Groupings by Open Date Converted to AW.sas
"CREATE TABLE DateFormats  ( format , hadoopfmt );",AWupload.sas
INSERT INTO DateFormats  VALUES($N8601B timestamp);,AWupload.sas
INSERT INTO DateFormats  VALUES($N8601BA timestamp);,AWupload.sas
INSERT INTO DateFormats  VALUES($N8601E timestamp);,AWupload.sas
INSERT INTO DateFormats  VALUES($N8601EA timestamp);,AWupload.sas
INSERT INTO DateFormats  VALUES($N8601EH timestamp);,AWupload.sas
INSERT INTO DateFormats  VALUES($N8601EX timestamp);,AWupload.sas
INSERT INTO DateFormats  VALUES($N8601H timestamp);,AWupload.sas
INSERT INTO DateFormats  VALUES($N8601X timestamp);,AWupload.sas
INSERT INTO DateFormats  VALUES(B8601DA date);,AWupload.sas
INSERT INTO DateFormats  VALUES(B8601DN timestamp);,AWupload.sas
INSERT INTO DateFormats  VALUES(B8601DT timestamp);,AWupload.sas
INSERT INTO DateFormats  VALUES(B8601DX timestamp);,AWupload.sas
INSERT INTO DateFormats  VALUES(B8601DZ timestamp);,AWupload.sas
INSERT INTO DateFormats  VALUES(B8601LX timestamp);,AWupload.sas
INSERT INTO DateFormats  VALUES(B8601LZ time);,AWupload.sas
INSERT INTO DateFormats  VALUES(B8601TM time);,AWupload.sas
INSERT INTO DateFormats  VALUES(B8601TX time);,AWupload.sas
INSERT INTO DateFormats  VALUES(B8601TZ time);,AWupload.sas
INSERT INTO DateFormats  VALUES(DATE date);,AWupload.sas
INSERT INTO DateFormats  VALUES(DATEAMPM timestamp);,AWupload.sas
INSERT INTO DateFormats  VALUES(DATETIME timestamp);,AWupload.sas
INSERT INTO DateFormats  VALUES(DAY date);,AWupload.sas
INSERT INTO DateFormats  VALUES(DDMMYY date);,AWupload.sas
INSERT INTO DateFormats  VALUES(DOWNAME date);,AWupload.sas
INSERT INTO DateFormats  VALUES(DTDATE timestamp);,AWupload.sas
INSERT INTO DateFormats  VALUES(DTMONYY timestamp);,AWupload.sas
INSERT INTO DateFormats  VALUES(DTWKDATX timestamp);,AWupload.sas
INSERT INTO DateFormats  VALUES(DTYEAR timestamp);,AWupload.sas
INSERT INTO DateFormats  VALUES(DTYYQC timestamp);,AWupload.sas
INSERT INTO DateFormats  VALUES(E8601DA date);,AWupload.sas
INSERT INTO DateFormats  VALUES(E8601DN timestamp);,AWupload.sas
INSERT INTO DateFormats  VALUES(E8601DT timestamp);,AWupload.sas
INSERT INTO DateFormats  VALUES(E8601DX timestamp);,AWupload.sas
INSERT INTO DateFormats  VALUES(E8601DZ timestamp);,AWupload.sas
INSERT INTO DateFormats  VALUES(E8601LX timestamp);,AWupload.sas
INSERT INTO DateFormats  VALUES(E8601LZ time);,AWupload.sas
INSERT INTO DateFormats  VALUES(E8601TM time);,AWupload.sas
INSERT INTO DateFormats  VALUES(E8601TX time);,AWupload.sas
INSERT INTO DateFormats  VALUES(E8601TZ time);,AWupload.sas
INSERT INTO DateFormats  VALUES(HHMM time);,AWupload.sas
INSERT INTO DateFormats  VALUES(HOUR time);,AWupload.sas
INSERT INTO DateFormats  VALUES(JULDAY date);,AWupload.sas
INSERT INTO DateFormats  VALUES(JULIAN date);,AWupload.sas
INSERT INTO DateFormats  VALUES(MDYAMPM timestamp);,AWupload.sas
INSERT INTO DateFormats  VALUES(MMDDYY date);,AWupload.sas
INSERT INTO DateFormats  VALUES(MMSS time);,AWupload.sas
INSERT INTO DateFormats  VALUES(MMYY date);,AWupload.sas
INSERT INTO DateFormats  VALUES(MONNAME date);,AWupload.sas
INSERT INTO DateFormats  VALUES(MONTH date);,AWupload.sas
INSERT INTO DateFormats  VALUES(MONYY date);,AWupload.sas
INSERT INTO DateFormats  VALUES(PDJULG date);,AWupload.sas
INSERT INTO DateFormats  VALUES(PDJULI date);,AWupload.sas
INSERT INTO DateFormats  VALUES(QTR date);,AWupload.sas
INSERT INTO DateFormats  VALUES(QTRR date);,AWupload.sas
INSERT INTO DateFormats  VALUES(TIME time);,AWupload.sas
INSERT INTO DateFormats  VALUES(TIMEAMPM timestamp);,AWupload.sas
INSERT INTO DateFormats  VALUES(TOD timestamp);,AWupload.sas
INSERT INTO DateFormats  VALUES(WEEKDATE date);,AWupload.sas
INSERT INTO DateFormats  VALUES(WEEKDATX date);,AWupload.sas
INSERT INTO DateFormats  VALUES(WEEKDAY date);,AWupload.sas
INSERT INTO DateFormats  VALUES(WEEKU time);,AWupload.sas
INSERT INTO DateFormats  VALUES(WEEKV time);,AWupload.sas
INSERT INTO DateFormats  VALUES(WEEKW time);,AWupload.sas
INSERT INTO DateFormats  VALUES(WORDDATE date);,AWupload.sas
INSERT INTO DateFormats  VALUES(WORDDATX date);,AWupload.sas
INSERT INTO DateFormats  VALUES(YEAR date);,AWupload.sas
INSERT INTO DateFormats  VALUES(YYMM date);,AWupload.sas
INSERT INTO DateFormats  VALUES(YYMMDD date);,AWupload.sas
INSERT INTO DateFormats  VALUES(YYMON date);,AWupload.sas
INSERT INTO DateFormats  VALUES(YYQ date);,AWupload.sas
INSERT INTO DateFormats  VALUES(YYQR date);,AWupload.sas
CREATE INDEX format ON DateFormats (format);,AWupload.sas
CREATE TABLE summaryforconversion_max AS (SELECT MAX(_numeric_) AS _numeric_ FROM &intab. );,AWupload.sas
CREATE TABLE summaryforconversion_min AS (SELECT MIN(_numeric_) AS _numeric_ FROM &intab. );,AWupload.sas
CREATE TABLE summaryforconversion_sum AS (SELECT SUM(_numeric_) AS _numeric_ FROM &intab. );,AWupload.sas
" CREATE TABLE summaryforconversiont AS ( SELECT  *  , ' ' AS col1 , abs( col1 ) AS col1  FROM summaryforconversion_sumt UNION ALL SELECT  *  , ' ' AS col1 , abs( col1 ) AS col1  FROM summaryforconversion_maxt UNION ALL SELECT  *  , ' ' AS col1 , abs( col1 ) AS col1  FROM summaryforconversion_mint WHERE a);",AWupload.sas
" CREATE TABLE summaryforconversiont2  AS select _name_ AS name, max( col1) AS max, max( col2) AS SUM FROM summaryforconversiont GROUP BY _name_;",AWupload.sas
CREATE INDEX name ON summaryforconversiont2(name);,AWupload.sas
SELECT * FROM contents ORDER BY VARnum;,AWupload.sas
 select COUNT( *) into :numVARs FROM contents;,AWupload.sas
" select COUNT( *) into :badchars FROM &intab. WHERE CHARINDEX('',&VAR.,'oksnp')>0;",AWupload.sas
" CREATE TABLE contents AS ( SELECT  * , CASE WHEN  TRIM( name)=""&VAR.""  THEN LENGTH*2 END AS LENGTH FROM Contents );",AWupload.sas
   DROP TABLE IF EXISTS &outtab. ) by odbc ;,AWupload.sas
 CREATE HADOOP TABLE &outtab. (  &TabFmt. ) STORED AS PARQUETFILE ) by odbc   DROP TABLE IF EXISTS &eid..TEMP_Load ) by odbc  ;,AWupload.sas
 Create TABLE &eid..TEMP_Load (  &TabFmt. )  ,AWupload.sas
 select COUNT( *) format=32. into :numrows FROM &intab.;,AWupload.sas
INSERT INTO TABLE awprodz.temp_load SELECT * FROM &intab.;,AWupload.sas
  INSERT INTO &outtab. select * FROM &eid..TEMP_Load) by odbc  delete FROM &eid..temp_load,AWupload.sas
"  DROP TABLE IF EXISTS &eid..TEMP_Load) by odbc  CALL AW_TGT_PROXY_DBO.GRANT_ON_TABLE( %quote( %'%scan( &outtab.,1,. )%'),%quote( %'%scan( &outtab.,2,. )%') ) ",AWupload.sas
 select Records_Uploaded into :RecsUp FROM  (  select COUNT( *) AS Records_Uploaded FROM &outtab. ) ;,AWupload.sas
   DROP TABLE aw_stg_bus_dbo.tmp_temp ) by odbc ;,AW_ACTIVITY_UPLOAD.sas
" CREATE TABLE AW_STG_BUS_DBO.TMP_TEMP (  production_month INTEGER, production_year INTEGER, stay_month INTEGER, stay_quarter INTEGER, stay_year INTEGER, property_id VARCHAR( 12), production_type_cd VARCHAR( 4000), sales_market_segment_cd VARCHAR( 256), industry_CLASS_txt VARCHAR( 256), room_nights DOUBLE, revenue_local DOUBLE, revenue_usd DOUBLE, num_of_groups INTEGER, room_nights_py DOUBLE, revenue_py_local DOUBLE, revenue_py_usd DOUBLE, ytd_room_nights DOUBLE, ytd_revenue_local DOUBLE, ytd_revenue_usd DOUBLE, ytd_num_of_groups INTEGER, ytd_room_nights_py DOUBLE, ytd_revenue_py_local DOUBLE, ytd_revenue_py_usd DOUBLE, data_source_cd VARCHAR( 20) ) ) by odbc ;",AW_ACTIVITY_UPLOAD.sas
 CREATE TABLE sourceData AS ( SELECT  *  FROM gd.grp_activity_misw_UPDATEd );,AW_ACTIVITY_UPLOAD.sas
INSERT INTO TABLE AWPROD.TMP_TEMP SELECT * FROM work.sourceData;,AW_ACTIVITY_UPLOAD.sas
   INSERT INTO AW_STG_BUS_DBO.GRP_ACTIVITY_MISW select * FROM AW_STG_BUS_DBO.tmp_temp ) by odbc ;,AW_ACTIVITY_UPLOAD.sas
   DROP TABLE AW_STG_BUS_DBO.tmp_temp ) by odbc ;,AW_ACTIVITY_UPLOAD.sas
   TRUNCATE Table AW_SLS_PRD_AM.ACCT_DASH_AP_CLEANSED ) by odbc ;,AW_Americas_Load_Acct_Dash_AP_Cleansed.sas
"  CREATE TABLE AW_SLS_PRD_AM.&TBLNM._STG ( Prop_Org Varchar( 25), TOTAL_PACE_ID Varchar( 10) , CLARITAS_BUSINESS_NAME Varchar( 88) , ORGANIZATION Varchar( 50) , LAT_ORG Double , LON_ORG Double , MARKET Varchar( 50) , LAT_MARKET Double , LON_MARKET Double , AREA Varchar( 50) , LAT_AREA Double , LON_AREA Double , SALES_ASSOCIATE Varchar( 102) , ROLE Varchar( 50) , MSL_SRMAE Varchar( 255) , ASL Varchar( 255) , REPORT_DATE Date , marsha_code Varchar( 10) , HOTEL_NAME Varchar( 100) , AP_IN_RN Double , AP_IN_RR Double , AP_OUT_RN Double , AP_OUT_RR Double , AP_RN Double , AP_RR Double , AP_Indicator Varchar( 10) ) ) by odbc ;",AW_Americas_Load_Acct_Dash_AP_Cleansed.sas
INSERT INTO TABLE AWPROD.&TBLNM._STG SELECT * FROM work.&TBLNM;,AW_Americas_Load_Acct_Dash_AP_Cleansed.sas
  INSERT INTO AW_SLS_PRD_AM.ACCT_DASH_AP_CLEANSED Select * FROM AW_SLS_PRD_AM.&TBLNM._STG ) by odbc ;,AW_Americas_Load_Acct_Dash_AP_Cleansed.sas
DROP TABLE AWPROD.&TBLNM._STG;,AW_Americas_Load_Acct_Dash_AP_Cleansed.sas
 CREATE TABLE ACCT_DASH_ACCT_DATA_CONSOL2 AS ( SELECT  *  FROM ACCT_DASH_ACCT_DATA_CONSOL );,AW_Americas_Load_Acct_Data_Consolidated.sas
" CREATE TABLE AW_SLS_PRD_AM.ACCT_DASH_ACCT_DATA_CONSOL_STG (  REPORT_DATE Date , TOTAL_PACE_ID Varchar( 10) , ACCOUNT_NAME Varchar( 88) , INDUSTRY Varchar( 18) , ORGANIZATION Varchar( 50) , MARKET Varchar( 50) , AREA Varchar( 50) , SALES_ASSOCIATE Varchar( 102) , ROLE Varchar( 50) , MSL_SRMAE Varchar( 255) , ASL Varchar( 255) , PACE_RN Double , PACE_RR Double , PACE_CR Double , PACE_TR Double , AP_IN_RN Double , AP_IN_RR Double , AP_OUT_RN Double , AP_OUT_RR Double , AP_RN Double , AP_RR Double ) ) by odbc ;",AW_Americas_Load_Acct_Data_Consolidated.sas
INSERT INTO TABLE AWPROD.ACCT_DASH_ACCT_DATA_CONSOL_STG SELECT * FROM work.ACCT_DASH_ACCT_DATA_CONSOL2;,AW_Americas_Load_Acct_Data_Consolidated.sas
   TRUNCATE Table AW_SLS_PRD_AM.ACCT_DASH_ACCT_DATA_CONSOL ) by odbc ;,AW_Americas_Load_Acct_Data_Consolidated.sas
   INSERT INTO AW_SLS_PRD_AM.ACCT_DASH_ACCT_DATA_CONSOL Select * FROM AW_SLS_PRD_AM.ACCT_DASH_ACCT_DATA_CONSOL_STG ) by odbc ;,AW_Americas_Load_Acct_Data_Consolidated.sas
DROP TABLE AWPROD.ACCT_DASH_ACCT_DATA_CONSOL_STG;,AW_Americas_Load_Acct_Data_Consolidated.sas
   TRUNCATE Table AW_SLS_PRD_AM.ACCT_DASH_DETAIL_CLEANSED ) by odbc ;,AW_Americas_Load_Acct_Detail_Cleansed.sas
"  CREATE TABLE AW_SLS_PRD_AM.&TBLNM._STG (  PROP_ORG Varchar( 25), TOTAL_PACE_ID Varchar( 10) , COMPANY_NAME Varchar( 88) , ORGANIZATION Varchar( 50) , LAT_ORG Double , LON_ORG Double , MARKET Varchar( 50) , LAT_MARKET Double , LON_MARKET Double , AREA Varchar( 50) , LAT_AREA Double , LON_AREA Double , SALES_ASSOCIATE Varchar( 102) , ROLE Varchar( 50) , MSL_SRMAE Varchar( 255) , ASL Varchar( 255) , DATA_SOURCE Varchar( 13) , OPPTY_NUMBER Varchar( 50) , OPPTY_STATUS Varchar( 30) , quote_number Varchar( 50) , quote_name Varchar( 1000) , QUOTE_ACCT_NAME Varchar( 1000) , PROJECTED_QUOTE_FLAG Varchar( 50) , REPORT_DATE Date , STATUS_CHANGE_DATE Date , ORIGINAL_DEFINITE_DATE Date , QUOTE_CREATED_DATE Date , QUOTE_ARRIVAL_DATE Date , QUOTE_DEPARTURE_DATE Date , marsha_code Varchar( 255) , HOTEL_NAME Varchar( 100) , quote_status Varchar( 50) , STATUS_CHANGE_TYPE Varchar( 50) , LTC_REASON Varchar( 250) , INORG_OUTBOUND Varchar( 8) , CURRENT_FUTURE Varchar( 7) , WEEKDAY_WEEKEND Varchar( 7) , PACE_RN Double , PACE_RR Double , PACE_CR Double , PACE_TR Double ) ) by odbc ;",AW_Americas_Load_Acct_Detail_Cleansed.sas
INSERT INTO TABLE AWPROD.&TBLNM._STG SELECT * FROM work.&TBLNM;,AW_Americas_Load_Acct_Detail_Cleansed.sas
  INSERT INTO AW_SLS_PRD_AM.ACCT_DASH_DETAIL_CLEANSED Select * FROM AW_SLS_PRD_AM.&TBLNM._STG ) by odbc ;,AW_Americas_Load_Acct_Detail_Cleansed.sas
DROP TABLE AWPROD.&TBLNM._STG;,AW_Americas_Load_Acct_Detail_Cleansed.sas
 CREATE TABLE BT_IN_OUT_YTD AS ( SELECT  *  FROM BTPROD.BT_IN_OUT_YTD );,AW_Americas_Load_AP_Combined_MISW.sas
"  CREATE TABLE AW_SLS_STG_AM.AP_COMBINED_MISW_STG ( property_org Varchar( 40) , data_source Varchar( 9) , SW_MI Varchar( 30) , REPORT_YEAR Double , STAY_PD_MO Double , MGR_ORG_NAME Varchar( 100) , EXECUTIVE_EID Varchar( 10) , EXECUTIVE_NAME Varchar( 100) , ROLE_TITLE Varchar( 100) , MARSHA Varchar( 10) , BRAND_CODE Varchar( 2) , goal_account_id Varchar( 15) , ACCOUNT_NAME Varchar( 100) , RN Double , ROOM_REVENUE Double , OUTBOUND_IND Varchar( 1) , DOM_INT Varchar( 1) , MGD_FRN Varchar( 1) , MARKET_NAME Varchar( 100) , AREA_NAME Varchar( 100) , prop_market Varchar( 100) , prop_area Varchar( 100) ) ) by odbc ;",AW_Americas_Load_AP_Combined_MISW.sas
INSERT INTO TABLE AWPROD.AP_COMBINED_MISW_STG SELECT * FROM work.BT_IN_OUT_YTD;,AW_Americas_Load_AP_Combined_MISW.sas
   TRUNCATE Table AW_SLS_PRD_AM.AP_COMBINED_MISW ) by odbc ;,AW_Americas_Load_AP_Combined_MISW.sas
   TRUNCATE Table AW_SLS_PRD_AM.AP_COMBINED_MISW_&CURYR ) by odbc ;,AW_Americas_Load_AP_Combined_MISW.sas
  INSERT INTO AW_SLS_PRD_AM.AP_COMBINED_MISW Select * FROM AW_SLS_STG_AM.AP_COMBINED_MISW_STG ) by odbc ;,AW_Americas_Load_AP_Combined_MISW.sas
  INSERT INTO AW_SLS_PRD_AM.AP_COMBINED_MISW_&CURYR Select * FROM AW_SLS_STG_AM.AP_COMBINED_MISW_STG ) by odbc ;,AW_Americas_Load_AP_Combined_MISW.sas
DROP TABLE AWPROD.AP_COMBINED_MISW_STG;,AW_Americas_Load_AP_Combined_MISW.sas
 CREATE TABLE ACCT_DASH_MARSHA_CONSOLIDATED2 AS ( SELECT  *  FROM ACCT_DASH_MARSHA_CONSOLIDATED );,AW_Americas_Load_MARSHA_Data_Consolidated.sas
" CREATE TABLE AW_SLS_PRD_AM.ACCT_DASH_MARSHA_CONSOL_STG (  MARSHA_CODE Varchar( 20) , REPORT_DATE Date , HOTEL_NAME Varchar( 100) , PROPERTY_TYPE Varchar( 10) , BRND Varchar( 2) , OWNER Varchar( 100) , LATITUDE Decimal( 12,8) , LONGITUDE Decimal( 12,8) , PROPERTY_ORG Varchar( 24) , EXECUTIVE_EID Varchar( 10) , SALES_ORG Varchar( 24) , PACE_RN Double , PACE_RR Double , PACE_CR Double , PACE_TR Double , AP_RN Double , AP_RR Double ) ) by odbc ;",AW_Americas_Load_MARSHA_Data_Consolidated.sas
INSERT INTO TABLE AWPROD.ACCT_DASH_MARSHA_CONSOL_STG SELECT * FROM work.ACCT_DASH_MARSHA_CONSOLIDATED2;,AW_Americas_Load_MARSHA_Data_Consolidated.sas
   TRUNCATE Table AW_SLS_PRD_AM.ACCT_DASH_MARSHA_CONSOLIDATED ) by odbc ;,AW_Americas_Load_MARSHA_Data_Consolidated.sas
   INSERT INTO AW_SLS_PRD_AM.ACCT_DASH_MARSHA_CONSOLIDATED Select * FROM AW_SLS_PRD_AM.ACCT_DASH_MARSHA_CONSOL_STG ) by odbc ;,AW_Americas_Load_MARSHA_Data_Consolidated.sas
DROP TABLE AWPROD.ACCT_DASH_MARSHA_CONSOL_STG;,AW_Americas_Load_MARSHA_Data_Consolidated.sas
"  CREATE TABLE AW_SLS_STG_AM.&TBLNM._STG (  CONFO_NUM_CURR_ID DOUBLE , CONFO_NUM_ORIG_ID DOUBLE , DATE_CREATE_KEY DOUBLE , HIGHEST_LEVEL_COMPANY_NAME VARCHAR( 100) , HIGHEST_LEVEL_CLARITAS_ID DOUBLE , DESCENDENT_NAME VARCHAR( 100) , DESCENDENT_CLARITAS_ID DOUBLE , PRIMARY_SIC_DESCRIPTION VARCHAR( 100) , MONTH DOUBLE , YEAR DOUBLE ) ) by odbc ;",AW_Area_Sales_CFD_Macro.sas
INSERT INTO TABLE AWPROD.&TBLNM._STG SELECT * FROM work.&TBLNM;,AW_Area_Sales_CFD_Macro.sas
  INSERT INTO AW_SLS_PRD_AM.ACCOUNT_TRACKING_KEYS Select * FROM AW_SLS_STG_AM.&TBLNM._STG ) by odbc ;,AW_Area_Sales_CFD_Macro.sas
DROP TABLE AWPROD.&TBLNM._STG;,AW_Area_Sales_CFD_Macro.sas
 CREATE TABLE US_BT_ENTERTAINMENT_YTD AS ( SELECT  *  FROM ent.US_BT_ENTERTAINMENT_YTD );,AW_Entertainment_BT_Load.sas
"  CREATE TABLE AW_SLS_PRD_AM.US_BT_entertainment_STG (  stay_year Double , stay_month Double , prop_code Varchar( 5) , brand_code Varchar( 2) , goal_account_id Double , ACCOUNT_NAME Varchar( 32) , rn Double , usd_rev Double ) ) by odbc ;",AW_Entertainment_BT_Load.sas
INSERT INTO TABLE AWPROD.US_BT_ENTERTAINMENT_STG SELECT * FROM work.US_BT_ENTERTAINMENT_YTD;,AW_Entertainment_BT_Load.sas
   TRUNCATE Table AW_SLS_PRD_AM.US_BT_entertainment ) by odbc ;,AW_Entertainment_BT_Load.sas
  INSERT INTO AW_SLS_PRD_AM.US_BT_ENTERTAINMENT Select * FROM AW_SLS_PRD_AM.US_BT_ENTERTAINMENT_STG ) by odbc ;,AW_Entertainment_BT_Load.sas
DROP TABLE AWPROD.US_BT_ENTERTAINMENT_STG;,AW_Entertainment_BT_Load.sas
" CREATE TABLE mar_pace_oy AS select &MonEnd. AS snapshot_date,CAST( stay_yr AS INT ) AS stay_year,CAST( stay_qtr AS INT ) AS stay_quarter, CAST( stay_pd AS INT ) AS stay_month,marsha AS prop_master_id, book_stat AS status,'Banquet' AS revenue_department,segment AS market_segment, 'OY' AS data_source,rooms_net AS room_nights, rooms_rv_gross AS room_revenue_local,( rooms_rv_gross*local_fx) AS room_revenue_usd, rooms_net_ly AS stly_room_nights,rooms_rv_ly AS stly_room_revenue_local, ( rooms_rv_ly*local_fx) AS stly_room_revenue_usd,catering_rv AS other_revenue_local, ( catering_rv*local_fx) AS other_revenue_usd,catering_rv_ly AS stly_other_revenue_local, ( catering_rv_ly*local_fx) AS stly_other_revenue_usd FROM aw_tgt.oy_groupbookingpace WHERE opp_type='G' AND book_act_ind='0' AND asof_yrmo=&YrMon.;",AW_GRP_SCRIPT_FINAL.sas
 CREATE TABLE gd.pace_oy AS ( SELECT  *  FROM mar_pace_oy UNION ALL SELECT  *  FROM gd.pace_oy WHERE snapshot_date<>&MonEnd. );,AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE mar_pace_cater_oy AS select &MonEnd. AS snapshot_date,CAST( stay_yr AS INT ) AS stay_year,CAST( stay_qtr AS INT ) AS stay_quarter, CAST( stay_pd AS INT ) AS stay_month,marsha AS prop_master_id, book_stat AS status,'Catering' AS revenue_department,segment AS market_segment, 'OY' AS data_source,rooms_net AS room_nights, rooms_rv_gross AS room_revenue_local,( rooms_rv_gross*local_fx) AS room_revenue_usd, rooms_net_ly AS stly_room_nights,rooms_rv_ly AS stly_room_revenue_local, ( rooms_rv_ly*local_fx) AS stly_room_revenue_usd,catering_rv AS other_revenue_local, ( catering_rv*local_fx) AS other_revenue_usd,catering_rv_ly AS stly_other_revenue_local, ( catering_rv_ly*local_fx) AS stly_other_revenue_usd FROM aw_tgt.oy_groupbookingpace WHERE opp_type='L' AND book_act_ind='0' AND asof_yrmo=&YrMon.;",AW_GRP_SCRIPT_FINAL.sas
 CREATE TABLE gd.pace_cater_oy AS ( SELECT  *  FROM mar_pace_cater_oy UNION ALL SELECT  *  FROM gd.pace_cater_oy WHERE snapshot_date<>&MonEnd. );,AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE intl_pace_def AS select &MonEnd. AS snapshot_date, year AS stay_year, qtr AS stay_quarter, mon AS stay_month, marsha AS prop_master_id, 'Definite' AS status_cd, 'Banquet' AS revenue_department, 'Other' AS market_segment, 'MANUAL' AS data_source, rn_def AS room_nights, rv_def2 AS room_revenue_local, rv_def2 AS room_revenue_usd, ly_rn_def AS stly_room_nights, ly_rv_def2 AS stly_room_revenue_local, ly_rv_def2 AS stly_room_revenue_usd, 0 AS other_revenue_local, 0 AS other_revenue_usd, 0 AS stly_other_revenue_local, 0 AS stly_other_revenue_usd FROM snap.group_&MonYr.;",AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE intl_pace_tent AS select &MonEnd. AS snapshot_date, year AS stay_year, qtr AS stay_quarter, mon AS stay_month, marsha AS prop_master_id, 'Tentative' AS status_cd, 'Banquet' AS revenue_department, 'Other' AS market_segment, 'MANUAL' AS data_source, rn_tent AS room_nights, rv_tent2 AS room_revenue_local, rv_tent2 AS room_revenue_usd, ly_rn_tent AS stly_room_nights, ly_rv_tent2 AS stly_room_revenue_local, ly_rv_tent2 AS stly_room_revenue_usd, 0 AS other_revenue_local, 0 AS other_revenue_usd, 0 AS stly_other_revenue_local, 0 AS stly_other_revenue_usd FROM snap.group_&MonYr.;",AW_GRP_SCRIPT_FINAL.sas
 CREATE TABLE intl_pace_man AS ( SELECT  *  FROM intl_pace_def UNION ALL SELECT  *  FROM intl_pace_tent);,AW_GRP_SCRIPT_FINAL.sas
 delete FROM intl_pace_man WHERE room_nights=0 AND room_revenue_local=0 AND room_revenue_usd=0 AND stly_room_nights=0 AND stly_room_revenue_local=0 AND stly_room_revenue_usd=0 AND other_revenue_local=0 AND other_revenue_usd=0 AND stly_other_revenue_local=0 AND stly_other_revenue_usd=0;,AW_GRP_SCRIPT_FINAL.sas
" UPDATE intl_pace_man set data_source='MAN' WHERE prop_master_id IN ( 'ADBBR','BEGCY','BUDCY','BUDHU','ESBJW','ISTCY','ISTDT','SKPMC','TBSCY','TBSMC','CAIBR','CAIJW', 'BJSNE','DPSCY','DPSSM','SELPN','SHAJD','SHAKS','SZVCY','BJVEB','FAOLC','FAOPC','FAOPL' )  delete FROM intl_pace_man WHERE data_source='MANUAL';",AW_GRP_SCRIPT_FINAL.sas
 CREATE TABLE gd.intl_pace_man AS ( SELECT  *  FROM intl_pace_man UNION ALL SELECT  *  FROM gd.intl_pace_man WHERE snapshot_date<>&MonEnd. );,AW_GRP_SCRIPT_FINAL.sas
 CREATE TABLE gd.gbp_rolling_new AS ( SELECT  *  FROM awrevam.rollingdata_misw  wherereportingyr = &Yr. AND reportingpd = &Mon. and( manualflag='Y') OR ( manualflag='N' AND datasource='CI' ) );,AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE RATES AS ( SELECT  *  , COMPRESS( CURR_CODE||MON ) AS CURMON , CAST( SUBSTRING( YRMON,1,4) AS INT  ) AS YEAR , SUBSTRING( CAST( ASOF_YRMO AS INT ),1,4 ) AS YR , CAST( SUBSTRING( CAST( ASOF_YRMO AS INT ),5,2) AS INT  ) AS MO , compress( yr||CAST( mo AS INT ) ) AS asof_yrmon  FROM AW_TGT.TREASFX_FCST_HIST  WHERE CURR_CODE<>'' AND ASOF_YRMO>=&YrMon.);",AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE gbp_rolling_new AS select a.*,b.lcurrency FROM gd.gbp_rolling_new AS a LEFT JOIN aw_tgt.property_master AS b ON a.marsha=b.marsha;",AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE gbp_rolling_new AS ( SELECT  *  , compress( reportingyr||reportingpd ) AS asof_yrmon , CASE WHEN  stayyr>reportingyr  THEN compress( lcurrency||CAST( 12 AS VARCHAR(2) ) ) ELSE compress( lcurrency||CAST( staypd AS VARCHAR(2) ) ) END AS curmon FROM gbp_rolling_new );",AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE gd.gbp_rolling_new1 AS select a.*,b.fxtocusd FROM gbp_rolling_new AS a LEFT JOIN rates AS b ON a.asof_yrmon=b.asof_yrmon AND a.curmon=b.curmon;",AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE gd.mar_pace_sia_def AS select intnx( 'month',mdy( reportingpd,1,reportingyr),0,'e') AS snapshot_date, stayyr AS stay_year, stayqtr AS stay_quarter, staypd AS stay_month, marsha AS prop_master_id, 'Definite' AS status format=$10., 'Banquet' AS revenue_department format=$10., 'Other' AS market_segment, 'SIA' AS data_source format=$10., rmntsdefty AS room_nights, revdefty/fxtocusd AS room_revenue_local, revdefty AS room_revenue_usd, rmntsdefly AS stly_room_nights, revdefly/fxtocusd AS stly_room_revenue_local, revdefly AS stly_room_revenue_usd FROM gd.gbp_rolling_new1;",AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE gd.mar_pace_sia_tent AS select intnx( 'month',mdy( reportingpd,1,reportingyr),0,'e') AS snapshot_date, stayyr AS stay_year, stayqtr AS stay_quarter, staypd AS stay_month, marsha AS prop_master_id, 'Tentative' AS status, 'Banquet' AS revenue_department, 'Other' AS market_segment, 'SIA' AS data_source, rmntstentty AS room_nights, revtentty/fxtocusd AS room_revenue_local, revtentty AS room_revenue_usd, rmntstently AS stly_room_nights, revtently/fxtocusd AS stly_room_revenue_local, revtently AS stly_room_revenue_usd FROM gd.gbp_rolling_new1;",AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE mar_pace AS ( SELECT  *  , FORMAT(status, VARCHAR(10)) AS status , FORMAT(revenue_department, VARCHAR(10)) AS revenue_department , FORMAT(data_source, VARCHAR(10)) AS data_source  FROM gd.mar_pace_sia_def UNION ALL SELECT  *  , FORMAT(status, VARCHAR(10)) AS status , FORMAT(revenue_department, VARCHAR(10)) AS revenue_department , FORMAT(data_source, VARCHAR(10)) AS data_source  FROM gd.mar_pace_sia_tent);",AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE gd.pace AS select snapshot_date,stay_year,stay_quarter,stay_month,prop_master_id, status AS status_cd,revenue_department,market_segment,data_source,room_nights, room_revenue_local,room_revenue_usd,stly_room_nights,stly_room_revenue_local,stly_room_revenue_usd, 0 AS other_revenue_local,0 AS other_revenue_usd, 0 AS stly_other_revenue_local,0 AS stly_other_revenue_usd FROM mar_pace;",AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE pace_oy AS ( SELECT  *  , FORMAT(status_cd, VARCHAR(10)) AS status_cd , CASE WHEN  status='D'  THEN 'Definite' WHEN  status='1'  THEN 'Tentative1' WHEN  status='2'  THEN 'Tentative2' WHEN  status='H'  THEN 'Hold' WHEN  status='P'  THEN 'Prospect' END AS status_cd FROM mar_pace_oy );",AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE pace_oy_sum AS select snapshot_date,stay_year,stay_quarter,stay_month,prop_master_id, status_cd,revenue_department,market_segment,data_source,SUM( room_nights) AS room_nights, SUM( room_revenue_local) AS room_revenue_local,SUM( room_revenue_usd) AS room_revenue_usd, SUM( stly_room_nights) AS stly_room_nights,SUM( stly_room_revenue_local) AS stly_room_revenue_local, SUM( stly_room_revenue_usd) AS stly_room_revenue_usd, SUM( other_revenue_local) AS other_revenue_local,SUM( other_revenue_usd) AS other_revenue_usd, SUM( stly_other_revenue_local) AS stly_other_revenue_local,SUM( stly_other_revenue_usd) AS stly_other_revenue_usd FROM pace_oy GROUP BY snapshot_date,stay_year,stay_quarter,stay_month,prop_master_id, status_cd,revenue_department,market_segment,data_source;",AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE pace_cater_oy AS ( SELECT  *  , FORMAT(status_cd, VARCHAR(10)) AS status_cd , CASE WHEN  status='D'  THEN 'Definite' WHEN  status='1'  THEN 'Tentative1' WHEN  status='2'  THEN 'Tentative2' WHEN  status='H'  THEN 'Hold' WHEN  status='P'  THEN 'Prospect' END AS status_cd FROM mar_pace_cater_oy );",AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE cater_oy_sum AS select snapshot_date,stay_year,stay_quarter,stay_month,prop_master_id, status_cd,revenue_department,market_segment,data_source,SUM( room_nights) AS room_nights, SUM( room_revenue_local) AS room_revenue_local,SUM( room_revenue_usd) AS room_revenue_usd, SUM( stly_room_nights) AS stly_room_nights,SUM( stly_room_revenue_local) AS stly_room_revenue_local, SUM( stly_room_revenue_usd) AS stly_room_revenue_usd, SUM( other_revenue_local) AS other_revenue_local,SUM( other_revenue_usd) AS other_revenue_usd, SUM( stly_other_revenue_local) AS stly_other_revenue_local,SUM( stly_other_revenue_usd) AS stly_other_revenue_usd FROM pace_cater_oy GROUP BY snapshot_date,stay_year,stay_quarter,stay_month,prop_master_id, status_cd,revenue_department,market_segment,data_source;",AW_GRP_SCRIPT_FINAL.sas
INSERT INTO TABLE gd.pace SELECT * FROM intl_pace_man;,AW_GRP_SCRIPT_FINAL.sas
 INSERT INTO gd.pace select * FROM pace_oy_sum WHERE prop_master_id not IN ( select distinct marsha FROM gd.gbp_rolling_new )  INSERT INTO gd.pace select * FROM cater_oy_sum WHERE prop_master_id not IN ( select distinct marsha FROM gd.gbp_rolling_new ) ;,AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE sgds_pace AS select intnx( 'month',mdy( CAST( SUBSTRING( as_of_date,6,2) AS INT ),1,CAST( SUBSTRING( as_of_date,2,4) AS INT )),0,'e') AS snapshot_date, stay_yr AS stay_year, stay_qtr AS stay_quarter, stay_mon AS stay_month, hotel_cd AS prop_master_id, 'Definite' AS status format=$10., 'Banquet' AS revenue_department format=$10., mkt_seg_dsc AS market_segment, 'SGDS' AS data_source format=$10., SUM( ty_rm) AS room_nights, SUM( ty_rev) AS room_revenue_local, SUM( ty_rev) AS room_revenue_usd, SUM( ly_rm_mon) AS stly_room_nights, SUM( ly_rev_mon) AS stly_room_revenue_local, SUM( ly_rev_mon) AS stly_room_revenue_usd, 0 AS other_revenue_local, 0 AS other_revenue_usd, 0 AS stly_other_revenue_local, 0 AS stly_other_revenue_usd, ( CASE WHEN stay_yr>CAST( SUBSTRING( as_of_date,2,4) AS INT ) THEN compress( 'EGP'||CAST( 12 AS INT )) ELSE compress( 'EGP'||CAST( stay_mon AS INT )) end) AS curmon FROM share_gp.mon_otb_file_nalo_v2 WHERE CAST( SUBSTRING( as_of_date,2,6) AS INT )=&YrMon. AND hotel_cd IN ( 'CAIBR','CAIJW') GROUP BY calculated snapshot_date,stay_yr,stay_qtr,stay_mon,hotel_cd, calculated status,calculated revenue_department,mkt_seg_dsc,calculated data_source;",AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE sgds_pace_temp AS select a.*,b.fxtocusd FROM sgds_pace AS a LEFT JOIN rates AS b ON a.curmon=b.curmon WHERE b.asof_yrmo=&YrMon.;",AW_GRP_SCRIPT_FINAL.sas
"CREATE TABLE gd.sgds_pace AS ( SELECT  *  , room_revenue_usd/fxtocusd AS room_revenue_local , stly_room_revenue_usd/fxtocusd AS stly_room_revenue_local  FROM sgds_pace_temp );",AW_GRP_SCRIPT_FINAL.sas
"ALTER TABLE gd.sgds_pace DROP COLUMN curmon ,  fxtocusd ;",AW_GRP_SCRIPT_FINAL.sas
INSERT INTO TABLE gd.pace SELECT * FROM gd.sgds_pace;,AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE gd.mar_pace_ly_actuals AS select year+1 AS stay_year, month AS stay_month, prop_code AS prop_master_id, 'Definite' AS status_cd, 'Banquet' AS revenue_department_nm, SUM( au_gr_def_rn) AS ly_room_nights_amt, SUM( ( au_gr_def_rv+au_gr_reb)) AS ly_room_revenue_local_amt, SUM( ( usd_au_gr_def_rv+usd_au_gr_reb)) AS ly_room_revenue_usd_amt FROM proj.extractsum_mo_&YrMon._actupdt WHERE year IN ( 2016,2017,2018) GROUP BY year,month,prop_code;",AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE gd.pace_final AS select a.snapshot_date,a.stay_year,a.stay_quarter,a.stay_month,a.prop_master_id, a.status_cd,a.revenue_department AS revenue_department_nm,a.market_segment AS market_segment_cd, a.data_source AS data_source_nm,a.room_nights,a.room_revenue_local AS room_revenue_local_amt, a.room_revenue_usd AS room_revenue_usd_amt,a.stly_room_nights,a.stly_room_revenue_local AS stly_room_revenue_local_amt, a.stly_room_revenue_usd AS stly_room_revenue_usd_amt,b.ly_room_nights_amt, b.ly_room_revenue_local_amt,b.ly_room_revenue_usd_amt,a.other_revenue_local AS other_revenue_local_amt, a.other_revenue_usd AS other_revenue_usd_amt,a.stly_other_revenue_local AS stly_other_revenue_local_amt, a.stly_other_revenue_usd AS stly_other_revenue_usd_amt FROM gd.pace AS a LEFT JOIN gd.mar_pace_ly_actuals AS b ON a.stay_year=b.stay_year AND a.stay_month=b.stay_month AND a.prop_master_id=b.prop_master_id AND a.status_cd=b.status_cd AND a.revenue_department=b.revenue_department_nm WHERE a.data_source not IN ( 'DUP' ) ;",AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE gd.grp_bookingpace_mi AS ( SELECT  *  , FORMAT(market_segment_cd, VARCHAR(60)) AS market_segment_cd , CASE WHEN  status_cd='D'  THEN 'Definite' WHEN  status_cd='1'  THEN 'Tentative1' WHEN  status_cd='2'  THEN 'Tentative2' WHEN  status_cd='Tentativ'  THEN 'Tentative' WHEN  status_cd='H'  THEN 'Hold' WHEN  status_cd='P'  THEN 'Prospect' END AS status_cd, CASE WHEN  market_segment_cd IN ( 'C')  THEN 'GROUP_CORPORATE' WHEN  market_segment_cd IN ( 'A','N','R')  THEN 'GROUP_ASSOCIATION' WHEN  market_segment_cd IN ( 'B','G','V','Z')  THEN 'GROUP_GOVERNMENT' WHEN  market_segment_cd IN ( 'S','M','P','E','L','F')  THEN 'GROUP_SMERF' WHEN  market_segment_cd IN ( 'T')  THEN 'GROUP_TOUR_SERIES' WHEN  market_segment_cd IN ( 'Other','I','O','W')  THEN 'GROUP_OTHER' WHEN  market_segment_cd IN ( 'U','Y')  THEN 'UNKNOWN' END AS market_segment_cd FROM gd.pace_final );",AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE gd.grp_bookingpace_misw AS select CAST( snapshot_date,date9. ) AS snapshot_date, stay_year, stay_quarter, stay_month, prop_master_id, status_cd, revenue_department_nm, market_segment_cd, data_source_nm, room_nights, room_revenue_local_amt, room_revenue_usd_amt, stly_room_nights, stly_room_revenue_local_amt, stly_room_revenue_usd_amt, ly_room_nights_amt, ly_room_revenue_local_amt, ly_room_revenue_usd_amt, 0 AS food_revenue_local_amt, 0 AS food_revenue_usd_amt, 0 AS stly_food_revenue_local_amt, 0 AS stly_food_revenue_usd_amt, 0 AS ly_food_revenue_local_amt, 0 AS ly_food_revenue_usd_amt, 0 AS bev_revenue_local_amt, 0 AS bev_revenue_usd_amt, 0 AS stly_bev_revenue_local_amt, 0 AS stly_bev_revenue_usd_amt, 0 AS ly_bev_revenue_local_amt, 0 AS ly_bev_revenue_usd_amt, 0 AS rm_rental_revenue_local_amt, 0 AS rm_rental_revenue_usd_amt, 0 AS stly_rm_rental_revenue_local_amt, 0 AS stly_rm_rental_revenue_usd_amt, 0 AS ly_room_rental_revenue_local_amt, 0 AS ly_room_rental_revenue_usd_amt, 0 AS resource_revenue_local_amt, 0 AS resource_revenue_usd_amt, 0 AS stly_resource_revenue_local_amt, 0 AS stly_resource_revenue_usd_amt, 0 AS ly_resource_revenue_local_amt, 0 AS ly_resource_revenue_usd_amt, other_revenue_local_amt, other_revenue_usd_amt, stly_other_revenue_local_amt, stly_other_revenue_usd_amt, 0 AS ly_other_revenue_local_amt, 0 AS ly_other_revenue_usd_amt FROM gd.grp_bookingpace_mi;",AW_GRP_SCRIPT_FINAL.sas
 CREATE TABLE SW_OY_PACE AS select * FROM gd.grp_bookingpace_misw WHERE data_source_nm='OY' AND prop_master_id IN ( select marsha FROM aw_tgt.property_master WHERE misw_flag='SW' ) ;,AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE gd.SW_PACE_TY AS select distinct a.snapshot_date, a.stay_year, a.stay_quarter, a.stay_month, a.prop_master_id, a.status_cd, a.revenue_department_nm, a.market_segment_cd, a.data_source_nm, SUM( a.room_nights) AS room_nights, SUM( a.room_revenue_local_amt) AS room_revenue_local_amt, SUM( a.room_revenue_usd_amt) AS room_revenue_usd_amt, SUM( a.food_revenue_local_amt) AS food_revenue_local_amt, SUM( a.food_revenue_usd_amt) AS food_revenue_usd_amt, SUM( a.bev_revenue_local_amt) AS bev_revenue_local_amt, SUM( a.bev_revenue_usd_amt) AS bev_revenue_usd_amt, SUM( a.rm_rental_revenue_local_amt) AS rm_rental_revenue_local_amt, SUM( a.rm_rental_revenue_usd_amt) AS rm_rental_revenue_usd_amt, SUM( a.resource_revenue_local_amt) AS resource_revenue_local_amt, SUM( a.resource_revenue_usd_amt) AS resource_revenue_usd_amt, SUM( a.other_revenue_local_amt) AS other_revenue_local_amt, SUM( a.other_revenue_usd_amt) AS other_revenue_usd_amt FROM SW_OY_PACE AS a whereEXTRACT(YEAR FROM CAST( a.snapshot_date,date9. ))=&Yr. andEXTRACT(MONTH FROM CAST( a.snapshot_date,date9. ))=&Mon. GROUP BY a.snapshot_date, a.stay_year, a.stay_quarter, a.stay_month, a.prop_master_id, a.status_cd, a.revenue_department_nm, a.market_segment_cd, a.data_source_nm;",AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE sw_pace_ly_init AS select distinct ""&SSDate."" AS snapshot_date, a.stay_year+1 AS stay_year, a.stay_quarter, a.stay_month, a.prop_master_id, a.status_cd, a.revenue_department_nm, a.market_segment_cd, ""OY"" AS data_source_nm, SUM( a.room_nights) AS stly_room_nights, SUM( a.room_revenue_local_amt) AS stly_room_revenue_local_amt, SUM( a.room_revenue_usd_amt) AS stly_room_revenue_usd_amt, SUM( a.room_nights) AS ly_room_nights_amt, SUM( a.room_revenue_local_amt) AS ly_room_revenue_local_amt, SUM( a.room_revenue_usd_amt) AS ly_room_revenue_usd_amt, SUM( a.food_revenue_local_amt) AS stly_food_revenue_local_amt, SUM( a.food_revenue_usd_amt) AS stly_food_revenue_usd_amt, SUM( a.food_revenue_local_amt) AS ly_food_revenue_local_amt, SUM( a.food_revenue_usd_amt) AS ly_food_revenue_usd_amt, SUM( a.bev_revenue_local_amt) AS stly_bev_revenue_local_amt, SUM( a.bev_revenue_usd_amt) AS stly_bev_revenue_usd_amt, SUM( a.bev_revenue_local_amt) AS ly_bev_revenue_local_amt, SUM( a.bev_revenue_usd_amt) AS ly_bev_revenue_usd_amt, SUM( a.rm_rental_revenue_local_amt) AS stly_rm_rental_revenue_local_amt, SUM( a.rm_rental_revenue_usd_amt) AS stly_rm_rental_revenue_usd_amt, SUM( a.rm_rental_revenue_local_amt) AS ly_rm_rental_revenue_local_amt, SUM( a.rm_rental_revenue_usd_amt) AS ly_rm_rental_revenue_usd_amt, SUM( a.resource_revenue_local_amt) AS stly_resource_revenue_local_amt, SUM( a.resource_revenue_usd_amt) AS stly_resource_revenue_usd_amt, SUM( a.resource_revenue_local_amt) AS ly_resource_revenue_local_amt, SUM( a.resource_revenue_usd_amt) AS ly_resource_revenue_usd_amt, SUM( a.other_revenue_local_amt) AS stly_other_revenue_local_amt, SUM( a.other_revenue_usd_amt) AS stly_other_revenue_usd_amt, SUM( a.other_revenue_local_amt) AS ly_other_revenue_local_amt, SUM( a.other_revenue_usd_amt) AS ly_other_revenue_usd_amt FROM aw_stg.grp_bookingpace_misw AS a whereEXTRACT(YEAR FROM a.snapshot_date)=&LYr. andEXTRACT(MONTH FROM a.snapshot_date)=&Mon. AND a.prop_master_id IN ( select prop_master_id FROM SW_OY_PACE) GROUP BY a.snapshot_date, a.stay_year, a.stay_quarter, a.stay_month, a.prop_master_id, a.status_cd, a.revenue_department_nm, a.market_segment_cd, a.data_source_nm;",AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE gd.oy_data AS select distinct a.marsha,region,country,CAST( stay_yr AS INT ) AS stay_year,CAST( stay_pd AS INT ) AS stay_month, local_fx,local_cur,sell_fx,sell_cur,asof_yrmo FROM aw_tgt.oy_groupbookingpace AS a LEFT JOIN aw_tgt.property_master AS b ON a.marsha=b.marsha WHERE asof_yrmo=&YrMon.;",AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE RZPROPS AS select distinct a.marsha,a.region,a.country,2019 AS stay_year,b.mon AS stay_month, b.curr_code AS local_cur,b.fxtocusd AS local_fx, b.curr_code AS sell_cur,b.fxtocusd AS sell_fx FROM aw_tgt.property_master AS a INNER JOIN rates AS b ON a.lcurrency=b.curr_code WHERE brnd='RZ' AND asof_yrmo=&YrMon.;",AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE RZCURR AS select distinct curr_code AS local_cur,fxtocusd AS local_fx,curr_code AS sell_cur,fxtocusd AS sell_fx FROM rates WHERE mon=12 AND asof_yrmo=&YrMon. AND curr_code IN ( select distinct local_cur FROM RZPROPS ) ;",AW_GRP_SCRIPT_FINAL.sas
" INSERT INTO RZPROPS select distinct a.marsha,a.region,a.country,2020 AS stay_year,b.mon AS stay_month, c.local_cur,c.local_fx,c.sell_cur,c.sell_fx FROM aw_tgt.property_master AS a INNER JOIN rates AS b ON a.lcurrency=b.curr_code INNER JOIN RZCURR AS c ON b.curr_code=c.local_cur WHERE brnd='RZ' AND b.asof_yrmo=&YrMon.;",AW_GRP_SCRIPT_FINAL.sas
" INSERT INTO RZPROPS select distinct a.marsha,a.region,a.country,2021 AS stay_year,b.mon AS stay_month, c.local_cur,c.local_fx,c.sell_cur,c.sell_fx FROM aw_tgt.property_master AS a INNER JOIN rates AS b ON a.lcurrency=b.curr_code INNER JOIN RZCURR AS c ON b.curr_code=c.local_cur WHERE brnd='RZ' AND b.asof_yrmo=&YrMon.;",AW_GRP_SCRIPT_FINAL.sas
" INSERT INTO RZPROPS select distinct a.marsha,a.region,a.country,2022 AS stay_year,b.mon AS stay_month, c.local_cur,c.local_fx,c.sell_cur,c.sell_fx FROM aw_tgt.property_master AS a INNER JOIN rates AS b ON a.lcurrency=b.curr_code INNER JOIN RZCURR AS c ON b.curr_code=c.local_cur WHERE brnd='RZ' AND b.asof_yrmo=&YrMon.;",AW_GRP_SCRIPT_FINAL.sas
" INSERT INTO RZPROPS select distinct a.marsha,a.region,a.country,2023 AS stay_year,b.mon AS stay_month, c.local_cur,c.local_fx,c.sell_cur,c.sell_fx FROM aw_tgt.property_master AS a INNER JOIN rates AS b ON a.lcurrency=b.curr_code INNER JOIN RZCURR AS c ON b.curr_code=c.local_cur WHERE brnd='RZ' AND b.asof_yrmo=&YrMon.;",AW_GRP_SCRIPT_FINAL.sas
 CREATE TABLE RZPROPS AS ( SELECT  *  FROM RZPROPS  WHERE marsha<>'MCORZ');,AW_GRP_SCRIPT_FINAL.sas
INSERT INTO TABLE gd.oy_data SELECT * FROM RZPROPS;,AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE sw_pace_ly_temp AS select a.*,b.local_fx,b.local_cur,b.sell_fx,b.sell_cur FROM sw_pace_ly_init AS a LEFT JOIN gd.oy_data AS b ON a.prop_master_id=b.marsha AND a.stay_year=b.stay_year AND a.stay_month=b.stay_month;",AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE gd.sw_pace_ly AS ( SELECT  *  , ly_room_revenue_local_amt*local_fx AS ly_room_revenue_usd_amt , stly_food_revenue_local_amt*local_fx AS stly_food_revenue_usd_amt , ly_food_revenue_local_amt*local_fx AS ly_food_revenue_usd_amt , stly_bev_revenue_local_amt*local_fx AS stly_bev_revenue_usd_amt , ly_bev_revenue_local_amt*local_fx AS ly_bev_revenue_usd_amt , stly_rm_rental_revenue_local_amt*local_fx AS stly_rm_rental_revenue_usd_amt , ly_rm_rental_revenue_local_amt*local_fx AS ly_rm_rental_revenue_usd_amt , stly_resource_revenue_local_amt*local_fx AS stly_resource_revenue_usd_amt , ly_resource_revenue_local_amt*local_fx AS ly_resource_revenue_usd_amt , stly_other_revenue_local_amt*local_fx AS stly_other_revenue_usd_amt , ly_other_revenue_local_amt*local_fx AS ly_other_revenue_usd_amt  FROM sw_pace_ly_temp  WHERE not missing( local_fx));",AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE SW_PACE AS ( select distinct snapshot_date, stay_year, stay_quarter, stay_month, prop_master_id, status_cd, revenue_department_nm, market_segment_cd, data_source_nm FROM gd.SW_PACE_TY) UNION ( select distinct snapshot_date, stay_year, stay_quarter, stay_month, prop_master_id, status_cd, revenue_department_nm, market_segment_cd, data_source_nm FROM gd.SW_PACE_LY WHERE stay_year>=2019 ) ;",AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE gd.SW_OY_PACE AS select distinct a.snapshot_date, a.stay_year, a.stay_quarter, a.stay_month, a.prop_master_id, a.status_cd, a.revenue_department_nm, a.market_segment_cd, a.data_source_nm, b.room_nights, b.room_revenue_local_amt, b.room_revenue_usd_amt, c.stly_room_nights, c.stly_room_revenue_local_amt, c.stly_room_revenue_usd_amt, c.ly_room_nights_amt, c.ly_room_revenue_local_amt, c.ly_room_revenue_usd_amt, b.food_revenue_local_amt, b.food_revenue_usd_amt, c.stly_food_revenue_local_amt, c.stly_food_revenue_usd_amt, c.ly_food_revenue_local_amt, c.ly_food_revenue_usd_amt, b.bev_revenue_local_amt, b.bev_revenue_usd_amt, c.stly_bev_revenue_local_amt, c.stly_bev_revenue_usd_amt, c.ly_bev_revenue_local_amt, c.ly_bev_revenue_usd_amt, b.rm_rental_revenue_local_amt, b.rm_rental_revenue_usd_amt, c.stly_rm_rental_revenue_local_amt, c.stly_rm_rental_revenue_usd_amt, c.ly_rm_rental_revenue_local_amt, c.ly_rm_rental_revenue_usd_amt, b.resource_revenue_local_amt, b.resource_revenue_usd_amt, c.stly_resource_revenue_local_amt, c.stly_resource_revenue_usd_amt, c.ly_resource_revenue_local_amt, c.ly_resource_revenue_usd_amt, b.other_revenue_local_amt, b.other_revenue_usd_amt, c.stly_other_revenue_local_amt, c.stly_other_revenue_usd_amt, c.ly_other_revenue_local_amt, c.ly_other_revenue_usd_amt FROM SW_PACE AS a LEFT JOIN gd.SW_PACE_TY AS b ON a.stay_year=b.stay_year AND a.stay_quarter=b.stay_quarter AND a.stay_month=b.stay_month AND a.prop_master_id=b.prop_master_id AND a.status_cd=b.status_cd AND a.revenue_department_nm=b.revenue_department_nm AND a.market_segment_cd=b.market_segment_cd LEFT JOIN gd.SW_PACE_LY AS c ON a.stay_year=c.stay_year AND a.stay_quarter=c.stay_quarter AND a.stay_month=c.stay_month AND a.prop_master_id=c.prop_master_id AND a.status_cd=c.status_cd AND a.revenue_department_nm=c.revenue_department_nm AND a.market_segment_cd=c.market_segment_cd;",AW_GRP_SCRIPT_FINAL.sas
 CREATE TABLE gd.grp_bookingpace_misw_UPDATEd AS select * FROM gd.grp_bookingpace_misw WHERE prop_master_id not IN ( select prop_master_id FROM gd.sw_oy_pace ) ;,AW_GRP_SCRIPT_FINAL.sas
 INSERT INTO gd.grp_bookingpace_misw_UPDATEd select * FROM gd.sw_oy_pace;,AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE AMT.AMT_AGG_2020 AS ( SELECT  *  , 2020 AS Pricing_Season  FROM AMT.AMT_AGG_2020 );",AW_load_AMT_AGG_2020_1st_Setup.sas
" CREATE TABLE AMT_AGG_2020_1 AS ( SELECT Name, vFormat, VARNUM , compress( LENGTH ) AS x , CASE WHEN  compress( FORMAT)=""$""  THEN compress( ""Varchar( ""||x||"")"" ) WHEN   compress( FORMAT)=""DATE""  THEN ""Date"" ELSE ""Integer"" END AS vFormat FROM temp );",AW_load_AMT_AGG_2020_1st_Setup.sas
SELECT * FROM AMT_AGG_2020_1 ORDER BY VARNUM;,AW_load_AMT_AGG_2020_1st_Setup.sas
DROP TABLE AWPROD.AMT_AGG;,AW_load_AMT_AGG_2020_1st_Setup.sas
" CREATE TABLE AW_REV_STG.AMT_AGG (  marsha Varchar( 5) , Strategy Varchar( 41) , RN_to_Replace Bigint , ACCOUNT_ID Bigint , Company_Name Varchar( 45) , Tier Varchar( 6) , Brand_Code Varchar( 2) , Hotel_Name Varchar( 80) , Comp Varchar( 1) , MF Varchar( 1) , Region Varchar( 23) , AVP Varchar( 26) , AD Varchar( 30) , ADRM Varchar( 23) , GRMRS_Hotel Varchar( 2) , GRMRS_RevMgr Varchar( 35) , GRMRS_Team_Leader Varchar( 22) , Market Varchar( 28) , Country Varchar( 32) , Hotel_Class Varchar( 10) , HCAP Bigint , Recommendation Varchar( 24) , Rec2 Varchar( 23) , Pricing_Scenario Bigint , Exception Bigint , RN_L12 DOUBLE , Rev_L12 DOUBLE , Retail_Rev_L12 DOUBLE , Displace_RV_L12 DOUBLE , ADR_L12 DOUBLE , Discount_Percent_L12 DOUBLE , Displacement_Percent_L12 DOUBLE , SrtOrder Bigint , Price Varchar( 1) , RN_YTD DOUBLE , Rev_YTD DOUBLE , Retail_Rev_YTD DOUBLE , Displace_RV_YTD DOUBLE , ADR_YTD DOUBLE , Discount_Percent_YTD DOUBLE , Displacement_Percent_YTD DOUBLE , Rebid_Frequency_Percetn DOUBLE , Hotels_No_Rebid_Response Bigint , Accepted_No_Rebid_Response Bigint , Acceptance_Rate_No_Rebid_Respons DOUBLE , Hotels_Yes_Rebid_Response Bigint , Accepted_Yes_Rebid_Response Bigint , Acceptance_Rate_Yes_Rebid_Respon DOUBLE , Loss_in_ADR_pct DOUBLE , Hist_ADR_Chg_2017_pct DOUBLE , Hist_ADR_Chg_2018_pct DOUBLE , Hist_ADR_Chg_2019_YTD_pct DOUBLE , Pricing_Season Smallint ) ) by odbc ;",AW_load_AMT_AGG_2020_1st_Setup.sas
INSERT INTO TABLE AWPROD.AMT_AGG SELECT * FROM AMT.AMT_AGG_2020;,AW_load_AMT_AGG_2020_1st_Setup.sas
DROP TABLE REVDBO.AMT_AGG;,AW_load_AMT_AGG_2020_1st_Setup.sas
" CREATE HADOOP TABLE AW_REV_DBO.AMT_AGG (  marsha Varchar( 5) , Strategy Varchar( 41) , RN_to_Replace Bigint , ACCOUNT_ID Bigint , Company_Name Varchar( 45) , Tier Varchar( 6) , Brand_Code Varchar( 2) , Hotel_Name Varchar( 80) , Comp Varchar( 1) , MF Varchar( 1) , Region Varchar( 23) , AVP Varchar( 26) , AD Varchar( 30) , ADRM Varchar( 23) , GRMRS_Hotel Varchar( 2) , GRMRS_RevMgr Varchar( 35) , GRMRS_Team_Leader Varchar( 22) , Market Varchar( 28) , Country Varchar( 32) , Hotel_Class Varchar( 10) , HCAP Bigint , Recommendation Varchar( 24) , Rec2 Varchar( 23) , Pricing_Scenario Bigint , Exception Bigint , RN_L12 DOUBLE , Rev_L12 DOUBLE , Retail_Rev_L12 DOUBLE , Displace_RV_L12 DOUBLE , ADR_L12 DOUBLE , Discount_Percent_L12 DOUBLE , Displacement_Percent_L12 DOUBLE , SrtOrder Bigint , Price Varchar( 1) , RN_YTD DOUBLE , Rev_YTD DOUBLE , Retail_Rev_YTD DOUBLE , Displace_RV_YTD DOUBLE , ADR_YTD DOUBLE , Discount_Percent_YTD DOUBLE , Displacement_Percent_YTD DOUBLE , Rebid_Frequency_Percetn DOUBLE , Hotels_No_Rebid_Response Bigint , Accepted_No_Rebid_Response Bigint , Acceptance_Rate_No_Rebid_Respons DOUBLE , Hotels_Yes_Rebid_Response Bigint , Accepted_Yes_Rebid_Response Bigint , Acceptance_Rate_Yes_Rebid_Respon DOUBLE , Loss_in_ADR_pct DOUBLE , Hist_ADR_Chg_2017_pct DOUBLE , Hist_ADR_Chg_2018_pct DOUBLE , Hist_ADR_Chg_2019_YTD_pct DOUBLE , Pricing_Season Smallint ) stored AS parquetfile ) by odbc ;",AW_load_AMT_AGG_2020_1st_Setup.sas
   INSERT INTO AW_REV_DBO.AMT_AGG Select * FROM AW_REV_STG.AMT_AGG ) by odbc ;,AW_load_AMT_AGG_2020_1st_Setup.sas
DROP TABLE AWPROD.AW_REV_STG.AMT_AGG;,AW_load_AMT_AGG_2020_1st_Setup.sas
 CREATE TABLE AreaSales_Final2 AS ( SELECT  *  FROM AS_DATA_FINAL5 );,AW_Load_AreaSales_Final.sas
"  CREATE TABLE AW_TGT_TABLEAU_DBO.AREASALES_SLS_MGR_FINAL_STG (  rpt_pd_mo Double , sm_eid Varchar( 50) , sm_name Varchar( 102) , sm_role_nm Varchar( 100) , sls_channel Varchar( 50) , sls_segment Varchar( 50) , sm_org_nm Varchar( 100) , sm_mkt_nm Varchar( 100) , sm_area_nm Varchar( 100) , account_id Varchar( 15) , act_comp Varchar( 100) , segment Varchar( 50) , status Varchar( 8) , data_source Varchar( 11) , UPDATEd_date Date , rn_2018 Double , rn_2019 Double , rv_2018 Double , rv_2019 Double , grpcat_rv_2018 Double , grpcat_rv_2019 Double , loccat_rv_2018 Double , loccat_rv_2019 Double , cat_rv_2018 Double , cat_rv_2019 Double , tot_rv_2018 Double , tot_rv_2019 Double , AP_RN_OTBND_2018 Double , AP_RN_OTBND_2019 Double , AP_PROD_OTBND_2018 Double , AP_PROD_OTBND_2019 Double , ap_rn_2018 Double , ap_rn_2019 Double , ap_prod_2018 Double , ap_prod_2019 Double , es_rn_2018 Double , es_rn_2019 Double , es_rev_2018 Double , es_rev_2019 Double , tot_pace_goal_2019 Double , ap_goal_2019 Double ) ) by odbc ;",AW_Load_AreaSales_Final.sas
INSERT INTO TABLE AWPROD.AREASALES_SLS_MGR_FINAL_STG SELECT * FROM work.AreaSales_Final2;,AW_Load_AreaSales_Final.sas
   TRUNCATE Table AW_TGT_TABLEAU_DBO.AREASALES_SLS_MGR_FINAL ) by odbc ;,AW_Load_AreaSales_Final.sas
  INSERT INTO AW_TGT_TABLEAU_DBO.AREASALES_SLS_MGR_FINAL Select * FROM AW_TGT_TABLEAU_DBO.AREASALES_SLS_MGR_FINAL_STG ) by odbc ;,AW_Load_AreaSales_Final.sas
DROP TABLE AWPROD.AREASALES_SLS_MGR_FINAL_STG;,AW_Load_AreaSales_Final.sas
   TRUNCATE Table AW_SLS_PRD_AM.AREASALES_SLS_MGR_FINAL ) by odbc ;,AW_Load_AreaSales_Final.sas
  INSERT INTO AW_SLS_PRD_AM.AREASALES_SLS_MGR_FINAL Select * FROM AW_TGT_TABLEAU_DBO.AREASALES_SLS_MGR_FINAL ) by odbc ;,AW_Load_AreaSales_Final.sas
   TRUNCATE Table AW_SLS_PRD_AM.Areasales_ATRTop100 ) by odbc ;,AW_Load_Area_ATR.sas
"  CREATE TABLE AW_SLS_STG_AM.&TBLNM._STG ( Region Varchar( 4) , AST Varchar( 30) , company_name Varchar( 100) , MARSHA Varchar( 5) , WEEKDAY_WEEKEND Varchar( 7) , DAYOFWEEK Varchar( 3) , RATE_TYPE Varchar( 9) , OWNER Varchar( 50) , ACOMP Varchar( 1) , MARKET Varchar( 37) , AD Varchar( 30) , AMERICAS_REGION Varchar( 25) , HAWAII Varchar( 1) , rn_ly Double , rv_ly Double , stay_date_ty Date , stay_date_ly Date , highest_level_claritas_id Double , los Double , month Double , qtr Double , year Double , rn Double , rv Double , week Double , week_ly Double , month_ly Double , qtr_ly Double , year_ly Double , Rank Double , HOTEL_NAME Varchar( 100) , BRND Varchar( 2)) ) by odbc ;",AW_Load_Area_ATR.sas
INSERT INTO TABLE AWPROD.&TBLNM._STG SELECT * FROM work.&TBLNM;,AW_Load_Area_ATR.sas
  INSERT INTO AW_SLS_PRD_AM.Areasales_ATRTop100 Select * FROM AW_SLS_STG_AM.&TBLNM._STG ) by odbc ;,AW_Load_Area_ATR.sas
DROP TABLE AWPROD.&TBLNM._STG;,AW_Load_Area_ATR.sas
   TRUNCATE Table AW_TGT_TABLEAU_DBO.Areasales_ATRTop100 ) by odbc ;,AW_Load_Area_ATR.sas
  INSERT INTO AW_TGT_TABLEAU_DBO.Areasales_ATRTop100 Select * FROM AW_SLS_PRD_AM.Areasales_ATRTop100 ) by odbc ;,AW_Load_Area_ATR.sas
   TRUNCATE Table AW_SLS_PRD_AM.AREA_SALES_FUNNEL ) by odbc ;,AW_Load_Area_Sales_Funnel.sas
"  CREATE TABLE AW_SLS_PRD_AM.&TBLNM._STG ( quote_created_dt Date , opty_proj_prop_flg Varchar( 1) , opty_num Varchar( 15) , opty_nm Varchar( 300) , opty_status Varchar( 30) , quote_num Varchar( 30) , quote_nm Varchar( 300) , curr_prop_status Varchar( 30) , opty_status_change_dt Date , opty_created_dt Date , quote_status_change_dt Date , business_type Varchar( 30) , lost_turndown_short_desc Varchar( 30) , lost_turndown_long_desc Varchar( 300) , arrival_dt Date , departure_dt Date , stay_year Varchar( 4) , property_nm Varchar( 100) , marsha_cd Varchar( 20) , property_location Varchar( 30) , claritas_id Double , claritas_nm Varchar( 100) , sfa_account_nm Varchar( 100) , sfa_account_type Varchar( 30) , quote_inter_claritas_id Double , quote_inter_account_nm Varchar( 100) , originating_mgr_id Varchar( 15) , orig_mgr_login Varchar( 15) , orig_mgr_fname Varchar( 50) , orig_mgr_lname Varchar( 50) , mkt_segment Varchar( 100) , sales_mgr_1_id Varchar( 15) , sales_mgr_1_login Varchar( 15) , sales_mgr_fname Varchar( 50) , sales_mgr_lname Varchar( 50) , proj_rns Double , rm_rev Double , function_rev Double , tot_proj_rev Double , goal_mgr_nm Varchar( 30) , goal_mgr_eid Varchar( 8) , mgr_sfo_org Varchar( 100) , goal_mgr_market Varchar( 100) , goal_mgr_area Varchar( 100) , goal_mgr_role Varchar( 50) , sales_channel Varchar( 12) , goal_mgr_segment Varchar( 20) , goal_mgr_acct_comp Varchar( 100) , outbound_ind Varchar( 1) , tracked_by_cd Varchar( 1) , dual_assignment_flag Varchar( 1) , dw_load_ts Timestamp) ) by odbc ;",AW_Load_Area_Sales_Funnel.sas
INSERT INTO TABLE AWPROD.&TBLNM._STG SELECT * FROM work.&TBLNM;,AW_Load_Area_Sales_Funnel.sas
  INSERT INTO AW_SLS_PRD_AM.AREA_SALES_FUNNEL Select * FROM AW_SLS_PRD_AM.&TBLNM._STG ) by odbc ;,AW_Load_Area_Sales_Funnel.sas
DROP TABLE AWPROD.&TBLNM._STG;,AW_Load_Area_Sales_Funnel.sas
   TRUNCATE Table AW_SLS_PRD_AM.SPECIAL_CORP ) by odbc ;,AW_Load_Area_Special_Corp.sas
"  CREATE TABLE AW_SLS_STG_AM.SPECIAL_CORP_STG ( Region Varchar( 4) , AST Varchar( 30) , MARSHA Varchar( 5) , WEEKDAY_WEEKEND Varchar( 7) , DAYOFWEEK Varchar( 3) , RATE_TYPE Varchar( 9) , OWNER Varchar( 50) , ACOMP Varchar( 1) , MARKET Varchar( 37) , AD Varchar( 30) , AMERICAS_REGION Varchar( 25) , HAWAII Varchar( 1) , rn_ly Double , rv_ly Double , stay_date_ty Date , stay_date_ly Date , month Double , qtr Double , year Double , rn Double , rv Double , week Double , week_ly Double , month_ly Double , qtr_ly Double , year_ly Double , HOTEL_NAME Varchar( 100) , BRND Varchar( 2)) ) by odbc ;",AW_Load_Area_Special_Corp.sas
INSERT INTO TABLE AWPROD.SPECIAL_CORP_STG SELECT * FROM work.SPECIAL_CORP;,AW_Load_Area_Special_Corp.sas
  INSERT INTO AW_SLS_PRD_AM.SPECIAL_CORP Select * FROM AW_SLS_STG_AM.SPECIAL_CORP_STG ) by odbc ;,AW_Load_Area_Special_Corp.sas
DROP TABLE AWPROD.SPECIAL_CORP_STG;,AW_Load_Area_Special_Corp.sas
   TRUNCATE Table AW_TGT_TABLEAU_DBO.SPECIAL_CORP ) by odbc ;,AW_Load_Area_Special_Corp.sas
  INSERT INTO AW_TGT_TABLEAU_DBO.SPECIAL_CORP Select * FROM AW_SLS_PRD_AM.SPECIAL_CORP ) by odbc ;,AW_Load_Area_Special_Corp.sas
 CREATE TABLE Production_wRollup2 AS ( SELECT  *  FROM Load_Assoc_Prod_to_AW );,AW_Load_AssociateProduction_Dashboard.sas
"  CREATE TABLE AW_TGT_TABLEAU_DBO.AREASALES_ASSOCIATE_PROD_RPT_STG (  VP_Name Varchar( 102) , Mkt_Ldr_Name Varchar( 102) , MAE_Ldr_Name Varchar( 102) , Sr_MAE_Name Varchar( 102) , Area_Ldr_Name Varchar( 102) , data_source Varchar( 11) , rpt_yr Double , rpt_pd_mo Double , sm_name Varchar( 100) , sm_role_nm Varchar( 100) , sls_channel Varchar( 50) , sls_segment Varchar( 50) , sls_sub_segment Varchar( 50) , sm_org_nm Varchar( 100) , sm_mkt_nm Varchar( 100) , sm_area_nm Varchar( 100) , act_comp Varchar( 100) , segment Varchar( 50) , track_to_acct_sales Varchar( 1) , Tot_AP_Rev_2019 Double , Tot_AP_Goal_2019 Double , Tot_Pace_Rev_2019 Double , Tot_Pace_Goal_2019 Double , UPDATEd_date Date ) ) by odbc ;",AW_Load_AssociateProduction_Dashboard.sas
INSERT INTO TABLE AWPROD.AREASALES_ASSOCIATE_PROD_RPT_STG SELECT * FROM work.Production_wRollup2;,AW_Load_AssociateProduction_Dashboard.sas
   TRUNCATE Table AW_TGT_TABLEAU_DBO.AREASALES_ASSOCIATE_PROD_RPT ) by odbc ;,AW_Load_AssociateProduction_Dashboard.sas
  INSERT INTO AW_TGT_TABLEAU_DBO.AREASALES_ASSOCIATE_PROD_RPT Select * FROM AW_TGT_TABLEAU_DBO.AREASALES_ASSOCIATE_PROD_RPT_STG ) by odbc ;,AW_Load_AssociateProduction_Dashboard.sas
DROP TABLE AWPROD.AREASALES_ASSOCIATE_PROD_RPT_STG;,AW_Load_AssociateProduction_Dashboard.sas
 CREATE TABLE CleanData_Adjustments2 AS ( SELECT  *  FROM Clean_Data_Adjustments );,AW_Load_AS_DataAdjustments_Final.sas
"  CREATE TABLE AW_SLS_PRD_AM.CLEANSED_DATA_ADJUSTMENTS_STG (  RPT_PD_MO Double, sm_eid Varchar( 8), sm_name Varchar( 24), sm_role_nm Varchar( 36), sls_channel Varchar( 12), sls_segment Varchar( 10), sm_org_nm Varchar( 50), SM_MKT_NM Varchar( 100), SM_AREA_NM Varchar( 100), segment Varchar( 30), act_comp Varchar( 32), AP_PROD_2019 Double, AP_GOAL_2019 Double, TOT_RV_2019 Double, tot_pace_goal_2019 Double, STATUS Varchar( 4), DATA_SOURCE Varchar( 6), UPDATED_DATE Date ) ) by odbc ;",AW_Load_AS_DataAdjustments_Final.sas
INSERT INTO TABLE AWPROD.CLEANSED_DATA_ADJUSTMENTS_STG SELECT * FROM work.CleanData_Adjustments2;,AW_Load_AS_DataAdjustments_Final.sas
   TRUNCATE Table AW_SLS_PRD_AM.CLEANSED_DATA_ADJUSTMENTS_FINAL ) by odbc ;,AW_Load_AS_DataAdjustments_Final.sas
  INSERT INTO AW_SLS_PRD_AM.CLEANSED_DATA_ADJUSTMENTS_FINAL Select * FROM AW_SLS_PRD_AM.CLEANSED_DATA_ADJUSTMENTS_STG ) by odbc ;,AW_Load_AS_DataAdjustments_Final.sas
DROP TABLE AWPROD.CLEANSED_DATA_ADJUSTMENTS_STG;,AW_Load_AS_DataAdjustments_Final.sas
 CREATE TABLE BTSM_BT_GOAL_PROD2 AS ( SELECT  *  FROM BTSM_BT_GOAL_PROD );,AW_Load_BTSM_BT_GOAL_PROD.sas
"  CREATE TABLE AW_TGT_TABLEAU_DBO.AREASALES_BTSM_BT_GOAL_FINAL_STG (  Year Double , Month Double , Organization Varchar( 255) , EXECUTIVE_EID Varchar( 255) , Full_Name Varchar( 255) , BT_RN_COUNT Double , BT_RN_GOAL Double  ) ) by odbc ;",AW_Load_BTSM_BT_GOAL_PROD.sas
INSERT INTO TABLE AWPROD.AREASALES_BTSM_BT_GOAL_FINAL_STG SELECT * FROM work.BTSM_BT_GOAL_PROD2;,AW_Load_BTSM_BT_GOAL_PROD.sas
   TRUNCATE Table AW_TGT_TABLEAU_DBO.AREASALES_BTSM_BT_GOAL_FINAL ) by odbc ;,AW_Load_BTSM_BT_GOAL_PROD.sas
  INSERT INTO AW_TGT_TABLEAU_DBO.AREASALES_BTSM_BT_GOAL_FINAL Select * FROM AW_TGT_TABLEAU_DBO.AREASALES_BTSM_BT_GOAL_FINAL_STG ) by odbc ;,AW_Load_BTSM_BT_GOAL_PROD.sas
DROP TABLE AWPROD.AREASALES_BTSM_BT_GOAL_FINAL_STG;,AW_Load_BTSM_BT_GOAL_PROD.sas
 CREATE TABLE BTSM_QUAL_GOAL_PROD2 AS ( SELECT  *  FROM BTSM_QUAL_GOAL_PROD );,AW_Load_BTSM_QUAL_GOAL_PROD.sas
"  CREATE TABLE AW_TGT_TABLEAU_DBO.AREASALES_BTSM_QUAL_FINAL_STG (  Year Double , Month Double , Organization Varchar( 50) , EXECUTIVE_EID Varchar( 8) , Full_Name Varchar( 255) , QUAL_COUNT Double , QUAL_GOAL Double  ) ) by odbc ;",AW_Load_BTSM_QUAL_GOAL_PROD.sas
INSERT INTO TABLE AWPROD.AREASALES_BTSM_QUAL_FINAL_STG SELECT * FROM work.BTSM_QUAL_GOAL_PROD2;,AW_Load_BTSM_QUAL_GOAL_PROD.sas
   TRUNCATE Table AW_TGT_TABLEAU_DBO.AREASALES_BTSM_QUAL_FINAL ) by odbc ;,AW_Load_BTSM_QUAL_GOAL_PROD.sas
  INSERT INTO AW_TGT_TABLEAU_DBO.AREASALES_BTSM_QUAL_FINAL Select * FROM AW_TGT_TABLEAU_DBO.AREASALES_BTSM_QUAL_FINAL_STG ) by odbc ;,AW_Load_BTSM_QUAL_GOAL_PROD.sas
DROP TABLE AWPROD.AREASALES_BTSM_QUAL_FINAL_STG;,AW_Load_BTSM_QUAL_GOAL_PROD.sas
"CREATE TABLE BTSM_RNDETAIL2 AS ( SELECT  *, eid AS eid1, UPPER( eid1 ) AS EID  FROM BTSM_RNDETAIL );",AW_Load_BTSM_RN_Detail.sas
ALTER TABLE BTSM_RNDETAIL2 DROP COLUMN eid1 ;,AW_Load_BTSM_RN_Detail.sas
"  CREATE TABLE AW_TGT_TABLEAU_DBO.AREASALES_BTSM_RNDETAIL_STG (  Year Double , Cycle Double , Month Double , Organization Varchar( 255) , eid Varchar( 255) , Full_Name Varchar( 255) , MarshaCode Varchar( 5) , Company_Name Varchar( 255) , MarketRateCode Varchar( 20) , RoomNights Double , Revenue Double ) ) by odbc ;",AW_Load_BTSM_RN_Detail.sas
INSERT INTO TABLE AWPROD.AREASALES_BTSM_RNDETAIL_STG SELECT * FROM work.BTSM_RNDETAIL2;,AW_Load_BTSM_RN_Detail.sas
   TRUNCATE Table AW_TGT_TABLEAU_DBO.AREASALES_BTSM_RNDETAIL_FINAL ) by odbc ;,AW_Load_BTSM_RN_Detail.sas
  INSERT INTO AW_TGT_TABLEAU_DBO.AREASALES_BTSM_RNDETAIL_FINAL Select * FROM AW_TGT_TABLEAU_DBO.AREASALES_BTSM_RNDETAIL_STG ) by odbc ;,AW_Load_BTSM_RN_Detail.sas
DROP TABLE AWPROD.AREASALES_BTSM_RNDETAIL_STG;,AW_Load_BTSM_RN_Detail.sas
   TRUNCATE Table AW_SLS_DBO.BT_INBND_OTBND_PROD ) by odbc ;,AW_Load_BT_Inbnd_Otbnd.sas
"  CREATE TABLE AW_SLS_STG_AM.&TBLNM._STG ( rpt_pd_mo Double, ORG_NAME Varchar( 100), MARKET_NAME Varchar( 100), AREA_NAME Varchar( 100), ROLE_TITLE Varchar( 100), account_id Varchar( 15), MARSHA Varchar( 10), ap_tot_rm_nts Double, ap_tot_rm_rev Double, outbound_ind Varchar( 1)) ) by odbc ;",AW_Load_BT_Inbnd_Otbnd.sas
INSERT INTO TABLE AWPROD.&TBLNM._STG SELECT * FROM work.&TBLNM;,AW_Load_BT_Inbnd_Otbnd.sas
  INSERT INTO AW_SLS_DBO.BT_INBND_OTBND_PROD Select * FROM AW_SLS_STG_AM.&TBLNM._STG ) by odbc ;,AW_Load_BT_Inbnd_Otbnd.sas
DROP TABLE AWPROD.&TBLNM._STG;,AW_Load_BT_Inbnd_Otbnd.sas
   TRUNCATE Table AW_SLS_PRD_AM.CI07_Month ) by odbc ;,AW_Load_CI07Dash.sas
"  CREATE TABLE AW_SLS_PRD_AM.CI07_Month_STG ( marsha Varchar( 5) , ArrivalYear Varchar( 100), mnth Double , rn_ty Double , rn_ly Double , rr_ty Double , rr_ly Double , brnd Varchar( 40) , HOTEL_NAME Varchar( 100) , OWNER Varchar( 200) , SFO_ORG Varchar( 40) , RD Varchar( 40) , MF Varchar( 1) , ACOMP Varchar( 1) , status Varchar( 50) , tract Varchar ( 50), ytd_rr_ty Double , ytd_rr_ly Double , UPDATEd_date VARCHAR( 9)) ) by odbc ;",AW_Load_CI07Dash.sas
INSERT INTO TABLE AWPROD.CI07_Month_STG SELECT * FROM work.CI07_Month;,AW_Load_CI07Dash.sas
  INSERT INTO AW_SLS_PRD_AM.CI07_Month Select * FROM AW_SLS_PRD_AM.CI07_Month_STG ) by odbc ;,AW_Load_CI07Dash.sas
DROP TABLE AWPROD.CI07_Month_STG;,AW_Load_CI07Dash.sas
" CREATE TABLE AW_TGT_BUS_DBO.STR_COMPETE_STG (  MARSHA VARCHAR( 5), MAR_HOTEL  VARCHAR( 6), COMP_HOTEL VARCHAR( 6), CHAIN_NAME  VARCHAR( 25), HOTEL_NAME  VARCHAR( 50), CITY  VARCHAR( 30), STATE  VARCHAR( 8), PHONE  VARCHAR( 15), CAP  SMALLINT, OPENDATE  VARCHAR( 6), ZIP  VARCHAR( 10), CONTROL  VARCHAR( 1), COUNTRY  VARCHAR( 20), SCALE  VARCHAR( 25), RUNDATE  VARCHAR( 6) ) ) by odbc ;",AW_load_compete.sas
"CREATE TABLE work.compete1 AS ( SELECT  *, rundate AS rundate1, COMPSET AS COMP_HOTEL, rundate1 AS rundate  FROM output.compete2 );",AW_load_compete.sas
ALTER TABLE work.compete1 DROP COLUMN rundate1 ;,AW_load_compete.sas
SELECT * FROM work.compete1 ORDER BY MAR_HOTEL;,AW_load_compete.sas
" CREATE TABLE work.plu AS (  SELECT RTRIM( STR_ID) AS MAR_HOTEL , MARSHA FROM AW_TGT_BUS_DBO.PROPERTY_MASTER_HIST WHERE asof_yrmo = &STARMNTH. AND openflag = 'Y' AND BRND IN ( 'CY','FI','SH','FS','JW','BR','RI','TS','RZ','AK','GE','PR','EB','OX','CC','BG','AR','ER','DE','4P','AL','EL','GX','LC','MD','SI','ST','TX','WH','WI','FP','XR')   ) ;",AW_load_compete.sas
SELECT * FROM plu ORDER BY MAR_HOTEL;,AW_load_compete.sas
 CREATE TABLE work.compete AS ( SELECT  *  FROM plu A RIGHT JOIN work.compete1 B ON  A.MAR_HOTEL =  B.MAR_HOTEL);,AW_load_compete.sas
 CREATE TABLE tmp AS ( SELECT  *  FROM work.compete  WHERE MARSHA=' ' AND MAR_HOTEL=COMP_HOTEL);,AW_load_compete.sas
"SELECT DISTINCT * FROM work.compete ORDER BY MAR_HOTEL ,COMP_HOTEL;",AW_load_compete.sas
INSERT INTO TABLE AWPROD.STR_COMPETE_STG SELECT * FROM work.compete;,AW_load_compete.sas
   TRUNCATE TABLE AW_TGT_BUS_DBO.STR_COMPETE) by odbc ;,AW_load_compete.sas
   INSERT INTO AW_TGT_BUS_DBO.STR_COMPETE Select * FROM AW_TGT_BUS_DBO.STR_COMPETE_STG ) by odbc ;,AW_load_compete.sas
   DROP TABLE AW_TGT_BUS_DBO.STR_COMPETE_STG ) by odbc ;,AW_load_compete.sas
" CREATE TABLE work.global_pipeline AS ( SELECT  *  , &STARMNTH AS ASOF_YRMO  FROM PIPELINE.global_pipeline  WHERE PROJECT_PHASE in( 'In Construction','Final Planning','Ab AND oned','Final Planning','Deferred','Unconfirmed' ) );",AW_load_global_pipeline_Load_wASYRMO.sas
" CREATE TABLE AW_TGT_BUS_DBO.STR_GLOBAL_PIPELINE_STG (  PROJECT_ID VARCHAR( 10), PROJECT_NAME VARCHAR( 128), ADDRESS VARCHAR( 120), CITY VARCHAR( 46), STATE VARCHAR( 6), COUNTRY VARCHAR( 56), POSTAL_CODE VARCHAR( 14), MARKET VARCHAR( 56), TRACT VARCHAR( 68), ROOM_COUNT integer, CONDOTEL_ROOM_COUNT VARCHAR( 6), TIMESHARE_UNITS VARCHAR( 6), PROJECTED_OPENING_DATE VARCHAR( 20), PROJECT_PHASE VARCHAR( 30), AFFILIATION_CODE VARCHAR( 8), AFFILIATION_NAME VARCHAR( 76), CHAIN_SCALE VARCHAR( 42), PROJECT_OVERVIEW VARCHAR( 2048), DATE_ENTERED_PRE_PLANNING VARCHAR( 20), DATE_ENTERED_PLANNING VARCHAR( 20), DATE_ENTERED_FINAL_PLANNING VARCHAR( 20), DATE_ENTERED_CONSTRUCTION VARCHAR( 20), DATE_ENTERED_DEFERRED VARCHAR( 20), DATE_ENTERED_ABANDONED VARCHAR( 20), MANAGEMENT_COMPANY_NAME VARCHAR( 122), MANAGEMENT_CONTACT_NAME VARCHAR( 52), MANAGEMENT_ADDRESS_1 VARCHAR( 98), MANAGEMENT_ADDRESS_2 VARCHAR( 70), MANAGEMENT_CITY VARCHAR( 28), MANAGEMENT_STATE VARCHAR( 6), MANAGEMENT_COUNTRY VARCHAR( 40), MANAGEMENT_POSTAL_CODE VARCHAR( 20), MANAGEMENT_PHONE VARCHAR( 26), MANAGEMENT_EMAIL VARCHAR( 78), MANAGEMENT_WEBSITE VARCHAR( 140), OWNER_COMPANY_NAME VARCHAR( 134), OWNER_CONTACT_NAME VARCHAR( 132), OWNER_ADDRESS_1 VARCHAR( 106), OWNER_ADDRESS_2 VARCHAR( 88), OWNER_CITY VARCHAR( 28), OWNER_STATE VARCHAR( 22), OWNER_COUNTRY VARCHAR( 40), OWNER_POSTAL_CODE VARCHAR( 20), OWNER_PHONE VARCHAR( 26), OWNER_EMAIL VARCHAR( 72), OWNER_WEBSITE VARCHAR( 100), DEVELOPER_COMPANY_NAME VARCHAR( 160), DEVELOPER_CONTACT_NAME VARCHAR( 72), DEVELOPER_ADDRESS_1 VARCHAR( 118), DEVELOPER_ADDRESS_2 VARCHAR( 96), DEVELOPER_CITY VARCHAR( 28), DEVELOPER_STATE VARCHAR( 10), DEVELOPER_COUNTRY VARCHAR( 40), DEVELOPER_POSTAL_CODE VARCHAR( 20), DEVELOPER_PHONE VARCHAR( 26), DEVELOPER_EMAIL VARCHAR( 62), DEVELOPER_WEBSITE VARCHAR( 200), ARCHITECT_COMPANY_NAME VARCHAR( 98), ARCHITECT_CONTACT_NAME VARCHAR( 52), ARCHITECT_ADDRESS1 VARCHAR( 92), ARCHITECT_ADDRESS_2 VARCHAR( 134), ARCHITECT_CITY VARCHAR( 38), ARCHITECT_STATE VARCHAR( 6), ARCHITECT_COUNTRY VARCHAR( 40), ARCHITECT_POSTAL_CODE VARCHAR( 20), ARCHITECT_PHONE VARCHAR( 26), ARCHITECT_EMAIL VARCHAR( 68), ARCHITECT_WEBSITE VARCHAR( 66), PARENT_COMPANY_NAME VARCHAR( 74), CONDOTEL__Y_N_ VARCHAR( 2), POOL__Y_N_ VARCHAR( 2), RESTAURANT__Y_N_ VARCHAR( 2), BUSINESS_CENTER__Y_N_ VARCHAR( 2), MEETING_SPACE__Y_N_ VARCHAR( 2), NUMBER_OF_MEETING_ROOMS VARCHAR( 10), LARGEST_MEETING_ROOM_SQ_FT VARCHAR( 10), TOTAL_MEETING_SPACE_SQ_FT VARCHAR( 12), PROJECT_AREA__1000_SQ__FT_ VARCHAR( 18), PROJECT_VALUE__MILLIONS__ VARCHAR( 12), COUNTY_FIP VARCHAR( 10), COUNTY_NAME VARCHAR( 48), MSA_FIP VARCHAR( 10), MSA_NAME VARCHAR( 200), DATA_SOURCE VARCHAR( 20), EXECUTED_DATE VARCHAR( 20), DATE_CREATED VARCHAR( 20), FUTURE_STR_NUMBER VARCHAR( 12), LATITUDE VARCHAR( 20), LONGITUDE VARCHAR( 22), CONTINENT VARCHAR( 22), NON_RENTAL_RESIDENCES integer, PROJECT_NUM integer, FUTURE_STR_NUM integer, ASOF_YRMO INTEGER ) ) by odbc ;",AW_load_global_pipeline_Load_wASYRMO.sas
INSERT INTO TABLE AWPROD.STR_GLOBAL_PIPELINE_STG SELECT * FROM global_pipeline;,AW_load_global_pipeline_Load_wASYRMO.sas
   INSERT INTO AW_TGT_BUS_DBO.STR_GLOBAL_PIPELINE Select * FROM AW_TGT_BUS_DBO.STR_GLOBAL_PIPELINE_STG ) by odbc ;,AW_load_global_pipeline_Load_wASYRMO.sas
   DROP TABLE AW_TGT_BUS_DBO.STR_GLOBAL_PIPELINE_STG ) by odbc ;,AW_load_global_pipeline_Load_wASYRMO.sas
"CREATE TABLE AP_Inbnd_Pre AS (SELECT rpt_pd_mo, org_name, market_name, area_name, role_title, account_id, prop_cd, SUM(ap_tot_rm_nts) AS ap_tot_rm_nts, SUM(ap_tot_rm_rev) AS ap_tot_rm_rev FROM mgrprodfinal WHERE rpt_yr=&curyr AND rpt_pd_mo <=&shortpd GROUP BY rpt_pd_mo, org_name, market_name, area_name, role_title, account_id, prop_cd );",AW_Load_InbndOutbnd_WIG_Data_v2.sas
" CREATE TABLE AP_Inbnd AS ( SELECT  *, prop_cd AS MARSHA, 'N' AS outbound_ind  FROM AP_Inbnd_Pre );",AW_Load_InbndOutbnd_WIG_Data_v2.sas
"CREATE TABLE AP_Otbnd_Pre AS (SELECT stay_pd_mo, mgr_org_name, market_name, area_name, role_title, goal_account_id, MARSHA, SUM(rn) AS rn, SUM(room_revenue) AS room_revenue FROM otbnd.BT_IN_OUT_YTD WHERE report_year=&curyr AND stay_pd_mo <=&shortpd AND outbound_ind not IN ( 'N') AND UPPER( ROLE_TITLE) IN ( 'MARKET ACCOUNT EXECUTIVE, MID-MARKET','MARKET ACCOUNT EXECUTIVE, PROSPECT','AREA ACCOUNT EXECUTIVE, MID-MARKET' ) GROUP BY stay_pd_mo, mgr_org_name, market_name, area_name, role_title, goal_account_id, MARSHA );",AW_Load_InbndOutbnd_WIG_Data_v2.sas
"CREATE TABLE AP_Otbnd AS ( SELECT  *, mgr_org_name AS org_name, stay_pd_mo AS rpt_pd_mo, rn AS ap_tot_rm_nts, room_revenue AS ap_tot_rm_rev, 'Y' AS outbound_ind , CAST( goal_account_id AS INT  ) AS account_id  FROM AP_Otbnd_Pre );",AW_Load_InbndOutbnd_WIG_Data_v2.sas
ALTER TABLE AP_Otbnd DROP COLUMN goal_account_id ;,AW_Load_InbndOutbnd_WIG_Data_v2.sas
 CREATE TABLE AP_Inbound_Outbound AS ( SELECT  *  FROM AP_Inbnd UNION ALL SELECT  *  FROM AP_Otbnd);,AW_Load_InbndOutbnd_WIG_Data_v2.sas
 CREATE TABLE PROPS_W_STARWOOD AS  ( SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER ORDER BY MARSHA  )  ;,AW_Load_InbndOutbnd_WIG_Data_v2.sas
 CREATE TABLE AP_Inbound_Outbound1 AS select a.* FROM AP_Inbound_Outbound a LEFT JOIN props_w_starwood b ON a.marsha=b.marsha WHERE ap_tot_rm_nts <> 0 AND ap_tot_rm_rev <> 0 ;,AW_Load_InbndOutbnd_WIG_Data_v2.sas
 CREATE TABLE AP_Inbound_Outbound2 AS ( SELECT  *  FROM AP_Inbound_Outbound1 );,AW_Load_InbndOutbnd_WIG_Data_v2.sas
"  CREATE TABLE AW_SLS_STG_AM.Lux_RateProg_Prod_STG (  Associate Varchar ( 14), Associate_eid Varchar ( 8), MARSHA Varchar ( 5), rate_pgm_txt Varchar ( 22), market_cd Varchar ( 8), ORG_NAME Varchar ( 50), YEARMO Double, RN Double, RV Double ) ) by odbc ;",AW_Load_LUX_Rate_Program_Prod.sas
INSERT INTO TABLE AWPROD.Lux_RateProg_Prod_STG SELECT * FROM work.LUX_RateProgram_Only;,AW_Load_LUX_Rate_Program_Prod.sas
   TRUNCATE Table AW_SLS_PRD_AM.Lux_RateProg_Prod_&CURYR ) by odbc ;,AW_Load_LUX_Rate_Program_Prod.sas
   INSERT INTO AW_SLS_PRD_AM.Lux_RateProg_Prod_&CURYR Select * FROM AW_SLS_STG_AM.Lux_RateProg_Prod_STG ) by odbc ;,AW_Load_LUX_Rate_Program_Prod.sas
DROP TABLE AWPROD.Lux_RateProg_Prod_STG;,AW_Load_LUX_Rate_Program_Prod.sas
"  CREATE TABLE AW_SLS_STG_AM.Lux_RateProg_Details_STG (  Intermediary_ID Varchar ( 9), Intermediary_Company_NM Varchar ( 50), Intermediary_City_NM Varchar ( 50), Curr_TMC_Parent_IATA_ID Varchar ( 9), Curr_TMC_Parent_NM Varchar ( 50), Associate Varchar ( 14), Associate_eid Varchar ( 8), MARSHA Varchar ( 5), Curr_Rate_Pgm_Txt Varchar ( 22), Curr_Market_Cd Varchar ( 8), ORG_NAME Varchar ( 50), YEARMO Double, RN Double, RV Double ) ) by odbc ;",AW_Load_LUX_RP_Details_Prod.sas
INSERT INTO TABLE AWPROD.Lux_RateProg_Details_STG SELECT * FROM work.LUX_RateProgram_Details;,AW_Load_LUX_RP_Details_Prod.sas
   TRUNCATE Table AW_SLS_PRD_AM.Lux_RateProg_Details_&CURYR ) by odbc ;,AW_Load_LUX_RP_Details_Prod.sas
   INSERT INTO AW_SLS_PRD_AM.Lux_RateProg_Details_&CURYR Select * FROM AW_SLS_STG_AM.Lux_RateProg_Details_STG ) by odbc ;,AW_Load_LUX_RP_Details_Prod.sas
DROP TABLE AWPROD.Lux_RateProg_Details_STG;,AW_Load_LUX_RP_Details_Prod.sas
 CREATE TABLE Manual_Adjustments AS ( SELECT  *  FROM junk );,AW_Load_Manual_Adjustments.sas
"  CREATE TABLE AW_SLS_STG_AM.MANUAL_ADJUSTMENTS_STG ( sls_mgr_nm Varchar( 100) , sls_mgr_login Varchar( 30) , org_nm Varchar( 50) , org_num Double , market_nm Varchar( 100) , market_num Double , area_nm Varchar( 100) , area_num Double , prop_org_nm Varchar( 50) , prop_org_num Double , prop_market_nm Varchar( 100) , prop_market_num Double , prop_area_nm Varchar( 100) , prop_area_num Double , role_num Double , sls_mgr_role Varchar( 100) , quote_number Varchar( 15) , quote_nm Varchar( 100) , quote_status Varchar( 30) , cancel_fee_collected_flg Varchar( 1) , orig_def_dt Date , claritas_id Varchar( 50) , account_nm Varchar( 100) , arrival_dt Date , marsha_cd Varchar( 10) , asof_month_id Double , asof_year_id Double , adj_month_id Double , adj_year_id Double , goal_num Double , acct_comp_type Varchar( 50) , curr_rm_ngts Double , net_rm_ngts Double , currency_cd Varchar( 3) , net_rm_rev Double , curr_rm_rev Double , currency_2_cd Varchar( 3) , net_func_rev Double , curr_func_rev Double , currency_3_cd Varchar( 3) , total_curr_rev Double , total_net_rev Double , reason_dtl Varchar( 300) , adj_category Varchar( 100) , new_def_flg Varchar( 1) , reverse_adj_flg Varchar( 1) , business_type Varchar( 100) , do_not_track_flg Varchar( 1) , account_type Varchar( 100) , market_segment Varchar( 300) , stay_year Double , departure_dt Date , ext_channel Varchar( 100) , orig_mgr Varchar( 100) , sls_mgr_1 Varchar( 100) , created_dt Date , status_dt Date , change_type Varchar( 100) , dw_lock_ind Double , dw_load_ts Timestamp ) ) by odbc ;",AW_Load_Manual_Adjustments.sas
INSERT INTO TABLE AWPROD.MANUAL_ADJUSTMENTS_STG SELECT * FROM work.MANUAL_ADJUSTMENTS;,AW_Load_Manual_Adjustments.sas
   TRUNCATE Table AW_SLS_PRD_AM.MANUAL_ADJUSTMENTS ) by odbc ;,AW_Load_Manual_Adjustments.sas
  INSERT INTO AW_SLS_PRD_AM.MANUAL_ADJUSTMENTS Select * FROM AW_SLS_STG_AM.MANUAL_ADJUSTMENTS_STG ) by odbc ;,AW_Load_Manual_Adjustments.sas
DROP TABLE AWPROD.MANUAL_ADJUSTMENTS_STG;,AW_Load_Manual_Adjustments.sas
 CREATE TABLE MgrProdFinal2 AS ( SELECT  *  FROM MgrProdFinal );,AW_Load_MgrProd_Final.sas
"  CREATE TABLE AW_TGT_TABLEAU_DBO.AREASALES_MGR_PROD_FINAL_STG (  rpt_yr Double , rpt_pd_mo Double , ORG_NAME Varchar( 100) , MARKET_NAME Varchar( 100) , AREA_NAME Varchar( 100) , ROLE_TITLE Varchar( 100) , account_id Varchar( 15) , account_name Varchar( 100) , EXECUTIVE_EID Varchar( 10) , EXECUTIVE_NAME Varchar( 100) , prop_cd Varchar( 10) , PROP_NM Varchar( 100) , prp_org_nm Varchar( 100) , account_flg Varchar( 1) , act_comp Varchar( 100) , data_source Varchar( 8) , pace_rm_nts Double , pace_rm_rev Double , pace_grp_cat_rev Double , pace_loc_cat_rev Double , pace_tot_cat_rev Double , pace_tot_rev Double , ap_trns_rm_nts Double , ap_trns_rm_rev Double , ap_cntr_rm_nts Double , ap_cntr_rm_rev Double , ap_tot_rm_nts Double , ap_tot_rm_rev Double , ext_trns_rm_nts Double , ext_trns_rm_rev Double , ext_cntr_rm_nts Double , ext_cntr_rm_rev Double , ext_tot_rm_nts Double , ext_tot_rm_rev Double ) ) by odbc ;",AW_Load_MgrProd_Final.sas
INSERT INTO TABLE AWPROD.AREASALES_MGR_PROD_FINAL_STG SELECT * FROM work.MgrProdFinal2;,AW_Load_MgrProd_Final.sas
   TRUNCATE Table AW_TGT_TABLEAU_DBO.AREASALES_MGR_PROD_FINAL ) by odbc ;,AW_Load_MgrProd_Final.sas
  INSERT INTO AW_TGT_TABLEAU_DBO.AREASALES_MGR_PROD_FINAL Select * FROM AW_TGT_TABLEAU_DBO.AREASALES_MGR_PROD_FINAL_STG ) by odbc ;,AW_Load_MgrProd_Final.sas
DROP TABLE AWPROD.AREASALES_MGR_PROD_FINAL_STG;,AW_Load_MgrProd_Final.sas
   TRUNCATE Table AW_SLS_PRD_AM.AREASALES_MGR_PROD_FINAL ) by odbc ;,AW_Load_MgrProd_Final.sas
  INSERT INTO AW_SLS_PRD_AM.AREASALES_MGR_PROD_FINAL Select * FROM AW_TGT_TABLEAU_DBO.AREASALES_MGR_PROD_FINAL ) by odbc ;,AW_Load_MgrProd_Final.sas
   TRUNCATE Table AW_SLS_PRD_AM.MGR_PROD_BY_ACCT ) by odbc ;,AW_Load_Mgr_Prod_by_Account.sas
"  CREATE TABLE AW_SLS_STG_AM.&TBLNM._STG ( rpt_yr Double , rpt_pd_mo Double , sm_eid Varchar ( 10), sm_name Varchar ( 100), sm_role_id Double , sm_role_nm Varchar ( 100), sls_channel Varchar ( 50), sls_segment Varchar ( 50), sm_org_id Double , sm_org_nm Varchar ( 100), sm_mkt_id Double , sm_mkt_nm Varchar ( 100), sm_area_id Double , sm_area_nm Varchar ( 100), prop_cd Varchar ( 10), prop_nm Varchar ( 100), prp_org_id Double , prp_org_nm Varchar ( 100), prp_mkt_id Double , prp_mkt_nm Varchar ( 100), prp_area_id Double , prp_area_nm Varchar ( 100), account_id Varchar ( 15), account_nm Varchar ( 100), total_pace_id Double , total_pace_nm Varchar ( 100), account_flg Varchar ( 1), act_comp Varchar ( 100), pace_cur_rm_nts Double , pace_cur_rm_rev Double , pace_cur_grp_cat_rev Double , pace_cur_loc_cat_rev Double , pace_cur_tot_cat_rev Double , pace_fut_rm_nts Double , pace_fut_rm_rev Double , pace_fut_grp_cat_rev Double , pace_fut_loc_cat_rev Double , pace_fut_tot_cat_rev Double , pace_rm_nts Double , pace_rm_rev Double , pace_grp_cat_rev Double , pace_loc_cat_rev Double , pace_tot_cat_rev Double , pace_tot_rev Double , ap_trns_rm_nts Double , ap_trns_rm_rev Double , ap_cntr_rm_nts Double , ap_cntr_rm_rev Double , ap_tot_rm_nts Double , ap_tot_rm_rev Double , ext_trns_rm_nts Double , ext_trns_rm_rev Double , ext_cntr_rm_nts Double , ext_cntr_rm_rev Double , ext_tot_rm_nts Double , ext_tot_rm_rev Double , cw_dual_trk_flg Varchar ( 1)) ) by odbc ;",AW_Load_Mgr_Prod_by_Account.sas
INSERT INTO TABLE AWPROD.&TBLNM._STG SELECT * FROM work.&TBLNM;,AW_Load_Mgr_Prod_by_Account.sas
  INSERT INTO AW_SLS_PRD_AM.MGR_PROD_BY_ACCT Select * FROM AW_SLS_STG_AM.&TBLNM._STG ) by odbc ;,AW_Load_Mgr_Prod_by_Account.sas
DROP TABLE AWPROD.&TBLNM._STG;,AW_Load_Mgr_Prod_by_Account.sas
" CREATE TABLE aw_stg_bus_dbo.str_raw_daily_data_hist_new_week (  MARSHA VARCHAR( 5) , STR_ID INTEGER , BRAND VARCHAR( 2) , CURRENCY_TYPE VARCHAR( 12) , CUR VARCHAR( 3) , ASOF_DATE INTEGER , COMPLETE_DATA INTEGER , COMPLETE_DATA_SEG INTEGER , DATASOURCE VARCHAR( 3) , DATE_TY INTEGER , YRMNTH_TY INTEGER , YEAR_TY INTEGER , MONTH_TY INTEGER , DOM_TY INTEGER , DOW_TY INTEGER , WDWE_TY VARCHAR( 2) , DATE_LY INTEGER , YRMNTH_LY INTEGER , YEAR_LY INTEGER , MONTH_LY INTEGER , DOM_LY INTEGER , DOW_LY INTEGER , WDWE_LY VARCHAR( 2) , MARAVAIL INTEGER , MARSOLD INTEGER , MARREV DOUBLE , MKTAVAIL INTEGER , MKTSOLD DOUBLE , MKTREV DOUBLE , MKTAVAIL_UNW INTEGER , MKTSOLD_UNW DOUBLE , MKTREV_UNW DOUBLE , MARAVAILLY INTEGER , MARSOLDLY INTEGER , MARREVLY DOUBLE , MKTAVAILLY INTEGER , MKTSOLDLY DOUBLE , MKTREVLY DOUBLE , MKTAVAIL_UNWLY INTEGER , MKTSOLD_UNWLY DOUBLE , MKTREV_UNWLY DOUBLE , MARAVAIL_GP INTEGER , MARSOLD_GP INTEGER , MARREV_GP DOUBLE , MKTAVAIL_GP INTEGER , MKTSOLD_GP DOUBLE , MKTREV_GP DOUBLE , MKTAVAIL_UNW_GP INTEGER , MKTSOLD_UNW_GP DOUBLE , MKTREV_UNW_GP DOUBLE , MARAVAILLY_GP INTEGER , MARSOLDLY_GP INTEGER , MARREVLY_GP DOUBLE , MKTAVAILLY_GP INTEGER , MKTSOLDLY_GP DOUBLE , MKTREVLY_GP DOUBLE , MKTAVAIL_UNWLY_GP INTEGER , MKTSOLD_UNWLY_GP DOUBLE , MKTREV_UNWLY_GP DOUBLE , MARAVAIL_TN INTEGER , MARSOLD_TN INTEGER , MARREV_TN DOUBLE , MKTAVAIL_TN INTEGER , MKTSOLD_TN DOUBLE , MKTREV_TN DOUBLE , MKTAVAIL_UNW_TN INTEGER , MKTSOLD_UNW_TN DOUBLE , MKTREV_UNW_TN DOUBLE , MARAVAILLY_TN INTEGER , MARSOLDLY_TN INTEGER , MARREVLY_TN DOUBLE , MKTAVAILLY_TN INTEGER , MKTSOLDLY_TN DOUBLE , MKTREVLY_TN DOUBLE , MKTAVAIL_UNWLY_TN INTEGER , MKTSOLD_UNWLY_TN DOUBLE , MKTREV_UNWLY_TN DOUBLE , MARAVAIL_CN INTEGER , MARSOLD_CN INTEGER , MARREV_CN DOUBLE , MKTAVAIL_CN INTEGER , MKTSOLD_CN DOUBLE , MKTREV_CN DOUBLE , MKTAVAIL_UNW_CN INTEGER , MKTSOLD_UNW_CN DOUBLE , MKTREV_UNW_CN DOUBLE , MARAVAILLY_CN INTEGER , MARSOLDLY_CN INTEGER , MARREVLY_CN DOUBLE , MKTAVAILLY_CN INTEGER , MKTSOLDLY_CN DOUBLE , MKTREVLY_CN DOUBLE , MKTAVAIL_UNWLY_CN INTEGER , MKTSOLD_UNWLY_CN DOUBLE , MKTREV_UNWLY_CN DOUBLE ) ) by odbc ;",aw_load_new_week.sas
   INSERT INTO AW_STG_BUS_DBO.STR_RAW_DAILY_DATA_HIST_TMP SELECT * FROM AW_CMP_DBO.STR_RAW_DAILY_DATA_HIST WHERE ASOF_DATE < &PREVDT AND ASOF_DATE <> ( SELECT MIN( ASOF_DATE) FROM AW_CMP_DBO.STR_RAW_DAILY_DATA_HIST) ) by odbc ;,aw_load_new_week.sas
INSERT INTO TABLE AWSTG.STR_RAW_DAILY_DATA_HIST_NEW_WEEK SELECT * FROM output.new_week;,aw_load_new_week.sas
   INSERT INTO AW_STG_BUS_DBO.STR_RAW_DAILY_DATA_HIST_TMP SELECT * FROM AW_STG_BUS_DBO.STR_RAW_DAILY_DATA_HIST_NEW_WEEK ) by odbc ;,aw_load_new_week.sas
   TRUNCATE TABLE AW_CMP_DBO.STR_RAW_DAILY_DATA_HIST ) by odbc ;,aw_load_new_week.sas
   INSERT INTO AW_CMP_DBO.STR_RAW_DAILY_DATA_HIST SELECT * FROM AW_STG_BUS_DBO.STR_RAW_DAILY_DATA_HIST_TMP ) by odbc ;,aw_load_new_week.sas
"   CALL AW_TGT_PROXY_DBO.GRANT_ON_TABLE( 'AW_CMP_DBO' ,'STR_RAW_DAILY_DATA_HIST'  )  ) by odbc ;",aw_load_new_week.sas
   TRUNCATE TABLE AW_STG_BUS_DBO.STR_RAW_DAILY_DATA_HIST_TMP ) by odbc ;,aw_load_new_week.sas
   DROP TABLE AW_STG_BUS_DBO.STR_RAW_DAILY_DATA_HIST_NEW_WEEK ) by odbc ;,aw_load_new_week.sas
 CREATE TABLE OUTBOUND_FINAL AS ( SELECT  *  FROM OUTBOUND2 );,AW_Load_OutboundData.sas
"  CREATE TABLE AW_TGT_TABLEAU_DBO.AREASALES_OUTBOUND_FINAL_STG (  report_year Double , report_month Double , goal_mgr_channel Varchar( 50) , org_name Varchar( 100) , mrkt_name Varchar( 100) , area_name Varchar( 100) , sm_role_nm Varchar( 100) , eid Varchar( 8) , goal_mgr_name Varchar( 100) , act_comp Varchar( 100) , org_of_property Varchar( 100) , marsha_cd Varchar( 10) , pace_rm_rev Double , DATA_SOURCE Varchar( 11) , OWNER Varchar( 100) , HOTEL_NAME Varchar( 100), SFO_Market Varchar( 50) , SFO_Area Varchar( 50) ) ) by odbc ;",AW_Load_OutboundData.sas
INSERT INTO TABLE AWPROD.AREASALES_OUTBOUND_FINAL_STG SELECT * FROM work.OUTBOUND_FINAL;,AW_Load_OutboundData.sas
   TRUNCATE Table AW_TGT_TABLEAU_DBO.AREASALES_OUTBOUND_FINAL ) by odbc ;,AW_Load_OutboundData.sas
  INSERT INTO AW_TGT_TABLEAU_DBO.AREASALES_OUTBOUND_FINAL Select * FROM AW_TGT_TABLEAU_DBO.AREASALES_OUTBOUND_FINAL_STG ) by odbc ;,AW_Load_OutboundData.sas
DROP TABLE AWPROD.AREASALES_OUTBOUND_FINAL_STG;,AW_Load_OutboundData.sas
   TRUNCATE Table AW_SLS_PRD_AM.AREASALES_OUTBOUND_FINAL ) by odbc ;,AW_Load_OutboundData.sas
  INSERT INTO AW_SLS_PRD_AM.AREASALES_OUTBOUND_FINAL Select * FROM AW_TGT_TABLEAU_DBO.AREASALES_OUTBOUND_FINAL ) by odbc ;,AW_Load_OutboundData.sas
" CREATE TABLE FILL_MISSING_DATA AS SELECT REPORT_YEAR AS STAY_YEAR, STAY_PD_MO, MGR_ORG_NAME, PROPCASE( PROPERTY_ORG) AS ORG_NAME, PROPCASE( PROPERTY_ORG) AS PRP_ORG, ACCOUNT_NAME, GOAL_ACCOUNT_ID, PROP_MARKET, PROP_AREA, CASE WHEN ROLE_TITLE IN ( 'Market Account Executive, Mid-Market','Market Account Executive, Prospect') THEN 'Market-Deployed' ELSE MARKET_NAME END AS MRKT_NAME, CASE WHEN ROLE_TITLE IN ( 'Market Account Executive, Mid-Market','Market Account Executive, Prospect') THEN 'Market-Deployed' ELSE AREA_NAME END AS AREA_NAME, EXECUTIVE_EID, EXECUTIVE_NAME, ROLE_TITLE, MARSHA, MGD_FRN, DOM_INT, BRAND_CODE, RN, ROOM_REVENUE AS USD_REV FROM OTBND.BT_IN_OUT_YTD WHERE OUTBOUND_IND NOT IN ( 'N') AND ROLE_TITLE IN ( 'Market Account Executive, Mid-Market','Market Account Executive, Prospect') ;",AW_Load_Outbound_AP_Leadership_Dashboard_v2.sas
" CREATE TABLE OTBND_BT_PRODUCTION_YTD AS select a.stay_year, a.stay_pd_mo, a.mgr_org_name, a.prp_org AS org_name, a.prp_org, a.account_name, a.goal_account_id, a.prop_market, a.prop_area, a.mrkt_name, a.area_name, CASE WHEN b.org_name is null THEN 'Non-Participating' ELSE b.market_name END AS sfo_market, CASE WHEN b.org_name is null THEN 'Non-Participating' ELSE b.area_name END AS sfo_area, a.executive_eid, a.executive_name, a.role_title, CASE WHEN a.prp_org = 'Not Participating' AND c.region_name IN ( 'Americas East','Americas West') AND c.state <> 'HI' THEN 'Non-Participating US' when a.prp_org = 'Not Participating' AND c.region_name IN ( 'Canada') THEN 'Non-Participating Canada' when a.prp_org = 'Not Participating' AND c.region_name IN ( 'Americas West') AND c.state = 'HI' THEN 'Non-Participating Hawaii' when a.prp_org = 'Not Participating' AND c.region_name IN ( 'Caribbean Latin America') THEN 'Non-Participating CALA' when a.prp_org = 'Not Participating' AND c.region_name not IN ( 'Americas East','Americas West','Caribbean Latin America','Canada') THEN 'Non-Participating Other' ELSE a.prp_org END AS property_org, a.marsha, a.mgd_frn, a.dom_int, a.brand_code, a.rn, a.usd_rev, 'MRDW_Data' AS data_source FROM FILL_MISSING_DATA a LEFT JOIN prp_snap.areasls_prop_&curyr._&period B ON a.marsha=b.marsha_code LEFT JOIN AWPROD.PROPERTY_MASTER c ON a.marsha=c.marsha ;",AW_Load_Outbound_AP_Leadership_Dashboard_v2.sas
DROP TABLE AWPROD.AS_OTBND_FINAL_PROD_YTD_STG;,AW_Load_Outbound_AP_Leadership_Dashboard_v2.sas
"  CREATE TABLE AW_TGT_TABLEAU_DBO.AS_OTBND_FINAL_PROD_YTD_STG ( stay_year Double , STAY_PD_MO Double , MGR_ORG_NAME Varchar( 50) , org_name Varchar( 50) , PRP_ORG Varchar( 50) , account_name Varchar( 100), goal_account_id VARCHAR( 10), prop_market Varchar( 50) , prop_area Varchar( 50) , mrkt_name Varchar( 29) , area_name Varchar( 38) , sfo_market Varchar( 50) , sfo_area Varchar( 50) , EXECUTIVE_EID Varchar( 8) , EXECUTIVE_NAME Varchar( 50) , ROLE_TITLE Varchar( 50) , property_org Varchar( 50) , MARSHA Varchar( 5) , MGD_FRN Varchar( 1) , DOM_INT Varchar( 1) , BRAND_CODE Varchar( 2) , RN Double , usd_rev Double , data_source Varchar( 9) ) ) by odbc ;",AW_Load_Outbound_AP_Leadership_Dashboard_v2.sas
INSERT INTO TABLE AWPROD.AS_OTBND_FINAL_PROD_YTD_STG SELECT * FROM work.OTBND_BT_PRODUCTION_YTD;,AW_Load_Outbound_AP_Leadership_Dashboard_v2.sas
  TRUNCATE Table AW_TGT_TABLEAU_DBO.AREASALES_BT_OTBND_FINAL_PROD_YTD ) by odbc ;,AW_Load_Outbound_AP_Leadership_Dashboard_v2.sas
  INSERT INTO AW_TGT_TABLEAU_DBO.AREASALES_BT_OTBND_FINAL_PROD_YTD Select * FROM AW_TGT_TABLEAU_DBO.AS_OTBND_FINAL_PROD_YTD_STG ) by odbc ;,AW_Load_Outbound_AP_Leadership_Dashboard_v2.sas
DROP TABLE AWPROD.AS_OTBND_FINAL_PROD_YTD_STG;,AW_Load_Outbound_AP_Leadership_Dashboard_v2.sas
 CREATE TABLE Prop_Data_Owner_Deck2 AS ( SELECT  *  FROM Prop_Data_Owner_Deck );,AW_Load_OwnerDashboard_Final.sas
" CREATE TABLE AW_TGT_TABLEAU_DBO.AREASALES_OWNER_DASHBOARD_STG (  rpt_yr Double , rpt_pd_mo Double , marsha Varchar( 10) , act_comp Varchar( 100) , rn Double , rr Double , cr Double , tr Double , tot_rev_goal Double , ap_rn Double , ap_rr Double , ap_rev_goal Double , brand Varchar( 2) , MF Varchar( 1) , HOTEL_NAME Varchar( 100) , REGION_NAME Varchar( 25) , SFO_ORG Varchar( 3) , ADDRESS Varchar( 40) , CITY Varchar( 30) , STATE Varchar( 2) , ZIP Varchar( 9) , OWNER Varchar( 50) , AVP Varchar( 25) , RD Varchar( 30) , LATITUDE Decimal( 12,8) , LONGITUDE Decimal( 12,8) ) ) by odbc ;",AW_Load_OwnerDashboard_Final.sas
INSERT INTO TABLE AWPROD.AREASALES_OWNER_DASHBOARD_STG SELECT * FROM work.Prop_Data_Owner_Deck2;,AW_Load_OwnerDashboard_Final.sas
   TRUNCATE Table AW_TGT_TABLEAU_DBO.AREASALES_OWNER_DASHBOARD ) by odbc ;,AW_Load_OwnerDashboard_Final.sas
   INSERT INTO AW_TGT_TABLEAU_DBO.AREASALES_OWNER_DASHBOARD Select * FROM AW_TGT_TABLEAU_DBO.AREASALES_OWNER_DASHBOARD_STG ) by odbc ;,AW_Load_OwnerDashboard_Final.sas
DROP TABLE AWPROD.AREASALES_OWNER_DASHBOARD_STG;,AW_Load_OwnerDashboard_Final.sas
 CREATE TABLE MthProd_Load AS ( SELECT  *  FROM Dynamic_Wholesale_Data );,AW_Load_Prod_Dynamic_Wholesale_Mth.sas
"  CREATE TABLE AW_SLS_PRD_AM.Prod_Dynamic_Wholesale_Mth_STG (  marsha_code Varchar( 5) , SFO_ORG Varchar( 3) , iata_number Varchar( 9) , intermediary_company_nm Varchar( 100) , SAE_Name_Only Varchar( 100) , executive_eid Varchar( 8) , month_cal_id Double , qtr Varchar( 2) , rnty Double , net_usd_rev_ty Double ) ) by odbc ;",AW_Load_Prod_Dynamic_Wholesale_Mth.sas
INSERT INTO TABLE AWPROD.Prod_Dynamic_Wholesale_Mth_STG SELECT * FROM work.MthProd_Load;,AW_Load_Prod_Dynamic_Wholesale_Mth.sas
   TRUNCATE Table AW_SLS_PRD_AM.Prod_Dynamic_Wholesale_&CURYR ) by odbc ;,AW_Load_Prod_Dynamic_Wholesale_Mth.sas
   INSERT INTO AW_SLS_PRD_AM.Prod_Dynamic_Wholesale_&CURYR Select * FROM AW_SLS_PRD_AM.Prod_Dynamic_Wholesale_Mth_STG ) by odbc ;,AW_Load_Prod_Dynamic_Wholesale_Mth.sas
DROP TABLE AWPROD.Prod_Dynamic_Wholesale_Mth_STG;,AW_Load_Prod_Dynamic_Wholesale_Mth.sas
 CREATE TABLE PropProd_Final2 AS ( SELECT  *  FROM PropProd_Final );,AW_Load_PropProd_Final.sas
"  CREATE TABLE AW_TGT_TABLEAU_DBO.AREASALES_PROP_PROD_FINAL_STG (  rpt_yr Double , rpt_pd_mo Double , prop_cd Varchar( 10) , prop_nm Varchar( 100) , prp_org_id Double , prp_org_nm Varchar( 100) , prp_mkt_id Double , prp_mkt_nm Varchar( 100) , prp_area_id Double , prp_area_nm Varchar( 100) , act_comp Varchar( 100) , pace_cur_rm_nts Double , pace_cur_rm_rev Double , pace_cur_grp_cat_rev Double , pace_cur_loc_cat_rev Double , pace_cur_tot_cat_rev Double , pace_fut_rm_nts Double , pace_fut_rm_rev Double , pace_fut_grp_cat_rev Double , pace_fut_loc_cat_rev Double , pace_fut_tot_cat_rev Double , pace_rm_nts Double , pace_rm_rev Double , pace_grp_cat_rev Double , pace_loc_cat_rev Double , pace_tot_cat_rev Double , pace_tot_rev_prd Double , pace_tot_rev_gl Double , ap_trns_rm_nts Double , ap_trns_rm_rev Double , ap_cntr_rm_nts Double , ap_cntr_rm_rev Double , ap_tot_rm_nts Double , ap_tot_rm_rev_prd Double , ap_tot_rm_rev_gl Double , ext_trns_rm_nts Double , ext_trns_rm_rev Double , ext_cntr_rm_nts Double , ext_cntr_rm_rev Double , ext_tot_rm_nts Double , ext_tot_rm_rev Double , cw_dual_trk_flg Varchar( 1) , yr_lock_ind Double , dw_load_ts TIMESTAMP , data_source Varchar( 8) ) ) by odbc ;",AW_Load_PropProd_Final.sas
INSERT INTO TABLE AWPROD.AREASALES_PROP_PROD_FINAL_STG SELECT * FROM work.PropProd_Final2;,AW_Load_PropProd_Final.sas
   TRUNCATE Table AW_TGT_TABLEAU_DBO.AREASALES_PROP_PROD_FINAL ) by odbc ;,AW_Load_PropProd_Final.sas
  INSERT INTO AW_TGT_TABLEAU_DBO.AREASALES_PROP_PROD_FINAL Select * FROM AW_TGT_TABLEAU_DBO.AREASALES_PROP_PROD_FINAL_STG ) by odbc ;,AW_Load_PropProd_Final.sas
DROP TABLE AWPROD.AREASALES_PROP_PROD_FINAL_STG;,AW_Load_PropProd_Final.sas
 CREATE TABLE QUOTEDETAIL2 AS ( SELECT  *  FROM QUOTEDETAIL );,AW_Load_QuoteData.sas
"  CREATE TABLE AW_TGT_TABLEAU_DBO.AREASALES_QUOTE_INFO_STG (  Report_Month Double , REPORT_YEAR Double , Organization Varchar( 255) , EID Varchar( 255) , role Varchar( 255) , Account_Name Varchar( 255) , ACCOUNT_COMPONENT Varchar( 40) , MARSHA Varchar( 255) , Quote_Num Varchar( 255) , RN Double , RR Double , CR Double , TR Double , Associate_Name Varchar( 102) , PROP_NM Varchar( 100) , PROPERTY_ORGANIZATION Varchar( 100) ) ) by odbc ;",AW_Load_QuoteData.sas
INSERT INTO TABLE AWPROD.AREASALES_QUOTE_INFO_STG SELECT * FROM work.QUOTEDETAIL2;,AW_Load_QuoteData.sas
   TRUNCATE Table AW_TGT_TABLEAU_DBO.AREASALES_QUOTE_INFO ) by odbc ;,AW_Load_QuoteData.sas
  INSERT INTO AW_TGT_TABLEAU_DBO.AREASALES_QUOTE_INFO Select * FROM AW_TGT_TABLEAU_DBO.AREASALES_QUOTE_INFO_STG ) by odbc ;,AW_Load_QuoteData.sas
DROP TABLE AWPROD.AREASALES_QUOTE_INFO_STG;,AW_Load_QuoteData.sas
" CREATE TABLE Prop_Data2 AS ( SELECT SFO_Org, MARSHA_CODE, MARKET_NAME, AREA_NAME FROM Prop_Data UNION ALL SELECT SFO_Org, MARSHA_CODE, MARKET_NAME, AREA_NAME FROM Cala_haw);",AW_Load_Sales_Participating_Properties.sas
"  CREATE TABLE AW_TGT_METADATA_DBO.SALES_PARTICIPATING_PROPS_STG ( SFO_Org Varchar( 3), Market_Name Varchar( 50), Area_Name Varchar( 50), MARSHA_Code Varchar( 10)) ) by odbc ;",AW_Load_Sales_Participating_Properties.sas
INSERT INTO TABLE AWMETA.SALES_PARTICIPATING_PROPS_STG SELECT * FROM work.Prop_Data2;,AW_Load_Sales_Participating_Properties.sas
   TRUNCATE Table AW_TGT_METADATA_DBO.SALES_PARTICIPATING_PROPS ) by odbc ;,AW_Load_Sales_Participating_Properties.sas
  INSERT INTO AW_TGT_METADATA_DBO.SALES_PARTICIPATING_PROPS Select * FROM AW_TGT_METADATA_DBO.SALES_PARTICIPATING_PROPS_STG ) by odbc ;,AW_Load_Sales_Participating_Properties.sas
DROP TABLE AWMETA.SALES_PARTICIPATING_PROPS_STG;,AW_Load_Sales_Participating_Properties.sas
"CREATE TABLE Mon_Plus_data AS ( SELECT  *  , STR_ID AS STAR_ID  FROM Str_CC.ALL1PLUSFINAL );",AW_load_Star_30Month_Load_Flat.sas
"ALTER TABLE Mon_Plus_data DROP COLUMN COUNT2 ,  STR_ID ;",AW_load_Star_30Month_Load_Flat.sas
"CREATE TABLE MNTH60STR_Plus_DATA_RAW AS ( SELECT STAR_ID , YrMnth1 , MAR_Avail , MAR_GR_Sold , MAR_CN_Sold , MAR_TN_Sold , MAR_GR_Rev , MAR_CN_Rev , MAR_TN_Rev , MKT_Avail , MKT_GR_Sold , MKT_CN_Sold , MKT_TN_Sold , MKT_GR_Rev , MKT_CN_Rev , MKT_TN_Rev , MAR_FB , MAR_OtherRev , MAR_TotRev , MKT_FB , MKT_OtherRev , MKT_TotRev , MAR_SampAvail , MAR_TotAvail , MKT_SampAvail , MKT_TotAvail , 108622 THEN delete AS IF STAR_I FROM ""\\Hdqmdm1fpcl4v1\lodg-STAR\Monthly_Reporting\&month.&STARYR.\proc\plus60mo.txt""  WHERE STAR_ID<>108622);",AW_load_Star_30Month_Load_Flat.sas
"CREATE TABLE MNTH60STR_Plus_DATA_RAW AS ( SELECT  *  , 'MONTH' AS TIMEF , YrMnth1 AS YrMnth  FROM MNTH60STR_Plus_DATA_RAW );",AW_load_Star_30Month_Load_Flat.sas
ALTER TABLE MNTH60STR_Plus_DATA_RAW DROP COLUMN YrMnth1 ;,AW_load_Star_30Month_Load_Flat.sas
"SELECT DISTINCT * FROM MNTH60STR_Plus_DATA_RAW ORDER BY STAR_ID ,YrMnth ,TimeF;",AW_load_Star_30Month_Load_Flat.sas
"CREATE TABLE propplus AS ( SELECT Hotel , STAR_ID , TIMEF , YrMnth , ASOF_YRMO , Mar_Avail , Mar_GR_Sold , Mar_CN_Sold , Mar_TN_Sold , Mar_GR_Rev , Mar_CN_Rev , Mar_TN_Rev , Mar_Avail_LY , Mar_GR_Sold_LY , Mar_CN_Sold_LY , Mar_TN_Sold_LY , Mar_GR_Rev_LY , Mar_CN_Rev_LY , Mar_TN_Rev_LY , MKT_Avail , MKT_GR_Sold , MKT_CN_Sold , MKT_TN_Sold , MKT_GR_Rev , MKT_CN_Rev , MKT_TN_Rev , MKT_Avail_LY , MKT_GR_Sold_LY , MKT_CN_Sold_LY , MKT_TN_Sold_LY , MKT_GR_Rev_LY , MKT_CN_Rev_LY , MKT_TN_Rev_LY , Mar_FB_Rev , Mar_Other_Rev , Mar_Total_Rev , Mar_FB_Rev_LY , Mar_Other_Rev_LY , Mar_Total_Rev_LY , MKT_FB_Rev , MKT_Other_Rev , MKT_Total_Rev , MKT_FB_Rev_LY , MKT_Other_Rev_LY , MKT_Total_Rev_LY , MAR_SampAva , MAR_TotAva , MAR_SampAva_LY , MAR_TotAva_LY , MKT_SampAva , MKT_TotAva , MKT_SampAva_LY , MKT_TotAva_ FROM ""\\Hdqmdm1fpcl4v1\lodg-STAR\Monthly_Reporting\&month.&STARYR.\proc\propplus.txt"" );",AW_load_Star_30Month_Load_Flat.sas
"ALTER TABLE propplus DROP COLUMN Hotel ,  Mar_FB_Rev ,  Mar_Other_Rev ,  Mar_Total_Rev ,  Mar_FB_Rev_LY ,  Mar_Other_Rev_LY ,  Mar_Total_Rev_LY ,  MKT_FB_Rev ,  MKT_Other_Rev ,  MKT_Total_Rev ,  MKT_FB_Rev_LY ,  MKT_Other_Rev_LY ,  MKT_Total_Rev_LY ,  MAR_SampAva ,  MAR_TotAva ,  MAR_SampAva_LY ,  MAR_TotAva_LY ,  MKT_SampAva ,  MKT_TotAva ,  MKT_SampAva_LY ,  MKT_TotAva_LY ,  Mar_Avail_LY ,  Mar_GR_Sold_LY ,  Mar_CN_Sold_LY ,  Mar_TN_Sold_LY ,  Mar_GR_Rev_LY ,  Mar_CN_Rev_LY ,  Mar_TN_Rev_LY ,  MKT_Avail_LY ,  MKT_GR_Sold_LY ,  MKT_CN_Sold_LY ,  MKT_TN_Sold_LY ,  MKT_GR_Rev_LY ,  MKT_CN_Rev_LY ,  MKT_TN_Rev_LY ;",AW_load_Star_30Month_Load_Flat.sas
"SELECT * FROM propplus ORDER BY STAR_ID ,YrMnth ,TimeF;",AW_load_Star_30Month_Load_Flat.sas
 CREATE TABLE MNTH60STR_Plus AS ( SELECT  *  FROM propplus A JOIN MNTH60STR_Plus_DATA_RAW B ON  A.STAR_ID =  B.STAR_ID AND  A.YrMnth =  B.YrMnth AND  A.TimeF =  B.TimeF);,AW_load_Star_30Month_Load_Flat.sas
"CREATE TABLE Mon_Rank_data AS ( SELECT  *, TIMEF AS TIMEF1, YrMnth AS YrMnth1, STR AS STAR_ID, Occ_Num AS Rank_Occ_Num, Occ_Den AS Rank_Occ_Den, ADR_Num AS Rank_ADR_Num, ADR_Den AS Rank_ADR_Den, RevPAR_Num AS Rank_RevPAR_Num, RevPAR_Den AS Rank_RevPAR_Den, Occ_Chg_Num AS Rank_Occ_Chg_Num, Occ_Chg_Den AS Rank_Occ_Chg_Den, ADR_Chg_Num AS Rank_ADR_Chg_Num, ADR_Chg_Den AS Rank_ADR_Chg_Den, RevPAR_Chg_Num AS Rank_RevPAR_Chg_Num, RevPAR_Chg_Den AS Rank_RevPAR_Chg_Den, YrMnth1 AS YrMnth , CASE WHEN  TIMEF1='MON'  THEN 'MONTH' WHEN   TIMEF1='YTD'  THEN 'YTD' WHEN   TIMEF1='3MO'  THEN 'LAST3' WHEN   TIMEF1='TWE'  THEN 'LAST12' END AS TIMEF FROM Str_CC.MNTH30STR_Rank_DATA_FROM_RAW );",AW_load_Star_30Month_Load_Flat.sas
"ALTER TABLE Mon_Rank_data DROP COLUMN TIMEF1 ,  YrMnth1 ;",AW_load_Star_30Month_Load_Flat.sas
"SELECT DISTINCT * FROM Mon_Rank_data ORDER BY STAR_ID ,YrMnth ,TimeF;",AW_load_Star_30Month_Load_Flat.sas
"CREATE TABLE work.starcomp AS ( SELECT  *, COMP AS SCOMP FROM Str_acc.Starview_Comp_CD );",AW_load_Star_30Month_Load_Flat.sas
ALTER TABLE work.starcomp DROP COLUMN STR_ID ;,AW_load_Star_30Month_Load_Flat.sas
SELECT * FROM work.starcomp ORDER BY marsha;,AW_load_Star_30Month_Load_Flat.sas
"CREATE TABLE work.X30MONTH_CD AS ( SELECT  *, BRND AS brand, BRND AS brand, MSType AS MSType1, MSType AS MSType1, MARCAP AS MARAVAIL, MAROCC AS MARSOLD, MKTCAP AS MKTAVAIL, MKTOCC AS MKTSOLD, MARCAPLY AS MARAVAILLY, MAROCCLY AS MARSOLDLY, MKTCAPLY AS MKTAVAILLY, MKTOCCLY AS MKTSOLDLYMARSOLDLY AS MKTSOLDLY AS , FORMAT(cur, VARCHAR(3)) AS cur , FORMAT(datadate, VARCHAR(6)) AS datadate , FORMAT(TIMEF, VARCHAR(6)) AS TIMEF , FORMAT(Mnth, VARCHAR(6)) AS YrMnth , FORMAT(datasource, VARCHAR(4)) AS datasource , MSType1 AS MSType , STRCODE AS STAR_ID  FROM Str_ACC.X30MONTH_CD  WHERE marsha<>'' AND STAR_ID<>' ' AND marsha<>'');",AW_load_Star_30Month_Load_Flat.sas
"ALTER TABLE work.X30MONTH_CD DROP COLUMN STRCODE ,  MNTH ,  ITEM ,  MSType1 ;",AW_load_Star_30Month_Load_Flat.sas
SELECT * FROM work.X30MONTH_CD ORDER BY marsha;,AW_load_Star_30Month_Load_Flat.sas
" CREATE TABLE work.X30MONTH_CD AS ( SELECT  *  , FORMAT(marrev, FLOAT(13, 2))  AS marrev , FORMAT(mktrev, FLOAT(13, 2))  AS mktrev , FORMAT(marrevly, FLOAT(13, 2))  AS marrevly , FORMAT(mktrevly, FLOAT(13, 2))  AS mktrevly  FROM work.X30MONTH_CD A LEFT JOIN work.starcomp B ON  A.Marsha =  B.Marsha WHERE STAR_ID<>0 AND ( MARAVAIL+MARSOLD+marrev+MKTAVAIL+MKTSOLD+mktrev+marAVAILly+marSOLDly+marrevly+mktAVAILly+mktSOLDly+mktrevly)<>0);",AW_load_Star_30Month_Load_Flat.sas
"SELECT DISTINCT * FROM work.X30MONTH_CD ORDER BY STAR_ID ,YrMnth ,TimeF;",AW_load_Star_30Month_Load_Flat.sas
" CREATE TABLE xAW30MONTH_CD AS ( SELECT  *, datadate AS rundate FROM work.X30MONTH_CD A JOIN MNTH60STR_Plus B ON  A.STAR_ID =  B.STAR_ID AND  A.YrMnth =  B.YrMnth AND  A.TimeF =  B.TimeF JOIN Mon_Rank_data C ON  B.STAR_ID =  C.STAR_ID AND  B.YrMnth =  C.YrMnth AND  B.TimeF =  C.TimeF);",AW_load_Star_30Month_Load_Flat.sas
" CREATE TABLE xAW30MONTH_CD AS ( SELECT  *  , MARAVAIL / MKT_Avail * MKT_GR_Sold AS MKT_GR_Sold1 , MARAVAIL / MKT_Avail * MKT_CN_Sold AS MKT_CN_Sold1 , MARAVAIL / MKT_Avail * MKT_TN_Sold AS MKT_TN_Sold1 , MARAVAIL / MKT_Avail * MKT_GR_Rev AS MKT_GR_Rev1 , MARAVAIL / MKT_Avail * MKT_CN_Rev AS MKT_CN_Rev1 , MARAVAIL / MKT_Avail * MKT_TN_Rev AS MKT_TN_Rev1 , MKT_GR_Sold AS MKT_GR_Sold_unweighted , MKT_CN_Sold AS MKT_CN_Sold_unweighted , MKT_TN_Sold AS MKT_TN_Sold_unweighted , MKT_GR_Rev AS MKT_GR_Rev_unweighted , MKT_CN_Rev AS MKT_CN_Rev_unweighted , MKT_TN_Rev AS MKT_TN_Rev_unweighted , MKT_Avail AS MKT_Avail_unweighted  FROM xAW30MONTH_CD );",AW_load_Star_30Month_Load_Flat.sas
"CREATE TABLE xAW30MONTH_CD_pw AS ( SELECT  *  , MKT_GR_Sold1 AS MKT_GR_Sold , MKT_CN_Sold1 AS MKT_CN_Sold , MKT_TN_Sold1 AS MKT_TN_Sold , MKT_GR_Rev1 AS MKT_GR_Rev , MKT_CN_Rev1 AS MKT_CN_Rev , MKT_TN_Rev1 AS MKT_TN_Rev  FROM xAW30MONTH_CD );",AW_load_Star_30Month_Load_Flat.sas
"ALTER TABLE xAW30MONTH_CD_pw DROP COLUMN MAR_Avail ,  MKT_Avail ,  MKT_GR_Sold1 ,  MKT_CN_Sold1 ,  MKT_TN_Sold1 ,  MKT_GR_Rev1 ,  MKT_CN_Rev1 ,  MKT_TN_Rev1 ;",AW_load_Star_30Month_Load_Flat.sas
"CREATE TABLE Str_CC.AW30MONTH_CD_&STARMNTH AS ( SELECT  *  , FORMAT(MARSHA, &STARMNTH) AS MARSHA , FORMAT(STAR_ID, &STARMNTH) AS STAR_ID , FORMAT(brand, &STARMNTH) AS brand , FORMAT(cur, &STARMNTH) AS cur , FORMAT(YrMnth, &STARMNTH) AS YrMnth , FORMAT(TIMEF, &STARMNTH) AS TIMEF , FORMAT(SCOMP, &STARMNTH) AS SCOMP , FORMAT(datasource, &STARMNTH) AS datasource , FORMAT(MSType, &STARMNTH) AS MSType , FORMAT(MARAVAIL, &STARMNTH) AS MARAVAIL , FORMAT(MARSOLD, &STARMNTH) AS MARSOLD , FORMAT(MARREV, &STARMNTH) AS MARREV , FORMAT(MKTAVAIL, &STARMNTH) AS MKTAVAIL , FORMAT(MKTSOLD, &STARMNTH) AS MKTSOLD , FORMAT(MKTREV, &STARMNTH) AS MKTREV , FORMAT(MARAVAILLY, &STARMNTH) AS MARAVAILLY , FORMAT(MARSOLDLY, &STARMNTH) AS MARSOLDLY , FORMAT(MARREVLY, &STARMNTH) AS MARREVLY , FORMAT(MKTAVAILLY, &STARMNTH) AS MKTAVAILLY , FORMAT(MKTSOLDLY, &STARMNTH) AS MKTSOLDLY , FORMAT(MKTREVLY, &STARMNTH) AS MKTREVLY , FORMAT(MAR_GR_Sold, &STARMNTH) AS MAR_GR_Sold , FORMAT(MAR_CN_Sold, &STARMNTH) AS MAR_CN_Sold , FORMAT(MAR_TN_Sold, &STARMNTH) AS MAR_TN_Sold , FORMAT(MAR_GR_Rev, &STARMNTH) AS MAR_GR_Rev , FORMAT(MAR_CN_Rev, &STARMNTH) AS MAR_CN_Rev , FORMAT(MAR_TN_Rev, &STARMNTH) AS MAR_TN_Rev , FORMAT(MKT_GR_Sold, &STARMNTH) AS MKT_GR_Sold , FORMAT(MKT_CN_Sold, &STARMNTH) AS MKT_CN_Sold , FORMAT(MKT_TN_Sold, &STARMNTH) AS MKT_TN_Sold , FORMAT(MKT_GR_Rev, &STARMNTH) AS MKT_GR_Rev , FORMAT(MKT_CN_Rev, &STARMNTH) AS MKT_CN_Rev , FORMAT(MKT_TN_Rev, &STARMNTH) AS MKT_TN_Rev , FORMAT(MKT_Avail_unweighted, &STARMNTH) AS MKT_Avail_unweighted , FORMAT(MKT_GR_Sold_unweighted, &STARMNTH) AS MKT_GR_Sold_unweighted , FORMAT(MKT_CN_Sold_unweighted, &STARMNTH) AS MKT_CN_Sold_unweighted , FORMAT(MKT_TN_Sold_unweighted, &STARMNTH) AS MKT_TN_Sold_unweighted , FORMAT(MKT_GR_Rev_unweighted, &STARMNTH) AS MKT_GR_Rev_unweighted , FORMAT(MKT_CN_Rev_unweighted, &STARMNTH) AS MKT_CN_Rev_unweighted , FORMAT(MKT_TN_Rev_unweighted, &STARMNTH) AS MKT_TN_Rev_unweighted , FORMAT(MAR_FB, &STARMNTH) AS MAR_FB , FORMAT(MAR_OtherRev, &STARMNTH) AS MAR_OtherRev , FORMAT(MAR_TotRev, &STARMNTH) AS MAR_TotRev , FORMAT(MKT_FB, &STARMNTH) AS MKT_FB , FORMAT(MKT_OtherRev, &STARMNTH) AS MKT_OtherRev , FORMAT(MKT_TotRev, &STARMNTH) AS MKT_TotRev , FORMAT(MAR_SampAvail, &STARMNTH) AS MAR_SampAvail , FORMAT(MAR_TotAvail, &STARMNTH) AS MAR_TotAvail , FORMAT(MKT_SampAvail, &STARMNTH) AS MKT_SampAvail , FORMAT(MKT_TotAvail, &STARMNTH) AS MKT_TotAvail , FORMAT(Rank_Occ_Num, &STARMNTH) AS Rank_Occ_Num , FORMAT(Rank_Occ_Den, &STARMNTH) AS Rank_Occ_Den , FORMAT(Rank_ADR_Num, &STARMNTH) AS Rank_ADR_Num , FORMAT(Rank_ADR_Den, &STARMNTH) AS Rank_ADR_Den , FORMAT(Rank_RevPAR_Num, &STARMNTH) AS Rank_RevPAR_Num , FORMAT(Rank_RevPAR_Den, &STARMNTH) AS Rank_RevPAR_Den , FORMAT(Rank_Occ_Chg_Num, &STARMNTH) AS Rank_Occ_Chg_Num , FORMAT(Rank_Occ_Chg_Den, &STARMNTH) AS Rank_Occ_Chg_Den , FORMAT(Rank_ADR_Chg_Num, &STARMNTH) AS Rank_ADR_Chg_Num , FORMAT(Rank_ADR_Chg_Den, &STARMNTH) AS Rank_ADR_Chg_Den , FORMAT(Rank_RevPAR_Chg_Num, &STARMNTH) AS Rank_RevPAR_Chg_Num , FORMAT(Rank_RevPAR_Chg_Den, &STARMNTH) AS Rank_RevPAR_Chg_Den  FROM xAW30MONTH_CD_pw );",AW_load_Star_30Month_Load_Flat.sas
ALTER TABLE Str_CC.AW30MONTH_CD_&STARMNTH DROP COLUMN rundate ;,AW_load_Star_30Month_Load_Flat.sas
" CREATE TABLE AW_TGT_BUS_DBO.STR_30MONTH_STG (  MARSHA VARCHAR( 5), STAR_ID INTEGER, brand VARCHAR( 2), cur VARCHAR( 3), YrMnth VARCHAR( 6), TIMEF VARCHAR( 6), SCOMP VARCHAR( 1), datasource VARCHAR( 4), MSType VARCHAR( 2), MARAVAIL INTEGER, MARSOLD INTEGER, MARREV DOUBLE, MKTAVAIL INTEGER, MKTSOLD INTEGER, MKTREV DOUBLE, MARAVAILLY INTEGER, MARSOLDLY INTEGER, MARREVLY DOUBLE, MKTAVAILLY INTEGER, MKTSOLDLY INTEGER, MKTREVLY DOUBLE, MAR_GR_Sold INTEGER, MAR_CN_Sold INTEGER, MAR_TN_Sold INTEGER, MAR_GR_Rev DOUBLE, MAR_CN_Rev DOUBLE, MAR_TN_Rev DOUBLE, MKT_GR_Sold DOUBLE, MKT_CN_Sold DOUBLE, MKT_TN_Sold DOUBLE, MKT_GR_Rev DOUBLE, MKT_CN_Rev DOUBLE, MKT_TN_Rev DOUBLE, MKT_Avail_unweighted INTEGER, MKT_GR_Sold_unweighted INTEGER, MKT_CN_Sold_unweighted INTEGER, MKT_TN_Sold_unweighted INTEGER, MKT_GR_Rev_unweighted DOUBLE, MKT_CN_Rev_unweighted DOUBLE, MKT_TN_Rev_unweighted DOUBLE, MAR_FB DOUBLE, MAR_OtherRev DOUBLE, MAR_TotRev DOUBLE, MKT_FB DOUBLE, MKT_OtherRev DOUBLE, MKT_TotRev DOUBLE, MAR_SampAvail INTEGER, MAR_TotAvail INTEGER, MKT_SampAvail INTEGER, MKT_TotAvail INTEGER, Rank_Occ_Num SMALLINT, Rank_Occ_Den SMALLINT, Rank_ADR_Num SMALLINT, Rank_ADR_Den SMALLINT, Rank_RevPAR_Num SMALLINT, Rank_RevPAR_Den SMALLINT, Rank_Occ_Chg_Num SMALLINT, Rank_Occ_Chg_Den SMALLINT, Rank_ADR_Chg_Num SMALLINT, Rank_ADR_Chg_Den SMALLINT, Rank_RevPAR_Chg_Num SMALLINT, Rank_RevPAR_Chg_Den SMALLINT, ASOF_YRMO INTEGER ) ) by odbc ;",AW_load_Star_30Month_Load_Flat.sas
INSERT INTO TABLE AWPROD.STR_30MONTH_STG SELECT * FROM Str_CC.AW30MONTH_CD_&STARMNTH;,AW_load_Star_30Month_Load_Flat.sas
   INSERT INTO AW_TGT_BUS_DBO.STR_30MONTH Select * FROM AW_TGT_BUS_DBO.STR_30MONTH_STG ) by odbc ;,AW_load_Star_30Month_Load_Flat.sas
   DROP TABLE AW_TGT_BUS_DBO.STR_30MONTH_STG ) by odbc ;,AW_load_Star_30Month_Load_Flat.sas
"CREATE TABLE Mon_Plus_data AS ( SELECT  *  , STR_ID AS STAR_ID  FROM Str_CC.ALL1PLUSFINAL );",AW_load_Star_60Month_Load_Flat.sas
"ALTER TABLE Mon_Plus_data DROP COLUMN COUNT2 ,  STR_ID ;",AW_load_Star_60Month_Load_Flat.sas
"CREATE TABLE MNTH60STR_Plus_DATA_RAW AS ( SELECT STAR_ID , YrMnth1 , MAR_Avail , MAR_GR_Sold , MAR_CN_Sold , MAR_TN_Sold , MAR_GR_Rev , MAR_CN_Rev , MAR_TN_Rev , MKT_Avail , MKT_GR_Sold , MKT_CN_Sold , MKT_TN_Sold , MKT_GR_Rev , MKT_CN_Rev , MKT_TN_Rev , MAR_FB , MAR_OtherRev , MAR_TotRev , MKT_FB , MKT_OtherRev , MKT_TotRev , MAR_SampAvail , MAR_TotAvail , MKT_SampAvail , MKT_TotAvail , 108622 THEN delete AS IF STAR_I FROM ""\\Hdqmdm1fpcl4v1\lodg-STAR\Monthly_Reporting\&month.&STARYR.\proc\plus60mo.txt""  WHERE STAR_ID<>108622);",AW_load_Star_60Month_Load_Flat.sas
"CREATE TABLE MNTH60STR_Plus_DATA_RAW AS ( SELECT  *  , 'MONTH' AS TIMEF , YrMnth1 AS YrMnth  FROM MNTH60STR_Plus_DATA_RAW );",AW_load_Star_60Month_Load_Flat.sas
"ALTER TABLE MNTH60STR_Plus_DATA_RAW DROP COLUMN YrMnth1 ,  MAR_SampAvail ,  MAR_TotAvail ;",AW_load_Star_60Month_Load_Flat.sas
"SELECT DISTINCT * FROM MNTH60STR_Plus_DATA_RAW ORDER BY STAR_ID ,YrMnth ,TimeF;",AW_load_Star_60Month_Load_Flat.sas
"CREATE TABLE propplus AS ( SELECT Hotel , STAR_ID , TIMEF , YrMnth , ASOF_YRMO , Mar_Avail , Mar_GR_Sold , Mar_CN_Sold , Mar_TN_Sold , Mar_GR_Rev , Mar_CN_Rev , Mar_TN_Rev , Mar_Avail_LY , Mar_GR_Sold_LY , Mar_CN_Sold_LY , Mar_TN_Sold_LY , Mar_GR_Rev_LY , Mar_CN_Rev_LY , Mar_TN_Rev_LY , MKT_Avail , MKT_GR_Sold , MKT_CN_Sold , MKT_TN_Sold , MKT_GR_Rev , MKT_CN_Rev , MKT_TN_Rev , MKT_Avail_LY , MKT_GR_Sold_LY , MKT_CN_Sold_LY , MKT_TN_Sold_LY , MKT_GR_Rev_LY , MKT_CN_Rev_LY , MKT_TN_Rev_LY , Mar_FB_Rev , Mar_Other_Rev , Mar_Total_Rev , Mar_FB_Rev_LY , Mar_Other_Rev_LY , Mar_Total_Rev_LY , MKT_FB_Rev , MKT_Other_Rev , MKT_Total_Rev , MKT_FB_Rev_LY , MKT_Other_Rev_LY , MKT_Total_Rev_LY , MAR_SampAva , MAR_TotAva , MAR_SampAva_LY , MAR_TotAva_LY , MKT_SampAva , MKT_TotAva , MKT_SampAva_LY , MKT_TotAva_ FROM ""\\Hdqmdm1fpcl4v1\lodg-STAR\Monthly_Reporting\&month.&STARYR.\proc\propplus.txt"" );",AW_load_Star_60Month_Load_Flat.sas
"ALTER TABLE propplus DROP COLUMN Hotel ,  Mar_FB_Rev ,  Mar_Other_Rev ,  Mar_Total_Rev ,  Mar_FB_Rev_LY ,  Mar_Other_Rev_LY ,  Mar_Total_Rev_LY ,  MKT_FB_Rev ,  MKT_Other_Rev ,  MKT_Total_Rev ,  MKT_FB_Rev_LY ,  MKT_Other_Rev_LY ,  MKT_Total_Rev_LY ,  MAR_SampAva ,  MAR_TotAva ,  MAR_SampAva_LY ,  MAR_TotAva_LY ,  MKT_SampAva ,  MKT_TotAva ,  MKT_SampAva_LY ,  MKT_TotAva_LY ,  Mar_Avail_LY ,  Mar_GR_Sold_LY ,  Mar_CN_Sold_LY ,  Mar_TN_Sold_LY ,  Mar_GR_Rev_LY ,  Mar_CN_Rev_LY ,  Mar_TN_Rev_LY ,  MKT_Avail_LY ,  MKT_GR_Sold_LY ,  MKT_CN_Sold_LY ,  MKT_TN_Sold_LY ,  MKT_GR_Rev_LY ,  MKT_CN_Rev_LY ,  MKT_TN_Rev_LY ;",AW_load_Star_60Month_Load_Flat.sas
"SELECT * FROM propplus ORDER BY STAR_ID ,YrMnth ,TimeF;",AW_load_Star_60Month_Load_Flat.sas
 CREATE TABLE MNTH60STR_Plus AS ( SELECT  *  FROM propplus A JOIN MNTH60STR_Plus_DATA_RAW B ON  A.STAR_ID =  B.STAR_ID AND  A.YrMnth =  B.YrMnth AND  A.TimeF =  B.TimeF);,AW_load_Star_60Month_Load_Flat.sas
"CREATE TABLE Mon_Rank_data AS ( SELECT  *, TIMEF AS TIMEF1, YrMnth AS YrMnth1, STR AS STAR_ID, Occ_Num AS Rank_Occ_Num, Occ_Den AS Rank_Occ_Den, ADR_Num AS Rank_ADR_Num, ADR_Den AS Rank_ADR_Den, RevPAR_Num AS Rank_RevPAR_Num, RevPAR_Den AS Rank_RevPAR_Den, Occ_Chg_Num AS Rank_Occ_Chg_Num, Occ_Chg_Den AS Rank_Occ_Chg_Den, ADR_Chg_Num AS Rank_ADR_Chg_Num, ADR_Chg_Den AS Rank_ADR_Chg_Den, RevPAR_Chg_Num AS Rank_RevPAR_Chg_Num, RevPAR_Chg_Den AS Rank_RevPAR_Chg_Den, YrMnth1 AS YrMnth , CASE WHEN  TIMEF1='MON'  THEN 'MONTH' WHEN   TIMEF1='YTD'  THEN 'YTD' WHEN   TIMEF1='3MO'  THEN 'LAST3' WHEN   TIMEF1='TWE'  THEN 'LAST12' END AS TIMEF FROM Str_CC.MNTH30STR_Rank_DATA_FROM_RAW );",AW_load_Star_60Month_Load_Flat.sas
"ALTER TABLE Mon_Rank_data DROP COLUMN TIMEF1 ,  YrMnth1 ;",AW_load_Star_60Month_Load_Flat.sas
"SELECT DISTINCT * FROM Mon_Rank_data ORDER BY STAR_ID ,YrMnth ,TimeF;",AW_load_Star_60Month_Load_Flat.sas
"CREATE TABLE work.starcomp AS ( SELECT  *, COMP AS SCOMP FROM Str_acc.Starview_Comp_CD );",AW_load_Star_60Month_Load_Flat.sas
ALTER TABLE work.starcomp DROP COLUMN STR_ID ;,AW_load_Star_60Month_Load_Flat.sas
SELECT * FROM work.starcomp ORDER BY marsha;,AW_load_Star_60Month_Load_Flat.sas
"CREATE TABLE work.X60_MONTH_CD AS ( SELECT  *, YrMnth AS Mnth, STRCODE AS STAR_ID, BRND AS brand, BRND AS brand, MSType AS MSType1, MARCAP AS MARAVAIL, MAROCC AS MARSOLD, MKTCAP AS MKTAVAIL, MKTOCC AS MKTSOLD , FORMAT(cur, VARCHAR(3)) AS cur , FORMAT('MONTH', VARCHAR(6)) AS TIMEF , FORMAT(Mnth, VARCHAR(6)) AS YrMnth , FORMAT(datasource, VARCHAR(4)) AS datasource , MSType1 AS MSType , &STARMNTH AS ASOF_YRMO  FROM Str_ACC.X60_MONTH_CD  WHERE marsha<>'' AND STAR_ID<>' ' AND marsha<>'');",AW_load_Star_60Month_Load_Flat.sas
ALTER TABLE work.X60_MONTH_CD DROP COLUMN MSType1 ;,AW_load_Star_60Month_Load_Flat.sas
SELECT * FROM work.X60_MONTH_CD ORDER BY marsha;,AW_load_Star_60Month_Load_Flat.sas
" CREATE TABLE work.X60_MONTH_CD AS ( SELECT  *  , FORMAT(marrev, FLOAT(13, 2))  AS marrev , FORMAT(mktrev, FLOAT(13, 2))  AS mktrev  FROM work.X60_MONTH_CD A LEFT JOIN work.starcomp B ON  A.Marsha =  B.Marsha WHERE STAR_ID<>0 AND ( MARAVAIL+MARSOLD+marrev+MKTAVAIL+MKTSOLD+mktrev)<>0);",AW_load_Star_60Month_Load_Flat.sas
"SELECT DISTINCT * FROM work.X60_MONTH_CD ORDER BY STAR_ID ,YrMnth ,TimeF;",AW_load_Star_60Month_Load_Flat.sas
 CREATE TABLE xAW60MONTH_CD AS ( SELECT  *  FROM work.X60_MONTH_CD A JOIN MNTH60STR_Plus B ON  A.STAR_ID =  B.STAR_ID AND  A.YrMnth =  B.YrMnth AND  A.TimeF =  B.TimeF JOIN Mon_Rank_data C ON  B.STAR_ID =  C.STAR_ID AND  B.YrMnth =  C.YrMnth AND  B.TimeF =  C.TimeF);,AW_load_Star_60Month_Load_Flat.sas
"CREATE TABLE Str_CC.AW60MONTH_CD_&STARMNTH AS ( SELECT  *  , FORMAT(MARSHA, &STARMNTH) AS MARSHA , FORMAT(STAR_ID, &STARMNTH) AS STAR_ID , FORMAT(brand, &STARMNTH) AS brand , FORMAT(cur, &STARMNTH) AS cur , FORMAT(YrMnth, &STARMNTH) AS YrMnth , FORMAT(TIMEF, &STARMNTH) AS TIMEF , FORMAT(SCOMP, &STARMNTH) AS SCOMP , FORMAT(datasource, &STARMNTH) AS datasource , FORMAT(MSType, &STARMNTH) AS MSType , FORMAT(MARAVAIL, &STARMNTH) AS MARAVAIL , FORMAT(MARSOLD, &STARMNTH) AS MARSOLD , FORMAT(MARREV, &STARMNTH) AS MARREV , FORMAT(MKTAVAIL, &STARMNTH) AS MKTAVAIL , FORMAT(MKTSOLD, &STARMNTH) AS MKTSOLD , FORMAT(MKTREV, &STARMNTH) AS MKTREV , FORMAT(MARREV_lcl, &STARMNTH) AS MARREV_lcl , FORMAT(MKTREV_lcl, &STARMNTH) AS MKTREV_lcl , FORMAT(COMPSETHOTELS, &STARMNTH) AS COMPSETHOTELS , FORMAT(COMPSETROOMS, &STARMNTH) AS COMPSETROOMS , FORMAT(REPORTINGHOTELS, &STARMNTH) AS REPORTINGHOTELS , FORMAT(REPORTINGROOMS, &STARMNTH) AS REPORTINGROOMS , FORMAT(MAR_Avail, &STARMNTH) AS MAR_Avail , FORMAT(MAR_GR_Sold, &STARMNTH) AS MAR_GR_Sold , FORMAT(MAR_CN_Sold, &STARMNTH) AS MAR_CN_Sold , FORMAT(MAR_TN_Sold, &STARMNTH) AS MAR_TN_Sold , FORMAT(MAR_GR_Rev, &STARMNTH) AS MAR_GR_Rev , FORMAT(MAR_CN_Rev, &STARMNTH) AS MAR_CN_Rev , FORMAT(MAR_TN_Rev, &STARMNTH) AS MAR_TN_Rev , FORMAT(MKT_Avail, &STARMNTH) AS MKT_Avail , FORMAT(MKT_GR_Sold, &STARMNTH) AS MKT_GR_Sold , FORMAT(MKT_CN_Sold, &STARMNTH) AS MKT_CN_Sold , FORMAT(MKT_TN_Sold, &STARMNTH) AS MKT_TN_Sold , FORMAT(MKT_GR_Rev, &STARMNTH) AS MKT_GR_Rev , FORMAT(MKT_CN_Rev, &STARMNTH) AS MKT_CN_Rev , FORMAT(MKT_TN_Rev, &STARMNTH) AS MKT_TN_Rev , FORMAT(MAR_FB, &STARMNTH) AS MAR_FB , FORMAT(MAR_OtherRev, &STARMNTH) AS MAR_OtherRev , FORMAT(MAR_TotRev, &STARMNTH) AS MAR_TotRev , FORMAT(MKT_FB, &STARMNTH) AS MKT_FB , FORMAT(MKT_OtherRev, &STARMNTH) AS MKT_OtherRev , FORMAT(MKT_TotRev, &STARMNTH) AS MKT_TotRev , FORMAT(MKT_SampAvail, &STARMNTH) AS MKT_SampAvail , FORMAT(MKT_TotAvail, &STARMNTH) AS MKT_TotAvail , FORMAT(Rank_Occ_Num, &STARMNTH) AS Rank_Occ_Num , FORMAT(Rank_Occ_Den, &STARMNTH) AS Rank_Occ_Den , FORMAT(Rank_ADR_Num, &STARMNTH) AS Rank_ADR_Num , FORMAT(Rank_ADR_Den, &STARMNTH) AS Rank_ADR_Den , FORMAT(Rank_RevPAR_Num, &STARMNTH) AS Rank_RevPAR_Num , FORMAT(Rank_RevPAR_Den, &STARMNTH) AS Rank_RevPAR_Den , FORMAT(Rank_Occ_Chg_Num, &STARMNTH) AS Rank_Occ_Chg_Num , FORMAT(Rank_Occ_Chg_Den, &STARMNTH) AS Rank_Occ_Chg_Den , FORMAT(Rank_ADR_Chg_Num, &STARMNTH) AS Rank_ADR_Chg_Num , FORMAT(Rank_ADR_Chg_Den, &STARMNTH) AS Rank_ADR_Chg_Den , FORMAT(Rank_RevPAR_Chg_Num, &STARMNTH) AS Rank_RevPAR_Chg_Num , FORMAT(Rank_RevPAR_Chg_Den, &STARMNTH) AS Rank_RevPAR_Chg_Den , FORMAT(currency_exch_rte, &STARMNTH) AS currency_exch_rte  FROM xAW60MONTH_CD );",AW_load_Star_60Month_Load_Flat.sas
ALTER TABLE Str_CC.AW60MONTH_CD_&STARMNTH DROP COLUMN Mnth ;,AW_load_Star_60Month_Load_Flat.sas
" CREATE TABLE AW_TGT_BUS_DBO.STR_60MONTH_STG (  MARSHA VARCHAR( 5), STAR_ID INTEGER, brand VARCHAR( 2), cur VARCHAR( 3), YrMnth VARCHAR( 6), TIMEF VARCHAR( 6), SCOMP VARCHAR( 1), datasource VARCHAR( 4), MSType VARCHAR( 2), MARAVAIL INTEGER, MARSOLD INTEGER, MARREV DOUBLE, MKTAVAIL INTEGER, MKTSOLD INTEGER, MKTREV DOUBLE, MARREV_lcl DOUBLE, MKTREV_lcl DOUBLE, COMPSETHOTELS INTEGER, COMPSETROOMS INTEGER, REPORTINGHOTELS INTEGER, REPORTINGROOMS INTEGER, MAR_Avail INTEGER, MAR_GR_Sold INTEGER, MAR_CN_Sold INTEGER, MAR_TN_Sold INTEGER, MAR_GR_Rev DOUBLE, MAR_CN_Rev DOUBLE, MAR_TN_Rev DOUBLE, MKT_Avail INTEGER, MKT_GR_Sold INTEGER, MKT_CN_Sold INTEGER, MKT_TN_Sold INTEGER, MKT_GR_Rev DOUBLE, MKT_CN_Rev DOUBLE, MKT_TN_Rev DOUBLE, MAR_FB INTEGER, MAR_OtherRev DOUBLE, MAR_TotRev DOUBLE, MKT_FB INTEGER, MKT_OtherRev DOUBLE, MKT_TotRev DOUBLE, MKT_SampAvail INTEGER, MKT_TotAvail INTEGER, Rank_Occ_Num INTEGER, Rank_Occ_Den SMALLINT, Rank_ADR_Num SMALLINT, Rank_ADR_Den SMALLINT, Rank_RevPAR_Num SMALLINT, Rank_RevPAR_Den SMALLINT, Rank_Occ_Chg_Num SMALLINT, Rank_Occ_Chg_Den SMALLINT, Rank_ADR_Chg_Num SMALLINT, Rank_ADR_Chg_Den SMALLINT, Rank_RevPAR_Chg_Num SMALLINT, Rank_RevPAR_Chg_Den SMALLINT, currency_exch_rte DOUBLE, ASOF_YRMO INTEGER ) ) by odbc ;",AW_load_Star_60Month_Load_Flat.sas
INSERT INTO TABLE AWPROD.STR_60MONTH_STG SELECT * FROM Str_CC.AW60MONTH_CD_&STARMNTH;,AW_load_Star_60Month_Load_Flat.sas
   INSERT INTO AW_TGT_BUS_DBO.STR_60MONTH Select * FROM AW_TGT_BUS_DBO.STR_60MONTH_STG ) by odbc ;,AW_load_Star_60Month_Load_Flat.sas
   DROP TABLE AW_TGT_BUS_DBO.STR_60MONTH_STG ) by odbc ;,AW_load_Star_60Month_Load_Flat.sas
" CREATE TABLE AW_TGT_BUS_DBO.STR_STARVIEW_COMP_STG (  MARSHA  VARCHAR( 5), STAR_ID BIGINT, SCOMP VARCHAR( 1), ASOF_YRMO INTEGER ) ) by odbc ;",AW_load_Star_Comp_Load.sas
"CREATE TABLE work.starcomp AS ( SELECT  *, COMP AS SCOMP, &STARMNTH AS ASOF_YRMO , STR_ID AS STAR_ID  FROM Str_acc.Starview_Comp_CD );",AW_load_Star_Comp_Load.sas
ALTER TABLE work.starcomp DROP COLUMN STR_ID ;,AW_load_Star_Comp_Load.sas
INSERT INTO TABLE AWPROD.STR_STARVIEW_COMP_STG SELECT * FROM work.starcomp;,AW_load_Star_Comp_Load.sas
   INSERT INTO AW_TGT_BUS_DBO.STR_STARVIEW_COMP Select * FROM AW_TGT_BUS_DBO.STR_STARVIEW_COMP_STG ) by odbc ;,AW_load_Star_Comp_Load.sas
   DROP TABLE AW_TGT_BUS_DBO.STR_STARVIEW_COMP_STG ) by odbc ;,AW_load_Star_Comp_Load.sas
" CREATE TABLE AW_TGT_BUS_DBO.str_global_census_STG (  STR_Number VARCHAR( 20), Hotel_Name VARCHAR( 300), Address_1 VARCHAR( 210), Address_2 VARCHAR( 225), City VARCHAR( 200), State VARCHAR( 10), Country VARCHAR( 75), Postal_Code VARCHAR( 30), Market VARCHAR( 120), Tract VARCHAR( 120), Continent VARCHAR( 45), Sub_Continent VARCHAR( 60), Open_Date VARCHAR( 20), Original_Affiliation VARCHAR( 120), Rooms double, Chain_Scale VARCHAR( 63), Class VARCHAR( 60), Affiliation VARCHAR( 120), Telephone VARCHAR( 45), Fax VARCHAR( 45), Mailing_Address_1 VARCHAR( 210), Mailing_Address_2 VARCHAR( 225), Mailing_City VARCHAR( 300), Mailing_State VARCHAR( 10), Mailing_Country VARCHAR( 75), Mailing_Postal_Code VARCHAR( 30), Floors double, Indoor_Corridors__Y_N_ VARCHAR( 3), Location VARCHAR( 60), Restaurant__Y_N_ VARCHAR( 3), Convention__Y_N_ VARCHAR( 3), Conference__Y_N_ VARCHAR( 3), Largest_Meeting_Space double, Total_Meeting_Space double, Resort__Y_N_ VARCHAR( 3), Ski__Y_N_ VARCHAR( 3), Spa__Y_N_ VARCHAR( 3), Golf__Y_N_ VARCHAR( 3), Boutique__Y_N_ VARCHAR( 3), All_Suites__Y_N_ VARCHAR( 3), Casino__Y_N_ VARCHAR( 3), Single_Low_Rate double, Single_High_Rate double, Double_Low_Rate double, Double_High_Rate double, Suite_Low_Rate double, Suite_High_Rate double, Operation VARCHAR( 60), Parent_Company VARCHAR( 150), Chain_ID VARCHAR( 30), Year_Affiliated VARCHAR( 20), Ex_Affiliation VARCHAR( 90), Ex_Affiliation_2 VARCHAR( 90), Ex_Affiliation_3 VARCHAR( 63), Management_Company VARCHAR( 400), Management_Contact_Name VARCHAR( 66), Management_Contact_Title VARCHAR( 400), Management_Address_1 VARCHAR( 200), Management_Address_2 VARCHAR( 200), Management_City VARCHAR( 100), Management_State VARCHAR( 6), Management_Country VARCHAR( 60), Management_Postal_Code VARCHAR( 30), Management_Phone VARCHAR( 45), Management_Email VARCHAR( 400), Management_Website VARCHAR( 400), Owner_Company VARCHAR( 150), Owner_Contact_Name VARCHAR( 66), Owner_Contact_Title VARCHAR( 120), Owner_Address_1 VARCHAR( 180), Owner_Address_2 VARCHAR( 120), Owner_City VARCHAR( 120), Owner_State VARCHAR( 6), Owner_Country VARCHAR( 60), Owner_Postal_Code VARCHAR( 30), Owner_Phone VARCHAR( 100), Owner_Email VARCHAR( 120), Owner_Website VARCHAR( 90), Latitude VARCHAR( 30), Longitude VARCHAR( 33), Region VARCHAR( 60), County VARCHAR( 90), MSA  VARCHAR( 150), Price VARCHAR( 30), STR_NUM double, ASOF_YRMO INTEGER ) ) by odbc ;",AW_load_STR_Census_wASYRMO.sas
" CREATE TABLE global_census AS ( SELECT  *  , &STARMNTH AS ASOF_YRMO  FROM PIPELINE.global_census );",AW_load_STR_Census_wASYRMO.sas
INSERT INTO TABLE AWPROD.str_global_census_STG SELECT * FROM work.global_census;,AW_load_STR_Census_wASYRMO.sas
   INSERT INTO AW_TGT_BUS_DBO.STR_GLOBAL_CENSUS Select * FROM AW_TGT_BUS_DBO.str_global_census_STG ) by odbc ;,AW_load_STR_Census_wASYRMO.sas
   DROP TABLE AW_TGT_BUS_DBO.str_global_census_STG ) by odbc ;,AW_load_STR_Census_wASYRMO.sas
"CREATE TABLE STARPROP1 AS ( SELECT STRNumber , PropertyName , Affiliation , ChainID , MARSHA , Starlink FROM ""\\Hdqmdm1fpcl4v1\lodg-revmgmt\DSS\star_data\DaySTR_Raw_Data\MarrCode_&DBEGL7..txt"" );",AW_Load_STR_Property_v2.sas
"CREATE TABLE starprop2 AS (SELECT distinct ChainID, STR_ID FROM STARPROP1 WHERE STR_ID<>' ' AND RTRIM( ChainID)<> ORDER BY ChainID);",AW_Load_STR_Property_v2.sas
"CREATE TABLE starprop2 AS ( SELECT  *  , UPPER( CHAINID ) AS MARSHA  FROM starprop2 );",AW_Load_STR_Property_v2.sas
ALTER TABLE starprop2 DROP COLUMN CHAINID ;,AW_Load_STR_Property_v2.sas
" CREATE TABLE AW_STG_BUS_DBO.STR_MI_PROPERTY_LIST (  MARSHA VARCHAR( 5), STR_ID integer, RUN_DATE  DATE ) ) by odbc ;",AW_Load_STR_Property_v2.sas
" CREATE TABLE sourceData AS ( SELECT  *  , ""&sysdate""d AS RUN_DATE  FROM starprop2 );",AW_Load_STR_Property_v2.sas
INSERT INTO TABLE AWSTG.STR_MI_PROPERTY_LIST SELECT * FROM work.sourceData;,AW_Load_STR_Property_v2.sas
" CREATE HADOOP TABLE AW_STG_BUS_DBO.STR_MI_PROPERTY_LIST_STG (  MARSHA VARCHAR( 5), STR_ID INTEGER, RUN_DATE DATE ) stored AS parquetfile ) by odbc ;",AW_Load_STR_Property_v2.sas
   INSERT INTO AW_STG_BUS_DBO.STR_MI_PROPERTY_LIST_STG Select FROM AW_STG_BUS_DBO.STR_MI_PROPERTY_LIST ) by odbc ;,AW_Load_STR_Property_v2.sas
 CREATE TABLE work.str_chk AS  (  SELECT COUNT( *) AS count_aw FROM AW_STG_BUS_DBO.STR_MI_PROPERTY_LIST_STG  ) ;,AW_Load_STR_Property_v2.sas
 CREATE TABLE work.str_chk2 AS SELECT COUNT( *) AS count_src FROM SOURCEDATA;,AW_Load_STR_Property_v2.sas
DROP TABLE AWSTG.STR_MI_PROPERTY_LIST_REPL;,AW_Load_STR_Property_v2.sas
"  CALL AW_TGT_PROXY_DBO.GRANT_ON_TABLE( %quote( %'%scan( &outschm.,1,. )%'),%quote( %'%scan( &outtab.,1,. )%') ) ",AW_Load_STR_Property_v2.sas
DROP TABLE AWSTG.STR_MI_PROPERTY_LIST;,AW_Load_STR_Property_v2.sas
"  CREATE TABLE AW_SLS_STG_AM.TMC_Consortia_Prod_STG (  iata_number Varchar ( 9), brand_code Varchar ( 2), marsha_code Varchar ( 5), property_name Varchar ( 40), property_city Varchar ( 36), property_state Varchar ( 2), market_code Varchar ( 8), property_country_code Varchar ( 2), intermediary_company_nm Varchar ( 36), iata_city Varchar ( 36), iata_state Varchar ( 2), iata_country Varchar ( 2), parent_iata_number Varchar ( 8), parent_tmc_name Varchar ( 36), YrMonth Varchar ( 6), month Double, roomnights_ty Double, gross_usd_rev_ty Double, net_usd_rev_ty Double, qtr Double, org_name Varchar ( 50), Associate Varchar ( 14), Associate_eid Varchar ( 8) ) ) by odbc ;",AW_Load_TMC_Consortia_Prod.sas
INSERT INTO TABLE awprod.TMC_Consortia_Prod_STG SELECT * FROM work.Consortia_Production;,AW_Load_TMC_Consortia_Prod.sas
   TRUNCATE Table AW_SLS_PRD_AM.TMC_Consortia_Prod_&CURYR ) by odbc ;,AW_Load_TMC_Consortia_Prod.sas
   INSERT INTO AW_SLS_PRD_AM.TMC_Consortia_Prod_&CURYR Select * FROM AW_SLS_STG_AM.TMC_Consortia_Prod_STG ) by odbc ;,AW_Load_TMC_Consortia_Prod.sas
DROP TABLE AWPROD.TMC_Consortia_Prod_STG;,AW_Load_TMC_Consortia_Prod.sas
   DROP TABLE AW_STG_BUS_DBO.tmp_temp ) by odbc ;,AW_PACE_UPLOAD.sas
" CREATE TABLE AW_STG_BUS_DBO.tmp_temp (  snapshot_date VARCHAR( 10), stay_year INTEGER, stay_quarter INTEGER, stay_month INTEGER, prop_master_id VARCHAR( 12), status_cd VARCHAR( 30), revenue_department_nm VARCHAR( 100), market_segment_cd VARCHAR( 100), data_source_nm VARCHAR( 20), room_nights DOUBLE, room_revenue_local_amt DOUBLE, room_revenue_usd_amt DOUBLE, stly_room_nights DOUBLE, stly_room_revenue_local_amt DOUBLE, stly_room_revenue_usd_amt DOUBLE, ly_room_nights_amt DOUBLE, ly_room_revenue_local_amt DOUBLE, ly_room_revenue_usd_amt DOUBLE, food_revenue_local_amt DOUBLE, food_revenue_usd_amt DOUBLE, stly_food_revenue_local_amt DOUBLE, stly_food_revenue_usd_amt DOUBLE, ly_food_revenue_local_amt DOUBLE, ly_food_revenue_usd_amt DOUBLE, bev_revenue_local_amt DOUBLE, bev_revenue_usd_amt DOUBLE, stly_bev_revenue_local_amt DOUBLE, stly_bev_revenue_usd_amt DOUBLE, ly_bev_revenue_local_amt DOUBLE, ly_bev_revenue_usd_amt DOUBLE, rm_rental_revenue_local_amt DOUBLE, rm_rental_revenue_usd_amt DOUBLE, stly_rm_rental_revenue_local_amt DOUBLE, stly_rm_rental_revenue_usd_amt DOUBLE, ly_room_rental_revenue_local_amt DOUBLE, ly_room_rental_revenue_usd_amt DOUBLE, resource_revenue_local_amt DOUBLE, resource_revenue_usd_amt DOUBLE, stly_resource_revenue_local_amt DOUBLE, stly_resource_revenue_usd_amt DOUBLE, ly_resource_revenue_local_amt DOUBLE, ly_resource_revenue_usd_amt DOUBLE, other_revenue_local_amt DOUBLE, other_revenue_usd_amt DOUBLE, stly_other_revenue_local_amt DOUBLE, stly_other_revenue_usd_amt DOUBLE, ly_other_revenue_local_amt DOUBLE, ly_other_revenue_usd_amt DOUBLE ) ) by odbc ;",AW_PACE_UPLOAD.sas
" CREATE TABLE sourceData AS select snapshot_date, stay_year, stay_quarter, stay_month, prop_master_id, status_cd, revenue_department_nm, market_segment_cd, data_source_nm, room_nights, room_revenue_local_amt, room_revenue_usd_amt, stly_room_nights, stly_room_revenue_local_amt, stly_room_revenue_usd_amt, ly_room_nights_amt, ly_room_revenue_local_amt, ly_room_revenue_usd_amt, food_revenue_local_amt, food_revenue_usd_amt, stly_food_revenue_local_amt, stly_food_revenue_usd_amt, ly_food_revenue_local_amt, ly_food_revenue_usd_amt, bev_revenue_local_amt, bev_revenue_usd_amt, stly_bev_revenue_local_amt, stly_bev_revenue_usd_amt, ly_bev_revenue_local_amt, ly_bev_revenue_usd_amt, rm_rental_revenue_local_amt, rm_rental_revenue_usd_amt, stly_rm_rental_revenue_local_amt, stly_rm_rental_revenue_usd_amt, ly_room_rental_revenue_local_amt, ly_room_rental_revenue_usd_amt, resource_revenue_local_amt, resource_revenue_usd_amt, stly_resource_revenue_local_amt, stly_resource_revenue_usd_amt, ly_resource_revenue_local_amt, ly_resource_revenue_usd_amt, other_revenue_local_amt, other_revenue_usd_amt, stly_other_revenue_local_amt, stly_other_revenue_usd_amt, ly_other_revenue_local_amt, ly_other_revenue_usd_amt FROM gd.grp_bookingpace_misw_UPDATEd;",AW_PACE_UPLOAD.sas
INSERT INTO TABLE AWPROD.TMP_TEMP SELECT * FROM work.sourceData;,AW_PACE_UPLOAD.sas
"   INSERT INTO AW_STG_BUS_DBO.GRP_BOOKINGPACE_MISW select to_date( snapshot_date,'ddmonyyyy'), stay_year, stay_quarter, stay_month, prop_master_id, status_cd, revenue_department_nm, market_segment_cd, data_source_nm, room_nights, room_revenue_local_amt, room_revenue_usd_amt, stly_room_nights, stly_room_revenue_local_amt, stly_room_revenue_usd_amt, ly_room_nights_amt, ly_room_revenue_local_amt, ly_room_revenue_usd_amt, food_revenue_local_amt, food_revenue_usd_amt, stly_food_revenue_local_amt, stly_food_revenue_usd_amt, ly_food_revenue_local_amt, ly_food_revenue_usd_amt, bev_revenue_local_amt, bev_revenue_usd_amt, stly_bev_revenue_local_amt, stly_bev_revenue_usd_amt, ly_bev_revenue_local_amt, ly_bev_revenue_usd_amt, rm_rental_revenue_local_amt, rm_rental_revenue_usd_amt, stly_rm_rental_revenue_local_amt, stly_rm_rental_revenue_usd_amt, ly_room_rental_revenue_local_amt, ly_room_rental_revenue_usd_amt, resource_revenue_local_amt, resource_revenue_usd_amt, stly_resource_revenue_local_amt, stly_resource_revenue_usd_amt, ly_resource_revenue_local_amt, ly_resource_revenue_usd_amt, other_revenue_local_amt, other_revenue_usd_amt, stly_other_revenue_local_amt, stly_other_revenue_usd_amt, ly_other_revenue_local_amt, ly_other_revenue_usd_amt FROM aw_stg_bus_dbo.tmp_temp ) by odbc ;",AW_PACE_UPLOAD.sas
"CREATE TABLE sfo AS (SELECT MARSHA, SFO_AREA, SFO_MARKET, SFO_ORG FROM PROP_Original ORDER BY MARSHA);",CC36_Batch_Monthly_ReportsV9.sas
"CREATE TABLE sfo AS ( SELECT  *  , SFO_ORG AS SFOGROUP , "" "" AS SFO_LEADER  FROM sfo );",CC36_Batch_Monthly_ReportsV9.sas
ALTER TABLE sfo DROP COLUMN SFO_ORG ;,CC36_Batch_Monthly_ReportsV9.sas
"CREATE TABLE NALO AS ( SELECT MANAGER_CODE , BRAND: , MANAGER: , OWNER: , MARSHA: , TYPE: , PRIMAR FROM ""\\Hdqmdm1fpcl3v2\lodg-smps\Reporting Analysis\Sales Comp Analysis\Competitive Analysis\Monthly Reporting\NALO export\Open Property.txt"" MISSOVER );",CC36_Batch_Monthly_ReportsV9.sas
 CREATE TABLE comp AS ( SELECT  *  FROM proc.starview_comp_cd );,CC36_Batch_Monthly_ReportsV9.sas
 CREATE TABLE redomn AS ( SELECT  *  FROM proc.renovate_mnth_list );,CC36_Batch_Monthly_ReportsV9.sas
 CREATE TABLE redoytd AS ( SELECT  *  FROM proc.renovate_ytd_list );,CC36_Batch_Monthly_ReportsV9.sas
 CREATE TABLE data AS ( SELECT  *  FROM proc.x30month_cd );,CC36_Batch_Monthly_ReportsV9.sas
 CREATE TABLE datapw AS ( SELECT  *  FROM proc.X60_month_cd );,CC36_Batch_Monthly_ReportsV9.sas
" CREATE TABLE MS2 AS ( SELECT  *  , BRND AS BRAND  FROM PROP_Original );",CC36_Batch_Monthly_ReportsV9.sas
" CREATE TABLE JW AS SELECT m.MARSHA, d.MNTH, d.TIMEF, m.BRND, m.MF, d.MARCAP, d.MAROCC, d.MARREV, d.MARCAPLY, d.MAROCCLY, d.MARREVLY, d.MKTCAP, d.MKTOCC, d.MKTREV, d.MKTCAPLY, d.MKTOCCLY, d.MKTREVLY, ( ( ( d.MAROCC/D.MARCAP)/( D.MAROCCLY/D.MARCAPLY)) - 1)*100 AS OCC_CHG, ( ( ( D.MARREV/D.MAROCC)/( D.MARREVLY/D.MAROCCLY))- 1)*100 AS ADR_CHG, ( ( ( D.MARREV/D.MARCAP)/( D.MARREVLY/D.MARCAPLY))- 1) * 100 AS REVPAR_CHG, m.COUNTRY FROM DATA D INNER JOIN COMP C ON d.STRCODE = C.STR_ID INNER JOIN MS2 m ON C.MARSHA = m.MARSHA WHERE d.MNTH=""&STARMNTH"" AND d.TIMEF IN( ""MONTH"", ""YTD"") AND m.BRND IN( ""FS"", ""CC"",""JW"") AND UPPER( m.COUNTRY) IN( ""UNITED STATES"", ""CANADA"") AND C.COMP=""Y"" AND m.STATE<>""HI"";",CC36_Batch_Monthly_ReportsV9.sas
CREATE TABLE jwmonth AS ( SELECT  *  FROM JW  WHERE TIMEF = 'MONTH');,CC36_Batch_Monthly_ReportsV9.sas
CREATE TABLE jwytd AS ( SELECT  *  FROM JW  WHERE TIMEF <> 'MONTH');,CC36_Batch_Monthly_ReportsV9.sas
" CREATE TABLE RI AS SELECT m.MARSHA, m.BRND, d.TIMEF, d.MNTH, d.MARCAP, d.MAROCC, d.MARREV, d.MARCAPLY, d.MAROCCLY, d.MARREVLY, d.MKTCAP, d.MKTOCC, d.MKTREV, d.MKTCAPLY, d.MKTOCCLY, d.MKTREVLY, ( ( ( d.MAROCC/D.MARCAP)/( D.MAROCCLY/D.MARCAPLY)) - 1)*100 AS OCC_CHG, ( ( ( D.MARREV/D.MAROCC)/( D.MARREVLY/D.MAROCCLY))- 1)*100 AS ADR_CHG, ( ( ( D.MARREV/D.MARCAP)/( D.MARREVLY/D.MARCAPLY))- 1) * 100 AS REVPAR_CHG FROM DATA D INNER JOIN COMP C ON d.STRCODE = C.STR_ID INNER JOIN MS2 m ON C.MARSHA = m.MARSHA WHERE d.MNTH=""&STARMNTH"" AND d.TIMEF IN( ""MONTH"", ""YTD"") AND m.BRND = ""RI"" AND m.region IN( ""E_"", ""S_"", ""W_"",""C_"") AND C.COMP=""Y"";",CC36_Batch_Monthly_ReportsV9.sas
" CREATE TABLE MGMT AS SELECT L.MANAGER, L.MANAGER_CODE, m.brnd, COUNT( L.MANAGER_CODE) AS CountOfManager_Code, D.TIMEF, D.MNTH, SUM( d.MARCAP) AS MARCAP, SUM( d.MAROCC) AS MAROCC, SUM( d.MARREV) AS MARREV, SUM( d.MARCAPLY) AS MARCAPLY, SUM( d.MAROCCLY) AS MAROCCLY, SUM( d.MARREVLY) AS MARREVLY, SUM( d.MKTCAP) AS MKTCAP, SUM( d.MKTOCC) AS MKTOCC, SUM( d.MKTREV) AS MKTREV, SUM( d.MKTCAPLY) AS MKTCAPLY, SUM( d.MKTOCCLY) AS MKTOCCLY, SUM( d.MKTREVLY) AS MKTREVLY, ( calculated marocc/ calculated mktocc) * 100 AS Marr_OI_TY, ( calculated maroccly/ calculated mktoccly) * 100 AS Marr_OI_LY, ( calculated Marr_OI_TY/ calculated Marr_OI_LY)- 1 AS OI_Chg, ( ( calculated marrev/calculated marocc)/( calculated mktrev/calculated mktocc)) * 100 AS AI_TY, ( ( calculated marrevly/calculated maroccly)/( calculated mktrevly/calculated mktoccly)) * 100 AS AI_LY, ( calculated AI_TY/ calculated AI_LY)-1 AS AI_CHG, ( calculated MARREV/calculated MKTREV) * 100 AS Marr_RI_TY, ( calculated MARREVLY/ calculated MKTREVLY) * 100 AS Marr_RI_LY, ( CALCULATED Marr_RI_TY/ CALCULATED Marr_RI_LY)-1 AS RI_Chg, ( calculated marocc/ calculated marcap) AS Marr_occ_ty, ( calculated marrev/calculated marocc) AS Marr_ADR_TY, ( calculated marrev/ calculated marcap) AS Marr_RevPAR_TY FROM DATA AS D INNER JOIN MS2 AS M ON D.STRCODE = M.STR_ID INNER JOIN Comp AS C ON M.MARSHA = C.MARSHA INNER JOIN NALO AS L ON C.MARSHA = L.MARSHA WHERE M.REGION IN( ""E_"", ""S_"", ""W_"",""C_"") AND C.COMP =""Y"" AND D.TIMEF IN( ""LAST12"", ""YTD"", ""MONTH"", ""LAST3"") AND D.MNTH = ""&STARMNTH"" AND D.MARCAP <> 0 AND D.MAROCC <> 0 AND D.MARREV <> 0 AND D.MARCAPLY <> 0 AND D.MAROCCLY <> 0 AND D.MARREVLY <> 0 AND D.MKTCAP <>0 AND D.MKTOCC <> 0 AND D.MKTREV <> 0 AND D.MKTCAPLY <> 0 AND D.MKTOCCLY <> 0 AND D.MKTREVLY <> 0 AND L.MANAGER_CODE Is Not missing GROUP BY L.MANAGER, M.BRND, D.TIMEF, D.MNTH, L.MANAGER_CODE;",CC36_Batch_Monthly_ReportsV9.sas
" CREATE TABLE MGMTA AS SELECT L.MANAGER, L.MANAGER_CODE , COUNT( L.MANAGER_CODE) AS CountOfManager_Code, D.TIMEF, D.MNTH, SUM( d.MARCAP) AS MARCAP, SUM( d.MAROCC) AS MAROCC, SUM( d.MARREV) AS MARREV, SUM( d.MARCAPLY) AS MARCAPLY, SUM( d.MAROCCLY) AS MAROCCLY, SUM( d.MARREVLY) AS MARREVLY, SUM( d.MKTCAP) AS MKTCAP, SUM( d.MKTOCC) AS MKTOCC, SUM( d.MKTREV) AS MKTREV, SUM( d.MKTCAPLY) AS MKTCAPLY, SUM( d.MKTOCCLY) AS MKTOCCLY, SUM( d.MKTREVLY) AS MKTREVLY, ( calculated marocc/ calculated mktocc) * 100 AS Marr_OI_TY, ( calculated maroccly/ calculated mktoccly) * 100 AS Marr_OI_LY, ( calculated Marr_OI_TY/ calculated Marr_OI_LY)- 1 AS OI_Chg, ( ( calculated marrev/calculated marocc)/( calculated mktrev/calculated mktocc)) * 100 AS AI_TY, ( ( calculated marrevly/calculated maroccly)/( calculated mktrevly/calculated mktoccly)) * 100 AS AI_LY, ( calculated AI_TY/ calculated AI_LY)-1 AS AI_CHG, ( calculated MARREV/calculated MKTREV) * 100 AS Marr_RI_TY, ( calculated MARREVLY/ calculated MKTREVLY) * 100 AS Marr_RI_LY, ( CALCULATED Marr_RI_TY/ CALCULATED Marr_RI_LY)-1 AS RI_Chg, ( calculated marocc/ calculated marcap) AS Marr_occ_ty, ( calculated marrev/calculated marocc) AS Marr_ADR_TY, ( calculated marrev/ calculated marcap) AS Marr_RevPAR_TY FROM DATA AS D INNER JOIN MS2 AS M ON D.STRCODE = M.STR_ID INNER JOIN Comp AS C ON M.MARSHA = C.MARSHA INNER JOIN NALO AS L ON C.MARSHA = L.MARSHA WHERE M.REGION IN( ""E_"", ""S_"", ""W_"",""C_"") AND C.COMP =""Y"" AND D.TIMEF IN( ""LAST12"", ""YTD"", ""MONTH"", ""LAST3"") AND D.MNTH = ""&STARMNTH"" AND D.MARCAP <> 0 AND D.MAROCC <> 0 AND D.MARREV <> 0 AND D.MARCAPLY <> 0 AND D.MAROCCLY <> 0 AND D.MARREVLY <> 0 AND D.MKTCAP <>0 AND D.MKTOCC <> 0 AND D.MKTREV <> 0 AND D.MKTCAPLY <> 0 AND D.MKTOCCLY <> 0 AND D.MKTREVLY <> 0 AND L.MANAGER_CODE Is Not missing GROUP BY L.MANAGER, D.TIMEF, D.MNTH, L.MANAGER_CODE;",CC36_Batch_Monthly_ReportsV9.sas
" CREATE TABLE MGMT2 AS ( SELECT MANAGER, MANAGER_CODE, CountOfManager_Code, MNTH, TIMEF, Marr_OI_TY, OIChg, AI_TY, Marr_RI_TY, Marr_occ_ty, Marr_ADR_TY, Marr_RevPAR_TY , FORMAT(Brnd, VARCHAR(8)) AS Brnd , OI_Chg*100 AS OICHG , AI_CHG *100 AS AICHG , RI_Chg*100 AS RIChg  FROM MGMT) ORDER BY MANAGER BRND TIMEF MNTH MANAGER_CODE ;",CC36_Batch_Monthly_ReportsV9.sas
" CREATE TABLE MGMTA2 AS ( SELECT MANAGER, MANAGER_CODE, Brnd, CountOfManager_Code, MNTH, TIMEF, Marr_OI_TY, OIChg, AI_TY, Marr_RI_TY, Marr_occ_ty, Marr_ADR_TY, Marr_RevPAR_TY , 'All' AS BRND , 1 AS countofmanager_code , OI_Chg*100 AS OICHG , AI_CHG *100 AS AICHG , RI_Chg*100 AS RIChg  FROM MGMTA) ORDER BY MANAGER TIMEF MNTH MANAGER_CODE ;",CC36_Batch_Monthly_ReportsV9.sas
 CREATE TABLE MGMT_Final AS select * FROM mgmt2 UNION select * FROM mgmta2;,CC36_Batch_Monthly_ReportsV9.sas
" CREATE TABLE OWN AS SELECT L.OWNER, L.OWNER_CODE, m.brnd, COUNT( L.OWNER_CODE) AS CountOfOWNER_Code, D.TIMEF, D.MNTH, SUM( d.MARCAP) AS MARCAP, SUM( d.MAROCC) AS MAROCC, SUM( d.MARREV) AS MARREV, SUM( d.MARCAPLY) AS MARCAPLY, SUM( d.MAROCCLY) AS MAROCCLY, SUM( d.MARREVLY) AS MARREVLY, SUM( d.MKTCAP) AS MKTCAP, SUM( d.MKTOCC) AS MKTOCC, SUM( d.MKTREV) AS MKTREV, SUM( d.MKTCAPLY) AS MKTCAPLY, SUM( d.MKTOCCLY) AS MKTOCCLY, SUM( d.MKTREVLY) AS MKTREVLY, ( calculated marocc/ calculated mktocc) * 100 AS Marr_OI_TY, ( calculated maroccly/ calculated mktoccly) * 100 AS Marr_OI_LY, ( calculated Marr_OI_TY/ calculated Marr_OI_LY)- 1 AS OI_Chg, ( ( calculated marrev/calculated marocc)/( calculated mktrev/calculated mktocc)) * 100 AS AI_TY, ( ( calculated marrevly/calculated maroccly)/( calculated mktrevly/calculated mktoccly)) * 100 AS AI_LY, ( calculated AI_TY/ calculated AI_LY)-1 AS AI_CHG, ( calculated MARREV/calculated MKTREV) * 100 AS Marr_RI_TY, ( calculated MARREVLY/ calculated MKTREVLY) * 100 AS Marr_RI_LY, ( CALCULATED Marr_RI_TY/ CALCULATED Marr_RI_LY)-1 AS RI_Chg, ( calculated marocc/ calculated marcap) AS Marr_occ_ty, ( calculated marrev/calculated marocc) AS Marr_ADR_TY, ( calculated marrev/ calculated marcap) AS Marr_RevPAR_TY FROM DATA AS D INNER JOIN MS2 AS M ON D.STRCODE = M.STR_ID INNER JOIN Comp AS C ON M.MARSHA = C.MARSHA INNER JOIN NALO AS L ON C.MARSHA = L.MARSHA WHERE M.REGION IN( ""E_"", ""S_"", ""W_"",""C_"") AND C.COMP =""Y"" AND D.TIMEF IN( ""LAST12"", ""YTD"", ""MONTH"", ""LAST3"") AND D.MNTH = ""&STARMNTH"" AND D.MARCAP <> 0 AND D.MAROCC <> 0 AND D.MARREV <> 0 AND D.MARCAPLY <> 0 AND D.MAROCCLY <> 0 AND D.MARREVLY <> 0 AND D.MKTCAP <>0 AND D.MKTOCC <> 0 AND D.MKTREV <> 0 AND D.MKTCAPLY <> 0 AND D.MKTOCCLY <> 0 AND D.MKTREVLY <> 0 AND L.OWNER_CODE Is Not missing GROUP BY L.OWNER, M.BRND, D.TIMEF, D.MNTH, L.OWNER_CODE;",CC36_Batch_Monthly_ReportsV9.sas
" CREATE TABLE OWNA AS SELECT L.OWNER, L.OWNER_CODE , COUNT( L.OWNER_CODE) AS CountOfOWNER_Code, D.TIMEF, D.MNTH, SUM( d.MARCAP) AS MARCAP, SUM( d.MAROCC) AS MAROCC, SUM( d.MARREV) AS MARREV, SUM( d.MARCAPLY) AS MARCAPLY, SUM( d.MAROCCLY) AS MAROCCLY, SUM( d.MARREVLY) AS MARREVLY, SUM( d.MKTCAP) AS MKTCAP, SUM( d.MKTOCC) AS MKTOCC, SUM( d.MKTREV) AS MKTREV, SUM( d.MKTCAPLY) AS MKTCAPLY, SUM( d.MKTOCCLY) AS MKTOCCLY, SUM( d.MKTREVLY) AS MKTREVLY, ( calculated marocc/ calculated mktocc) * 100 AS Marr_OI_TY, ( calculated maroccly/ calculated mktoccly) * 100 AS Marr_OI_LY, ( calculated Marr_OI_TY/ calculated Marr_OI_LY)- 1 AS OI_Chg, ( ( calculated marrev/calculated marocc)/( calculated mktrev/calculated mktocc)) * 100 AS AI_TY, ( ( calculated marrevly/calculated maroccly)/( calculated mktrevly/calculated mktoccly)) * 100 AS AI_LY, ( calculated AI_TY/ calculated AI_LY)-1 AS AI_CHG, ( calculated MARREV/calculated MKTREV) * 100 AS Marr_RI_TY, ( calculated MARREVLY/ calculated MKTREVLY) * 100 AS Marr_RI_LY, ( CALCULATED Marr_RI_TY/ CALCULATED Marr_RI_LY)-1 AS RI_Chg, ( calculated marocc/ calculated marcap) AS Marr_occ_ty, ( calculated marrev/calculated marocc) AS Marr_ADR_TY, ( calculated marrev/ calculated marcap) AS Marr_RevPAR_TY FROM DATA AS D INNER JOIN MS2 AS M ON D.STRCODE = M.STR_ID INNER JOIN Comp AS C ON M.MARSHA = C.MARSHA INNER JOIN NALO AS L ON C.MARSHA = L.MARSHA WHERE M.REGION IN( ""E_"", ""S_"", ""W_"",""C_"") AND C.COMP =""Y"" AND D.TIMEF IN( ""LAST12"", ""YTD"", ""MONTH"", ""LAST3"") AND D.MNTH = ""&STARMNTH"" AND D.MARCAP <> 0 AND D.MAROCC <> 0 AND D.MARREV <> 0 AND D.MARCAPLY <> 0 AND D.MAROCCLY <> 0 AND D.MARREVLY <> 0 AND D.MKTCAP <>0 AND D.MKTOCC <> 0 AND D.MKTREV <> 0 AND D.MKTCAPLY <> 0 AND D.MKTOCCLY <> 0 AND D.MKTREVLY <> 0 AND L.OWNER_CODE Is Not missing GROUP BY L.OWNER, D.TIMEF, D.MNTH, L.OWNER_CODE;",CC36_Batch_Monthly_ReportsV9.sas
" CREATE TABLE OWN2 AS ( SELECT OWNER, OWNER_CODE, Brnd, CountOfOWNER_Code, MNTH, TIMEF, Marr_OI_TY, OIChg, AI_TY, Marr_RI_TY, Marr_occ_ty, Marr_ADR_TY, Marr_RevPAR_TY , OI_Chg*100 AS OICHG , AI_CHG *100 AS AICHG , RI_Chg*100 AS RIChg  FROM OWN) ORDER BY OWNER BRND TIMEF MNTH OWNER_CODE ;",CC36_Batch_Monthly_ReportsV9.sas
" CREATE TABLE OWNA2 AS ( SELECT OWNER, OWNER_CODE, Brnd, CountOfOWNER_Code, MNTH, TIMEF, Marr_OI_TY, OIChg, AI_TY, Marr_RI_TY, Marr_occ_ty, Marr_ADR_TY, Marr_RevPAR_TY , 'All' AS BRND , 1 AS countofowner_code , OI_Chg*100 AS OICHG , AI_CHG *100 AS AICHG , RI_Chg*100 AS RIChg  FROM OWNA) ORDER BY OWNER TIMEF MNTH OWNER_CODE ;",CC36_Batch_Monthly_ReportsV9.sas
 CREATE TABLE Owner_Final AS select * FROM OWNA2 UNION select * FROM mgmt2;,CC36_Batch_Monthly_ReportsV9.sas
" CREATE TABLE star AS SELECT m.brnd, COUNT( m.brnd) AS CountOfBrand, D.TIMEF, D.MNTH, SUM( d.MARCAP) AS MARCAP, SUM( d.MAROCC) AS MAROCC, SUM( d.MARREV) AS MARREV, SUM( d.MARCAPLY) AS MARCAPLY, SUM( d.MAROCCLY) AS MAROCCLY, SUM( d.MARREVLY) AS MARREVLY, SUM( d.MKTCAP) AS MKTCAP, SUM( d.MKTOCC) AS MKTOCC, SUM( d.MKTREV) AS MKTREV, SUM( d.MKTCAPLY) AS MKTCAPLY, SUM( d.MKTOCCLY) AS MKTOCCLY, SUM( d.MKTREVLY) AS MKTREVLY, ( calculated marocc/ calculated mktocc) * 100 AS Marr_OI_TY, ( calculated maroccly/ calculated mktoccly) * 100 AS Marr_OI_LY, ( calculated Marr_OI_TY/ calculated Marr_OI_LY)- 1 AS OI_Chg, ( ( calculated marrev/calculated marocc)/( calculated mktrev/calculated mktocc)) * 100 AS Marr_AI_TY, ( ( calculated marrevly/calculated maroccly)/( calculated mktrevly/calculated mktoccly)) * 100 AS AI_LY, ( calculated Marr_AI_TY/ calculated AI_LY)- 1 AS AI_CHG, ( calculated MARREV/calculated MKTREV) * 100 AS Marr_RI_TY, ( calculated MARREVLY/ calculated MKTREVLY) * 100 AS Marr_RI_LY, ( CALCULATED Marr_RI_TY/ CALCULATED Marr_RI_LY)- 1 AS RI_Chg, ( calculated marocc/ calculated marcap) AS Marr_occ_ty, ( calculated marrev/calculated marocc) AS Marr_ADR_TY, ( calculated marrev/ calculated marcap) AS Marr_RevPAR_TY FROM DATA AS D INNER JOIN MS2 AS M ON D.STRCODE = M.STR_ID INNER JOIN Comp AS C ON M.MARSHA = C.MARSHA WHERE M.REGION IN( ""E_"", ""S_"", ""W_"",""C_"") AND C.COMP =""Y"" AND D.TIMEF IN( ""LAST12"", ""YTD"", ""MONTH"", ""LAST3"") AND D.MNTH = ""&STARMNTH"" GROUP BY m.brnd, D.TIMEF, D.MNTH;",CC36_Batch_Monthly_ReportsV9.sas
" CREATE TABLE star2 AS ( SELECT Brnd, CountOfBrand, TIMEF, MNTH, Marr_OI_TY, Marr_AI_TY, Marr_RI_TY, Marr_occ_ty, Marr_ADR_TY, Marr_RevPAR_TY , OI_Chg*100 AS OICHG , AI_CHG *100 AS AICHG , RI_Chg*100 AS RIChg  FROM star );",CC36_Batch_Monthly_ReportsV9.sas
" CREATE TABLE starview AS SELECT m.MARSHA, m.BRND, m.REGION, m.MF FROM comp c INNER JOIN ms2 m ON c.STR_ID = m.STR_ID WHERE c.COMP=""Y"";",CC36_Batch_Monthly_ReportsV9.sas
"CREATE TABLE ""&O_and_F.\Starview Final Report.xls"" AS ( SELECT * FROM WORK.star2) ;",CC36_Batch_Monthly_ReportsV9.sas
"CREATE TABLE ""&O_and_F.\Owner Final Report.xls"" AS ( SELECT * FROM WORK.owner_final) ;",CC36_Batch_Monthly_ReportsV9.sas
"CREATE TABLE ""&O_and_F.\Mngt Final Report.xls"" AS ( SELECT * FROM WORK.mgmt_final) ;",CC36_Batch_Monthly_ReportsV9.sas
"CREATE TABLE ""&O_and_F.\Starviewcomp_Extract.xls"" AS ( SELECT * FROM WORK.starview) ;",CC36_Batch_Monthly_ReportsV9.sas
"CREATE TABLE ""&O_and_F.\JW Query for Scorecard Month.xls"" AS ( SELECT * FROM WORK.JWMONTH) ;",CC36_Batch_Monthly_ReportsV9.sas
"CREATE TABLE ""&O_and_F.\JW Query for Scorecard YTD.xls"" AS ( SELECT * FROM WORK.JWYTD) ;",CC36_Batch_Monthly_ReportsV9.sas
"CREATE TABLE ""&O_and_F.\Residence Inn Query for Scorecard Month.xls"" AS ( SELECT * FROM WORK.RI) ;",CC36_Batch_Monthly_ReportsV9.sas
"CREATE TABLE ""\\hdqmdm1fpcl4v1\LODG-STAR\Star Files\Starview_Final_Report.csv"" AS ( SELECT * FROM WORK.star2) ;",CC36_Batch_Monthly_ReportsV9.sas
"CREATE TABLE ""\\hdqmdm1fpcl4v1\LODG-STAR\Star Files\Owner_Final_Report.csv"" AS ( SELECT * FROM WORK.owner_final) ;",CC36_Batch_Monthly_ReportsV9.sas
"CREATE TABLE ""\\hdqmdm1fpcl4v1\LODG-STAR\Star Files\Mngt_Final_Report.csv"" AS ( SELECT * FROM WORK.mgmt_final) ;",CC36_Batch_Monthly_ReportsV9.sas
"CREATE TABLE ""\\hdqmdm1fpcl4v1\LODG-STAR\Star Files\Starviewcomp_Extract.csv"" AS ( SELECT * FROM WORK.starview) ;",CC36_Batch_Monthly_ReportsV9.sas
"CREATE TABLE ""\\hdqmdm1fpcl4v1\LODG-STAR\Star Files\JW_Query_for_Scorecard_Month.csv"" AS ( SELECT * FROM WORK.JWMONTH) ;",CC36_Batch_Monthly_ReportsV9.sas
"CREATE TABLE ""\\hdqmdm1fpcl4v1\LODG-STAR\Star Files\JW_Query_for_Scorecard_YTD.csv"" AS ( SELECT * FROM WORK.JWYTD) ;",CC36_Batch_Monthly_ReportsV9.sas
"CREATE TABLE ""\\hdqmdm1fpcl4v1\LODG-STAR\Star Files\Residence_Inn_Query_for_Scorecard_Month.csv"" AS ( SELECT * FROM WORK.RI) ;",CC36_Batch_Monthly_ReportsV9.sas
"CREATE TABLE MONIND AS ( SELECT IndSegID , PrimarySeg , SecondarySeg , Description , Date , Supply , Demand , Reven FROM ""\\Hdqmdm1fpcl4v1\lodg-STAR\Monthly_Reporting\&month.&STARYR.\proc\monind_&STARMNTH..txt"" );",CC52_industry_v5.sas
"CREATE TABLE IND_A AS ( SELECT  *  , 'STR' AS DATASOURCE , &STARMNTH. AS Asof_yrmo , DATE AS YRMNTH , Supply AS MARCAP , Demand AS MAROCC , Revenue AS MARREV , CASE WHEN  Description = 'United States'  THEN 'US Industry - All Chain Scales' WHEN   Description = 'United States Extended Stay - Lower' OR Description = 'United States Extended Stay - Upper'  THEN 'US Industry - Extended Stay' ELSE 'US Industry - Chain Scales' END AS Identifier FROM MONIND );",CC52_industry_v5.sas
"ALTER TABLE IND_A DROP COLUMN DATE ,  Supply ,  Demand ,  Revenue ,  IndSegID ,  PrimarySeg ,  SecondarySeg ;",CC52_industry_v5.sas
" CREATE TABLE IND_B AS ( SELECT  *  , TRIMCONCAT( YRMNTH,""01"" ) AS date  FROM IND_A );",CC52_industry_v5.sas
" CREATE TABLE IND_C AS ( SELECT  *  , FORMAT(CAST( RTRIM( date), yymmdd8.  ), yymmddn8.) AS date_new  FROM IND_B );",CC52_industry_v5.sas
" CREATE TABLE IND_MONTH AS select m0.date_new, m0.Description, m0.Identifier, m0.ASOF_YRMO, m0.YRMNTH , 'Rooms' AS DATA_CATEGORY , '' AS DATA_TYPE, 'MONTH' AS TIME_TYPE, 'MONTH' AS TIMEF , m0.DATASOURCE , m0.MARCAP AS MARAVAIL, m0.MAROCC AS MARSOLD, m0.MARREV , m1.MARCAP AS MARAVAILLY, m1.MAROCC AS MARSOLDLY, m1.MARREV AS MARREVLY , m2.MARCAP AS MARAVAILLY_2PRIOR, m2.MAROCC AS MARSOLDLY_2PRIOR, m2.MARREV AS MARREVLY_2PRIOR , CASE WHEN m0.MARCAP*m0.MAROCC*m0.MARREV*m1.MARCAP*m1.MAROCC*m1.MARREV > 0 THEN 1 ELSE 0 END AS COMPLETE_DATA FROM IND_C AS m0 LEFT JOIN IND_C AS m1 ON m0.Description = m1.Description AND m0.YRMNTH = m1.YRMNTH + 100 LEFT JOIN IND_C AS m2 ON m0.Description = m2.Description AND m0.YRMNTH = m2.YRMNTH + 200 WHERE m0.YRMNTH <= &STARMNTH ORDER BY m0.Description, m0.Identifier, m0.YRMNTH ;",CC52_industry_v5.sas
" CREATE TABLE IND_L12_A AS SELECT M0.DATE_NEW, M0.DESCRIPTION, M0.IDENTIFIER, M0.ASOF_YRMO, M0.YRMNTH , M0.DATA_CATEGORY, M0.DATA_TYPE, 'LAST12' AS TIME_TYPE, 'LAST12' AS TIMEF , M0.DATASOURCE , M0.MARAVAIL+M1.MARAVAIL+M2.MARAVAIL+M3.MARAVAIL+M4.MARAVAIL+M5.MARAVAIL +M6.MARAVAIL+M7.MARAVAIL+M8.MARAVAIL+M9.MARAVAIL+M10.MARAVAIL+M11.MARAVAIL AS MARAVAIL , M0.MARSOLD+M1.MARSOLD+M2.MARSOLD+M3.MARSOLD+M4.MARSOLD+M5.MARSOLD +M6.MARSOLD+M7.MARSOLD+M8.MARSOLD+M9.MARSOLD+M10.MARSOLD+M11.MARSOLD AS MARSOLD , M0.MARREV+M1.MARREV+M2.MARREV+M3.MARREV+M4.MARREV+M5.MARREV +M6.MARREV+M7.MARREV+M8.MARREV+M9.MARREV+M10.MARREV+M11.MARREV AS MARREV , M0.COMPLETE_DATA+M1.COMPLETE_DATA+M2.COMPLETE_DATA+M3.COMPLETE_DATA+M4.COMPLETE_DATA+M5.COMPLETE_DATA +M6.COMPLETE_DATA+M7.COMPLETE_DATA+M8.COMPLETE_DATA+M9.COMPLETE_DATA+M10.COMPLETE_DATA+M11.COMPLETE_DATA AS DATA_CHECK FROM IND_FINAL_MONTH AS M0 LEFT JOIN IND_FINAL_MONTH AS M1 ON M0.DESCRIPTION = M1.DESCRIPTION AND M0.DATE_NEW = DATEADD('MONTH',1,M1.DATE_NEW) AND M0.DATA_TYPE = M1.DATA_TYPE LEFT JOIN IND_FINAL_MONTH AS M2 ON M0.DESCRIPTION = M2.DESCRIPTION AND M0.DATE_NEW = DATEADD('MONTH',2,M2.DATE_NEW) AND M0.DATA_TYPE = M2.DATA_TYPE LEFT JOIN IND_FINAL_MONTH AS M3 ON M0.DESCRIPTION = M3.DESCRIPTION AND M0.DATE_NEW = DATEADD('MONTH',3,M3.DATE_NEW) AND M0.DATA_TYPE = M3.DATA_TYPE LEFT JOIN IND_FINAL_MONTH AS M4 ON M0.DESCRIPTION = M4.DESCRIPTION AND M0.DATE_NEW = DATEADD('MONTH',4,M4.DATE_NEW) AND M0.DATA_TYPE = M4.DATA_TYPE LEFT JOIN IND_FINAL_MONTH AS M5 ON M0.DESCRIPTION = M5.DESCRIPTION AND M0.DATE_NEW = DATEADD('MONTH',5,M5.DATE_NEW) AND M0.DATA_TYPE = M5.DATA_TYPE LEFT JOIN IND_FINAL_MONTH AS M6 ON M0.DESCRIPTION = M6.DESCRIPTION AND M0.DATE_NEW = DATEADD('MONTH',6,M6.DATE_NEW) AND M0.DATA_TYPE = M6.DATA_TYPE LEFT JOIN IND_FINAL_MONTH AS M7 ON M0.DESCRIPTION = M7.DESCRIPTION AND M0.DATE_NEW = DATEADD('MONTH',7,M7.DATE_NEW) AND M0.DATA_TYPE = M7.DATA_TYPE LEFT JOIN IND_FINAL_MONTH AS M8 ON M0.DESCRIPTION = M8.DESCRIPTION AND M0.DATE_NEW = DATEADD('MONTH',8,M8.DATE_NEW) AND M0.DATA_TYPE = M8.DATA_TYPE LEFT JOIN IND_FINAL_MONTH AS M9 ON M0.DESCRIPTION = M9.DESCRIPTION AND M0.DATE_NEW = DATEADD('MONTH',9,M9.DATE_NEW) AND M0.DATA_TYPE = M9.DATA_TYPE LEFT JOIN IND_FINAL_MONTH AS M10 ON M0.DESCRIPTION = M10.DESCRIPTION AND M0.DATE_NEW = DATEADD('MONTH',10,M10.DATE_NEW) AND M0.DATA_TYPE = M10.DATA_TYPE LEFT JOIN IND_FINAL_MONTH AS M11 ON M0.DESCRIPTION = M11.DESCRIPTION AND M0.DATE_NEW = DATEADD('MONTH',11,M11.DATE_NEW)AND M0.DATA_TYPE = M11.DATA_TYPE ORDER BY M0.DESCRIPTION, M0.IDENTIFIER, M0.YRMNTH ;",CC52_industry_v5.sas
" CREATE TABLE IND_L12_B AS select m0.* , m1.MARAVAIL AS MARAVAILLY, m1.MARSOLD AS MARSOLDLY, m1.MARREV AS MARREVLY , m2.MARAVAIL AS MARAVAILLY_2PRIOR, m2.MARSOLD AS MARSOLDLY_2PRIOR, m2.MARREV AS MARREVLY_2PRIOR , CASE WHEN m0.DATA_CHECK = 12 THEN 1 ELSE 0 END AS COMPLETE_DATA FROM IND_L12_A AS m0 LEFT JOIN IND_L12_A AS m1 ON m0.Description = m1.Description AND m0.YRMNTH = m1.YRMNTH + 100 AND m0.DATA_TYPE = m1.DATA_TYPE LEFT JOIN IND_L12_A AS m2 ON m0.Description = m2.Description AND m0.YRMNTH = m2.YRMNTH + 200 AND m0.DATA_TYPE = m2.DATA_TYPE ORDER BY m0.Description, m0.Identifier, m0.YRMNTH ;",CC52_industry_v5.sas
" CREATE TABLE IND_L3_A AS SELECT M0.DATE_NEW, M0.DESCRIPTION, M0.IDENTIFIER, M0.ASOF_YRMO, M0.YRMNTH , M0.DATA_CATEGORY, M0.DATA_TYPE, 'LAST3' AS TIME_TYPE, 'LAST3' AS TIMEF , M0.DATASOURCE , M0.MARAVAIL+M1.MARAVAIL+M2.MARAVAIL AS MARAVAIL , M0.MARSOLD+M1.MARSOLD+M2.MARSOLD AS MARSOLD , M0.MARREV+M1.MARREV+M2.MARREV AS MARREV , M0.COMPLETE_DATA+M1.COMPLETE_DATA+M2.COMPLETE_DATA AS DATA_CHECK FROM IND_FINAL_MONTH AS M0 LEFT JOIN IND_FINAL_MONTH AS M1 ON M0.DESCRIPTION = M1.DESCRIPTION AND M0.DATE_NEW = DATEADD('MONTH',1,M1.DATE_NEW) AND M0.DATA_TYPE = M1.DATA_TYPE LEFT JOIN IND_FINAL_MONTH AS M2 ON M0.DESCRIPTION = M2.DESCRIPTION AND M0.DATE_NEW = DATEADD('MONTH',2,M2.DATE_NEW) AND M0.DATA_TYPE = M2.DATA_TYPE ORDER BY M0.DESCRIPTION, M0.IDENTIFIER, M0.YRMNTH ;",CC52_industry_v5.sas
" CREATE TABLE IND_L3_B AS select m0.* , m1.MARAVAIL AS MARAVAILLY, m1.MARSOLD AS MARSOLDLY, m1.MARREV AS MARREVLY , m2.MARAVAIL AS MARAVAILLY_2PRIOR, m2.MARSOLD AS MARSOLDLY_2PRIOR, m2.MARREV AS MARREVLY_2PRIOR , CASE WHEN m0.DATA_CHECK = 3 THEN 1 ELSE 0 END AS COMPLETE_DATA FROM IND_L3_A AS m0 LEFT JOIN IND_L3_A AS m1 ON m0.Description = m1.Description AND m0.YRMNTH = m1.YRMNTH + 100 AND m0.DATA_TYPE = m1.DATA_TYPE LEFT JOIN IND_L3_A AS m2 ON m0.Description = m2.Description AND m0.YRMNTH = m2.YRMNTH + 200 AND m0.DATA_TYPE = m2.DATA_TYPE ORDER BY m0.Description, m0.Identifier, m0.YRMNTH ;",CC52_industry_v5.sas
" CREATE TABLE IND_YTD_A AS SELECT M0.DATE_NEW AS DATE_NEW_ORIG, M0.YRMNTH AS YRMNTH_ORIG,EXTRACT(MONTH FROM M0.DATE_NEW) AS MONTH_ORIG, M0.DATA_TYPE AS DATA_TYPE_ORIG, M0.DATA_TYPE AS DATA_TYPE_PREV,EXTRACT(MONTH FROM M0.DATE_NEW) AS MONTH_PREV, M0.* FROM IND_FINAL_MONTH AS M0 UNION SELECT M0.DATE_NEW AS DATE_NEW_ORIG, M0.YRMNTH AS YRMNTH_ORIG,EXTRACT(MONTH FROM M0.DATE_NEW) AS MONTH_ORIG, M0.DATA_TYPE AS DATA_TYPE_ORIG, M1.DATA_TYPE AS DATA_TYPE_PREV,EXTRACT(MONTH FROM M1.DATE_NEW) AS MONTH_PREV, M1.* FROM IND_FINAL_MONTH AS M0 RIGHT JOIN IND_FINAL_MONTH AS M1 ON M0.DESCRIPTION = M1.DESCRIPTION AND M0.DATE_NEW = DATEADD('MONTH',1,M1.DATE_NEW) AND M0.DATA_TYPE = M1.DATA_TYPE UNION SELECT M0.DATE_NEW AS DATE_NEW_ORIG, M0.YRMNTH AS YRMNTH_ORIG,EXTRACT(MONTH FROM M0.DATE_NEW) AS MONTH_ORIG, M0.DATA_TYPE AS DATA_TYPE_ORIG, M1.DATA_TYPE AS DATA_TYPE_PREV,EXTRACT(MONTH FROM M1.DATE_NEW) AS MONTH_PREV, M1.* FROM IND_FINAL_MONTH AS M0 RIGHT JOIN IND_FINAL_MONTH AS M1 ON M0.DESCRIPTION = M1.DESCRIPTION AND M0.DATE_NEW = DATEADD('MONTH',2,M1.DATE_NEW) AND M0.DATA_TYPE = M1.DATA_TYPE UNION SELECT M0.DATE_NEW AS DATE_NEW_ORIG, M0.YRMNTH AS YRMNTH_ORIG,EXTRACT(MONTH FROM M0.DATE_NEW) AS MONTH_ORIG, M0.DATA_TYPE AS DATA_TYPE_ORIG, M1.DATA_TYPE AS DATA_TYPE_PREV,EXTRACT(MONTH FROM M1.DATE_NEW) AS MONTH_PREV, M1.* FROM IND_FINAL_MONTH AS M0 RIGHT JOIN IND_FINAL_MONTH AS M1 ON M0.DESCRIPTION = M1.DESCRIPTION AND M0.DATE_NEW = DATEADD('MONTH',3,M1.DATE_NEW) AND M0.DATA_TYPE = M1.DATA_TYPE UNION SELECT M0.DATE_NEW AS DATE_NEW_ORIG, M0.YRMNTH AS YRMNTH_ORIG,EXTRACT(MONTH FROM M0.DATE_NEW) AS MONTH_ORIG, M0.DATA_TYPE AS DATA_TYPE_ORIG, M1.DATA_TYPE AS DATA_TYPE_PREV,EXTRACT(MONTH FROM M1.DATE_NEW) AS MONTH_PREV, M1.* FROM IND_FINAL_MONTH AS M0 RIGHT JOIN IND_FINAL_MONTH AS M1 ON M0.DESCRIPTION = M1.DESCRIPTION AND M0.DATE_NEW = DATEADD('MONTH',4,M1.DATE_NEW) AND M0.DATA_TYPE = M1.DATA_TYPE UNION SELECT M0.DATE_NEW AS DATE_NEW_ORIG, M0.YRMNTH AS YRMNTH_ORIG,EXTRACT(MONTH FROM M0.DATE_NEW) AS MONTH_ORIG, M0.DATA_TYPE AS DATA_TYPE_ORIG, M1.DATA_TYPE AS DATA_TYPE_PREV,EXTRACT(MONTH FROM M1.DATE_NEW) AS MONTH_PREV, M1.* FROM IND_FINAL_MONTH AS M0 RIGHT JOIN IND_FINAL_MONTH AS M1 ON M0.DESCRIPTION = M1.DESCRIPTION AND M0.DATE_NEW = DATEADD('MONTH',5,M1.DATE_NEW) AND M0.DATA_TYPE = M1.DATA_TYPE UNION SELECT M0.DATE_NEW AS DATE_NEW_ORIG, M0.YRMNTH AS YRMNTH_ORIG,EXTRACT(MONTH FROM M0.DATE_NEW) AS MONTH_ORIG, M0.DATA_TYPE AS DATA_TYPE_ORIG, M1.DATA_TYPE AS DATA_TYPE_PREV,EXTRACT(MONTH FROM M1.DATE_NEW) AS MONTH_PREV, M1.* FROM IND_FINAL_MONTH AS M0 RIGHT JOIN IND_FINAL_MONTH AS M1 ON M0.DESCRIPTION = M1.DESCRIPTION AND M0.DATE_NEW = DATEADD('MONTH',6,M1.DATE_NEW) AND M0.DATA_TYPE = M1.DATA_TYPE UNION SELECT M0.DATE_NEW AS DATE_NEW_ORIG, M0.YRMNTH AS YRMNTH_ORIG,EXTRACT(MONTH FROM M0.DATE_NEW) AS MONTH_ORIG, M0.DATA_TYPE AS DATA_TYPE_ORIG, M1.DATA_TYPE AS DATA_TYPE_PREV,EXTRACT(MONTH FROM M1.DATE_NEW) AS MONTH_PREV, M1.* FROM IND_FINAL_MONTH AS M0 RIGHT JOIN IND_FINAL_MONTH AS M1 ON M0.DESCRIPTION = M1.DESCRIPTION AND M0.DATE_NEW = DATEADD('MONTH',7,M1.DATE_NEW) AND M0.DATA_TYPE = M1.DATA_TYPE UNION SELECT M0.DATE_NEW AS DATE_NEW_ORIG, M0.YRMNTH AS YRMNTH_ORIG,EXTRACT(MONTH FROM M0.DATE_NEW) AS MONTH_ORIG, M0.DATA_TYPE AS DATA_TYPE_ORIG, M1.DATA_TYPE AS DATA_TYPE_PREV,EXTRACT(MONTH FROM M1.DATE_NEW) AS MONTH_PREV, M1.* FROM IND_FINAL_MONTH AS M0 RIGHT JOIN IND_FINAL_MONTH AS M1 ON M0.DESCRIPTION = M1.DESCRIPTION AND M0.DATE_NEW = DATEADD('MONTH',8,M1.DATE_NEW) AND M0.DATA_TYPE = M1.DATA_TYPE UNION SELECT M0.DATE_NEW AS DATE_NEW_ORIG, M0.YRMNTH AS YRMNTH_ORIG,EXTRACT(MONTH FROM M0.DATE_NEW) AS MONTH_ORIG, M0.DATA_TYPE AS DATA_TYPE_ORIG, M1.DATA_TYPE AS DATA_TYPE_PREV,EXTRACT(MONTH FROM M1.DATE_NEW) AS MONTH_PREV, M1.* FROM IND_FINAL_MONTH AS M0 RIGHT JOIN IND_FINAL_MONTH AS M1 ON M0.DESCRIPTION = M1.DESCRIPTION AND M0.DATE_NEW = DATEADD('MONTH',9,M1.DATE_NEW) AND M0.DATA_TYPE = M1.DATA_TYPE UNION SELECT M0.DATE_NEW AS DATE_NEW_ORIG, M0.YRMNTH AS YRMNTH_ORIG,EXTRACT(MONTH FROM M0.DATE_NEW) AS MONTH_ORIG, M0.DATA_TYPE AS DATA_TYPE_ORIG, M1.DATA_TYPE AS DATA_TYPE_PREV,EXTRACT(MONTH FROM M1.DATE_NEW) AS MONTH_PREV, M1.* FROM IND_FINAL_MONTH AS M0 RIGHT JOIN IND_FINAL_MONTH AS M1 ON M0.DESCRIPTION = M1.DESCRIPTION AND M0.DATE_NEW = DATEADD('MONTH',10,M1.DATE_NEW) AND M0.DATA_TYPE = M1.DATA_TYPE UNION SELECT M0.DATE_NEW AS DATE_NEW_ORIG, M0.YRMNTH AS YRMNTH_ORIG,EXTRACT(MONTH FROM M0.DATE_NEW) AS MONTH_ORIG, M0.DATA_TYPE AS DATA_TYPE_ORIG, M1.DATA_TYPE AS DATA_TYPE_PREV,EXTRACT(MONTH FROM M1.DATE_NEW) AS MONTH_PREV, M1.* FROM IND_FINAL_MONTH AS M0 RIGHT JOIN IND_FINAL_MONTH AS M1 ON M0.DESCRIPTION = M1.DESCRIPTION AND M0.DATE_NEW = DATEADD('MONTH',11,M1.DATE_NEW) AND M0.DATA_TYPE = M1.DATA_TYPE ;",CC52_industry_v5.sas
" CREATE TABLE IND_YTD_B AS select date_new_orig AS date_new, Description, Identifier, ASOF_YRMO, YRMNTH_ORIG AS YRMNTH , DATA_CATEGORY, DATA_TYPE_ORIG AS DATA_TYPE, 'YTD' AS TIME_TYPE, 'YTD' AS TIMEF , DATASOURCE ,SUM( MARAVAIL) AS MARAVAIL, SUM( MARSOLD) AS MARSOLD, SUM( MARREV) AS MARREV ,SUM( COMPLETE_DATA) AS DATA_CHECK , month_orig FROM IND_YTD_A WHERE month_prev <= month_orig GROUP BY date_new_orig, Description, Identifier, ASOF_YRMO, YRMNTH_ORIG, DATA_CATEGORY, DATA_TYPE_ORIG, DATASOURCE, month_orig ;",CC52_industry_v5.sas
" CREATE TABLE IND_YTD_C AS select m0.* , m1.MARAVAIL AS MARAVAILLY, m1.MARSOLD AS MARSOLDLY, m1.MARREV AS MARREVLY , m2.MARAVAIL AS MARAVAILLY_2PRIOR, m2.MARSOLD AS MARSOLDLY_2PRIOR, m2.MARREV AS MARREVLY_2PRIOR , CASE WHEN m0.DATA_CHECK = m0.month_orig THEN 1 ELSE 0 END AS COMPLETE_DATA FROM IND_YTD_B AS m0 LEFT JOIN IND_YTD_B AS m1 ON m0.Description = m1.Description AND m0.YRMNTH = m1.YRMNTH + 100 AND m0.DATA_TYPE = m1.DATA_TYPE LEFT JOIN IND_YTD_B AS m2 ON m0.Description = m2.Description AND m0.YRMNTH = m2.YRMNTH + 200 AND m0.DATA_TYPE = m2.DATA_TYPE ;",CC52_industry_v5.sas
"CREATE TABLE IND_YTD_D AS ( SELECT  *  , FORMAT(date_new, yymmddn8.) AS date_new  FROM IND_YTD_C );",CC52_industry_v5.sas
ALTER TABLE IND_YTD_D DROP COLUMN month_orig ;,CC52_industry_v5.sas
" CREATE TABLE STR_CC.IND_FINAL_&TIMEF. AS ( SELECT Description, ASOF_YRMO, YRMNTH, DATA_CATEGORY, TIMEF, COMPLETE_DATA, DATASOURCE , Identifier AS IND_GROUP , MARAVAIL AS AVAIL , MARSOLD AS SOLD , MARREV AS REV , MARAVAILLY AS AVAILLY , MARSOLDLY AS SOLDLY , MARREVLY AS REVLY , MARAVAILLY_2PRIOR AS AVAILLY_2PRIOR , MARSOLDLY_2PRIOR AS SOLDLY_2PRIOR , MARREVLY_2PRIOR AS REVLY_2PRIOR  FROM IND_FINAL_&TIMEF. );",CC52_industry_v5.sas
" CREATE TABLE AW_STG_BUS_DBO.STR_US_INDUSTRY_DATA_STG (  Description VARCHAR( 40), IND_GROUP VARCHAR( 30), ASOF_YRMO INTEGER, YrMnth INTEGER, DATA_CATEGORY VARCHAR( 15), TIMEF VARCHAR( 12), COMPLETE_DATA INTEGER, datasource VARCHAR( 4), AVAIL INTEGER, SOLD INTEGER, REV DOUBLE, AVAILLY INTEGER, SOLDLY INTEGER, REVLY DOUBLE, AVAILLY_2PRIOR INTEGER, SOLDLY_2PRIOR INTEGER, REVLY_2PRIOR DOUBLE ) ) by odbc ;",CC52_industry_v5.sas
INSERT INTO TABLE AWPROD.STR_US_INDUSTRY_DATA_STG SELECT * FROM STR_CC.IND_FINAL_&TIMEF.;,CC52_industry_v5.sas
   INSERT INTO AW_STG_BUS_DBO.STR_US_INDUSTRY_DATA Select * FROM AW_STG_BUS_DBO.STR_US_INDUSTRY_DATA_STG ) by odbc ;,CC52_industry_v5.sas
   DROP TABLE AW_STG_BUS_DBO.STR_US_INDUSTRY_DATA_STG ) by odbc ;,CC52_industry_v5.sas
" CREATE TABLE STAR60M_CD_REG_A AS ( SELECT  *  , FORMAT(CAST( STRCODE, 7.  ), INT)  AS STR_ID , """" AS DATA_TYPE , CASE WHEN  MSTYPE = 'SR'  THEN 'SELF' WHEN  MSTYPE = 'SB'  THEN 'STR' ELSE 'MKG' END AS DATASOURCE FROM Str_CC.STAR60m_CD_PW );",CC53_new60month_newAW_vALL11marsha.sas
" CREATE TABLE STAR60M_CD_REG AS select m0.* , c.comp AS SCOMP , CASE WHEN m0.MARCAP*m0.MAROCC*m0.MARREV_LCL*m0.MKTCAP*m0.MKTOCC*m0.MKTREV_LCL FROM STAR60M_CD_REG_A AS m0 LEFT JOIN STAR60M_CD_REG_A AS m1 ON m0.MARSHA = m1.MARSHA AND m0.YRMNTH = m1.YRMNTH + 100 LEFT JOIN Str_acc.Starview_Comp_CD AS c ON m0.MARSHA = c.MARSHA ;",CC53_new60month_newAW_vALL11marsha.sas
" CREATE TABLE STAR60M_CD_PLUS AS select m0.* , d.COMPLETE_DATA FROM Str_CC.STAR60m_CD_PLUS AS m0 LEFT JOIN Str_cc.STAR60m_PLUS_COMPLETE_DATA AS d ON m0.STR_ID = d.STR_ID AND m0.YRMNTH = d.YRMNTH ;",CC53_new60month_newAW_vALL11marsha.sas
" CREATE TABLE STAR60M_CD_WDWE AS select m0.* , d.COMPLETE_DATA FROM Str_CC.STAR60m_CD_WDWE AS m0 LEFT JOIN Str_cc.STAR60m_WDWE_COMPLETE_DATA AS d ON m0.STR_ID = d.STR_ID AND m0.YRMNTH = d.YRMNTH ;",CC53_new60month_newAW_vALL11marsha.sas
" CREATE TABLE STAR60m_CD_date_&SEG. AS ( SELECT  *  , TRIMCONCAT( YRMNTH,""01"" ) AS date , CAST( YRMNTH, 8.  ) AS newyrmo  FROM STAR60m_CD_&SEG. );",CC53_new60month_newAW_vALL11marsha.sas
" CREATE TABLE STAR60m_CD_date2_&SEG. AS ( SELECT  *  , FORMAT(CAST( RTRIM( date), yymmdd8.  ), yymmddn8.) AS date_new  FROM STAR60m_CD_date_&SEG. );",CC53_new60month_newAW_vALL11marsha.sas
CREATE TABLE STAR60m_CD_date2_&SEG. AS (SELECT * FROM STAR60m_CD_date2_&SEG. ORDER BY MARSHA);,CC53_new60month_newAW_vALL11marsha.sas
" CREATE TABLE a_test_&SEG. AS select m0.MARSHA, m0.STR_ID, m0.YRMNTH, m0.DATA_TYPE, COUNT( m0.MARSHA) AS COUNT FROM STAR60m_CD_date2_&SEG. AS m0 GROUP BY m0.MARSHA, m0.STR_ID, m0.YRMNTH, m0.DATA_TYPE ;",CC53_new60month_newAW_vALL11marsha.sas
 CREATE TABLE a_test_&SEG._a AS select * FROM a_test_&SEG AS m0 WHERE m0.COUNT <>1 ;,CC53_new60month_newAW_vALL11marsha.sas
" CREATE TABLE STAR60m_FINAL_&SEG._month_LC AS select m0.date_new, m0.MARSHA, m0.STR_ID, m0.BRND AS BRAND, 'Local' AS CURRENCY_TYPE, m0.CUR AS CUR , m0.YRMNTH , CASE WHEN m0.DATA_TYPE IN ( 'WD','WE') THEN 'WDWE_Rooms' when m0.DATA_TYPE IN ( 'TN','CN','GP') THEN 'Seg_Rooms' ELSE 'Rooms' END AS DATA_CATEGORY , m0.DATA_TYPE, 'MONTH' AS TIME_TYPE, CONCAT_WS( '_','MONTH',m0.DATA_TYPE) AS TIMEF, m0.SCOMP , m0.COMPLETE_DATA , m0.DATASOURCE , m0.MARCAP AS MARAVAIL, m0.MAROCC AS MARSOLD, m0.MARREV_LCL AS MARREV , m0.MKTCAPPW AS MKTAVAIL, m0.MKTOCCPW AS MKTSOLD, m0.MKTREV_LCLPW AS MKTREV , m0.MKTCAP AS MKTAVAIL_UNW, m0.MKTOCC AS MKTSOLD_UNW, m0.MKTREV_LCL AS MKTREV_UNW , m1.MARCAP AS MARAVAILLY, m1.MAROCC AS MARSOLDLY, m1.MARREV_LCL AS MARREVLY , m1.MKTCAPPW AS MKTAVAILLY, m1.MKTOCCPW AS MKTSOLDLY, m1.MKTREV_LCLPW AS MKTREVLY , m1.MKTCAP AS MKTAVAIL_UNWLY, m1.MKTOCC AS MKTSOLD_UNWLY, m1.MKTREV_LCL AS MKTREV_UNWLY , m2.MARCAP AS MARAVAILLY_2PRIOR, m2.MAROCC AS MARSOLDLY_2PRIOR, m2.MARREVCD AS MARREVLY_2PRIOR , m2.MKTCAPPW AS MKTAVAILLY_2PRIOR, m2.MKTOCCPW AS MKTSOLDLY_2PRIOR, m2.MKTREVCDPW AS MKTREVLY_2PRIOR , m2.MKTCAP AS MKTAVAIL_UNWLY_2PRIOR, m2.MKTOCC AS MKTSOLD_UNWLY_2PRIOR, m2.MKTREVCD AS MKTREV_UNWLY_2PRIOR FROM STAR60m_CD_date2_&SEG. AS m0 LEFT JOIN STAR60m_CD_date2_&SEG. AS m1 ON m0.MARSHA = m1.MARSHA AND m0.YRMNTH = m1.YRMNTH + 100 AND m0.DATA_TYPE = m1.DATA_TYPE LEFT JOIN STAR60m_CD_date2_&SEG. AS m2 ON m0.MARSHA = m2.MARSHA AND m0.YRMNTH = m2.YRMNTH + 200 AND m0.DATA_TYPE = m2.DATA_TYPE WHERE m0.YRMNTH <= &STARMNTH ORDER BY m0.STR_ID, m0.DATA_TYPE, m0.YRMNTH ;",CC53_new60month_newAW_vALL11marsha.sas
" CREATE TABLE STAR60m_FINAL_&SEG._month_CC AS select m0.date_new, m0.MARSHA, m0.STR_ID, m0.BRND AS BRAND, 'Constant USD' AS CURRENCY_TYPE, 'USD' AS CUR , m0.YRMNTH , CASE WHEN m0.DATA_TYPE IN ( 'WD','WE') THEN 'WDWE_Rooms' when m0.DATA_TYPE IN ( 'TN','CN','GP') THEN 'Seg_Rooms' ELSE 'Rooms' END AS DATA_CATEGORY , m0.DATA_TYPE, 'MONTH' AS TIME_TYPE, CONCAT_WS( '_','MONTH',m0.DATA_TYPE) AS TIMEF, m0.SCOMP , m0.COMPLETE_DATA , m0.DATASOURCE , m0.MARCAP AS MARAVAIL, m0.MAROCC AS MARSOLD, m0.MARREVCD AS MARREV , m0.MKTCAPPW AS MKTAVAIL, m0.MKTOCCPW AS MKTSOLD, m0.MKTREVCDPW AS MKTREV , m0.MKTCAP AS MKTAVAIL_UNW, m0.MKTOCC AS MKTSOLD_UNW, m0.MKTREVCD AS MKTREV_UNW , m1.MARCAP AS MARAVAILLY, m1.MAROCC AS MARSOLDLY, m1.MARREVCD AS MARREVLY , m1.MKTCAPPW AS MKTAVAILLY, m1.MKTOCCPW AS MKTSOLDLY, m1.MKTREVCDPW AS MKTREVLY , m1.MKTCAP AS MKTAVAIL_UNWLY, m1.MKTOCC AS MKTSOLD_UNWLY, m1.MKTREVCD AS MKTREV_UNWLY , m2.MARCAP AS MARAVAILLY_2PRIOR, m2.MAROCC AS MARSOLDLY_2PRIOR, m2.MARREVCD AS MARREVLY_2PRIOR , m2.MKTCAPPW AS MKTAVAILLY_2PRIOR, m2.MKTOCCPW AS MKTSOLDLY_2PRIOR, m2.MKTREVCDPW AS MKTREVLY_2PRIOR , m2.MKTCAP AS MKTAVAIL_UNWLY_2PRIOR, m2.MKTOCC AS MKTSOLD_UNWLY_2PRIOR, m2.MKTREVCD AS MKTREV_UNWLY_2PRIOR FROM STAR60m_CD_date2_&SEG. AS m0 LEFT JOIN STAR60m_CD_date2_&SEG. AS m1 ON m0.MARSHA = m1.MARSHA AND m0.YRMNTH = m1.YRMNTH + 100 AND m0.DATA_TYPE = m1.DATA_TYPE LEFT JOIN STAR60m_CD_date2_&SEG. AS m2 ON m0.MARSHA = m2.MARSHA AND m0.YRMNTH = m2.YRMNTH + 200 AND m0.DATA_TYPE = m2.DATA_TYPE WHERE m0.YRMNTH <= &STARMNTH ORDER BY m0.STR_ID, m0.DATA_TYPE , m0.YRMNTH ;",CC53_new60month_newAW_vALL11marsha.sas
new60month_newAW_vALL11marsha.sas
 CREATE TABLE STAR60m_L12_&SEG._&CUR._B AS select * FROM STAR60m_L12_&SEG._&CUR._A ;,CC53_new60month_newAW_vALL11marsha.sas
" CREATE TABLE STAR60m_FINAL_&SEG._L12_&CUR. AS select m0.* , m1.MARAVAIL AS MARAVAILLY, m1.MARSOLD AS MARSOLDLY, m1.MARREV AS MARREVLY , m1.MKTAVAIL AS MKTAVAILLY, m1.MKTSOLD AS MKTSOLDLY, m1.MKTREV AS MKTREVLY , m1.MKTAVAIL_UNW AS MKTAVAIL_UNWLY, m1.MKTSOLD_UNW AS MKTSOLD_UNWLY, m1.MKTREV_UNW AS MKTREV_UNWLY , m2.MARAVAIL AS MARAVAILLY_2PRIOR, m2.MARSOLD AS MARSOLDLY_2PRIOR, m2.MARREV AS MARREVLY_2PRIOR , m2.MKTAVAIL AS MKTAVAILLY_2PRIOR, m2.MKTSOLD AS MKTSOLDLY_2PRIOR, m2.MKTREV AS MKTREVLY_2PRIOR , m2.MKTAVAIL_UNW AS MKTAVAIL_UNWLY_2PRIOR, m2.MKTSOLD_UNW AS MKTSOLD_UNWLY_2PRIOR, m2.MKTREV_UNW AS MKTREV_UNWLY_2PRIOR , CASE WHEN m0.DATA_CHECK = 12 THEN 1 ELSE 0 END AS COMPLETE_DATA FROM STAR60m_L12_&SEG._&CUR._B AS m0 LEFT JOIN STAR60m_L12_&SEG._&CUR._B AS m1 ON m0.MARSHA = m1.MARSHA AND m0.YRMNTH = m1.YRMNTH + 100 AND m0.DATA_TYPE = m1.DATA_TYPE LEFT JOIN STAR60m_L12_&SEG._&CUR._B AS m2 ON m0.MARSHA = m2.MARSHA AND m0.YRMNTH = m2.YRMNTH + 200 AND m0.DATA_TYPE = m2.DATA_TYPE ORDER BY m0.STR_ID, m0.DATA_TYPE , m0.YRMNTH ;",CC53_new60month_newAW_vALL11marsha.sas
" CREATE TABLE STAR60M_L3_&SEG._&CUR._A AS SELECT M0.DATE_NEW, M0.MARSHA, M0.STR_ID, M0.BRAND, M0.CURRENCY_TYPE, M0.CUR , M0.YRMNTH, M0.DATA_CATEGORY, M0.DATA_TYPE, 'LAST3' AS TIME_TYPE, CONCAT_WS( '_','LAST3',M0.DATA_TYPE) AS TIMEF, M0.SCOMP , M0.DATASOURCE , M0.MARAVAIL+M1.MARAVAIL+M2.MARAVAIL AS MARAVAIL , M0.MARSOLD+M1.MARSOLD+M2.MARSOLD AS MARSOLD , M0.MARREV+M1.MARREV+M2.MARREV AS MARREV , ( M0.MARAVAIL+M1.MARAVAIL+M2.MARAVAIL) / ( M0.MKTAVAIL_UNW+M1.MKTAVAIL_UNW+M2.MKTAVAIL_UNW) * ( M0.MKTAVAIL_UNW+M1.MKTAVAIL_UNW+M2.MKTAVAIL_UNW) AS MKTAVAIL , ( M0.MARAVAIL+M1.MARAVAIL+M2.MARAVAIL) / ( M0.MKTAVAIL_UNW+M1.MKTAVAIL_UNW+M2.MKTAVAIL_UNW) * ( M0.MKTSOLD_UNW+M1.MKTSOLD_UNW+M2.MKTSOLD_UNW) AS MKTSOLD , ( M0.MARAVAIL+M1.MARAVAIL+M2.MARAVAIL) / ( M0.MKTAVAIL_UNW+M1.MKTAVAIL_UNW+M2.MKTAVAIL_UNW) * ( M0.MKTREV_UNW+M1.MKTREV_UNW+M2.MKTREV_UNW) AS MKTREV , M0.MKTAVAIL_UNW+M1.MKTAVAIL_UNW+M2.MKTAVAIL_UNW AS MKTAVAIL_UNW , M0.MKTSOLD_UNW+M1.MKTSOLD_UNW+M2.MKTSOLD_UNW AS MKTSOLD_UNW , M0.MKTREV_UNW+M1.MKTREV_UNW+M2.MKTREV_UNW AS MKTREV_UNW , M0.COMPLETE_DATA+M1.COMPLETE_DATA+M2.COMPLETE_DATA AS DATA_CHECK FROM STAR60M_FINAL_&SEG._MONTH_&CUR. AS M0 LEFT JOIN STAR60M_FINAL_&SEG._MONTH_&CUR. AS M1 ON M0.MARSHA = M1.MARSHA AND M0.DATE_NEW = DATEADD('MONTH',1,M1.DATE_NEW) AND M0.DATA_TYPE = M1.DATA_TYPE LEFT JOIN STAR60M_FINAL_&SEG._MONTH_&CUR. AS M2 ON M0.MARSHA = M2.MARSHA AND M0.DATE_NEW = DATEADD('MONTH',2,M2.DATE_NEW) AND M0.DATA_TYPE = M2.DATA_TYPE ORDER BY M0.DATE_NEW, M0.MARSHA, M0.STR_ID, M0.BRAND, M0.CURRENCY_TYPE, M0.CUR , M0.YRMNTH, M0.DATA_TYPE, M0.SCOMP , M0.DATASOURCE ;",CC53_new60month_newAW_vALL11marsha.sas
 CREATE TABLE STAR60m_L3_&SEG._&CUR._B AS select * FROM STAR60m_L3_&SEG._&CUR._A ;,CC53_new60month_newAW_vALL11marsha.sas
" CREATE TABLE STAR60m_FINAL_&SEG._L3_&CUR. AS select m0.* , m1.MARAVAIL AS MARAVAILLY, m1.MARSOLD AS MARSOLDLY, m1.MARREV AS MARREVLY , m1.MKTAVAIL AS MKTAVAILLY, m1.MKTSOLD AS MKTSOLDLY, m1.MKTREV AS MKTREVLY , m1.MKTAVAIL_UNW AS MKTAVAIL_UNWLY, m1.MKTSOLD_UNW AS MKTSOLD_UNWLY, m1.MKTREV_UNW AS MKTREV_UNWLY , m2.MARAVAIL AS MARAVAILLY_2PRIOR, m2.MARSOLD AS MARSOLDLY_2PRIOR, m2.MARREV AS MARREVLY_2PRIOR , m2.MKTAVAIL AS MKTAVAILLY_2PRIOR, m2.MKTSOLD AS MKTSOLDLY_2PRIOR, m2.MKTREV AS MKTREVLY_2PRIOR , m2.MKTAVAIL_UNW AS MKTAVAIL_UNWLY_2PRIOR, m2.MKTSOLD_UNW AS MKTSOLD_UNWLY_2PRIOR, m2.MKTREV_UNW AS MKTREV_UNWLY_2PRIOR , CASE WHEN m0.DATA_CHECK = 3 THEN 1 ELSE 0 END AS COMPLETE_DATA FROM STAR60m_L3_&SEG._&CUR._B AS m0 LEFT JOIN STAR60m_L3_&SEG._&CUR._B AS m1 ON m0.MARSHA = m1.MARSHA AND m0.YRMNTH = m1.YRMNTH + 100 AND m0.DATA_TYPE = m1.DATA_TYPE LEFT JOIN STAR60m_L3_&SEG._&CUR._B AS m2 ON m0.MARSHA = m2.MARSHA AND m0.YRMNTH = m2.YRMNTH + 200 AND m0.DATA_TYPE = m2.DATA_TYPE ORDER BY m0.STR_ID, m0.DATA_TYPE , m0.YRMNTH ;",CC53_new60month_newAW_vALL11marsha.sas
" CREATE TABLE STAR60M_YTD_&SEG._&CUR._A AS SELECT M0.DATE_NEW AS DATE_NEW_ORIG, M0.YRMNTH AS YRMNTH_ORIG,EXTRACT(MONTH FROM M0.DATE_NEW) AS MONTH_ORIG, M0.DATA_TYPE AS DATA_TYPE_ORIG, M0.DATA_TYPE AS DATA_TYPE_PREV,EXTRACT(MONTH FROM M0.DATE_NEW) AS MONTH_PREV, M0.* FROM STAR60M_FINAL_&SEG._MONTH_&CUR. AS M0 UNION SELECT M0.DATE_NEW AS DATE_NEW_ORIG, M0.YRMNTH AS YRMNTH_ORIG,EXTRACT(MONTH FROM M0.DATE_NEW) AS MONTH_ORIG, M0.DATA_TYPE AS DATA_TYPE_ORIG, M1.DATA_TYPE AS DATA_TYPE_PREV,EXTRACT(MONTH FROM M1.DATE_NEW) AS MONTH_PREV, M1.* FROM STAR60M_FINAL_&SEG._MONTH_&CUR. AS M0 RIGHT JOIN STAR60M_FINAL_&SEG._MONTH_&CUR. AS M1 ON M0.MARSHA = M1.MARSHA AND M0.DATE_NEW = DATEADD('MONTH',1,M1.DATE_NEW) AND M0.DATA_TYPE = M1.DATA_TYPE UNION SELECT M0.DATE_NEW AS DATE_NEW_ORIG, M0.YRMNTH AS YRMNTH_ORIG,EXTRACT(MONTH FROM M0.DATE_NEW) AS MONTH_ORIG, M0.DATA_TYPE AS DATA_TYPE_ORIG, M1.DATA_TYPE AS DATA_TYPE_PREV,EXTRACT(MONTH FROM M1.DATE_NEW) AS MONTH_PREV, M1.* FROM STAR60M_FINAL_&SEG._MONTH_&CUR. AS M0 RIGHT JOIN STAR60M_FINAL_&SEG._MONTH_&CUR. AS M1 ON M0.MARSHA = M1.MARSHA AND M0.DATE_NEW = DATEADD('MONTH',2,M1.DATE_NEW) AND M0.DATA_TYPE = M1.DATA_TYPE UNION SELECT M0.DATE_NEW AS DATE_NEW_ORIG, M0.YRMNTH AS YRMNTH_ORIG,EXTRACT(MONTH FROM M0.DATE_NEW) AS MONTH_ORIG, M0.DATA_TYPE AS DATA_TYPE_ORIG, M1.DATA_TYPE AS DATA_TYPE_PREV,EXTRACT(MONTH FROM M1.DATE_NEW) AS MONTH_PREV, M1.* FROM STAR60M_FINAL_&SEG._MONTH_&CUR. AS M0 RIGHT JOIN STAR60M_FINAL_&SEG._MONTH_&CUR. AS M1 ON M0.MARSHA = M1.MARSHA AND M0.DATE_NEW = DATEADD('MONTH',3,M1.DATE_NEW) AND M0.DATA_TYPE = M1.DATA_TYPE UNION SELECT M0.DATE_NEW AS DATE_NEW_ORIG, M0.YRMNTH AS YRMNTH_ORIG,EXTRACT(MONTH FROM M0.DATE_NEW) AS MONTH_ORIG, M0.DATA_TYPE AS DATA_TYPE_ORIG, M1.DATA_TYPE AS DATA_TYPE_PREV,EXTRACT(MONTH FROM M1.DATE_NEW) AS MONTH_PREV, M1.* FROM STAR60M_FINAL_&SEG._MONTH_&CUR. AS M0 RIGHT JOIN STAR60M_FINAL_&SEG._MONTH_&CUR. AS M1 ON M0.MARSHA = M1.MARSHA AND M0.DATE_NEW = DATEADD('MONTH',4,M1.DATE_NEW) AND M0.DATA_TYPE = M1.DATA_TYPE UNION SELECT M0.DATE_NEW AS DATE_NEW_ORIG, M0.YRMNTH AS YRMNTH_ORIG,EXTRACT(MONTH FROM M0.DATE_NEW) AS MONTH_ORIG, M0.DATA_TYPE AS DATA_TYPE_ORIG, M1.DATA_TYPE AS DATA_TYPE_PREV,EXTRACT(MONTH FROM M1.DATE_NEW) AS MONTH_PREV, M1.* FROM STAR60M_FINAL_&SEG._MONTH_&CUR. AS M0 RIGHT JOIN STAR60M_FINAL_&SEG._MONTH_&CUR. AS M1 ON M0.MARSHA = M1.MARSHA AND M0.DATE_NEW = DATEADD('MONTH',5,M1.DATE_NEW) AND M0.DATA_TYPE = M1.DATA_TYPE UNION SELECT M0.DATE_NEW AS DATE_NEW_ORIG, M0.YRMNTH AS YRMNTH_ORIG,EXTRACT(MONTH FROM M0.DATE_NEW) AS MONTH_ORIG, M0.DATA_TYPE AS DATA_TYPE_ORIG, M1.DATA_TYPE AS DATA_TYPE_PREV,EXTRACT(MONTH FROM M1.DATE_NEW) AS MONTH_PREV, M1.* FROM STAR60M_FINAL_&SEG._MONTH_&CUR. AS M0 RIGHT JOIN STAR60M_FINAL_&SEG._MONTH_&CUR. AS M1 ON M0.MARSHA = M1.MARSHA AND M0.DATE_NEW = DATEADD('MONTH',6,M1.DATE_NEW) AND M0.DATA_TYPE = M1.DATA_TYPE UNION SELECT M0.DATE_NEW AS DATE_NEW_ORIG, M0.YRMNTH AS YRMNTH_ORIG,EXTRACT(MONTH FROM M0.DATE_NEW) AS MONTH_ORIG, M0.DATA_TYPE AS DATA_TYPE_ORIG, M1.DATA_TYPE AS DATA_TYPE_PREV,EXTRACT(MONTH FROM M1.DATE_NEW) AS MONTH_PREV, M1.* FROM STAR60M_FINAL_&SEG._MONTH_&CUR. AS M0 RIGHT JOIN STAR60M_FINAL_&SEG._MONTH_&CUR. AS M1 ON M0.MARSHA = M1.MARSHA AND M0.DATE_NEW = DATEADD('MONTH',7,M1.DATE_NEW) AND M0.DATA_TYPE = M1.DATA_TYPE UNION SELECT M0.DATE_NEW AS DATE_NEW_ORIG, M0.YRMNTH AS YRMNTH_ORIG,EXTRACT(MONTH FROM M0.DATE_NEW) AS MONTH_ORIG, M0.DATA_TYPE AS DATA_TYPE_ORIG, M1.DATA_TYPE AS DATA_TYPE_PREV,EXTRACT(MONTH FROM M1.DATE_NEW) AS MONTH_PREV, M1.* FROM STAR60M_FINAL_&SEG._MONTH_&CUR. AS M0 RIGHT JOIN STAR60M_FINAL_&SEG._MONTH_&CUR. AS M1 ON M0.MARSHA = M1.MARSHA AND M0.DATE_NEW = DATEADD('MONTH',8,M1.DATE_NEW) AND M0.DATA_TYPE = M1.DATA_TYPE UNION SELECT M0.DATE_NEW AS DATE_NEW_ORIG, M0.YRMNTH AS YRMNTH_ORIG,EXTRACT(MONTH FROM M0.DATE_NEW) AS MONTH_ORIG, M0.DATA_TYPE AS DATA_TYPE_ORIG, M1.DATA_TYPE AS DATA_TYPE_PREV,EXTRACT(MONTH FROM M1.DATE_NEW) AS MONTH_PREV, M1.* FROM STAR60M_FINAL_&SEG._MONTH_&CUR. AS M0 RIGHT JOIN STAR60M_FINAL_&SEG._MONTH_&CUR. AS M1 ON M0.MARSHA = M1.MARSHA AND M0.DATE_NEW = DATEADD('MONTH',9,M1.DATE_NEW) AND M0.DATA_TYPE = M1.DATA_TYPE UNION SELECT M0.DATE_NEW AS DATE_NEW_ORIG, M0.YRMNTH AS YRMNTH_ORIG,EXTRACT(MONTH FROM M0.DATE_NEW) AS MONTH_ORIG, M0.DATA_TYPE AS DATA_TYPE_ORIG, M1.DATA_TYPE AS DATA_TYPE_PREV,EXTRACT(MONTH FROM M1.DATE_NEW) AS MONTH_PREV, M1.* FROM STAR60M_FINAL_&SEG._MONTH_&CUR. AS M0 RIGHT JOIN STAR60M_FINAL_&SEG._MONTH_&CUR. AS M1 ON M0.MARSHA = M1.MARSHA AND M0.DATE_NEW = DATEADD('MONTH',10,M1.DATE_NEW) AND M0.DATA_TYPE = M1.DATA_TYPE UNION SELECT M0.DATE_NEW AS DATE_NEW_ORIG, M0.YRMNTH AS YRMNTH_ORIG,EXTRACT(MONTH FROM M0.DATE_NEW) AS MONTH_ORIG, M0.DATA_TYPE AS DATA_TYPE_ORIG, M1.DATA_TYPE AS DATA_TYPE_PREV,EXTRACT(MONTH FROM M1.DATE_NEW) AS MONTH_PREV, M1.* FROM STAR60M_FINAL_&SEG._MONTH_&CUR. AS M0 RIGHT JOIN STAR60M_FINAL_&SEG._MONTH_&CUR. AS M1 ON M0.MARSHA = M1.MARSHA AND M0.DATE_NEW = DATEADD('MONTH',11,M1.DATE_NEW) AND M0.DATA_TYPE = M1.DATA_TYPE ;",CC53_new60month_newAW_vALL11marsha.sas
" CREATE TABLE STAR60m_YTD_&SEG._&CUR._B AS select date_new_orig AS date_new, MARSHA, STR_ID, BRAND, CURRENCY_TYPE, CUR, YRMNTH_ORIG AS YRMNTH, 'YTD' AS TIME_TYPE, DATA_CATEGORY, DATA_TYPE_ORIG AS DATA_TYPE, SCOMP , DATASOURCE ,SUM( MARAVAIL) AS MARAVAIL, SUM( MARSOLD) AS MARSOLD, SUM( MARREV) AS MARREV ,SUM( MKTAVAIL_UNW) AS MKTAVAIL_UNW, SUM( MKTSOLD_UNW) AS MKTSOLD_UNW, SUM( MKTREV_UNW) AS MKTREV_UNW ,SUM( COMPLETE_DATA) AS DATA_CHECK , month_orig FROM STAR60m_YTD_&SEG._&CUR._A WHERE month_prev <= month_orig GROUP BY date_new_orig, MARSHA, STR_ID, BRAND, CURRENCY_TYPE, CUR, YRMNTH_ORIG, DATA_CATEGORY, DATA_TYPE_ORIG, SCOMP, DATASOURCE, month_orig ;",CC53_new60month_newAW_vALL11marsha.sas
" CREATE TABLE STAR60m_YTD_&SEG._&CUR._C AS select date_new, MARSHA, STR_ID, BRAND, CURRENCY_TYPE, CUR, YRMNTH, DATA_CATEGORY, DATA_TYPE, TIME_TYPE, CONCAT_WS( '_',TIME_TYPE,DATA_TYPE) AS TIMEF, SCOMP , DATASOURCE , MARAVAIL, MARSOLD, MARREV , MKTAVAIL_UNW, MKTSOLD_UNW, MKTREV_UNW , MARAVAIL / MKTAVAIL_UNW * MKTAVAIL_UNW AS MKTAVAIL , MARAVAIL / MKTAVAIL_UNW * MKTSOLD_UNW AS MKTSOLD , MARAVAIL / MKTAVAIL_UNW * MKTREV_UNW AS MKTREV , DATA_CHECK , month_orig FROM STAR60m_YTD_&SEG._&CUR._B ORDER BY date_new, MARSHA, STR_ID, BRAND, CURRENCY_TYPE, CUR, YRMNTH, DATA_TYPE, TIME_TYPE, SCOMP , DATASOURCE , MARAVAIL, MARSOLD, MARREV , MKTAVAIL_UNW, MKTSOLD_UNW, MKTREV_UNW , MARAVAIL , DATA_CHECK , month_orig ;",CC53_new60month_newAW_vALL11marsha.sas
" CREATE TABLE STAR60m_FINAL_&SEG._YTD_&CUR. AS select m0.* , m1.MARAVAIL AS MARAVAILLY, m1.MARSOLD AS MARSOLDLY, m1.MARREV AS MARREVLY , m1.MKTAVAIL_UNW AS MKTAVAIL_UNWLY, m1.MKTSOLD_UNW AS MKTSOLD_UNWLY, m1.MKTREV_UNW AS MKTREV_UNWLY , m1.MKTAVAIL AS MKTAVAILLY, m1.MKTSOLD AS MKTSOLDLY, m1.MKTREV AS MKTREVLY , m2.MARAVAIL AS MARAVAILLY_2PRIOR, m2.MARSOLD AS MARSOLDLY_2PRIOR, m2.MARREV AS MARREVLY_2PRIOR , m2.MKTAVAIL_UNW AS MKTAVAIL_UNWLY_2PRIOR, m2.MKTSOLD_UNW AS MKTSOLD_UNWLY_2PRIOR, m2.MKTREV_UNW AS MKTREV_UNWLY_2PRIOR , m2.MKTAVAIL AS MKTAVAILLY_2PRIOR, m2.MKTSOLD AS MKTSOLDLY_2PRIOR, m2.MKTREV AS MKTREVLY_2PRIOR , CASE WHEN m0.DATA_CHECK = m0.month_orig THEN 1 ELSE 0 END AS COMPLETE_DATA FROM STAR60m_YTD_&SEG._&CUR._C AS m0 LEFT JOIN STAR60m_YTD_&SEG._&CUR._C AS m1 ON m0.MARSHA = m1.MARSHA AND m0.YRMNTH = m1.YRMNTH + 100 AND m0.DATA_TYPE = m1.DATA_TYPE LEFT JOIN STAR60m_YTD_&SEG._&CUR._C AS m2 ON m0.MARSHA = m2.MARSHA AND m0.YRMNTH = m2.YRMNTH + 200 AND m0.DATA_TYPE = m2.DATA_TYPE ;",CC53_new60month_newAW_vALL11marsha.sas
"CREATE TABLE STAR60m_FINAL_&SEG._YTD_&CUR. AS ( SELECT  *  , FORMAT(date_new, yymmddn8.) AS date_new  FROM STAR60m_FINAL_&SEG._YTD_&CUR. );",CC53_new60month_newAW_vALL11marsha.sas
ALTER TABLE STAR60m_FINAL_&SEG._YTD_&CUR. DROP COLUMN month_orig ;,CC53_new60month_newAW_vALL11marsha.sas
" CREATE TABLE STAR60m_FINAL_&SEG._&TIMEF._&CUR._1 AS ( SELECT MARSHA, STR_ID, BRAND, CURRENCY_TYPE, CUR, YRMNTH, DATA_CATEGORY, DATA_TYPE, TIME_TYPE, TIMEF, SCOMP, COMPLETE_DATA, DATASOURCE, MARAVAIL, MARSOLD, MARREV, MKTAVAIL, MKTSOLD, MKTREV, MKTAVAIL_UNW, MKTSOLD_UNW, MKTREV_UNW, MARAVAILLY, MARSOLDLY, MARREVLY, MKTAVAILLY, MKTSOLDLY, MKTREVLY, MKTAVAIL_UNWLY, MKTSOLD_UNWLY, MKTREV_UNWLY, MARAVAILLY_2PRIOR, MARSOLDLY_2PRIOR, MARREVLY_2PRIOR, MKTAVAILLY_2PRIOR, MKTSOLDLY_2PRIOR, MKTREVLY_2PRIOR, MKTAVAIL_UNWLY_2PRIOR, MKTSOLD_UNWLY_2PRIOR, MKTREV_UNWLY_2PRIOR , &STARMNTH AS ASOF_YRMO  FROM STAR60m_FINAL_&SEG._&TIMEF._&CUR. );",CC53_new60month_newAW_vALL11marsha.sas
CREATE TABLE STR_CC.STAR60m_FINAL_&SEG._&TIMEF._&CUR. AS (SELECT * FROM STAR60m_FINAL_&SEG._&TIMEF._&CUR._1 ORDER BY MARSHA);,CC53_new60month_newAW_vALL11marsha.sas
" CREATE TABLE STR_CC.STAR60m_REG_ONLY_FINAL AS ( SELECT  *  , STR_ID AS STAR_ID , &STARMNTH AS ASOF_YRMO  FROM STAR60m_FINAL_REG_L12_CC UNION ALL SELECT  *  , STR_ID AS STAR_ID , &STARMNTH AS ASOF_YRMO  FROM STAR60m_FINAL_REG_L12_LC UNION ALL SELECT  *  , STR_ID AS STAR_ID , &STARMNTH AS ASOF_YRMO  FROM STAR60m_FINAL_REG_L3_CC UNION ALL SELECT  *  , STR_ID AS STAR_ID , &STARMNTH AS ASOF_YRMO  FROM STAR60m_FINAL_REG_L3_LC UNION ALL SELECT  *  , STR_ID AS STAR_ID , &STARMNTH AS ASOF_YRMO  FROM STAR60m_FINAL_REG_MONTH_CC UNION ALL SELECT  *  , STR_ID AS STAR_ID , &STARMNTH AS ASOF_YRMO  FROM STAR60m_FINAL_REG_MONTH_LC UNION ALL SELECT  *  , STR_ID AS STAR_ID , &STARMNTH AS ASOF_YRMO  FROM STAR60m_FINAL_REG_YTD_CC UNION ALL SELECT MARSHA, BRAND, CURRENCY_TYPE, CUR, YRMNTH, TIMEF, SCOMP, DATASOURCE, MARAVAIL, MARSOLD, MARREV, MKTAVAIL, MKTSOLD, MKTREV, MKTAVAIL_UNW, MKTSOLD_UNW, MKTREV_UNW, MARAVAILLY, MARSOLDLY, MARREVLY, MKTAVAILLY, MKTSOLDLY, MKTREVLY, MKTAVAIL_UNWLY, MKTSOLD_UNWLY, MKTREV_UNWLY , STR_ID AS STAR_ID , &STARMNTH AS ASOF_YRMO  FROM STAR60m_FINAL_REG_YTD_LC);",CC53_new60month_newAW_vALL11marsha.sas
" CREATE TABLE AW_STG_BUS_DBO.STR_60MONTH_PRE_CGC_STG (  MARSHA VARCHAR( 5), STAR_ID INTEGER, brand VARCHAR( 2), CURRENCY_TYPE VARCHAR( 12), cur VARCHAR( 3), YrMnth INTEGER, TIMEF VARCHAR( 11), SCOMP VARCHAR( 1), datasource VARCHAR( 4), MARAVAIL INTEGER, MARSOLD INTEGER, MARREV DOUBLE, MKTAVAIL INTEGER, MKTSOLD DOUBLE, MKTREV DOUBLE, MKTAVAIL_UNW INTEGER, MKTSOLD_UNW DOUBLE, MKTREV_UNW DOUBLE, MARAVAILLY INTEGER, MARSOLDLY INTEGER, MARREVLY DOUBLE, MKTAVAILLY INTEGER, MKTSOLDLY DOUBLE, MKTREVLY DOUBLE, MKTAVAIL_UNWLY INTEGER, MKTSOLD_UNWLY DOUBLE, MKTREV_UNWLY DOUBLE, ASOF_YRMO INTEGER ) ) by odbc ;",CC53_new60month_newAW_vALL11marsha.sas
INSERT INTO TABLE AWPROD.STR_60MONTH_PRE_CGC_STG SELECT * FROM STR_CC.STAR60m_REG_ONLY_FINAL;,CC53_new60month_newAW_vALL11marsha.sas
   INSERT INTO AW_STG_BUS_DBO.STR_60MONTH_PRE_CGC Select * FROM AW_STG_BUS_DBO.STR_60MONTH_PRE_CGC_STG ) by odbc ;,CC53_new60month_newAW_vALL11marsha.sas
   DROP TABLE AW_STG_BUS_DBO.STR_60MONTH_PRE_CGC_STG ) by odbc ;,CC53_new60month_newAW_vALL11marsha.sas
" CREATE TABLE AW_CMP_DBO.STR_MONTHLY_DATA_HIST_STG (  MARSHA VARCHAR( 5), STR_ID INTEGER, BRAND VARCHAR( 2), CURRENCY_TYPE VARCHAR( 12), CUR VARCHAR( 3), ASOF_YRMO INTEGER, YrMnth INTEGER, DATA_CATEGORY VARCHAR( 15), DATA_TYPE VARCHAR( 5), TIME_TYPE VARCHAR( 6), TIMEF VARCHAR( 12), SCOMP VARCHAR( 1), COMPLETE_DATA INTEGER, datasource VARCHAR( 4), MARAVAIL INTEGER, MARSOLD INTEGER, MARREV DOUBLE, MKTAVAIL INTEGER, MKTSOLD DOUBLE, MKTREV DOUBLE, MKTAVAIL_UNW INTEGER, MKTSOLD_UNW DOUBLE, MKTREV_UNW DOUBLE, MARAVAILLY INTEGER, MARSOLDLY INTEGER, MARREVLY DOUBLE, MKTAVAILLY INTEGER, MKTSOLDLY DOUBLE, MKTREVLY DOUBLE, MKTAVAIL_UNWLY INTEGER, MKTSOLD_UNWLY DOUBLE, MKTREV_UNWLY DOUBLE, MARAVAILLY_2PRIOR INTEGER, MARSOLDLY_2PRIOR INTEGER, MARREVLY_2PRIOR DOUBLE, MKTAVAILLY_2PRIOR INTEGER, MKTSOLDLY_2PRIOR DOUBLE, MKTREVLY_2PRIOR DOUBLE, MKTAVAIL_UNWLY_2PRIOR INTEGER, MKTSOLD_UNWLY_2PRIOR DOUBLE, MKTREV_UNWLY_2PRIOR DOUBLE ) ) by odbc ;",CC53_new60month_newAW_vALL11marsha.sas
INSERT INTO TABLE AWPROD.STR_MONTHLY_DATA_HIST_STG SELECT * FROM STR_CC.STAR60m_FINAL_&SEG._&TIMEF._&CUR.;,CC53_new60month_newAW_vALL11marsha.sas
   INSERT INTO AW_CMP_DBO.STR_MONTHLY_DATA Select * FROM AW_CMP_DBO.STR_MONTHLY_DATA_HIST_STG ) by odbc ;,CC53_new60month_newAW_vALL11marsha.sas
   DROP TABLE AW_CMP_DBO.STR_MONTHLY_DATA_HIST_STG ) by odbc ;,CC53_new60month_newAW_vALL11marsha.sas
 CREATE TABLE prop_master AS  (  SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER A  ) ;,Combine MadAboutMktShare Data3-OtherBrnds.sas
" CREATE TABLE perdiem_by_zip AS select SUBSTRING( zip,1,5) AS zip, max( PD&YR.&Mon. ) AS PD&YR.&Mon. FROM perdiem_by_zip_orig GROUP BY calculated zip;",Combine MadAboutMktShare Data3-OtherBrnds.sas
" CREATE TABLE ecomm1_2 AS ( SELECT  *  , ' ' AS ota_prtcpt_num  FROM ecomm1  WHERE marsha<>'');",Combine MadAboutMktShare Data3-OtherBrnds.sas
" CREATE TABLE ecomm2_2 AS ( SELECT  *  , ' ' AS ota_prtcpt_num  FROM ecomm2 );",Combine MadAboutMktShare Data3-OtherBrnds.sas
" CREATE TABLE strrank AS  (  SELECT MARSHA, RANK_REVPAR_NUM, RANK_REVPAR_DEN FROM AW_TGT_BUS_DBO.STR_60MONTH WHERE yrmnth=&STRMo AND TIMEF='MONTH' AND asof_yrmo=&STRMo  ) ;",Combine MadAboutMktShare Data3-OtherBrnds.sas
" CREATE TABLE strrank3 AS ( SELECT  *  , compress( CAST( RANK_REVPAR_NUM,best12. ))||"" of ""||compress( CAST( RANK_REVPAR_DEN,best12. ) ) AS FW_STR_MNLY_RevPARRank_MN  FROM strrank );",Combine MadAboutMktShare Data3-OtherBrnds.sas
SELECT DISTINCT * FROM strrank3 ORDER BY marsha;,Combine MadAboutMktShare Data3-OtherBrnds.sas
" CREATE TABLE sellout_data AS select marsha , SUM( Actl_Sellouts) AS Actl_Sellouts , SUM( Psbl_Sellouts) AS Psbl_Sellouts , calculated Actl_Sellouts/ calculated Psbl_Sellouts AS sellout_efficiency FROM taneka.sellout_data WHERE L3<>'( no filter)' GROUP BY marsha;",Combine MadAboutMktShare Data3-OtherBrnds.sas
" CREATE TABLE MAMS_Data AS select a.marsha , a.brnd , a.hCLASS , a.mf , a.owner , f.WD_ADR_MN , f.WD_ADR_chg_MN , f.WD_ADR_L3 , f.WD_ADR_chg_L3 , f.WD_NQ_Mix_L3 , f.WD_NQ_ADR_chg_L3 , f.WD_NQ_RN_chg_L3 , f.WD_NQ_ADR_chg_MN , f.WD_NQ_RN_chg_MN , j.WD_GR_RN_1MO_OTB , j.WD_GR_RN_Chg_1MO_OTB , f.WD_GR_RN_chg_MN , f.WD_GR_RN_chg_L3 , f.WD_TR_Mix_chg_MN , f.WD_TR_Mix_chg_L3 , f.WD_GR_Mix_MN , f.WD_Occ_chg_MN , f.WE_NQ_ADR_chg_MN , f.WE_NQ_RN_chg_MN , f.WE_NQ_ADR_chg_L3 , f.WE_NQ_RN_chg_L3 , f.WE_GR_RN_chg_MN , f.WE_GR_RN_chg_L3 , f.we_TR_Mix_chg_MN , f.we_TR_Mix_chg_L3 , f.WE_GR_Mix_L3 , f.WE_GR_Mix_MN , CASE WHEN a.mf='F' OR a.country not IN ( 'United States' 'Canada') THEN j.FW_GR_RN_Chg_1MO_OTB when a.mf='M' THEN ( h.fw_gr_rn_1MO+-fw_gr_rn_LY_1MO) / fw_gr_rn_LY_1MO ELSE . END AS gr_rn_chg_1MO , CASE WHEN a.mf='F' OR a.country not IN ( 'United States' 'Canada') THEN j.FW_GR_RN_Chg_3MO_OTB when a.mf='M' THEN ( h.fw_gr_rn_3MO+-FW_GR_rn_LY_3MO) / FW_GR_rn_LY_3MO ELSE . END AS gr_rn_chg_3MO , a.hotel_name AS hotname , f.WD_SC_ADR_chg_L3 , f.WD_SC_RN_chg_MN , f.WD_SC_RN_chg_L3 , g.STR_MNLY_ADRIndexChg_MN AS FW_STR_MNLY_ADRIndexChg_MN , g.STR_MNLY_ADRIndexChg_L3 AS FW_STR_MNLY_ADRIndexChg_L3 , g.STR_MNLY_OccIndexChg_MN AS FW_STR_MNLY_OccIndexChg_MN , g.STR_MNLY_OccIndexChg_L3 AS FW_STR_MNLY_OccIndexChg_L3 , g.STR_MNLY_RevPARIndexChg_MN AS FW_STR_MNLY_RevPARIndexChg_MN , g.STR_MNLY_RevPARIndexChg_L3 AS FW_STR_MNLY_RevPARIndexChg_L3 , j.WD_TR_RN_Chg_1MO_OTB , j.WD_TR_RN_Chg_3MO_OTB , j.WD_TR_RN_1MO_OTB - ( j.WD_TR_RN_1MO_OTB / ( 1+j.WD_TR_RN_Chg_1MO_OTB) ) AS WD_TR_RN_PACE_RNDIFF_1MO , f.WD_TRE_L3 , CASE WHEN d.STR_MNLY_OccIndex_MN = . THEN g.STR_MNLY_OccIndex_MN ELSE d.STR_MNLY_OccIndex_MN END AS WD_STR_MNLY_OccIndex_MN , CASE WHEN d.STR_MNLY_OccIndex_MN = . THEN g.STR_MNLY_OccIndex_L3 ELSE d.STR_MNLY_OccIndex_L3 END AS WD_STR_MNLY_OccIndex_L3 , CASE WHEN d.STR_MNLY_OccIndex_MN = . THEN g.STR_MNLY_OccIndexChg_MN ELSE d.STR_MNLY_OccIndexChg_MN END AS WD_STR_MNLY_OccIndexChg_MN , CASE WHEN d.STR_MNLY_OccIndex_MN = . THEN g.STR_MNLY_OccIndexChg_L3 ELSE d.STR_MNLY_OccIndexChg_L3 END AS WD_STR_MNLY_OccIndexChg_L3 , CASE WHEN a.mf='F' OR a.country not IN ( 'United States' 'Canada') THEN j2.WD_OY_FCST_Occ_3MO when a.mf='M' THEN wd_rn_3MO/wd_cap_3MO ELSE . END AS WD_Occ_3MO_RP , CASE WHEN e.STR_MNLY_OccIndex_MN = . THEN g.STR_MNLY_OccIndex_MN ELSE e.STR_MNLY_OccIndex_MN END AS WE_STR_MNLY_OccIndex_MN , CASE WHEN e.STR_MNLY_OccIndex_L3 = . THEN g.STR_MNLY_OccIndex_L3 ELSE e.STR_MNLY_OccIndex_L3 END AS WE_STR_MNLY_OccIndex_L3 , CASE WHEN e.STR_MNLY_OccIndexChg_MN = . THEN g.STR_MNLY_OccIndexChg_MN ELSE e.STR_MNLY_OccIndexChg_MN END AS WE_STR_MNLY_OccIndexChg_MN , CASE WHEN e.STR_MNLY_OccIndexChg_L3 = . THEN g.STR_MNLY_OccIndexChg_L3 ELSE e.STR_MNLY_OccIndexChg_L3 END AS WE_STR_MNLY_OccIndexChg_L3 , CASE WHEN e.STR_MNLY_ADRIndexChg_MN = . THEN g.STR_MNLY_ADRIndexChg_MN ELSE e.STR_MNLY_ADRIndexChg_MN END AS WE_STR_MNLY_ADRIndexChg_MN , CASE WHEN e.STR_MNLY_ADRIndexChg_L3 = . THEN g.STR_MNLY_ADRIndexChg_L3 ELSE e.STR_MNLY_ADRIndexChg_L3 END AS WE_STR_MNLY_ADRIndexChg_L3 , CASE WHEN e.STR_MNLY_RevPARIndexChg_MN = . THEN g.STR_MNLY_RevPARIndexChg_MN ELSE e.STR_MNLY_RevPARIndexChg_MN END AS WE_STR_MNLY_RevPARIndexChg_MN , CASE WHEN e.STR_MNLY_RevPARIndexChg_L3 = . THEN g.STR_MNLY_RevPARIndexChg_L3 ELSE e.STR_MNLY_RevPARIndexChg_L3 END AS WE_STR_MNLY_RevPARIndexChg_L3 , CASE WHEN a.mf='F' OR a.country not IN ( 'United States' 'Canada') THEN j2.WE_OY_FCST_Occ_3MO when a.mf='M' THEN we_rn_3MO/we_cap_3MO ELSE . END AS WE_Occ_3MO_RP , i.rn_rwd/i.rn_tot AS MRW_Guests_L3 , i.brnd_rn_rwd/i.brnd_rn_tot AS Average_pct_Rewards , i.rn_plat/i.rn_tot AS MRW_Plat_Guests_L3 , i.brnd_rn_plat/i.brnd_rn_tot AS MRW_Plat_Guests_BrndAvg_L3 , CASE WHEN 1=1 THEN 'NA' when w._____Sessions_Natural_Search__YT = . THEN '' when w._____Sessions_Natural_Search__YT/100 ge .02 THEN 'GREEN' when w._____Sessions_Natural_Search__YT/100 gt -.02 THEN 'YELLOW' when w._____Sessions_Natural_Search__YT/100 le -.02 THEN 'RED' END AS Natural_Search_Red_Pct_1PA , CASE WHEN 1=1 THEN 'NA' when x._____Sessions_Natural_Search__YT = . THEN '' when x._____Sessions_Natural_Search__YT/100 ge .02 THEN 'GREEN' when x._____Sessions_Natural_Search__YT/100 gt -.02 THEN 'YELLOW' when x._____Sessions_Natural_Search__YT/100 le -.02 THEN 'RED' END AS Natural_Search_Red_Pct_2PA , CASE WHEN 1=1 THEN 'NA' when y._____Sessions_Natural_Search__YT = . THEN '' when y._____Sessions_Natural_Search__YT/100 ge .02 THEN 'GREEN' when y._____Sessions_Natural_Search__YT/100 gt -.02 THEN 'YELLOW' when y._____Sessions_Natural_Search__YT/100 le -.02 THEN 'RED' END AS Natural_Search_Red_Pct_3PA , l.avg_level AS High_Value_Ratio_ACT , w.ota_prtcpt_num AS OTA_Participation_Num , f.FW_GR_RN_chg_rn_L3 , f.FW_GR_RN_chg_rn_MN , CASE WHEN a.mf='F' OR a.country not IN ( 'United States' 'Canada') THEN j2.Wed_Occ_3MO when a.mf='M' THEN j2.Wed_Occ_3MO ELSE . END AS Wed_Occ_3MO_RP , i.rn_sc_rwd/i.rn_sc AS WD_SC_MRWMemb_L3 , . AS ROM_L3 , FUNCTION_SPACE , f.WD_Gr_Mix_L3 , j.FW_GR_RN_Chg_1MO_OTB AS FW_GR_RN_Pace_Chg_1MO , f.WD_GR_RN_Var_L3 , f.WE_Occ_L3 , f.WD_SC_Mix_L3 AS WD_SC_Mix_L3 , g.STR_MNLY_Revenue_L3 AS FW_STR_RV_L3 , g.STR_MNLY_RevPARIndex_L3 AS FW_STR_RevPARIndex_L3 , g.STR_MNLY_ADR_L3 AS FW_STR_ADR_L3 , g.STR_MNLY_Revenue_MN AS FW_STR_RV_MN , g.STR_MNLY_RevPARIndex_MN AS FW_STR_RevPARIndex_MN , g.STR_MNLY_ADR_MN AS FW_STR_ADR_MN , g.STR_MNLY_RevPARIndex_YTD AS FW_STR_RevPARIndex_YTD , g.STR_MNLY_RevPARIndexChg_YTD AS FW_STR_MNLY_RevPARIndexChg_YTD , f.WE_GR_RN_VAR_L3 , j.WE_GR_RN_Var_1MO_OTB AS WE_GR_RN_PaceVAR_1MO , j.WE_GR_RN_Chg_1MO_OTB AS WE_GR_RN_PaceChg_1MO , g.STR_MNLY_OccIndex_L3 AS FW_OccIndex_L3 , CASE WHEN d.STR_MNLY_OccIndex_MN = . THEN 'FW' ELSE 'WD_WE' END AS WD_v_FW_STR_Flag , CASE WHEN SFO_ORG='' THEN 'N' ELSE 'Y' END AS SFO_Ind , a.opendate , a.division , a.region , a.rd , a.avp , f.WE_GR_RN_Var_MN , f.WD_GR_RN_Var_MN , g.STR_MNLY_Occ_L3 AS FW_Occ_L3 , j.WE_GR_RN_Chg_3MO_OTB AS WE_GR_RN_PaceChg_3MO , j.WD_GR_RN_Chg_3MO_OTB AS WD_GR_RN_PaceChg_3MO , j.WE_GR_RN_Var_3MO_OTB AS WE_GR_RN_PaceVar_3MO , j.WD_GR_RN_Var_3MO_OTB AS WD_GR_RN_PaceVar_3MO , CASE WHEN d.STR_MNLY_OccIndexChg_MN = . THEN g.STR_MNLY_OccIndexChg_MN ELSE d.STR_MNLY_OccIndexChg_MN END AS WD_STR_MNLY_ADRIndexChg_MN , CASE WHEN d.STR_MNLY_OccIndexChg_L3 = . THEN g.STR_MNLY_OccIndexChg_L3 ELSE d.STR_MNLY_OccIndexChg_L3 END AS WD_STR_MNLY_ADRIndexChg_L3 , CASE WHEN d.STR_MNLY_RevPARIndexChg_MN = . THEN g.STR_MNLY_RevPARIndexChg_MN ELSE d.STR_MNLY_RevPARIndexChg_MN END AS WD_STR_MNLY_RevPARIndexChg_MN , CASE WHEN d.STR_MNLY_RevPARIndexChg_L3 = . THEN g.STR_MNLY_RevPARIndexChg_L3 ELSE d.STR_MNLY_RevPARIndexChg_L3 END AS WD_STR_MNLY_RevPARIndexChg_L3 , g.STR_MNLY_Rev_MN AS FW_STR_MNLY_RevPAR_MN , g.STR_MNLY_Rev_L3 AS FW_STR_MNLY_RevPAR_L3 , g.STR_MNLY_CompRev_MN AS FW_STR_MNLY_COMP_RevPAR_MN , g.STR_MNLY_CompRev_L3 AS FW_STR_MNLY_COMP_RevPAR_L3 , a.hcap AS hotel_capacity , o.FW_STR_MNLY_RevPARRank_MN , CASE WHEN a.brnd='CY' THEN 'CYRB' when a.sub_brand = 'FFI&S' THEN 'FIS' when a.brnd='FI' THEN 'FFI' ELSE 'N' END AS brand_VARiable , a.manager , u.Elite_Appreciation AS GSS_Elite , v.Elite_Rewards_Member_Appreciatio AS GSS_Elite_Average , u.Intent_to_RecommEND AS GSS_Intent_to_Recommend , v.Intent_to_Recommend_Property AS GSS_Intent_to_Recommend_Average , f.FW_Group_RN_PctChg_L3 , f.WD_TR_RNPCTChg_MN , f.WD_TR_RNPCTChg_L3 , f.WD_GR_ADR_L3 , f.WE_GR_ADR_L3 , f.FW_GR_ADR_L3 , s.WD_CR_Indx_MN AS WD_CompRate_Index_MN , s.WD_CR_Indx_Chg_MN AS WD_CompRate_Index_Chg_MN , s.WE_CR_Indx_MN AS WE_CompRate_Index_MN , s.WE_CR_Indx_Chg_MN AS WE_CompRate_Index_Chg_MN , CASE WHEN t.Quickgroup_with_Sleeping_Rooms = 'Not participating IN QuickGroup with Sleeping Rooms' THEN 'N' when t.Quickgroup_with_Sleeping_Rooms = 'Not participating IN QuickGroup-eRFP only' THEN 'N' when SUBSTRING( t.Quickgroup_with_Sleeping_Rooms,1,17) = 'Not participating' THEN 'N' when t.Quickgroup_with_Sleeping_Rooms = '' THEN '' ELSE 'Y' END AS Quickgroup_with_Sleeping_Rooms , CASE WHEN t.QuickGroup_with_Event_Space = 'Not participating IN QuickGroup with Event Space' THEN 'N' when t.QuickGroup_with_Event_Space = 'Not Participating ( one meeting room)' THEN 'N/A' when t.QuickGroup_with_Event_Space = 'N/A No Meeting Space' THEN 'N/A' when SUBSTRING( t.QuickGroup_with_Event_Space,1,17) = 'Not participating' THEN 'N' when SUBSTRING( t.QuickGroup_with_Event_Space,1,13) = 'Not Signed Up' THEN 'N' when t.QuickGroup_with_Event_Space = '' THEN '' ELSE 'Y' END AS QuickGroup_with_Event_Space , t.Total_number_of_meeting_rooms , CASE WHEN t4.MonthlyHotSpecific='Y' THEN 'Y' when t4.MonthlyHotSpecific<>'' THEN t4.MonthlyHotSpecific ELSE 'N' END AS MonthlyHotSpecific , f.FW_RevPAR_YTD , f.FW_RevPAR_Chg_YTD , a.country , CASE WHEN a.brnd<>'CY' THEN '' when t3.Adv_Purch_Avail='N' THEN 'N' ELSE 'Y' END AS Adv_Purch_Avail , f.WD_GV_Mix_L3 , f.WD_MC12_ADR_MN , CASE WHEN a.region = 'S_' OR a.country='Canada' OR a.state IN ( 'HI', 'AK') THEN . when pd.PD&YR.&Mon.=. THEN 83 ELSE pd.PD&YR.&Mon. END AS GV_PerDiem_MN , CASE WHEN GRMRS_Hotel='Y' THEN 'Y' ELSE 'N' END AS RMRS_Hotel , f.WD_Occ_L3 , eet.EET_Trigger , u.OSAT AS OSAT , CASE WHEN u.OSAT=. THEN """" when u.OSAT ge 68 THEN 'Green' when u.OSAT ge 54 THEN 'Clear' when u.OSAT ge 51 THEN 'Yellow' ELSE 'Red' END AS OSAT_Color , rpo.pct_high_priority_dates_wd AS rpo_pct_high_days_wd , rpo.pct_moves_up_wd AS rpo_hot_under_pct_wd, rpo.pct_moves_down_wd AS rpo_hot_over_pct_wd , rpo.pct_high_priority_dates_we AS rpo_pct_high_days_we , rpo.pct_moves_up_we AS rpo_hot_under_pct_we, rpo.pct_moves_down_wd AS rpo_hot_over_pct_we , '' AS rpo_tot_pricing_moves , '' AS pct_moves_in_rpodirection, '' AS rpo_logins , r24.__of_Alerts_Responded_in_48_Hrs AS Response_in_24Hrs , lnf.LNF_Claims_L3 , mc.mcom_rn_chg_MN , mc.mcom_rn_chg_L3 , mc.mcom_rn_share_chg_MN , mc.mcom_rn_share_chg_L3 , ge.STR_MNLY_RevPARIndexChg_L3 AS FW_RevPARIndex_Chg_L3_5MO_LY , so.sellout_efficiency , CASE WHEN t4_2.MonthlyHotSpecific='Y' THEN 'Y' when t4_2.MonthlyHotSpecific<>'' THEN t4_2.MonthlyHotSpecific ELSE 'N' END AS MonthlyHotSpecific2 , CASE WHEN mf='F' OR country not IN ( 'United States' 'Canada') THEN j2.Wed_Occ_1MO when mf='M' THEN j2.Wed_Occ_1MO ELSE . END AS Wed_Occ_1MO_RP , CASE WHEN mf='F' OR country not IN ( 'United States' 'Canada') THEN j2.Wed_Occ_2MO when mf='M' THEN j2.Wed_Occ_2MO ELSE . END AS Wed_Occ_2MO_RP , sys.io_flag , sys.fa_flag AS fcst_acc_flag , sys.rpo_flag , CASE WHEN mf='F' OR country not IN ( 'United States' 'Canada') THEN j2.FW_OY_FCST_Occ_1MO when mf='M' THEN fw_rn_1MO/fw_cap_1MO ELSE . END AS FW_Occ_1MO_RP , CASE WHEN mf='F' OR country not IN ( 'United States' 'Canada') THEN j2.FW_OY_FCST_Occ_2MO when mf='M' THEN fw_rn_2MO/fw_cap_2MO ELSE . END AS FW_Occ_2MO_RP , CASE WHEN mf='F' OR country not IN ( 'United States' 'Canada') THEN j2.FW_OY_FCST_Occ_3MO when mf='M' THEN fw_rn_3MO/fw_cap_3MO ELSE . END AS FW_Occ_3MO_RP , . AS M_Com_RN_Mix_YTD , mb._____RNs_from_Brand_com__YTD__Be AS M_Com_RN_Mix_Bench , CAST( mb._____RNs_from_Brand_com__YTD__Va,best12. )/100 AS M_Com_RN_Mix_Var_to_Bench , j2.midweek_occ_ge80_num , f.WD_GR_Mix_Chg_L3 , f.WD_GR_Mix_Chg_MN , f.WE_GR_Mix_Chg_L3 , f.WE_GR_Mix_Chg_MN , j2.Sat_Occ_2MO , j2.Sat_Occ_3MO , CASE WHEN country IN ( 'United States', 'USA', 'Mexico') THEN 'Y' when country='Canada' AND state not IN ( 'PQ', 'QC') THEN 'Y' ELSE 'N' END AS Flag_US_CAN_MEX_NoQC , &tmstmp. - a.opendate AS days_open , &tmstmp. AS Datestamp format date9. ,EXTRACT(MONTH FROM &tmstmp. ) AS Timestamp_Month FROM prop_master AS a LEFT JOIN mams.mams_mrdw AS f ON a.marsha=f.marsha LEFT JOIN mams.STR_FW_MONTHLY_&STR_FLDR. AS g ON a.marsha=g.marsha LEFT JOIN mams.STR_WD_MONTHLY_&STR_FLDR. AS d ON a.marsha=d.marsha LEFT JOIN mams.STR_WE_MONTHLY_&STR_FLDR. AS e ON a.marsha=e.marsha LEFT JOIN mams.allrpdata AS h ON a.marsha=h.marsha LEFT JOIN mams.all_rwd_mamm_&yrmo AS i ON a.marsha=i.marsha LEFT JOIN mams.Esf_otb AS j ON a.marsha=j.marsha LEFT JOIN mams.Mams_oy_forecast AS j2 ON a.marsha=j2.marsha LEFT JOIN mams.actdata AS l ON a.marsha=l.marsha LEFT JOIN strrank3 AS o ON a.marsha=o.marsha LEFT JOIN mams.intl_tra_crdata_pd AS s ON a.marsha=s.marsha LEFT JOIN quickgroup AS t ON a.marsha=t.marsha_code LEFT JOIN gss_hot AS u ON a.marsha=u.marsha LEFT JOIN gss_brnd AS v ON a.brnd=v.brand LEFT JOIN ecomm1_2 AS w ON a.marsha=w.marsha LEFT JOIN ecomm2_2 AS x ON a.marsha=x.marsha LEFT JOIN ecomm3 AS y ON a.marsha=y.marsha LEFT JOIN advPurch AS t3 ON a.marsha=t3.marsha LEFT JOIN MonthlyHotSpecific AS t4 ON a.marsha=t4.marsha LEFT JOIN MonthlyHotSpecific2 AS t4_2 ON a.marsha=t4_2.marsha LEFT JOIN perdiem_by_zip AS pd ON CAST( SUBSTRING( a.zip,1,5),best12. )=CAST( SUBSTRING( pd.zip,1,5),best12. ) LEFT JOIN eet_trigger AS eet ON a.marsha=eet.marsha LEFT JOIN rpo.Rpo_recom_dir_&mon.&yr. AS rpo ON a.marsha=rpo.marsha LEFT JOIN Resp_24hr AS r24 ON a.marsha=r24.marsha LEFT JOIN Lnf_violations AS lnf ON a.marsha=lnf.marsha LEFT JOIN mams.mcom_data AS mc ON a.marsha=mc.marsha LEFT JOIN mamsftr.STR_FW_MONTHLY_&ftrSTR. AS ge ON a.marsha=ge.marsha LEFT JOIN sellout_data AS so ON a.marsha=so.marsha LEFT JOIN rpo.&io_fle. AS sys ON a.marsha=sys.marsha LEFT JOIN mcom_bench AS mb ON a.marsha=mb.marsha WHERE ( a.brnd IN ( 'CY', 'SH', 'FI', 'AR', 'OX', 'FP', 'AL') AND a.openflag='Y' AND ( a.division IN ( 'AM') OR a.marsha IN ( 'MUCCY', 'AKLFP'))) ORDER BY a.marsha;",Combine MadAboutMktShare Data3-OtherBrnds.sas
CREATE TABLE MAMS_DUP AS (SELECT DISTINCT * FROM MAMS_Data ORDER BY marsha);,Combine MadAboutMktShare Data3-OtherBrnds.sas
"CREATE TABLE ""G:\RM EAnlys\Shared_Data\Projects\Mad About Market Share\&outfldr\MAMS_Rawdata-&outfldr.-AC.xls"" AS ( SELECT *  FROM MAMS_Data WHERE  brnd='AR' ) ;",Combine MadAboutMktShare Data3-OtherBrnds.sas
"CREATE TABLE ""G:\RM EAnlys\Shared_Data\Projects\Mad About Market Share\&outfldr\MAMS_Rawdata-&outfldr.-OX.xls"" AS ( SELECT *  FROM MAMS_Data WHERE  brnd='OX' ) ;",Combine MadAboutMktShare Data3-OtherBrnds.sas
"CREATE TABLE ""G:\RM EAnlys\Shared_Data\Projects\Mad About Market Share\&outfldr\MAMS_Rawdata-&outfldr.-SH.xls"" AS ( SELECT *  FROM MAMS_Data WHERE  brnd='SH' ) ;",Combine MadAboutMktShare Data3-OtherBrnds.sas
"CREATE TABLE ""G:\RM EAnlys\Shared_Data\Projects\Mad About Market Share\&outfldr\MAMS_Rawdata-&outfldr.-FI.xls"" AS ( SELECT *  FROM MAMS_Data WHERE  brnd='FI' ) ;",Combine MadAboutMktShare Data3-OtherBrnds.sas
"CREATE TABLE ""G:\RM EAnlys\Shared_Data\Projects\Mad About Market Share\&outfldr\MAMS_Rawdata-&outfldr.-CY.xls"" AS ( SELECT *  FROM MAMS_Data WHERE  brnd='CY' ) ;",Combine MadAboutMktShare Data3-OtherBrnds.sas
"CREATE TABLE ""G:\RM EAnlys\Shared_Data\Projects\Mad About Market Share\&outfldr\MAMS_Rawdata-&outfldr.-FP.xls"" AS ( SELECT *  FROM MAMS_Data WHERE  brnd='FP' ) ;",Combine MadAboutMktShare Data3-OtherBrnds.sas
"CREATE TABLE ""G:\RM EAnlys\Shared_Data\Projects\Mad About Market Share\&outfldr\MAMS_Rawdata-&outfldr.-AL.xls"" AS ( SELECT *  FROM MAMS_Data WHERE  brnd='AL' ) ;",Combine MadAboutMktShare Data3-OtherBrnds.sas
 CREATE TABLE mams.mams_&yrmo._AR AS ( SELECT  *  FROM MAMS_Data  WHERE brnd='AR');,Combine MadAboutMktShare Data3-OtherBrnds.sas
 CREATE TABLE mams.AR_hotel_UPDATE_data AS ( SELECT  *  FROM mams.mams_&yrmo._AR );,Combine MadAboutMktShare Data3-OtherBrnds.sas
 CREATE TABLE mams.mams_&yrmo._OX AS ( SELECT  *  FROM MAMS_Data  WHERE brnd='OX');,Combine MadAboutMktShare Data3-OtherBrnds.sas
 CREATE TABLE mams.ox_hotel_UPDATE_data AS ( SELECT  *  FROM mams.mams_&yrmo._OX );,Combine MadAboutMktShare Data3-OtherBrnds.sas
 CREATE TABLE mams.mams_&yrmo._FI AS ( SELECT  *  FROM MAMS_Data  WHERE brnd='FI');,Combine MadAboutMktShare Data3-OtherBrnds.sas
 CREATE TABLE mams.fi_hotel_UPDATE_data AS ( SELECT  *  FROM mams.mams_&yrmo._FI );,Combine MadAboutMktShare Data3-OtherBrnds.sas
 CREATE TABLE mams.mams_&yrmo._SH AS ( SELECT  *  FROM MAMS_Data  WHERE brnd='SH');,Combine MadAboutMktShare Data3-OtherBrnds.sas
 CREATE TABLE mams.sh_hotel_UPDATE_data AS ( SELECT  *  FROM mams.mams_&yrmo._SH );,Combine MadAboutMktShare Data3-OtherBrnds.sas
 CREATE TABLE mams.mams_&yrmo._CY AS ( SELECT  *  FROM MAMS_Data  WHERE brnd='CY');,Combine MadAboutMktShare Data3-OtherBrnds.sas
 CREATE TABLE mams.cy_hotel_UPDATE_data AS ( SELECT  *  FROM mams.mams_&yrmo._CY );,Combine MadAboutMktShare Data3-OtherBrnds.sas
 CREATE TABLE mams.mams_&yrmo._FP AS ( SELECT  *  FROM MAMS_Data  WHERE brnd='FP');,Combine MadAboutMktShare Data3-OtherBrnds.sas
 CREATE TABLE mams.fp_hotel_UPDATE_data AS ( SELECT  *  FROM mams.mams_&yrmo._FP );,Combine MadAboutMktShare Data3-OtherBrnds.sas
 CREATE TABLE mams.mams_&yrmo._AL AS ( SELECT  *  FROM MAMS_Data  WHERE brnd='AL') CREATE TABLE mams.mams_&yrmo._AL;,Combine MadAboutMktShare Data3-OtherBrnds.sas
 CREATE TABLE work.global_census AS  (  SELECT * FROM AW_CMP_DBO.STR_GLOBAL_CENSUS WHERE ASOF_YRMO = &STARMNTH   ) ;,compset_check_tool.sas
" CREATE TABLE comp.Compset_check_&STARMNTH AS select a.STR_NUM, a.Country, a.Market, a.Tract, a.Class, a.Chain_Scale , a.Affiliation, a.Hotel_Name, a.Address_1, a.City, a.State, a.Postal_Code , a.Parent_Company, a.Management_Company, a.Owner_Company , a.Open_Date, b.DaySTAR_Part, b.STAR_Part, a.Rooms , ""&Month. &Year."" AS run_date, ""&Month."" AS run_month , ""&Year."" AS run_year FROM global_census a LEFT JOIN participation AS b ON a.STR_NUMBER = b.CENSUS_ID WHERE b.star_part = ""Y"" ORDER BY a.country, a.Market, a.Tract, a.Class, a.Affiliation ;",compset_check_tool.sas
"CREATE TABLE sourceData AS ( SELECT D_RUN , ' ' AS au_grp_rebates , ' ' AS au_cnt_rebates , ' ' AS au_other_re, CASE WHEN  AU_Grp_RMS_DEF=' '  THEN 0 END AS AU_Grp_RMS_DEF, CASE WHEN  AU_Grp_RMS_TNT=' '  THEN 0 END AS AU_Grp_RMS_TNT, CASE WHEN  AU_Grp_RMS_TOBE=' '  THEN 0 END AS AU_Grp_RMS_TOBE, CASE WHEN  AU_TRN_RMS=' '  THEN 0 END AS AU_TRN_RMS, CASE WHEN  AU_CNT_RMS=' '  THEN 0 END AS AU_CNT_RMS, CASE WHEN  Capacity=' '  THEN 0 END AS Capacity, CASE WHEN  AU_OOO=' '  THEN 0 END AS AU_OOO FROM ""\\hdqmdm1fpcl4v1\lodg-revmgmt\RM EAnlys\Shared_Data\Projections\Daily Extract\pj_test_extract_&ExtractDt..txt"" missover  WHERE _N_ = 1 AND day( staydate) <> 1) AS ( SELECT prop_code , StayDate , AU_GRP_RMS_DEF , AU_GRP_RMS_TNT , AU_GRP_RMS_TOBE , AU_TRN_RMS , AU_GRP_REBATES , AU_TRN_REBATES , AU_CNT_RMS , AU_CNT_REBATES , AU_GRP_REV_DEF , AU_GRP_REV_TNT , AU_GRP_REV_TOBE , OY_TRNS_FCST , AU_OTHER_REV , AU_TRN_REV , AU_CNT_REV , AU_OOO , GRP_NOTE , TRN_NOTE , CNT_NOTE , CAPACITY , SELL_OUT , COMP_RMS , SEG_ID , ' ' AS au_grp_rebates , ' ' AS au_cnt_rebates , ' ' AS au_other_re, CASE WHEN  AU_Grp_RMS_DEF=' '  THEN 0 END AS AU_Grp_RMS_DEF, CASE WHEN  AU_Grp_RMS_TNT=' '  THEN 0 END AS AU_Grp_RMS_TNT, CASE WHEN  AU_Grp_RMS_TOBE=' '  THEN 0 END AS AU_Grp_RMS_TOBE, CASE WHEN  AU_TRN_RMS=' '  THEN 0 END AS AU_TRN_RMS, CASE WHEN  AU_CNT_RMS=' '  THEN 0 END AS AU_CNT_RMS, CASE WHEN  Capacity=' '  THEN 0 END AS Capacity, CASE WHEN  AU_OOO=' '  THEN 0 END AS AU_OOO FROM ""\\hdqmdm1fpcl4v1\lodg-revmgmt\RM EAnlys\Shared_Data\Projections\Daily Extract\pj_test_extract_&ExtractDt..txt"" missover  WHERE _N_ = 1 AND day( staydate) <> 1);",Daily Extract Weekly Batch.sas
    INSERT INTO AW_REV_DBO.Weekly_Proj Select * FROM AW_REV_DBO.Weekly_temp ) by odbc ;,Daily Extract Weekly Batch.sas
"   CALL AW_TGT_PROXY_DBO.GRANT_ON_TABLE( 'AW_REV_DBO','Weekly_Proj' )  ) by odbc ;",Daily Extract Weekly Batch.sas
" CREATE TABLE work.PLU AS  (  SELECT MARSHA, MF, BRND, CURR, REGION, HOTNAME, RD, CLUSTER_NAME, MARKET_NAME, STR_ID, ACOMP, AVP, SUB_BRAND, '' AS HIGH_IMPACT, DOMINT, SUB_BRAND, COUNTRY FROM AW_TGT_BUS_DBO.PROPERTY_MASTER WHERE openflag = 'Y' ORDER BY marsha   ) ;",DAYSTAR_LOAD_AW.sas
"CREATE TABLE DAYSTR_DATA_FROM_RAW AS ( SELECT Aff , Census , ChainID , DateTY , DateLY , PropSupTY , PropDemTY , PropRevTY , PropSupLY , PropDemLY , PropRevLY , CompSupTY , CompDemTY , CompRevTY , CompSupLY , CompDemLY , CompRevLY , MASCSupTY , MASCDemTY , MASCRevTY , MASCSupLY , MASCDemLY , MASCRevLY , OccRankTY , ADRRankTY , RevParRankTY , OccRank_ChgTY , ADRRank_ChgTY , RevParRank_ChgTY , OccRankLY , ADRRankLY , RevParRankLY , OccRank_ChgLY , ADRRank_ChgLY , RevParRank_ChgLY , PropLocRevTY , PropLocRevLY , CompLocRevTY , CompLocRevLY , MASCLocRevTY , MASCLocRevLY , CurrencyCo FROM ""\\Hdqmdm1fpcl4v1\lodg-revmgmt\DSS\star_data\DaySTR_Raw_Data\ddMARR&DBEGL7..txt"" );",DAYSTAR_LOAD_AW.sas
"CREATE TABLE DAYSTR_Plus_DATA_FROM_RAW AS ( SELECT Census , ChainID , DateTY , DateLY , Mar_Avail_TY , Mar_Sold_TY , Mar_Rev_TY , Mar_G_Sold_TY , Mar_C_Sold_TY , Mar_T_Sold_TY , Mar_G_Rev_TY , Mar_C_Rev_TY , Mar_T_Rev_TY , Mar_Avail_LY , Mar_Sold_LY , Mar_Rev_LY , Mar_G_Sold_LY , Mar_C_Sold_LY , Mar_T_Sold_LY , Mar_G_Rev_LY , Mar_C_Rev_LY , Mar_T_Rev_LY , CS_Avail_TY , CS_Sold_TY , CS_Rev_TY , CS_G_Sold_TY , CS_C_Sold_TY , CS_T_Sold_TY , CS_G_Rev_TY , CS_C_Rev_TY , CS_T_Rev_TY , CS_Avail_LY , CS_Sold_LY , CS_Rev_LY , CS_G_Sold_LY , CS_C_Sold_LY , CS_T_Sold_LY , CS_G_Rev_LY , CS_C_Rev_LY , CS_T_Rev_LY , Mar_FB_Rev_TY , Mar_Other_Rev_TY , Mar_Total_Rev_TY , Mar_FB_Rev_LY , Mar_Other_Rev_LY , Mar_Total_Rev_LY , CS_FB_Rev_TY , CS_Other_Rev_TY , CS_Total_Rev_TY , CS_FB_Rev_LY , CS_Other_Rev_LY , CS_Total_Rev_LY , MAR_Loc_Rev_TY , MAR_Loc_Rev_LY , MAR_G_Loc_Rev_TY , MAR_G_Loc_Rev_LY , MAR_C_Loc_Rev_TY , MAR_C_Loc_Rev_LY , MAR_T_Loc_Rev_TY , MAR_T_Loc_Rev_LY , CS_Loc_Rev_TY , CS_Loc_Rev_LY , CS_G_Loc_Rev_TY , CS_G_Loc_Rev_LY , CS_C_Loc_Rev_TY , CS_C_Loc_Rev_LY , CS_T_Loc_Rev_TY , CS_T_Loc_Rev_ FROM ""\\Hdqmdm1fpcl4v1\lodg-revmgmt\DSS\star_data\DaySTR_Raw_Data\marrplus_6wk_&DBEGL7..txt"" );",DAYSTAR_LOAD_AW.sas
" CREATE TABLE starcurr_edw_&CURYRPD AS  (  SELECT CURR_CODE AS from_currency_cd , ROUND( FXTOCUSD,7) AS currency_exch_rte , LTRIM( CAST( CURRENT DATE AS DATE),10)as currency_exch_dte , MON AS month FROM AW_TGT_BUS_DBO.TREASFX_FCST WHERE asof_yrmo = ( SELECT MAX( ASOF_YRMO) FROM AW_TGT_BUS_DBO.TREASFX_FCST) ORDER BY CURR_CODE, YRMON  ) ;",DAYSTAR_LOAD_AW.sas
" CREATE TABLE raw_daily_data_lc AS select p.marsha, p.str_ID, p.brnd AS BRAND , ""Local"" AS CURRENCY_TYPE , d.CurrencyCode AS CUR , &DATALOAD. AS ASOF_DATE , CASE WHEN d.PropSupTY>0 AND d.PropDemTY>0 AND d.PropLocRevTY>0 AND d.CompSupTY>0 AND d.CompDemTY>0 AND d.CompLocRevTY>0 AND d.PropSupLY>0 AND d.PropDemLY>0 AND d.PropLocRevLY>0 AND d.CompSupLY>0 AND d.CompDemLY>0 AND d.CompLocRevLY>0 THEN 1 ELSE 0 END AS COMPLETE_DATA , CASE WHEN d.PropSupTY >0 AND ( s.Mar_G_Sold_TY + s.Mar_T_Sold_TY + s.Mar_C_Sold_TY) >0 AND ( s.MAR_G_Loc_Rev_TY + s.MAR_T_Loc_Rev_TY + s.MAR_C_Loc_Rev_TY) >0 AND d.CompSupTY >0 AND ( s.CS_G_Sold_TY + s.CS_T_Sold_TY + s.CS_C_Sold_TY) >0 AND ( s.CS_G_Loc_Rev_TY+ s.CS_T_Loc_Rev_TY+ s.CS_C_Loc_Rev_TY) >0 AND d.PropSupLY >0 AND ( s.Mar_G_Sold_LY + s.Mar_T_Sold_LY + s.Mar_C_Sold_LY) >0 AND ( s.MAR_G_Loc_Rev_LY + s.MAR_T_Loc_Rev_LY + s.MAR_C_Loc_Rev_LY) >0 AND d.CompSupLY >0 AND (  s.CS_G_Sold_LY + s.CS_T_Sold_LY + s.CS_C_Sold_LY) >0 AND ( s.CS_G_Loc_Rev_LY+ s.CS_T_Loc_Rev_LY + s.CS_C_Loc_Rev_LY) > 0 THEN 1 ELSE 0 END AS COMPLETE_DATA_SEG , ""STR"" AS DATASOURCE , d.DateTY AS DATE_TY, CAST( SUBSTRING( CAST( d.DateTY, 8. ),1,6), 6. ) AS YRMNTH_TY , CAST( SUBSTRING( CAST( d.DateTY, 8. ),1,4), 4. ) AS YEAR_TY , CAST( SUBSTRING( CAST( d.DateTY, 8. ),5,2), 2. ) AS MONTH_TY , CAST( SUBSTRING( CAST( d.DateTY, 8. ),7,2), 2. ) AS DOM_TY , Weekday( InCAST(  Put(  d.DateTY, 8. ), Yymmdd10. )) AS DOW_TY , CASE WHEN Weekday( InCAST(  Put(  d.DateTY, 8. ), Yymmdd10. )) = 6 OR Weekday( InCAST(  Put(  d.DateTY, 8. ), Yymmdd10. )) = 7 THEN 'WE' ELSE 'WD' END AS WDWE_TY , d.DateLY AS DATE_LY, CAST( SUBSTRING( CAST( d.DateLY, 8. ),1,6), 6. ) AS YRMNTH_LY , CAST( SUBSTRING( CAST( d.DateLY, 8. ),1,4), 4. ) AS YEAR_LY , CAST( SUBSTRING( CAST( d.DateLY, 8. ),5,2), 2. ) AS MONTH_LY , CAST( SUBSTRING( CAST( d.DateLY, 8. ),7,2), 2. ) AS DOM_LY , Weekday( InCAST(  Put(  d.DateLY, 8. ), Yymmdd10. )) AS DOW_LY , CASE WHEN Weekday( InCAST(  Put(  d.DateLY, 8. ), Yymmdd10. )) = 6 OR Weekday( InCAST(  Put(  d.DateLY, 8. ), Yymmdd10. )) = 7 THEN 'WE' ELSE 'WD' END AS WDWE_LY , d.PropSupTY AS MARAVAIL, d.PropDemTY AS MARSOLD , d.PropLocRevTY AS MARREV , ( d.PropSupTY) / ( d.CompSupTY) * ( d.CompSupTY) AS MKTAVAIL , ( d.PropSupTY) / ( d.CompSupTY) * ( d.CompDemTY) AS MKTSOLD , ( d.PropSupTY) / ( d.CompSupTY) * ( d.CompLocRevTY) AS MKTREV , d.CompSupTY AS MKTAVAIL_UNW, d.CompDemTY AS MKTSOLD_UNW , d.CompLocRevTY AS MKTREV_UNW , d.PropSupLY AS MARAVAILLY, d.PropDemLY AS MARSOLDLY , d.PropLocRevLY AS MARREVLY , ( d.PropSupLY) / ( d.CompSupLY) * ( d.CompSupLY) AS MKTAVAILLY , ( d.PropSupLY) / ( d.CompSupLY) * ( d.CompDemLY) AS MKTSOLDLY , ( d.PropSupLY) / ( d.CompSupLY) * ( d.CompLocRevLY) AS MKTREVLY , d.CompSupLY AS MKTAVAIL_UNWLY, d.CompDemLY AS MKTSOLD_UNWLY , d.CompLocRevLY AS MKTREV_UNWLY , d.PropSupTY AS MARAVAIL_GP, s.Mar_G_Sold_TY AS MARSOLD_GP , s.MAR_G_Loc_Rev_TY AS MARREV_GP , ( d.PropSupTY) / ( d.CompSupTY) * ( d.CompSupTY) AS MKTAVAIL_GP , ( d.PropSupTY) / ( d.CompSupTY) * ( s.CS_G_Sold_TY) AS MKTSOLD_GP , ( d.PropSupTY) / ( d.CompSupTY) * ( s.CS_G_Loc_Rev_TY) AS MKTREV_GP , d.CompSupTY AS MKTAVAIL_UNW_GP, s.CS_G_Sold_TY AS MKTSOLD_UNW_GP , s.CS_G_Loc_Rev_TY AS MKTREV_UNW_GP , d.PropSupLY AS MARAVAILLY_GP, s.Mar_G_Sold_LY AS MARSOLDLY_GP , s.MAR_G_Loc_Rev_LY AS MARREVLY_GP , ( d.PropSupLY) / ( d.CompSupLY) * ( d.CompSupLY) AS MKTAVAILLY_GP , ( d.PropSupLY) / ( d.CompSupLY) * ( s.CS_G_Sold_LY) AS MKTSOLDLY_GP , ( d.PropSupLY) / ( d.CompSupLY) * ( s.CS_G_Loc_Rev_LY) AS MKTREVLY_GP , d.CompSupLY AS MKTAVAIL_UNWLY_GP, s.CS_G_Sold_LY AS MKTSOLD_UNWLY_GP , s.CS_G_Loc_Rev_LY AS MKTREV_UNWLY_GP , d.PropSupTY AS MARAVAIL_TN, s.Mar_T_Sold_TY AS MARSOLD_TN , s.MAR_T_Loc_Rev_TY AS MARREV_TN , ( d.PropSupTY) / ( d.CompSupTY) * ( d.CompSupTY) AS MKTAVAIL_TN , ( d.PropSupTY) / ( d.CompSupTY) * ( s.CS_T_Sold_TY) AS MKTSOLD_TN , ( d.PropSupTY) / ( d.CompSupTY) * ( s.CS_T_Loc_Rev_TY) AS MKTREV_TN , d.CompSupTY AS MKTAVAIL_UNW_TN, s.CS_T_Sold_TY AS MKTSOLD_UNW_TN , s.CS_T_Loc_Rev_TY AS MKTREV_UNW_TN , d.PropSupLY AS MARAVAILLY_TN, s.Mar_T_Sold_LY AS MARSOLDLY_TN , s.MAR_T_Loc_Rev_LY AS MARREVLY_TN , ( d.PropSupLY) / ( d.CompSupLY) * ( d.CompSupLY) AS MKTAVAILLY_TN , ( d.PropSupLY) / ( d.CompSupLY) * ( s.CS_T_Sold_LY) AS MKTSOLDLY_TN , ( d.PropSupLY) / ( d.CompSupLY) * ( s.CS_T_Loc_Rev_LY) AS MKTREVLY_TN , d.CompSupLY AS MKTAVAIL_UNWLY_TN, s.CS_T_Sold_LY AS MKTSOLD_UNWLY_TN , s.CS_T_Loc_Rev_LY AS MKTREV_UNWLY_TN , d.PropSupTY AS MARAVAIL_CN, s.Mar_C_Sold_TY AS MARSOLD_CN , s.MAR_C_Loc_Rev_TY AS MARREV_CN , ( d.PropSupTY) / ( d.CompSupTY) * ( d.CompSupTY) AS MKTAVAIL_CN , ( d.PropSupTY) / ( d.CompSupTY) * ( s.CS_C_Sold_TY) AS MKTSOLD_CN , ( d.PropSupTY) / ( d.CompSupTY) * ( s.CS_C_Loc_Rev_TY) AS MKTREV_CN , d.CompSupTY AS MKTAVAIL_UNW_CN, s.CS_C_Sold_TY AS MKTSOLD_UNW_CN , s.CS_C_Loc_Rev_TY AS MKTREV_UNW_CN , d.PropSupLY AS MARAVAILLY_CN, s.Mar_C_Sold_LY AS MARSOLDLY_CN , s.MAR_C_Loc_Rev_LY AS MARREVLY_CN , ( d.PropSupLY) / ( d.CompSupLY) * ( d.CompSupLY) AS MKTAVAILLY_CN , ( d.PropSupLY) / ( d.CompSupLY) * ( s.CS_C_Sold_LY) AS MKTSOLDLY_CN , ( d.PropSupLY) / ( d.CompSupLY) * ( s.CS_C_Loc_Rev_LY) AS MKTREVLY_CN , d.CompSupLY AS MKTAVAIL_UNWLY_CN, s.CS_C_Sold_LY AS MKTSOLD_UNWLY_CN , s.CS_C_Loc_Rev_LY AS MKTREV_UNWLY_CN FROM Daystr_data_from_raw AS d LEFT JOIN plu AS p ON d.census = p.str_id LEFT JOIN DAYSTR_Plus_DATA_FROM_RAW AS s ON d.census = s.census AND d.datety = s.datety WHERE p.marsha <> '' ORDER BY p.str_ID, d.DateTY ;",DAYSTAR_LOAD_AW.sas
" CREATE TABLE raw_daily_data_cc AS select p.marsha, p.str_ID, p.brnd AS BRAND , ""Constant USD"" AS CURRENCY_TYPE , ""USD"" AS CUR , &DATALOAD. AS ASOF_DATE , CASE WHEN d.PropSupTY>0 AND d.PropDemTY>0 AND d.PropLocRevTY>0 AND d.CompSupTY>0 AND d.CompDemTY>0 AND d.CompLocRevTY>0 AND d.PropSupLY>0 AND d.PropDemLY>0 AND d.PropLocRevLY>0 AND d.CompSupLY>0 AND d.CompDemLY>0 AND d.CompLocRevLY > 0 THEN 1 ELSE 0 END AS COMPLETE_DATA , CASE WHEN d.PropSupTY >0 AND ( s.Mar_G_Sold_TY + s.Mar_T_Sold_TY + s.Mar_C_Sold_TY) >0 AND ( s.MAR_G_Loc_Rev_TY + s.MAR_T_Loc_Rev_TY + s.MAR_C_Loc_Rev_TY) >0 AND d.CompSupTY >0 AND ( s.CS_G_Sold_TY + s.CS_T_Sold_TY + s.CS_C_Sold_TY) >0 AND ( s.CS_G_Loc_Rev_TY+ s.CS_T_Loc_Rev_TY+ s.CS_C_Loc_Rev_TY) >0 AND d.PropSupLY >0 AND ( s.Mar_G_Sold_LY + s.Mar_T_Sold_LY + s.Mar_C_Sold_LY) >0 AND ( s.MAR_G_Loc_Rev_LY + s.MAR_T_Loc_Rev_LY + s.MAR_C_Loc_Rev_LY) >0 AND d.CompSupLY >0 AND (  s.CS_G_Sold_LY + s.CS_T_Sold_LY + s.CS_C_Sold_LY) >0 AND ( s.CS_G_Loc_Rev_LY+ s.CS_T_Loc_Rev_LY + s.CS_C_Loc_Rev_LY) > 0 THEN 1 ELSE 0 END AS COMPLETE_DATA_SEG , ""STR"" AS DATASOURCE , d.DateTY AS DATE_TY, CAST( SUBSTRING( CAST( d.DateTY, 8. ),1,6), 6. ) AS YRMNTH_TY , CAST( SUBSTRING( CAST( d.DateTY, 8. ),1,4), 4. ) AS YEAR_TY , CAST( SUBSTRING( CAST( d.DateTY, 8. ),5,2), 2. ) AS MONTH_TY , CAST( SUBSTRING( CAST( d.DateTY, 8. ),7,2), 2. ) AS DOM_TY , Weekday( InCAST(  Put(  d.DateTY, 8. ), Yymmdd10. )) AS DOW_TY , CASE WHEN Weekday( InCAST(  Put(  d.DateTY, 8. ), Yymmdd10. )) = 6 OR Weekday( InCAST(  Put(  d.DateTY, 8. ), Yymmdd10. )) = 7 THEN 'WE' ELSE 'WD' END AS WDWE_TY , d.DateLY AS DATE_LY, CAST( SUBSTRING( CAST( d.DateLY, 8. ),1,6), 6. ) AS YRMNTH_LY , CAST( SUBSTRING( CAST( d.DateLY, 8. ),1,4), 4. ) AS YEAR_LY , CAST( SUBSTRING( CAST( d.DateLY, 8. ),5,2), 2. ) AS MONTH_LY , CAST( SUBSTRING( CAST( d.DateLY, 8. ),7,2), 2. ) AS DOM_LY , Weekday( InCAST(  Put(  d.DateLY, 8. ), Yymmdd10. )) AS DOW_LY , CASE WHEN Weekday( InCAST(  Put(  d.DateLY, 8. ), Yymmdd10. )) = 6 OR Weekday( InCAST(  Put(  d.DateLY, 8. ), Yymmdd10. )) = 7 THEN 'WE' ELSE 'WD' END AS WDWE_LY , d.PropSupTY AS MARAVAIL, d.PropDemTY AS MARSOLD , d.PropLocRevTY * c.currency_exch_rte AS MARREV , ( d.PropSupTY) / ( d.CompSupTY) * ( d.CompSupTY) AS MKTAVAIL , ( d.PropSupTY) / ( d.CompSupTY) * ( d.CompDemTY) AS MKTSOLD , ( d.PropSupTY) / ( d.CompSupTY) * ( d.CompLocRevTY)* c.currency_exch_rte AS MKTREV , d.CompSupTY AS MKTAVAIL_UNW, d.CompDemTY AS MKTSOLD_UNW , d.CompLocRevTY * c.currency_exch_rte AS MKTREV_UNW , d.PropSupLY AS MARAVAILLY, d.PropDemLY AS MARSOLDLY , d.PropLocRevLY * cly.currency_exch_rte AS MARREVLY , ( d.PropSupLY) / ( d.CompSupLY) * ( d.CompSupLY) AS MKTAVAILLY , ( d.PropSupLY) / ( d.CompSupLY) * ( d.CompDemLY) AS MKTSOLDLY , ( d.PropSupLY) / ( d.CompSupLY) * ( d.CompLocRevLY) * cly.currency_exch_rte AS MKTREVLY , d.CompSupLY AS MKTAVAIL_UNWLY, d.CompDemLY AS MKTSOLD_UNWLY , d.CompLocRevLY * cly.currency_exch_rte AS MKTREV_UNWLY , d.PropSupTY AS MARAVAIL_GP, s.Mar_G_Sold_TY AS MARSOLD_GP , s.MAR_G_Loc_Rev_TY * c.currency_exch_rte AS MARREV_GP , ( d.PropSupTY) / ( d.CompSupTY) * ( d.CompSupTY) AS MKTAVAIL_GP , ( d.PropSupTY) / ( d.CompSupTY) * ( s.CS_G_Sold_TY) AS MKTSOLD_GP , ( d.PropSupTY) / ( d.CompSupTY) * ( s.CS_G_Loc_Rev_TY) * c.currency_exch_rte AS MKTREV_GP , d.CompSupTY AS MKTAVAIL_UNW_GP, s.CS_G_Sold_TY AS MKTSOLD_UNW_GP , s.CS_G_Loc_Rev_TY * c.currency_exch_rte AS MKTREV_UNW_GP , d.PropSupLY AS MARAVAILLY_GP, s.Mar_G_Sold_LY AS MARSOLDLY_GP , s.MAR_G_Loc_Rev_LY * cly.currency_exch_rte AS MARREVLY_GP , ( d.PropSupLY) / ( d.CompSupLY) * ( d.CompSupLY) AS MKTAVAILLY_GP , ( d.PropSupLY) / ( d.CompSupLY) * ( s.CS_G_Sold_LY) AS MKTSOLDLY_GP , ( d.PropSupLY) / ( d.CompSupLY) * ( s.CS_G_Loc_Rev_LY) * cly.currency_exch_rte AS MKTREVLY_GP , d.CompSupLY AS MKTAVAIL_UNWLY_GP, s.CS_G_Sold_LY AS MKTSOLD_UNWLY_GP , s.CS_G_Loc_Rev_LY * cly.currency_exch_rte AS MKTREV_UNWLY_GP , d.PropSupTY AS MARAVAIL_TN, s.Mar_T_Sold_TY AS MARSOLD_TN , s.MAR_T_Loc_Rev_TY * c.currency_exch_rte AS MARREV_TN , ( d.PropSupTY) / ( d.CompSupTY) * ( d.CompSupTY) AS MKTAVAIL_TN , ( d.PropSupTY) / ( d.CompSupTY) * ( s.CS_T_Sold_TY) AS MKTSOLD_TN , ( d.PropSupTY) / ( d.CompSupTY) * ( s.CS_T_Loc_Rev_TY) * c.currency_exch_rte AS MKTREV_TN , d.CompSupTY AS MKTAVAIL_UNW_TN, s.CS_T_Sold_TY AS MKTSOLD_UNW_TN , s.CS_T_Loc_Rev_TY * c.currency_exch_rte AS MKTREV_UNW_TN , d.PropSupLY AS MARAVAILLY_TN, s.Mar_T_Sold_LY AS MARSOLDLY_TN , s.MAR_T_Loc_Rev_LY * cly.currency_exch_rte AS MARREVLY_TN , ( d.PropSupLY) / ( d.CompSupLY) * ( d.CompSupLY) AS MKTAVAILLY_TN , ( d.PropSupLY) / ( d.CompSupLY) * ( s.CS_T_Sold_LY) AS MKTSOLDLY_TN , ( d.PropSupLY) / ( d.CompSupLY) * ( s.CS_T_Loc_Rev_LY) * cly.currency_exch_rte AS MKTREVLY_TN , d.CompSupLY AS MKTAVAIL_UNWLY_TN, s.CS_T_Sold_LY AS MKTSOLD_UNWLY_TN , s.CS_T_Loc_Rev_LY * cly.currency_exch_rte AS MKTREV_UNWLY_TN , d.PropSupTY AS MARAVAIL_CN, s.Mar_C_Sold_TY AS MARSOLD_CN , s.MAR_C_Loc_Rev_TY * c.currency_exch_rte AS MARREV_CN , ( d.PropSupTY) / ( d.CompSupTY) * ( d.CompSupTY) AS MKTAVAIL_CN , ( d.PropSupTY) / ( d.CompSupTY) * ( s.CS_C_Sold_TY) AS MKTSOLD_CN , ( d.PropSupTY) / ( d.CompSupTY) * ( s.CS_C_Loc_Rev_TY) * c.currency_exch_rte AS MKTREV_CN , d.CompSupTY AS MKTAVAIL_UNW_CN, s.CS_C_Sold_TY AS MKTSOLD_UNW_CN , s.CS_C_Loc_Rev_TY * c.currency_exch_rte AS MKTREV_UNW_CN , d.PropSupLY AS MARAVAILLY_CN, s.Mar_C_Sold_LY AS MARSOLDLY_CN , s.MAR_C_Loc_Rev_LY * cly.currency_exch_rte AS MARREVLY_CN , ( d.PropSupLY) / ( d.CompSupLY) * ( d.CompSupLY) AS MKTAVAILLY_CN , ( d.PropSupLY) / ( d.CompSupLY) * ( s.CS_C_Sold_LY) AS MKTSOLDLY_CN , ( d.PropSupLY) / ( d.CompSupLY) * ( s.CS_C_Loc_Rev_LY) * cly.currency_exch_rte AS MKTREVLY_CN , d.CompSupLY AS MKTAVAIL_UNWLY_CN, s.CS_C_Sold_LY AS MKTSOLD_UNWLY_CN , s.CS_C_Loc_Rev_LY * cly.currency_exch_rte AS MKTREV_UNWLY_CN FROM Daystr_data_from_raw AS d LEFT JOIN plu AS p ON d.census = p.str_id LEFT JOIN DAYSTR_Plus_DATA_FROM_RAW AS s ON d.census = s.census AND d.datety = s.datety LEFT JOIN starcurr_edw_&STARMNTH AS c ON ( d.CurrencyCode eq c.from_currency_cd AND CAST( SUBSTRING( CAST( d.DateTY, 8. ),5,2), 2. ) = c.month) LEFT JOIN starcurr_edw_&STARMNTH AS cly ON ( d.CurrencyCode eq cly.from_currency_cd AND CAST( SUBSTRING( CAST( d.DateLY, 8. ),5,2), 2. ) = cly.month) WHERE p.marsha <> '' ORDER BY p.str_ID, d.DateTY ;",DAYSTAR_LOAD_AW.sas
 CREATE TABLE work.STR_RAW_DAILY_DATA_NEW_WEEK_STG AS ( SELECT  *  FROM wstr.final_raw_daily_data_cc UNION ALL SELECT  *  FROM wstr.final_raw_daily_data_lc);,DAYSTAR_LOAD_AW.sas
" CREATE TABLE work.STR_RAW_DAILY_DATA_NEW_WEEK AS SELECT MARSHA , STR_ID , BRAND , CURRENCY_TYPE , CUR , ASOF_DATE , COMPLETE_DATA , COMPLETE_DATA_SEG , DATASOURCE , DATE_TY , YRMNTH_TY , YEAR_TY , MONTH_TY , DOM_TY , DOW_TY , WDWE_TY , DATE_LY , YRMNTH_LY , YEAR_LY , MONTH_LY , DOM_LY , DOW_LY , WDWE_LY , MARAVAIL , MARSOLD , MARREV , MKTAVAIL , MKTSOLD , MKTREV , MKTAVAIL_UNW , MKTSOLD_UNW , MKTREV_UNW , MARAVAILLY , MARSOLDLY , MARREVLY , MKTAVAILLY , MKTSOLDLY , MKTREVLY , MKTAVAIL_UNWLY , MKTSOLD_UNWLY , MKTREV_UNWLY , MARAVAIL_GP , MARSOLD_GP , MARREV_GP , MKTAVAIL_GP , MKTSOLD_GP , MKTREV_GP , MKTAVAIL_UNW_GP , MKTSOLD_UNW_GP , MKTREV_UNW_GP , MARAVAILLY_GP , MARSOLDLY_GP , MARREVLY_GP , MKTAVAILLY_GP , MKTSOLDLY_GP , MKTREVLY_GP , MKTAVAIL_UNWLY_GP , MKTSOLD_UNWLY_GP , MKTREV_UNWLY_GP , MARAVAIL_TN , MARSOLD_TN , MARREV_TN , MKTAVAIL_TN , MKTSOLD_TN , MKTREV_TN , MKTAVAIL_UNW_TN , MKTSOLD_UNW_TN , MKTREV_UNW_TN , MARAVAILLY_TN , MARSOLDLY_TN , MARREVLY_TN , MKTAVAILLY_TN , MKTSOLDLY_TN , MKTREVLY_TN , MKTAVAIL_UNWLY_TN , MKTSOLD_UNWLY_TN , MKTREV_UNWLY_TN , MARAVAIL_CN , MARSOLD_CN , MARREV_CN , MKTAVAIL_CN , MKTSOLD_CN , MKTREV_CN , MKTAVAIL_UNW_CN , MKTSOLD_UNW_CN , MKTREV_UNW_CN , MARAVAILLY_CN , MARSOLDLY_CN , MARREVLY_CN , MKTAVAILLY_CN , MKTSOLDLY_CN , MKTREVLY_CN , MKTAVAIL_UNWLY_CN , MKTSOLD_UNWLY_CN , MKTREV_UNWLY_CN FROM work.STR_RAW_DAILY_DATA_NEW_WEEK_STG;",DAYSTAR_LOAD_AW.sas
 CREATE TABLE output.new_week AS SELECT * FROM output.STR_RAW_DAILY_DATA_HIST_&prevdt WHERE asof_date = &DBEGL7F AND date_ty < ( SELECT min( date_TY) FROM work.STR_RAW_DAILY_DATA_NEW_WEEK) UNION SELECT * FROM work.STR_RAW_DAILY_DATA_NEW_WEEK;,DAYSTAR_LOAD_AW.sas
 DELETE * FROM output.str_raw_daily_data_hist_&prevdt WHERE asof_date = &DBEGL7F;,DAYSTAR_LOAD_AW.sas
 INSERT INTO output.STR_RAW_DAILY_DATA_HIST_&prevdt SELECT * FROM output.new_week;,DAYSTAR_LOAD_AW.sas
 CREATE TABLE prop_misw AS  (  SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER_HIST A WHERE asof_yrmo = &yearmn.  ) ;,Demand Strategy Data Pullv4.sas
" CREATE TABLE mrdwdata AS  (  select CASE WHEN a.property_cd='SJUDB' THEN 'SJUDO' ELSE a.property_cd END AS property_cd , a.year_cal_id, a.month_cal_id, a.market_prefix_cd , CASE WHEN b.ab_day_of_week_cd IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' END AS wdwe , SUM( a.roomnights_qty) AS rn, SUM( a.net_rev_local_amt) AS rv , SUM( net_rev_usd_sub_amt) AS rv_usd FROM mrdw_fact_agg_dr_rev_analysis a, mrdw_dim_date b WHERE a.date_stay_dt=b.date_dt AND a.year_cal_id IN ( &yr. , &yr.-1 , &yr.-2) AND a.brand_cd IN ( 'FS', 'ER', 'BR', 'CC', 'RZ', 'AK', 'BG', 'EB', 'AR', 'CY', 'RI', 'SH', 'TS', 'FI', 'GE', 'DE', 'OX', 'PR', 'LC', 'WI', 'SI', 'FP', 'XR', 'MD', 'GX','WH','AL', 'TX', 'EL') GROUP BY property_cd, a.year_cal_id, a.month_cal_id, a.market_prefix_cd, wdwe ORDER BY property_cd, a.year_cal_id, a.month_cal_id, a.market_prefix_cd, wdwe  )  ;",Demand Strategy Data Pullv4.sas
" CREATE TABLE mrdwdata2 AS select coalesce( a.property_cd, b.property_cd) AS marsha ,coalesce( a.month_cal_id, b.month_cal_id) AS MN ,coalesce( a.market_prefix_cd, b.market_prefix_cd) AS mcpref ,coalesce( a.wdwe, b.wdwe) AS wdwe ,coalesce( a.year_cal_id, b.year_cal_id + 1) AS YR ,a.rn ,a.rv ,a.rv_usd ,b.rn AS rn_ly ,b.rv AS rv_ly ,b.rv_usd AS rv_usd_ly FROM mrdwdata a full JOIN mrdwdata b ON a.property_cd = b.property_cd AND a.month_cal_id = b.month_cal_id AND a.market_prefix_cd = b.market_prefix_cd AND a.wdwe = b.wdwe AND a.year_cal_id = b.year_cal_id + 1 WHERE ( 100 * coalesce( a.year_cal_id , b.year_cal_id + 1) + coalesce( a.month_cal_id, b.month_cal_id) <= 100 * &yr. + &MN.  ) ;",Demand Strategy Data Pullv4.sas
" CREATE TABLE trn_otb_ty AS select snapshot_dt AS asof_week, property_cd, stay_dt , CASE WHEN weekday( stay_dt) IN ( 6,7) THEN 'WE' ELSE 'WD' END AS wdwe , SEG_CD AS market_segment, SUM( ROOM_NIGHTS) AS rn, SUM( REVENUE) AS rev FROM AWPROD2.MRDW_FACT_SEG10_DETAILS a, prop_misw prop WHERE a.property_cd = prop.marsha AND prop.region IN ( 'E_', 'W_', 'C_') AND snapshot_dt = &otbAsOfDate AND partition_snapshot_dt = &otbAsOfDate AND a.stay_dt >= &OTBstrTY AND a.stay_dt <= &OTBendTY GROUP BY snapshot_dt, property_cd, stay_dt, seg_cd, calculated wdwe ORDER BY snapshot_dt, property_cd, stay_dt, seg_cd, calculated wdwe;",Demand Strategy Data Pullv4.sas
" CREATE TABLE trn_otb_date AS select snapshot_dt +365 AS asof_week, property_cd, stay_dt+365 AS stay_dt format date9. , CASE WHEN weekday( stay_dt) IN ( 6,7) THEN 'WE' ELSE 'WD' END AS wdwe , SEG_CD AS market_segment, SUM( ROOM_NIGHTS) AS rn, SUM( REVENUE) AS rv FROM AWPROD2.MRDW_FACT_SEG10_DETAILS a, prop_misw prop WHERE a.property_cd = prop.marsha AND prop.region IN ( 'E_', 'W_', 'C_') AND snapshot_dt = &otbAsOfDate -365 AND a.stay_dt >= &OTBstrTY -365 AND a.stay_dt <= &OTBendTY -365 GROUP BY snapshot_dt, property_cd, stay_dt, seg_cd, calculated wdwe ORDER BY snapshot_dt, property_cd, stay_dt, seg_cd, calculated wdwe;",Demand Strategy Data Pullv4.sas
" CREATE TABLE stella3_trn_otb AS select coalesce( a.property_cd,b.property_cd) AS marsha ,coalesce( a.stay_dt, b.stay_dt) AS stay_date ,coalesce( a.market_segment,b.market_segment) AS mcpref ,coalesce( a.wdwe,b.wdwe) AS wdwe ,a.rn AS rn ,a.rev AS rv ,b.rn AS rn_ly ,b.rv AS rv_ly FROM trn_otb_ty AS a full JOIN trn_otb_date AS b ON a.property_cd = b.property_cd AND a.stay_dt=b.stay_dt AND a.market_segment = b.market_segment AND a.wdwe = b.wdwe ;",Demand Strategy Data Pullv4.sas
" CREATE TABLE allotb AS select marsha,EXTRACT(YEAR FROM stay_date) AS yr,EXTRACT(MONTH FROM stay_date) AS mn, mcpref, wdwe, SUM( rn) AS rn, SUM( rv) AS rv, SUM( rv) AS rv_usd, SUM( rn_ly) AS rn_ly, SUM( rv_ly) AS rv_ly, SUM( rv_ly) AS rv_usd_ly FROM stella3_trn_otb WHERE 100 * calculated yr + calculated mn IN ( &FutureMN2., &FutureMN3., &FutureMN4. ) GROUP BY marsha, yr, mn, mcpref, wdwe;",Demand Strategy Data Pullv4.sas
" CREATE TABLE demand AS  (  select CASE WHEN c.property_cd='SJUDB' THEN 'SJUDO' ELSE c.property_cd END AS marsha , b.year_cal, b.month_cal_id, a.cd_market_segment AS mcpref ,CASE WHEN b.ab_day_of_week_cd IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' END AS wdwe , SUM( a.qy_addl_demand_adjstd) AS demand FROM mrdw_fact_ddm_stat_unconstrain a JOIN mrdw_dim_date b ON a.id_date_stay=b.date_key JOIN mrdw_dim_property AS c ON a.id_property=c.property_id WHERE b.year_cal IN ( &yr. , &yr.-1 , &yr.-2) GROUP BY marsha, b.year_cal, b.month_cal_id, mcpref, wdwe  )  ;",Demand Strategy Data Pullv4.sas
" CREATE TABLE demand2 AS select coalesce( a.marsha, b.marsha) AS marsha ,coalesce( a.month_cal_id, b.month_cal_id) AS MN ,coalesce( a.mcpref, b.mcpref) AS mcpref ,coalesce( a.wdwe, b.wdwe) AS wdwe ,coalesce( a.year_cal, b.year_cal + 1) AS YR ,a.demand AS demand ,b.demand AS demand_ly FROM demand a full JOIN demand b ON a.marsha = b.marsha AND a.month_cal_id = b.month_cal_id AND a.mcpref = b.mcpref AND a.wdwe = b.wdwe AND a.year_cal = b.year_cal + 1 WHERE ( 100 * coalesce( a.year_cal , b.year_cal + 1) + coalesce( a.month_cal_id, b.month_cal_id) <= 100 * &yr. + &MN.  ) ;",Demand Strategy Data Pullv4.sas
 CREATE TABLE mrdwdata3 AS ( SELECT  *  FROM mrdwdata2 UNION ALL SELECT  *  FROM allotb);,Demand Strategy Data Pullv4.sas
" CREATE TABLE mrdwdata4 AS select a.marsha, a.yr, a.MN, a.mcpref, a.wdwe, a.rn, a.rn_ly , CASE WHEN b.curr='USD' AND b.brnd NOT IN ( 'RZ','BG','EB') THEN a.rv_usd ELSE a.rv END AS rv , CASE WHEN b.curr='USD' AND b.brnd NOT IN ( 'RZ','BG','EB') THEN a.rv_usd_ly ELSE a.rv_ly END AS rv_ly , CASE WHEN ( b.curr='USD' OR a.rv_usd=a.rv) AND b.brnd NOT IN ( 'RZ','BG','EB') THEN a.rv_usd ELSE a.rv/c.fx END AS rv_usd , CASE WHEN ( b.curr='USD' OR a.rv_usd_ly=a.rv_ly) AND b.brnd NOT IN ( 'RZ','BG','EB') THEN a.rv_usd_ly ELSE a.rv_ly/c.fx END AS rv_usd_ly FROM mrdwdata3 AS a INNER JOIN prop_misw AS b ON a.marsha=b.marsha LEFT JOIN fx.fxrates AS c ON b.curr=c.code AND a.mn=c.mn ;",Demand Strategy Data Pullv4.sas
" CREATE TABLE mrdw_dem_currency AS select coalesce( a.marsha , b.marsha) AS marsha ,coalesce( a.mn, b.mn) AS MN ,CASE WHEN SUBSTRING( coalesce( a.mcpref , b.mcpref),1,1)='6' THEN '62' when b.mcpref = 'CMP' THEN '62' when SUBSTRING( coalesce( a.mcpref , b.mcpref),1,1)='5' THEN 'CN' when b.mcpref = 'CTC' THEN 'CN' when b.mcpref = 'GRP' THEN 'GR' when b.mcpref = 'PRG' THEN '10' when b.mcpref= 'BEN' THEN '12' when b.mcpref = 'ECH' THEN '30' when b.mcpref = 'SPC' THEN '17' when b.mcpref = 'WHS' THEN '26' when b.mcpref = 'GOV' THEN '16' when b.mcpref = 'WES' THEN '23' when b.mcpref = 'AAA' THEN '42' when b.mcpref = 'PKG' THEN '21' when b.mcpref = 'ADV' THEN '35' when b.mcpref = 'SRD' THEN '43' when b.mcpref = 'MAR' THEN '28' when b.mcpref = 'RWD' THEN '25' when b.mcpref = 'ODS' THEN 'OT' when b.mcpref='' THEN 'OT' when c.mcpref='' THEN 'OT' ELSE c.mcpref END AS mcpref ,CASE WHEN SUBSTRING( coalesce( a.mcpref , b.mcpref),1,1)='6' THEN '62 Complimentary' when b.mcpref = 'CMP' THEN '62 Complimentary' when SUBSTRING( coalesce( a.mcpref , b.mcpref),1,1)='5' THEN 'Contract' when b.mcpref = 'CTC' THEN 'Contract' when b.mcpref = 'GRP' THEN 'GR' when b.mcpref = 'PRG' THEN '10 Premium Retail' when b.mcpref= 'BEN' THEN '12 Standard Retail' when b.mcpref = 'ECH' THEN '30 Echannel Premium Retail' when b.mcpref = 'SPC' THEN '17 Special Corporate' when b.mcpref = 'WHS' THEN '26 Wholesale FIT/Bundled Travel' when b.mcpref = 'GOV' THEN '16 Government' when b.mcpref = 'WES' THEN '23 Weekend Hotel Breakfast Pkg Premium' when b.mcpref = 'AAA' THEN '42 Auto Assn of America ( AAA)' when b.mcpref = 'PKG' THEN '21 Hotel Value Add Package' when b.mcpref = 'ADV' THEN '35 Advance Purchase' when b.mcpref = 'SRD' THEN '43 Senior Discount' when b.mcpref = 'MAR' THEN '28 Associate Leisure' when b.mcpref = 'RWD' THEN '25 Rewards Redem & Upgrades' when b.mcpref = 'ODS' THEN 'Other Transient' when b.mcpref='' THEN 'Other Transient' when c.mcpref='' THEN 'Other Transient' ELSE c.market_segment END AS market_segment ,coalesce( a.wdwe , b.wdwe) AS wdwe ,coalesce( a.yr , b.yr) AS YR ,a.demand ,a.demand_ly ,b.rn ,b.rv ,b.rv_usd ,b.rn_ly ,b.rv_ly ,b.rv_usd_ly FROM demand2 a full JOIN mrdwdata4 b ON a.marsha = b.marsha AND a.yr = b.yr AND a.mn = b.mn AND a.mcpref = b.mcpref AND a.wdwe = b.wdwe full JOIN segment_names AS c ON coalesce( a.mcpref , b.mcpref)=c.mcpref;",Demand Strategy Data Pullv4.sas
" CREATE TABLE mrdw_dem_ytd AS select a.marsha, a.mcpref, a.market_segment, a.wdwe, 'YTD' AS timeframe ,SUM( rn) AS rn ,SUM( rn_ly) AS rn_ly ,SUM( rv) AS rv ,SUM( rv_ly) AS rv_ly ,SUM( rv_usd) AS rv_usd ,SUM( rv_usd_ly) AS rv_usd_ly ,SUM( demand) AS demand ,SUM( demand_ly) AS demand_ly FROM mrdw_dem_currency a WHERE 100 * yr + mn le &yr. * 100 + &MN. AND yr = &yr. GROUP BY a.marsha, a.mcpref, a.market_segment, a.wdwe;",Demand Strategy Data Pullv4.sas
" CREATE TABLE mrdw_dem_mn AS select a.marsha, a.mcpref, a.market_segment, a.wdwe, 'MN' AS timeframe ,SUM( rn) AS rn ,SUM( rn_ly) AS rn_ly ,SUM( rv) AS rv ,SUM( rv_ly) AS rv_ly ,SUM( rv_usd) AS rv_usd ,SUM( rv_usd_ly) AS rv_usd_ly ,SUM( demand) AS demand ,SUM( demand_ly) AS demand_ly FROM mrdw_dem_currency a WHERE yr = &yr. AND mn = &MN. GROUP BY a.marsha, a.mcpref, a.market_segment, a.wdwe;",Demand Strategy Data Pullv4.sas
" CREATE TABLE mrdw_dem_L3 AS select a.marsha, a.mcpref, a.market_segment, a.wdwe, 'L3' AS timeframe ,SUM( rn) AS rn ,SUM( rn_ly) AS rn_ly ,SUM( rv) AS rv ,SUM( rv_ly) AS rv_ly ,SUM( rv_usd) AS rv_usd ,SUM( rv_usd_ly) AS rv_usd_ly ,SUM( demand) AS demand ,SUM( demand_ly) AS demand_ly FROM mrdw_dem_currency a WHERE ( 100 * yr + mn IN ( &PriorMN., &PriorMN2. )) OR ( 100 * yr + mn = 100 * &yr. + &MN. ) GROUP BY a.marsha, a.mcpref, a.market_segment, a.wdwe;",Demand Strategy Data Pullv4.sas
" CREATE TABLE mrdw_dem_L12 AS select a.marsha, a.mcpref, a.market_segment, a.wdwe, 'L12' AS timeframe ,SUM( rn) AS rn ,SUM( rn_ly) AS rn_ly ,SUM( rv) AS rv ,SUM( rv_ly) AS rv_ly ,SUM( rv_usd) AS rv_usd ,SUM( rv_usd_ly) AS rv_usd_ly ,SUM( demand) AS demand ,SUM( demand_ly) AS demand_ly FROM mrdw_dem_currency a WHERE 100 * yr + mn ge 100 * ( &yr.-1) + &MN. + 1 AND 100 * yr + mn le 100 * &yr. + &MN. GROUP BY a.marsha, a.mcpref, a.market_segment, a.wdwe;",Demand Strategy Data Pullv4.sas
" CREATE TABLE mrdw_dem_F1 AS select a.marsha, a.mcpref, a.market_segment, a.wdwe, 'F1' AS timeframe ,SUM( rn) AS rn ,SUM( rn_ly) AS rn_ly ,SUM( rv) AS rv ,SUM( rv_ly) AS rv_ly ,SUM( rv_usd) AS rv_usd ,SUM( rv_usd_ly) AS rv_usd_ly ,SUM( demand) AS demand ,SUM( demand_ly) AS demand_ly FROM mrdw_dem_currency a WHERE 100 * yr + mn IN ( &FutureMN2. ) GROUP BY a.marsha, a.mcpref, a.market_segment, a.wdwe;",Demand Strategy Data Pullv4.sas
" CREATE TABLE mrdw_dem_F3 AS select a.marsha, a.mcpref, a.market_segment, a.wdwe, 'F3' AS timeframe ,SUM( rn) AS rn ,SUM( rn_ly) AS rn_ly ,SUM( rv) AS rv ,SUM( rv_ly) AS rv_ly ,SUM( rv_usd) AS rv_usd ,SUM( rv_usd_ly) AS rv_usd_ly ,SUM( demand) AS demand ,SUM( demand_ly) AS demand_ly FROM mrdw_dem_currency a WHERE 100 * yr + mn IN ( &FutureMN2., &FutureMN3., &FutureMN4. ) GROUP BY a.marsha, a.mcpref, a.market_segment, a.wdwe;",Demand Strategy Data Pullv4.sas
" CREATE TABLE mrdw_dem_OTB1 AS select a.marsha, a.mcpref, a.market_segment, a.wdwe, 'O1' AS timeframe ,SUM( rn) AS rn ,SUM( rn_ly) AS rn_ly ,SUM( rv) AS rv ,SUM( rv_ly) AS rv_ly ,SUM( rv_usd) AS rv_usd ,SUM( rv_usd_ly) AS rv_usd_ly ,SUM( demand) AS demand ,SUM( demand_ly) AS demand_ly FROM mrdw_dem_currency a WHERE 100 * yr + mn IN ( &FutureMN2. ) GROUP BY a.marsha, a.mcpref, a.market_segment, a.wdwe;",Demand Strategy Data Pullv4.sas
" CREATE TABLE mrdw_dem_OTB2 AS select a.marsha, a.mcpref, a.market_segment, a.wdwe, 'O2' AS timeframe ,SUM( rn) AS rn ,SUM( rn_ly) AS rn_ly ,SUM( rv) AS rv ,SUM( rv_ly) AS rv_ly ,SUM( rv_usd) AS rv_usd ,SUM( rv_usd_ly) AS rv_usd_ly ,SUM( demand) AS demand ,SUM( demand_ly) AS demand_ly FROM mrdw_dem_currency a WHERE 100 * yr + mn IN ( &FutureMN3. ) GROUP BY a.marsha, a.mcpref, a.market_segment, a.wdwe;",Demand Strategy Data Pullv4.sas
" CREATE TABLE mrdw_dem_OTB3 AS select a.marsha, a.mcpref, a.market_segment, a.wdwe, 'O3' AS timeframe ,SUM( rn) AS rn ,SUM( rn_ly) AS rn_ly ,SUM( rv) AS rv ,SUM( rv_ly) AS rv_ly ,SUM( rv_usd) AS rv_usd ,SUM( rv_usd_ly) AS rv_usd_ly ,SUM( demand) AS demand ,SUM( demand_ly) AS demand_ly FROM mrdw_dem_currency a WHERE 100 * yr + mn IN ( &FutureMN4. ) GROUP BY a.marsha, a.mcpref, a.market_segment, a.wdwe;",Demand Strategy Data Pullv4.sas
 CREATE TABLE final_combined1 AS ( SELECT  *  FROM mrdw_dem_ytd UNION ALL SELECT  *  FROM mrdw_dem_mn UNION ALL SELECT  *  FROM mrdw_dem_L3 UNION ALL SELECT  *  FROM mrdw_dem_L12 UNION ALL SELECT  *  FROM mrdw_dem_F1 UNION ALL SELECT  *  FROM mrdw_dem_F3 UNION ALL SELECT  *  FROM mrdw_dem_OTB1 UNION ALL SELECT  *  FROM mrdw_dem_OTB2 UNION ALL SELECT  *  FROM mrdw_dem_OTB3);,Demand Strategy Data Pullv4.sas
 CREATE TABLE marsha AS select distinct marsha FROM final_combined1;,Demand Strategy Data Pullv4.sas
" CREATE TABLE mcpref AS select distinct mcpref, market_segment FROM final_combined1;",Demand Strategy Data Pullv4.sas
" CREATE TABLE wdwe AS select distinct wdwe, timeframe FROM final_combined1;",Demand Strategy Data Pullv4.sas
" CREATE TABLE spacing2 AS select a.marsha, b.mcpref, b.market_segment, c.wdwe, c.timeframe FROM marsha AS a, mcpref AS b, wdwe AS c;",Demand Strategy Data Pullv4.sas
" CREATE TABLE final_combined2 AS select a.*, b.rn, b.rv, b.rn_ly, b.rv_ly, b.rv_usd, b.rv_usd_ly, b.demand, b.demand_ly FROM spacing2 AS a LEFT JOIN final_combined1 AS b ON a.marsha=b.marsha AND a.wdwe=b.wdwe AND a.mcpref=b.mcpref AND a.timeframe=b.timeframe;",Demand Strategy Data Pullv4.sas
" CREATE TABLE days AS select a.* , CASE WHEN a.timeframe IN ( 'YTD') AND a.wdwe IN ( 'WD') THEN ( DATEDIFF(  'week.1', &d3., &d1. )+DATEDIFF(  'week.2', &d3., &d1. )+DATEDIFF(  'week.3', &d3., &d1. )+DATEDIFF(  'week.4', &d3., &d1. )+DATEDIFF(  'week.5', &d3., &d1. )) when a.timeframe IN ( 'YTD') AND a.wdwe IN ( 'WE') THEN ( DATEDIFF( 'week.6', &d3., &d1. )+DATEDIFF(  'week.7', &d3., &d1. )) when a.timeframe IN ( 'MN') AND a.wdwe IN ( 'WD') THEN ( DATEDIFF(  'week.1', &d0., &d1. )+DATEDIFF(  'week.2', &d0., &d1. )+DATEDIFF(  'week.3', &d0., &d1. )+DATEDIFF(  'week.4', &d0., &d1. )+DATEDIFF(  'week.5', &d0., &d1. )) when a.timeframe IN ( 'MN') AND a.wdwe IN ( 'WE') THEN ( DATEDIFF( 'week.6', &d0., &d1. )+DATEDIFF(  'week.7', &d0., &d1. )) when a.timeframe IN ( 'L3') AND a.wdwe IN ( 'WD') THEN ( DATEDIFF(  'week.1', &d2., &d1. )+DATEDIFF(  'week.2', &d2., &d1. )+DATEDIFF(  'week.3', &d2., &d1. )+DATEDIFF(  'week.4', &d2., &d1. )+DATEDIFF(  'week.5', &d2., &d1. )) when a.timeframe IN ( 'L3') AND a.wdwe IN ( 'WE') THEN ( DATEDIFF( 'week.6', &d2., &d1. )+DATEDIFF(  'week.7', &d2., &d1. )) when a.timeframe IN ( 'L12') AND a.wdwe IN ( 'WD') THEN ( DATEDIFF(  'week.1', &d12., &d1. )+DATEDIFF(  'week.2', &d12., &d1. )+DATEDIFF(  'week.3', &d12., &d1. )+DATEDIFF(  'week.4', &d12., &d1. )+DATEDIFF(  'week.5', &d12., &d1. )) when a.timeframe IN ( 'L12') AND a.wdwe IN ( 'WE') THEN ( DATEDIFF( 'week.6', &d12., &d1. )+DATEDIFF(  'week.7', &d12., &d1. )) when a.timeframe IN ( 'F1') AND a.wdwe IN ( 'WD') THEN ( DATEDIFF(  'week.1', &d1., &f1. )+DATEDIFF(  'week.2', &d1., &f1. )+DATEDIFF(  'week.3', &d1., &f1. )+DATEDIFF(  'week.4', &d1., &f1. )+DATEDIFF(  'week.5', &d1., &f1. )) when a.timeframe IN ( 'F1') AND a.wdwe IN ( 'WE') THEN ( DATEDIFF( 'week.6', &d1., &f1. )+DATEDIFF(  'week.7', &d1., &f1. )) when a.timeframe IN ( 'F3') AND a.wdwe IN ( 'WD') THEN ( DATEDIFF(  'week.1', &d1., &f3. )+DATEDIFF(  'week.2', &d1., &f3. )+DATEDIFF(  'week.3', &d1., &f3. )+DATEDIFF(  'week.4', &d1., &f3. )+DATEDIFF(  'week.5', &d1., &f3. )) when a.timeframe IN ( 'F3') AND a.wdwe IN ( 'WE') THEN ( DATEDIFF( 'week.6', &d1., &f3. )+DATEDIFF(  'week.7', &d1., &f3. )) when a.timeframe IN ( 'O1') AND a.wdwe IN ( 'WD') THEN ( DATEDIFF(  'week.1', &d1., &f1. )+DATEDIFF(  'week.2', &d1., &f1. )+DATEDIFF(  'week.3', &d1., &f1. )+DATEDIFF(  'week.4', &d1., &f1. )+DATEDIFF(  'week.5', &d1., &f1. )) when a.timeframe IN ( 'O1') AND a.wdwe IN ( 'WE') THEN ( DATEDIFF( 'week.6', &d1., &f1. )+DATEDIFF(  'week.7', &d1., &f1. )) when a.timeframe IN ( 'O2') AND a.wdwe IN ( 'WD') THEN ( DATEDIFF(  'week.1', &f1., &f2. )+DATEDIFF(  'week.2', &f1., &f2. )+DATEDIFF(  'week.3', &f1., &f2. )+DATEDIFF(  'week.4', &f1., &f2. )+DATEDIFF(  'week.5', &f1., &f2. )) when a.timeframe IN ( 'O2') AND a.wdwe IN ( 'WE') THEN ( DATEDIFF( 'week.6', &f1., &f2. )+DATEDIFF(  'week.7', &f1., &f2. )) when a.timeframe IN ( 'O3') AND a.wdwe IN ( 'WD') THEN ( DATEDIFF(  'week.1', &f2., &f3. )+DATEDIFF(  'week.2', &f2., &f3. )+DATEDIFF(  'week.3', &f2., &f3. )+DATEDIFF(  'week.4', &f2., &f3. )+DATEDIFF(  'week.5', &f2., &f3. )) when a.timeframe IN ( 'O3') AND a.wdwe IN ( 'WE') THEN ( DATEDIFF( 'week.6', &f2., &f3. )+DATEDIFF(  'week.7', &f2., &f3. )) END AS no_days , CASE WHEN a.timeframe IN ( 'YTD') AND a.wdwe IN ( 'WD') THEN ( DATEDIFF(  'week.1', &d3_ly., &d1_ly. )+DATEDIFF(  'week.2', &d3_ly., &d1_ly. )+DATEDIFF(  'week.3', &d3_ly., &d1_ly. )+DATEDIFF(  'week.4', &d3_ly., &d1_ly. )+DATEDIFF(  'week.5', &d3_ly., &d1_ly. )) when a.timeframe IN ( 'YTD') AND a.wdwe IN ( 'WE') THEN ( DATEDIFF( 'week.6', &d3_ly., &d1_ly. )+DATEDIFF(  'week.7', &d3_ly., &d1_ly. )) when a.timeframe IN ( 'MN') AND a.wdwe IN ( 'WD') THEN ( DATEDIFF(  'week.1', &d0_ly., &d1_ly. )+DATEDIFF(  'week.2', &d0_ly., &d1_ly. )+DATEDIFF(  'week.3', &d0_ly., &d1_ly. )+DATEDIFF(  'week.4', &d0_ly., &d1_ly. )+DATEDIFF(  'week.5', &d0_ly., &d1_ly. )) when a.timeframe IN ( 'MN') AND a.wdwe IN ( 'WE') THEN ( DATEDIFF( 'week.6', &d0_ly., &d1_ly. )+DATEDIFF(  'week.7', &d0_ly., &d1_ly. )) when a.timeframe IN ( 'L3') AND a.wdwe IN ( 'WD') THEN ( DATEDIFF(  'week.1', &d2_ly., &d1_ly. )+DATEDIFF(  'week.2', &d2_ly., &d1_ly. )+DATEDIFF(  'week.3', &d2_ly., &d1_ly. )+DATEDIFF(  'week.4', &d2_ly., &d1_ly. )+DATEDIFF(  'week.5', &d2_ly., &d1_ly. )) when a.timeframe IN ( 'L3') AND a.wdwe IN ( 'WE') THEN ( DATEDIFF( 'week.6', &d2_ly., &d1_ly. )+DATEDIFF(  'week.7', &d2_ly., &d1_ly. )) when a.timeframe IN ( 'L12') AND a.wdwe IN ( 'WD') THEN ( DATEDIFF(  'week.1', &d12_ly., &d1_ly. )+DATEDIFF(  'week.2', &d12_ly., &d1_ly. )+DATEDIFF(  'week.3', &d12_ly., &d1_ly. )+DATEDIFF(  'week.4', &d12_ly., &d1_ly. )+DATEDIFF(  'week.5', &d12_ly., &d1_ly. )) when a.timeframe IN ( 'L12') AND a.wdwe IN ( 'WE') THEN ( DATEDIFF( 'week.6', &d12_ly., &d1_ly. )+DATEDIFF(  'week.7', &d12_ly., &d1_ly. )) when a.timeframe IN ( 'F1') AND a.wdwe IN ( 'WD') THEN ( DATEDIFF(  'week.1', &d1_ly., &f1_ly. )+DATEDIFF(  'week.2', &d1_ly., &f1_ly. )+DATEDIFF(  'week.3', &d1_ly., &f1_ly. )+DATEDIFF(  'week.4', &d1_ly., &f1_ly. )+DATEDIFF(  'week.5', &d1_ly., &f1_ly. )) when a.timeframe IN ( 'F1') AND a.wdwe IN ( 'WE') THEN ( DATEDIFF( 'week.6', &d1_ly., &f1_ly. )+DATEDIFF(  'week.7', &d1_ly., &f1_ly. )) when a.timeframe IN ( 'F3') AND a.wdwe IN ( 'WD') THEN ( DATEDIFF(  'week.1', &d1_ly., &f3_ly. )+DATEDIFF(  'week.2', &d1_ly., &f3_ly. )+DATEDIFF(  'week.3', &d1_ly., &f3_ly. )+DATEDIFF(  'week.4', &d1_ly., &f3_ly. )+DATEDIFF(  'week.5', &d1_ly., &f3_ly. )) when a.timeframe IN ( 'F3') AND a.wdwe IN ( 'WE') THEN ( DATEDIFF( 'week.6', &d1_ly., &f3_ly. )+DATEDIFF(  'week.7', &d1_ly., &f3_ly. )) when a.timeframe IN ( 'O1') AND a.wdwe IN ( 'WD') THEN ( DATEDIFF(  'week.1', &d1_ly., &f1_ly. )+DATEDIFF(  'week.2', &d1_ly., &f1_ly. )+DATEDIFF(  'week.3', &d1_ly., &f1_ly. )+DATEDIFF(  'week.4', &d1_ly., &f1_ly. )+DATEDIFF(  'week.5', &d1_ly., &f1_ly. )) when a.timeframe IN ( 'O1') AND a.wdwe IN ( 'WE') THEN ( DATEDIFF( 'week.6', &d1_ly., &f1_ly. )+DATEDIFF(  'week.7', &d1_ly., &f1_ly. )) when a.timeframe IN ( 'O2') AND a.wdwe IN ( 'WD') THEN ( DATEDIFF(  'week.1', &f1_ly., &f2_ly. )+DATEDIFF(  'week.2', &f1_ly., &f2_ly. )+DATEDIFF(  'week.3', &f1_ly., &f2_ly. )+DATEDIFF(  'week.4', &f1_ly., &f2_ly. )+DATEDIFF(  'week.5', &f1_ly., &f2_ly. )) when a.timeframe IN ( 'O2') AND a.wdwe IN ( 'WE') THEN ( DATEDIFF( 'week.6', &f1_ly., &f2_ly. )+DATEDIFF(  'week.7', &f1_ly., &f2_ly. )) when a.timeframe IN ( 'O3') AND a.wdwe IN ( 'WD') THEN ( DATEDIFF(  'week.1', &f2_ly., &f3_ly. )+DATEDIFF(  'week.2', &f2_ly., &f3_ly. )+DATEDIFF(  'week.3', &f2_ly., &f3_ly. )+DATEDIFF(  'week.4', &f2_ly., &f3_ly. )+DATEDIFF(  'week.5', &f2_ly., &f3_ly. )) when a.timeframe IN ( 'O3') AND a.wdwe IN ( 'WE') THEN ( DATEDIFF( 'week.6', &f2_ly., &f3_ly. )+DATEDIFF(  'week.7', &f2_ly., &f3_ly. )) END AS no_days_ly FROM final_combined2 a;",Demand Strategy Data Pullv4.sas
" CREATE TABLE demand_mrdw_combined2 AS select a.marsha, a.mcpref, a.market_segment, a.wdwe, a.timeframe, a.no_days, a.rn, a.rv, a.rn_ly, a.rv_ly, a.rv_usd, a.rv_usd_ly , a.demand, a.demand_ly, a.no_days_ly , b.brnd , CASE WHEN b.brnd IN ( 'FS','BR','GE','DE') THEN 'FS' when b.brnd IN ( 'CY','FI','SH','AR','OX') THEN 'SS' when b.brnd IN ( 'RI','TS') THEN 'ES' ELSE b.brnd END AS agg_brnd , b.mf, b.acomp, b.market_name, b.country, b.division, b.region, b.interface , b.domint, b.rd, b.HCLASS2, b.hcap*no_days AS hcap, &yr. * 100 + &MN. AS CurYRMN, b.GRMRS_RevMgr, b.GRMRS_TmLdr , b.hcap*no_days_ly AS hcap_ly , b.owner, b.state, b.manager, b.ADRM, b.Market_Leader, b.Revenue_Analyst, b.SFO_Market, b.SFO_Area, b.Host_Comp AS HostComp , b.AVP, b.rd AS AD, b.sotb, b.misw_flag FROM days AS a INNER JOIN prop_misw AS b ON a.marsha = b.marsha WHERE b.marsha not IN ( 'LONRT' 'MADRT' 'WHRLH') AND b.openflag = 'Y' ;",Demand Strategy Data Pullv4.sas
" CREATE TABLE demand_mrdw_combined3 AS ( SELECT  *  , FORMAT(segment, VARCHAR(25)) AS segment , FORMAT(majorseg, VARCHAR(25)) AS majorseg , RTRIM( segment)||'-'||RTRIM( market_segment ) AS seg_label , CASE WHEN  mcpref IN ( '10' '12' '30' '34' '37' '20' '23' '24' '21', '22') AND wdwe='WD'  THEN '1 NQ-WD' WHEN   mcpref IN ( '10' '12' '30' '37' '34' '20' '23' '24' '21', '22') AND wdwe='WE'  THEN '2 NQ-WE' WHEN   mcpref IN ( '15' '17' '18')  THEN '3 SpCorp' WHEN   mcpref='16'  THEN '4 Govt' WHEN   mcpref IN ( '36' '39')  THEN '5 Echan Opaque/Package' WHEN   mcpref='GR'  THEN '7 Group' WHEN   mcpref='CN'  THEN '8 Contract' WHEN   SUBSTRING( mcpref,1,1) = '5'  THEN '8 Contract' WHEN   mcpref='62'  THEN '9 Comp' ELSE '6 Other Tran' END AS segment, CASE WHEN  interface<>2  THEN 'N' END AS acomp, CASE WHEN  mcpref='GR'  THEN 'Group' WHEN   SUBSTRING( mcpref,1,1) = '5'  THEN 'Contract' WHEN   mcpref='CN'  THEN 'Contract' WHEN   mcpref='62'  THEN 'Comp' ELSE 'Transient' END AS majorseg FROM demand_mrdw_combined2 );",Demand Strategy Data Pullv4.sas
 CREATE TABLE DemSOB.DemStrat AS ( SELECT  *  FROM demand_mrdw_combined3 );,Demand Strategy Data Pullv4.sas
"CREATE TABLE ""DemStrat"" AS ( SELECT *  FROM DemSOB.DemStrat WHERE  division IN  'AM' AND timeframe not IN  'O1', 'O2', 'O3', 'L12') ;",Demand Strategy Data Pullv4.sas
" CREATE TABLE adj_submissions AS ( SELECT  *  , _n_ AS row_N , LTRIM( RTRIM( quote) ) AS quote  FROM adj_submissions  WHERE row_id<>:'');",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_MA_Validation.sas
 CREATE TABLE fx_conversion AS  (  select * FROM AW_TGT_BUS_DBO.TREASFX_FCST_HIST FX WHERE FX.ASOF_YRMO =EXTRACT(YEAR FROM CURRENT DATE - 1 YEAR) * 100 + 12  ) ;,DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_MA_Validation.sas
" CREATE TABLE quotename AS  (  select distinct quote, quote_name FROM AW_GSO_PRD.MI_SW_EVO_GRP_ACH_EADS_GSO_FINAL  ) ;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_MA_Validation.sas
SELECT DISTINCT * FROM quotename ORDER BY quote;,DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_MA_Validation.sas
" CREATE TABLE prelim_prod AS  (  select GSO_ROSTER_KEY, YEAR, MONTH, ASOF_YRMO, GSO_CONTINENT, GSO_OFFICE, GSO_SUB_REGION, SEGMENT, SUB_SEGMENT, POSITION_ID, GOAL_TYPE, ROSTER_ACCOUNT_NAME, SUBMITTED_ACCOUNT_NAME, GOALED_ACCOUNT_ID, GOALED_ACCOUNT_ID_SOURCE, RELTIO_ID, DUNS, INDUSTRY, EID, EID_PROSPECT, ISAC_POSITION_ID, GSO_DB_ID, ASSOCIATE_ROLE_TYPE, POSITION_TYPE, GSO_ACCOUNT_ROLE, DEPLOYMENT_PARAMETER, DEPLOYMENT_ISO, DEPLOYMENT_CITY, DEPLOYMENT_STRATEGY_NOTES, LEADER_POSITION_ID, GSO_DB_ID_LEADER, EID_LEADER, SVP_POSITION_ID, SVP_NAME, VP_POSITION_ID, VP_NAME, LEADER_AREA_TEAM_POSITION_ID, LEADER_AREA_TEAM, SUB_LEADER_1_POSITION_ID, SUB_LEADER_1, SUB_LEADER_2_POSITION_ID, SUB_LEADER_2, QUOTE, QUOTE_NAME, QUOTE_STATUS, MARSHA, BRND_NAME, BRND, DATA_SOURCE, CHAIN, QUOTE_ACCOUNT_REGION, QUOTE_ACCOUNT_COUNTRY, QUOTE_ACCOUNT_COUNTRY_ISO, QUOTE_ACCOUNT_CITY, ULTIMATE_PARENT_URI, ULTIMATE_PARENT_ACCOUNT_NM, ULTIMATE_PARENT_DUNS, IMMEDIATE_PARENT_ACCOUNT_NM, IMMEDIATE_PARENT_DUNS, IMMEDIATE_PARENT_URI, CHILD_ACCOUNT_NM, CHILD_DUNS, CHILD_URI, PROSPECT_INCLUDE, INCLUDE, INCLUDE_REASON, PRELIM_ACTION, PRELIM_COMMENTS, REFERRED_BY_EID, PRIMARY_OPPTY_EID, PROSPECT_QUOTE_FLAG, PROSPECT_INCLUDE_REASON, SUM( NET_QT_CNT) AS NET_QT_CNT, SUM( RN) AS RN, SUM( RV) AS RV, SUM( LOCAL_RV) AS local_rv, SUM( COMPUTED_RV) AS computed_rv FROM (  select GSO_ROSTER_KEY, YEAR, MONTH, 201906 AS ASOF_YRMO, GSO_CONTINENT, GSO_OFFICE, GSO_SUB_REGION, SEGMENT, SUB_SEGMENT, POSITION_ID, GOAL_TYPE, ROSTER_ACCOUNT_NAME, SUBMITTED_ACCOUNT_NAME, GOALED_ACCOUNT_ID, GOALED_ACCOUNT_ID_SOURCE, RELTIO_ID, DUNS, INDUSTRY, EID, EID_PROSPECT, ISAC_POSITION_ID, GSO_DB_ID, ASSOCIATE_ROLE_TYPE, POSITION_TYPE, GSO_ACCOUNT_ROLE, DEPLOYMENT_PARAMETER, DEPLOYMENT_ISO, DEPLOYMENT_CITY, '' AS DEPLOYMENT_STRATEGY_NOTES, LEADER_POSITION_ID, GSO_DB_ID_LEADER, EID_LEADER, SVP_POSITION_ID, SVP_NAME, VP_POSITION_ID, VP_NAME, LEADER_AREA_TEAM_POSITION_ID, LEADER_AREA_TEAM, SUB_LEADER_1_POSITION_ID, SUB_LEADER_1, SUB_LEADER_2_POSITION_ID, SUB_LEADER_2, QUOTE, '' AS QUOTE_NAME, QUOTE_STATUS, MARSHA, BRND_NAME, BRND, DATA_SOURCE, CHAIN, '' AS QUOTE_ACCOUNT_REGION, '' AS QUOTE_ACCOUNT_COUNTRY, '' AS QUOTE_ACCOUNT_COUNTRY_ISO, '' AS QUOTE_ACCOUNT_CITY, ULTIMATE_PARENT_URI, ULTIMATE_PARENT_ACCOUNT_NM, ULTIMATE_PARENT_DUNS, '' AS IMMEDIATE_PARENT_ACCOUNT_NM, '' AS IMMEDIATE_PARENT_DUNS, '' AS IMMEDIATE_PARENT_URI, '' AS CHILD_ACCOUNT_NM, '' AS CHILD_DUNS, '' AS CHILD_URI, '' AS PROSPECT_INCLUDE, INCLUDE, '' AS INCLUDE_REASON, 'Prelim_Prod' AS PRELIM_ACTION, '' AS PRELIM_COMMENTS, '' AS REFERRED_BY_EID, '' AS PRIMARY_OPPTY_EID, '' AS PROSPECT_QUOTE_FLAG, '' AS PROSPECT_INCLUDE_REASON, SUM( NET_QT_CNT) AS NET_QT_CNT, SUM( RN) AS RN, SUM( RV) AS RV, SUM( LOCAL_RV) AS local_rv, SUM( COMPUTED_RV) AS computed_rv FROM AW_GSO_PRD.MI_SW_EVO_GRP_ACH_EADS_GSO_FINAL WHERE prelim_action IN ( 'Prelim_Prod','Manual_Adj') AND ( segment<>'Prospect' OR ( PROSPECT_INCLUDE='YES' AND segment='Prospect')) AND ( year=2018 OR year=2019) GROUP BY GSO_ROSTER_KEY, YEAR, MONTH, ASOF_YRMO, GSO_CONTINENT, GSO_OFFICE, GSO_SUB_REGION, SEGMENT, SUB_SEGMENT, POSITION_ID, GOAL_TYPE, ROSTER_ACCOUNT_NAME, SUBMITTED_ACCOUNT_NAME, GOALED_ACCOUNT_ID, GOALED_ACCOUNT_ID_SOURCE, RELTIO_ID, DUNS, INDUSTRY, EID, EID_PROSPECT, ISAC_POSITION_ID, GSO_DB_ID, ASSOCIATE_ROLE_TYPE, POSITION_TYPE, GSO_ACCOUNT_ROLE, DEPLOYMENT_PARAMETER, DEPLOYMENT_ISO, DEPLOYMENT_CITY, DEPLOYMENT_STRATEGY_NOTES, LEADER_POSITION_ID, GSO_DB_ID_LEADER, EID_LEADER, SVP_POSITION_ID, SVP_NAME, VP_POSITION_ID, VP_NAME, LEADER_AREA_TEAM_POSITION_ID, LEADER_AREA_TEAM, SUB_LEADER_1_POSITION_ID, SUB_LEADER_1, SUB_LEADER_2_POSITION_ID, SUB_LEADER_2, QUOTE, QUOTE_NAME, QUOTE_STATUS, MARSHA, BRND_NAME, BRND, DATA_SOURCE, CHAIN, QUOTE_ACCOUNT_REGION, QUOTE_ACCOUNT_COUNTRY, QUOTE_ACCOUNT_COUNTRY_ISO, QUOTE_ACCOUNT_CITY, ULTIMATE_PARENT_URI, ULTIMATE_PARENT_ACCOUNT_NM, ULTIMATE_PARENT_DUNS, PROSPECT_INCLUDE, IMMEDIATE_PARENT_ACCOUNT_NM, IMMEDIATE_PARENT_DUNS, IMMEDIATE_PARENT_URI, CHILD_ACCOUNT_NM, CHILD_DUNS, CHILD_URI, INCLUDE, INCLUDE_REASON, PRELIM_ACTION, PRELIM_COMMENTS, REFERRED_BY_EID, PRIMARY_OPPTY_EID, PROSPECT_QUOTE_FLAG, PROSPECT_INCLUDE_REASON ) GROUP BY GSO_ROSTER_KEY, YEAR, MONTH, ASOF_YRMO, GSO_CONTINENT, GSO_OFFICE, GSO_SUB_REGION, SEGMENT, SUB_SEGMENT, POSITION_ID, GOAL_TYPE, ROSTER_ACCOUNT_NAME, SUBMITTED_ACCOUNT_NAME, GOALED_ACCOUNT_ID, GOALED_ACCOUNT_ID_SOURCE, RELTIO_ID, DUNS, INDUSTRY, EID, EID_PROSPECT, ISAC_POSITION_ID, GSO_DB_ID, ASSOCIATE_ROLE_TYPE, POSITION_TYPE, GSO_ACCOUNT_ROLE, DEPLOYMENT_PARAMETER, DEPLOYMENT_ISO, DEPLOYMENT_CITY, DEPLOYMENT_STRATEGY_NOTES, LEADER_POSITION_ID, GSO_DB_ID_LEADER, EID_LEADER, SVP_POSITION_ID, SVP_NAME, VP_POSITION_ID, VP_NAME, LEADER_AREA_TEAM_POSITION_ID, LEADER_AREA_TEAM, SUB_LEADER_1_POSITION_ID, SUB_LEADER_1, SUB_LEADER_2_POSITION_ID, SUB_LEADER_2, QUOTE, QUOTE_NAME, QUOTE_STATUS, MARSHA, BRND_NAME, BRND, DATA_SOURCE, CHAIN, QUOTE_ACCOUNT_REGION, QUOTE_ACCOUNT_COUNTRY, QUOTE_ACCOUNT_COUNTRY_ISO, QUOTE_ACCOUNT_CITY, ULTIMATE_PARENT_URI, ULTIMATE_PARENT_ACCOUNT_NM, ULTIMATE_PARENT_DUNS, PROSPECT_INCLUDE, IMMEDIATE_PARENT_ACCOUNT_NM, IMMEDIATE_PARENT_DUNS, IMMEDIATE_PARENT_URI, CHILD_ACCOUNT_NM, CHILD_DUNS, CHILD_URI, INCLUDE, INCLUDE_REASON, PRELIM_ACTION, PRELIM_COMMENTS, REFERRED_BY_EID, PRIMARY_OPPTY_EID, PROSPECT_QUOTE_FLAG, PROSPECT_INCLUDE_REASON  ) ;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_MA_Validation.sas
" CREATE TABLE prelim_prod_final AS select b.quote_name, a.* FROM prelim_prod a LEFT JOIN quotename b ON ( a.quote=b.quote ) ;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_MA_Validation.sas
" CREATE TABLE all_GSO_quotes AS  (  select * FROM AW_GSO_PRD.MI_SW_EVO_GRP_ACH_EADS_GSO_FINAL WHERE year IN ( 2018,2019) ) ;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_MA_Validation.sas
 CREATE TABLE non_prelim_prod4 AS select * FROM all_GSO_quotes WHERE quote not IN ( select distinct quote FROM prelim_prod_final ) ;,DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_MA_Validation.sas
 CREATE TABLE all_prelim AS ( SELECT  *  FROM non_prelim_prod4 UNION ALL SELECT  *  FROM prelim_prod_final);,DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_MA_Validation.sas
" CREATE TABLE all_quotes AS  (  select distinct quote, year, month FROM AW_GSO_PRD.MI_SW_EVO_GROUP_EADS ) ;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_MA_Validation.sas
" CREATE TABLE prelim_vs_Adj AS select a.*, b.row_id FROM all_prelim a INNER JOIN adj_submissions b ON ( a.quote=b.quote ) ;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_MA_Validation.sas
" CREATE TABLE global_quotes AS  (  select distinct quote FROM AW_GSO_PRD.MI_SW_EVO_GROUP_EADS WHERE year IN ( 2017,2018,2019) UNION select distinct quote FROM AW_GSO_STG.MI_GROUP_EADS_PROSPECT ) ;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_MA_Validation.sas
 CREATE TABLE gso_quotes AS  (  select distinct quote FROM AW_GSO_PRD.MI_SW_EVO_GROUP_EADS_GSO UNION select distinct quote FROM AW_GSO_STG.MI_GROUP_EADS_GSO_PROSPECT ) ;,DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_MA_Validation.sas
" CREATE TABLE ach_quotes AS  (  select distinct quote FROM AW_GSO_PRD.MI_SW_EVO_GRP_ACH_EADS_GSO_FINAL WHERE ( segment <> 'Prospect' AND Prelim_action IN ( 'Prelim_Prod','Manual_Adj')) OR ( segment='Prospect' AND Prospect_include='YES' AND Prelim_action IN ( 'Prelim_Prod','Manual_Adj')) ) ;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_MA_Validation.sas
" CREATE TABLE gso_group_roster AS  (  select * FROM AW_GSO_PRD.GSO_ROSTER_BY_MONTH WHERE goal_type='Group' AND ( nvl( EXCLUDE_FLAG,'')='' OR nvl( EXCLUDE_FLAG,'')='N') ) ;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_MA_Validation.sas
" CREATE TABLE parse_EADS AS  (  Select a.RPT_METRIC, A.month, A.year, A.qtr, A.QUOTE, A.MARSHA ""MARSHA_CD"", A.DATA_SOURCE ""SYS_RECORD"", A.QUOTE_NAME, A.QUOTE_ORIGINAL_DEFINITE_DATE ""ORIG_DEF_DATE"", A.QUOTE_ARRIVAL_DATE ""ARV_DATE"", A.RN ""ORIG_DEF_RM_NTS"", A.COMPUTED_RV ""ORIG_DEF_RM_REV"", A.CURRENCY_CD ""QUOTE_CUR_CD"", A.LOCAL_RV, A.PROPERTY_NM ""Prop_Name"", A.BRND ""Brand_Code"", a.peak ""Peak_RN"", a.REFERRED_BY_EID, a.Quote_Originating_Mgr_EID, a.PROP_REGION ""Hotel_continent"", a.PROP_COUNTRY ""Hotel_Country"", A.QUOTE_STATUS, a.QUOTE_ACCOUNT_NM ""End_User_Account_Name"", a.QUOTE_ACCOUNT_REGION ""End_User_Account_Continent"", a.QUOTE_ACCOUNT_COUNTRY ""End_User_Account_Country"", a.quote_account_country_iso ""end_user_account_ISO"", a.QUOTE_ACCOUNT_CITY ""End_User_Account_City"", a.SOURCE_ID ""End_User_Account_Source_ID"", b.ULTIMATE_PARENT_ACCOUNT_NM ""End_User_Account_Parent"", b.ULTIMATE_PARENT_URI ""End_User_Account_Parent_ID"", a.QUOTE_INT_NM ""Intermediary_Account_Name"", a.QUOTE_INT_REGION ""Intermediary_Account_Continent"", a.QUOTE_INT_COUNTRY ""Intermediary_Account_Country"", a.quote_int_country_iso ""int_account_ISO"", a.QUOTE_INT_CITY ""Intermediary_Account_City"", a.SOURCE_ID_INT ""Intermediary_Account_Source_ID"", b.ULTIMATE_PARENT_ACCOUNT_NM_INT ""Intermediary_Account_Parent"", b.ULTIMATE_PARENT_URI_INT ""Intermediary_Account_Parent_ID"" FROM AW_GSO_PRD.MI_SW_EVO_GROUP_EADS a LEFT JOIN AW_GSO_PRD.MI_SW_EVO_GROUP_EADS_GSO b ON ( a.QUOTE= b.QUOTE AND a.QUOTE_STATUS = b.QUOTE_STATUS), ( SELECT ROW_NUMBER( ) OVER( Partition by quote ORDER BY year desc , month desc ) AS list, quote, quote_status, year , month FROM AW_GSO_PRD.MI_SW_EVO_GROUP_EADS WHERE quote IN ( %quotelist)) c WHERE a.QUOTE = c.quote AND c.list = 1 AND a.QUOTE_STATUS = c.quote_status ORDER BY a.QUOTE_ORIGINAL_DEFINITE_DATE desc ) ;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_MA_Validation.sas
 CREATE TABLE get_srw AS select distinct quote FROM adj_submissions WHERE quote not IN ( select distinct quote FROM parse_EADS ) ;,DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_MA_Validation.sas
" CREATE TABLE SRW_Query AS  (  SELECT opty_created_by.employee_id  AS REFERRED_BY_EID, orgmgr.employee_id AS Quote_Originating_Mgr_EID, opportunity.group_type_cd  AS opty_group_type, opportunity.sfa_opportunity_id AS sfa_opty_id, opportunity.opportunity_number AS opty_number, opportunity.ci_created_dt AS opty_created_date, T8.currency_cd  AS CURRENCY_CD, coguda00.ci_account_id AS SOURCE_ID, coguda00.quote_number  AS Quote , coguda00.opty_type_cd  AS Oppty_type, extract ( year FROM ( coguda00.orig_def_dt))  AS Quote_Original_Definite_Year, orgmgr.last_nm || ', ' || orgmgr.first_nm AS Quote_Originating_Mgr, opptymgr.last_nm || ', ' || opptymgr.first_nm AS Oppty_Originating_Mgr, opty_created_by.last_nm || ', ' || opty_created_by.first_nm AS Opptycreatedby, quote_created_by.last_nm || ', ' || quote_created_by.first_nm AS Quotecreatedby, Quote_Account.site_account_nm  AS QUOTE_ACCOUNT_NM , Quote_Account.address1 AS Quote_Account_Address, Quote_Account.address_city AS QUOTE_ACCOUNT_CITY, Quote_Account.address_state  AS Quote_Account_State, Quote_Account.address_province  AS Quote_Account_Province, Quote_Account.address_postal_cd AS Quote_Account_Postal_Code, Quote_Account.address_Country AS QUOTE_ACCOUNT_COUNTRY, coguda00.internal_channel_cd  AS Quote_Account_type, coguda00.arrival_dt  AS QUOTE_ARRIVAL_DATE , coguda00.quote_nm  AS Quote_Name , coguda00.status_description  AS Quote_Status , coguda00.status_change_dt  AS Quote_Status_Date , coguda00.orig_def_dt  AS QUOTE_ORIGINAL_DEFINITE_DATE , coguda00.ci_created_dt AS Quote_Create_Date, coguda00.departure_dt AS Quote_Departure_Date, extract ( year FROM ( coguda00.status_change_dt))  AS Quote_Status_year, extract ( month FROM ( coguda00.status_change_dt))  AS Quote_Status_month, extract ( quarter FROM ( coguda00.status_change_dt))  AS Quote_Status_Quarter, edw_dim_date_Quote_OD.cal_month_num  AS Quote_Original_Definite_Month , edw_dim_date_Quote_OD.cal_quarter_num  AS Quote_Original_Definite_Quarter , coguda60.marsha_cd  AS MARSHA , coguda60.property_nm  AS PROPERTY_NM , T8.peak_rm_ngts  AS peak , T8.proj_peak_rm_ngts AS Proj_Peak_Rooms, T8.actual_peak_rm_ngts AS Actual_Peak_Rooms, t8.number_of_ngts AS Quote_num_nights, T8.orig_def_est_sleeping_rm_ngts  AS odblocked_rn , T8.orig_def_est_sleeping_rm_rev * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)) AS odblocked_rv , ( ( ( T8.orig_def_est_beverage_rev + T8.orig_def_est_beverage_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)) + ( T8.orig_def_est_food_rev + T8.orig_def_est_food_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0))) + ( ( T8.orig_def_est_labor_rev + T8.orig_def_est_labor_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)) + ( T8.orig_def_est_misc_rev + T8.orig_def_est_misc_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)))) + ( ( ( T8.orig_def_est_other_rev + T8.orig_def_est_other_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)) + ( T8.orig_def_est_rental_rev + T8.orig_def_est_rental_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0))) + ( ( T8.orig_def_est_av_rev + T8.orig_def_est_av_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)) + T8.orig_def_est_sleeping_rm_rev * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)))) AS odblocked_revtot , T8.orig_def_proj_sleeping_rm_ngts  AS odproj_rn , T8.orig_def_proj_sleeping_rm_rev * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)) AS odproj_rv , ( ( ( T8.orig_def_est_beverage_rev + T8.orig_def_est_beverage_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)) + ( T8.orig_def_est_food_rev + T8.orig_def_est_food_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0))) + ( ( T8.orig_def_est_labor_rev + T8.orig_def_est_labor_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)) + ( T8.orig_def_est_misc_rev + T8.orig_def_est_misc_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)))) + ( ( ( T8.orig_def_est_other_rev + T8.orig_def_est_other_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)) + ( T8.orig_def_est_rental_rev + T8.orig_def_est_rental_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0))) + ( ( T8.orig_def_est_av_rev + T8.orig_def_est_av_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)) + T8.orig_def_proj_sleeping_rm_rev * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)))) AS odproj_revtot , T8.est_sleeping_rm_ngts  AS blocked_rn , T8.est_sleeping_rm_rev * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)) AS blocked_rv , ( ( ( T8.est_beverage_rev + T8.est_beverage_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)) + ( T8.est_food_rev + T8.est_food_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0))) + ( ( T8.est_labor_rev + T8.est_labor_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)) + ( T8.est_misc_rev + T8.est_misc_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)))) + ( ( ( T8.est_other_rev + T8.est_other_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)) + ( T8.est_rental_rev + T8.est_rental_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0))) + ( ( T8.est_av_rev + T8.est_av_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)) + T8.est_sleeping_rm_rev * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)))) AS blocked_revtot , T8.actual_sleeping_rm_ngts  AS Actual_Sleeping_Room_Nights , T8.actual_sleeping_rm_rev * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)) AS actual_sleeping_rm_rev , ( ( ( T8.actual_beverage_rev) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)) + ( T8.actual_food_rev) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0))) + ( ( T8.actual_labor_rev) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)) + ( T8.actual_misc_rev) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)))) + ( ( ( T8.actual_other_rev) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)) + ( T8.actual_rental_rev) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0))) + ( ( T8.actual_av_rev) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)) + T8.actual_sleeping_rm_rev * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)))) AS actual_revtot , T8.proj_sleeping_rm_ngts  AS proj_rn , T8.proj_sleeping_rm_rev * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)) AS proj_rv , T8.orig_def_est_sleeping_rm_rev AS orig_def_est_local_RV, T8.orig_def_proj_sleeping_rm_rev AS orig_def_proj_local_RV, T8.est_sleeping_rm_rev AS est_sleeping_rm_local_RV, T8.actual_sleeping_rm_rev AS actual_sleeping_rm_local_RV, T8.proj_sleeping_rm_rev AS proj_sleeping_rm_local_RV, ( ( ( T8.orig_def_est_beverage_rev + T8.orig_def_est_beverage_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)) + ( T8.orig_def_est_food_rev + T8.orig_def_est_food_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0))) + ( ( T8.orig_def_est_labor_rev + T8.orig_def_est_labor_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)) + ( T8.orig_def_est_misc_rev + T8.orig_def_est_misc_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)))) + ( ( ( T8.orig_def_est_other_rev + T8.orig_def_est_other_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)) + ( T8.orig_def_est_rental_rev + T8.orig_def_est_rental_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0))) + ( ( T8.orig_def_est_av_rev + T8.orig_def_est_av_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)) + T8.proj_sleeping_rm_rev * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)))) AS proj_revtot , coguda00.lost_turndown_reason_cd AS Lost_Turndown_Reason, coguda00.lost_turndown_description AS Lost_Turndown_Description , T8.total_actual_function_rev_svc_chg * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)) AS Actual_Function_Revenue_Total , ( T8.total_actual_quote_rev + T8.total_actual_function_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)) AS Actual_Total_Quote_Revenue, edw_dim_date_Quote_OD.cal_quarter_num  AS quarter , Quote_Intermediary_Account.site_account_nm  AS QUOTE_INT_NM , Quote_Intermediary_Account.ci_account_id AS SOURCE_ID_INT, Quote_Intermediary_Account.address1 AS Quote_Inter_Acct_Address, Quote_Intermediary_Account.address_city AS QUOTE_INT_CITY, Quote_Intermediary_Account.address_state AS Quote_Inter_Acct_State, Quote_Intermediary_Account.address_province AS Quote_Inter_Acct_Province, Quote_Intermediary_Account.address_postal_cd AS Quote_Inter_Acct_Postal_Code, Quote_Intermediary_Account.address_Country AS QUOTE_INT_COUNTRY, edw_dim_date_Quote_Arrival.cal_quarter_num  AS Arrival_Quarter , edw_dim_date_Quote_Arrival.cal_month_num  AS Quote_Arrival_Period FROM srw_dim_quote  coguda00 LEFT JOIN srw_dim_associate orgmgr ON ( coguda00.originating_manager_id= orgmgr.associate_id) LEFT JOIN srw_dim_associate quote_created_by ON ( coguda00.ci_created_by=quote_created_by.associate_id) INNER JOIN srw_dim_date edw_dim_date_Quote_OD ON ( edw_dim_date_Quote_OD.date_dt = nvl( coguda00.orig_def_dt, '1800-01-01')) INNER JOIN srw_lnk_ci_account Quote_Intermediary_Account ON ( Quote_Intermediary_Account.ci_account_id = nvl( coguda00.intermediary_account_id, ' ')) INNER JOIN srw_lnk_ci_account Quote_Account  ON ( coguda00.ci_account_id=Quote_Account.ci_account_id) INNER JOIN srw_dim_date  edw_dim_date_Quote_Arrival ON ( coguda00.arrival_dt=edw_dim_date_Quote_Arrival.date_dt) INNER JOIN srw_fact_quote_current_snapshot_v T8 ON ( coguda00.quote_wh_key = T8.asof_quote_wh_key) INNER JOIN edw_dim_currency  T10 ON ( T8.currency_exch_dt = T10.currency_exch_dt) INNER JOIN edw_dim_currency T9 ON ( T8.currency_cd = T9.from_currency_cd AND T8.currency_exch_dt = T9.currency_exch_dt) INNER JOIN srw_lnk_ci_property coguda60 ON ( coguda60.ci_property_id = coguda00.ci_property_id) INNER JOIN srw_dim_opportunity opportunity ON ( opportunity.opportunity_id = coguda00.opty_id) LEFT JOIN srw_dim_associate opptymgr ON ( opportunity.originating_mgr_id=opptymgr.associate_id) LEFT JOIN  srw_dim_associate opty_created_by ON ( opportunity.referred_by_mgr_id=opty_created_by.associate_id) WHERE quote IN ( %srwquote) AND ( coguda00.dw_curr_ind = 1 OR coguda00.quote_nat_key = -99) AND ( Quote_Account.dw_curr_ind = 1 OR Quote_Account.ci_account_nat_key = -99) AND ( Quote_Intermediary_Account.dw_curr_ind = 1 OR Quote_Intermediary_Account.ci_account_nat_key = -99) AND ( coguda60.dw_curr_ind = 1 OR coguda60.ci_property_nat_key = -99) AND LENGTH( btrim( coguda60.marsha_cd)) > 0 AND T10.from_currency_cd = 'USD' AND opportunity.dw_curr_ind=1  ) ;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_MA_Validation.sas
 CREATE TABLE Property AS  (  select * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER  ) ;,DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_MA_Validation.sas
 CREATE TABLE continent_map AS  (  select * FROM AW_GSO_STG.COUNTRY_GSO_CONTINENT_MAPPING  ) ;,DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_MA_Validation.sas
" CREATE TABLE srw_detail_v2 AS select a.*, b.brnd, b.country AS prop_country, e.region_name AS prop_region, c.region_name AS QUOTE_ACCOUNT_REGION, c.country_iso3_cd AS quote_account_country_iso, d.region_name AS QUOTE_INT_REGION, d.country_iso3_cd AS quote_int_country_iso, f.fxtocusd, a.local_rv * f.fxtocusd AS computed_rv FROM srw_detail a INNER JOIN fx_conversion f ON ( f.curr_code=a.currency_cd AND a.month=f.mon) LEFT JOIN property b ON ( a.marsha=b.marsha) LEFT JOIN continent_map c ON ( upper( a.quote_account_country)=c.country_name) LEFT JOIN continent_map d ON ( upper( a.quote_int_country)=d.country_name) LEFT JOIN continent_map e ON ( upper( b.country)=e.country_name ) ;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_MA_Validation.sas
" CREATE TABLE SRW_Data AS select RPT_METRIC, month, year, qtr, QUOTE, MARSHA AS MARSHA_CD, DATA_SOURCE AS SYS_RECORD, QUOTE_NAME, QUOTE_ORIGINAL_DEFINITE_DATE AS ORIG_DEF_DATE, QUOTE_ARRIVAL_DATE AS ARV_DATE, RN AS ORIG_DEF_RM_NTS, COMPUTED_RV AS ORIG_DEF_RM_REV, CURRENCY_CD AS QUOTE_CUR_CD, LOCAL_RV, PROPERTY_NM AS Prop_Name, BRND AS Brand_Code, peak AS Peak_RN, REFERRED_BY_EID, Quote_Originating_Mgr_EID, PROP_REGION AS Hotel_continent, PROP_COUNTRY AS Hotel_Country, QUOTE_STATUS, QUOTE_ACCOUNT_NM AS End_User_Account_Name, QUOTE_ACCOUNT_REGION AS End_User_Account_Continent, QUOTE_ACCOUNT_COUNTRY AS End_User_Account_Country, quote_account_country_iso AS end_user_account_ISO, QUOTE_ACCOUNT_CITY AS End_User_Account_City, SOURCE_ID AS End_User_Account_Source_ID, ULTIMATE_PARENT_ACCOUNT_NM AS End_User_Account_Parent, ULTIMATE_PARENT_URI AS End_User_Account_Parent_ID, QUOTE_INT_NM AS Intermediary_Account_Name, QUOTE_INT_REGION AS Intermediary_Account_Continent, QUOTE_INT_COUNTRY AS Intermediary_Account_Country, quote_int_country_iso AS int_account_ISO, QUOTE_INT_CITY AS Intermediary_Account_City, SOURCE_ID_INT AS Intermediary_Account_Source_ID, ULTIMATE_PARENT_ACCOUNT_NM_INT AS Intermediary_Account_Parent, ULTIMATE_PARENT_URI_INT AS Intermediary_Account_Parent_ID FROM srw_detail_v2;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_MA_Validation.sas
 CREATE TABLE all_adjustments AS ( SELECT  *  FROM parse_EADS UNION ALL SELECT  *  FROM SRW_Data);,DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_MA_Validation.sas
" CREATE TABLE adjustments AS select distinct e.associate AS gso_name, a.*, b.*, coalesce( c.GOALED_ACCOUNT_ID,d.GOALED_ACCOUNT_ID) AS gso_acct_id, coalesce( c.report_month,d.report_month) AS deployed_month, coalesce( c.gso_continent,d.gso_continent) AS gso_continent, coalesce( c.gso_office,d.gso_office) AS gso_office, coalesce( c.segment,d.segment) AS GSO_SEGMENT, coalesce( c.gso_account_role,d.gso_account_role) AS gso_account_role, coalesce( c.deployment_parameter,d.deployment_parameter) AS deployment_parameter, coalesce( c.deployment_city,d.deployment_city) AS depl_city_grp, coalesce( c.sub_segment,d.sub_segment) AS sub_segment, coalesce( c.gso_roster_key,d.gso_roster_key) AS gso_roster_key, coalesce( c.associate_role_type,d.associate_role_type) AS associate_role_type, coalesce( c.position_type,d.position_type) AS position_type FROM adj_submissions a LEFT JOIN all_adjustments b ON ( a.quote=b.quote) LEFT JOIN gso_group_roster c ON (  c.report_month=b.month AND a.eid_adj=c.eid AND UPPER( a.Deployed_Account_Name__Account_t)=UPPER( c.ROSTER_ACCOUNT_NAME)) LEFT JOIN gso_group_roster d ON (  d.report_month=b.month AND a.eid_adj=d.eid AND UPPER( a.Deployed_Account_Name__Account_t)=UPPER( d.ROSTER_ACCOUNT_NAME)) LEFT JOIN associate e ON ( UPPER( a.EID_ADJ)=UPPER( e.EID)) ORDER BY row_id;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_MA_Validation.sas
"CREATE TABLE transpose AS ( SELECT   *  , CONCAT_WS( ',',deployment_list, deployment_parameter ) AS deployment_list , CASE WHEN  first(row_id ) THEN ' ' END AS deployment_list, LAST(row_id) OVER ( PARTITION BY row_id GROUP BY row_id ORDER BY row_id )  FROM adjustments );",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_MA_Validation.sas
ALTER TABLE transpose DROP COLUMN deployment_parameter ;,DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_MA_Validation.sas
" CREATE TABLE final_adjust AS ( SELECT  * , CASE WHEN  quote not IN ( %achquotes)  THEN 'N' ELSE 'Y' END AS ACH_EADS, CASE WHEN  quote not IN ( %gsoquotes)  THEN 'N' ELSE 'Y' END AS GSO_EADS, CASE WHEN  quote not IN ( %globalquotes)  THEN 'N' ELSE 'Y' END AS GLOBAL_EADS FROM transpose );",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_MA_Validation.sas
" CREATE TABLE dupcheck AS select quote, COUNT( quote) AS cnt_quote FROM final_adjust GROUP BY quote HAVING COUNT( quote) > 1;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_MA_Validation.sas
" CREATE TABLE reason4 AS select distinct b.quote, b.eid, b.GOALED_ACCOUNT_ID FROM prelim_vs_Adj b INNER JOIN final_adjust c ON ( UPPER( b.EID) = UPPER( c.EID_ADJ) AND b.quote=c.quote AND b.GOALED_ACCOUNT_ID =c.gso_acct_id) WHERE b.year IN ( &curyr,&lstyr) AND Prelim_action IN ( 'Prelim_Prod') AND not( Prospect_include='NO' ) ;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_MA_Validation.sas
" CREATE TABLE reason2 AS select distinct b.quote, b.quote_status, b.eid, b.GOALED_ACCOUNT_ID, LTRIM( RTRIM( Prelim_action)) || ' - ' || LTRIM( RTRIM( include_reason)) AS reason_2a, CASE WHEN segment='Prospect' THEN LTRIM( RTRIM( Prospect_include)) || ' - ' || LTRIM( RTRIM( Prospect_include_reason)) END AS reason_2b FROM prelim_vs_Adj b INNER JOIN final_adjust c ON (  b.quote=c.quote AND b.quote_status=c.quote_status AND b.GOALED_ACCOUNT_ID =c.gso_acct_id) WHERE b.year IN ( &curyr,&lstyr) AND ( Prelim_action not IN ( 'Prelim_Prod') OR ( Prospect_include='NO') ) ;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_MA_Validation.sas
" CREATE TABLE reason2c AS select distinct b.quote, b.quote_status, b.eid, b.GOALED_ACCOUNT_ID, LTRIM( RTRIM( Prelim_action)) || ' - ' || LTRIM( RTRIM( Prelim_comments)) AS reason_2c FROM prelim_vs_Adj b INNER JOIN final_adjust c ON ( UPPER( b.EID) = UPPER( c.EID_ADJ) AND b.quote=c.quote AND b.quote_status=c.quote_status AND b.GOALED_ACCOUNT_ID =c.gso_acct_id) WHERE b.year IN ( &curyr,&lstyr) AND ( Prelim_action IN ( 'Prelim_Prod') AND not( Prospect_include='NO') AND include_reason='Suspect ADR' ) ;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_MA_Validation.sas
 CREATE TABLE all_opty AS  (  select distinct opty_number FROM AW_GSO_PRD.MI_SW_EVO_GROUP_EADS ) ;,DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_MA_Validation.sas
" CREATE TABLE adj_validation AS select distinct CASE WHEN a.quote not IN ( select quote FROM global_quotes) THEN 'Quote is not valid/not found IN the Global Group EADS' ELSE '' END AS Reason_1, CASE WHEN a.quote IN ( select quote FROM SRW_Data) THEN 'Quote found IN SRW Data Source' ELSE '' END AS Reason_1a, CASE WHEN a.quote not IN ( select quote FROM global_quotes) AND a.quote not IN ( select quote FROM SRW_Data) AND a.quote IN ( select opty_number FROM all_opty) THEN 'Quote entered is an Opty Number' ELSE '' END AS Reason_2a, CASE WHEN a.Brand_Code IN ( 'MV','ZC','DS','VB') THEN 'Brand Exclusion' ELSE '' END AS Reason_1b, CASE WHEN a.quote not IN ( select quote FROM prelim_vs_Adj WHERE Prelim_action IN ( 'Prelim_Prod') AND not( Prospect_include='NO')) THEN 'Quote is not ON prelim achievement' ELSE '' END AS Reason_2, CASE WHEN a.quote not IN ( select quote FROM all_quotes aq WHERE ( ( aq.year=2019 AND aq.month <=6) OR aq.year=2018 )) THEN 'Quote Not Within Compensation Cycle' ELSE '' END AS Reason_3, CASE WHEN a.quote IN ( select quote FROM reason4 b WHERE ( UPPER( b.EID) = UPPER( a.EID_ADJ))) THEN 'Quote tracking to submitting associate' ELSE '' END AS Reason_4, CASE WHEN a.quote IN ( select distinct b.quote FROM prelim_vs_Adj b INNER JOIN final_adjust c ON ( UPPER( b.EID)<>UPPER( c.EID_ADJ) AND b.quote=c.quote) WHERE b.year IN ( &curyr,&lstyr) AND Prelim_action IN ( 'Prelim_Prod') AND not( Prospect_include='NO')) THEN 'Quote also tracking to other associate( s)' ELSE '' END AS Reason_5, CASE WHEN a.quote IN ( select quote FROM dupcheck) THEN 'Duplicate submissions for this quote' ELSE '' END AS Reason_6, a.quote, a.* FROM final_adjust a LEFT JOIN all_prelim b ON ( a.quote=b.quote AND a.gso_segment=b.segment) ORDER BY Row_N;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_MA_Validation.sas
" CREATE TABLE adj_validation2 AS select a.*, b.reason_2a, b.reason_2b, c.reason_2c FROM adj_validation a LEFT JOIN reason2 b ON ( a.quote=b.quote AND a.quote_status=b.quote_status AND coalesce( a.gso_acct_id,'')=coalesce( b.goaled_account_id,'') AND a.eid_adj = b.eid ) LEFT JOIN reason2c c ON ( a.quote=c.quote AND a.quote_status=c.quote_status AND a.eid_adj=c.eid AND coalesce( a.gso_acct_id,'')=coalesce( c.goaled_account_id,'')) ORDER BY row_N;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_MA_Validation.sas
" CREATE TABLE Quote_to_Assoc AS select distinct a.quote, a.*, b.EID, CASE WHEN a.quote IN ( select distinct b.quote FROM prelim_vs_Adj b INNER JOIN final_adjust c ON ( UPPER( b.EID)<>UPPER( c.EID_ADJ) AND b.quote=c.quote AND b.GOALED_ACCOUNT_ID =c.gso_acct_id) WHERE b.year IN ( &curyr,&lstyr) AND Prelim_action IN ( 'Prelim_Prod') AND not( Prospect_include='NO')) THEN 'Quote also tracking to other associate( s)' ELSE '' END AS Quote_to_Other_Assoc FROM final_adjust a INNER JOIN all_prelim b ON ( a.quote=b.quote AND a.EID_ADJ<>b.EID) HAVING Quote_to_Other_Assoc<>'' ORDER BY Row_N;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_MA_Validation.sas
" CREATE TABLE final_validation AS select Reason_1 ,Reason_1a ,Reason_1b ,Reason_2 ,reason_2a ,reason_2b ,reason_2c ,Reason_3 ,Reason_4 ,Reason_5 ,Reason_6 ,quote ,QUOTE_STATUS ,gso_name ,Row_ID ,EID_ADJ ,Deployed_Account_Name__Account_t ,ADJ_CAT ,RPT_METRIC ,MONTH ,YEAR ,QTR ,MARSHA_CD ,SYS_RECORD ,QUOTE_NAME ,ORIG_DEF_DATE ,ARV_DATE ,ORIG_DEF_RM_NTS ,ORIG_DEF_RM_REV ,QUOTE_CUR_CD ,LOCAL_RV ,Prop_Name ,Brand_Code ,Peak_RN ,REFERRED_BY_EID ,QUOTE_ORIGINATING_MGR_EID ,Hotel_continent ,Hotel_Country ,End_User_Account_Name ,End_User_Account_Continent ,End_User_Account_Country ,end_user_account_ISO ,End_User_Account_City ,End_User_Account_Source_ID ,End_User_Account_Parent ,End_User_Account_Parent_ID ,Intermediary_Account_Name ,Intermediary_Account_Continent ,Intermediary_Account_Country ,int_account_ISO ,Intermediary_Account_City ,Intermediary_Account_Source_ID ,Intermediary_Account_Parent ,Intermediary_Account_Parent_ID ,gso_acct_id ,deployed_month ,gso_continent ,gso_office ,GSO_SEGMENT ,gso_account_role ,deployment_list ,depl_city_grp ,ACH_EADS ,GSO_EADS ,GLOBAL_EADS FROM adj_validation2;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_MA_Validation.sas
"CREATE TABLE ""\\hdqmdm1fpcl3v2\LODG-SMPS\Support\Global Performance Services ( GPS)\Rachel Collins\GSO Man Adj Process-CODED FOLDER DO NOT MOVE\GSO GROUP Man Adj Process-CODED FILE DO NOT MOVE_Q2.xlsx"" AS ( SELECT * FROM final_validation) ;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_MA_Validation.sas
"CREATE TABLE ""\\hdqmdm1fpcl3v2\LODG-SMPS\Support\Global Performance Services ( GPS)\Rachel Collins\GSO Man Adj Process-CODED FOLDER DO NOT MOVE\GSO GROUP Man Adj Process-CODED FILE DO NOT MOVE_Q2.xlsx"" AS ( SELECT * FROM Quote_to_Assoc() ALTER TABLE ""\\hdqmdm1fpcl3v2\LODG-SMPS\Support\Global Performance Services ( GPS)\Rachel Collins\GSO Man Adj Process-CODED FOLDER DO NOT MOVE\GSO GROUP Man Adj Process-CODED FILE DO NOT MOVE_Q2.xlsx"" DROP COLUMN Row_N ;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_MA_Validation.sas
" CREATE TABLE Group_adj_cascade AS select RTRIM( ROW_ID) AS ROW_ID , RTRIM( QUOTE_num) AS Quote , ADJ_CAT , RTRIM( USER_EID) AS EID , RTRIM( MARSHA_CD) AS MARSHA , RTRIM( GSO_ACCT_ID) AS GOALED_ACCOUNT_ID , '' AS QUOTE_STATUS , 1 AS NET_QT_CNT , '' AS DATA_SOURCE , CASE WHEN msd_cred_mo='January' THEN 1 when msd_cred_mo='February' THEN 2 when msd_cred_mo='March' THEN 3 when msd_cred_mo='April' THEN 4 when msd_cred_mo='May' THEN 5 when msd_cred_mo='June' THEN 6 when msd_cred_mo='July' THEN 7 when msd_cred_mo='August' THEN 8 when msd_cred_mo='September' THEN 9 when msd_cred_mo='October' THEN 10 when msd_cred_mo='November' THEN 11 when msd_cred_mo='December' THEN 12 END AS msd_cred_mo , CASE WHEN msd_cred_mo='January' THEN 201901 when msd_cred_mo='February' THEN 201902 when msd_cred_mo='March' THEN 201903 when msd_cred_mo='April' THEN 201904 when msd_cred_mo='May' THEN 201905 when msd_cred_mo='June' THEN 201906 when msd_cred_mo='July' THEN 201907 when msd_cred_mo='August' THEN 201908 when msd_cred_mo='September' THEN 201909 when msd_cred_mo='October' THEN 201910 when msd_cred_mo='November' THEN 201911 when msd_cred_mo='December' THEN 201912 END AS ASOF_YRMO , '' AS GSO_ACCT_NAME , QT_ORIG_DEF_RM_NTS AS RN , QT_ORIG_DEF_RM_REV AS LOCAL_RV , QT_ORIG_DEF_CUR_CD AS QUOTE_CUR_CD , QUOTE_NAME , 'Quotes Not Previously Credited' AS CATEGORY , RTRIM( Deployed_Account_Continent) AS QUOTE_ACCOUNT_REGION , RTRIM( Deployed_Account_Country) AS QUOTE_ACCOUNT_COUNTRY , RTRIM( Deployed_Account_Country_ISO) AS QUOTE_ACCOUNT_COUNTRY_ISO , RTRIM( Deployed_Account_City) AS QUOTE_ACCOUNT_CITY , '' AS ACCOUNT_TYPE , '' AS MA_KEY , 'YES' AS INCLUDE , ADJ_CAT AS INCLUDE_REASON , 'Manual_Adj' AS PRELIM_ACTION , 'Approved MA ' || RTRIM( ROW_ID) AS PRELIM_COMMENTS FROM final_cds_feed WHERE quote_num<>'' AND LTRIM( RTRIM( ADJ_CAT)) IN ( '1. Addendum Block Change','2. Cancellation Revenue Collected', '4. Incorrect Account and/or Intermediary','9. Disconnected Property','5. Non-Definite Status' ) ;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_Pace_Adjustment_NotinPrelim.sas
 CREATE TABLE source_data AS ( SELECT  *  FROM Group_adj_cascade );,DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_Pace_Adjustment_NotinPrelim.sas
" CREATE TABLE AW_GSO_STG.GRP_MA_BASE_STG (  Row_ID VARCHAR( 50), QUOTE VARCHAR( 16), ADJ_CAT VARCHAR( 100), EID VARCHAR( 255), MARSHA   VARCHAR( 10), GOALED_ACCOUNT_ID VARCHAR( 25), QUOTE_STATUS VARCHAR( 10), NET_QT_CNT integer, DATA_SOURCE VARCHAR( 10), MSD_CRED_MO integer, ASOF_YRMO integer, GSO_ACCT_NAME VARCHAR( 100), RN integer, LOCAL_RV double, QUOTE_CUR_CD VARCHAR( 100), QUOTE_NAME VARCHAR( 100), CATEGORY  VARCHAR( 100), QUOTE_ACCOUNT_REGION VARCHAR( 30), QUOTE_ACCOUNT_COUNTRY VARCHAR( 100), QUOTE_ACCOUNT_COUNTRY_ISO VARCHAR( 100), QUOTE_ACCOUNT_CITY VARCHAR( 100), ACCOUNT_TYPE VARCHAR( 100), MA_KEY VARCHAR( 100), INCLUDE VARCHAR( 8), INCLUDE_REASON VARCHAR( 100), PRELIM_ACTION VARCHAR( 14), PRELIM_COMMENTS VARCHAR( 165) ) ) by odbc ;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_Pace_Adjustment_NotinPrelim.sas
INSERT INTO TABLE AWPROD.GRP_MA_BASE_STG SELECT * FROM work.source_data;,DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_Pace_Adjustment_NotinPrelim.sas
   TRUNCATE table AW_GSO_STG.GRP_MA_BASE ) by odbc ;,DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_Pace_Adjustment_NotinPrelim.sas
   INSERT INTO AW_GSO_STG.GRP_MA_BASE Select * FROM AW_GSO_STG.GRP_MA_BASE_STG ) by odbc ;,DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_Pace_Adjustment_NotinPrelim.sas
   DROP TABLE AW_GSO_STG.GRP_MA_BASE_STG ) by odbc ;,DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_Pace_Adjustment_NotinPrelim.sas
"   CALL AW_TGT_PROXY_DBO.GRANT_ON_TABLE( 'AW_GSO_STG','GRP_MA_BASE' )  ) by odbc ;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_Pace_Adjustment_NotinPrelim.sas
   ANALYZE TABLE AW_GSO_STG.GRP_MA_BASE COMPUTE STATISTICS FOR ALL COLUMNS TABLESAMPLE SYSTEM( 10 )  ,DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_Pace_Adjustment_NotinPrelim.sas
 CREATE TABLE fx_conversion AS  (  select * FROM AW_TGT_BUS_DBO.TREASFX_FCST_HIST FX WHERE FX.ASOF_YRMO =EXTRACT(YEAR FROM CURRENT DATE - 1 YEAR) * 100 + 12  ) ;,DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_Pace_Adjustment_Processing_2019.sas
" CREATE TABLE quotename AS  (  select distinct quote, quote_name FROM AW_GSO_PRD.MI_SW_EVO_GRP_ACH_EADS_GSO_FINAL  ) ;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_Pace_Adjustment_Processing_2019.sas
SELECT DISTINCT * FROM quotename ORDER BY quote;,DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_Pace_Adjustment_Processing_2019.sas
" CREATE TABLE prelim_prod AS  (  select GSO_ROSTER_KEY, YEAR, MONTH, ASOF_YRMO,GSO_CONTINENT, GSO_OFFICE, GSO_SUB_REGION, SEGMENT, SUB_SEGMENT, POSITION_ID, GOAL_TYPE, ROSTER_ACCOUNT_NAME, SUBMITTED_ACCOUNT_NAME, GOALED_ACCOUNT_ID, GOALED_ACCOUNT_ID_SOURCE, RELTIO_ID, DUNS, INDUSTRY, EID, EID_PROSPECT, ISAC_POSITION_ID, GSO_DB_ID, ASSOCIATE_ROLE_TYPE, POSITION_TYPE, GSO_ACCOUNT_ROLE, DEPLOYMENT_PARAMETER, DEPLOYMENT_ISO, DEPLOYMENT_CITY, DEPLOYMENT_STRATEGY_NOTES, LEADER_POSITION_ID, GSO_DB_ID_LEADER, EID_LEADER, SVP_POSITION_ID, SVP_NAME, VP_POSITION_ID, VP_NAME, LEADER_AREA_TEAM_POSITION_ID, LEADER_AREA_TEAM, SUB_LEADER_1_POSITION_ID, SUB_LEADER_1, SUB_LEADER_2_POSITION_ID, SUB_LEADER_2, QUOTE, QUOTE_NAME, QUOTE_STATUS, MARSHA, BRND_NAME, BRND, DATA_SOURCE, CHAIN, QUOTE_ACCOUNT_REGION, QUOTE_ACCOUNT_COUNTRY, QUOTE_ACCOUNT_COUNTRY_ISO, QUOTE_ACCOUNT_CITY, ULTIMATE_PARENT_URI, ULTIMATE_PARENT_ACCOUNT_NM, ULTIMATE_PARENT_DUNS, IMMEDIATE_PARENT_ACCOUNT_NM, IMMEDIATE_PARENT_DUNS, IMMEDIATE_PARENT_URI, CHILD_ACCOUNT_NM, CHILD_DUNS, CHILD_URI, PROSPECT_INCLUDE, INCLUDE, INCLUDE_REASON, PRELIM_ACTION, PRELIM_COMMENTS, REFERRED_BY_EID, PRIMARY_OPPTY_EID, PROSPECT_QUOTE_FLAG, PROSPECT_INCLUDE_REASON, SUM( NET_QT_CNT) AS NET_QT_CNT, SUM( RN) AS RN, SUM( RV) AS RV, SUM( LOCAL_RV) AS local_rv, SUM( COMPUTED_RV) AS computed_rv FROM (  select GSO_ROSTER_KEY, YEAR, MONTH, ASOF_YRMO, GSO_CONTINENT, GSO_OFFICE, GSO_SUB_REGION, SEGMENT, SUB_SEGMENT, POSITION_ID, GOAL_TYPE, ROSTER_ACCOUNT_NAME, SUBMITTED_ACCOUNT_NAME, GOALED_ACCOUNT_ID, GOALED_ACCOUNT_ID_SOURCE, RELTIO_ID, DUNS, INDUSTRY, EID, EID_PROSPECT, ISAC_POSITION_ID, GSO_DB_ID, ASSOCIATE_ROLE_TYPE, POSITION_TYPE, GSO_ACCOUNT_ROLE, DEPLOYMENT_PARAMETER, DEPLOYMENT_ISO, DEPLOYMENT_CITY, '' AS DEPLOYMENT_STRATEGY_NOTES, LEADER_POSITION_ID, GSO_DB_ID_LEADER, EID_LEADER, SVP_POSITION_ID, SVP_NAME, VP_POSITION_ID, VP_NAME, LEADER_AREA_TEAM_POSITION_ID, LEADER_AREA_TEAM, SUB_LEADER_1_POSITION_ID, SUB_LEADER_1, SUB_LEADER_2_POSITION_ID, SUB_LEADER_2, QUOTE, '' AS QUOTE_NAME, QUOTE_STATUS, MARSHA, BRND_NAME, BRND, DATA_SOURCE, CHAIN, '' AS QUOTE_ACCOUNT_REGION, '' AS QUOTE_ACCOUNT_COUNTRY, '' AS QUOTE_ACCOUNT_COUNTRY_ISO, '' AS QUOTE_ACCOUNT_CITY, ULTIMATE_PARENT_URI, ULTIMATE_PARENT_ACCOUNT_NM, ULTIMATE_PARENT_DUNS, '' AS IMMEDIATE_PARENT_ACCOUNT_NM, '' AS IMMEDIATE_PARENT_DUNS, '' AS IMMEDIATE_PARENT_URI, '' AS CHILD_ACCOUNT_NM, '' AS CHILD_DUNS, '' AS CHILD_URI, '' AS PROSPECT_INCLUDE, INCLUDE, '' AS INCLUDE_REASON, 'Prelim_Prod' AS PRELIM_ACTION, '' AS PRELIM_COMMENTS, '' AS REFERRED_BY_EID, '' AS PRIMARY_OPPTY_EID, '' AS PROSPECT_QUOTE_FLAG, '' AS PROSPECT_INCLUDE_REASON, SUM( NET_QT_CNT) AS NET_QT_CNT, SUM( RN) AS RN, SUM( RV) AS RV, SUM( LOCAL_RV) AS local_rv, SUM( COMPUTED_RV) AS computed_rv FROM AW_GSO_PRD.MI_SW_EVO_GRP_ACH_EADS_GSO_FINAL WHERE prelim_action IN ( 'Prelim_Prod','Manual_Adj') AND ( segment<>'Prospect' OR ( PROSPECT_INCLUDE='YES' AND segment='Prospect')) AND ( year=2018 OR year=2019) GROUP BY GSO_ROSTER_KEY, YEAR, MONTH, ASOF_YRMO, GSO_CONTINENT, GSO_OFFICE, GSO_SUB_REGION, SEGMENT, SUB_SEGMENT, POSITION_ID, GOAL_TYPE, ROSTER_ACCOUNT_NAME, SUBMITTED_ACCOUNT_NAME, GOALED_ACCOUNT_ID, GOALED_ACCOUNT_ID_SOURCE, RELTIO_ID, DUNS, INDUSTRY, EID, EID_PROSPECT, ISAC_POSITION_ID, GSO_DB_ID, ASSOCIATE_ROLE_TYPE, POSITION_TYPE, GSO_ACCOUNT_ROLE, DEPLOYMENT_PARAMETER, DEPLOYMENT_ISO, DEPLOYMENT_CITY, DEPLOYMENT_STRATEGY_NOTES, LEADER_POSITION_ID, GSO_DB_ID_LEADER, EID_LEADER, SVP_POSITION_ID, SVP_NAME, VP_POSITION_ID, VP_NAME, LEADER_AREA_TEAM_POSITION_ID, LEADER_AREA_TEAM, SUB_LEADER_1_POSITION_ID, SUB_LEADER_1, SUB_LEADER_2_POSITION_ID, SUB_LEADER_2, QUOTE, QUOTE_NAME, QUOTE_STATUS, MARSHA, BRND_NAME, BRND, DATA_SOURCE, CHAIN, QUOTE_ACCOUNT_REGION, QUOTE_ACCOUNT_COUNTRY, QUOTE_ACCOUNT_COUNTRY_ISO, QUOTE_ACCOUNT_CITY, ULTIMATE_PARENT_URI, ULTIMATE_PARENT_ACCOUNT_NM, ULTIMATE_PARENT_DUNS, PROSPECT_INCLUDE, IMMEDIATE_PARENT_ACCOUNT_NM, IMMEDIATE_PARENT_DUNS, IMMEDIATE_PARENT_URI, CHILD_ACCOUNT_NM, CHILD_DUNS, CHILD_URI, INCLUDE, INCLUDE_REASON, PRELIM_ACTION, PRELIM_COMMENTS, REFERRED_BY_EID, PRIMARY_OPPTY_EID, PROSPECT_QUOTE_FLAG, PROSPECT_INCLUDE_REASON ) GROUP BY GSO_ROSTER_KEY, YEAR, MONTH, ASOF_YRMO, GSO_CONTINENT, GSO_OFFICE, GSO_SUB_REGION, SEGMENT, SUB_SEGMENT, POSITION_ID, GOAL_TYPE, ROSTER_ACCOUNT_NAME, SUBMITTED_ACCOUNT_NAME, GOALED_ACCOUNT_ID, GOALED_ACCOUNT_ID_SOURCE, RELTIO_ID, DUNS, INDUSTRY, EID, EID_PROSPECT, ISAC_POSITION_ID, GSO_DB_ID, ASSOCIATE_ROLE_TYPE, POSITION_TYPE, GSO_ACCOUNT_ROLE, DEPLOYMENT_PARAMETER, DEPLOYMENT_ISO, DEPLOYMENT_CITY, DEPLOYMENT_STRATEGY_NOTES, LEADER_POSITION_ID, GSO_DB_ID_LEADER, EID_LEADER, SVP_POSITION_ID, SVP_NAME, VP_POSITION_ID, VP_NAME, LEADER_AREA_TEAM_POSITION_ID, LEADER_AREA_TEAM, SUB_LEADER_1_POSITION_ID, SUB_LEADER_1, SUB_LEADER_2_POSITION_ID, SUB_LEADER_2, QUOTE, QUOTE_NAME, QUOTE_STATUS, MARSHA, BRND_NAME, BRND, DATA_SOURCE, CHAIN, QUOTE_ACCOUNT_REGION, QUOTE_ACCOUNT_COUNTRY, QUOTE_ACCOUNT_COUNTRY_ISO, QUOTE_ACCOUNT_CITY, ULTIMATE_PARENT_URI, ULTIMATE_PARENT_ACCOUNT_NM, ULTIMATE_PARENT_DUNS, PROSPECT_INCLUDE, IMMEDIATE_PARENT_ACCOUNT_NM, IMMEDIATE_PARENT_DUNS, IMMEDIATE_PARENT_URI, CHILD_ACCOUNT_NM, CHILD_DUNS, CHILD_URI, INCLUDE, INCLUDE_REASON, PRELIM_ACTION, PRELIM_COMMENTS, REFERRED_BY_EID, PRIMARY_OPPTY_EID, PROSPECT_QUOTE_FLAG, PROSPECT_INCLUDE_REASON  ) ;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_Pace_Adjustment_Processing_2019.sas
" CREATE TABLE prelim_prod_final AS select b.quote_name, a.* FROM prelim_prod a LEFT JOIN quotename b ON ( a.quote=b.quote ) ;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_Pace_Adjustment_Processing_2019.sas
" CREATE TABLE all_GSO_quotes AS  (  select * FROM AW_GSO_PRD.MI_SW_EVO_GRP_ACH_EADS_GSO_FINAL WHERE year IN ( 2018,2019) ) ;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_Pace_Adjustment_Processing_2019.sas
 CREATE TABLE non_prelim_prod4 AS select * FROM all_GSO_quotes WHERE quote not IN ( select distinct quote FROM prelim_prod_final ) ;,DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_Pace_Adjustment_Processing_2019.sas
 CREATE TABLE all_prelim AS ( SELECT  *  FROM non_prelim_prod4 UNION ALL SELECT  *  FROM prelim_prod_final);,DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_Pace_Adjustment_Processing_2019.sas
" CREATE TABLE adj_final AS ( SELECT  *  , _n_ AS row_N  FROM adj_final  WHERE UPPER( GPS_Approval)='YES' AND row_id<>:'');",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_Pace_Adjustment_Processing_2019.sas
"CREATE TABLE prospect_add AS ( SELECT  *  , UPPER( user_eid ) AS user_eid  FROM adj_final  WHERE Row_ID<>'' AND LTRIM( RTRIM( ADJ_CAT))='7. Prospect Business Adjustment' AND LTRIM( RTRIM( ___Prospect___Tracking_Manager_F))='c. Tracking Manager Issue');",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_Pace_Adjustment_Processing_2019.sas
"CREATE TABLE adj_others AS ( SELECT  *  , UPPER( user_eid ) AS user_eid  FROM adj_final  WHERE Row_ID<>'' AND LTRIM( RTRIM( ADJ_CAT))<>'7. Prospect Business Adjustment' AND LTRIM( RTRIM( ___Prospect___Tracking_Manager_F))<>'c. Tracking Manager Issue' AND LTRIM( RTRIM( ADJ_CAT)) not IN ( '9. Disconnected Property','5. Non-Definite Status'));",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_Pace_Adjustment_Processing_2019.sas
"CREATE TABLE adj_disc AS ( SELECT  *  , UPPER( user_eid ) AS user_eid  FROM adj_final  WHERE Row_ID<>'' AND LTRIM( RTRIM( ADJ_CAT)) IN ( '9. Disconnected Property','5. Non-Definite Status'));",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_Pace_Adjustment_Processing_2019.sas
 CREATE TABLE prospect_set AS  (  select * FROM AW_GSO_PRD.MI_SW_EVO_GROUP_EADS WHERE quote IN ( %prospect) UNION select * FROM AW_GSO_STG.MI_GROUP_EADS_PROSPECT WHERE quote IN ( %prospect)  ) ;,DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_Pace_Adjustment_Processing_2019.sas
 CREATE TABLE prospect_notfound AS select * FROM prospect_add WHERE quote_num not IN ( select quote FROM prospect_set ) ;,DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_Pace_Adjustment_Processing_2019.sas
"CREATE TABLE prospect_notfound AS ( SELECT  *, QT_ORIG_DEF_CUR_CD AS currency_cd, 2019 AS year , CASE WHEN  msd_cred_mo='January'  THEN 1 WHEN  msd_cred_mo='February'  THEN 2 WHEN  msd_cred_mo='March'  THEN 3 WHEN  msd_cred_mo='April'  THEN 4 WHEN  msd_cred_mo='May'  THEN 5 WHEN  msd_cred_mo='June'  THEN 6 WHEN  msd_cred_mo='July'  THEN 7 WHEN  msd_cred_mo='August'  THEN 8 WHEN  msd_cred_mo='September'  THEN 9 WHEN  msd_cred_mo='October'  THEN 10 WHEN  msd_cred_mo='November'  THEN 11 WHEN  msd_cred_mo='December'  THEN 12 END AS month FROM prospect_notfound );",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_Pace_Adjustment_Processing_2019.sas
"ALTER TABLE prospect_notfound DROP COLUMN GSO_ACCT_ROLE ,  GSO_DPL_PARAM ,  GSO_SEGMENT ,  ORIG_DEF_DATE ,  ARV_DATE ;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_Pace_Adjustment_Processing_2019.sas
" CREATE TABLE all_prospect_add AS ( SELECT  *  FROM prospect_set UNION ALL SELECT  *, quote_num AS quote FROM prospect_notfound);",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_Pace_Adjustment_Processing_2019.sas
" CREATE TABLE prospect_rollup AS  (  SELECT DISTINCT GSO_ROSTER_KEY , EID_PROSPECT , EID , gso_continent , gso_office , gso_sub_region , segment , sub_segment , report_month , gso_db_id , gso_account_role , POSITION_ID , goal_type , associate_role_type , position_type , Roster_account_name , submitted_account_name , deployment_parameter , LEADER_POSITION_ID , GSO_DB_ID_LEADER , EID_LEADER , SVP_POSITION_ID , SVP_NAME , VP_POSITION_ID , VP_NAME , LEADER_AREA_TEAM_POSITION_ID , LEADER_AREA_TEAM , SUB_LEADER_1_POSITION_ID , SUB_LEADER_1 , SUB_LEADER_2_POSITION_ID , SUB_LEADER_2 FROM AW_GSO_STG.GSO_ROSTER_BY_MONTH WHERE SEGMENT IN ( 'Prospect')  ) ;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_Pace_Adjustment_Processing_2019.sas
" CREATE TABLE prospect_adj AS select distinct d.*, a.*, b.*, c.fxtocusd FROM prospect_add a INNER JOIN all_prospect_add b ON ( a.quote_num=b.quote) INNER JOIN fx_conversion c ON ( c.curr_code=b.currency_cd AND b.month=c.mon) INNER JOIN prospect_rollup d ON ( d.eid=a.user_eid AND b.month=d.report_month ) ;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_Pace_Adjustment_Processing_2019.sas
 CREATE TABLE adj_final_all AS ( SELECT  *  FROM prospect_set UNION ALL SELECT  *  FROM adj_others UNION ALL SELECT  *  FROM adj_disc);,DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_Pace_Adjustment_Processing_2019.sas
" CREATE TABLE apply_adj AS select a.*, b.*, c.fxtocusd FROM all_prelim a INNER JOIN adj_final_all b ON ( a.quote=b.quote_num) LEFT JOIN fx_conversion c ON ( c.curr_code=b.QT_ORIG_DEF_CUR_CD AND a.month=c.mon ) ;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_Pace_Adjustment_Processing_2019.sas
" CREATE TABLE apply_adj_v2 AS ( SELECT  *  , 'Manual Adjustment' AS Prospect_Include_Reason  FROM apply_adj_v2  WHERE segment='Prospect');",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_Pace_Adjustment_Processing_2019.sas
 CREATE TABLE feed_CDS AS select * FROM adj_final WHERE row_id not IN ( select row_id FROM apply_adj_v2 ) ;,DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_Pace_Adjustment_Processing_2019.sas
 CREATE TABLE final_cds AS ( SELECT  *  FROM feed_CDS UNION ALL SELECT  *  FROM incorrect_acct);,DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_Pace_Adjustment_Processing_2019.sas
CREATE TABLE final_cds_feed AS (SELECT DISTINCT * FROM final_cds ORDER BY row_id);,DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_Pace_Adjustment_Processing_2019.sas
 CREATE TABLE grp_ach_temp AS  (  select * FROM AW_GSO_STG.MI_SW_EVO_GRP_ACH_TEMP WHERE year is not null  ) ;,DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_Pace_Adjustment_Processing_2019.sas
" CREATE TABLE ach_temp AS ( SELECT  *  , include_reason AS adj_cat  FROM grp_ach_temp );",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_Pace_Adjustment_Processing_2019.sas
 CREATE TABLE final_adjust AS ( SELECT  *  FROM apply_adj_v2 UNION ALL SELECT  *  FROM ach_temp);,DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_Pace_Adjustment_Processing_2019.sas
" CREATE TABLE groupadj.group_adj_Q2_2019 AS select GSO_ROSTER_KEY , ROW_ID , 2019 AS year , CASE WHEN year=2018 THEN 201906 when year=2019 AND month=1 THEN 201901 when year=2019 AND month=2 THEN 201902 when year=2019 AND month=3 THEN 201903 when year=2019 AND month=4 THEN 201904 when year=2019 AND month=5 THEN 201905 when year=2019 AND month=6 THEN 201906 when year=2019 AND month=7 THEN 201907 when year=2019 AND month=8 THEN 201908 when year=2019 AND month=9 THEN 201909 when year=2019 AND month=10 THEN 201910 when year=2019 AND month=11 THEN 201911 when year=2019 AND month=12 THEN 201912 END AS ASOF_YRMO , CASE WHEN year=2018 THEN 6 when month IN ( 1,2,3) THEN 6 ELSE month END AS MONTH , GSO_CONTINENT , GSO_OFFICE , GSO_SUB_REGION , SEGMENT , SUB_SEGMENT , POSITION_ID , GOAL_TYPE , ROSTER_ACCOUNT_NAME , SUBMITTED_ACCOUNT_NAME , GOALED_ACCOUNT_ID , GOALED_ACCOUNT_ID_SOURCE , RELTIO_ID , DUNS , INDUSTRY , EID , EID_PROSPECT , ISAC_POSITION_ID , GSO_DB_ID , ASSOCIATE_ROLE_TYPE , POSITION_TYPE , GSO_ACCOUNT_ROLE , DEPLOYMENT_PARAMETER , DEPLOYMENT_ISO , DEPLOYMENT_CITY , DEPLOYMENT_STRATEGY_NOTES , LEADER_POSITION_ID , GSO_DB_ID_LEADER , EID_LEADER , SVP_POSITION_ID , SVP_NAME , VP_POSITION_ID , VP_NAME , LEADER_AREA_TEAM_POSITION_ID , LEADER_AREA_TEAM , SUB_LEADER_1_POSITION_ID , SUB_LEADER_1 , SUB_LEADER_2_POSITION_ID , SUB_LEADER_2 , QUOTE , QUOTE_NAME , QUOTE_STATUS , 0 AS NET_QT_CNT , MARSHA , BRND_NAME , BRND , DATA_SOURCE , CHAIN , QUOTE_ACCOUNT_REGION , QUOTE_ACCOUNT_COUNTRY , QUOTE_ACCOUNT_COUNTRY_ISO , QUOTE_ACCOUNT_CITY , INCLUDE , INCLUDE_REASON , PRELIM_ACTION , PRELIM_COMMENTS , REFERRED_BY_EID , PRIMARY_OPPTY_EID , PROSPECT_QUOTE_FLAG , PROSPECT_INCLUDE , PROSPECT_INCLUDE_REASON , ULTIMATE_PARENT_ACCOUNT_NM , ULTIMATE_PARENT_DUNS , ULTIMATE_PARENT_URI , IMMEDIATE_PARENT_ACCOUNT_NM , IMMEDIATE_PARENT_DUNS , IMMEDIATE_PARENT_URI , CHILD_ACCOUNT_NM , CHILD_DUNS , CHILD_URI , RN , RV , LOCAL_RV , COMPUTED_RV FROM final_adjust;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_Pace_Adjustment_Processing_2019.sas
"CREATE TABLE Adj_Report AS ( SELECT  * , CASE WHEN  b  THEN 'Y' END AS Processed FROM apply_adj UNION ALL SELECT  * , CASE WHEN  b  THEN 'Y' END AS Processed FROM final_adjust);",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_Pace_Adjustment_Processing_2019.sas
"ALTER TABLE Adj_Report DROP COLUMN report_month ,  unique_ma_id ,  DUNS ,  industry ,  deployment_strategy_notes ,  isac_id ,  isac_id_int ,  sa_notes ,  ad_notes ;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_Pace_Adjustment_Processing_2019.sas
 CREATE TABLE adj_not_proc AS select * FROM adj_final WHERE row_id not IN ( select row_id FROM final_adjust  ) ;,DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_Pace_Adjustment_Processing_2019.sas
 CREATE TABLE adj_proc AS select * FROM adj_final WHERE row_id IN ( select row_id FROM final_adjust  ) ;,DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_Pace_Adjustment_Processing_2019.sas
"CREATE TABLE ""\\hdqmdm1fpcl3v2\LODG-SMPS\Support\Global Performance Services ( GPS)\Rachel Collins\GSO Man Adj Process-CODED FOLDER DO NOT MOVE\Group_MA_Post_Process_Report_Q2_2019_FINAL.xlsx"" AS ( SELECT * FROM Adj_Report) ;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_Pace_Adjustment_Processing_2019.sas
"CREATE TABLE ""\\hdqmdm1fpcl3v2\LODG-SMPS\Support\Global Performance Services ( GPS)\Rachel Collins\GSO Man Adj Process-CODED FOLDER DO NOT MOVE\Group_MA_Post_Process_Report_Q2_2019_FINAL.xlsx"" AS ( SELECT * FROM adj_proc) ;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_Pace_Adjustment_Processing_2019.sas
"CREATE TABLE ""\\hdqmdm1fpcl3v2\LODG-SMPS\Support\Global Performance Services ( GPS)\Rachel Collins\GSO Man Adj Process-CODED FOLDER DO NOT MOVE\Group_MA_Post_Process_Report_Q2_2019_FINAL.xlsx"" AS ( SELECT * FROM adj_not_proc) ;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_Pace_Adjustment_Processing_2019.sas
CREATE TABLE source_data AS ( SELECT  *  FROM groupadj.group_adj_Q2_2019 );,DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_Pace_Adjustment_Processing_2019.sas
ALTER TABLE source_data DROP COLUMN Row_id ;,DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_Pace_Adjustment_Processing_2019.sas
" CREATE TABLE AW_GSO_STG.MI_SW_EVO_GRP_ACH_EADS_GSO_STG (  GSO_ROSTER_KEY VARCHAR( 255), YEAR integer, MONTH integer, ASOF_YRMO integer, GSO_CONTINENT VARCHAR( 255), GSO_OFFICE VARCHAR( 255), GSO_SUB_REGION VARCHAR( 255), SEGMENT VARCHAR( 255), SUB_SEGMENT VARCHAR( 255), POSITION_ID VARCHAR( 255), GOAL_TYPE VARCHAR( 255), ROSTER_ACCOUNT_NAME VARCHAR( 255), SUBMITTED_ACCOUNT_NAME VARCHAR( 255), GOALED_ACCOUNT_ID VARCHAR( 255), GOALED_ACCOUNT_ID_SOURCE VARCHAR( 255), RELTIO_ID VARCHAR( 255), DUNS VARCHAR( 255), INDUSTRY VARCHAR( 255), EID VARCHAR( 255), EID_PROSPECT VARCHAR( 255), ISAC_POSITION_ID VARCHAR( 255), GSO_DB_ID integer, ASSOCIATE_ROLE_TYPE VARCHAR( 255), POSITION_TYPE VARCHAR( 255), GSO_ACCOUNT_ROLE VARCHAR( 255), DEPLOYMENT_PARAMETER VARCHAR( 255), DEPLOYMENT_ISO VARCHAR( 255), DEPLOYMENT_CITY VARCHAR( 255), DEPLOYMENT_STRATEGY_NOTES VARCHAR( 255), LEADER_POSITION_ID VARCHAR( 255), GSO_DB_ID_LEADER integer, EID_LEADER VARCHAR( 255), SVP_POSITION_ID VARCHAR( 255), SVP_NAME VARCHAR( 255), VP_POSITION_ID VARCHAR( 255), VP_NAME VARCHAR( 255), LEADER_AREA_TEAM_POSITION_ID VARCHAR( 255), LEADER_AREA_TEAM VARCHAR( 255), SUB_LEADER_1_POSITION_ID VARCHAR( 255), SUB_LEADER_1 VARCHAR( 255), SUB_LEADER_2_POSITION_ID VARCHAR( 255), SUB_LEADER_2 VARCHAR( 255), QUOTE VARCHAR( 16), QUOTE_NAME VARCHAR( 255), QUOTE_STATUS VARCHAR( 10), NET_QT_CNT integer, MARSHA VARCHAR( 10), BRND_NAME VARCHAR( 33), BRND VARCHAR( 3), DATA_SOURCE VARCHAR( 10), CHAIN VARCHAR( 2), QUOTE_ACCOUNT_REGION VARCHAR( 30), QUOTE_ACCOUNT_COUNTRY VARCHAR( 100), QUOTE_ACCOUNT_COUNTRY_ISO VARCHAR( 100), QUOTE_ACCOUNT_CITY VARCHAR( 100), INCLUDE VARCHAR( 8), INCLUDE_REASON VARCHAR( 100), PRELIM_ACTION VARCHAR( 14), PRELIM_COMMENTS VARCHAR( 165), REFERRED_BY_EID VARCHAR( 100), PRIMARY_OPPTY_EID VARCHAR( 100), PROSPECT_QUOTE_FLAG VARCHAR( 1), PROSPECT_INCLUDE VARCHAR( 3), PROSPECT_INCLUDE_REASON VARCHAR( 97), ULTIMATE_PARENT_ACCOUNT_NM VARCHAR( 268), ULTIMATE_PARENT_DUNS VARCHAR( 268), ULTIMATE_PARENT_URI VARCHAR( 25), IMMEDIATE_PARENT_ACCOUNT_NM VARCHAR( 268), IMMEDIATE_PARENT_DUNS VARCHAR( 268), IMMEDIATE_PARENT_URI VARCHAR( 25), CHILD_ACCOUNT_NM VARCHAR( 268), CHILD_DUNS VARCHAR( 268), CHILD_URI VARCHAR( 25), RN integer, RV double, LOCAL_RV double, COMPUTED_RV DOUBLE ) ) by odbc ;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_Pace_Adjustment_Processing_2019.sas
INSERT INTO TABLE AWPROD.MI_SW_EVO_GRP_ACH_EADS_GSO_STG SELECT * FROM work.source_data;,DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_Pace_Adjustment_Processing_2019.sas
   INSERT INTO AW_GSO_STG.MI_SW_EVO_GRP_ACH_EADS_GSO_ADJ Select * FROM AW_GSO_STG.MI_SW_EVO_GRP_ACH_EADS_GSO_STG ) by odbc ;,DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_Pace_Adjustment_Processing_2019.sas
   DROP TABLE AW_GSO_STG.MI_SW_EVO_GRP_ACH_EADS_GSO_STG ) by odbc ;,DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_Pace_Adjustment_Processing_2019.sas
"   CALL AW_TGT_PROXY_DBO.GRANT_ON_TABLE( 'AW_GSO_STG','MI_SW_EVO_GRP_ACH_EADS_GSO_ADJ' )  ) by odbc ;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_Pace_Adjustment_Processing_2019.sas
   ANALYZE TABLE AW_GSO_STG.MI_SW_EVO_GRP_ACH_EADS_GSO_ADJ COMPUTE STATISTICS FOR ALL COLUMNS TABLESAMPLE SYSTEM( 10 )  ,DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_Group_Pace_Adjustment_Processing_2019.sas
"CREATE TABLE man_adj_source AS ( SELECT  *, Reason_4_new AS Reason_4, Reason_5_new AS Reason_5, CAST( Reason_4, $30.  ) AS Reason_4_new , CAST( Reason_5, $30.  ) AS Reason_5_new  FROM man_adj_source  WHERE row_id<>' ');",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_TRN_ADJ_FINAL_VALIDATION.sas
"ALTER TABLE man_adj_source DROP COLUMN Reason_4 ,  Reason_5 ;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_TRN_ADJ_FINAL_VALIDATION.sas
" CREATE TABLE man_adj AS ( SELECT  *  , FORMAT(Reason_1, VARCHAR(30)) AS Reason_1 , FORMAT(Reason_2, VARCHAR(30)) AS Reason_2 , FORMAT(Reason_3, VARCHAR(30)) AS Reason_3 , FORMAT(Reason_4, VARCHAR(30)) AS Reason_4 , FORMAT(row_id, INT)  AS row_id , UPPER( Marsha_Code_ ) AS Marsha_Code_ , UPPER( Account_Name_ ) AS Account_Name_ , UPPER( REVENUECURRENCYCODE_Mustmatchwha ) AS REVENUECURRENCYCODE_Mustmatchwha  FROM man_adj_source );",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_TRN_ADJ_FINAL_VALIDATION.sas
 CREATE TABLE curr_ref AS select distinct( curr_code) FROM aw_tgt.treasfx_fcst;,DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_TRN_ADJ_FINAL_VALIDATION.sas
" CREATE TABLE man_adj2 AS select a.* , b.* , c.marsha AS plu_marsha FROM Man_adj a LEFT JOIN Curr_ref b ON a.REVENUECURRENCYCODE_Mustmatchwha=b.curr_code LEFT JOIN aw_tgt.property_master c ON a.Marsha_Code_=c.marsha;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_TRN_ADJ_FINAL_VALIDATION.sas
"SELECT * FROM Man_adj2 ORDER BY Marsha_Code_ ,Account_Name_ ,Month_Impacted_ ,Year_Applied;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_TRN_ADJ_FINAL_VALIDATION.sas
" CREATE TABLE errors AS ( SELECT  *  , Marsha_Code_||Account_Name_||Month_Impacted_||Year_Impacted AS concatvbl  FROM Man_adj2 );",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_TRN_ADJ_FINAL_VALIDATION.sas
SELECT * FROM errors ORDER BY concatvbl;,DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_TRN_ADJ_FINAL_VALIDATION.sas
" CREATE TABLE Man_adj3 AS ( SELECT   *  , first(concatvbl) AS first_id , last(concatvbl) AS last_id , CASE WHEN  not ( first_id = 1 AND last_id = 1)  THEN 1 ELSE 0 END AS dup, GROUP BY concatvbl ORDER BY concatvbl )  FROM errors );",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_TRN_ADJ_FINAL_VALIDATION.sas
" UPDATE man_adj3 set Reason_1 = ( CASE WHEN plu_marsha = '' THEN 'Invalid Marsha Code' ELSE '' END), Reason_2 = ( CASE WHEN curr_code = '' THEN 'Invalid Currency Code' ELSE '' END), Reason_3 = ( CASE WHEN dup = 1 THEN 'Multiple Submissions' ELSE '' END), Reason_4 = ( CASE WHEN UPPER( Segment_) not IN ( 'CORPORATE', 'CORPORATE-EXTENDED STAY', 'AIRLINE', 'GOVERNMENT') THEN 'Invalid Segment' ELSE '' END) ;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_TRN_ADJ_FINAL_VALIDATION.sas
SELECT * FROM Man_adj3 ORDER BY Row_ID;,DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_TRN_ADJ_FINAL_VALIDATION.sas
"CREATE TABLE ""\\hdqmdm1fpcl3v2\LODG-SMPS\Support\Global Performance Services ( GPS)\Rachel Collins\GSO Man Adj Process-CODED FOLDER DO NOT MOVE\GSO TRANSIENT Man Adj Process-CODED FILE DO NOT MOVE_Q2_Final.xlsx"" AS ( SELECT * FROM man_adj3) ;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_TRN_ADJ_FINAL_VALIDATION.sas
" CREATE TABLE gso_corp_roster AS  (  select * FROM AW_GSO_PRD.GSO_ROSTER_BY_MONTH WHERE goal_type='Stayed_Paid' AND segment IN ( 'Corporate','Government','Airline') AND nvl( SEG_TYPE_EXCEPTION,'') <> 'Y' ) ;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_TRN_ADJ_INITIAL_VALIDATION.sas
" CREATE TABLE adjustments AS ( SELECT  *  , UPPER( Segment_Type_ ) AS seg_type , CASE WHEN  Month_Impacted_='January'  THEN 1 WHEN  Month_Impacted_='February'  THEN 2 WHEN  Month_Impacted_='March'  THEN 3 WHEN  Month_Impacted_='April'  THEN 4 WHEN  Month_Impacted_='May'  THEN 5 WHEN  Month_Impacted_='June'  THEN 6 WHEN  Month_Impacted_='July'  THEN 7 WHEN  Month_Impacted_='August'  THEN 8 WHEN  Month_Impacted_='September'  THEN 9 WHEN  Month_Impacted_='October'  THEN 10 WHEN  Month_Impacted_='November'  THEN 11 WHEN  Month_Impacted_='December'  THEN 12 END AS month FROM man_adj_source );",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_TRN_ADJ_INITIAL_VALIDATION.sas
" CREATE TABLE adjustments_final AS select distinct e.associate AS associate_name, a.*, c.position_id, c.GOALED_ACCOUNT_ID, c.report_month AS deployed_month, c.gso_continent AS gso_continent, c.gso_office AS gso_office, c.segment AS GSO_SEGMENT, c.gso_account_role AS gso_account_role, c.associate_role_type, c.deployment_parameter AS deployment_parameter, c.deployment_city AS depl_city, c.sub_segment AS sub_segment, c.gso_roster_key AS gso_roster_key FROM adjustments a LEFT JOIN gso_corp_roster c ON (  c.report_month=a.month AND UPPER( a.Associate_EID_)=UPPER( c.eid) AND UPPER( a.Account_Name_)=UPPER( c.ROSTER_ACCOUNT_NAME)) AND a.seg_type=c.seg_type LEFT JOIN associate e ON ( UPPER( a.Associate_EID_)=UPPER( e.EID)) ORDER BY row_id;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_TRN_ADJ_INITIAL_VALIDATION.sas
"CREATE TABLE transpose AS ( SELECT   *  , CONCAT_WS( ',',country_deployment, deployment_parameter ) AS country_deployment , CASE WHEN  first(row_id ) THEN ' ' END AS country_deployment, LAST(row_id) OVER ( PARTITION BY row_id GROUP BY row_id ORDER BY row_id )  FROM adjustments_final );",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_TRN_ADJ_INITIAL_VALIDATION.sas
ALTER TABLE transpose DROP COLUMN deployment_parameter ;,DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_TRN_ADJ_INITIAL_VALIDATION.sas
" CREATE TABLE man_adj AS ( SELECT  *  , FORMAT(Reason_1, VARCHAR(30)) AS Reason_1 , FORMAT(Reason_2, VARCHAR(30)) AS Reason_2 , FORMAT(Reason_3, VARCHAR(30)) AS Reason_3 , FORMAT(Reason_4, VARCHAR(30)) AS Reason_4 , UPPER( Marsha_Code_ ) AS Marsha_Code_ , UPPER( Account_Name_ ) AS Account_Name_ , UPPER( REVENUE_CURRENCY_CODE__Must_matc ) AS REVENUE_CURRENCY_CODE__Must_matc  FROM transpose );",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_TRN_ADJ_INITIAL_VALIDATION.sas
 CREATE TABLE curr_ref AS select distinct( curr_code) FROM aw_tgt.treasfx_fcst;,DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_TRN_ADJ_INITIAL_VALIDATION.sas
" CREATE TABLE man_adj2 AS select a.* , b.* , c.marsha AS plu_marsha FROM Man_adj a LEFT JOIN Curr_ref b ON a.REVENUE_CURRENCY_CODE__Must_matc=b.curr_code LEFT JOIN aw_tgt.property_master c ON a.Marsha_Code_=c.marsha;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_TRN_ADJ_INITIAL_VALIDATION.sas
"SELECT * FROM Man_adj2 ORDER BY Marsha_Code_ ,Account_Name_ ,Month_Impacted_ ,Year_Applied;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_TRN_ADJ_INITIAL_VALIDATION.sas
" CREATE TABLE errors AS ( SELECT  *  , Marsha_Code_||Account_Name_||Month_Impacted_||Year_Impacted AS concatvbl  FROM Man_adj2 );",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_TRN_ADJ_INITIAL_VALIDATION.sas
SELECT * FROM errors ORDER BY concatvbl;,DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_TRN_ADJ_INITIAL_VALIDATION.sas
" CREATE TABLE Man_adj3 AS ( SELECT   *  , first(concatvbl) AS first_id , last(concatvbl) AS last_id , CASE WHEN  not ( first_id = 1 AND last_id = 1)  THEN 1 ELSE 0 END AS dup, GROUP BY concatvbl ORDER BY concatvbl )  FROM errors );",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_TRN_ADJ_INITIAL_VALIDATION.sas
" UPDATE man_adj3 set Reason_1 = ( CASE WHEN plu_marsha = '' THEN 'Invalid Marsha Code' ELSE '' END), Reason_2 = ( CASE WHEN curr_code = '' THEN 'Invalid Currency Code' ELSE '' END), Reason_3 = ( CASE WHEN dup = 1 THEN 'Multiple Submissions' ELSE '' END) ;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_TRN_ADJ_INITIAL_VALIDATION.sas
SELECT * FROM Man_adj3 ORDER BY Row_ID;,DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_TRN_ADJ_INITIAL_VALIDATION.sas
" CREATE TABLE man_adj4 AS select Row_id, Reason_1, Reason_2, Reason_3, Reason_4, Chain___Marriott_or_Starwood, Month_Impacted_, Year_Impacted, Month_Applied_, Year_Applied, GSO_SEGMENT, seg_type, position_id, gso_office, associate_name, Associate_EID_, associate_role_type, Marsha_Code_, Account_Name_, GOALED_ACCOUNT_ID AS account_id, _1__I_have_verified_unmatched_pr, _2__Documentation_is_attached_to, _3__System_technical_issue_cause, Mini_Hotel_Contract_Code, gso_account_role, country_deployment, Room_Nights_, Room_Revenue_, REVENUE_CURRENCY_CODE__Must_matc, Name_of_Unmatched_listing_to_sub, SourceID_of_Unmatched_listing_to, Reason_for_Manual_Adjustment_, Submission_Notes_, GPS_Approved, GPS_Comments FROM Man_adj3;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_TRN_ADJ_INITIAL_VALIDATION.sas
"CREATE TABLE ""\\hdqmdm1fpcl3v2\LODG-SMPS\Support\Global Performance Services ( GPS)\Rachel Collins\GSO Man Adj Process-CODED FOLDER DO NOT MOVE\GSO TRANSIENT Man Adj Process-CODED FILE DO NOT MOVE_Q2.xlsx"" AS ( SELECT * FROM man_adj4) ;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_TRN_ADJ_INITIAL_VALIDATION.sas
" CREATE TABLE archive.trn_ma_base_source_Q2_2019 AS select a.ROW_ID , a.Year_Impacted AS YEAR , CASE WHEN a.Month_Impacted_='January' THEN 1 WHEN a.Month_Impacted_='February' THEN 2 WHEN a.Month_Impacted_='March' THEN 3 WHEN a.Month_Impacted_='April' THEN 4 WHEN a.Month_Impacted_='May' THEN 5 WHEN a.Month_Impacted_='June' THEN 6 WHEN a.Month_Impacted_='July' THEN 7 WHEN a.Month_Impacted_='August' THEN 8 WHEN a.Month_Impacted_='September' THEN 9 WHEN a.Month_Impacted_='October' THEN 10 WHEN a.Month_Impacted_='November' THEN 11 WHEN a.Month_Impacted_='December' THEN 12 END AS MONTH , CASE WHEN PLU.REGION IN ( 'AF','ML') THEN 'Middle East Africa' WHEN PLU.REGION IN ( 'W_','E_') THEN 'United States' WHEN PLU.REGION IN ( 'EC') THEN 'Asia Pacific Excluding China' ELSE PLU.REGION_NAME END AS PROP_REGION , ISO.COUNTRY_ISO3_CD AS PROP_COUNTRY_ISO , PLU.BRND AS BRND , PLU.MISW_FLAG AS CHAIN , CASE WHEN upper( a.segment_)='CORPORATE-EXTENDED STAY' THEN 'LENGTH of Stay 5-11' ELSE 'LENGTH of Stay 1-4' END AS LOS_TIER , upper( a.Segment_Type_) AS SEG_TYPE , PLU.MARSHA AS MARSHA , ACCOUNT_ID AS ULTIMATE_PARENT_URI , '' AS IMMEDIATE_PARENT_URI , '' AS IMMEDIATE_PARENT_ACCOUNT_NM , '' AS IMMEDIATE_PARENT_DUNS , '' AS CHILD_URI , '' AS CHILD_ACCOUNT_NM , '' AS CHILD_DUNS , a.REVENUECURRENCYCODE_Mustmatchwha AS PROP_CURR , SUM( a.Room_Nights_) AS RN , SUM( a.Room_Revenue_) AS LOCAL_RV FROM Man_adj3 a LEFT JOIN aw_tgt.property_master PLU ON a.Marsha_Code_=PLU.marsha LEFT JOIN gso_stg.COUNTRY_GSO_CONTINENT_MAPPING ISO ON UPPER( PLU.COUNTRY) = ISO.COUNTRY_NAME WHERE GPS_Approved='Yes' GROUP BY ROW_ID, YEAR, MONTH, PROP_REGION, PROP_COUNTRY_ISO, BRND, CHAIN, LOS_TIER, SEG_TYPE, MARSHA, ULTIMATE_PARENT_URI, IMMEDIATE_PARENT_URI, IMMEDIATE_PARENT_ACCOUNT_NM, IMMEDIATE_PARENT_DUNS, CHILD_URI, CHILD_ACCOUNT_NM, CHILD_DUNS, PROP_CURR ORDER BY ROW_ID, YEAR, MONTH, PROP_REGION, PROP_COUNTRY_ISO, BRND, CHAIN, LOS_TIER, SEG_TYPE, MARSHA, ULTIMATE_PARENT_URI, IMMEDIATE_PARENT_URI, IMMEDIATE_PARENT_ACCOUNT_NM, IMMEDIATE_PARENT_DUNS, CHILD_URI, CHILD_ACCOUNT_NM, CHILD_DUNS, PROP_CURR ;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_TRN_ADJ_LOAD.sas
 CREATE TABLE adj_approved_processed AS select * FROM man_adj WHERE GPS_Approved='Yes' AND row_id IN ( select row_id FROM archive.trn_ma_base_source_Q2_2019 ) ;,DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_TRN_ADJ_LOAD.sas
 CREATE TABLE adj_approved_notprocessed AS select * FROM man_adj WHERE GPS_Approved='Yes' AND row_id not IN ( select row_id FROM archive.trn_ma_base_source_Q2_2019 ) ;,DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_TRN_ADJ_LOAD.sas
"CREATE TABLE ""\\hdqmdm1fpcl3v2\LODG-SMPS\Support\Global Performance Services ( GPS)\Rachel Collins\GSO Man Adj Process-CODED FOLDER DO NOT MOVE\Transient_MA_Post_Process_Report.xlsx"" AS ( SELECT * FROM adj_approved_processed) ;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_TRN_ADJ_LOAD.sas
"CREATE TABLE ""\\hdqmdm1fpcl3v2\LODG-SMPS\Support\Global Performance Services ( GPS)\Rachel Collins\GSO Man Adj Process-CODED FOLDER DO NOT MOVE\Transient_MA_Post_Process_Report.xlsx"" AS ( SELECT * FROM adj_approved_notprocessed) ;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_TRN_ADJ_LOAD.sas
" CREATE TABLE AW_GSO_STG.TRN_MA_BASE_STG (  YEAR SMALLINT, MONTH SMALLINT, PROP_REGION VARCHAR( 1000), PROP_COUNTRY_ISO VARCHAR( 255), BRND   VARCHAR( 255), CHAIN VARCHAR( 255), LOS_TIER VARCHAR( 255), SEG_TYPE VARCHAR( 255), MARSHA VARCHAR( 255), ULTIMATE_PARENT_URI VARCHAR( 255), IMMEDIATE_PARENT_URI VARCHAR( 255), IMMEDIATE_PARENT_ACCOUNT_NM VARCHAR( 1000), IMMEDIATE_PARENT_DUNS VARCHAR( 255), CHILD_URI VARCHAR( 255), CHILD_ACCOUNT_NM VARCHAR( 1000), CHILD_DUNS VARCHAR( 255), PROP_CURR  VARCHAR( 255), RN BIGINT, LOCAL_RV FLOAT ) ) by odbc ;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_TRN_ADJ_LOAD.sas
INSERT INTO TABLE gso_stg.TRN_MA_BASE_STG SELECT * FROM archive.trn_ma_base_source_Q2_2019;,DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_TRN_ADJ_LOAD.sas
   TRUNCATE Table AW_GSO_STG.TRN_MA_BASE ) by odbc ;,DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_TRN_ADJ_LOAD.sas
   INSERT INTO AW_GSO_STG.TRN_MA_BASE Select * FROM AW_GSO_STG.TRN_MA_BASE_STG ) by odbc ;,DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_TRN_ADJ_LOAD.sas
DROP TABLE gso_stg.TRN_MA_BASE_STG;,DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_TRN_ADJ_LOAD.sas
"   CALL AW_TGT_PROXY_DBO.GRANT_ON_TABLE( 'AW_GSO_STG','TRN_MA_BASE' )  ) by odbc ;",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_TRN_ADJ_LOAD.sas
   ANALYZE TABLE AW_GSO_STG.TRN_MA_BASE COMPUTE STATISTICS FOR ALL COLUMNS TABLESAMPLE SYSTEM( 10 )  ,DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_TRN_ADJ_LOAD.sas
 CREATE TABLE aw_check AS  (  SELECT COUNT( *) AS aw_cnt FROM AW_GSO_STG.TRN_MA_BASE  ) ;,DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_TRN_ADJ_LOAD.sas
 CREATE TABLE source_check AS SELECT COUNT( *) AS sc_cnt FROM archive.trn_ma_base_source_Q1_2019 ;,DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_TRN_ADJ_LOAD.sas
" CREATE TABLE check AS ( SELECT  *  , sc_cnt-aw_cnt AS cnt_chk , CASE WHEN cnt_chk=0 THEN 'YES' ELSE 'NO' END AS success FROM aw_check JOIN source_check);",DSP-Global_Sales_2020-01-14_DSP_-_Global_Sales_Manual_Adjustment_SAS_Scripts_GSO_TRN_ADJ_LOAD.sas
" CREATE TABLE Trans_rooms AS SELECT a.PROPERTY_CD , a.MARKET_CATEGORY_NM , a.confo_create_dt , COUNT( distinct( catt( DATEPART( CONFO_CREATE_DT),CONFO_NUM_ORIG_ID))) AS res_count , SUM( a.ROOMS_QTY) AS rn , SUM( a.room_rev_cusd_sub_amt) AS rev FROM awprod.Mrdw_bi_fact_gross_nos AS A WHERE a.confo_create_dt >= '20MAR2018'D AND a.confo_create_dt <= '31OCT2019'D AND a.MARKET_CATEGORY_NM = 'TRANSIENT/RENTALS' AND stay_year IN ( 2018 2019) AND ( CHANNEL_AGGREGATE_CD ='Marriott.com' OR Rate_PGM_CD='XDRZ') GROUP BY a.PROPERTY_CD , a.MARKET_CATEGORY_NM , a.confo_create_dt;",ERS Datapullv2.sas
" CREATE TABLE adhoc.trans_rooms2 AS select a.marsha , b.market_category_nm , b.confo_create_dt AS Date , b.res_count , b.rn , b.rev FROM ers_plu AS a LEFT JOIN trans_rooms AS b ON a.marsha = b.property_cd;",ERS Datapullv2.sas
" CREATE TABLE ERS_Data AS select property_cd AS marsha , TRIMCONCAT( CREATE_YEAR,CREATE_MONTH) AS yearmn , CREATE_MONTH AS mn , DATEPART( CREATE_DT) AS date FORMAT DATE9. , REV , NIGHTS AS RN , ACCESSIBLE_RV , BATHROOM_RV , BED_TYPE_RV , BUILDING_RV , CONNECTING_ROOMS_RV , FLOOR_RV , HOSPITALITY_SERVICES_RV , LOUNGE_RV , OUTDOOR_SPACE_RV , PROXIMITY_RV , ROOM_FEATURE_RV , SMOKING_RV , VIEW_RV FROM AWPROD.ERS_XDRZ_ORG_PIX_SUMMARY WHERE PROPERTY_CD NOT IN ( 'AQAFP','RESPC') AND CREATE_DT >= '20MAR2018'D ORDER BY PROPERTY_CD , CALCULATED DATE;",ERS Datapullv2.sas
" CREATE TABLE ERS_Data2 AS select a.* , b.owner , b.misw_flag , rev/c.fx AS rev_usd , ACCESSIBLE_RV/c.fx AS ACCESSIBLE , BATHROOM_RV/c.fx AS BATHROOM , BED_TYPE_RV/c.fx AS BED_TYPE , BUILDING_RV/c.fx AS BUILDING , CONNECTING_ROOMS_RV/c.fx AS CONNECTING_ROOMS , FLOOR_RV/c.fx AS FLOOR , HOSPITALITY_SERVICES_RV/c.fx AS HOSPITALITY_SERVICES , LOUNGE_RV/c.fx AS LOUNGE , OUTDOOR_SPACE_RV/c.fx AS OUTDOOR_SPACE , PROXIMITY_RV/c.fx AS PROXIMITY , ROOM_FEATURE_RV/c.fx AS ROOM_FEATURE , SMOKING_RV/c.fx AS SMOKING , VIEW_RV/c.fx AS VIEW FROM ERS_Data AS a LEFT JOIN awprod.property_master AS b ON a.marsha = b.marsha LEFT JOIN fx.fxrates AS c ON b.base_curr = c.code AND CAST( a.mn AS INT ) = c.mn ORDER BY MARSHA , a.DATE;",ERS Datapullv2.sas
" CREATE TABLE ERS_Data3 AS select a.marsha , a.date , a.yearmn , a.mn , a.owner , a.misw_flag , a.rev_usd , a.ACCESSIBLE , a.BATHROOM , a.BED_TYPE , a.BUILDING , a.CONNECTING_ROOMS , a.FLOOR , a.HOSPITALITY_SERVICES , a.LOUNGE , a.OUTDOOR_SPACE , a.PROXIMITY , a.ROOM_FEATURE , a.SMOKING , a.VIEW , CASE WHEN b.accessible = 'Incremental' THEN a.ACCESSIBLE ELSE 0 END AS ACCESSIBLE_INC , CASE WHEN b.bathroom = 'Incremental' THEN a.BATHROOM ELSE 0 END AS BATHROOM_INC , CASE WHEN b.bed_type = 'Incremental' THEN a.BED_TYPE ELSE 0 END AS BED_TYPE_INC , CASE WHEN b.building = 'Incremental' THEN a.BUILDING ELSE 0 END AS BUILDING_INC , CASE WHEN b.CONNECTING_ROOMS = 'Incremental' THEN a.CONNECTING_ROOMS ELSE 0 END AS CONNECTING_ROOMS_INC , CASE WHEN a.misw_flag = 'SW' THEN 0 ELSE a.HOSPITALITY_SERVICES END AS HOSPITALITY_SERVICES_INC , CASE WHEN b.FLOOR = 'Incremental' THEN a.FLOOR ELSE 0 END AS FLOOR_INC , CASE WHEN b.LOUNGE = 'Incremental' THEN a.LOUNGE ELSE 0 END AS LOUNGE_INC , CASE WHEN b.OUTDOOR_SPACE = 'Incremental' THEN a.OUTDOOR_SPACE ELSE 0 END AS OUTDOOR_SPACE_INC , CASE WHEN b.PROXIMITY = 'Incremental' THEN a.PROXIMITY ELSE 0 END AS PROXIMITY_INC , CASE WHEN b.ROOM_FEATURE = 'Incremental' THEN a.ROOM_FEATURE ELSE 0 END AS ROOM_FEATURE_INC , CASE WHEN b.SMOKING = 'Incremental' THEN a.SMOKING ELSE 0 END AS SMOKING_INC , CASE WHEN b.VIEW = 'Incremental' THEN a.VIEW ELSE 0 END AS VIEW_INC FROM ERS_Data2 AS a LEFT JOIN ERS_PLU AS b ON a.marsha = b.marsha ORDER BY MARSHA , a.DATE;",ERS Datapullv2.sas
" CREATE TABLE ERS_Datacomb AS select a.marsha , a.date , a.yearmn , a.owner , a.misw_flag , b.res_count , b.rn AS trans_rn , b.rev AS trans_rev , a.rev_usd , ACCESSIBLE , BATHROOM , BED_TYPE , BUILDING , CONNECTING_ROOMS , FLOOR , HOSPITALITY_SERVICES , LOUNGE , OUTDOOR_SPACE , PROXIMITY , ROOM_FEATURE , SMOKING , VIEW , ACCESSIBLE_INC , BATHROOM_INC , BED_TYPE_INC , BUILDING_INC , CONNECTING_ROOMS_INC , FLOOR_INC , HOSPITALITY_SERVICES_INC , LOUNGE_INC , OUTDOOR_SPACE_INC , PROXIMITY_INC , ROOM_FEATURE_INC , SMOKING_INC , VIEW_INC FROM ers_data3 AS a LEFT JOIN adhoc.trans_rooms2 AS b ON a.marsha = b.marsha AND a.date = b.date;",ERS Datapullv2.sas
" CREATE TABLE ERS_Data_YOY AS select coalesce( a.marsha, b.marsha) AS marsha , coalesce( a.date, b.date + 364) AS date format date9. , b.date + 364 format date9. AS dately , a.yearmn , a.owner , a.misw_flag , a.res_count , a.rev_usd , b.rev_usd AS rev_usd_ly , a.ACCESSIBLE , a.BATHROOM , a.BED_TYPE , a.BUILDING , a.CONNECTING_ROOMS , a.FLOOR , a.HOSPITALITY_SERVICES , a.LOUNGE , a.OUTDOOR_SPACE , a.PROXIMITY , a.ROOM_FEATURE , a.SMOKING , a.VIEW , a.ACCESSIBLE_INC , a.BATHROOM_INC , a.BED_TYPE_INC , a.BUILDING_INC , a.CONNECTING_ROOMS_INC , a.FLOOR_INC , a.HOSPITALITY_SERVICES_INC , a.LOUNGE_INC , a.OUTDOOR_SPACE_INC , a.PROXIMITY_INC , a.ROOM_FEATURE_INC , a.SMOKING_INC , a.VIEW_INC , b.ACCESSIBLE AS ACCESSIBLE_LY , b.BATHROOM AS BATHROOM_LY , b.BED_TYPE AS BED_TYPE_LY , b.BUILDING AS BUILDING_ly , b.CONNECTING_ROOMS AS CONNECTING_ROOMS_LY , b.FLOOR AS FLOOR_LY , b.HOSPITALITY_SERVICES AS HOSPITALITY_SERVICES_LY , b.LOUNGE AS LOUNGE_LY , b.OUTDOOR_SPACE AS OUTDOOR_SPACE_LY , b.PROXIMITY AS PROXIMITY_LY , b.ROOM_FEATURE AS ROOM_FEATURE_LY , b.SMOKING AS SMOKING_LY , b.VIEW AS VIEW_LY , b.ACCESSIBLE_INC AS ACCESSIBLE_INC_LY , b.BATHROOM_INC AS BATHROOM_INC_LY , b.BED_TYPE_INC AS BED_TYPE_INC_LY , b.BUILDING_INC AS BUILDING_INC_LY , b.CONNECTING_ROOMS_INC AS CONNECTING_ROOMS_INC_LY , b.FLOOR_INC AS FLOOR_INC_LY , b.HOSPITALITY_SERVICES_INC AS HOSPITALITY_SERVICES_INC_LY , b.LOUNGE_INC AS LOUNGE_INC_LY , b.OUTDOOR_SPACE_INC AS OUTDOOR_SPACE_INC_LY , b.PROXIMITY_INC AS PROXIMITY_INC_LY , b.ROOM_FEATURE_INC AS ROOM_FEATURE_INC_LY , b.SMOKING_INC AS SMOKING_INC_LY , b.VIEW_INC AS VIEW_INC_LY FROM ERS_Datacomb AS a full JOIN ERS_Datacomb AS b ON a.marsha = b.marsha AND a.date = b.date +364 WHERE a.date >= '01MAR2019'D AND a.owner = 'Host Hotels & Resorts, Inc.';",ERS Datapullv2.sas
" CREATE TABLE ERS_Data_YOYv2 AS select coalesce( a.marsha, b.marsha) AS marsha , coalesce( a.date, b.date + 364) AS date format date9. , b.date + 364 format date9. AS dately , a.yearmn , a.owner , a.misw_flag , a.res_count , a.rev_usd , b.rev_usd AS rev_usd_ly FROM ERS_Datacomb AS a full JOIN ERS_Datacomb AS b ON a.marsha = b.marsha AND a.date = b.date +364 WHERE a.date >= '01MAR2019'D AND a.owner = 'Host Hotels & Resorts, Inc.';",ERS Datapullv2.sas
"CREATE TABLE ""G:\RM EAnlys\Mohamed\ERS\ERSData through August 2019.xlsx"" AS ( SELECT * FROM ERS_Datacomb) ;",ERS Datapullv2.sas
"CREATE TABLE ""G:\RM EAnlys\Mohamed\ERS\ERSData through August 2019V2.xlsx"" AS ( SELECT * FROM ERS_Data_YOY) ;",ERS Datapullv2.sas
" CREATE TABLE all_rpo AS  (  select prop_code, stydt,FCST_OCC_CURR,STYDOW FROM aw_TGT_PROXY_DBO.IT_CACHE_PW_OUTPUT_TGT WHERE EXECUTION_DT = &dte  )  ;",ESF - OY Forecast.sas
" CREATE TABLE fw_fcst AS select PROP_CODE, 100*year( STYDT)+month( STYDT) AS yrmo, AVG( FCST_OCC_CURR)/100 AS FW_OY_FCST FROM all_rpo GROUP BY PROP_CODE, calculated yrmo;",ESF - OY Forecast.sas
" CREATE TABLE WD_fcst AS select PROP_CODE, 100*year( STYDT)+month( STYDT) AS yrmo, AVG( FCST_OCC_CURR)/100 AS WD_OY_FCST FROM all_rpo WHERE STYDOW not IN ( 'FRI', 'SAT') GROUP BY PROP_CODE, calculated yrmo;",ESF - OY Forecast.sas
" CREATE TABLE WE_fcst AS select PROP_CODE, 100*year( STYDT)+month( STYDT) AS yrmo, AVG( FCST_OCC_CURR)/100 AS WE_OY_FCST FROM all_rpo WHERE STYDOW IN ( 'FRI', 'SAT') GROUP BY PROP_CODE, calculated yrmo;",ESF - OY Forecast.sas
" CREATE TABLE WED_fcst AS select PROP_CODE, 100*year( STYDT)+month( STYDT) AS yrmo, AVG( FCST_OCC_CURR)/100 AS WED_OY_FCST FROM all_rpo WHERE STYDOW ='WED' GROUP BY PROP_CODE, calculated yrmo;",ESF - OY Forecast.sas
" CREATE TABLE TUEWED_fcst AS select PROP_CODE, COUNT( PROP_CODE) AS midweek_occ_ge80_num FROM all_rpo WHERE STYDOW ='WED' AND 100*year( STYDT)+month( STYDT) IN ( &mo_out1, &mo_out2, &mo_out3) AND FCST_OCC_CURR/100>=.8 GROUP BY PROP_CODE;",ESF - OY Forecast.sas
" CREATE TABLE Sat_fcst AS select PROP_CODE, 100*year( STYDT)+month( STYDT) AS yrmo, AVG( FCST_OCC_CURR/100) AS SAT_OY_FCST FROM all_rpo WHERE STYDOW ='SAT' GROUP BY PROP_CODE, calculated yrmo;",ESF - OY Forecast.sas
" CREATE TABLE all_fcst AS select a.PROP_CODE, a.yrmo, a.FW_OY_FCST, b.WD_OY_FCST, c.WE_OY_FCST, d.WED_OY_FCST, e.SAT_OY_FCST FROM fw_fcst AS a LEFT JOIN wd_fcst AS b ON a.PROP_CODE=b.PROP_CODE AND a.yrmo=b.yrmo LEFT JOIN we_fcst AS c ON a.PROP_CODE=c.PROP_CODE AND a.yrmo=c.yrmo LEFT JOIN wed_fcst AS d ON a.PROP_CODE=d.PROP_CODE AND a.yrmo=d.yrmo LEFT JOIN sat_fcst AS e ON a.PROP_CODE=e.PROP_CODE AND a.yrmo=e.yrmo;",ESF - OY Forecast.sas
 CREATE TABLE fcst_1mo AS ( SELECT  *  FROM all_fcst  WHERE yrmo=&mo_out1);,ESF - OY Forecast.sas
 CREATE TABLE fcst_2mo AS ( SELECT  *  FROM all_fcst  WHERE yrmo=&mo_out2);,ESF - OY Forecast.sas
 CREATE TABLE fcst_3mo AS ( SELECT  *  FROM all_fcst  WHERE yrmo=&mo_out3);,ESF - OY Forecast.sas
" CREATE TABLE ESF.esf_oy_forecast AS select coalesce( a.PROP_CODE,b.PROP_CODE,c.PROP_CODE) AS MARSHA , a.FW_OY_FCST AS FW_OY_FCST_Occ_1MO, a.WD_OY_FCST AS WD_OY_FCST_Occ_1MO , a.WE_OY_FCST AS WE_OY_FCST_Occ_1MO, a.WED_OY_FCST AS Wed_Occ_1MO , a.SAT_OY_FCST AS Sat_Occ_1MO , b.FW_OY_FCST AS FW_OY_FCST_Occ_2MO, b.WD_OY_FCST AS WD_OY_FCST_Occ_2PO , b.WE_OY_FCST AS WE_OY_FCST_Occ_2PO, b.WED_OY_FCST AS Wed_Occ_2MO , b.SAT_OY_FCST AS Sat_Occ_2MO , c.FW_OY_FCST AS FW_OY_FCST_Occ_3MO, c.WD_OY_FCST AS WD_OY_FCST_Occ_3MO , c.WE_OY_FCST AS WE_OY_FCST_Occ_3MO, c.WED_OY_FCST AS Wed_Occ_3MO , d.midweek_occ_ge80_num FROM fcst_1mo AS a full JOIN fcst_2mo AS b ON a.PROP_CODE=b.PROP_CODE full JOIN fcst_3mo AS c ON coalesce( a.PROP_CODE,b.PROP_CODE)=c.PROP_CODE LEFT JOIN TUEWED_fcst AS d ON coalesce( a.PROP_CODE,b.PROP_CODE,c.PROP_CODE)=d.PROP_CODE;",ESF - OY Forecast.sas
" CREATE TABLE rnbylos AS  (  select a.property_cd, res_los_qty , CASE WHEN market_segment_cd IN ( '50', '51', '52', '53', '54', '55', '56', '57', '58', '59') THEN 'CT' when market_segment_cd = 'GR' THEN 'GR' ELSE 'TR' END AS major_seg , COUNT( a.property_cd) AS rn , SUM( trip_purpose_bus_model_prob_qty) AS bus_rn FROM mrdw_fact_rev7_analysis_extract a, mrdw_dim_date b WHERE (  ( a.arrival_dt <= b.date_dt AND a.departure_dt > b.date_dt) OR ( a.arrival_dt = b.date_dt AND a.departure_dt = b.date_dt) ) AND 100*b.year_cal+b.month_cal_id >= &l6_mo. AND 100*b.year_cal+b.month_cal_id <= &curr_mo. AND a.accom_status_cd='A' GROUP BY a.property_cd, res_los_qty, major_seg ORDER BY a.property_cd, res_los_qty, major_seg  )  ;",ESF-3 and 4 LOS Mix.sas
" CREATE TABLE rnbylos2 AS select property_cd, res_los_qty, SUM( rn) AS rn FROM rnbylos GROUP BY property_cd, res_los_qty;",ESF-3 and 4 LOS Mix.sas
" CREATE TABLE totes AS select property_cd AS marsha, SUM( rn) AS rn_tot FROM rnbylos2 GROUP BY property_cd;",ESF-3 and 4 LOS Mix.sas
 CREATE TABLE es4 AS ( SELECT  *  FROM rnbylos2  WHERE res_los_qty=4);,ESF-3 and 4 LOS Mix.sas
 CREATE TABLE es5 AS ( SELECT  *  FROM rnbylos2  WHERE res_los_qty=5);,ESF-3 and 4 LOS Mix.sas
" CREATE TABLE esf.mixbylos AS select a.marsha, b.rn/a.rn_tot AS _4_night_stay_mix, c.rn/a.rn_tot AS _5_night_stay_mix FROM totes AS a LEFT JOIN es4 AS b ON a.marsha=b.property_cd LEFT JOIN es5 AS c ON a.marsha=c.property_cd;",ESF-3 and 4 LOS Mix.sas
 CREATE TABLE prop_master AS  (  SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER A  ) ;,ESF-Business Mix.sas
" CREATE TABLE busleis AS  (  select a.property_cd , CASE WHEN b.date_dt <= &dt_2mo. THEN 'Next 2 Months' ELSE 'Other' END AS timeframe , SUM( a.rooms_qty) AS rn , SUM( trip_purpose_bus_model_prob_qty*A.rooms_qty) AS bus_rn FROM mrdw_fact_rev7_analysis_extract a, mrdw_dim_date b WHERE (  ( a.arrival_dt <= b.date_dt AND a.departure_dt > b.date_dt) OR ( a.arrival_dt = b.date_dt AND a.departure_dt = b.date_dt) ) AND b.date_dt >= &lydt. AND b.date_dt <= &currdt. AND a.accom_status_cd='A' AND res_los_qty <= 11 AND market_segment_cd not IN ( '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', 'GR', 'CN', 'CT') GROUP BY a.property_cd, timeframe ORDER BY a.property_cd, timeframe  )  ;",ESF-Business Mix.sas
" CREATE TABLE marsha_bus_tot AS select property_cd AS marsha, SUM( bus_rn) AS bus_rn, SUM( rn) AS rn FROM busleis GROUP BY property_cd;",ESF-Business Mix.sas
" CREATE TABLE marsha_bus_n2m AS select property_cd AS marsha, SUM( bus_rn) AS bus_rn_n2m, SUM( rn) AS rn_n2m FROM busleis WHERE timeframe='Next 2 Months' GROUP BY property_cd;",ESF-Business Mix.sas
" CREATE TABLE esf.businessmix AS select p.marsha AS marsha , m.bus_rn/m.rn AS business_mix , n2m.bus_rn_n2m/n2m.rn_n2m AS business_mix_next2mo FROM prop_master AS p LEFT JOIN marsha_bus_tot AS m ON p.marsha=m.marsha LEFT JOIN marsha_bus_n2m AS n2m ON p.marsha=n2m.marsha;",ESF-Business Mix.sas
 CREATE TABLE prop_master AS  (  SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER A  ) ;,ESF-Combine Data.sas
" CREATE TABLE perdiem_by_zip AS select SUBSTRING( zip,1,5) AS zip, max( PD&YR.&Mon. ) AS PD&YR.&Mon. FROM perdiem_by_zip_orig GROUP BY calculated zip;",ESF-Combine Data.sas
" CREATE TABLE ecomm1_2 AS ( SELECT  *  , ' ' AS ota_prtcpt_num  FROM ecomm1  WHERE marsha<>'');",ESF-Combine Data.sas
" CREATE TABLE ecomm2_2 AS ( SELECT  *  , ' ' AS ota_prtcpt_num  FROM ecomm2 );",ESF-Combine Data.sas
" CREATE TABLE strrank AS  (  SELECT MARSHA, RANK_REVPAR_NUM, RANK_REVPAR_DEN FROM AW_TGT_BUS_DBO.STR_60MONTH WHERE yrmnth=&STRMo AND TIMEF='MONTH' AND asof_yrmo=&STRMo  ) ;",ESF-Combine Data.sas
" CREATE TABLE strrank3 AS ( SELECT  *  , compress( CAST( RANK_REVPAR_NUM,best12. ))||"" of ""||compress( CAST( RANK_REVPAR_DEN,best12. ) ) AS FW_STR_MNLY_RevPARRank_MN  FROM strrank );",ESF-Combine Data.sas
SELECT DISTINCT * FROM strrank3 ORDER BY marsha;,ESF-Combine Data.sas
" CREATE TABLE sellout_data AS select marsha , SUM( Actl_Sellouts) AS Actl_Sellouts , SUM( Psbl_Sellouts) AS Psbl_Sellouts , calculated Actl_Sellouts/ calculated Psbl_Sellouts AS sellout_efficiency FROM taneka.sellout_data WHERE L3<>'( no filter)' GROUP BY marsha;",ESF-Combine Data.sas
" CREATE TABLE esf.esf_combined AS select a.MARSHA, a.Hotel_Name , a.rd AS Area_Director, a.avp AS AVP, a.manager AS Management_Company , a.owner , a.MF, a.hcap AS HOTEL_CAPACITY , a.Function_Space, a.opendate , e.FW_RevPARIndex_Chg_L3 , e.FW_STR_OccIndex_Chg_L3 , e.FW_STR_OccIndex_Chg_MN , e.FW_STR_OccIndex_L3 , e.FW_STR_OccIndex_MN , e.FW_STR_RevPARIndex_L3 , e.FW_STR_RevPARIndex_YTD , e.FW_STR_MNLY_RevPARIndexChg_YTD , CASE WHEN WD_STR_ADRIndex_Chg_L3=. THEN e.FW_STR_ADRIndex_Chg_L3 ELSE WD_STR_ADRIndex_Chg_L3 END AS WD_STR_ADRIndex_Chg_L3 , CASE WHEN WD_STR_OccIndex_Chg_L3=. THEN e.FW_STR_OccIndex_Chg_L3 ELSE WD_STR_OccIndex_Chg_L3 END AS WD_STR_OccIndex_Chg_L3 , CASE WHEN WD_STR_OccIndex_Chg_MN=. THEN e.FW_STR_OccIndex_Chg_MN ELSE WD_STR_OccIndex_Chg_MN END AS WD_STR_OccIndex_Chg_MN , CASE WHEN WD_STR_OccIndex_L3=. THEN e.FW_STR_OccIndex_L3 ELSE WD_STR_OccIndex_L3 END AS WD_STR_OccIndex_L3 , CASE WHEN WD_STR_OccIndex_MN=. THEN e.FW_STR_OccIndex_MN ELSE WD_STR_OccIndex_MN END AS WD_STR_OccIndex_MN , CASE WHEN WE_STR_ADRIndex_chg_L3=. THEN e.FW_STR_ADRIndex_chg_L3 ELSE WE_STR_ADRIndex_chg_L3 END AS WE_STR_ADRIndex_chg_L3 , CASE WHEN WE_STR_ADRIndex_L3=. THEN e.FW_STR_ADRIndex_L3 ELSE WE_STR_ADRIndex_L3 END AS WE_STR_ADRIndex_L3 , CASE WHEN WE_STR_OccIndex_chg_L3=. THEN e.FW_STR_OccIndex_chg_L3 ELSE WE_STR_OccIndex_chg_L3 END AS WE_STR_OccIndex_chg_L3 , CASE WHEN WE_STR_OccIndex_Chg_MN=. THEN e.FW_STR_OccIndex_Chg_MN ELSE WE_STR_OccIndex_Chg_MN END AS WE_STR_OccIndex_Chg_MN , CASE WHEN WE_STR_OccIndex_L3=. THEN e.FW_STR_OccIndex_L3 ELSE WE_STR_OccIndex_L3 END AS WE_STR_OccIndex_L3 , CASE WHEN WE_STR_OccIndex_MN=. THEN e.FW_STR_OccIndex_MN ELSE WE_STR_OccIndex_MN END AS WE_STR_OccIndex_MN , CASE WHEN WE_STR_RevPARIndex_Chg_L3=. THEN e.FW_RevPARIndex_Chg_L3 ELSE WE_STR_RevPARIndex_Chg_L3 END AS WE_STR_RevPARIndex_Chg_L3 , CASE WHEN WE_STR_RevPARIndex_L3=. THEN e.FW_STR_RevPARIndex_L3 ELSE WE_STR_RevPARIndex_L3 END AS WE_STR_RevPARIndex_L3 , CASE WHEN WE_STR_RevPARIndex_MN=. THEN e.FW_STR_RevPARIndex_MN ELSE WE_STR_RevPARIndex_MN END AS WE_STR_RevPARIndex_MN , CASE WHEN WE_STR_RevPARIndex_Chg_MN=. THEN e.FW_STR_RevPARIndex_Chg_MN ELSE WE_STR_RevPARIndex_Chg_MN END AS WE_STR_RevPARIndex_Chg_MN , CASE WHEN RN_Es_Pace_Var_2MNOut<>. THEN RN_Es_Pace_Var_2MNOut ELSE 0 END AS RN_Es_Pace_Var_2MNOut , RN_Es_Pace_2MNOut , RN_Es_Pace_3MNOut , CASE WHEN WE_RN_Es_Pace_Var_2MNOut<>. THEN WE_RN_Es_Pace_Var_2MNOut ELSE 0 END AS WE_RN_Es_Pace_Var_2MNOut , WE_RN_Es_Pace_2MNOut , WE_RN_Es_Pace_3MNOut , CASE WHEN WE_RN_Pace_Var_2MNOut<>. THEN WE_RN_Pace_Var_2MNOut ELSE 0 END AS WE_RN_Pace_Var_2MNOut , WE_RN_Pace_2MNOut , WE_RN_Pace_3MNOut , CASE WHEN FW_GR_RN_Pace_Var_2MNOut<>. THEN FW_GR_RN_Pace_Var_2MNOut ELSE 0 END AS FW_GR_RN_Pace_Var_2MNOut , FW_GR_RN_Pace_2MNOut , CASE WHEN FW_GR_RN_Pace_Var_3MNOut<>. THEN FW_GR_RN_Pace_Var_3MNOut ELSE 0 END AS FW_GR_RN_Pace_Var_3MNOut , FW_GR_RN_Pace_3MNOut , CASE WHEN WE_GR_RN_Pace_Var_2MNOut<>. THEN WE_GR_RN_Pace_Var_2MNOut ELSE 0 END AS WE_GR_RN_Pace_Var_2MNOut , WE_GR_RN_Pace_2MNOut , WE_GR_RN_Pace_3MNOut , RN_Pace_2MNOut , RN_Pace_3MNOut , FW_ES_GR_RN_Pace_Var_2MNOut , d.FW_OY_FCST_Occ_1MO AS Occ_1MNOut , d.Wed_Occ_1MO AS Wed_Occ_1MNOut , h.brnd_rn_rwd/h.brnd_rn_tot AS MRW_Guests_Avg_L3 , h.rn_rwd/h.rn_tot AS MRW_Guests_L3 , h.brnd_rn_plat/h.brnd_rn_tot AS MRW_Plat_Guests_BrndAvg_L3 , h.rn_plat/h.rn_tot AS MRW_Plat_Guests_L3 , Es_GR_RN_Chg_L3 , Es_GR_RN_Chg_MN , Es_GR_RN_Mix_L3 , Es_RN_Chg_L3 , Es_RN_Chg_MN , Es_RN_Mix_Chg_L3 , Es_RN_Mix_L3 , EsADR_MN , EsADR_Chg_MN , EsADR_L3 , EsADR_Chg_L3 , EsOcc_MN , EsOcc_Chg_MN , EsOcc_L3 , EsOcc_Chg_L3 , Especialcorp_RN_Chg_L3 , Especialcorp_RN_L3 , Especialcorp_RN_L3/EsRN_L3 AS Especialcorp_MixofES_L3 , EsRevPAR_MN , EsRevPAR_chg_MN , EsRevPAR_L3 , EsRevPAR_Chg_L3 , EsRN_L3 , FW_GR_RN_Chg_L3 , FW_GR_RN_Mix_L3 , FW_Specialcorp_Mix_L3 , CASE WHEN MC29_RN_L12 gt 0 THEN MC29_RN_L12 ELSE 0 END AS MC29_RN_L12 , Occ_L3 AS FW_Occ_L3 , Occ_MN AS FW_Occ_MN , PremiumRoomPool_Mix_L3 , RevPAR_MN , SpecCorp_Es_Mix_L3 , T1_LM_NQ_ADR_Chg , T1_NQ_Mix_L3 , T1_NQ_Mix_L3_Chg , T1_Prem_2BD_vs_Studio_L3 , T1_TransRateEff_L3 , T1_TransRateEff_Chg_L3 , T1_WD_NQ_Mix_L3 , T1_WE_GR_Mix_L3 , T1_WE_NQ_Mix_L3 , T1_WE_TRE_Chg_L3 , T1_WE_TRE_MN , T2_LM_NQ_ADR_Chg , T3_LM_NQ_ADR_Chg , T4_LM_NQ_ADR_Chg , Studio_TotDem_L3 , TotDem_L3 , Studio_TotDem_L3/TotDem_L3 AS Studio_Demand_Mix_l3 , WD_Gr_RN_Chg_L3 , WD_Occ_L3 , WE_Gr_RN_Chg_L3 , WE_GR_RN_Chg_MN , WE_Gr_RN_Var_L3 , WE_Gr_RN_Var_MN , WE_Occ_L3 , WE_Occ_MN , ES_Add_Demand_Chg_MN , ES_Add_Demand_Chg_L3 , i._4_night_stay_mix , i._5_night_stay_mix , j.business_mix , j.business_mix_next2mo , k.Elite_Appreciation AS GSS_Elite , l.Elite_Rewards_Member_Appreciatio AS GSS_Elite_Average , k.Intent_to_RecommEND AS GSS_Intent_to_Rec , l.Intent_to_Recommend_Property AS GSS_Intent_to_Rec_Avg , gds.Channel_Mix__RNs__GDS_This_Year AS GDS_Mix_TY , . AS Natural_Search_Var_1MN , . AS Natural_Search_Var_2MN , . AS Natural_Search_Var_3MN , . AS OTA_Optimization , CASE WHEN m.ota_prtcpt_num = . THEN n.ota_prtcpt_num ELSE m.ota_prtcpt_num END AS OTA_Participation_Num , '' AS OTA_Optimization_Color , CASE WHEN t.Quickgroup_with_Sleeping_Rooms = 'Not participating IN QuickGroup with Sleeping Rooms' THEN 'N' when t.Quickgroup_with_Sleeping_Rooms = 'Not participating IN QuickGroup-eRFP only' THEN 'N' when SUBSTRING( t.Quickgroup_with_Sleeping_Rooms,1,17) = 'Not participating' THEN 'N' when t.Quickgroup_with_Sleeping_Rooms = '' THEN '' ELSE 'Y' END AS Quickgroup_with_Sleeping_Rooms , CASE WHEN t.QuickGroup_with_Event_Space = 'Not participating IN QuickGroup with Event Space' THEN 'N' when t.QuickGroup_with_Event_Space = 'Not Participating ( one meeting room)' THEN 'N/A' when t.QuickGroup_with_Event_Space = 'N/A No Meeting Space' THEN 'N/A' when SUBSTRING( t.QuickGroup_with_Event_Space,1,17) = 'Not participating' THEN 'N' when SUBSTRING( t.QuickGroup_with_Event_Space,1,13) = 'Not Signed Up' THEN 'N' when t.QuickGroup_with_Event_Space = '' THEN '' ELSE 'Y' END AS QuickGroup_with_Event_Space , t.Total_number_of_meeting_rooms , b.EsOcc_YTD, b.EsOcc_chg_YTD , b.EsADR_YTD, b.EsADR_chg_YTD , b.EsRevPAR_YTD, b.EsRevPAR_chg_YTD , u.FW_STR_MNLY_RevPARRank_MN , '' AS RevMgr_Certified , t1.Budget_in_RevPlanning , CASE WHEN t2.MonthlyHotSpecific='Y' THEN 'Y' when t2.MonthlyHotSpecific<>'' THEN t2.MonthlyHotSpecific ELSE 'N' END AS MonthlyHotSpecific , CASE WHEN f.WD_STR_RevPARIndex_Chg_L3=. THEN e.FW_RevPARIndex_Chg_L3 ELSE f.WD_STR_RevPARIndex_Chg_L3 END AS WD_STR_RevPARIndex_Chg_L3 , CASE WHEN f.WD_STR_RevPARIndex_L3=. THEN e.FW_STR_RevPARIndex_L3 ELSE f.WD_STR_RevPARIndex_L3 END AS WD_STR_RevPARIndex_L3 , CASE WHEN f.WD_STR_RevPARIndex_MN=. THEN e.FW_STR_RevPARIndex_MN ELSE f.WD_STR_RevPARIndex_MN END AS WD_STR_RevPARIndex_MN , CASE WHEN f.WD_STR_RevPARIndex_Chg_MN=. THEN e.FW_STR_RevPARIndex_Chg_MN ELSE f.WD_STR_RevPARIndex_Chg_MN END AS WD_STR_RevPARIndex_Chg_MN , b.T2_GR_ADR_MN , b.T3_GR_ADR_MN , b.T4_GR_ADR_MN , b.T2_GR_ADR_Chg_MN , b.T3_GR_ADR_Chg_MN , b.T4_GR_ADR_Chg_MN , b.T2_12_ADR_MN , b.T3_12_ADR_MN , b.T4_12_ADR_MN , b.T2_12_ADR_Chg_MN , b.T3_12_ADR_Chg_MN , b.T4_12_ADR_Chg_MN , b.T1_WD_NQ_Mix_L3_Chg , e.FW_STR_ADRIndex_MN , e.FW_STR_ADRIndex_Chg_MN , e.FW_STR_ADRIndex_L3 , e.FW_STR_ADRIndex_Chg_L3 , a.country , a.region , b.T1_WD_GV_MIX_L3 , b.ES_FW_GV_MIX_L3 , b.T1_WD_MC12_ADR_MN , b.ES_FW_MC12_ADR_MN , CASE WHEN a.region = 'S_' OR a.country='Canada' OR a.state IN ( 'HI', 'AK') THEN . when pd.PD&YR.&Mon.=. THEN 83 ELSE pd.PD&YR.&Mon. END AS GV_PerDiem_MN , CASE WHEN GRMRS_Hotel='Y' THEN 'Y' ELSE 'N' END AS RMRS_Hotel , eet.EET_Trigger , k.OSAT AS OSAT , CASE WHEN k.OSAT=. THEN """" when k.OSAT ge 68 THEN 'Green' when k.OSAT ge 54 THEN 'Clear' when k.OSAT ge 51 THEN 'Yellow' ELSE 'Red' END AS OSAT_Color , rpo.pct_high_priority_dates_wd AS rpo_pct_high_days_wd , rpo.pct_moves_up_wd AS rpo_hot_under_pct_wd, rpo.pct_moves_down_wd AS rpo_hot_over_pct_wd , rpo.pct_high_priority_dates_we AS rpo_pct_high_days_we , rpo.pct_moves_up_we AS rpo_hot_under_pct_we, rpo.pct_moves_down_wd AS rpo_hot_over_pct_we , '' AS rpo_tot_pricing_moves , '' AS pct_moves_in_rpodirection, '' AS rpo_logins , r24.__of_Alerts_Responded_in_48_Hrs AS Response_in_24Hrs , d.FW_OY_FCST_Occ_2MO AS Occ_2MNOut , d.Wed_Occ_2MO AS Wed_Occ_2MNOut , d.FW_OY_FCST_Occ_3MO AS Occ_3MNOut , d.Wed_Occ_3MO AS Wed_Occ_3MNOut , b.WE_T1_GR_RN_Chg_MN , b.WE_T1_GR_RN_Var_MN , b.WE_T1_GR_RN_Chg_L3 , b.WE_T1_GR_RN_Var_L3 , lnf.LNF_Claims_L3 , mc.mcom_rn_chg_MN , mc.mcom_rn_chg_L3 , mc.mcom_rn_share_chg_MN , mc.mcom_rn_share_chg_L3 , fe.FW_RevPARIndex_Chg_L3 AS FW_RevPARIndex_Chg_L3_5MO_LY , so.sellout_efficiency , CASE WHEN t2_2.MonthlyHotSpecific='Y' THEN 'Y' when t2_2.MonthlyHotSpecific<>'' THEN t2_2.MonthlyHotSpecific ELSE 'N' END AS MonthlyHotSpecific2 , sys.io_flag , sys.fa_flag AS fcst_acc_flag , sys.rpo_flag , . AS M_Com_RN_Mix_YTD , mb._____RNs_from_Brand_com__YTD__Be AS M_Com_RN_Mix_Bench , CAST( mb._____RNs_from_Brand_com__YTD__Va,best12. )/100 AS M_Com_RN_Mix_Var_to_Bench , e.FW_STR_ADR_L3 , e.FW_STR_MNLY_COMP_REVPAR_L3 , e.FW_STR_MNLY_REVPAR_L3 , e.FW_STR_RV_L3 , e.FW_STR_MNLY_REVPARINDEXCHG_L3 , d.midweek_occ_ge80_num , &tmstmp. AS Timestamp format date9. ,EXTRACT(MONTH FROM &tmstmp. ) AS Timestamp_Month FROM prop_master AS a LEFT JOIN esf.esf_mrdw AS b ON a.marsha=b.marsha LEFT JOIN esf.esf_otb AS c ON a.marsha=c.marsha LEFT JOIN esf.esf_oy_forecast AS d ON a.marsha=d.marsha LEFT JOIN esf.str_fw_monthly_&STR_FLDR. AS e ON a.marsha=e.marsha LEFT JOIN esf.str_wd_monthly_&STR_FLDR. AS f ON a.marsha=f.marsha LEFT JOIN esf.str_we_monthly_&STR_FLDR. AS g ON a.marsha=g.marsha LEFT JOIN esf.All_rwd_mamm_&currmo. AS h ON a.marsha=h.marsha LEFT JOIN esf.mixbylos AS i ON a.marsha=i.marsha LEFT JOIN esf.businessmix AS j ON a.marsha=j.marsha LEFT JOIN gss_hot AS k ON a.marsha=k.marsha LEFT JOIN gss_brnd AS l ON a.brnd=l.brand LEFT JOIN ecomm1_2 AS m ON a.marsha=m.marsha LEFT JOIN ecomm2_2 AS n ON a.marsha=n.marsha LEFT JOIN ecomm3 AS o ON a.marsha=o.marsha LEFT JOIN quickgroup AS t ON a.marsha=t.marsha_code LEFT JOIN strrank3 AS u ON a.marsha=u.marsha LEFT JOIN revmgr_cert AS v ON a.marsha=v.marsha LEFT JOIN BudInRP AS t1 ON a.marsha=t1.marsha LEFT JOIN MonthlyHotSpecific AS t2 ON a.marsha=t2.marsha LEFT JOIN MonthlyHotSpecific2 AS t2_2 ON a.marsha=t2_2.marsha LEFT JOIN perdiem_by_zip AS pd ON CAST( SUBSTRING( a.zip,1,5),best12. )=CAST( SUBSTRING( pd.zip,1,5),best12. ) LEFT JOIN EET_Trigger AS eet ON a.marsha=eet.EET_Trigger LEFT JOIN gds_mix AS gds ON a.marsha=gds.marsha LEFT JOIN rpo.Rpo_recom_dir_&mon.&yr. AS rpo ON a.marsha=rpo.marsha LEFT JOIN Resp_24hr AS r24 ON a.marsha=r24.marsha LEFT JOIN Lnf_violations AS lnf ON a.marsha=lnf.marsha LEFT JOIN esf.mcom_data AS mc ON a.marsha=mc.marsha LEFT JOIN esfftr.str_fw_monthly_&ftrSTR. AS fe ON a.marsha=fe.marsha LEFT JOIN sellout_data AS so ON a.marsha=so.marsha LEFT JOIN rpo.&io_fle. AS sys ON a.marsha=sys.marsha LEFT JOIN mcom_bench AS mb ON a.marsha=mb.marsha WHERE openflag='Y' AND a.brnd IN ( 'RI', 'TS', 'ER', 'EL') ;",ESF-Combine Data.sas
CREATE TABLE esf_dupe AS (SELECT DISTINCT * FROM esf.esf_combined ORDER BY marsha);,ESF-Combine Data.sas
 CREATE TABLE esf.ri_hotel_UPDATE AS select a.* FROM esf.Esf_combined AS a INNER JOIN prop_master AS b ON a.marsha=b.marsha WHERE b.brnd IN ( 'RI') AND b.opendate le timestamp AND ( b.division='AM' OR a.marsha='EDIRI' ) ;,ESF-Combine Data.sas
 CREATE TABLE esf.ts_hotel_UPDATE AS select a.* FROM esf.Esf_combined AS a INNER JOIN prop_master AS b ON a.marsha=b.marsha WHERE b.brnd='TS' AND b.opendate le timestamp AND b.division='AM';,ESF-Combine Data.sas
 CREATE TABLE esf.el_hotel_UPDATE AS select a.* FROM esf.Esf_combined AS a INNER JOIN prop_master AS b ON a.marsha=b.marsha WHERE b.brnd='EL' AND b.opendate le timestamp AND ( b.division='AM' OR a.marsha='AMSEL' ) ;,ESF-Combine Data.sas
 CREATE TABLE esf.er_hotel_UPDATE AS select a.* FROM esf.Esf_combined AS a INNER JOIN prop_master AS b ON a.marsha=b.marsha WHERE b.brnd='ER' AND b.opendate le timestamp;,ESF-Combine Data.sas
"CREATE TABLE ""\\Hdqmdm1fpcl4v1\lodg-revmgmt\RM EAnlys\Shared_Data\Projects\ESFactor\&outfldr\RI_ESFactor_Rawdata-&outfldr..xls"" AS ( SELECT * FROM esf.ri_hotel_UPDATE) ;",ESF-Combine Data.sas
"CREATE TABLE ""\\Hdqmdm1fpcl4v1\lodg-revmgmt\RM EAnlys\Shared_Data\Projects\ESFactor\&outfldr\TPS_ESFactor_Rawdata-&outfldr..xls"" AS ( SELECT * FROM esf.ts_hotel_UPDATE) ;",ESF-Combine Data.sas
"CREATE TABLE ""\\Hdqmdm1fpcl4v1\lodg-revmgmt\RM EAnlys\Shared_Data\Projects\ESFactor\&outfldr\MEA_ESFactor_Rawdata-&outfldr..xls"" AS ( SELECT * FROM esf.er_hotel_UPDATE) ;",ESF-Combine Data.sas
"CREATE TABLE ""\\Hdqmdm1fpcl4v1\lodg-revmgmt\RM EAnlys\Shared_Data\Projects\ESFactor\&outfldr\EL_ESFactor_Rawdata-&outfldr..xls"" AS ( SELECT * FROM esf.el_hotel_UPDATE) ;",ESF-Combine Data.sas
 CREATE TABLE prop_master AS  (  SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER A  ) ;,ESF-Hotel Level Comp Rates Index_Final_RPO.sas
 CREATE TABLE rpo AS  (  SELECT * FROM AW_REV_DBO.compsets_data A  ) ;,ESF-Hotel Level Comp Rates Index_Final_RPO.sas
"SELECT * FROM rpo ORDER BY prop_code ,we_ind ,cmptn_id ,cmptn_nm ,season_id;",ESF-Hotel Level Comp Rates Index_Final_RPO.sas
"CREATE TABLE rpo_srt AS (SELECT DISTINCT * FROM rpo ORDER BY prop_code ,we_ind ,cmptn_id ,cmptn_nm);",ESF-Hotel Level Comp Rates Index_Final_RPO.sas
" CREATE TABLE rpo2 AS select prop_code AS marsha, cmptn_id AS RUBICON_PROP_ID, cmptn_nm AS Competitor_Name, own_ind , CASE WHEN we_ind='N' THEN 'WD' when we_ind='Y' THEN 'WE' ELSE '' END AS wdwe , usr_weight AS weight , 'C' AS control FROM rpo_srt;",ESF-Hotel Level Comp Rates Index_Final_RPO.sas
" CREATE TABLE rpo3 AS select a.marsha, a.RUBICON_PROP_ID, a.competitor_name, a.own_ind , a.weight AS wd_weight, b.weight AS we_weight, a.control FROM rpo2 AS a full JOIN rpo2 AS b ON a.marsha=b.marsha AND a.RUBICON_PROP_ID=b.RUBICON_PROP_ID AND a.competitor_name=b.competitor_name WHERE a.wdwe='WD' AND b.wdwe='WE';",ESF-Hotel Level Comp Rates Index_Final_RPO.sas
" CREATE TABLE ownhot_tc AS  (  select distinct prop_cd AS marsha, prop_rub_id AS RUBICON_PROP_ID, 'Own Hotel' AS competitor_name , 1 AS wd_weight, 1 AS we_weight, 'H' AS control FROM mrdw_fact_competitor_rates_active a WHERE arv_dt >= &strt_ly AND prop_rub_id=comp_rub_id  )  ;",ESF-Hotel Level Comp Rates Index_Final_RPO.sas
" CREATE TABLE ownhot_rpo AS select marsha, RUBICON_PROP_ID, competitor_name, own_ind, 1 AS wd_weight, 1 AS we_weight, 'H' AS control FROM rpo3 WHERE own_ind='Y';",ESF-Hotel Level Comp Rates Index_Final_RPO.sas
 CREATE TABLE ownhot AS ( SELECT  *  FROM ownhot_tc UNION ALL SELECT  *  FROM ownhot_rpo);,ESF-Hotel Level Comp Rates Index_Final_RPO.sas
SELECT DISTINCT * FROM ownhot ORDER BY marsha;,ESF-Hotel Level Comp Rates Index_Final_RPO.sas
 CREATE TABLE rpo_weights AS ( SELECT  *  FROM rpo3 UNION ALL SELECT  *  FROM ownhot);,ESF-Hotel Level Comp Rates Index_Final_RPO.sas
" CREATE TABLE crdata_NX AS  (  select arv_dt, los_cnt, comp_rub_id , CASE WHEN days_left_cnt < 7 THEN '1' when days_left_cnt < 14 THEN '2' when days_left_cnt < 21 THEN '3' when days_left_cnt < 28 THEN '4' ELSE '5+' END AS wks_out , currency_iso_cd AS curr , SUM( req_rate_amt)/COUNT( req_rate_amt) AS avg_rate FROM mrdw_fact_competitor_rates_active a, mrdw_dim_property b, mrdw_dim_date c WHERE a.prop_cd=b.property_cd AND a.arv_dt=c.date_dt and( los_cnt = 1 OR los_cnt = 2) AND guest_cnt =1 AND data_source_cd = 'GDS' AND comp_prod_id = 20 AND ( note_txt='' OR note_txt='X') AND req_rate_amt > 0 AND (  ( arv_dt >= &strt_ty AND arv_dt <= &end_ty) OR ( arv_dt >= &strt_ly AND arv_dt <= &end_ly) ) GROUP BY arv_dt, los_cnt, comp_rub_id, wks_out, curr ORDER BY arv_dt, los_cnt, comp_rub_id, wks_out, curr  )  ;",ESF-Hotel Level Comp Rates Index_Final_RPO.sas
" CREATE TABLE crdata_X AS  (  select arv_dt, los_cnt, comp_rub_id , CASE WHEN days_left_cnt < 7 THEN '1' when days_left_cnt < 14 THEN '2' when days_left_cnt < 21 THEN '3' when days_left_cnt < 28 THEN '4' ELSE '5+' END AS wks_out , currency_cd AS curr , SUM( rt_amt)/COUNT( rt_amt) AS avg_rate FROM mrdw_fact_competitor_rates_active a, mrdw_dim_date c WHERE a.arv_dt=c.date_dt AND ( los_cnt = 1 OR los_cnt = 2) AND guest_cnt =1 AND data_source_cd = 'GDS' AND comp_prod_id = 20 AND note_txt='X' AND rt_amt > 0 AND (  ( arv_dt >= &strt_ty AND arv_dt <= &end_ty) OR ( arv_dt >= &strt_ly AND arv_dt <= &end_ly) ) GROUP BY arv_dt, los_cnt, comp_rub_id, wks_out, curr ORDER BY arv_dt, los_cnt, comp_rub_id, wks_out, curr  )  ;",ESF-Hotel Level Comp Rates Index_Final_RPO.sas
 CREATE TABLE crdata AS ( SELECT  *  FROM crdata_nx UNION ALL SELECT  *  FROM crdata_x);,ESF-Hotel Level Comp Rates Index_Final_RPO.sas
" CREATE TABLE crdata2 AS select arv_dt, los_cnt, comp_rub_id, wks_out, curr, AVG( avg_rate) AS avg_rate FROM crdata GROUP BY arv_dt, los_cnt, comp_rub_id, wks_out, curr;",ESF-Hotel Level Comp Rates Index_Final_RPO.sas
" CREATE TABLE crdata3 AS select a.arv_dt, a.los_cnt, a.comp_rub_id, a.wks_out, a.curr , a.avg_rate, b.avg_rate AS avg_rate_ly FROM crdata2 AS a INNER JOIN crdata2 AS b ON a.arv_dt=b.arv_dt+364 AND a.los_cnt=b.los_cnt AND a.comp_rub_id=b.comp_rub_id AND a.wks_out=b.wks_out AND a.curr=b.curr;",ESF-Hotel Level Comp Rates Index_Final_RPO.sas
" CREATE TABLE hotsum1 AS select arv_dt, comp_rub_id, curr, wks_out , AVG( avg_rate) AS avg_rate, AVG( avg_rate_ly) AS avg_rate_ly FROM crdata3 GROUP BY arv_dt, comp_rub_id, curr, wks_out;",ESF-Hotel Level Comp Rates Index_Final_RPO.sas
" CREATE TABLE hotsum2 AS select arv_dt, comp_rub_id, curr , AVG( avg_rate) AS avg_rate, AVG( avg_rate_ly) AS avg_rate_ly FROM hotsum1 GROUP BY arv_dt, comp_rub_id, curr;",ESF-Hotel Level Comp Rates Index_Final_RPO.sas
" CREATE TABLE hotsum3 AS select comp_rub_id, curr, weekday( arv_dt) AS dow , AVG( avg_rate) AS avg_rate, AVG( avg_rate_ly) AS avg_rate_ly FROM hotsum2 GROUP BY comp_rub_id, curr, calculated dow;",ESF-Hotel Level Comp Rates Index_Final_RPO.sas
" CREATE TABLE alldata2 AS select b.marsha, c.brnd AS brand, c.region, c.hCLASS, b.control , b.competitor_name, comp_rub_id, dow, avg_rate, avg_rate_ly, b.wd_weight, b.we_weight , CASE WHEN a.dow le 5 AND c.region<>'M_' AND c.hCLASS<>'RESORT' THEN 'WD' when a.dow le 4 AND c.region<>'M_' AND c.hCLASS = 'RESORT' THEN 'WD' when a.dow le 4 AND c.region = 'M_' AND c.hCLASS<>'RESORT' THEN 'WD' when a.dow le 3 AND c.region = 'M_' AND c.hCLASS = 'RESORT' THEN 'WD' when a.dow = 5 AND c.region<>'M_' AND c.hCLASS = 'RESORT' THEN 'DE' when a.dow = 4 AND c.region = 'M_' AND c.hCLASS = 'RESORT' THEN 'DE' when a.dow = 7 AND c.region = 'M_' THEN 'WD' ELSE 'WE' END AS wdwe , CASE WHEN calculated wdwe='WE' THEN we_weight ELSE wd_weight END AS weight FROM hotsum3 AS a INNER JOIN rpo_weights AS b ON a.comp_rub_id = b.RUBICON_PROP_ID INNER JOIN prop_master AS c ON b.marsha=c.marsha AND a.curr=c.curr;",ESF-Hotel Level Comp Rates Index_Final_RPO.sas
" CREATE TABLE dow_rate3 AS select a.marsha, a.control , wdwe , SUM( weight*avg_rate)/SUM( weight) AS rate , SUM( weight*avg_rate_ly)/SUM( weight) AS rate_ly FROM alldata2 AS a GROUP BY a.marsha, a.control, wdwe;",ESF-Hotel Level Comp Rates Index_Final_RPO.sas
"SELECT * FROM dow_rate3 ORDER BY marsha ,control ,wdwe;",ESF-Hotel Level Comp Rates Index_Final_RPO.sas
" CREATE TABLE tran_rate2 AS ( SELECT  *  , compress( control||wdwe||_name_||""&Cur_MN"" ) AS idVAR  FROM tran_rate );",ESF-Hotel Level Comp Rates Index_Final_RPO.sas
SELECT * FROM tran_rate2 ORDER BY marsha;,ESF-Hotel Level Comp Rates Index_Final_RPO.sas
" CREATE TABLE esf.intl_tra_crdata_PD AS select marsha , HWDrate&Cur_MN AS WD_MARCR_MN , ( HWDrate&Cur_MN - HWDrate_ly&Cur_MN. ) / HWDrate_ly&Cur_MN. AS WD_MARCR_chg_MN , CWDrate&Cur_MN AS WD_CMPCR_MN , ( CWDrate&Cur_MN - CWDrate_ly&Cur_MN. ) / CWDrate_ly&Cur_MN. AS WD_CMPCR_chg_MN , HWDrate&Cur_MN./CWDrate&Cur_MN. AS WD_CR_Indx_MN , ( ( HWDrate&Cur_MN./CWDrate&Cur_MN. ) - ( HWDrate_ly&Cur_MN./CWDrate_ly&Cur_MN. )) / ( HWDrate_ly&Cur_MN./CWDrate_ly&Cur_MN. ) AS WD_CR_Indx_Chg_MN , HWErate&Cur_MN AS WE_MARCR_MN , ( HWErate&Cur_MN - HWErate_ly&Cur_MN. ) / HWErate_ly&Cur_MN. AS WE_MARCR_chg_MN , CWErate&Cur_MN AS WE_CMPCR_MN , ( CWErate&Cur_MN - CWErate_ly&Cur_MN. ) / CWErate_ly&Cur_MN. AS WE_CMPCR_chg_MN , HWErate&Cur_MN./CWErate&Cur_MN. AS WE_CR_Indx_MN , ( ( HWErate&Cur_MN./CWErate&Cur_MN. ) - ( HWErate_ly&Cur_MN./CWErate_ly&Cur_MN. )) / ( HWErate_ly&Cur_MN./CWErate_ly&Cur_MN. ) AS WE_CR_Indx_Chg_MN FROM tran2_rate;",ESF-Hotel Level Comp Rates Index_Final_RPO.sas
 CREATE TABLE mams.intl_tra_crdata_PD AS ( SELECT  *  FROM esf.intl_tra_crdata_PD );,ESF-Hotel Level Comp Rates Index_Final_RPO.sas
" CREATE TABLE Mcom_DATA AS  (  select property_cd AS Marsha_Code, channel_aggregate_cd, year_cal, month_cal_id , CASE WHEN market_segment_cd IN ( '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', 'CN', 'CT') THEN 'Contract' when market_segment_cd IN ( '60', '61', '62', '63', '64', '65', '66', '67', '68', '69') THEN 'Comp' when market_segment_cd ='GR' THEN 'Group' ELSE 'Transient' END AS segment , SUM( days_stay_qty) AS rn FROM mrdw_fact_rev7_analysis_extract a, mrdw_dim_date b WHERE (  ( a.arrival_dt <= b.date_dt AND a.departure_dt > b.date_dt) OR ( a.arrival_dt = b.date_dt AND a.departure_dt = b.date_dt) ) AND accom_status_cd='A' AND 100*b.year_cal+b.month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo, &curr_mo-100, &l2_mo-100, &l3_mo-100) GROUP BY property_cd, channel_aggregate_cd, segment, year_cal, month_cal_id ORDER BY property_cd, channel_aggregate_cd, segment, year_cal, month_cal_id  )  ;",ESF-M.com Volume Growth.sas
" CREATE TABLE mcom_data2 AS select coalesce( a.marsha_code,b.marsha_code) AS marsha , coalesce( a.channel_aggregate_cd,b.channel_aggregate_cd) AS channel_aggregate_cd , coalesce( a.year_cal,b.year_cal+1) AS year, coalesce( a.month_cal_id,b.month_cal_id) AS mn , coalesce( a.segment,b.segment) AS segment , a.rn, b.rn AS rnly FROM mcom_data AS a full JOIN mcom_data AS b ON a.marsha_code=b.marsha_code AND a.channel_aggregate_cd=b.channel_aggregate_cd AND a.year_cal=b.year_cal+1 AND a.month_cal_id=b.month_cal_id AND a.segment=b.segment;",ESF-M.com Volume Growth.sas
" CREATE TABLE mcom_mn AS ( SELECT  *  , 'MN' AS timeframe  FROM mcom_data2  WHERE 100*year+mn = &curr_mo);",ESF-M.com Volume Growth.sas
" CREATE TABLE mcom_l3 AS select marsha, channel_aggregate_cd, segment, 'L3' AS timeframe, SUM( rn) AS rn, SUM( rnly) AS rnly FROM mcom_data2 WHERE 100*year+mn IN ( &curr_mo, &l2_mo, &l3_mo) GROUP BY marsha, channel_aggregate_cd, segment;",ESF-M.com Volume Growth.sas
" CREATE TABLE comb_mcom AS select coalesce( a.marsha,b.marsha) AS marsha , coalesce( a.channel_aggregate_cd,b.channel_aggregate_cd) AS channel_aggregate_cd , coalesce( a.segment,b.segment) AS segment , a.rn AS rn_mn, a.rnly AS rnly_mn , b.rn AS rn_l3, b.rnly AS rnly_l3 FROM mcom_mn AS a full JOIN mcom_l3 AS b ON a.marsha=b.marsha AND a.channel_aggregate_cd=b.channel_aggregate_cd AND a.segment=b.segment;",ESF-M.com Volume Growth.sas
" CREATE TABLE mcom_only AS select marsha, SUM( rn_mn) AS rn_mn, SUM( rnly_mn) AS rnly_mn , SUM( rn_l3) AS rn_l3, SUM( rnly_l3) AS rnly_l3 FROM comb_mcom WHERE channel_aggregate_cd='Marriott.com' GROUP BY marsha;",ESF-M.com Volume Growth.sas
" CREATE TABLE tran_tot AS select marsha, SUM( rn_mn) AS rn_mn, SUM( rnly_mn) AS rnly_mn , SUM( rn_l3) AS rn_l3, SUM( rnly_l3) AS rnly_l3 FROM comb_mcom WHERE segment='Transient' GROUP BY marsha;",ESF-M.com Volume Growth.sas
 CREATE TABLE mcom_tran AS ( SELECT  *  FROM comb_mcom  WHERE segment='Transient' AND channel_aggregate_cd='Marriott.com');,ESF-M.com Volume Growth.sas
" CREATE TABLE mcom_share AS select a.marsha, b.rn_mn AS rn_mcom_tr_mn, b.rnly_mn AS rnly_mcom_tr_mn , b.rn_l3 AS rn_mcom_tr_l3, b.rnly_l3 AS rnly_mcom_tr_l3 , a.rn_mn AS rn_tot_tr_mn, a.rnly_mn AS rnly_tot_tr_mn , a.rn_l3 AS rn_tot_tr_l3, a.rnly_l3 AS rnly_tot_tr_l3 FROM tran_tot AS a LEFT JOIN mcom_tran AS b ON a.marsha=b.marsha;",ESF-M.com Volume Growth.sas
" CREATE TABLE esf.mcom_data AS select a.marsha , a.rn_mn AS rn_mcom_mn, a.rnly_mn AS rnly_mcom_mn , a.rn_l3 AS rn_mcom_l3, a.rnly_l3 AS rnly_mcom_l3 , ( a.rn_mn/a.rnly_mn) - 1 AS mcom_rn_chg_MN , ( a.rn_l3/a.rnly_l3) - 1 AS mcom_rn_chg_L3 , b.rn_mcom_tr_mn, b.rnly_mcom_tr_mn , b.rn_mcom_tr_l3, b.rnly_mcom_tr_l3 , b.rn_tot_tr_mn, b.rnly_tot_tr_mn , b.rn_tot_tr_l3, b.rnly_tot_tr_l3 , b.rn_mcom_tr_mn/b.rn_tot_tr_mn AS mcom_rn_share_MN , b.rnly_mcom_tr_mn/b.rnly_tot_tr_mn AS mcom_rn_share_LY_MN , b.rn_mcom_tr_l3/b.rn_tot_tr_l3 AS mcom_rn_share_L3 , b.rnly_mcom_tr_l3/b.rnly_tot_tr_l3 AS mcom_rn_share_LY_l3 , calculated mcom_rn_share_MN - calculated mcom_rn_share_LY_MN AS mcom_rn_share_chg_MN , calculated mcom_rn_share_L3 - calculated mcom_rn_share_LY_L3 AS mcom_rn_share_chg_L3 FROM mcom_only AS a LEFT JOIN mcom_share AS b ON a.marsha=b.marsha;",ESF-M.com Volume Growth.sas
 CREATE TABLE mams.mcom_data AS ( SELECT  *  FROM esf.mcom_data );,ESF-M.com Volume Growth.sas
" CREATE TABLE MN_STR_DATA AS  (  SELECT marsha, time_type, data_category, data_type, currency_type, asof_yrmo, yrmnth , MARAVAIL, MARSOLD, MARREV, MARAVAILLY, MARSOLDLY, MARREVLY , MKTAVAIL, MKTSOLD, MKTREV, MKTAVAILLY, MKTSOLDLY, MKTREVLY FROM AW_CMP_DBO.STR_MONTHLY_DATA A WHERE asof_yrmo= &STARMNTH. AND yrmnth=&STARMNTH. AND TIME_TYPE IN ( 'MONTH', 'LAST3', 'YTD') AND DATA_CATEGORY IN ( 'Rooms', 'WDWE_Rooms') AND currency_type='Local' order BY MARSHA, time_type, data_category, data_type, currency_type, asof_yrmo, yrmnth  ) ;",ESF-STR Monthly (FW WD and WE) - AW.sas
"CREATE TABLE Cal_pd AS ( SELECT  *  , MARSOLD/MARAVAIL AS STR_MNLY_Occ_MN , MKTSOLD/MKTAVAIL AS STR_MNLY_CompOcc_MN , ( STR_MNLY_Occ_MN -( MARSOLDLY /MARAVAILLY ))/( MARSOLDLY /MARAVAILLY  ) AS STR_MNLY_OccChg_MN , ( STR_MNLY_CompOcc_MN -( MKTSOLDLY /MKTAVAILLY ))/( MKTSOLDLY /MKTAVAILLY  ) AS STR_MNLY_CompOccChg_MN , MARREV /MARSOLD AS STR_MNLY_ADR_MN , MKTREV /MKTSOLD AS STR_MNLY_CompADR_MN , ( STR_MNLY_ADR_MN-MARREVLY /MARSOLDLY )/( MARREVLY/MARSOLDLY  ) AS STR_MNLY_ADRChg_MN , ( STR_MNLY_CompADR_MN-MKTREVLY /MKTSOLDLY )/( MKTREVLY/MKTSOLDLY  ) AS STR_MNLY_CompADRChg_MN , MARREV /MARAVAIL AS STR_MNLY_Rev_MN , MKTREV /MKTAVAIL AS STR_MNLY_CompRev_MN , ( STR_MNLY_Rev_MN-( MARREVLY/MARAVAILLY))/( MARREVLY/MARAVAILLY ) AS STR_MNLY_RevChg_MN , ( STR_MNLY_CompRev_MN-( MKTREVLY/MKTAVAILLY))/( MKTREVLY/MKTAVAILLY ) AS STR_MNLY_CompRevChg_MN , 100*( STR_MNLY_Occ_MN /STR_MNLY_CompOcc_MN  ) AS STR_MNLY_OccIndex_MN , 100*(  ( MARSOLDLY /MARAVAILLY )/ ( MKTSOLDLY/MKTAVAILLY)  ) AS STR_MNLY_OccIndexLY_MN , ( STR_MNLY_OccIndex_MN -STR_MNLY_OccIndexLY_MN )/STR_MNLY_OccIndexLY_MN AS STR_MNLY_OccIndexChg_MN , 100*( STR_MNLY_ADR_MN /STR_MNLY_CompADR_MN  ) AS STR_MNLY_ADRIndex_MN , 100*(  ( MARREVLY/MARSOLDLY)/ ( MKTREVLY/MKTSOLDLY) ) AS STR_MNLY_ADRIndexLY_MN , ( STR_MNLY_ADRIndex_MN -STR_MNLY_ADRIndexLY_MN )/STR_MNLY_ADRIndexLY_MN AS STR_MNLY_ADRIndexChg_MN , 100*( STR_MNLY_Rev_MN/STR_MNLY_CompRev_MN ) AS STR_MNLY_RevPARIndex_MN , 100*( MARREVLY /MARAVAILLY )/( MKTREVLY /MKTAVAILLY  ) AS STR_MNLY_RevPARIndexLY_MN , ( STR_MNLY_RevPARIndex_MN -STR_MNLY_RevPARIndexLY_MN )/STR_MNLY_RevPARIndexLY_MN AS STR_MNLY_RevPARIndexChg_MN , MARREV AS STR_MNLY_Revenue_MN  FROM MN_STR_DATA  WHERE TIME_TYPE='MONTH' AND DATA_CATEGORY='Rooms');",ESF-STR Monthly (FW WD and WE) - AW.sas
"ALTER TABLE Cal_pd DROP COLUMN MARAVAIL ,  MARSOLD ,  MARREV ,  MARAVAILLY ,  MARSOLDLY ,  MARREVLY ,  MKTAVAIL ,  MKTSOLD ,  MKTREV ,  MKTAVAILLY ,  MKTSOLDLY ,  MKTREVLY ;",ESF-STR Monthly (FW WD and WE) - AW.sas
SELECT * FROM Cal_pd ORDER BY MARSHA;,ESF-STR Monthly (FW WD and WE) - AW.sas
"CREATE TABLE Cal_l3 AS ( SELECT  *  , MARSOLD/MARAVAIL AS STR_MNLY_Occ_L3 , MKTSOLD/MKTAVAIL AS STR_MNLY_CompOcc_L3 , ( STR_MNLY_Occ_L3 -( MARSOLDLY /MARAVAILLY ))/( MARSOLDLY /MARAVAILLY  ) AS STR_MNLY_OccChg_L3 , ( STR_MNLY_CompOcc_L3 -( MKTSOLDLY /MKTAVAILLY ))/( MKTSOLDLY /MKTAVAILLY  ) AS STR_MNLY_CompOccChg_L3 , MARREV /MARSOLD AS STR_MNLY_ADR_L3 , MKTREV /MKTSOLD AS STR_MNLY_CompADR_L3 , ( STR_MNLY_ADR_L3-MARREVLY /MARSOLDLY )/( MARREVLY/MARSOLDLY  ) AS STR_MNLY_ADRChg_L3 , ( STR_MNLY_CompADR_L3-MKTREVLY /MKTSOLDLY )/( MKTREVLY/MKTSOLDLY  ) AS STR_MNLY_CompADRChg_L3 , MARREV /MARAVAIL AS STR_MNLY_Rev_L3 , MKTREV /MKTAVAIL AS STR_MNLY_CompRev_L3 , ( STR_MNLY_Rev_L3-( MARREVLY/MARAVAILLY))/( MARREVLY/MARAVAILLY ) AS STR_MNLY_RevChg_L3 , ( STR_MNLY_Rev_L3-( MKTREVLY/MKTAVAILLY))/( MKTREVLY/MKTAVAILLY ) AS STR_MNLY_CompRevChg_L3 , 100*( STR_MNLY_Occ_L3 /STR_MNLY_CompOcc_L3  ) AS STR_MNLY_OccIndex_L3 , 100*(  ( MARSOLDLY /MARAVAILLY )/ ( MKTSOLDLY/MKTAVAILLY)  ) AS STR_MNLY_OccIndexLY_L3 , ( STR_MNLY_OccIndex_L3 -STR_MNLY_OccIndexLY_L3 )/STR_MNLY_OccIndexLY_L3 AS STR_MNLY_OccIndexChg_L3 , 100*( STR_MNLY_ADR_L3 /STR_MNLY_CompADR_L3  ) AS STR_MNLY_ADRIndex_L3 , 100*(  ( MARREVLY/MARSOLDLY)/ ( MKTREVLY/MKTSOLDLY) ) AS STR_MNLY_ADRIndexLY_L3 , ( STR_MNLY_ADRIndex_L3 -STR_MNLY_ADRIndexLY_L3 )/STR_MNLY_ADRIndexLY_L3 AS STR_MNLY_ADRIndexChg_L3 , 100*( STR_MNLY_Rev_L3/STR_MNLY_CompRev_L3 ) AS STR_MNLY_RevPARIndex_L3 , 100*( MARREVLY /MARAVAILLY )/( MKTREVLY /MKTAVAILLY  ) AS STR_MNLY_RevPARIndexLY_L3 , ( STR_MNLY_RevPARIndex_L3 -STR_MNLY_RevPARIndexLY_L3 )/STR_MNLY_RevPARIndexLY_L3 AS STR_MNLY_RevPARIndexChg_L3 , MARREV AS STR_MNLY_Revenue_L3  FROM MN_STR_DATA  WHERE TIME_TYPE='LAST3' AND DATA_CATEGORY='Rooms');",ESF-STR Monthly (FW WD and WE) - AW.sas
"ALTER TABLE Cal_l3 DROP COLUMN MARAVAIL ,  MARSOLD ,  MARREV ,  MARAVAILLY ,  MARSOLDLY ,  MARREVLY ,  MKTAVAIL ,  MKTSOLD ,  MKTREV ,  MKTAVAILLY ,  MKTSOLDLY ,  MKTREVLY ;",ESF-STR Monthly (FW WD and WE) - AW.sas
SELECT * FROM Cal_l3 ORDER BY MARSHA;,ESF-STR Monthly (FW WD and WE) - AW.sas
"CREATE TABLE Cal_YTD AS ( SELECT  *  , MARSOLD/MARAVAIL AS STR_MNLY_Occ_YTD , MKTSOLD/MKTAVAIL AS STR_MNLY_CompOcc_YTD , ( STR_MNLY_Occ_YTD -( MARSOLDLY /MARAVAILLY ))/( MARSOLDLY /MARAVAILLY  ) AS STR_MNLY_OccChg_YTD , ( STR_MNLY_CompOcc_YTD -( MKTSOLDLY /MKTAVAILLY ))/( MKTSOLDLY /MKTAVAILLY  ) AS STR_MNLY_CompOccChg_YTD , MARREV /MARSOLD AS STR_MNLY_ADR_YTD , MKTREV /MKTSOLD AS STR_MNLY_CompADR_YTD , ( STR_MNLY_ADR_YTD-MARREVLY /MARSOLDLY )/( MARREVLY/MARSOLDLY  ) AS STR_MNLY_ADRChg_YTD , ( STR_MNLY_CompADR_YTD-MKTREVLY /MKTSOLDLY )/( MKTREVLY/MKTSOLDLY  ) AS STR_MNLY_CompADRChg_YTD , MARREV /MARAVAIL AS STR_MNLY_Rev_YTD , MKTREV /MKTAVAIL AS STR_MNLY_CompRev_YTD , ( STR_MNLY_Rev_YTD-( MARREVLY/MARAVAILLY))/( MARREVLY/MARAVAILLY ) AS STR_MNLY_RevChg_YTD , ( STR_MNLY_Rev_YTD-( MKTREVLY/MKTAVAILLY))/( MKTREVLY/MKTAVAILLY ) AS STR_MNLY_CompRevChg_YTD , 100*( STR_MNLY_Occ_YTD /STR_MNLY_CompOcc_YTD  ) AS STR_MNLY_OccIndex_YTD , 100*(  ( MARSOLDLY /MARAVAILLY )/ ( MKTSOLDLY/MKTAVAILLY)  ) AS STR_MNLY_OccIndexLY_YTD , ( STR_MNLY_OccIndex_YTD -STR_MNLY_OccIndexLY_YTD )/STR_MNLY_OccIndexLY_YTD AS STR_MNLY_OccIndexChg_YTD , 100*( STR_MNLY_ADR_YTD /STR_MNLY_CompADR_YTD  ) AS STR_MNLY_ADRIndex_YTD , 100*(  ( MARREVLY/MARSOLDLY)/ ( MKTREVLY/MKTSOLDLY) ) AS STR_MNLY_ADRIndexLY_YTD , ( STR_MNLY_ADRIndex_YTD -STR_MNLY_ADRIndexLY_YTD )/STR_MNLY_ADRIndexLY_YTD AS STR_MNLY_ADRIndexChg_YTD , 100*( STR_MNLY_Rev_YTD/STR_MNLY_CompRev_YTD ) AS STR_MNLY_RevPARIndex_YTD , 100*( MARREVLY /MARAVAILLY )/( MKTREVLY /MKTAVAILLY  ) AS STR_MNLY_RevPARIndexLY_YTD , ( STR_MNLY_RevPARIndex_YTD -STR_MNLY_RevPARIndexLY_YTD )/STR_MNLY_RevPARIndexLY_YTD AS STR_MNLY_RevPARIndexChg_YTD , MARREV AS STR_MNLY_Revenue_YTD  FROM MN_STR_DATA  WHERE TIME_TYPE='YTD' AND DATA_CATEGORY='Rooms');",ESF-STR Monthly (FW WD and WE) - AW.sas
"ALTER TABLE Cal_YTD DROP COLUMN MARAVAIL ,  MARSOLD ,  MARREV ,  MARAVAILLY ,  MARSOLDLY ,  MARREVLY ,  MKTAVAIL ,  MKTSOLD ,  MKTREV ,  MKTAVAILLY ,  MKTSOLDLY ,  MKTREVLY ;",ESF-STR Monthly (FW WD and WE) - AW.sas
SELECT * FROM Cal_YTD ORDER BY MARSHA;,ESF-STR Monthly (FW WD and WE) - AW.sas
" CREATE TABLE esf.STR_FW_MONTHLY_&STR_FLDR. AS select coalesce( a.marsha,b.marsha,c.marsha) AS marsha , a.STR_MNLY_RevPARIndexChg_MN AS FW_STR_RevPARIndex_Chg_MN , b.STR_MNLY_RevPARIndexChg_L3 AS FW_RevPARIndex_Chg_L3 , b.STR_MNLY_OccIndexChg_L3 AS FW_STR_OccIndex_Chg_L3 , a.STR_MNLY_OccIndexChg_MN AS FW_STR_OccIndex_Chg_MN , b.STR_MNLY_OccIndex_L3 AS FW_STR_OccIndex_L3 , a.STR_MNLY_OccIndex_MN AS FW_STR_OccIndex_MN , a.STR_MNLY_RevPARIndex_MN AS FW_STR_RevPARIndex_MN , b.STR_MNLY_RevPARIndex_L3 AS FW_STR_RevPARIndex_L3 , c.STR_MNLY_RevPARIndex_YTD AS FW_STR_RevPARIndex_YTD , c.STR_MNLY_RevPARIndexChg_YTD AS FW_STR_MNLY_RevPARIndexChg_YTD , b.STR_MNLY_ADRIndexChg_L3 AS FW_STR_ADRIndex_Chg_L3 , b.STR_MNLY_ADRIndex_L3 AS FW_STR_ADRIndex_L3 , a.STR_MNLY_ADRIndexChg_MN AS FW_STR_ADRIndex_Chg_MN , a.STR_MNLY_ADRIndex_MN AS FW_STR_ADRIndex_MN , b.STR_MNLY_ADR_L3 AS FW_STR_ADR_L3 , b.STR_MNLY_CompRev_L3 AS FW_STR_MNLY_COMP_REVPAR_L3 , b.STR_MNLY_Rev_L3 AS FW_STR_MNLY_REVPAR_L3 , b.STR_MNLY_Revenue_L3 AS FW_STR_RV_L3 , b.STR_MNLY_RevPARIndexChg_L3 AS FW_STR_MNLY_REVPARINDEXCHG_L3 FROM Cal_pd AS a full JOIN Cal_l3 AS b ON a.marsha=b.marsha full JOIN Cal_YTD AS c ON coalesce( a.marsha,b.marsha)=c.marsha;",ESF-STR Monthly (FW WD and WE) - AW.sas
" CREATE TABLE WD_MONTH2 AS ( SELECT MARSHA , MARSOLD/MARAVAIL AS STR_MNLY_Occ_MN , MKTSOLD/MKTAVAIL AS STR_MNLY_CompOcc_MN , MARSOLDLY/MARAVAILLY AS Occ_pd_LY , MKTSOLDLY/MKTAVAILLY AS CompOcc_pd_LY , STR_MNLY_Occ_MN-Occ_pd_LY AS STR_MNLY_OccChg_MN , STR_MNLY_CompOcc_MN-CompOcc_pd_LY AS STR_MNLY_CompOccChg_MN , MARREV/MARSOLD AS STR_MNLY_ADR_MN , MKTREV/MKTSOLD AS STR_MNLY_CompADR_MN , MARREVLY/MARSOLDLY AS ADR_pd_LY , MKTREVLY/MKTSOLDLY AS CompADR_pd_LY , ( STR_MNLY_ADR_MN-ADR_pd_LY)/ADR_pd_LY AS STR_MNLY_ADRChg_MN , ( STR_MNLY_CompADR_MN-CompADR_pd_LY)/CompADR_pd_LY AS STR_MNLY_CompADRChg_MN , MARREV/MARAVAIL AS STR_MNLY_Rev_MN , MKTREV/MKTAVAIL AS STR_MNLY_CompRev_MN , MARREVLY/MARAVAILLY AS RevPAR_pd_LY , MKTREVLY/MKTAVAILLY AS CompRevPAR_pd_LY , ( STR_MNLY_Rev_MN-RevPAR_pd_LY)/RevPAR_pd_LY AS STR_MNLY_RevChg_MN , ( STR_MNLY_CompRev_MN-CompRevPAR_pd_LY)/CompRevPAR_pd_LY AS STR_MNLY_CompRevChg_MN , 100*STR_MNLY_Occ_MN/STR_MNLY_CompOcc_MN AS STR_MNLY_OccIndex_MN , 100*Occ_pd_LY/CompOcc_pd_LY AS STR_MNLY_OccIndexLY_MN , ( STR_MNLY_OccIndex_MN-STR_MNLY_OccIndexLY_MN)/STR_MNLY_OccIndexLY_MN AS STR_MNLY_OccIndexChg_MN , 100*STR_MNLY_ADR_MN/STR_MNLY_CompADR_MN AS STR_MNLY_ADRIndex_MN , 100*ADR_pd_LY/CompADR_pd_LY AS STR_MNLY_ADRIndexLY_MN , ( STR_MNLY_ADRIndex_MN-STR_MNLY_ADRIndexLY_MN)/STR_MNLY_ADRIndexLY_MN AS STR_MNLY_ADRIndexChg_MN , 100*STR_MNLY_Rev_MN/STR_MNLY_CompRev_MN AS STR_MNLY_RevPARIndex_MN , 100*RevPAR_pd_LY/CompRevPAR_pd_LY AS STR_MNLY_RevPARIndexLY_MN , ( STR_MNLY_RevPARIndex_MN-STR_MNLY_RevPARIndexLY_MN)/STR_MNLY_RevPARIndexLY_MN AS STR_MNLY_RevPARIndexChg_MN  FROM MN_STR_DATA  WHERE TIME_TYPE='MONTH' AND DATA_CATEGORY='WDWE_Rooms' AND DATA_TYPE='WD');",ESF-STR Monthly (FW WD and WE) - AW.sas
" CREATE TABLE WD_LAST32 AS ( SELECT MARSHA , MARSOLD/MARAVAIL AS STR_MNLY_Occ_L3 , MKTSOLD/MKTAVAIL AS STR_MNLY_CompOcc_L3 , MARSOLDLY/MARAVAILLY AS Occ_l3_LY , MKTSOLDLY/MKTAVAILLY AS CompOcc_l3_LY , STR_MNLY_Occ_L3-Occ_l3_LY AS STR_MNLY_OccChg_L3 , STR_MNLY_CompOcc_L3-CompOcc_l3_LY AS STR_MNLY_CompOccChg_L3 , MARREV/MARSOLD AS STR_MNLY_ADR_L3 , MKTREV/MKTSOLD AS STR_MNLY_CompADR_L3 , MARREVLY/MARSOLDLY AS ADR_l3_LY , MKTREVLY/MKTSOLDLY AS CompADR_l3_LY , ( STR_MNLY_ADR_L3-ADR_l3_LY)/ADR_l3_LY AS STR_MNLY_ADRChg_L3 , ( STR_MNLY_CompADR_L3-CompADR_l3_LY)/CompADR_l3_LY AS STR_MNLY_CompADRChg_L3 , MARREV/MARAVAIL AS STR_MNLY_Rev_L3 , MKTREV/MKTAVAIL AS STR_MNLY_CompRev_L3 , MARREVLY/MARAVAILLY AS RevPAR_l3_LY , MKTREVLY/MKTAVAILLY AS CompRevPAR_l3_LY , ( STR_MNLY_Rev_L3-RevPAR_l3_LY)/RevPAR_l3_LY AS STR_MNLY_RevChg_L3 , ( STR_MNLY_CompRev_L3-CompRevPAR_l3_LY)/CompRevPAR_l3_LY AS STR_MNLY_CompRevChg_L3 , 100*STR_MNLY_Occ_L3/STR_MNLY_CompOcc_L3 AS STR_MNLY_OccIndex_L3 , 100*Occ_l3_LY/CompOcc_l3_LY AS STR_MNLY_OccIndexLY_L3 , ( STR_MNLY_OccIndex_L3-STR_MNLY_OccIndexLY_L3)/STR_MNLY_OccIndexLY_L3 AS STR_MNLY_OccIndexChg_L3 , 100*STR_MNLY_ADR_L3/STR_MNLY_CompADR_L3 AS STR_MNLY_ADRIndex_L3 , 100*ADR_l3_LY/CompADR_l3_LY AS STR_MNLY_ADRIndexLY_L3 , ( STR_MNLY_ADRIndex_L3-STR_MNLY_ADRIndexLY_L3)/STR_MNLY_ADRIndexLY_L3 AS STR_MNLY_ADRIndexChg_L3 , 100*STR_MNLY_Rev_L3/STR_MNLY_CompRev_L3 AS STR_MNLY_RevPARIndex_L3 , 100*RevPAR_l3_LY/CompRevPAR_l3_LY AS STR_MNLY_RevPARIndexLY_L3 , ( STR_MNLY_RevPARIndex_L3-STR_MNLY_RevPARIndexLY_L3)/STR_MNLY_RevPARIndexLY_L3 AS STR_MNLY_RevPARIndexChg_L3  FROM MN_STR_DATA  WHERE TIME_TYPE='LAST3' AND DATA_CATEGORY='WDWE_Rooms' AND DATA_TYPE='WD');",ESF-STR Monthly (FW WD and WE) - AW.sas
" CREATE TABLE esf.STR_WD_MONTHLY_&STR_FLDR. AS select coalesce( a.marsha,b.marsha) AS marsha , b.STR_MNLY_ADRIndexChg_L3 AS WD_STR_ADRIndex_Chg_L3 , b.STR_MNLY_OccIndexChg_L3 AS WD_STR_OccIndex_Chg_L3 , a.STR_MNLY_OccIndexChg_MN AS WD_STR_OccIndex_Chg_MN , b.STR_MNLY_OccIndex_L3 AS WD_STR_OccIndex_L3 , a.STR_MNLY_OccIndex_MN AS WD_STR_OccIndex_MN , a.STR_MNLY_RevPARIndexChg_MN AS WD_STR_RevPARIndex_Chg_MN , a.STR_MNLY_RevPARIndex_MN AS WD_STR_RevPARIndex_MN , b.STR_MNLY_RevPARIndexChg_L3 AS WD_STR_RevPARIndex_Chg_L3 , a.STR_MNLY_RevPARIndex_MN AS WD_STR_RevPARIndex_L3 FROM WD_MONTH2 AS a full JOIN WD_LAST32 AS b ON a.marsha=b.marsha;",ESF-STR Monthly (FW WD and WE) - AW.sas
" CREATE TABLE WE_MONTH2 AS ( SELECT MARSHA , MARSOLD/MARAVAIL AS STR_MNLY_Occ_MN , MKTSOLD/MKTAVAIL AS STR_MNLY_CompOcc_MN , MARSOLDLY/MARAVAILLY AS Occ_pd_LY , MKTSOLDLY/MKTAVAILLY AS CompOcc_pd_LY , STR_MNLY_Occ_MN-Occ_pd_LY AS STR_MNLY_OccChg_MN , STR_MNLY_CompOcc_MN-CompOcc_pd_LY AS STR_MNLY_CompOccChg_MN , MARREV/MARSOLD AS STR_MNLY_ADR_MN , MKTREV/MKTSOLD AS STR_MNLY_CompADR_MN , MARREVLY/MARSOLDLY AS ADR_pd_LY , MKTREVLY/MKTSOLDLY AS CompADR_pd_LY , ( STR_MNLY_ADR_MN-ADR_pd_LY)/ADR_pd_LY AS STR_MNLY_ADRChg_MN , ( STR_MNLY_CompADR_MN-CompADR_pd_LY)/CompADR_pd_LY AS STR_MNLY_CompADRChg_MN , MARREV/MARAVAIL AS STR_MNLY_Rev_MN , MKTREV/MKTAVAIL AS STR_MNLY_CompRev_MN , MARREVLY/MARAVAILLY AS RevPAR_pd_LY , MKTREVLY/MKTAVAILLY AS CompRevPAR_pd_LY , ( STR_MNLY_Rev_MN-RevPAR_pd_LY)/RevPAR_pd_LY AS STR_MNLY_RevChg_MN , ( STR_MNLY_CompRev_MN-CompRevPAR_pd_LY)/CompRevPAR_pd_LY AS STR_MNLY_CompRevChg_MN , 100*STR_MNLY_Occ_MN/STR_MNLY_CompOcc_MN AS STR_MNLY_OccIndex_MN , 100*Occ_pd_LY/CompOcc_pd_LY AS STR_MNLY_OccIndexLY_MN , ( STR_MNLY_OccIndex_MN-STR_MNLY_OccIndexLY_MN)/STR_MNLY_OccIndexLY_MN AS STR_MNLY_OccIndexChg_MN , 100*STR_MNLY_ADR_MN/STR_MNLY_CompADR_MN AS STR_MNLY_ADRIndex_MN , 100*ADR_pd_LY/CompADR_pd_LY AS STR_MNLY_ADRIndexLY_MN , ( STR_MNLY_ADRIndex_MN-STR_MNLY_ADRIndexLY_MN)/STR_MNLY_ADRIndexLY_MN AS STR_MNLY_ADRIndexChg_MN , 100*STR_MNLY_Rev_MN/STR_MNLY_CompRev_MN AS STR_MNLY_RevPARIndex_MN , 100*RevPAR_pd_LY/CompRevPAR_pd_LY AS STR_MNLY_RevPARIndexLY_MN , ( STR_MNLY_RevPARIndex_MN-STR_MNLY_RevPARIndexLY_MN)/STR_MNLY_RevPARIndexLY_MN AS STR_MNLY_RevPARIndexChg_MN  FROM MN_STR_DATA  WHERE TIME_TYPE='MONTH' AND DATA_CATEGORY='WDWE_Rooms' AND DATA_TYPE='WE');",ESF-STR Monthly (FW WD and WE) - AW.sas
" CREATE TABLE WE_LAST32 AS ( SELECT MARSHA , MARSOLD/MARAVAIL AS STR_MNLY_Occ_L3 , MKTSOLD/MKTAVAIL AS STR_MNLY_CompOcc_L3 , MARSOLDLY/MARAVAILLY AS Occ_l3_LY , MKTSOLDLY/MKTAVAILLY AS CompOcc_l3_LY , STR_MNLY_Occ_L3-Occ_l3_LY AS STR_MNLY_OccChg_L3 , STR_MNLY_CompOcc_L3-CompOcc_l3_LY AS STR_MNLY_CompOccChg_L3 , MARREV/MARSOLD AS STR_MNLY_ADR_L3 , MKTREV/MKTSOLD AS STR_MNLY_CompADR_L3 , MARREVLY/MARSOLDLY AS ADR_l3_LY , MKTREVLY/MKTSOLDLY AS CompADR_l3_LY , ( STR_MNLY_ADR_L3-ADR_l3_LY)/ADR_l3_LY AS STR_MNLY_ADRChg_L3 , ( STR_MNLY_CompADR_L3-CompADR_l3_LY)/CompADR_l3_LY AS STR_MNLY_CompADRChg_L3 , MARREV/MARAVAIL AS STR_MNLY_Rev_L3 , MKTREV/MKTAVAIL AS STR_MNLY_CompRev_L3 , MARREVLY/MARAVAILLY AS RevPAR_l3_LY , MKTREVLY/MKTAVAILLY AS CompRevPAR_l3_LY , ( STR_MNLY_Rev_L3-RevPAR_l3_LY)/RevPAR_l3_LY AS STR_MNLY_RevChg_L3 , ( STR_MNLY_CompRev_L3-CompRevPAR_l3_LY)/CompRevPAR_l3_LY AS STR_MNLY_CompRevChg_L3 , 100*STR_MNLY_Occ_L3/STR_MNLY_CompOcc_L3 AS STR_MNLY_OccIndex_L3 , 100*Occ_l3_LY/CompOcc_l3_LY AS STR_MNLY_OccIndexLY_L3 , ( STR_MNLY_OccIndex_L3-STR_MNLY_OccIndexLY_L3)/STR_MNLY_OccIndexLY_L3 AS STR_MNLY_OccIndexChg_L3 , 100*STR_MNLY_ADR_L3/STR_MNLY_CompADR_L3 AS STR_MNLY_ADRIndex_L3 , 100*ADR_l3_LY/CompADR_l3_LY AS STR_MNLY_ADRIndexLY_L3 , ( STR_MNLY_ADRIndex_L3-STR_MNLY_ADRIndexLY_L3)/STR_MNLY_ADRIndexLY_L3 AS STR_MNLY_ADRIndexChg_L3 , 100*STR_MNLY_Rev_L3/STR_MNLY_CompRev_L3 AS STR_MNLY_RevPARIndex_L3 , 100*RevPAR_l3_LY/CompRevPAR_l3_LY AS STR_MNLY_RevPARIndexLY_L3 , ( STR_MNLY_RevPARIndex_L3-STR_MNLY_RevPARIndexLY_L3)/STR_MNLY_RevPARIndexLY_L3 AS STR_MNLY_RevPARIndexChg_L3  FROM MN_STR_DATA  WHERE TIME_TYPE='LAST3' AND DATA_CATEGORY='WDWE_Rooms' AND DATA_TYPE='WE');",ESF-STR Monthly (FW WD and WE) - AW.sas
" CREATE TABLE esf.STR_WE_MONTHLY_&STR_FLDR. AS select coalesce( a.marsha,b.marsha) AS marsha , b.STR_MNLY_ADRIndexChg_L3 AS WE_STR_ADRIndex_chg_L3 , b.STR_MNLY_ADRIndex_L3 AS WE_STR_ADRIndex_L3 , b.STR_MNLY_OccIndexChg_L3 AS WE_STR_OccIndex_chg_L3 , a.STR_MNLY_OccIndexChg_MN AS WE_STR_OccIndex_Chg_MN , b.STR_MNLY_OccIndex_L3 AS WE_STR_OccIndex_L3 , a.STR_MNLY_OccIndex_MN AS WE_STR_OccIndex_MN , b.STR_MNLY_RevPARIndexChg_L3 AS WE_STR_RevPARIndex_Chg_L3 , STR_MNLY_RevPARIndex_L3 AS WE_STR_RevPARIndex_L3 , a.STR_MNLY_RevPARIndex_MN AS WE_STR_RevPARIndex_MN , a.STR_MNLY_RevPARIndexChg_MN AS WE_STR_RevPARIndex_Chg_MN FROM WE_MONTH2 AS a full JOIN WE_LAST32 AS b ON a.marsha=b.marsha;",ESF-STR Monthly (FW WD and WE) - AW.sas
" CREATE TABLE otbty AS  (  select stay_date, property_cd, segment , tier_los_ind , CASE WHEN b.ab_day_of_week_cd IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' END AS wdwe , SUM( room_nights) AS rn, SUM( rev_net) AS rev_net, SUM( rev_net_us) AS rev_net_us FROM Mrdw_fact_otb_seg_extract_pd a, mrdw_dim_date b WHERE a.stay_date=b.date_dt AND acctg_yr=&cur_yr AND acctg_pd=&cur_pd AND acctg_wk=&cur_wk GROUP BY stay_date, property_cd, segment , tier_los_ind, wdwe ORDER BY stay_date, property_cd, segment , tier_los_ind, wdwe  )  ;",ESFactor - OTB Data Pull.sas
" CREATE TABLE otbly AS  (  select stay_date, property_cd, segment , tier_los_ind , CASE WHEN b.ab_day_of_week_cd IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' END AS wdwe , SUM( room_nights) AS rn, SUM( rev_net) AS rev_net, SUM( rev_net_us) AS rev_net_us FROM Mrdw_fact_otb_seg_extract_pd a, mrdw_dim_date b WHERE a.stay_date=b.date_dt AND acctg_yr=&last_yr AND acctg_pd=&cur_pdly AND acctg_wk=&cur_wkly GROUP BY stay_date, property_cd, segment , tier_los_ind, wdwe ORDER BY stay_date, property_cd, segment , tier_los_ind, wdwe  )  ;",ESFactor - OTB Data Pull.sas
" CREATE TABLE allotb AS select coalesce( a.property_cd,b.property_cd) AS marsha , coalesce( a.stay_date,b.stay_date+364) AS stay_date format date9. , coalesce( a.segment,b.segment) AS segment , coalesce( a.tier_los_ind,b.tier_los_ind) AS tier_los_ind , coalesce( a.wdwe,b.wdwe) AS wdwe , a.rn, a.rev_net, a.rev_net_us, b.rn AS rn_ly, b.rev_net AS rev_net_ly, b.rev_net_us AS rev_net_us_ly FROM otbty AS a full JOIN otbly AS b ON a.property_cd=b.property_cd AND a.stay_date=b.stay_date+364 AND a.segment=b.segment AND a.tier_los_ind=b.tier_los_ind AND a.wdwe=b.wdwe;",ESFactor - OTB Data Pull.sas
" CREATE TABLE allotb2 AS select marsha, segment, tier_los_ind, wdwe , CASE WHEN 100*year( stay_date)+month( stay_date) = &mo_out2 THEN '_2MNOut' when 100*year( stay_date)+month( stay_date) = &mo_out3 THEN '_3MNOut' END AS timeframe , SUM( ( rn+0)) AS rn, SUM( ( rev_net+0)) AS rv, SUM( ( rn_ly+0)) AS rn_ly, SUM( ( rev_net_ly+0)) AS rv_ly FROM allotb GROUP BY marsha, segment, tier_los_ind, wdwe, calculated timeframe;",ESFactor - OTB Data Pull.sas
" CREATE TABLE allotb3 AS ( SELECT  * , CASE WHEN  tier_los_ind ge 2 AND timeframe = '_2MNOut'  THEN rn END AS RN_Es_Pace_2MNOut_rn, CASE WHEN  tier_los_ind ge 2 AND timeframe = '_2MNOut'  THEN rn_ly END AS RN_Es_Pace_2MNOut_rn_ly, CASE WHEN  tier_los_ind ge 2 AND timeframe = '_3MNOut'  THEN rn END AS RN_Es_Pace_3MNOut_rn, CASE WHEN  tier_los_ind ge 2 AND timeframe = '_3MNOut'  THEN rn_ly END AS RN_Es_Pace_3MNOut_rn_ly, CASE WHEN  timeframe='_2MNOut' AND wdwe='WE'  THEN rn END AS WE_RN_Pace_2MNOut_rn, CASE WHEN  timeframe='_2MNOut' AND wdwe='WE'  THEN rn_ly END AS WE_RN_Pace_2MNOut_rn_ly, CASE WHEN  timeframe='_3MNOut' AND wdwe='WE'  THEN rn END AS WE_RN_Pace_3MNOut_rn, CASE WHEN  timeframe='_3MNOut' AND wdwe='WE'  THEN rn_ly END AS WE_RN_Pace_3MNOut_rn_ly, CASE WHEN  timeframe='_2MNOut' AND segment='GRP'  THEN rn END AS FW_GR_RN_Pace_2MNOut_rn, CASE WHEN  timeframe='_2MNOut' AND segment='GRP'  THEN rn_ly END AS FW_GR_RN_Pace_2MNOut_rn_ly, CASE WHEN  timeframe='_3MNOut' AND segment='GRP'  THEN rn END AS FW_GR_RN_Pace_3MNOut_rn, CASE WHEN  timeframe='_3MNOut' AND segment='GRP'  THEN rn_ly END AS FW_GR_RN_Pace_3MNOut_rn_ly, CASE WHEN  timeframe='_2MNOut' AND segment='GRP' AND wdwe='WE'  THEN rn END AS WE_GR_RN_Pace_2MNOut_rn, CASE WHEN  timeframe='_2MNOut' AND segment='GRP' AND wdwe='WE'  THEN rn_ly END AS WE_GR_RN_Pace_2MNOut_rn_ly, CASE WHEN  timeframe='_3MNOut' AND segment='GRP' AND wdwe='WE'  THEN rn END AS WE_GR_RN_Pace_3MNOut_rn, CASE WHEN  timeframe='_3MNOut' AND segment='GRP' AND wdwe='WE'  THEN rn_ly END AS WE_GR_RN_Pace_3MNOut_rn_ly, CASE WHEN  tier_los_ind ge 2 AND timeframe='_2MNOut' AND wdwe='WE'  THEN rn END AS WE_RN_Es_Pace_2MNOut_rn, CASE WHEN  tier_los_ind ge 2 AND timeframe='_2MNOut' AND wdwe='WE'  THEN rn_ly END AS WE_RN_Es_Pace_2MNOut_rn_ly, CASE WHEN  tier_los_ind ge 2 AND timeframe='_3MNOut' AND wdwe='WE'  THEN rn END AS WE_RN_Es_Pace_3MNOut_rn, CASE WHEN  tier_los_ind ge 2 AND timeframe='_3MNOut' AND wdwe='WE'  THEN rn_ly END AS WE_RN_Es_Pace_3MNOut_rn_ly, CASE WHEN  tier_los_ind ge 2 AND timeframe='_2MNOut' AND segment='GRP'  THEN rn END AS FW_ES_GR_RN_Pace_2MNOut_rn, CASE WHEN  tier_los_ind ge 2 AND timeframe='_2MNOut' AND segment='GRP'  THEN rn_ly END AS FW_ES_GR_RN_Pace_2MNOut_rn_ly, CASE WHEN  timeframe='_2MNOut'  THEN rn END AS RN_Pace_2MNOut_rn, CASE WHEN  timeframe='_2MNOut'  THEN rn_ly END AS RN_Pace_2MNOut_rn_ly, CASE WHEN  timeframe='_3MNOut'  THEN rn END AS RN_Pace_3MNOut_rn, CASE WHEN  timeframe='_3MNOut'  THEN rn_ly END AS RN_Pace_3MNOut_rn_ly FROM allotb2 );",ESFactor - OTB Data Pull.sas
" CREATE TABLE esf.esf_otb AS select marsha , SUM( ( RN_Es_Pace_2MNOut_rn+-RN_Es_Pace_2MNOut_rn_ly)) AS RN_Es_Pace_Var_2MNOut , SUM( RN_Es_Pace_2MNOut_rn)/SUM( RN_Es_Pace_2MNOut_rn_ly) - 1 AS RN_Es_Pace_2MNOut , SUM( RN_Es_Pace_3MNOut_rn)/SUM( RN_Es_Pace_3MNOut_rn_ly) - 1 AS RN_Es_Pace_3MNOut , SUM( ( WE_RN_Pace_2MNOut_rn+-WE_RN_Pace_2MNOut_rn_ly)) AS WE_RN_Pace_Var_2MNOut , SUM( WE_RN_Pace_2MNOut_rn)/SUM( WE_RN_Pace_2MNOut_rn_ly) - 1 AS WE_RN_Pace_2MNOut , SUM( WE_RN_Pace_3MNOut_rn)/SUM( WE_RN_Pace_3MNOut_rn_ly) - 1 AS WE_RN_Pace_3MNOut , SUM( ( FW_GR_RN_Pace_2MNOut_rn+-FW_GR_RN_Pace_2MNOut_rn_ly)) AS FW_GR_RN_Pace_Var_2MNOut , SUM( FW_GR_RN_Pace_2MNOut_rn)/SUM( FW_GR_RN_Pace_2MNOut_rn_ly) - 1 AS FW_GR_RN_Pace_2MNOut , SUM( ( FW_GR_RN_Pace_3MNOut_rn+FW_GR_RN_Pace_3MNOut_rn_ly)) AS FW_GR_RN_Pace_Var_3MNOut , SUM( FW_GR_RN_Pace_3MNOut_rn)/SUM( FW_GR_RN_Pace_3MNOut_rn_ly) - 1 AS FW_GR_RN_Pace_3MNOut , SUM( ( WE_GR_RN_Pace_2MNOut_rn+-WE_GR_RN_Pace_2MNOut_rn_ly)) AS WE_GR_RN_Pace_Var_2MNOut , SUM( WE_GR_RN_Pace_2MNOut_rn)/SUM( WE_GR_RN_Pace_2MNOut_rn_ly) - 1 AS WE_GR_RN_Pace_2MNOut , SUM( WE_GR_RN_Pace_3MNOut_rn)/SUM( WE_GR_RN_Pace_3MNOut_rn_ly) - 1 AS WE_GR_RN_Pace_3MNOut , SUM( ( WE_RN_Es_Pace_2MNOut_rn+-WE_RN_Es_Pace_2MNOut_rn_ly)) AS WE_RN_Es_Pace_Var_2MNOut , SUM( WE_RN_Es_Pace_2MNOut_rn)/SUM( WE_RN_Es_Pace_2MNOut_rn_ly) - 1 AS WE_RN_Es_Pace_2MNOut , SUM( WE_RN_Es_Pace_3MNOut_rn)/SUM( WE_RN_Es_Pace_3MNOut_rn_ly) - 1 AS WE_RN_Es_Pace_3MNOut , SUM( ( FW_ES_GR_RN_Pace_2MNOut_rn+-FW_ES_GR_RN_Pace_2MNOut_rn_ly)) AS FW_ES_GR_RN_Pace_Var_2MNOut , SUM( RN_Pace_2MNOut_rn)/SUM( RN_Pace_2MNOut_rn_ly) - 1 AS RN_Pace_2MNOut , SUM( RN_Pace_3MNOut_rn)/SUM( RN_Pace_3MNOut_rn_ly) - 1 AS RN_Pace_3MNOut FROM allotb3 GROUP BY marsha;",ESFactor - OTB Data Pull.sas
 CREATE TABLE prop_master AS  (  SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER A  ) ;,ESFactor MRDW Data Pull.sas
 CREATE TABLE junk AS  (  select b.* FROM mrdw_dim_date b LIMIT 500  )  ;,ESFactor MRDW Data Pull.sas
" CREATE TABLE daysinmo AS  (  select b.year_cal, b.month_cal_id , CASE WHEN b.ab_day_of_week_cd IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' END AS wdwe , COUNT( b.date_dt) AS days FROM mrdw_dim_date b WHERE 100*b.year_cal+b.month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo, &curr_mo-100, &l2_mo-100, &l3_mo-100) GROUP BY b.year_cal, b.month_cal_id, wdwe ORDER BY b.year_cal, b.month_cal_id, wdwe  )  ;",ESFactor MRDW Data Pull.sas
" CREATE TABLE daysinmo2 AS ( SELECT  * , CASE WHEN  100*year_cal+month_cal_id = &curr_mo  THEN days END AS MN_days, CASE WHEN  100*year_cal+month_cal_id = &curr_mo-100  THEN days END AS MN_days_ly, CASE WHEN  100*year_cal+month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo)  THEN days END AS L3_days, CASE WHEN  100*year_cal+month_cal_id+100 IN ( &curr_mo, &l2_mo, &l3_mo)  THEN days END AS L3_days_ly, CASE WHEN  wdwe='WD' AND 100*year_cal+month_cal_id = &curr_mo  THEN days END AS MN_WD_days, CASE WHEN  wdwe='WD' AND 100*year_cal+month_cal_id = &curr_mo-100  THEN days END AS MN_WD_days_ly, CASE WHEN  wdwe='WD' AND 100*year_cal+month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo)  THEN days END AS L3_WD_days, CASE WHEN  wdwe='WD' AND 100*year_cal+month_cal_id+100 IN ( &curr_mo, &l2_mo, &l3_mo)  THEN days END AS L3_WD_days_ly, CASE WHEN  wdwe='WE' AND 100*year_cal+month_cal_id = &curr_mo  THEN days END AS MN_WE_days, CASE WHEN  wdwe='WE' AND 100*year_cal+month_cal_id = &curr_mo-100  THEN days END AS MN_WE_days_ly, CASE WHEN  wdwe='WE' AND 100*year_cal+month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo)  THEN days END AS L3_WE_days, CASE WHEN  wdwe='WE' AND 100*year_cal+month_cal_id+100 IN ( &curr_mo, &l2_mo, &l3_mo)  THEN days END AS L3_WE_days_ly FROM daysinmo );",ESFactor MRDW Data Pull.sas
" CREATE TABLE daysinmonth AS select &curr_mo AS yrmo, SUM( MN_days) AS MN_days, SUM( MN_days_ly) AS MN_days_ly , SUM( L3_days) AS L3_days, SUM( L3_days_ly) AS L3_days_ly , SUM( MN_WD_days) AS MN_WD_days, SUM( MN_WD_days_ly) AS MN_WD_days_ly , SUM( L3_WD_days) AS L3_WD_days, SUM( L3_WD_days_ly) AS L3_WD_days_ly , SUM( MN_WE_days) AS MN_WE_days, SUM( MN_WE_days_ly) AS MN_WE_days_ly , SUM( L3_WE_days) AS L3_WE_days, SUM( L3_WE_days_ly) AS L3_WE_days_ly FROM daysinmo2;",ESFactor MRDW Data Pull.sas
" CREATE TABLE AdtlDemand AS  (  select a14.property_cd AS MARSHA, a13.year_cal, a13.month_cal_id , CASE WHEN qy_stay_nights <= 4 THEN 'T1' ELSE 'ES' END AS esflag , CASE WHEN a12.cd_room_pool like 'T%' THEN 'TBD' when a12.cd_room_pool like 'O%' THEN 'TBD' when a12.cd_room_pool like 'S%' THEN 'STD' when a12.cd_room_pool like 'G%' THEN 'STD' ELSE 'TBD' END AS rmpool , SUM( a12.qy_addl_demand_adjstd) AS DEMAND FROM mrdw_fact_ddm_stat_unconstrain AS a12 JOIN mrdw_dim_date AS a13 ON ( a12.id_date_stay = a13.date_key) JOIN mrdw_dim_property AS a14 ON ( a12.id_property = a14.property_id) WHERE 100*a13.year_cal+a13.month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo, &curr_mo-100, &l2_mo-100, &l3_mo-100) GROUP BY a14.property_cd, a13.year_cal, a13.month_cal_id, esflag, rmpool ORDER BY a14.property_cd, a13.year_cal, a13.month_cal_id, esflag, rmpool )  ;",ESFactor MRDW Data Pull.sas
" CREATE TABLE adem_mn AS select marsha , CASE WHEN 100*a.year_cal+a.month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo) THEN &curryr ELSE &curryr-1 END AS yr , 'MN' AS timeframe, esflag, rmpool , DEMAND FROM AdtlDemand AS a WHERE 100*a.year_cal+a.month_cal_id = &curr_mo OR 100*a.year_cal+a.month_cal_id = &curr_mo-100;",ESFactor MRDW Data Pull.sas
" CREATE TABLE adem_l3 AS select marsha , CASE WHEN 100*a.year_cal+a.month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo) THEN &curryr ELSE &curryr-1 END AS yr , 'L3' AS timeframe, esflag, rmpool , SUM( Demand) AS demand FROM AdtlDemand AS a GROUP BY marsha, calculated yr, timeframe, esflag, rmpool;",ESFactor MRDW Data Pull.sas
" CREATE TABLE ademall AS ( SELECT  *  , compress( timeframe||'_'||esflag||'_'||rmpool||'_Dem_'||yr_lbl ) AS idVAR , CASE WHEN  yr=&curryr  THEN 'TY' WHEN  yr=&curryr-1  THEN 'LY' END AS yr_lbl FROM adem_mn UNION ALL SELECT  *  , compress( timeframe||'_'||esflag||'_'||rmpool||'_Dem_'||yr_lbl ) AS idVAR , CASE WHEN  yr=&curryr  THEN 'TY' WHEN  yr=&curryr-1  THEN 'LY' END AS yr_lbl FROM adem_l3);",ESFactor MRDW Data Pull.sas
SELECT * FROM ademall ORDER BY marsha;,ESFactor MRDW Data Pull.sas
" CREATE TABLE MC29_RN_L12 AS  (  select a.property_cd , SUM( a.roomnights_qty) AS MC29_RN_L12 FROM mrdw_fact_agg_dr_rev_analysis a, mrdw_dim_date b WHERE a.date_stay_dt=b.date_dt AND a.brand_cd IN ( 'RI', 'TS', 'ER', 'EL') AND a.market_prefix_cd = '29' AND 100*b.year_cal+b.month_cal_id > &curr_mo - 100 AND 100*b.year_cal+b.month_cal_id <= &curr_mo GROUP BY a.property_cd ORDER BY a.property_cd  )  ;",ESFactor MRDW Data Pull.sas
" CREATE TABLE daysytd_ty AS  (  select b.year_cal , COUNT( b.date_dt) AS days_ytd_ty FROM mrdw_dim_date b WHERE 100*b.year_cal+b.month_cal_id <= &curr_mo AND 100*b.year_cal+b.month_cal_id >= &curr_mo-12 GROUP BY b.year_cal ORDER BY b.year_cal  )  ;",ESFactor MRDW Data Pull.sas
" CREATE TABLE daysytd_ly AS  (  select b.year_cal , COUNT( b.date_dt) AS days_ytd_ly FROM mrdw_dim_date b WHERE 100*b.year_cal+b.month_cal_id <= &curr_mo-100 AND 100*b.year_cal+b.month_cal_id >= &curr_mo-112 GROUP BY b.year_cal ORDER BY b.year_cal  )  ;",ESFactor MRDW Data Pull.sas
" CREATE TABLE esytddata_ty AS  (  select a.property_cd, b.year_cal , SUM( a.roomnights_qty) AS rn, SUM( a.net_rev_local_amt) AS rv , SUM( net_rev_usd_sub_amt) AS rv_usd FROM mrdw_fact_agg_dr_rev_analysis a, mrdw_dim_date b WHERE a.date_stay_dt=b.date_dt AND a.brand_cd IN ( 'RI', 'TS', 'ER', 'EL') AND a.ab_tier_los_txt <> 'LOS:1-4' AND 100*b.year_cal+b.month_cal_id <= &curr_mo AND 100*b.year_cal+b.month_cal_id >= &curr_mo-12 GROUP BY a.property_cd, b.year_cal ORDER BY a.property_cd, b.year_cal  )  ;",ESFactor MRDW Data Pull.sas
" CREATE TABLE esytddata_ly AS  (  select a.property_cd, b.year_cal , SUM( a.roomnights_qty) AS rn, SUM( a.net_rev_local_amt) AS rv , SUM( net_rev_usd_sub_amt) AS rv_usd FROM mrdw_fact_agg_dr_rev_analysis a, mrdw_dim_date b WHERE a.date_stay_dt=b.date_dt AND a.brand_cd IN ( 'RI', 'TS', 'ER', 'EL') AND a.ab_tier_los_txt <> 'LOS:1-4' AND 100*b.year_cal+b.month_cal_id <= &curr_mo-100 AND 100*b.year_cal+b.month_cal_id >= &curr_mo-112 GROUP BY a.property_cd, b.year_cal ORDER BY a.property_cd, b.year_cal  )  ;",ESFactor MRDW Data Pull.sas
" CREATE TABLE esytddata AS select a.marsha AS marsha, a.hcap, d.days_ytd_ty, e.days_ytd_ly, b.rn AS esrn_ty , CASE WHEN a.curr='USD' THEN b.rv_usd ELSE b.rv END AS esrv_ty , c.rn AS esrn_ly , CASE WHEN a.curr='USD' THEN c.rv_usd ELSE c.rv END AS esrv_ly , b.rn/( a.hcap*d.days_ytd_ty) AS EsOcc_YTD , c.rn/( a.hcap*e.days_ytd_ly) AS EsOcc_ly_YTD , ( calculated EsOcc_YTD+- calculated EsOcc_ly_YTD) AS ESOcc_chg_YTD , calculated esrv_ty/( a.hcap*d.days_ytd_ty) AS EsRevPAR_YTD , calculated esrv_ly/( a.hcap*e.days_ytd_ly) AS EsRevPAR_ly_YTD , ( calculated EsRevPAR_YTD/calculated EsRevPAR_ly_YTD) - 1 AS EsRevPAR_chg_YTD , calculated esrv_ty/b.rn AS EsADR_YTD , calculated esrv_ly/c.rn AS EsADR_ly_YTD , ( calculated EsADR_YTD/calculated EsADR_ly_YTD) - 1 AS EsADR_chg_YTD FROM prop_master AS a LEFT JOIN esytddata_ty AS b ON a.marsha=b.property_cd LEFT JOIN esytddata_ly AS c ON a.marsha=c.property_cd LEFT JOIN daysytd_ty AS d ON b.year_cal=d.year_cal LEFT JOIN daysytd_ly AS e ON c.year_cal=e.year_cal WHERE a.openflag='Y' AND a.brnd IN ( 'RI', 'TS', 'ER', 'EL' ) ;",ESFactor MRDW Data Pull.sas
" CREATE TABLE mrdwdata AS  (  select a.property_cd, b.year_cal, b.month_cal_id, a.ab_tier_los_txt , CASE WHEN a.market_prefix_cd IN ( '10', '12', '30', '34', '37', '20', '23', '24', '21') THEN 'NQ' when a.market_prefix_cd IN ( '17', '18') THEN 'SC' when a.market_prefix_cd = '16' THEN 'GV' when a.market_prefix_cd IN ( 'GR', 'CN', 'CT') THEN a.market_prefix_cd ELSE 'OT' END AS segment , CASE WHEN b.ab_day_of_week_cd IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' END AS wdwe , CASE WHEN a.ab_tier_los_txt = 'LOS:1-4' THEN 'T1' ELSE 'ES' END AS es_flag , CASE WHEN a.room_pool_cd like 'O%' THEN 'STD' when a.room_pool_cd like 'S%' THEN 'STD' when a.room_pool_cd like 'G%' THEN 'STD' ELSE 'TBD' END AS rmpool , CASE WHEN a.market_prefix_cd IN ( '10', '12') THEN a.market_prefix_cd ELSE 'OT' END AS bnch , SUM( a.roomnights_qty) AS rn, SUM( a.net_rev_local_amt) AS rv , SUM( net_rev_usd_sub_amt) AS rv_usd FROM mrdw_fact_agg_dr_rev_analysis a, mrdw_dim_date b WHERE a.date_stay_dt=b.date_dt AND a.brand_cd IN ( 'RI', 'TS', 'ER', 'EL') AND 100*b.year_cal+b.month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo, &curr_mo-100, &l2_mo-100, &l3_mo-100) GROUP BY a.property_cd, b.year_cal, b.month_cal_id, a.ab_tier_los_txt, segment, wdwe, es_flag, rmpool, bnch ORDER BY a.property_cd, b.year_cal, b.month_cal_id, a.ab_tier_los_txt, segment, wdwe, es_flag, rmpool, bnch  )  ;",ESFactor MRDW Data Pull.sas
" CREATE TABLE mndata AS select property_cd , CASE WHEN 100*a.year_cal+a.month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo) THEN &curryr ELSE &curryr-1 END AS yr , 'MN' AS timeframe, ab_tier_los_txt, segment, wdwe, es_flag, rmpool, bnch , rn, rv, rv_usd FROM mrdwdata AS a WHERE 100*a.year_cal+a.month_cal_id = &curr_mo OR 100*a.year_cal+a.month_cal_id = &curr_mo-100;",ESFactor MRDW Data Pull.sas
" CREATE TABLE l3data AS select property_cd , CASE WHEN 100*a.year_cal+a.month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo) THEN &curryr ELSE &curryr-1 END AS yr , 'L3' AS timeframe, ab_tier_los_txt, segment, wdwe, es_flag, rmpool, bnch , SUM( rn) AS rn, SUM( rv) AS rv, SUM( rv_usd) AS rv_usd FROM mrdwdata AS a GROUP BY property_cd, calculated yr, ab_tier_los_txt, segment, wdwe, es_flag, rmpool, bnch;",ESFactor MRDW Data Pull.sas
 CREATE TABLE mrdwdata2 AS ( SELECT  *  FROM l3data UNION ALL SELECT  *  FROM mndata);,ESFactor MRDW Data Pull.sas
" CREATE TABLE mrdwdata3 AS select coalesce( a.property_cd,b.property_cd) AS marsha, coalesce( a.timeframe,b.timeframe) AS timeframe , CASE WHEN coalesce( a.ab_tier_los_txt,b.ab_tier_los_txt) = 'LOS:1-4' THEN 'T1' when coalesce( a.ab_tier_los_txt,b.ab_tier_los_txt) = 'LOS:5-11' THEN 'T2' when coalesce( a.ab_tier_los_txt,b.ab_tier_los_txt) = 'LOS:12-29' THEN 'T3' when coalesce( a.ab_tier_los_txt,b.ab_tier_los_txt) = 'LOS:30+' THEN 'T4' END AS tier , coalesce( a.segment,b.segment) AS segment, coalesce( a.wdwe,b.wdwe) AS wdwe , coalesce( a.es_flag,b.es_flag) AS esflag, coalesce( a.rmpool,b.rmpool) AS rmpool , coalesce( a.bnch,b.bnch) AS bnch , a.rn AS rn, a.rv_usd AS rv, b.rn AS rn_ly, b.rv_usd AS rv_ly FROM mrdwdata2 AS a full JOIN mrdwdata2 AS b ON a.property_cd=b.property_cd AND a.yr=b.yr+1 AND a.timeframe=b.timeframe AND a.ab_tier_los_txt=b.ab_tier_los_txt AND a.segment=b.segment AND a.wdwe=b.wdwe AND a.es_flag=b.es_flag AND a.rmpool=b.rmpool AND a.bnch=b.bnch WHERE coalesce( a.yr,b.yr+1)=&curryr;",ESFactor MRDW Data Pull.sas
"SELECT * FROM mrdwdata3 ORDER BY marsha ,timeframe ,tier ,segment ,wdwe ,esflag ,rmpool ,bnch;",ESFactor MRDW Data Pull.sas
" CREATE TABLE tranmrdw2 AS ( SELECT  *  , compress( timeframe||'_'||tier||'_'||segment||'_'||wdwe||'_'||_name_ ) AS idVAR  FROM tranmrdw );",ESFactor MRDW Data Pull.sas
" CREATE TABLE tr_sum1 AS select marsha, compress( timeframe||'_'||esflag||'_'||segment||'_'||'FW'||'_'||_name_) AS idVAR, SUM( col1) AS col1 FROM tranmrdw GROUP BY marsha, calculated idVAR;",ESFactor MRDW Data Pull.sas
" CREATE TABLE tr_sum2 AS select marsha, compress( timeframe||'_'||esflag||'_'||'TO'||'_'||wdwe||'_'||_name_) AS idVAR, SUM( col1) AS col1 FROM tranmrdw GROUP BY marsha, calculated idVAR;",ESFactor MRDW Data Pull.sas
" CREATE TABLE tr_sum3 AS select marsha, compress( timeframe||'_'||tier||'_'||segment||'_'||wdwe||'_'||_name_) AS idVAR, SUM( col1) AS col1 FROM tranmrdw GROUP BY marsha, calculated idVAR;",ESFactor MRDW Data Pull.sas
" CREATE TABLE tr_sum4 AS select marsha, compress( timeframe||'_'||esflag||'_'||'TO'||'_'||'FW'||'_'||_name_) AS idVAR, SUM( col1) AS col1 FROM tranmrdw GROUP BY marsha, calculated idVAR;",ESFactor MRDW Data Pull.sas
" CREATE TABLE tr_sum5 AS select marsha, compress( timeframe||'_'||esflag||'_'||segment||'_'||wdwe||'_'||rmpool||'_'||_name_) AS idVAR, SUM( col1) AS col1 FROM tranmrdw GROUP BY marsha, calculated idVAR;",ESFactor MRDW Data Pull.sas
" CREATE TABLE tr_sum6 AS select marsha, compress( timeframe||'_'||esflag||'_'||bnch||'_'||wdwe||'_'||_name_) AS idVAR, SUM( col1) AS col1 FROM tranmrdw WHERE bnch<>'OT' GROUP BY marsha, calculated idVAR;",ESFactor MRDW Data Pull.sas
" CREATE TABLE tr_sum7 AS select marsha, compress( timeframe||'_'||tier||'_'||bnch||'_'||'FW'||'_'||_name_) AS idVAR, SUM( col1) AS col1 FROM tranmrdw WHERE bnch = '12' GROUP BY marsha, calculated idVAR;",ESFactor MRDW Data Pull.sas
" CREATE TABLE tr_sum8 AS select marsha, compress( timeframe||'_'||tier||'_'||segment||'_'||'FW'||'_'||_name_) AS idVAR, SUM( col1) AS col1 FROM tranmrdw WHERE segment='GR' AND tier<>'T1' GROUP BY marsha, calculated idVAR;",ESFactor MRDW Data Pull.sas
" CREATE TABLE tr_sumall AS ( SELECT  *  , &curr_mo AS yrmo  FROM tr_sum5 UNION ALL SELECT  *  , &curr_mo AS yrmo  FROM tr_sum1 UNION ALL SELECT  *  , &curr_mo AS yrmo  FROM tr_sum2 UNION ALL SELECT  *  , &curr_mo AS yrmo  FROM tr_sum3 UNION ALL SELECT  *  , &curr_mo AS yrmo  FROM tr_sum4 UNION ALL SELECT  *  , &curr_mo AS yrmo  FROM tr_sum6 UNION ALL SELECT  *  , &curr_mo AS yrmo  FROM tr_sum7 UNION ALL SELECT  *  , &curr_mo AS yrmo  FROM tr_sum8);",ESFactor MRDW Data Pull.sas
"SELECT * FROM tr_sumall ORDER BY marsha ,idVAR;",ESFactor MRDW Data Pull.sas
" CREATE TABLE esf.esf_mrdw AS select a.marsha, ( L3_ES_GR_FW_rn/L3_ES_GR_FW_rn_ly) - 1 AS Es_GR_RN_Chg_L3 , ( MN_ES_GR_FW_rn/MN_ES_GR_FW_rn_ly) - 1 AS Es_GR_RN_Chg_MN , L3_ES_GR_FW_rn / ( L3_ES_TO_WD_rn+L3_ES_TO_WE_rn) AS Es_GR_RN_Mix_L3 , ( L3_ES_TO_FW_rn/L3_ES_TO_FW_rn_ly) - 1 AS Es_RN_Chg_L3 , ( MN_ES_TO_FW_rn/MN_ES_TO_FW_rn_ly) - 1 AS Es_RN_Chg_MN , L3_ES_TO_FW_rn/( L3_ES_TO_FW_rn+L3_T1_TO_FW_rn) - L3_ES_TO_FW_rn_ly/( L3_ES_TO_FW_rn_ly+L3_T1_TO_FW_rn_ly) AS Es_RN_Mix_Chg_L3 , L3_ES_TO_FW_rn/( L3_ES_TO_FW_rn+L3_T1_TO_FW_rn) AS Es_RN_Mix_L3 , ( L3_ES_TO_FW_rv/L3_ES_TO_FW_rn) AS EsADR_L3 , ( L3_ES_TO_FW_rv/L3_ES_TO_FW_rn)/( L3_ES_TO_FW_rv_ly/L3_ES_TO_FW_rn_ly) - 1 AS EsADR_Chg_L3 , L3_ES_TO_FW_rn/( c.hcap*L3_days) AS ESOcc_L3 , L3_ES_TO_FW_rn/( c.hcap*L3_days) - L3_ES_TO_FW_rn_ly/( c.hcap*L3_days_ly) AS EsOcc_Chg_L3 , MN_ES_TO_FW_rn/( c.hcap*MN_days) AS ESOcc_MN , MN_ES_TO_FW_rn/( c.hcap*MN_days) - MN_ES_TO_FW_rn_ly/( c.hcap*MN_days_ly) AS EsOcc_Chg_MN , L3_ES_SC_FW_rn/L3_ES_SC_FW_rn_ly - 1 AS Especialcorp_RN_Chg_L3 , L3_ES_SC_FW_rn AS Especialcorp_RN_L3 , ( L3_ES_TO_FW_rv/( c.hcap*L3_days)) / ( L3_ES_TO_FW_rv_ly/( c.hcap*L3_days_ly)) - 1 AS EsRevPAR_Chg_L3 , ( L3_ES_TO_FW_rv/( c.hcap*L3_days)) AS EsRevPAR_L3 , ( MN_ES_TO_FW_rv/MN_ES_TO_FW_rn) AS EsADR_MN , ( MN_ES_TO_FW_rv/MN_ES_TO_FW_rn)/( MN_ES_TO_FW_rv_ly/MN_ES_TO_FW_rn_ly) - 1 AS EsADR_chg_MN , ( MN_ES_TO_FW_rv/( c.hcap*MN_days)) AS EsRevPAR_MN , ( MN_ES_TO_FW_rv/( c.hcap*MN_days))/( MN_ES_TO_FW_rv_ly/( c.hcap*MN_days_ly)) - 1 AS EsRevPAR_chg_MN , L3_ES_TO_FW_rn AS EsRN_L3 , ( L3_ES_GR_FW_rn+L3_T1_GR_FW_rn)/( L3_ES_GR_FW_rn_ly+L3_T1_GR_FW_rn_ly) - 1 AS FW_GR_RN_Chg_L3 , ( L3_ES_GR_FW_rn+L3_T1_GR_FW_rn)/( L3_ES_TO_FW_rn+L3_T1_TO_FW_rn) AS FW_GR_RN_Mix_L3 , ( L3_ES_SC_FW_rn+L3_T1_SC_FW_rn)/( L3_ES_TO_FW_rn+L3_T1_TO_FW_rn) AS FW_Specialcorp_Mix_L3 , ( L3_ES_TO_FW_rn+L3_T1_TO_FW_rn)/( c.hcap*L3_days) AS Occ_L3 , ( MN_ES_TO_FW_rn+MN_T1_TO_FW_rn)/( c.hcap*MN_days) AS Occ_MN , ( ( MN_ES_TO_FW_rv+MN_T1_TO_FW_rv)/( c.hcap*MN_days)) AS RevPAR_MN , L3_ES_SC_FW_rn/( L3_ES_TO_FW_rn+L3_T1_TO_FW_rn) AS SpecCorp_Es_Mix_L3 , ( MN_T1_NQ_FW_rv/MN_T1_NQ_FW_rn)/( MN_T1_NQ_FW_rv_ly/MN_T1_NQ_FW_rn_ly) - 1 AS T1_LM_NQ_ADR_Chg , L3_T1_NQ_FW_rn/L3_T1_TO_FW_rn AS T1_NQ_Mix_L3 , L3_T1_NQ_FW_rn/L3_T1_TO_FW_rn - L3_T1_NQ_FW_rn_ly/L3_T1_TO_FW_rn_ly AS T1_NQ_Mix_L3_Chg , L3_T1_NQ_WD_rn/L3_T1_TO_WD_rn AS T1_WD_NQ_Mix_L3 , L3_T1_NQ_WD_rn/L3_T1_TO_WD_rn - L3_T1_NQ_WD_rn_ly/L3_T1_TO_WD_rn_ly AS T1_WD_NQ_Mix_L3_Chg , ( ( L3_T1_10_WD_rv+L3_T1_10_WE_rv)/( L3_T1_10_WD_rn+L3_T1_10_WE_rn)) / ( ( L3_T1_12_WD_rv+L3_T1_12_WE_rv)/( L3_T1_12_WD_rn+L3_T1_12_WE_rn)) - 1 AS T1_Prem_2BD_vs_Studio_L3 , ( L3_T1_NQ_WD_STD_rv+L3_T1_SC_WD_STD_rv+L3_T1_GV_WD_STD_rv+L3_T1_OT_WD_STD_rv)/( L3_T1_NQ_WD_STD_rn+L3_T1_SC_WD_STD_rn+L3_T1_GV_WD_STD_rn+L3_T1_OT_WD_STD_rn) / ( L3_T1_NQ_WD_STD_rv/L3_T1_NQ_WD_STD_rn) AS T1_TransRateEff_L3 , ( L3_T1_NQ_WD_STD_rv+L3_T1_SC_WD_STD_rv+L3_T1_GV_WD_STD_rv+L3_T1_OT_WD_STD_rv)/( L3_T1_NQ_WD_STD_rn+L3_T1_SC_WD_STD_rn+L3_T1_GV_WD_STD_rn+L3_T1_OT_WD_STD_rn) / ( L3_T1_NQ_WD_STD_rv/L3_T1_NQ_WD_STD_rn) - ( L3_T1_NQ_WD_STD_rv_ly+L3_T1_SC_WD_STD_rv_ly+L3_T1_GV_WD_STD_rv_ly+L3_T1_OT_WD_STD_rv_ly)/( L3_T1_NQ_WD_STD_rn_ly+L3_T1_SC_WD_STD_rn_ly+L3_T1_GV_WD_STD_rn_ly+L3_T1_OT_WD_STD_rn_ly) / ( L3_T1_NQ_WD_STD_rv_ly/L3_T1_NQ_WD_STD_rn_ly) AS T1_TransRateEff_Chg_L3 , L3_T1_NQ_WD_rn/L3_T1_TO_WD_rn AS T1_WD_NQ_Mix_L3 , L3_T1_GR_WE_rn/L3_T1_TO_WE_rn AS T1_WE_GR_Mix_L3 , L3_T1_NQ_WE_rn/L3_T1_TO_WE_rn AS T1_WE_NQ_Mix_L3 , ( L3_T1_NQ_WE_STD_rv+L3_T1_SC_WE_STD_rv+L3_T1_GV_WE_STD_rv+L3_T1_OT_WE_STD_rv)/( L3_T1_NQ_WE_STD_rn+L3_T1_SC_WE_STD_rn+L3_T1_GV_WE_STD_rn+L3_T1_OT_WE_STD_rn) / ( L3_T1_NQ_WE_STD_rv/L3_T1_NQ_WE_STD_rn) - ( L3_T1_NQ_WE_STD_rv_ly+L3_T1_SC_WE_STD_rv_ly+L3_T1_GV_WE_STD_rv_ly+L3_T1_OT_WE_STD_rv_ly)/( L3_T1_NQ_WE_STD_rn_ly+L3_T1_SC_WE_STD_rn_ly+L3_T1_GV_WE_STD_rn_ly+L3_T1_OT_WE_STD_rn_ly) / ( L3_T1_NQ_WE_STD_rv_ly/L3_T1_NQ_WE_STD_rn_ly) AS T1_WE_TRE_Chg_L3 , ( MN_T1_NQ_WE_STD_rv+MN_T1_SC_WE_STD_rv+MN_T1_GV_WE_STD_rv+MN_T1_OT_WE_STD_rv)/( MN_T1_NQ_WE_STD_rn+MN_T1_SC_WE_STD_rn+MN_T1_GV_WE_STD_rn+MN_T1_OT_WE_STD_rn) / ( MN_T1_NQ_WE_STD_rv/MN_T1_NQ_WE_STD_rn) AS T1_WE_TRE_MN , ( ( MN_T2_NQ_WD_rv+MN_T2_NQ_WD_rv)/( MN_T2_NQ_WD_rn+MN_T2_NQ_WD_rn)) / ( ( MN_T2_NQ_WD_rv_ly+MN_T2_NQ_WD_rv_ly)/( MN_T2_NQ_WD_rn_ly+MN_T2_NQ_WD_rn_ly)) - 1 AS T2_LM_NQ_ADR_Chg , ( ( MN_T3_NQ_WD_rv+MN_T3_NQ_WD_rv)/( MN_T3_NQ_WD_rn+MN_T3_NQ_WD_rn)) / ( ( MN_T3_NQ_WD_rv_ly+MN_T3_NQ_WD_rv_ly)/( MN_T3_NQ_WD_rn_ly+MN_T3_NQ_WD_rn_ly)) - 1 AS T3_LM_NQ_ADR_Chg , ( ( MN_T4_NQ_WD_rv+MN_T4_NQ_WD_rv)/( MN_T4_NQ_WD_rn+MN_T4_NQ_WD_rn)) / ( ( MN_T4_NQ_WD_rv_ly+MN_T4_NQ_WD_rv_ly)/( MN_T4_NQ_WD_rn_ly+MN_T4_NQ_WD_rn_ly)) - 1 AS T4_LM_NQ_ADR_Chg , ( L3_T1_GR_WD_rn+L3_T2_GR_WD_rn+L3_T3_GR_WD_rn+L3_T4_GR_WD_rn)/( L3_T1_GR_WD_rn_ly+L3_T2_GR_WD_rn_ly+L3_T3_GR_WD_rn_ly+L3_T4_GR_WD_rn_ly) - 1 AS WD_Gr_RN_Chg_L3 , ( L3_T1_TO_WD_rn+L3_ES_TO_WD_rn)/( c.hcap*L3_WD_days) AS WD_Occ_L3 , ( L3_T1_GR_WE_rn+L3_T2_GR_WE_rn+L3_T3_GR_WE_rn+L3_T4_GR_WE_rn)/( L3_T1_GR_WE_rn_ly+L3_T2_GR_WE_rn_ly+L3_T3_GR_WE_rn_ly+L3_T4_GR_WE_rn_ly) - 1 AS WE_Gr_RN_Chg_L3 , ( MN_T1_GR_WE_rn+MN_T2_GR_WE_rn+MN_T3_GR_WE_rn+MN_T4_GR_WE_rn)/( MN_T1_GR_WE_rn_ly+MN_T2_GR_WE_rn_ly+MN_T3_GR_WE_rn_ly+MN_T4_GR_WE_rn_ly) - 1 AS WE_GR_RN_Chg_MN , SUM( ( L3_T1_GR_WE_rn+L3_T2_GR_WE_rn+L3_T3_GR_WE_rn+L3_T4_GR_WE_rn),-( L3_T1_GR_WE_rn_ly+L3_T2_GR_WE_rn_ly+L3_T3_GR_WE_rn_ly+L3_T4_GR_WE_rn_ly)) AS WE_Gr_RN_Var_L3 , SUM( ( MN_T1_GR_WE_rn+MN_T2_GR_WE_rn+MN_T3_GR_WE_rn+MN_T4_GR_WE_rn),-( MN_T1_GR_WE_rn_ly+MN_T2_GR_WE_rn_ly+MN_T3_GR_WE_rn_ly+MN_T4_GR_WE_rn_ly)) AS WE_Gr_RN_Var_MN , ( MN_T1_GR_WE_rn/MN_T1_GR_WE_rn_ly) - 1 AS WE_T1_Gr_RN_Chg_MN , ( MN_T1_GR_WE_rn+-MN_T1_GR_WE_rn_ly) AS WE_T1_Gr_RN_Var_MN , ( L3_T1_GR_WE_rn/L3_T1_GR_WE_rn_ly) - 1 AS WE_T1_Gr_RN_Chg_L3 , ( L3_T1_GR_WE_rn+-L3_T1_GR_WE_rn_ly) AS WE_T1_Gr_RN_Var_L3 , ( L3_T1_TO_WE_rn+L3_ES_TO_WE_rn)/( c.hcap*L3_WE_days) AS WE_Occ_L3 , ( MN_T1_TO_WE_rn+MN_ES_TO_WE_rn)/( c.hcap*MN_WE_days) AS WE_Occ_MN , ( L3_ES_NQ_WD_STD_rn+L3_ES_SC_WD_STD_rn+L3_ES_OT_WD_STD_rn+L3_ES_GR_WD_STD_rn+L3_ES_CN_WD_STD_rn +L3_ES_NQ_WE_STD_rn+L3_ES_SC_WE_STD_rn+L3_ES_OT_WE_STD_rn+L3_ES_GR_WE_STD_rn+L3_ES_CN_WE_STD_rn) AS L3_STD_RN , ( L3_ES_TO_FW_rn+L3_T1_TO_FW_rn) AS L3_TOT_RN , 1 - calculated L3_STD_RN / calculated L3_TOT_RN AS PremiumRoomPool_Mix_L3 , d.MC29_RN_L12 , ( calculated L3_STD_RN+L3_ES_STD_Dem_TY+L3_T1_STD_Dem_TY) AS Studio_TotDem_L3 , ( calculated L3_TOT_RN+L3_ES_STD_Dem_TY+L3_T1_STD_Dem_TY+L3_ES_TBD_Dem_TY+L3_T1_TBD_Dem_TY) AS TotDem_L3 , ( MN_ES_STD_Dem_TY+MN_T1_STD_Dem_TY+MN_ES_TBD_Dem_TY+MN_T1_TBD_Dem_TY) / ( MN_ES_STD_Dem_LY+MN_T1_STD_Dem_LY+MN_ES_TBD_Dem_LY+MN_T1_TBD_Dem_LY) - 1 AS ES_Add_Demand_Chg_MN , ( L3_ES_STD_Dem_TY+L3_T1_STD_Dem_TY+L3_ES_TBD_Dem_TY+L3_T1_TBD_Dem_TY) / ( L3_ES_STD_Dem_LY+L3_T1_STD_Dem_LY+L3_ES_TBD_Dem_LY+L3_T1_TBD_Dem_LY) - 1 AS ES_Add_Demand_Chg_L3 , ( MN_T2_GR_FW_rv/MN_T2_GR_FW_rn) AS T2_GR_ADR_MN , ( MN_T3_GR_FW_rv/MN_T3_GR_FW_rn) AS T3_GR_ADR_MN , ( MN_T4_GR_FW_rv/MN_T4_GR_FW_rn) AS T4_GR_ADR_MN , ( MN_T2_GR_FW_rv_ly/MN_T2_GR_FW_rn_ly) AS T2_GR_ADR_LY_MN , ( MN_T3_GR_FW_rv_ly/MN_T3_GR_FW_rn_ly) AS T3_GR_ADR_LY_MN , ( MN_T4_GR_FW_rv_ly/MN_T4_GR_FW_rn_ly) AS T4_GR_ADR_LY_MN , ( calculated T2_GR_ADR_MN / calculated T2_GR_ADR_LY_MN) - 1 AS T2_GR_ADR_Chg_MN , ( calculated T3_GR_ADR_MN / calculated T3_GR_ADR_LY_MN) - 1 AS T3_GR_ADR_Chg_MN , ( calculated T4_GR_ADR_MN / calculated T4_GR_ADR_LY_MN) - 1 AS T4_GR_ADR_Chg_MN , ( MN_T2_12_FW_rv/MN_T2_12_FW_rn) AS T2_12_ADR_MN , ( MN_T3_12_FW_rv/MN_T3_12_FW_rn) AS T3_12_ADR_MN , ( MN_T4_12_FW_rv/MN_T4_12_FW_rn) AS T4_12_ADR_MN , ( MN_T2_12_FW_rv_ly/MN_T2_12_FW_rn_ly) AS T2_12_ADR_LY_MN , ( MN_T3_12_FW_rv_ly/MN_T3_12_FW_rn_ly) AS T3_12_ADR_LY_MN , ( MN_T4_12_FW_rv_ly/MN_T4_12_FW_rn_ly) AS T4_12_ADR_LY_MN , ( calculated T2_12_ADR_MN / calculated T2_12_ADR_LY_MN) - 1 AS T2_12_ADR_Chg_MN , ( calculated T3_12_ADR_MN / calculated T3_12_ADR_LY_MN) - 1 AS T3_12_ADR_Chg_MN , ( calculated T4_12_ADR_MN / calculated T4_12_ADR_LY_MN) - 1 AS T4_12_ADR_Chg_MN , f.EsOcc_YTD, f.EsOcc_chg_YTD , f.EsADR_YTD, f.EsADR_chg_YTD , f.EsRevPAR_YTD, f.EsRevPAR_chg_YTD , L3_T1_GV_WD_rn/L3_T1_TO_WD_rn AS T1_WD_GV_MIX_L3 , L3_ES_GV_FW_rn/L3_ES_TO_FW_rn AS ES_FW_GV_MIX_L3 , MN_T1_12_WD_rv/MN_T1_12_WD_rn AS T1_WD_MC12_ADR_MN , ( MN_T2_12_FW_rv+MN_T3_12_FW_rv+MN_T4_12_FW_rv)/( MN_T2_12_FW_rn+MN_T3_12_FW_rn+MN_T4_12_FW_rn) AS ES_FW_MC12_ADR_MN FROM tran2_mrdw AS a INNER JOIN daysinmonth AS b ON a.yrmo=b.yrmo INNER JOIN prop_master AS c ON a.marsha=c.marsha LEFT JOIN MC29_RN_L12 AS d ON a.marsha=d.property_cd LEFT JOIN tran_adem AS e ON a.marsha=e.marsha LEFT JOIN esytddata AS f ON a.marsha=f.marsha ORDER BY a.marsha;",ESFactor MRDW Data Pull.sas
 CREATE TABLE HI.PLU_Master AS  (  SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER AS a  ) ;,FB Data from Finance Extract.sas
" CREATE TABLE PLU_TC AS select a.*, ( CASE WHEN a.Division='AM' AND a.Region IN ( 'E_', 'W_','C_') THEN 'US/Canada' when a.Division='AM' AND a.Region IN ( 'S_') THEN 'CALA' when a.Division='EU' THEN 'Europe' when a.Division='PA' THEN 'APAC' when a.Division='ME' THEN 'MEA' ELSE 'Not Avail' end) AS Division_Category, ( CASE WHEN a.Division='AM' AND a.Region IN ( 'E_', 'W_') THEN 'Americas/US' when a.Division='AM' AND a.Region='S_' THEN 'Americas/CALA' when a.Division='AM' AND a.Region='C_' THEN 'Americas/Canada' when a.Division='EU' THEN 'Intl/Europe' when a.Division='PA' THEN 'Intl/APAC' when a.Division='ME' THEN 'Intl/MEA' ELSE 'Not Avail' end) AS Region_Category, ( CASE WHEN a.BRND IN ( 'RZ','EB','BG','JW','LC','ST','WH','XR','FS','BR','CC','AK','DE','WI','SI','MD','DS','TX','GE') THEN 'Full Service Brands' when a.BRND IN ( 'CY','FI','SH','AR','OX','AL','4P','FP','PR','RI','TS','EL') THEN 'Select Service Brands' when a.BRND IN ( 'ZC','MV','ER','VB','GX','EE','NR','NO','OI') THEN 'Excluded Brands' ELSE 'Unassigned/Not Avail' end) AS Brand_Category, ( CASE WHEN a.BRND IN ( 'RZ','EB','BG','JW','LC','ST','WH','XR') THEN 'Luxury Brands' when a.BRND IN ( 'FS','BR','CC','AK','DE','WI','SI','MD','DS','TX','GE') THEN 'Premium Brands' when a.BRND IN ( 'CY','FI','SH','AR','OX','AL','4P','FP','PR') THEN 'Modern Essentials Brands' when a.BRND IN ( 'RI','TS','EL') THEN 'Extended Stay Brands' when a.BRND IN ( 'ZC','MV','ER','VB','GX','EE','NR','NO','OI') THEN 'Excluded Brands' ELSE 'Unassigned/Not Avail' end) AS Brand_Type FROM HI.PLU_Master AS a ORDER BY a.MISW_Flag, a.Marsha;",FB Data from Finance Extract.sas
 CREATE TABLE work.TREASFX_FCST AS  (  SELECT * FROM AW_TGT_BUS_DBO.TREASFX_FCST AS a  ) ;,FB Data from Finance Extract.sas
"SELECT * FROM work.TREASFX_FCST ORDER BY YrMon ,Curr_Code;",FB Data from Finance Extract.sas
 CREATE TABLE HI.PLU_SOTB AS  (  SELECT * FROM AW_REV_DBO.PLU_SOTB AS a  ) ;,FB Data from Finance Extract.sas
" CREATE TABLE Finance_Comp AS ( SELECT MARSHA, ACOMP, ACOMP AS ACOMP_SotbACOMP_Sotb AS ACOMP FROM HI.PLU_SOTB );",FB Data from Finance Extract.sas
" CREATE TABLE work.PLU_SOTB AS select b.MARSHA, b.ACOMP_Sotb,a.* FROM HI.PLU_SOTB AS a INNER JOIN Finance_Comp AS b ON a.MARSHA=b.MARSHA ORDER BY b.MARSHA;",FB Data from Finance Extract.sas
 CREATE TABLE FB.FIN_FORECASTACTUALS_FOODBEV_Raw AS  (  SELECT * FROM AW_TGT_BUS_DBO.FIN_FORECASTACTUALS_FOODBEV AS a  ) ;,FB Data from Finance Extract.sas
 CREATE TABLE test_data2 AS ( SELECT  *  FROM Data_asof&YrMon.  whereMARSHA='NYCEX' AND year=2017);,FB Data from Finance Extract.sas
" CREATE TABLE Outlet_Count1 AS select a.Data_YrMon, a.Year, a.Month_Name, a.MARSHA, a.FB_Category, a.FB_Group, a.FB_Type, SUM( a.Outlet_seats) AS Outlet_seats, SUM( a.Rev_LCL) AS Rev_LCL, SUM( a.Rev_CUSD) AS Rev_CUSD FROM Data_asof&YrMon. AS a GROUP BY a.Data_YrMon, a.Year, a.Month_Name, a.MARSHA, a.FB_Category, a.FB_Group, a.FB_Type;",FB Data from Finance Extract.sas
" CREATE TABLE Outlet_Count2 AS ( SELECT  * , CASE WHEN  Rev_LCL>0  THEN 1 ELSE 0 END AS Outlet_Count ELSE 0 FROM Outlet_Count1  WHERE FB_Category='Outlets');",FB Data from Finance Extract.sas
" CREATE TABLE Outlet_Count3 AS select a.Data_YrMon, a.Year, a.Month_Name, a.MARSHA, a.FB_Category, a.FB_Group, a.FB_Type, SUM( a.Rev_LCL) AS Rev_LCL, SUM( a.Rev_CUSD) AS Rev_CUSD, SUM( a.Outlet_seats) AS Outlet_seats, SUM( a.Outlet_Count) AS Outlet_Count FROM Outlet_Count2 AS a GROUP BY a.Data_YrMon, a.Year, a.Month_Name, a.MARSHA, a.FB_Category, a.FB_Group, a.FB_Type;",FB Data from Finance Extract.sas
" CREATE TABLE Data_0 AS select a.*, coalesce( b.Outlet_Count,0) AS Outlet_Count, coalesce( b.Outlet_Seats,0) AS Seats FROM Data_asof&YrMon. AS a LEFT JOIN Outlet_Count3 AS b ON a.FB_Category='Outlets' AND a.Dept_Category='Outlets/Outlet Stat' AND a.Metric_Level='Outlet Stat' AND a.Data_YrMon=b.Data_YrMon AND a.MARSHA=b.MARSHA AND a.FB_Category=b.FB_Category AND a.FB_Group=b.FB_Group AND a.FB_Type=b.FB_Type ORDER BY a.Data_YrMon, a.MARSHA, a.Year, a.Quarter, a.Month_Name, a.Month;",FB Data from Finance Extract.sas
" CREATE TABLE Data_1 AS select a.Data_YrMon, a.MARSHA, a.Curr_Code, a.Fx_Rate, a.Dept_Category, a.Metric_Level, a.Detail_Category, a.FB_Category, a.FB_Group, a.FB_Type, a.Year, a.Quarter, a.Mon, a.Month_Name, a.Month, a.Day_Count, a.Rpt_YrMon, SUM( a.Outlet_Count) AS Outlet_Count, SUM( a.Seats) AS Seats, SUM( a.Cater_Sq_feet) AS Cater_Sq_feet, SUM( a.Cater_Sq_Meters) AS Cater_Sq_Meters, SUM( a.Meal_Pd_Count) AS Meal_Pd_Count, SUM( a.Cover_Count) AS Covers, SUM( a.Rev_LCL) AS Rev_LCL, SUM( a.Rev_CUSD) AS Rev_CUSD FROM Data_0 AS a GROUP BY a.Data_YrMon, a.MARSHA, a.Curr_Code, a.Fx_Rate, a.Dept_Category, a.Metric_Level, a.Detail_Category, a.FB_Category, a.FB_Group, a.FB_Type, a.Year, a.Quarter, a.Mon, a.Month_Name, a.Month, a.Day_Count, a.Rpt_YrMon;",FB Data from Finance Extract.sas
" CREATE TABLE Data_2 AS ( SELECT  *  , ( BNQT_Group+BNQT_Local+BNQT_Other ) AS BNQT_ALL , CASE WHEN  FB_Type=""Banquets- Group"" AND Rev_LCL>0  THEN 1 ELSE 0 END AS BNQT_Group, CASE WHEN  FB_Type=""Banquets- Local"" AND Rev_LCL>0  THEN 1 ELSE 0 END AS BNQT_Local, CASE WHEN  FB_Type=""Banquets- Other"" AND Rev_LCL>0  THEN 1 ELSE 0 END AS BNQT_Other, CASE WHEN  FB_Category= ""Catering"" AND Detail_Category IN ( 'Breakfast','Lunch','Dinner')  THEN 1 ELSE 0 END AS Day_Part_Count FROM Data_1 );",FB Data from Finance Extract.sas
 CREATE TABLE Space_1 AS ( SELECT  *  FROM Data_asof&YrMon.  WHERE FB_Category='Catering');,FB Data from Finance Extract.sas
" CREATE TABLE Space_2 AS select a.Data_YrMon, a.Year, a.Month_Name, a.MARSHA, a.FB_Category, a.FB_Group, a.FB_Type, SUM( a.Cater_Sq_feet) AS Sq_Feet, SUM( a.Cater_Sq_Meters) AS Sq_Meters FROM Space_1 AS a GROUP by a.Data_YrMon, a.Year, a.Month_Name, a.MARSHA, a.FB_Category, a.FB_Group, a.FB_Type;",FB Data from Finance Extract.sas
" CREATE TABLE Space_3 AS ( SELECT  * , CASE WHEN  Sq_Feet>0 AND Sq_Meters>0  THEN ""Both"" WHEN   Sq_Feet>0  THEN ""Feet"" WHEN   Sq_Meters>0  THEN ""Meters"" ELSE ""not avail"" END AS Space_Metric FROM Space_2 );",FB Data from Finance Extract.sas
" CREATE TABLE Data_3 AS select a.*, coalesce( b.Space_Metric,""not avail"") AS Space_Metric, coalesce( b.Sq_Feet,0) AS Sq_Feet, coalesce( b.Sq_Meters,0) AS Sq_Meters FROM Data_2 AS a LEFT JOIN Space_3 AS b ON a.FB_Category='Catering' AND a.Metric_Level='Outlet Stat' AND a.Data_YrMon=b.Data_YrMon AND a.MARSHA=b.MARSHA AND a.FB_Category=b.FB_Category AND a.FB_Group=b.FB_Group AND a.FB_Type=b.FB_Type ORDER BY a.Data_YrMon, a.MARSHA, a.Year, a.Quarter, a.Month_Name, a.Month;",FB Data from Finance Extract.sas
" CREATE TABLE Data_3a AS select a.Data_YrMon, a.MARSHA, a.FB_Category, a.FB_Group, a.FB_Type, a.Year, a.Quarter, a.Mon, a.Month_Name, a.Month, a.Day_Count, a.Rpt_YrMon, SUM( a.Outlet_Count) AS Outlet_Count, SUM( a.Seats) AS Seats, SUM( a.Sq_Feet) AS Sq_Feet, SUM( a.Sq_Meters) AS Sq_Meters FROM Data_3 AS a GROUP BY a.Data_YrMon, a.MARSHA, a.FB_Category, a.FB_Group, a.FB_Type, a.Year, a.Quarter, a.Mon, a.Month_Name, a.Month, a.Day_Count, a.Rpt_YrMon;",FB Data from Finance Extract.sas
" CREATE TABLE Data_3b AS select a.Data_YrMon, a.MARSHA, a.Curr_Code, a.Fx_Rate, a.Dept_Category, a.Metric_Level, a.Detail_Category, a.FB_Category, a.FB_Group, a.FB_Type, a.Year, a.Quarter, a.Mon, a.Month_Name, a.Month, a.Day_Count, a.Rpt_YrMon, SUM( a.Meal_Pd_Count) AS Meal_Pd_Count, SUM( a.Covers) AS Covers, SUM( a.Rev_LCL) AS Rev_LCL, SUM( a.Rev_CUSD) AS Rev_CUSD, SUM( a.Day_Part_Count) AS Day_Part_Count, SUM( a.BNQT_Group) AS BNQT_Group, SUM( a.BNQT_Local) AS BNQT_Local, SUM( a.BNQT_Other) AS BNQT_Other, SUM( a.BNQT_ALL) AS BNQT_ALL FROM Data_3 AS a WHERE a.Metric_Level IN ( 'Food','Beverage','Other','AV') GROUP BY a.Data_YrMon, a.MARSHA, a.Curr_Code, a.Fx_Rate, a.Dept_Category, a.Metric_Level, a.Detail_Category, a.FB_Category, a.FB_Group, a.FB_Type, a.Year, a.Quarter, a.Mon, a.Month_Name, a.Month, a.Day_Count, a.Rpt_YrMon;",FB Data from Finance Extract.sas
" CREATE TABLE Data_3c AS select a.*, coalesce( b.Outlet_Count,0) AS Outlet_Count, coalesce( b.Seats,0) AS Seats, coalesce( b.Sq_Feet,0) AS Sq_Feet, coalesce( b.Sq_Meters,0) AS Sq_Meters FROM Data_3b AS a LEFT JOIN Data_3a AS b ON a.Data_YrMon=b.Data_YrMon AND a.MARSHA=b.MARSHA AND a.FB_Category=b.FB_Category AND a.FB_Group=b.FB_Group AND a.FB_Type=b.FB_Type ORDER BY a.Data_YrMon, a.MARSHA, a.FB_Category, a.FB_Group, a.FB_Type;",FB Data from Finance Extract.sas
" CREATE TABLE Data_3d AS ( SELECT  * , CASE WHEN  Sq_Feet>0 AND Sq_Meters>0  THEN ""Both"" WHEN   Sq_Feet>0  THEN ""Feet"" WHEN   Sq_Meters>0  THEN ""Meters"" ELSE ""not avail"" END AS Space_Metric FROM Data_3c );",FB Data from Finance Extract.sas
" CREATE TABLE Data_4 AS ( SELECT  *  , ( Seats*Meal_Pd_Count)*Day_Count AS Total_Avail_Seats , ( Sq_Feet*Day_Part_Count)*Day_Count AS Total_Avail_Sq_Footage , ( Sq_Meters*Day_Part_Count)*Day_Count AS Total_Avail_Sq_Meters  FROM Data_3d );",FB Data from Finance Extract.sas
" CREATE TABLE Data_5 AS select a.Data_YrMon, a.MARSHA, a.Dept_Category, a.Metric_Level, a.Detail_Category, a.Rpt_YrMon, a.FB_Category, a.FB_Group, a.FB_Type, a.Outlet_Count, a.Curr_Code, a.Year, a.Quarter, a.Mon, a.Month_Name, a.Month, a.Day_Count, a.Fx_Rate, a.Space_Metric, SUM( a.Seats) AS Seats, SUM( a.Total_Avail_Seats) AS Total_Avail_Seats, SUM( a.Sq_Feet) AS Sq_Feet, SUM( a.Total_Avail_Sq_Footage) AS Total_Avail_Sq_Footage, SUM( a.Sq_Meters) AS Sq_Meters, SUM( a.Total_Avail_Sq_Meters) AS Total_Avail_Sq_Meters, SUM( a.Meal_Pd_Count) AS Meal_Pd_Count, SUM( a.Covers) AS Covers, SUM( a.Rev_LCL) AS Rev_LCL, SUM( a.Rev_CUSD) AS Rev_CUSD, SUM( a.Day_Part_Count) AS Day_Part_Count, SUM( a.BNQT_Group) AS BNQT_Group, SUM( a.BNQT_Local) AS BNQT_Local, SUM( a.BNQT_Other) AS BNQT_Other, SUM( a.BNQT_ALL) AS BNQT_ALL FROM Data_4 AS a GROUP BY a.Data_YrMon, a.MARSHA, a.Dept_Category, a.Metric_Level, a.Detail_Category, a.Rpt_YrMon, a.FB_Category, a.FB_Group, a.FB_Type, a.Outlet_Count, a.Curr_Code, a.Year, a.Quarter, a.Mon, a.Month_Name, a.Month, a.Day_Count, a.Fx_Rate, a.Space_Metric;",FB Data from Finance Extract.sas
 CREATE TABLE FB.FIN_Outlet_Master AS ( SELECT  *  FROM Outlet_Count3 );,FB Data from Finance Extract.sas
 CREATE TABLE FB.FIN_Space_Master AS ( SELECT  *  FROM Space_3 );,FB Data from Finance Extract.sas
 CREATE TABLE FB.FIN_FB_Data_Master AS ( SELECT  *  FROM Data_5 );,FB Data from Finance Extract.sas
 CREATE TABLE Data_6 AS ( SELECT  *  FROM FB.FIN_FB_Data_Master );,FB Data from Finance Extract.sas
" CREATE TABLE Data_7 AS select a.Rpt_YrMon, a.Data_YrMon, a.MARSHA, a.Curr_Code, a.Dept_Category, a.FB_Category, a.FB_Group, a.FB_Type, a.Metric_Level, a.Detail_Category, a.Outlet_Count, a.Space_Metric, a.Year, a.Quarter, a.Mon, a.Month_Name, a.Month, a.Day_Count, a.Fx_Rate, b.FxToCUSD AS Fx_CUSD , SUM( a.Seats) AS Seats, SUM( a.Sq_Feet) AS Sq_Feet, SUM( a.Sq_Meters) AS Sq_Meters, SUM( a.Total_Avail_Seats) AS Total_Avail_Seats, SUM( a.Total_Avail_Sq_Footage) AS Total_Avail_Sq_Footage, SUM( a.Total_Avail_Sq_Meters) AS Total_Avail_Sq_Meters, SUM( a.Meal_Pd_Count) AS Meal_Pd_Count, SUM( a.Covers) AS Covers, SUM( a.Rev_LCL) AS Rev_LCL, SUM( a.Rev_CUSD) AS Rev_CUSD, SUM( a.Day_Part_Count) AS Day_Part_Count, SUM( a.BNQT_Group) AS BNQT_Group, SUM( a.BNQT_Local) AS BNQT_Local, SUM( a.BNQT_Other) AS BNQT_Other, SUM( a.BNQT_ALL) AS BNQT_ALL FROM Data_6 AS a LEFT JOIN TreasFx_Fcst AS b ON a.Rpt_YrMon=b.AsOf_YrMo AND a.Curr_Code=b.Curr_Code AND a.Mon=b.Mon GROUP BY a.Rpt_YrMon, a.Data_YrMon, a.MARSHA, a.Curr_Code, a.Dept_Category, a.FB_Category, a.FB_Group, a.FB_Type, a.Metric_Level, a.Detail_Category, a.Outlet_Count, a.Space_Metric, a.Year, a.Quarter, a.Mon, a.Month_Name, a.Month, a.Day_Count, a.Fx_Rate, b.FxToCUSD;",FB Data from Finance Extract.sas
" CREATE TABLE Data_8 AS ( SELECT  *  , Rev_LCL*Fx_CUSD AS cf_Rev_CUSD  FROM Data_7 );",FB Data from Finance Extract.sas
" CREATE TABLE Data_9b AS ( SELECT  *  , ( Rev_LCL_Food+Rev_LCL_Bvrg ) AS Rev_LCL_FB , ( Rev_USD_Food+Rev_USD_Bvrg ) AS Rev_USD_FB , ( Rev_CUSD_Food+Rev_CUSD_Bvrg ) AS Rev_CUSD_FB  FROM Data_9a );",FB Data from Finance Extract.sas
" CREATE TABLE Data_9 AS select a.Rpt_YrMon, a.Data_YrMon, a.MARSHA, a.FB_Category, a.FB_Group, a.Space_Metric, a.FB_Type, a.Outlet_Count, a.Dept_Category, a.Metric_Level, a.Detail_Category, a.Curr_Code, a.Year, a.Quarter, a.Mon, a.Month_Name, a.Month, a.Day_Count, a.Fx_Rate, a.Fx_CUSD, SUM( a.Seats) AS Seats, SUM( a.Sq_Feet) AS Sq_Feet, SUM( a.Sq_Meters) AS Sq_Meters, SUM( a.Total_Avail_Seats) AS Total_Avail_Seats, SUM( a.Total_Avail_Sq_Footage) AS Total_Avail_Sq_Footage, SUM( a.Total_Avail_Sq_Meters) AS Total_Avail_Sq_Meters, SUM( a.Day_Part_Count) AS Day_Part_Count, SUM( a.BNQT_Group) AS BNQT_Group, SUM( a.BNQT_Local) AS BNQT_Local, SUM( a.BNQT_Other) AS BNQT_Other, SUM( a.BNQT_ALL) AS BNQT_ALL, SUM( a.Meal_Pd_Count) AS Meal_Pd_Count, SUM( a.Covers) AS Covers, SUM( a.Rev_LCL) AS Rev_LCL, SUM( a.cf_Rev_CUSD) AS Rev_USD, SUM( a.Rev_CUSD) AS Rev_CUSD, SUM( a.Rev_LCL_Food) AS Rev_LCL_Food, SUM( a.Rev_LCL_Bvrg) AS Rev_LCL_Bvrg, SUM( a.Rev_LCL_FB) AS Rev_LCL_FB, SUM( a.Rev_LCL_Othr) AS Rev_LCL_Othr, SUM( a.Rev_LCL_Total) AS Rev_LCL_Total, SUM( a.Rev_LCL_AV) AS Rev_LCL_AV, SUM( a.Rev_LCL_Bnqt) AS Rev_LCL_Bnqt, SUM( a.Rev_LCL_IRD) AS Rev_LCL_IRD, SUM( a.Rev_LCL_Outlets) AS Rev_LCL_Outlets, SUM( a.Rev_LCL_ALL) AS Rev_LCL_ALL, SUM( a.Rev_USD_Food) AS Rev_USD_Food, SUM( a.Rev_USD_Bvrg) AS Rev_USD_Bvrg, SUM( a.Rev_USD_FB) AS Rev_USD_FB, SUM( a.Rev_USD_Othr) AS Rev_USD_Othr, SUM( a.Rev_USD_Total) AS Rev_USD_Total, SUM( a.Rev_USD_AV) AS Rev_USD_AV, SUM( a.Rev_USD_Bnqt) AS Rev_USD_Bnqt, SUM( a.Rev_USD_IRD) AS Rev_USD_IRD, SUM( a.Rev_USD_Outlets) AS Rev_USD_Outlets, SUM( a.Rev_USD_ALL) AS Rev_USD_ALL, SUM( a.Rev_CUSD_Food) AS Rev_CUSD_Food, SUM( a.Rev_CUSD_Bvrg) AS Rev_CUSD_Bvrg, SUM( a.Rev_CUSD_FB) AS Rev_CUSD_FB, SUM( a.Rev_CUSD_Othr) AS Rev_CUSD_Othr, SUM( a.Rev_CUSD_Total) AS Rev_CUSD_Total, SUM( a.Rev_CUSD_AV) AS Rev_CUSD_AV, SUM( a.Rev_CUSD_Bnqt) AS Rev_CUSD_Bnqt, SUM( a.Rev_CUSD_IRD) AS Rev_CUSD_IRD, SUM( a.Rev_CUSD_Outlets) AS Rev_CUSD_Outlets, SUM( a.Rev_CUSD_ALL) AS Rev_CUSD_ALL FROM Data_9c AS a GROUP BY a.Rpt_YrMon, a.Data_YrMon, a.MARSHA, a.FB_Category, a.FB_Group, a.Space_Metric, a.FB_Type, a.Outlet_Count, a.Dept_Category, a.Metric_Level, a.Detail_Category, a.Curr_Code, a.Year, a.Quarter, a.Mon, a.Month_Name, a.Month, a.Day_Count, a.Fx_Rate, a.Fx_CUSD;",FB Data from Finance Extract.sas
" CREATE TABLE Data_9_Detail AS ( SELECT  *, Detail_Category AS Data_Level AS None, '2- Detail' AS Rpt_Level  FROM Data_9 );",FB Data from Finance Extract.sas
" CREATE TABLE Data_9_SubTotal AS select a.Rpt_YrMon, a.Data_YrMon, a.MARSHA, a.FB_Category, a.FB_Group, a.Space_Metric, a.FB_Type, a.Outlet_Count, a.Dept_Category, a.Metric_Level, CASE WHEN a.Metric_Level='Food' THEN 'Total Food' when a.Metric_Level='Beverage' THEN 'Total Beverage' when a.Metric_Level IN ( 'AV', 'Other') THEN 'Total Other' ELSE 'not avail' END AS Data_Level, a.Curr_Code, a.Year, a.Quarter, a.Mon, a.Month_Name, a.Month, a.Day_Count, a.Fx_Rate, a.Fx_CUSD, SUM( a.Seats) AS Seats, SUM( a.Sq_Feet) AS Sq_Feet, SUM( a.Sq_Meters) AS Sq_Meters, SUM( a.Total_Avail_Seats) AS Total_Avail_Seats, SUM( a.Total_Avail_Sq_Footage) AS Total_Avail_Sq_Footage, SUM( a.Total_Avail_Sq_Meters) AS Total_Avail_Sq_Meters, SUM( a.Day_Part_Count) AS Day_Part_Count, SUM( a.BNQT_Group) AS BNQT_Group, SUM( a.BNQT_Local) AS BNQT_Local, SUM( a.BNQT_Other) AS BNQT_Other, SUM( a.BNQT_ALL) AS BNQT_ALL, SUM( a.Meal_Pd_Count) AS Meal_Pd_Count, SUM( a.Covers) AS Covers, SUM( a.Rev_LCL) AS Rev_LCL, SUM( a.cf_Rev_CUSD) AS Rev_USD, SUM( a.Rev_CUSD) AS Rev_CUSD, SUM( a.Rev_LCL_Food) AS Rev_LCL_Food, SUM( a.Rev_LCL_Bvrg) AS Rev_LCL_Bvrg, SUM( a.Rev_LCL_FB) AS Rev_LCL_FB, SUM( a.Rev_LCL_Othr) AS Rev_LCL_Othr, SUM( a.Rev_LCL_Total) AS Rev_LCL_Total, SUM( a.Rev_LCL_AV) AS Rev_LCL_AV, SUM( a.Rev_LCL_Bnqt) AS Rev_LCL_Bnqt, SUM( a.Rev_LCL_IRD) AS Rev_LCL_IRD, SUM( a.Rev_LCL_Outlets) AS Rev_LCL_Outlets, SUM( a.Rev_LCL_ALL) AS Rev_LCL_ALL, SUM( a.Rev_USD_Food) AS Rev_USD_Food, SUM( a.Rev_USD_Bvrg) AS Rev_USD_Bvrg, SUM( a.Rev_USD_FB) AS Rev_USD_FB, SUM( a.Rev_USD_Othr) AS Rev_USD_Othr, SUM( a.Rev_USD_Total) AS Rev_USD_Total, SUM( a.Rev_USD_AV) AS Rev_USD_AV, SUM( a.Rev_USD_Bnqt) AS Rev_USD_Bnqt, SUM( a.Rev_USD_IRD) AS Rev_USD_IRD, SUM( a.Rev_USD_Outlets) AS Rev_USD_Outlets, SUM( a.Rev_USD_ALL) AS Rev_USD_ALL, SUM( a.Rev_CUSD_Food) AS Rev_CUSD_Food, SUM( a.Rev_CUSD_Bvrg) AS Rev_CUSD_Bvrg, SUM( a.Rev_CUSD_FB) AS Rev_CUSD_FB, SUM( a.Rev_CUSD_Othr) AS Rev_CUSD_Othr, SUM( a.Rev_CUSD_Total) AS Rev_CUSD_Total, SUM( a.Rev_CUSD_AV) AS Rev_CUSD_AV, SUM( a.Rev_CUSD_Bnqt) AS Rev_CUSD_Bnqt, SUM( a.Rev_CUSD_IRD) AS Rev_CUSD_IRD, SUM( a.Rev_CUSD_Outlets) AS Rev_CUSD_Outlets, SUM( a.Rev_CUSD_ALL) AS Rev_CUSD_ALL FROM Data_9c AS a GROUP BY a.Rpt_YrMon, a.Data_YrMon, a.MARSHA, a.FB_Category, a.FB_Group, a.Space_Metric, a.FB_Type, a.Outlet_Count, a.Dept_Category, a.Metric_Level,calculated Data_Level, a.Curr_Code, a.Year, a.Quarter, a.Mon, a.Month_Name, a.Month, a.Day_Count, a.Fx_Rate, a.Fx_CUSD;",FB Data from Finance Extract.sas
" CREATE TABLE Data_9_Summary AS ( SELECT  *  , '1- Summary' AS Rpt_Level  FROM Data_9_Subtotal );",FB Data from Finance Extract.sas
" CREATE TABLE Data_9_Total AS select a.Rpt_YrMon, a.Data_YrMon, a.MARSHA, a.FB_Category, a.FB_Group, a.Space_Metric, CASE WHEN a.FB_Category='Catering' THEN 'Banquets/ALL' ELSE a.FB_Type END AS FB_Type, a.Outlet_Count, ( RTRIM( a.FB_Category)||""/TOTAL"") AS Dept_Category, 'Total' AS Metric_Level, 'Total Dept' AS Data_Level, a.Curr_Code, a.Year, a.Quarter, a.Mon, a.Month_Name, a.Month, a.Day_Count, a.Fx_Rate, a.Fx_CUSD, SUM( a.Seats) AS Seats, SUM( a.Sq_Feet) AS Sq_Feet, SUM( a.Sq_Meters) AS Sq_Meters, SUM( a.Total_Avail_Seats) AS Total_Avail_Seats, SUM( a.Total_Avail_Sq_Footage) AS Total_Avail_Sq_Footage, SUM( a.Total_Avail_Sq_Meters) AS Total_Avail_Sq_Meters, SUM( a.Day_Part_Count) AS Day_Part_Count, SUM( a.BNQT_Group) AS BNQT_Group, SUM( a.BNQT_Local) AS BNQT_Local, SUM( a.BNQT_Other) AS BNQT_Other, SUM( a.BNQT_ALL) AS BNQT_ALL, SUM( a.Meal_Pd_Count) AS Meal_Pd_Count, SUM( a.Covers) AS Covers, SUM( a.Rev_LCL) AS Rev_LCL, SUM( a.cf_Rev_CUSD) AS Rev_USD, SUM( a.Rev_CUSD) AS Rev_CUSD, SUM( a.Rev_LCL_Food) AS Rev_LCL_Food, SUM( a.Rev_LCL_Bvrg) AS Rev_LCL_Bvrg, SUM( a.Rev_LCL_FB) AS Rev_LCL_FB, SUM( a.Rev_LCL_Othr) AS Rev_LCL_Othr, SUM( a.Rev_LCL_Total) AS Rev_LCL_Total, SUM( a.Rev_LCL_AV) AS Rev_LCL_AV, SUM( a.Rev_LCL_Bnqt) AS Rev_LCL_Bnqt, SUM( a.Rev_LCL_IRD) AS Rev_LCL_IRD, SUM( a.Rev_LCL_Outlets) AS Rev_LCL_Outlets, SUM( a.Rev_LCL_ALL) AS Rev_LCL_ALL, SUM( a.Rev_USD_Food) AS Rev_USD_Food, SUM( a.Rev_USD_Bvrg) AS Rev_USD_Bvrg, SUM( a.Rev_USD_FB) AS Rev_USD_FB, SUM( a.Rev_USD_Othr) AS Rev_USD_Othr, SUM( a.Rev_USD_Total) AS Rev_USD_Total, SUM( a.Rev_USD_AV) AS Rev_USD_AV, SUM( a.Rev_USD_Bnqt) AS Rev_USD_Bnqt, SUM( a.Rev_USD_IRD) AS Rev_USD_IRD, SUM( a.Rev_USD_Outlets) AS Rev_USD_Outlets, SUM( a.Rev_USD_ALL) AS Rev_USD_ALL, SUM( a.Rev_CUSD_Food) AS Rev_CUSD_Food, SUM( a.Rev_CUSD_Bvrg) AS Rev_CUSD_Bvrg, SUM( a.Rev_CUSD_FB) AS Rev_CUSD_FB, SUM( a.Rev_CUSD_Othr) AS Rev_CUSD_Othr, SUM( a.Rev_CUSD_Total) AS Rev_CUSD_Total, SUM( a.Rev_CUSD_AV) AS Rev_CUSD_AV, SUM( a.Rev_CUSD_Bnqt) AS Rev_CUSD_Bnqt, SUM( a.Rev_CUSD_IRD) AS Rev_CUSD_IRD, SUM( a.Rev_CUSD_Outlets) AS Rev_CUSD_Outlets, SUM( a.Rev_CUSD_ALL) AS Rev_CUSD_ALL FROM Data_9c AS a GROUP BY a.Rpt_YrMon, a.Data_YrMon, a.MARSHA, a.FB_Category, a.FB_Group, a.Space_Metric, calculated FB_Type, a.Outlet_Count, calculated Dept_Category, calculated Metric_Level, calculated Data_Level, a.Curr_Code, a.Year, a.Quarter, a.Mon, a.Month_Name, a.Month, a.Day_Count, a.Fx_Rate, a.Fx_CUSD;",FB Data from Finance Extract.sas
" CREATE TABLE Data_9_Other AS ( SELECT  *  , '3- Other' AS Rpt_Level  FROM Data_9_Total );",FB Data from Finance Extract.sas
 CREATE TABLE Data_9_ALL AS ( SELECT  *  FROM Data_9_Detail UNION ALL SELECT  *  FROM Data_9_Summary UNION ALL SELECT  *  FROM Data_9_Other);,FB Data from Finance Extract.sas
"SELECT * FROM Data_9_ALL ORDER BY Rpt_YrMon ,Data_YrMon ,MARSHA ,Rpt_Level ,FB_Category ,FB_Group ,FB_Type;",FB Data from Finance Extract.sas
" CREATE TABLE Data_9_Final AS select a.Rpt_YrMon, a.Data_YrMon, a.MARSHA, a.FB_Category, a.FB_Group, a.Space_Metric, a.FB_Type, a.Outlet_Count, a.Dept_Category, a.Metric_Level, a.Rpt_Level, a.Data_Level, ( ""OU""||p.PeopleSoft_ID||"" - ""||RTRIM( p.HotName)||""- ""||a.Curr_Code) AS Fin_Hotel_Name, a.Curr_Code, a.Year, a.Quarter, a.Month_Name, a.Month, a.Day_Count, a.Fx_Rate, a.Fx_CUSD, p.OPENFLAG, p.MISW_FLAG, p.Division, p.Division_Category, p.Region_Category, p.Region, p.Region_Name, p.Brand_Category, p.Brand_Type, p.BRND, p.BRND_NAME, p.Hotel_Name, p.MF, p.ACOMP, p.LY_COMP, p.HCAP, p.Market_Name, p.HClass, p.HCLASS2, p.Opendate, p.Redemption_Category, SUM( a.Seats) AS Seats, SUM( a.Sq_Feet) AS Sq_Feet, SUM( a.Sq_Meters) AS Sq_Meters, SUM( a.Total_Avail_Seats) AS Total_Avail_Seats, SUM( a.Total_Avail_Sq_Footage) AS Total_Avail_Sq_Footage, SUM( a.Total_Avail_Sq_Meters) AS Total_Avail_Sq_Meters, SUM( a.Day_Part_Count) AS Day_Part_Count, SUM( a.BNQT_Group) AS BNQT_Group, SUM( a.BNQT_Local) AS BNQT_Local, SUM( a.BNQT_Other) AS BNQT_Other, SUM( a.BNQT_ALL) AS BNQT_ALL, SUM( a.Meal_Pd_Count) AS Meal_Pd_Count, SUM( a.Covers) AS Covers, SUM( a.Rev_LCL) AS Rev_LCL, SUM( a.Rev_USD) AS Rev_USD, SUM( a.Rev_CUSD) AS Rev_CUSD, SUM( a.Rev_LCL_Food) AS Rev_LCL_Food, SUM( a.Rev_LCL_Bvrg) AS Rev_LCL_Bvrg, SUM( a.Rev_LCL_FB) AS Rev_LCL_FB, SUM( a.Rev_LCL_Othr) AS Rev_LCL_Othr, SUM( a.Rev_LCL_Total) AS Rev_LCL_Total, SUM( a.Rev_LCL_AV) AS Rev_LCL_AV, SUM( a.Rev_LCL_Bnqt) AS Rev_LCL_Bnqt, SUM( a.Rev_LCL_IRD) AS Rev_LCL_IRD, SUM( a.Rev_LCL_Outlets) AS Rev_LCL_Outlets, SUM( a.Rev_LCL_ALL) AS Rev_LCL_ALL, SUM( a.Rev_USD_Food) AS Rev_USD_Food, SUM( a.Rev_USD_Bvrg) AS Rev_USD_Bvrg, SUM( a.Rev_USD_FB) AS Rev_USD_FB, SUM( a.Rev_USD_Othr) AS Rev_USD_Othr, SUM( a.Rev_USD_Total) AS Rev_USD_Total, SUM( a.Rev_USD_AV) AS Rev_USD_AV, SUM( a.Rev_USD_Bnqt) AS Rev_USD_Bnqt, SUM( a.Rev_USD_IRD) AS Rev_USD_IRD, SUM( a.Rev_USD_Outlets) AS Rev_USD_Outlets, SUM( a.Rev_USD_ALL) AS Rev_USD_ALL, SUM( a.Rev_CUSD_Food) AS Rev_CUSD_Food, SUM( a.Rev_CUSD_Bvrg) AS Rev_CUSD_Bvrg, SUM( a.Rev_CUSD_FB) AS Rev_CUSD_FB, SUM( a.Rev_CUSD_Othr) AS Rev_CUSD_Othr, SUM( a.Rev_CUSD_Total) AS Rev_CUSD_Total, SUM( a.Rev_CUSD_AV) AS Rev_CUSD_AV, SUM( a.Rev_CUSD_Bnqt) AS Rev_CUSD_Bnqt, SUM( a.Rev_CUSD_IRD) AS Rev_CUSD_IRD, SUM( a.Rev_CUSD_Outlets) AS Rev_CUSD_Outlets, SUM( a.Rev_CUSD_ALL) AS Rev_CUSD_ALL FROM Data_9_ALL AS a LEFT JOIN work.PLU_TC AS p ON a.MARSHA=p.MARSHA GROUP BY a.Rpt_YrMon, a.Data_YrMon, a.MARSHA, a.FB_Category, a.FB_Group, a.Space_Metric, a.FB_Type, a.Outlet_Count, a.Dept_Category, a.Metric_Level, a.Rpt_Level, a.Data_Level, calculated Fin_Hotel_Name, a.Curr_Code, a.Year, a.Quarter, a.Month_Name, a.Month, a.Day_Count, a.Fx_Rate, a.Fx_CUSD, p.OPENFLAG, p.MISW_FLAG, p.Division, p.Division_Category, p.Region_Category, p.Region, p.Region_Name, p.Brand_Category, p.Brand_Type, p.BRND, p.BRND_NAME, p.Hotel_Name, p.MF, p.ACOMP, p.LY_COMP, p.HCAP, p.Market_Name, p.HClass, p.HCLASS2, p.Opendate, p.Redemption_Category;",FB Data from Finance Extract.sas
 CREATE TABLE Test_detail AS ( SELECT  *  FROM Data_9_detail  whereMARSHA='NYCEX' AND Data_YrMon=201901);,FB Data from Finance Extract.sas
 CREATE TABLE Test_summary AS ( SELECT  *  FROM Data_9_summary  whereMARSHA='NYCEX' AND Data_YrMon=201901);,FB Data from Finance Extract.sas
 CREATE TABLE Test_other AS ( SELECT  *  FROM Data_9_other  whereMARSHA='NYCEX' AND Data_YrMon=201901);,FB Data from Finance Extract.sas
 CREATE TABLE FB.Fin_FB_Data_ALL AS ( SELECT  *  FROM Data_9_Final );,FB Data from Finance Extract.sas
 CREATE TABLE FB.Fin_FB_Data_Summary AS ( SELECT  *  FROM FB.Fin_FB_Data_ALL  WHERE Rpt_Level='1- Summary' AND data_yrmon >= 201801);,FB Data from Finance Extract.sas
 CREATE TABLE FB.Fin_FB_Data_Other AS ( SELECT  *  FROM FB.Fin_FB_Data_ALL  WHERE Rpt_Level='3- Other' AND data_yrmon >= 201801);,FB Data from Finance Extract.sas
"CREATE TABLE ""G:\RM EAnlys\RM Analytics Team\Projects\Food AND Beverage\Output Files\FB Data_as of &YrMon..xlsx"" AS ( SELECT * FROM FB.Fin_FB_Data_Summary) ;",FB Data from Finance Extract.sas
"CREATE TABLE ""G:\RM EAnlys\RM Analytics Team\Projects\Food AND Beverage\Output Files\FB Data_as of &YrMon..xlsx"" AS ( SELECT * FROM FB.Fin_FB_Data_Other) ;",FB Data from Finance Extract.sas
 CREATE TABLE FB.FB_Data_Dinesh_ao&YrMon. AS ( SELECT  *  FROM FB.Fin_FB_Data_ALL  WHERE Rpt_Level='3- Other' AND data_yrmon >= 201801);,FB Data from Finance Extract.sas
"CREATE TABLE ""G:\RM EAnlys\Shared_Data\group pace\Catering Pace\Finance Catering AND AV Data_&YrMon..xlsx"" AS ( SELECT * FROM FB.FB_Data_Dinesh_ao&YrMon.) ;",FB Data from Finance Extract.sas
 CREATE TABLE FB.Fin_FB_Data_Detail AS ( SELECT  *  FROM FB.Fin_FB_Data_ALL  WHERE Rpt_Level='2- Detail');,FB Data from Finance Extract.sas
 CREATE TABLE FB_Data_Detail_all AS ( SELECT  *  FROM FB.Fin_FB_Data_Detail  whereOPENFLAG='Y' AND MF='M');,FB Data from Finance Extract.sas
" CREATE TABLE FB_Data_Detail AS select a.* FROM FB_Data_Detail_all AS a INNER JOIN PLU_Sotb AS b ON a.MARSHA=b.MARSHA_new AND b.ACOMP_Sotb=""Y"" ORDER BY a.MARSHA;",FB Data from Finance Extract.sas
 CREATE TABLE FB_Data_Detail_2017 AS ( SELECT  *  FROM FB_Data_Detail  WHERE data_yrmon <= 201712);,FB Data from Finance Extract.sas
 CREATE TABLE FB_Data_Detail_2018 AS ( SELECT  *  FROM FB_Data_Detail  wheredata_yrmon >= 201801 AND data_yrmon <= 201812);,FB Data from Finance Extract.sas
 CREATE TABLE FB_Data_Detail_2019ytd AS ( SELECT  *  FROM FB_Data_Detail  WHERE data_yrmon >= 201901);,FB Data from Finance Extract.sas
"CREATE TABLE ""G:\RM EAnlys\RM Analytics Team\Projects\Food AND Beverage\Output Files\FB Data_Detail_as of &YrMon..xlsx"" AS ( SELECT * FROM FB_Data_Detail_2017) ;",FB Data from Finance Extract.sas
"CREATE TABLE ""G:\RM EAnlys\RM Analytics Team\Projects\Food AND Beverage\Output Files\FB Data_Detail_as of &YrMon..xlsx"" AS ( SELECT * FROM FB_Data_Detail_2018) ;",FB Data from Finance Extract.sas
"CREATE TABLE ""G:\RM EAnlys\RM Analytics Team\Projects\Food AND Beverage\Output Files\FB Data_Detail_as of &YrMon..xlsx"" AS ( SELECT * FROM FB_Data_Detail_2019ytd) ;",FB Data from Finance Extract.sas
" CREATE TABLE hotel_data AS select a.MARSHA, b.MARSHA_NEW , CASE WHEN b.BRND IN ( 'FS', 'JW') THEN 'Marriott Hotels' ELSE b.BRND_NAME END AS BRND_NAME , e.BRAND_VERSION , e.Comp_Status_per_YE17_Tree_Node AS FRAN_COMP , COUNT( a.YRMNTH) AS PROP_COUNT , SUM( MARAVAIL) AS MARAVAIL, SUM( MARSOLD) AS MARSOLD, SUM( MARREV) AS MARREV , SUM( MKTAVAIL) AS MKTAVAIL, SUM( MKTSOLD) AS MKTSOLD, SUM( MKTREV) AS MKTREV , SUM( MARSOLD) / SUM( MARAVAIL) AS OCCUPANCY , SUM( MARREV) / SUM( MARSOLD) AS ADR , SUM( MARREV) /SUM( MARAVAIL) AS REVPAR , SUM( MARREV) / SUM( MARAVAIL) / ( SUM( MKTREV) / SUM( MKTAVAIL)) * 100 AS REVPAR_INDEX FROM CMP.STR_MONTHLY_DATA a LEFT JOIN TGT_BUS.PROPERTY_MASTER_MISW_HIST AS b ON a.MARSHA = b.MARSHA AND a.ASOF_YRMO = b.ASOF_YRMO LEFT JOIN FDD_Comp AS e ON b.MARSHA_NEW = e.MARSHA WHERE a.TIMEF ='MONTH' AND a.DATA_CATEGORY = 'Rooms' AND a.CURRENCY_TYPE = 'Constant USD' AND a.ASOF_YRMO = &YRMNTH. AND a.YRMNTH > &YRMNTH. - 100 AND b.COUNTRY IN ( 'United States', 'Canada') AND a.MARAVAIL * a.MARREV * a.MKTAVAIL * a.MKTREV > 0 AND e.Comp_Status_per_YE17_Tree_Node <> """" AND e.Brand_Acro not IN ( 'IND-SW', 'IND') GROUP BY a.MARSHA, b.MARSHA_NEW, calculated BRND_NAME, e.BRAND_VERSION, e.Comp_Status_per_YE17_Tree_Node;",FDD incl Hotel Detail Converted to AW.sas
CREATE TABLE hotel_detail AS ( SELECT  *  FROM hotel_data );,FDD incl Hotel Detail Converted to AW.sas
"ALTER TABLE hotel_detail DROP COLUMN MARAVAIL ,  MARSOLD ,  MARREV ,  MKTAVAIL ,  MKTSOLD ,  MKTREV ;",FDD incl Hotel Detail Converted to AW.sas
"CREATE TABLE ""&OUTPUT.\FDD Backup &Run_Date..xlsb"" AS ( SELECT * FROM hotel_detail) ;",FDD incl Hotel Detail Converted to AW.sas
" CREATE TABLE incomplete_data AS select e.MARSHA AS MARSHA_NEW, ""Incomplete STAR Data"" AS REASON FROM FDD_Comp AS e LEFT JOIN hotel_data AS h ON e.MARSHA = h.MARSHA_NEW WHERE h.MARSHA_NEW = """" AND e.MARSHA <> """" AND e.MARSHA <> ""."" ORDER BY e.MARSHA;",FDD incl Hotel Detail Converted to AW.sas
"CREATE TABLE ""&OUTPUT.\FDD Backup &Run_Date..xlsb"" AS ( SELECT * FROM incomplete_data) ;",FDD incl Hotel Detail Converted to AW.sas
" CREATE TABLE brand_data AS select a.BRND_NAME, a.FRAN_COMP , COUNT( a.MARSHA) AS PROP_COUNT , SUM( MARAVAIL) AS MARAVAIL, SUM( MARSOLD) AS MARSOLD, SUM( MARREV) AS MARREV , SUM( MKTAVAIL) AS MKTAVAIL, SUM( MKTSOLD) AS MKTSOLD, SUM( MKTREV) AS MKTREV , max( OCCUPANCY) AS MAX_OCC, min( OCCUPANCY) AS MIN_OCC , max( ADR) AS MAX_ADR, min( ADR) AS MIN_ADR , max( REVPAR) AS MAX_REVPAR, min( REVPAR) AS MIN_REVPAR , max( REVPAR_INDEX) AS MAX_REVPAR_INDEX, min( REVPAR_INDEX) AS MIN_REVPAR_INDEX FROM hotel_data a WHERE a.FRAN_COMP = ""LY_COMP"" GROUP BY a.BRND_NAME, a.FRAN_COMP;",FDD incl Hotel Detail Converted to AW.sas
" CREATE TABLE avg_calcs AS select a.BRND_NAME, a.PROP_COUNT , MAX_OCC, MIN_OCC, MAX_ADR, MIN_ADR, MAX_REVPAR, MIN_REVPAR, MAX_REVPAR_INDEX, MIN_REVPAR_INDEX , a.MARSOLD / a.MARAVAIL AS AVG_OCC , a.MARREV / a.MARSOLD AS AVG_ADR , a.MARREV / a.MARAVAIL AS AVG_REVPAR , a.MARREV / a.MARAVAIL / ( a.MKTREV / MKTAVAIL) * 100 AS AVG_REVPAR_INDEX FROM brand_data a;",FDD incl Hotel Detail Converted to AW.sas
" CREATE TABLE count_higher AS select a.MARSHA_NEW, b.BRND_NAME , CASE WHEN a.OCCUPANCY > AVG_OCC THEN 1 END AS ABOVE_AVG_OCC , CASE WHEN a.ADR > AVG_ADR THEN 1 END AS ABOVE_AVG_ADR , CASE WHEN a.REVPAR > AVG_REVPAR THEN 1 END AS ABOVE_AVG_REVPAR , CASE WHEN a.REVPAR_INDEX > AVG_REVPAR_INDEX THEN 1 END AS ABOVE_AVG_REVPAR_INDEX FROM hotel_data a LEFT JOIN avg_calcs AS b ON a.BRND_NAME = b.BRND_NAME ORDER BY a.MARSHA_NEW;",FDD incl Hotel Detail Converted to AW.sas
" CREATE TABLE all_brand_data AS select a.BRND_NAME, b.PROP_COUNT , b.MAX_OCC, b.MIN_OCC, b.MAX_ADR, b.MIN_ADR , b.MAX_REVPAR, b.MIN_REVPAR, b.MAX_REVPAR_INDEX, b.MIN_REVPAR_INDEX , b.AVG_OCC, b.AVG_ADR, b.AVG_REVPAR, b.AVG_REVPAR_INDEX , SUM( a.ABOVE_AVG_OCC) AS ABOVE_AVG_OCC , SUM( a.ABOVE_AVG_ADR) AS ABOVE_AVG_ADR , SUM( a.ABOVE_AVG_REVPAR) AS ABOVE_AVG_REVPAR , SUM( a.ABOVE_AVG_REVPAR_INDEX) AS ABOVE_AVG_REVPAR_INDEX , SUM( a.ABOVE_AVG_OCC) / b.PROP_COUNT AS PCT_ABOVE_AVG_OCC , SUM( a.ABOVE_AVG_ADR) / b.PROP_COUNT AS PCT_ABOVE_AVG_ADR , SUM( a.ABOVE_AVG_REVPAR) / b.PROP_COUNT AS PCT_ABOVE_AVG_REVPAR , SUM( a.ABOVE_AVG_REVPAR_INDEX) / b.PROP_COUNT AS PCT_ABOVE_AVG_REVPAR_INDEX , c.median_Occ, c.median_ADR, c.median_REVPAR, c.median_RPI FROM count_higher a LEFT JOIN avg_calcs AS b ON a.BRND_NAME = b.BRND_NAME LEFT JOIN Medians AS c ON a.BRND_NAME = c.BRND_NAME GROUP BY a.BRND_NAME, b.PROP_COUNT , b.MAX_OCC, b.MIN_OCC, b.MAX_ADR, b.MIN_ADR , b.MAX_REVPAR, b.MIN_REVPAR, b.MAX_REVPAR_INDEX, b.MIN_REVPAR_INDEX , b.AVG_OCC, b.AVG_ADR, b.AVG_REVPAR, b.AVG_REVPAR_INDEX , c.median_Occ, c.median_ADR, c.median_REVPAR, c.median_RPI;",FDD incl Hotel Detail Converted to AW.sas
"CREATE TABLE ""&OUTPUT.\FDD Backup &Run_Date..xlsb"" AS ( SELECT * FROM all_brand_data) ;",FDD incl Hotel Detail Converted to AW.sas
"CREATE TABLE gen_hotel_detail AS ( SELECT  *  FROM hotel_data  WHERE BRND_NAME = ""SpringHill Suites"" AND BRAND_VERSION IN ( ""Gen 4' '0"", ""Gen 4' '0+"", ""Gen 4' '5"" ) );",FDD incl Hotel Detail Converted to AW.sas
"ALTER TABLE gen_hotel_detail DROP COLUMN MARAVAIL ,  MARSOLD ,  MARREV ,  MKTAVAIL ,  MKTSOLD ,  MKTREV ;",FDD incl Hotel Detail Converted to AW.sas
"CREATE TABLE ""&OUTPUT.\FDD Backup &Run_Date..xlsb"" AS ( SELECT * FROM gen_hotel_detail) ;",FDD incl Hotel Detail Converted to AW.sas
" CREATE TABLE gen_data AS select a.BRND_NAME, a.FRAN_COMP, CASE WHEN a.BRAND_VERSION <> """" THEN ""Y"" ELSE ""N"" END AS GENERATION , COUNT( a.MARSHA) AS PROP_COUNT , SUM( MARAVAIL) AS MARAVAIL, SUM( MARSOLD) AS MARSOLD, SUM( MARREV) AS MARREV , SUM( MKTAVAIL) AS MKTAVAIL, SUM( MKTSOLD) AS MKTSOLD, SUM( MKTREV) AS MKTREV , max( OCCUPANCY) AS MAX_OCC, min( OCCUPANCY) AS MIN_OCC , max( ADR) AS MAX_ADR, min( ADR) AS MIN_ADR , max( REVPAR) AS MAX_REVPAR, min( REVPAR) AS MIN_REVPAR , max( REVPAR_INDEX) AS MAX_REVPAR_INDEX, min( REVPAR_INDEX) AS MIN_REVPAR_INDEX FROM hotel_data a WHERE a.BRND_NAME = ""SpringHill Suites"" AND a.BRAND_VERSION IN ( ""Gen 4.0"", ""Gen 4.0+"", ""Gen 4.5"") GROUP BY a.BRND_NAME, a.FRAN_COMP, calculated GENERATION;",FDD incl Hotel Detail Converted to AW.sas
" CREATE TABLE gen_avg_calcs AS select a.BRND_NAME, a.GENERATION, a.PROP_COUNT , MAX_OCC, MIN_OCC, MAX_ADR, MIN_ADR, MAX_REVPAR, MIN_REVPAR, MAX_REVPAR_INDEX, MIN_REVPAR_INDEX , a.MARSOLD / a.MARAVAIL AS AVG_OCC , a.MARREV / a.MARSOLD AS AVG_ADR , a.MARREV / a.MARAVAIL AS AVG_REVPAR , a.MARREV / a.MARAVAIL / ( a.MKTREV / MKTAVAIL) * 100 AS AVG_REVPAR_INDEX FROM gen_data a;",FDD incl Hotel Detail Converted to AW.sas
" CREATE TABLE gen_count_higher AS select a.MARSHA_NEW, b.BRND_NAME , CASE WHEN a.OCCUPANCY > AVG_OCC THEN 1 END AS ABOVE_AVG_OCC , CASE WHEN a.ADR > AVG_ADR THEN 1 END AS ABOVE_AVG_ADR , CASE WHEN a.REVPAR > AVG_REVPAR THEN 1 END AS ABOVE_AVG_REVPAR , CASE WHEN a.REVPAR_INDEX > AVG_REVPAR_INDEX THEN 1 END AS ABOVE_AVG_REVPAR_INDEX FROM hotel_data a LEFT JOIN gen_avg_calcs AS b ON a.BRND_NAME = b.BRND_NAME WHERE a.BRND_NAME = ""SpringHill Suites"" AND a.BRAND_VERSION IN ( ""Gen 4.0"", ""Gen 4.0+"", ""Gen 4.5"") ORDER BY a.MARSHA_NEW;",FDD incl Hotel Detail Converted to AW.sas
" CREATE TABLE all_gen_data AS select a.BRND_NAME, b.GENERATION, b.PROP_COUNT , b.MAX_OCC, b.MIN_OCC, b.MAX_ADR, b.MIN_ADR , b.MAX_REVPAR, b.MIN_REVPAR, b.MAX_REVPAR_INDEX, b.MIN_REVPAR_INDEX , b.AVG_OCC, b.AVG_ADR, b.AVG_REVPAR, b.AVG_REVPAR_INDEX , SUM( a.ABOVE_AVG_OCC) AS ABOVE_AVG_OCC , SUM( a.ABOVE_AVG_ADR) AS ABOVE_AVG_ADR , SUM( a.ABOVE_AVG_REVPAR) AS ABOVE_AVG_REVPAR , SUM( a.ABOVE_AVG_REVPAR_INDEX) AS ABOVE_AVG_REVPAR_INDEX , SUM( a.ABOVE_AVG_OCC) / b.PROP_COUNT AS PCT_ABOVE_AVG_OCC , SUM( a.ABOVE_AVG_ADR) / b.PROP_COUNT AS PCT_ABOVE_AVG_ADR , SUM( a.ABOVE_AVG_REVPAR) / b.PROP_COUNT AS PCT_ABOVE_AVG_REVPAR , SUM( a.ABOVE_AVG_REVPAR_INDEX) / b.PROP_COUNT AS PCT_ABOVE_AVG_REVPAR_INDEX , c.median_Occ, c.median_ADR, c.median_REVPAR, c.median_RPI FROM gen_count_higher a LEFT JOIN gen_avg_calcs AS b ON a.BRND_NAME = b.BRND_NAME LEFT JOIN gen_medians AS c ON a.BRND_NAME = c.BRND_NAME GROUP BY a.BRND_NAME, b.GENERATION, b.PROP_COUNT , b.MAX_OCC, b.MIN_OCC, b.MAX_ADR, b.MIN_ADR , b.MAX_REVPAR, b.MIN_REVPAR, b.MAX_REVPAR_INDEX, b.MIN_REVPAR_INDEX , b.AVG_OCC, b.AVG_ADR, b.AVG_REVPAR, b.AVG_REVPAR_INDEX , c.median_Occ, c.median_ADR, c.median_REVPAR, c.median_RPI;",FDD incl Hotel Detail Converted to AW.sas
"CREATE TABLE ""&OUTPUT.\FDD Backup &Run_Date..xlsb"" AS ( SELECT * FROM all_gen_data) ;",FDD incl Hotel Detail Converted to AW.sas
" CREATE TABLE one_plus_2_hotel_data AS select a.MARSHA, b.MARSHA_NEW, b.BRND_NAME , ""Y"" AS FRAN_COMP , COUNT( a.YRMNTH) AS PROP_COUNT , SUM( MARAVAIL) AS MARAVAIL, SUM( MARSOLD) AS MARSOLD, SUM( MARREV) AS MARREV , SUM( MKTAVAIL) AS MKTAVAIL, SUM( MKTSOLD) AS MKTSOLD, SUM( MKTREV) AS MKTREV , SUM( MARSOLD) / SUM( MARAVAIL) AS OCCUPANCY , SUM( MARREV) / SUM( MARSOLD) AS ADR , SUM( MARREV) /SUM( MARAVAIL) AS REVPAR , SUM( MARREV) / SUM( MARAVAIL) / ( SUM( MKTREV) / SUM( MKTAVAIL)) * 100 AS REVPAR_INDEX FROM CMP.STR_MONTHLY_DATA a LEFT JOIN TGT_BUS.PROPERTY_MASTER_MISW_HIST AS b ON a.MARSHA = b.MARSHA AND a.ASOF_YRMO = b.ASOF_YRMO LEFT JOIN FDD_Comp AS e ON b.MARSHA_NEW = e.MARSHA LEFT JOIN Open_One_Year_FDD_Comp AS g ON b.MARSHA_NEW = g.MARSHA WHERE a.TIMEF ='MONTH' AND a.DATA_CATEGORY = 'Rooms' AND a.CURRENCY_TYPE = 'Constant USD' AND a.ASOF_YRMO = &YRMNTH. AND a.YRMNTH > &YRMNTH. - 100 AND b.COUNTRY IN ( 'United States', 'Canada') AND a.MARAVAIL * a.MARREV * a.MKTAVAIL * a.MKTREV > 0 AND ( g.MARSHA <> """" OR e.Comp_Status_per_YE17_Tree_Node <> """") AND e.Brand_Acro not IN ( 'IND-SW', 'IND') GROUP BY a.MARSHA, b.MARSHA_NEW, b.BRND_NAME;",FDD incl Hotel Detail Converted to AW.sas
CREATE TABLE one_plus_2_detail AS ( SELECT  *  FROM one_plus_2_hotel_data  WHERE PROP_COUNT = 12);,FDD incl Hotel Detail Converted to AW.sas
"ALTER TABLE one_plus_2_detail DROP COLUMN MARAVAIL ,  MARSOLD ,  MARREV ,  MKTAVAIL ,  MKTSOLD ,  MKTREV ,  PROP_COUNT ;",FDD incl Hotel Detail Converted to AW.sas
"CREATE TABLE ""&OUTPUT.\FDD Backup &Run_Date..xlsb"" AS ( SELECT * FROM one_plus_2_detail) ;",FDD incl Hotel Detail Converted to AW.sas
" CREATE TABLE one_plus_2_data AS select a.BRND_NAME , COUNT( a.MARSHA) AS PROP_COUNT , SUM( MARAVAIL) AS MARAVAIL, SUM( MARSOLD) AS MARSOLD, SUM( MARREV) AS MARREV , SUM( MKTAVAIL) AS MKTAVAIL, SUM( MKTSOLD) AS MKTSOLD, SUM( MKTREV) AS MKTREV , max( OCCUPANCY) AS MAX_OCC, min( OCCUPANCY) AS MIN_OCC , max( ADR) AS MAX_ADR, min( ADR) AS MIN_ADR , max( REVPAR) AS MAX_REVPAR, min( REVPAR) AS MIN_REVPAR , max( REVPAR_INDEX) AS MAX_REVPAR_INDEX, min( REVPAR_INDEX) AS MIN_REVPAR_INDEX FROM one_plus_2_hotel_data a WHERE a.PROP_COUNT = 12 GROUP BY a.BRND_NAME;",FDD incl Hotel Detail Converted to AW.sas
" CREATE TABLE one_plus_2_avg_calcs AS select a.BRND_NAME, a.PROP_COUNT , MAX_OCC, MIN_OCC, MAX_ADR, MIN_ADR, MAX_REVPAR, MIN_REVPAR, MAX_REVPAR_INDEX, MIN_REVPAR_INDEX , a.MARSOLD / a.MARAVAIL AS AVG_OCC , a.MARREV / a.MARSOLD AS AVG_ADR , a.MARREV / a.MARAVAIL AS AVG_REVPAR , a.MARREV / a.MARAVAIL / ( a.MKTREV / MKTAVAIL) * 100 AS AVG_REVPAR_INDEX FROM one_plus_2_data a;",FDD incl Hotel Detail Converted to AW.sas
" CREATE TABLE one_plus_2_count_higher AS select a.MARSHA_NEW, b.BRND_NAME , CASE WHEN a.OCCUPANCY > AVG_OCC THEN 1 END AS ABOVE_AVG_OCC , CASE WHEN a.ADR > AVG_ADR THEN 1 END AS ABOVE_AVG_ADR , CASE WHEN a.REVPAR > AVG_REVPAR THEN 1 END AS ABOVE_AVG_REVPAR , CASE WHEN a.REVPAR_INDEX > AVG_REVPAR_INDEX THEN 1 END AS ABOVE_AVG_REVPAR_INDEX FROM one_plus_2_hotel_data a LEFT JOIN one_plus_2_avg_calcs AS b ON a.BRND_NAME = b.BRND_NAME WHERE a.PROP_COUNT = 12 ORDER BY a.MARSHA_NEW;",FDD incl Hotel Detail Converted to AW.sas
" CREATE TABLE all_one_plus_2_data AS select a.BRND_NAME, b.PROP_COUNT , b.MAX_OCC, b.MIN_OCC, b.MAX_ADR, b.MIN_ADR , b.MAX_REVPAR, b.MIN_REVPAR, b.MAX_REVPAR_INDEX, b.MIN_REVPAR_INDEX , b.AVG_OCC, b.AVG_ADR, b.AVG_REVPAR, b.AVG_REVPAR_INDEX , SUM( a.ABOVE_AVG_OCC) AS ABOVE_AVG_OCC , SUM( a.ABOVE_AVG_ADR) AS ABOVE_AVG_ADR , SUM( a.ABOVE_AVG_REVPAR) AS ABOVE_AVG_REVPAR , SUM( a.ABOVE_AVG_REVPAR_INDEX) AS ABOVE_AVG_REVPAR_INDEX , SUM( a.ABOVE_AVG_OCC) / b.PROP_COUNT AS PCT_ABOVE_AVG_OCC , SUM( a.ABOVE_AVG_ADR) / b.PROP_COUNT AS PCT_ABOVE_AVG_ADR , SUM( a.ABOVE_AVG_REVPAR) / b.PROP_COUNT AS PCT_ABOVE_AVG_REVPAR , SUM( a.ABOVE_AVG_REVPAR_INDEX) / b.PROP_COUNT AS PCT_ABOVE_AVG_REVPAR_INDEX FROM one_plus_2_count_higher a LEFT JOIN one_plus_2_avg_calcs AS b ON a.BRND_NAME = b.BRND_NAME GROUP BY a.BRND_NAME, b.PROP_COUNT , b.MAX_OCC, b.MIN_OCC, b.MAX_ADR, b.MIN_ADR , b.MAX_REVPAR, b.MIN_REVPAR, b.MAX_REVPAR_INDEX, b.MIN_REVPAR_INDEX , b.AVG_OCC, b.AVG_ADR, b.AVG_REVPAR, b.AVG_REVPAR_INDEX;",FDD incl Hotel Detail Converted to AW.sas
"CREATE TABLE ""&OUTPUT.\FDD Backup &Run_Date..xlsb"" AS ( SELECT * FROM all_one_plus_2_data) ;",FDD incl Hotel Detail Converted to AW.sas
" CREATE TABLE one_year_hotel_data AS select a.MARSHA, b.MARSHA_NEW, b.BRND_NAME , ""Y"" AS FRAN_COMP , COUNT( a.YRMNTH) AS PROP_COUNT , SUM( MARAVAIL) AS MARAVAIL, SUM( MARSOLD) AS MARSOLD, SUM( MARREV) AS MARREV , SUM( MKTAVAIL) AS MKTAVAIL, SUM( MKTSOLD) AS MKTSOLD, SUM( MKTREV) AS MKTREV , SUM( MARSOLD) / SUM( MARAVAIL) AS OCCUPANCY , SUM( MARREV) / SUM( MARSOLD) AS ADR , SUM( MARREV) /SUM( MARAVAIL) AS REVPAR , SUM( MARREV) / SUM( MARAVAIL) / ( SUM( MKTREV) / SUM( MKTAVAIL)) * 100 AS REVPAR_INDEX FROM CMP.STR_MONTHLY_DATA a LEFT JOIN TGT_BUS.PROPERTY_MASTER_MISW_HIST AS b ON a.MARSHA = b.MARSHA AND a.ASOF_YRMO = b.ASOF_YRMO LEFT JOIN Open_One_Year_FDD_Comp AS g ON b.MARSHA_NEW = g.MARSHA WHERE a.TIMEF ='MONTH' AND a.DATA_CATEGORY = 'Rooms' AND a.CURRENCY_TYPE = 'Constant USD' AND a.ASOF_YRMO = &YRMNTH. AND a.YRMNTH > &YRMNTH. - 100 AND b.COUNTRY IN ( 'United States', 'Canada') AND a.MARAVAIL * a.MARREV * a.MKTAVAIL * a.MKTREV > 0 AND g.MARSHA <> """" AND g.Brand_Acro not IN ( 'IND-SW', 'IND') GROUP BY a.MARSHA, b.MARSHA_NEW, b.BRND_NAME;",FDD incl Hotel Detail Converted to AW.sas
CREATE TABLE one_year_detail AS ( SELECT  *  FROM one_year_hotel_data  WHERE PROP_COUNT = 12);,FDD incl Hotel Detail Converted to AW.sas
"ALTER TABLE one_year_detail DROP COLUMN MARAVAIL ,  MARSOLD ,  MARREV ,  MKTAVAIL ,  MKTSOLD ,  MKTREV ,  PROP_COUNT ;",FDD incl Hotel Detail Converted to AW.sas
"CREATE TABLE ""&OUTPUT.\FDD Backup &Run_Date..xlsb"" AS ( SELECT * FROM one_year_detail) ;",FDD incl Hotel Detail Converted to AW.sas
" CREATE TABLE one_year_data AS select a.BRND_NAME , COUNT( a.MARSHA) AS PROP_COUNT , SUM( MARAVAIL) AS MARAVAIL, SUM( MARSOLD) AS MARSOLD, SUM( MARREV) AS MARREV , SUM( MKTAVAIL) AS MKTAVAIL, SUM( MKTSOLD) AS MKTSOLD, SUM( MKTREV) AS MKTREV , max( OCCUPANCY) AS MAX_OCC, min( OCCUPANCY) AS MIN_OCC , max( ADR) AS MAX_ADR, min( ADR) AS MIN_ADR , max( REVPAR) AS MAX_REVPAR, min( REVPAR) AS MIN_REVPAR , max( REVPAR_INDEX) AS MAX_REVPAR_INDEX, min( REVPAR_INDEX) AS MIN_REVPAR_INDEX FROM one_year_hotel_data a WHERE a.PROP_COUNT = 12 GROUP BY a.BRND_NAME;",FDD incl Hotel Detail Converted to AW.sas
" CREATE TABLE one_year_avg_calcs AS select a.BRND_NAME, a.PROP_COUNT , MAX_OCC, MIN_OCC, MAX_ADR, MIN_ADR, MAX_REVPAR, MIN_REVPAR, MAX_REVPAR_INDEX, MIN_REVPAR_INDEX , a.MARSOLD / a.MARAVAIL AS AVG_OCC , a.MARREV / a.MARSOLD AS AVG_ADR , a.MARREV / a.MARAVAIL AS AVG_REVPAR , a.MARREV / a.MARAVAIL / ( a.MKTREV / MKTAVAIL) * 100 AS AVG_REVPAR_INDEX FROM one_year_data a;",FDD incl Hotel Detail Converted to AW.sas
" CREATE TABLE one_year_count_higher AS select a.MARSHA_NEW, b.BRND_NAME , CASE WHEN a.OCCUPANCY > AVG_OCC THEN 1 END AS ABOVE_AVG_OCC , CASE WHEN a.ADR > AVG_ADR THEN 1 END AS ABOVE_AVG_ADR , CASE WHEN a.REVPAR > AVG_REVPAR THEN 1 END AS ABOVE_AVG_REVPAR , CASE WHEN a.REVPAR_INDEX > AVG_REVPAR_INDEX THEN 1 END AS ABOVE_AVG_REVPAR_INDEX FROM one_year_hotel_data a LEFT JOIN one_year_avg_calcs AS b ON a.BRND_NAME = b.BRND_NAME WHERE a.PROP_COUNT = 12 ORDER BY a.MARSHA_NEW;",FDD incl Hotel Detail Converted to AW.sas
" CREATE TABLE all_one_year_data AS select a.BRND_NAME, b.PROP_COUNT , b.MAX_OCC, b.MIN_OCC, b.MAX_ADR, b.MIN_ADR , b.MAX_REVPAR, b.MIN_REVPAR, b.MAX_REVPAR_INDEX, b.MIN_REVPAR_INDEX , b.AVG_OCC, b.AVG_ADR, b.AVG_REVPAR, b.AVG_REVPAR_INDEX , SUM( a.ABOVE_AVG_OCC) AS ABOVE_AVG_OCC , SUM( a.ABOVE_AVG_ADR) AS ABOVE_AVG_ADR , SUM( a.ABOVE_AVG_REVPAR) AS ABOVE_AVG_REVPAR , SUM( a.ABOVE_AVG_REVPAR_INDEX) AS ABOVE_AVG_REVPAR_INDEX , SUM( a.ABOVE_AVG_OCC) / b.PROP_COUNT AS PCT_ABOVE_AVG_OCC , SUM( a.ABOVE_AVG_ADR) / b.PROP_COUNT AS PCT_ABOVE_AVG_ADR , SUM( a.ABOVE_AVG_REVPAR) / b.PROP_COUNT AS PCT_ABOVE_AVG_REVPAR , SUM( a.ABOVE_AVG_REVPAR_INDEX) / b.PROP_COUNT AS PCT_ABOVE_AVG_REVPAR_INDEX FROM one_year_count_higher a LEFT JOIN one_year_avg_calcs AS b ON a.BRND_NAME = b.BRND_NAME GROUP BY a.BRND_NAME, b.PROP_COUNT , b.MAX_OCC, b.MIN_OCC, b.MAX_ADR, b.MIN_ADR , b.MAX_REVPAR, b.MIN_REVPAR, b.MAX_REVPAR_INDEX, b.MIN_REVPAR_INDEX , b.AVG_OCC, b.AVG_ADR, b.AVG_REVPAR, b.AVG_REVPAR_INDEX;",FDD incl Hotel Detail Converted to AW.sas
"CREATE TABLE ""&OUTPUT.\FDD Backup &Run_Date..xlsb"" AS ( SELECT * FROM all_one_year_data) ;",FDD incl Hotel Detail Converted to AW.sas
" CREATE TABLE CAD_hotel_data AS select a.MARSHA, b.MARSHA_NEW , CASE WHEN b.BRND IN ( 'FS', 'JW') THEN 'Marriott Hotels' ELSE b.BRND_NAME END AS BRND_NAME , e.BRAND_VERSION , e.Comp_Status_per_YE17_Tree_Node AS FRAN_COMP , COUNT( a.YRMNTH) AS PROP_COUNT , SUM( MARAVAIL) AS MARAVAIL, SUM( MARSOLD) AS MARSOLD, SUM( MARREV) AS MARREV , SUM( MKTAVAIL) AS MKTAVAIL, SUM( MKTSOLD) AS MKTSOLD, SUM( MKTREV) AS MKTREV , SUM( MARSOLD) / SUM( MARAVAIL) AS OCCUPANCY , SUM( MARREV) / SUM( MARSOLD) AS ADR , SUM( MARREV) /SUM( MARAVAIL) AS REVPAR , SUM( MARREV) / SUM( MARAVAIL) / ( SUM( MKTREV) / SUM( MKTAVAIL)) * 100 AS REVPAR_INDEX FROM CMP.STR_MONTHLY_DATA a LEFT JOIN TGT_BUS.PROPERTY_MASTER_MISW_HIST AS b ON a.MARSHA = b.MARSHA AND a.ASOF_YRMO = b.ASOF_YRMO LEFT JOIN Canada_FDD_Comp AS e ON b.MARSHA_NEW = e.MARSHA WHERE a.TIMEF ='MONTH' AND a.DATA_CATEGORY = 'Rooms' AND a.CURRENCY_TYPE = 'Local' AND a.ASOF_YRMO = &YRMNTH. AND a.YRMNTH > &YRMNTH. - 100 AND b.COUNTRY IN ( 'Canada') AND a.MARAVAIL * a.MARREV * a.MKTAVAIL * a.MKTREV > 0 AND e.Comp_Status_per_YE17_Tree_Node <> """" AND e.Brand_Acro not IN ( 'IND-SW', 'IND') GROUP BY a.MARSHA, b.MARSHA_NEW, calculated BRND_NAME, e.BRAND_VERSION, e.Comp_Status_per_YE17_Tree_Node;",FDD incl Hotel Detail Converted to AW.sas
CREATE TABLE CAD_hotel_detail AS ( SELECT  *  FROM CAD_hotel_data );,FDD incl Hotel Detail Converted to AW.sas
"ALTER TABLE CAD_hotel_detail DROP COLUMN MARAVAIL ,  MARSOLD ,  MARREV ,  MKTAVAIL ,  MKTSOLD ,  MKTREV ;",FDD incl Hotel Detail Converted to AW.sas
"CREATE TABLE ""&OUTPUT.\FDD Backup &Run_Date..xlsb"" AS ( SELECT * FROM CAD_hotel_detail) ;",FDD incl Hotel Detail Converted to AW.sas
" CREATE TABLE CAD_brand_data AS select a.BRND_NAME, a.FRAN_COMP , COUNT( a.MARSHA) AS PROP_COUNT , SUM( MARAVAIL) AS MARAVAIL, SUM( MARSOLD) AS MARSOLD, SUM( MARREV) AS MARREV , SUM( MKTAVAIL) AS MKTAVAIL, SUM( MKTSOLD) AS MKTSOLD, SUM( MKTREV) AS MKTREV , max( OCCUPANCY) AS MAX_OCC, min( OCCUPANCY) AS MIN_OCC , max( ADR) AS MAX_ADR, min( ADR) AS MIN_ADR , max( REVPAR) AS MAX_REVPAR, min( REVPAR) AS MIN_REVPAR , max( REVPAR_INDEX) AS MAX_REVPAR_INDEX, min( REVPAR_INDEX) AS MIN_REVPAR_INDEX FROM CAD_hotel_data a WHERE a.FRAN_COMP = ""LY_COMP"" GROUP BY a.BRND_NAME, a.FRAN_COMP;",FDD incl Hotel Detail Converted to AW.sas
" CREATE TABLE CAD_avg_calcs AS select a.BRND_NAME, a.PROP_COUNT , MAX_OCC, MIN_OCC, MAX_ADR, MIN_ADR, MAX_REVPAR, MIN_REVPAR, MAX_REVPAR_INDEX, MIN_REVPAR_INDEX , a.MARSOLD / a.MARAVAIL AS AVG_OCC , a.MARREV / a.MARSOLD AS AVG_ADR , a.MARREV / a.MARAVAIL AS AVG_REVPAR , a.MARREV / a.MARAVAIL / ( a.MKTREV / MKTAVAIL) * 100 AS AVG_REVPAR_INDEX FROM CAD_brand_data a;",FDD incl Hotel Detail Converted to AW.sas
" CREATE TABLE CAD_count_higher AS select a.MARSHA_NEW, b.BRND_NAME , CASE WHEN a.OCCUPANCY > AVG_OCC THEN 1 END AS ABOVE_AVG_OCC , CASE WHEN a.ADR > AVG_ADR THEN 1 END AS ABOVE_AVG_ADR , CASE WHEN a.REVPAR > AVG_REVPAR THEN 1 END AS ABOVE_AVG_REVPAR , CASE WHEN a.REVPAR_INDEX > AVG_REVPAR_INDEX THEN 1 END AS ABOVE_AVG_REVPAR_INDEX FROM CAD_hotel_data a LEFT JOIN CAD_avg_calcs AS b ON a.BRND_NAME = b.BRND_NAME ORDER BY a.MARSHA_NEW;",FDD incl Hotel Detail Converted to AW.sas
" CREATE TABLE CAD_all_brand_data AS select a.BRND_NAME, b.PROP_COUNT , b.MAX_OCC, b.MIN_OCC, b.MAX_ADR, b.MIN_ADR , b.MAX_REVPAR, b.MIN_REVPAR, b.MAX_REVPAR_INDEX, b.MIN_REVPAR_INDEX , b.AVG_OCC, b.AVG_ADR, b.AVG_REVPAR, b.AVG_REVPAR_INDEX , SUM( a.ABOVE_AVG_OCC) AS ABOVE_AVG_OCC , SUM( a.ABOVE_AVG_ADR) AS ABOVE_AVG_ADR , SUM( a.ABOVE_AVG_REVPAR) AS ABOVE_AVG_REVPAR , SUM( a.ABOVE_AVG_REVPAR_INDEX) AS ABOVE_AVG_REVPAR_INDEX , SUM( a.ABOVE_AVG_OCC) / b.PROP_COUNT AS PCT_ABOVE_AVG_OCC , SUM( a.ABOVE_AVG_ADR) / b.PROP_COUNT AS PCT_ABOVE_AVG_ADR , SUM( a.ABOVE_AVG_REVPAR) / b.PROP_COUNT AS PCT_ABOVE_AVG_REVPAR , SUM( a.ABOVE_AVG_REVPAR_INDEX) / b.PROP_COUNT AS PCT_ABOVE_AVG_REVPAR_INDEX , c.median_Occ, c.median_ADR, c.median_REVPAR, c.median_RPI FROM CAD_count_higher a LEFT JOIN CAD_avg_calcs AS b ON a.BRND_NAME = b.BRND_NAME LEFT JOIN CAD_Medians AS c ON a.BRND_NAME = c.BRND_NAME GROUP BY a.BRND_NAME, b.PROP_COUNT , b.MAX_OCC, b.MIN_OCC, b.MAX_ADR, b.MIN_ADR , b.MAX_REVPAR, b.MIN_REVPAR, b.MAX_REVPAR_INDEX, b.MIN_REVPAR_INDEX , b.AVG_OCC, b.AVG_ADR, b.AVG_REVPAR, b.AVG_REVPAR_INDEX , c.median_Occ, c.median_ADR, c.median_REVPAR, c.median_RPI;",FDD incl Hotel Detail Converted to AW.sas
"CREATE TABLE ""&OUTPUT.\FDD Backup &Run_Date..xlsb"" AS ( SELECT * FROM CAD_all_brand_data) ;",FDD incl Hotel Detail Converted to AW.sas
" select CAST( max( CAST( snapshot_date,mmddyy10. )),date9. ) into :max_ssdate FROM gd.wss;",GroupBookings_WklyReport.sas
" CREATE TABLE sgds_fcst_snap AS select ""&ssdate."" AS snapshot_date,b.hotel_cd,p.hCLASS, p.mf,p.domint,p.brnd,p.region,p.market_name,b.book_key, b.book_stat,b.def_stat_dt AS definite_dt,b.arr_dt,b.dep_dt,r.blk_dt, SUM( r.proj_rms) AS proj_rms,SUM( r.proj_rms_rev) AS proj_rev FROM share.plu p, bkdata b, rmblk r WHERE b.book_stat IN ( 'A','D','1','C') AND r.rm_blk_stat_cd IN ( 'A','D','1','C') AND p.marsha=b.hotel_cd AND p.marsha=r.hotel_cd AND p.openflag='Y' andEXTRACT(YEAR FROM r.blk_dt) >= &last_yr. AND b.hotel_cd=r.hotel_cd AND b.book_key=r.book_key GROUP BY b.hotel_cd,p.hCLASS,p.mf,p.domint,p.brnd,p.region,p.market_name, b.book_key,b.book_stat,b.def_stat_dt,b.arr_dt,b.dep_dt,r.blk_dt;",GroupBookings_WklyReport.sas
" CREATE TABLE gd.sgds_bkgs AS ( SELECT  *  FROM sgds_fcst_snap UNION ALL SELECT  *  FROM gd.sgds_bkgs WHERE snapshot_date<>""&ssdate."");",GroupBookings_WklyReport.sas
" delete FROM gd.wss WHERE snapshot_date=""&ssdate."" INSERT INTO gd.wss( snapshot_date) values ( ""&ssdate."" ) ;",GroupBookings_WklyReport.sas
" CREATE TABLE gd.grp_actuals AS select b.hotel_cd,b.book_key,b.bk_typ,r.blk_dt, SUM( ( r.act_rms+r.act_suites+r.act_comp)) AS act_rms, SUM( ( r.act_rev+r.act_suite_rev)) AS act_rev FROM share.bkdata2006 b, share.rmblk2006 r, share.plu p WHERE b.book_stat IN ( 'A') AND r.rm_blk_stat_cd IN ( 'A') AND p.openflag='Y' andEXTRACT(YEAR FROM blk_dt) IN ( &last_yr.,&this_yr. ) AND p.marsha=b.hotel_cd AND p.marsha=r.hotel_cd AND b.hotel_cd=r.hotel_cd AND b.book_key=r.book_key GROUP BY b.hotel_cd,b.book_key,b.bk_typ,r.blk_dt;",GroupBookings_WklyReport.sas
" CREATE TABLE gd.grp_otb AS ( SELECT  *  , DATEDIFF( 'weeks',CAST( snapshot_date,mmddyy10. ),blk_dt ) AS weeks_out  FROM gd.sgds_bkgs  whereblk_dt >= ""&start_date""d AND blk_dt <= ""&end_date""d AND weeks_out <= 52);",GroupBookings_WklyReport.sas
" CREATE TABLE gd.otb AS select a.*,b.bk_typ,b.act_rms,b.act_rev,p.owner,p.manager,p.hcap FROM gd.grp_otb AS a LEFT JOIN gd.grp_actuals AS b ON a.hotel_cd=b.hotel_cd AND a.book_key=b.book_key AND a.blk_dt=b.blk_dt LEFT JOIN gpo.property_master AS p ON a.hotel_cd=p.marsha;",GroupBookings_WklyReport.sas
" CREATE TABLE plu AS ( (  select marsha, hcap FROM AW_TGT_BUS_DBO.property_master  )  ) ;",GrpError.sas
" CREATE TABLE oy.group_error_steve_sum AS select prop_code, avg( abs( ttl_proj-ttl_act)) / avg( p.hcap) AS grp_abs_error_pct_cap format=percent10.2, avg( ttl_proj > ttl_act) AS Grp_Pct_Fcst_Over_Act format=percent10. FROM oy.group_error_steve a INNER JOIN plu p ON a.prop_code=p.marsha GROUP BY prop_code;",GrpError.sas
" CREATE TABLE adj_submissions AS ( SELECT  *  , _n_ AS row_N , LTRIM( RTRIM( quote) ) AS quote  FROM adj_submissions  WHERE row_id<>:'');",GSO_Group_MA_Validation.sas
 CREATE TABLE fx_conversion AS  (  select * FROM AW_TGT_BUS_DBO.TREASFX_FCST_HIST FX WHERE FX.ASOF_YRMO =EXTRACT(YEAR FROM CURRENT DATE - 1 YEAR) * 100 + 12  ) ;,GSO_Group_MA_Validation.sas
" CREATE TABLE quotename AS  (  select distinct quote, quote_name FROM AW_GSO_PRD.MI_SW_EVO_GRP_ACH_EADS_GSO_FINAL  ) ;",GSO_Group_MA_Validation.sas
SELECT DISTINCT * FROM quotename ORDER BY quote;,GSO_Group_MA_Validation.sas
" CREATE TABLE prelim_prod AS  (  select GSO_ROSTER_KEY, YEAR, MONTH, ASOF_YRMO, GSO_CONTINENT, GSO_OFFICE, GSO_SUB_REGION, SEGMENT, SUB_SEGMENT, POSITION_ID, GOAL_TYPE, ROSTER_ACCOUNT_NAME, SUBMITTED_ACCOUNT_NAME, GOALED_ACCOUNT_ID, GOALED_ACCOUNT_ID_SOURCE, RELTIO_ID, DUNS, INDUSTRY, EID, EID_PROSPECT, ISAC_POSITION_ID, GSO_DB_ID, ASSOCIATE_ROLE_TYPE, POSITION_TYPE, GSO_ACCOUNT_ROLE, DEPLOYMENT_PARAMETER, DEPLOYMENT_ISO, DEPLOYMENT_CITY, DEPLOYMENT_STRATEGY_NOTES, LEADER_POSITION_ID, GSO_DB_ID_LEADER, EID_LEADER, SVP_POSITION_ID, SVP_NAME, VP_POSITION_ID, VP_NAME, LEADER_AREA_TEAM_POSITION_ID, LEADER_AREA_TEAM, SUB_LEADER_1_POSITION_ID, SUB_LEADER_1, SUB_LEADER_2_POSITION_ID, SUB_LEADER_2, QUOTE, QUOTE_NAME, QUOTE_STATUS, MARSHA, BRND_NAME, BRND, DATA_SOURCE, CHAIN, QUOTE_ACCOUNT_REGION, QUOTE_ACCOUNT_COUNTRY, QUOTE_ACCOUNT_COUNTRY_ISO, QUOTE_ACCOUNT_CITY, ULTIMATE_PARENT_URI, ULTIMATE_PARENT_ACCOUNT_NM, ULTIMATE_PARENT_DUNS, IMMEDIATE_PARENT_ACCOUNT_NM, IMMEDIATE_PARENT_DUNS, IMMEDIATE_PARENT_URI, CHILD_ACCOUNT_NM, CHILD_DUNS, CHILD_URI, PROSPECT_INCLUDE, INCLUDE, INCLUDE_REASON, PRELIM_ACTION, PRELIM_COMMENTS, REFERRED_BY_EID, PRIMARY_OPPTY_EID, PROSPECT_QUOTE_FLAG, PROSPECT_INCLUDE_REASON, SUM( NET_QT_CNT) AS NET_QT_CNT, SUM( RN) AS RN, SUM( RV) AS RV, SUM( LOCAL_RV) AS local_rv, SUM( COMPUTED_RV) AS computed_rv FROM (  select GSO_ROSTER_KEY, YEAR, MONTH, 201906 AS ASOF_YRMO, GSO_CONTINENT, GSO_OFFICE, GSO_SUB_REGION, SEGMENT, SUB_SEGMENT, POSITION_ID, GOAL_TYPE, ROSTER_ACCOUNT_NAME, SUBMITTED_ACCOUNT_NAME, GOALED_ACCOUNT_ID, GOALED_ACCOUNT_ID_SOURCE, RELTIO_ID, DUNS, INDUSTRY, EID, EID_PROSPECT, ISAC_POSITION_ID, GSO_DB_ID, ASSOCIATE_ROLE_TYPE, POSITION_TYPE, GSO_ACCOUNT_ROLE, DEPLOYMENT_PARAMETER, DEPLOYMENT_ISO, DEPLOYMENT_CITY, '' AS DEPLOYMENT_STRATEGY_NOTES, LEADER_POSITION_ID, GSO_DB_ID_LEADER, EID_LEADER, SVP_POSITION_ID, SVP_NAME, VP_POSITION_ID, VP_NAME, LEADER_AREA_TEAM_POSITION_ID, LEADER_AREA_TEAM, SUB_LEADER_1_POSITION_ID, SUB_LEADER_1, SUB_LEADER_2_POSITION_ID, SUB_LEADER_2, QUOTE, '' AS QUOTE_NAME, QUOTE_STATUS, MARSHA, BRND_NAME, BRND, DATA_SOURCE, CHAIN, '' AS QUOTE_ACCOUNT_REGION, '' AS QUOTE_ACCOUNT_COUNTRY, '' AS QUOTE_ACCOUNT_COUNTRY_ISO, '' AS QUOTE_ACCOUNT_CITY, ULTIMATE_PARENT_URI, ULTIMATE_PARENT_ACCOUNT_NM, ULTIMATE_PARENT_DUNS, '' AS IMMEDIATE_PARENT_ACCOUNT_NM, '' AS IMMEDIATE_PARENT_DUNS, '' AS IMMEDIATE_PARENT_URI, '' AS CHILD_ACCOUNT_NM, '' AS CHILD_DUNS, '' AS CHILD_URI, '' AS PROSPECT_INCLUDE, INCLUDE, '' AS INCLUDE_REASON, 'Prelim_Prod' AS PRELIM_ACTION, '' AS PRELIM_COMMENTS, '' AS REFERRED_BY_EID, '' AS PRIMARY_OPPTY_EID, '' AS PROSPECT_QUOTE_FLAG, '' AS PROSPECT_INCLUDE_REASON, SUM( NET_QT_CNT) AS NET_QT_CNT, SUM( RN) AS RN, SUM( RV) AS RV, SUM( LOCAL_RV) AS local_rv, SUM( COMPUTED_RV) AS computed_rv FROM AW_GSO_PRD.MI_SW_EVO_GRP_ACH_EADS_GSO_FINAL WHERE prelim_action IN ( 'Prelim_Prod','Manual_Adj') AND ( segment<>'Prospect' OR ( PROSPECT_INCLUDE='YES' AND segment='Prospect')) AND ( year=2018 OR year=2019) GROUP BY GSO_ROSTER_KEY, YEAR, MONTH, ASOF_YRMO, GSO_CONTINENT, GSO_OFFICE, GSO_SUB_REGION, SEGMENT, SUB_SEGMENT, POSITION_ID, GOAL_TYPE, ROSTER_ACCOUNT_NAME, SUBMITTED_ACCOUNT_NAME, GOALED_ACCOUNT_ID, GOALED_ACCOUNT_ID_SOURCE, RELTIO_ID, DUNS, INDUSTRY, EID, EID_PROSPECT, ISAC_POSITION_ID, GSO_DB_ID, ASSOCIATE_ROLE_TYPE, POSITION_TYPE, GSO_ACCOUNT_ROLE, DEPLOYMENT_PARAMETER, DEPLOYMENT_ISO, DEPLOYMENT_CITY, DEPLOYMENT_STRATEGY_NOTES, LEADER_POSITION_ID, GSO_DB_ID_LEADER, EID_LEADER, SVP_POSITION_ID, SVP_NAME, VP_POSITION_ID, VP_NAME, LEADER_AREA_TEAM_POSITION_ID, LEADER_AREA_TEAM, SUB_LEADER_1_POSITION_ID, SUB_LEADER_1, SUB_LEADER_2_POSITION_ID, SUB_LEADER_2, QUOTE, QUOTE_NAME, QUOTE_STATUS, MARSHA, BRND_NAME, BRND, DATA_SOURCE, CHAIN, QUOTE_ACCOUNT_REGION, QUOTE_ACCOUNT_COUNTRY, QUOTE_ACCOUNT_COUNTRY_ISO, QUOTE_ACCOUNT_CITY, ULTIMATE_PARENT_URI, ULTIMATE_PARENT_ACCOUNT_NM, ULTIMATE_PARENT_DUNS, PROSPECT_INCLUDE, IMMEDIATE_PARENT_ACCOUNT_NM, IMMEDIATE_PARENT_DUNS, IMMEDIATE_PARENT_URI, CHILD_ACCOUNT_NM, CHILD_DUNS, CHILD_URI, INCLUDE, INCLUDE_REASON, PRELIM_ACTION, PRELIM_COMMENTS, REFERRED_BY_EID, PRIMARY_OPPTY_EID, PROSPECT_QUOTE_FLAG, PROSPECT_INCLUDE_REASON ) GROUP BY GSO_ROSTER_KEY, YEAR, MONTH, ASOF_YRMO, GSO_CONTINENT, GSO_OFFICE, GSO_SUB_REGION, SEGMENT, SUB_SEGMENT, POSITION_ID, GOAL_TYPE, ROSTER_ACCOUNT_NAME, SUBMITTED_ACCOUNT_NAME, GOALED_ACCOUNT_ID, GOALED_ACCOUNT_ID_SOURCE, RELTIO_ID, DUNS, INDUSTRY, EID, EID_PROSPECT, ISAC_POSITION_ID, GSO_DB_ID, ASSOCIATE_ROLE_TYPE, POSITION_TYPE, GSO_ACCOUNT_ROLE, DEPLOYMENT_PARAMETER, DEPLOYMENT_ISO, DEPLOYMENT_CITY, DEPLOYMENT_STRATEGY_NOTES, LEADER_POSITION_ID, GSO_DB_ID_LEADER, EID_LEADER, SVP_POSITION_ID, SVP_NAME, VP_POSITION_ID, VP_NAME, LEADER_AREA_TEAM_POSITION_ID, LEADER_AREA_TEAM, SUB_LEADER_1_POSITION_ID, SUB_LEADER_1, SUB_LEADER_2_POSITION_ID, SUB_LEADER_2, QUOTE, QUOTE_NAME, QUOTE_STATUS, MARSHA, BRND_NAME, BRND, DATA_SOURCE, CHAIN, QUOTE_ACCOUNT_REGION, QUOTE_ACCOUNT_COUNTRY, QUOTE_ACCOUNT_COUNTRY_ISO, QUOTE_ACCOUNT_CITY, ULTIMATE_PARENT_URI, ULTIMATE_PARENT_ACCOUNT_NM, ULTIMATE_PARENT_DUNS, PROSPECT_INCLUDE, IMMEDIATE_PARENT_ACCOUNT_NM, IMMEDIATE_PARENT_DUNS, IMMEDIATE_PARENT_URI, CHILD_ACCOUNT_NM, CHILD_DUNS, CHILD_URI, INCLUDE, INCLUDE_REASON, PRELIM_ACTION, PRELIM_COMMENTS, REFERRED_BY_EID, PRIMARY_OPPTY_EID, PROSPECT_QUOTE_FLAG, PROSPECT_INCLUDE_REASON  ) ;",GSO_Group_MA_Validation.sas
" CREATE TABLE prelim_prod_final AS select b.quote_name, a.* FROM prelim_prod a LEFT JOIN quotename b ON ( a.quote=b.quote ) ;",GSO_Group_MA_Validation.sas
" CREATE TABLE all_GSO_quotes AS  (  select * FROM AW_GSO_PRD.MI_SW_EVO_GRP_ACH_EADS_GSO_FINAL WHERE year IN ( 2018,2019) ) ;",GSO_Group_MA_Validation.sas
 CREATE TABLE non_prelim_prod4 AS select * FROM all_GSO_quotes WHERE quote not IN ( select distinct quote FROM prelim_prod_final ) ;,GSO_Group_MA_Validation.sas
 CREATE TABLE all_prelim AS ( SELECT  *  FROM non_prelim_prod4 UNION ALL SELECT  *  FROM prelim_prod_final);,GSO_Group_MA_Validation.sas
" CREATE TABLE all_quotes AS  (  select distinct quote, year, month FROM AW_GSO_PRD.MI_SW_EVO_GROUP_EADS ) ;",GSO_Group_MA_Validation.sas
" CREATE TABLE prelim_vs_Adj AS select a.*, b.row_id FROM all_prelim a INNER JOIN adj_submissions b ON ( a.quote=b.quote ) ;",GSO_Group_MA_Validation.sas
" CREATE TABLE global_quotes AS  (  select distinct quote FROM AW_GSO_PRD.MI_SW_EVO_GROUP_EADS WHERE year IN ( 2017,2018,2019) UNION select distinct quote FROM AW_GSO_STG.MI_GROUP_EADS_PROSPECT ) ;",GSO_Group_MA_Validation.sas
 CREATE TABLE gso_quotes AS  (  select distinct quote FROM AW_GSO_PRD.MI_SW_EVO_GROUP_EADS_GSO UNION select distinct quote FROM AW_GSO_STG.MI_GROUP_EADS_GSO_PROSPECT ) ;,GSO_Group_MA_Validation.sas
" CREATE TABLE ach_quotes AS  (  select distinct quote FROM AW_GSO_PRD.MI_SW_EVO_GRP_ACH_EADS_GSO_FINAL WHERE ( segment <> 'Prospect' AND Prelim_action IN ( 'Prelim_Prod','Manual_Adj')) OR ( segment='Prospect' AND Prospect_include='YES' AND Prelim_action IN ( 'Prelim_Prod','Manual_Adj')) ) ;",GSO_Group_MA_Validation.sas
" CREATE TABLE gso_group_roster AS  (  select * FROM AW_GSO_PRD.GSO_ROSTER_BY_MONTH WHERE goal_type='Group' AND ( nvl( EXCLUDE_FLAG,'')='' OR nvl( EXCLUDE_FLAG,'')='N') ) ;",GSO_Group_MA_Validation.sas
" CREATE TABLE parse_EADS AS  (  Select a.RPT_METRIC, A.month, A.year, A.qtr, A.QUOTE, A.MARSHA ""MARSHA_CD"", A.DATA_SOURCE ""SYS_RECORD"", A.QUOTE_NAME, A.QUOTE_ORIGINAL_DEFINITE_DATE ""ORIG_DEF_DATE"", A.QUOTE_ARRIVAL_DATE ""ARV_DATE"", A.RN ""ORIG_DEF_RM_NTS"", A.COMPUTED_RV ""ORIG_DEF_RM_REV"", A.CURRENCY_CD ""QUOTE_CUR_CD"", A.LOCAL_RV, A.PROPERTY_NM ""Prop_Name"", A.BRND ""Brand_Code"", a.peak ""Peak_RN"", a.REFERRED_BY_EID, a.Quote_Originating_Mgr_EID, a.PROP_REGION ""Hotel_continent"", a.PROP_COUNTRY ""Hotel_Country"", A.QUOTE_STATUS, a.QUOTE_ACCOUNT_NM ""End_User_Account_Name"", a.QUOTE_ACCOUNT_REGION ""End_User_Account_Continent"", a.QUOTE_ACCOUNT_COUNTRY ""End_User_Account_Country"", a.quote_account_country_iso ""end_user_account_ISO"", a.QUOTE_ACCOUNT_CITY ""End_User_Account_City"", a.SOURCE_ID ""End_User_Account_Source_ID"", b.ULTIMATE_PARENT_ACCOUNT_NM ""End_User_Account_Parent"", b.ULTIMATE_PARENT_URI ""End_User_Account_Parent_ID"", a.QUOTE_INT_NM ""Intermediary_Account_Name"", a.QUOTE_INT_REGION ""Intermediary_Account_Continent"", a.QUOTE_INT_COUNTRY ""Intermediary_Account_Country"", a.quote_int_country_iso ""int_account_ISO"", a.QUOTE_INT_CITY ""Intermediary_Account_City"", a.SOURCE_ID_INT ""Intermediary_Account_Source_ID"", b.ULTIMATE_PARENT_ACCOUNT_NM_INT ""Intermediary_Account_Parent"", b.ULTIMATE_PARENT_URI_INT ""Intermediary_Account_Parent_ID"" FROM AW_GSO_PRD.MI_SW_EVO_GROUP_EADS a LEFT JOIN AW_GSO_PRD.MI_SW_EVO_GROUP_EADS_GSO b ON ( a.QUOTE= b.QUOTE AND a.QUOTE_STATUS = b.QUOTE_STATUS), ( SELECT ROW_NUMBER( ) OVER( Partition by quote ORDER BY year desc , month desc ) AS list, quote, quote_status, year , month FROM AW_GSO_PRD.MI_SW_EVO_GROUP_EADS WHERE quote IN ( %quotelist)) c WHERE a.QUOTE = c.quote AND c.list = 1 AND a.QUOTE_STATUS = c.quote_status ORDER BY a.QUOTE_ORIGINAL_DEFINITE_DATE desc ) ;",GSO_Group_MA_Validation.sas
 CREATE TABLE get_srw AS select distinct quote FROM adj_submissions WHERE quote not IN ( select distinct quote FROM parse_EADS ) ;,GSO_Group_MA_Validation.sas
" CREATE TABLE SRW_Query AS  (  SELECT opty_created_by.employee_id  AS REFERRED_BY_EID, orgmgr.employee_id AS Quote_Originating_Mgr_EID, opportunity.group_type_cd  AS opty_group_type, opportunity.sfa_opportunity_id AS sfa_opty_id, opportunity.opportunity_number AS opty_number, opportunity.ci_created_dt AS opty_created_date, T8.currency_cd  AS CURRENCY_CD, coguda00.ci_account_id AS SOURCE_ID, coguda00.quote_number  AS Quote , coguda00.opty_type_cd  AS Oppty_type, extract ( year FROM ( coguda00.orig_def_dt))  AS Quote_Original_Definite_Year, orgmgr.last_nm || ', ' || orgmgr.first_nm AS Quote_Originating_Mgr, opptymgr.last_nm || ', ' || opptymgr.first_nm AS Oppty_Originating_Mgr, opty_created_by.last_nm || ', ' || opty_created_by.first_nm AS Opptycreatedby, quote_created_by.last_nm || ', ' || quote_created_by.first_nm AS Quotecreatedby, Quote_Account.site_account_nm  AS QUOTE_ACCOUNT_NM , Quote_Account.address1 AS Quote_Account_Address, Quote_Account.address_city AS QUOTE_ACCOUNT_CITY, Quote_Account.address_state  AS Quote_Account_State, Quote_Account.address_province  AS Quote_Account_Province, Quote_Account.address_postal_cd AS Quote_Account_Postal_Code, Quote_Account.address_Country AS QUOTE_ACCOUNT_COUNTRY, coguda00.internal_channel_cd  AS Quote_Account_type, coguda00.arrival_dt  AS QUOTE_ARRIVAL_DATE , coguda00.quote_nm  AS Quote_Name , coguda00.status_description  AS Quote_Status , coguda00.status_change_dt  AS Quote_Status_Date , coguda00.orig_def_dt  AS QUOTE_ORIGINAL_DEFINITE_DATE , coguda00.ci_created_dt AS Quote_Create_Date, coguda00.departure_dt AS Quote_Departure_Date, extract ( year FROM ( coguda00.status_change_dt))  AS Quote_Status_year, extract ( month FROM ( coguda00.status_change_dt))  AS Quote_Status_month, extract ( quarter FROM ( coguda00.status_change_dt))  AS Quote_Status_Quarter, edw_dim_date_Quote_OD.cal_month_num  AS Quote_Original_Definite_Month , edw_dim_date_Quote_OD.cal_quarter_num  AS Quote_Original_Definite_Quarter , coguda60.marsha_cd  AS MARSHA , coguda60.property_nm  AS PROPERTY_NM , T8.peak_rm_ngts  AS peak , T8.proj_peak_rm_ngts AS Proj_Peak_Rooms, T8.actual_peak_rm_ngts AS Actual_Peak_Rooms, t8.number_of_ngts AS Quote_num_nights, T8.orig_def_est_sleeping_rm_ngts  AS odblocked_rn , T8.orig_def_est_sleeping_rm_rev * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)) AS odblocked_rv , ( ( ( T8.orig_def_est_beverage_rev + T8.orig_def_est_beverage_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)) + ( T8.orig_def_est_food_rev + T8.orig_def_est_food_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0))) + ( ( T8.orig_def_est_labor_rev + T8.orig_def_est_labor_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)) + ( T8.orig_def_est_misc_rev + T8.orig_def_est_misc_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)))) + ( ( ( T8.orig_def_est_other_rev + T8.orig_def_est_other_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)) + ( T8.orig_def_est_rental_rev + T8.orig_def_est_rental_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0))) + ( ( T8.orig_def_est_av_rev + T8.orig_def_est_av_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)) + T8.orig_def_est_sleeping_rm_rev * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)))) AS odblocked_revtot , T8.orig_def_proj_sleeping_rm_ngts  AS odproj_rn , T8.orig_def_proj_sleeping_rm_rev * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)) AS odproj_rv , ( ( ( T8.orig_def_est_beverage_rev + T8.orig_def_est_beverage_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)) + ( T8.orig_def_est_food_rev + T8.orig_def_est_food_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0))) + ( ( T8.orig_def_est_labor_rev + T8.orig_def_est_labor_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)) + ( T8.orig_def_est_misc_rev + T8.orig_def_est_misc_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)))) + ( ( ( T8.orig_def_est_other_rev + T8.orig_def_est_other_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)) + ( T8.orig_def_est_rental_rev + T8.orig_def_est_rental_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0))) + ( ( T8.orig_def_est_av_rev + T8.orig_def_est_av_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)) + T8.orig_def_proj_sleeping_rm_rev * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)))) AS odproj_revtot , T8.est_sleeping_rm_ngts  AS blocked_rn , T8.est_sleeping_rm_rev * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)) AS blocked_rv , ( ( ( T8.est_beverage_rev + T8.est_beverage_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)) + ( T8.est_food_rev + T8.est_food_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0))) + ( ( T8.est_labor_rev + T8.est_labor_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)) + ( T8.est_misc_rev + T8.est_misc_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)))) + ( ( ( T8.est_other_rev + T8.est_other_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)) + ( T8.est_rental_rev + T8.est_rental_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0))) + ( ( T8.est_av_rev + T8.est_av_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)) + T8.est_sleeping_rm_rev * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)))) AS blocked_revtot , T8.actual_sleeping_rm_ngts  AS Actual_Sleeping_Room_Nights , T8.actual_sleeping_rm_rev * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)) AS actual_sleeping_rm_rev , ( ( ( T8.actual_beverage_rev) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)) + ( T8.actual_food_rev) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0))) + ( ( T8.actual_labor_rev) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)) + ( T8.actual_misc_rev) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)))) + ( ( ( T8.actual_other_rev) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)) + ( T8.actual_rental_rev) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0))) + ( ( T8.actual_av_rev) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)) + T8.actual_sleeping_rm_rev * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)))) AS actual_revtot , T8.proj_sleeping_rm_ngts  AS proj_rn , T8.proj_sleeping_rm_rev * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)) AS proj_rv , T8.orig_def_est_sleeping_rm_rev AS orig_def_est_local_RV, T8.orig_def_proj_sleeping_rm_rev AS orig_def_proj_local_RV, T8.est_sleeping_rm_rev AS est_sleeping_rm_local_RV, T8.actual_sleeping_rm_rev AS actual_sleeping_rm_local_RV, T8.proj_sleeping_rm_rev AS proj_sleeping_rm_local_RV, ( ( ( T8.orig_def_est_beverage_rev + T8.orig_def_est_beverage_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)) + ( T8.orig_def_est_food_rev + T8.orig_def_est_food_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0))) + ( ( T8.orig_def_est_labor_rev + T8.orig_def_est_labor_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)) + ( T8.orig_def_est_misc_rev + T8.orig_def_est_misc_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)))) + ( ( ( T8.orig_def_est_other_rev + T8.orig_def_est_other_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)) + ( T8.orig_def_est_rental_rev + T8.orig_def_est_rental_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0))) + ( ( T8.orig_def_est_av_rev + T8.orig_def_est_av_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)) + T8.proj_sleeping_rm_rev * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)))) AS proj_revtot , coguda00.lost_turndown_reason_cd AS Lost_Turndown_Reason, coguda00.lost_turndown_description AS Lost_Turndown_Description , T8.total_actual_function_rev_svc_chg * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)) AS Actual_Function_Revenue_Total , ( T8.total_actual_quote_rev + T8.total_actual_function_svc_chg) * ( ( T9.currency_exch_rte * 1) / nullif( T10.currency_exch_rte, 0)) AS Actual_Total_Quote_Revenue, edw_dim_date_Quote_OD.cal_quarter_num  AS quarter , Quote_Intermediary_Account.site_account_nm  AS QUOTE_INT_NM , Quote_Intermediary_Account.ci_account_id AS SOURCE_ID_INT, Quote_Intermediary_Account.address1 AS Quote_Inter_Acct_Address, Quote_Intermediary_Account.address_city AS QUOTE_INT_CITY, Quote_Intermediary_Account.address_state AS Quote_Inter_Acct_State, Quote_Intermediary_Account.address_province AS Quote_Inter_Acct_Province, Quote_Intermediary_Account.address_postal_cd AS Quote_Inter_Acct_Postal_Code, Quote_Intermediary_Account.address_Country AS QUOTE_INT_COUNTRY, edw_dim_date_Quote_Arrival.cal_quarter_num  AS Arrival_Quarter , edw_dim_date_Quote_Arrival.cal_month_num  AS Quote_Arrival_Period FROM srw_dim_quote  coguda00 LEFT JOIN srw_dim_associate orgmgr ON ( coguda00.originating_manager_id= orgmgr.associate_id) LEFT JOIN srw_dim_associate quote_created_by ON ( coguda00.ci_created_by=quote_created_by.associate_id) INNER JOIN srw_dim_date edw_dim_date_Quote_OD ON ( edw_dim_date_Quote_OD.date_dt = nvl( coguda00.orig_def_dt, '1800-01-01')) INNER JOIN srw_lnk_ci_account Quote_Intermediary_Account ON ( Quote_Intermediary_Account.ci_account_id = nvl( coguda00.intermediary_account_id, ' ')) INNER JOIN srw_lnk_ci_account Quote_Account  ON ( coguda00.ci_account_id=Quote_Account.ci_account_id) INNER JOIN srw_dim_date  edw_dim_date_Quote_Arrival ON ( coguda00.arrival_dt=edw_dim_date_Quote_Arrival.date_dt) INNER JOIN srw_fact_quote_current_snapshot_v T8 ON ( coguda00.quote_wh_key = T8.asof_quote_wh_key) INNER JOIN edw_dim_currency  T10 ON ( T8.currency_exch_dt = T10.currency_exch_dt) INNER JOIN edw_dim_currency T9 ON ( T8.currency_cd = T9.from_currency_cd AND T8.currency_exch_dt = T9.currency_exch_dt) INNER JOIN srw_lnk_ci_property coguda60 ON ( coguda60.ci_property_id = coguda00.ci_property_id) INNER JOIN srw_dim_opportunity opportunity ON ( opportunity.opportunity_id = coguda00.opty_id) LEFT JOIN srw_dim_associate opptymgr ON ( opportunity.originating_mgr_id=opptymgr.associate_id) LEFT JOIN  srw_dim_associate opty_created_by ON ( opportunity.referred_by_mgr_id=opty_created_by.associate_id) WHERE quote IN ( %srwquote) AND ( coguda00.dw_curr_ind = 1 OR coguda00.quote_nat_key = -99) AND ( Quote_Account.dw_curr_ind = 1 OR Quote_Account.ci_account_nat_key = -99) AND ( Quote_Intermediary_Account.dw_curr_ind = 1 OR Quote_Intermediary_Account.ci_account_nat_key = -99) AND ( coguda60.dw_curr_ind = 1 OR coguda60.ci_property_nat_key = -99) AND LENGTH( btrim( coguda60.marsha_cd)) > 0 AND T10.from_currency_cd = 'USD' AND opportunity.dw_curr_ind=1  ) ;",GSO_Group_MA_Validation.sas
 CREATE TABLE Property AS  (  select * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER  ) ;,GSO_Group_MA_Validation.sas
 CREATE TABLE continent_map AS  (  select * FROM AW_GSO_STG.COUNTRY_GSO_CONTINENT_MAPPING  ) ;,GSO_Group_MA_Validation.sas
" CREATE TABLE srw_detail_v2 AS select a.*, b.brnd, b.country AS prop_country, e.region_name AS prop_region, c.region_name AS QUOTE_ACCOUNT_REGION, c.country_iso3_cd AS quote_account_country_iso, d.region_name AS QUOTE_INT_REGION, d.country_iso3_cd AS quote_int_country_iso, f.fxtocusd, a.local_rv * f.fxtocusd AS computed_rv FROM srw_detail a INNER JOIN fx_conversion f ON ( f.curr_code=a.currency_cd AND a.month=f.mon) LEFT JOIN property b ON ( a.marsha=b.marsha) LEFT JOIN continent_map c ON ( upper( a.quote_account_country)=c.country_name) LEFT JOIN continent_map d ON ( upper( a.quote_int_country)=d.country_name) LEFT JOIN continent_map e ON ( upper( b.country)=e.country_name ) ;",GSO_Group_MA_Validation.sas
" CREATE TABLE SRW_Data AS select RPT_METRIC, month, year, qtr, QUOTE, MARSHA AS MARSHA_CD, DATA_SOURCE AS SYS_RECORD, QUOTE_NAME, QUOTE_ORIGINAL_DEFINITE_DATE AS ORIG_DEF_DATE, QUOTE_ARRIVAL_DATE AS ARV_DATE, RN AS ORIG_DEF_RM_NTS, COMPUTED_RV AS ORIG_DEF_RM_REV, CURRENCY_CD AS QUOTE_CUR_CD, LOCAL_RV, PROPERTY_NM AS Prop_Name, BRND AS Brand_Code, peak AS Peak_RN, REFERRED_BY_EID, Quote_Originating_Mgr_EID, PROP_REGION AS Hotel_continent, PROP_COUNTRY AS Hotel_Country, QUOTE_STATUS, QUOTE_ACCOUNT_NM AS End_User_Account_Name, QUOTE_ACCOUNT_REGION AS End_User_Account_Continent, QUOTE_ACCOUNT_COUNTRY AS End_User_Account_Country, quote_account_country_iso AS end_user_account_ISO, QUOTE_ACCOUNT_CITY AS End_User_Account_City, SOURCE_ID AS End_User_Account_Source_ID, ULTIMATE_PARENT_ACCOUNT_NM AS End_User_Account_Parent, ULTIMATE_PARENT_URI AS End_User_Account_Parent_ID, QUOTE_INT_NM AS Intermediary_Account_Name, QUOTE_INT_REGION AS Intermediary_Account_Continent, QUOTE_INT_COUNTRY AS Intermediary_Account_Country, quote_int_country_iso AS int_account_ISO, QUOTE_INT_CITY AS Intermediary_Account_City, SOURCE_ID_INT AS Intermediary_Account_Source_ID, ULTIMATE_PARENT_ACCOUNT_NM_INT AS Intermediary_Account_Parent, ULTIMATE_PARENT_URI_INT AS Intermediary_Account_Parent_ID FROM srw_detail_v2;",GSO_Group_MA_Validation.sas
 CREATE TABLE all_adjustments AS ( SELECT  *  FROM parse_EADS UNION ALL SELECT  *  FROM SRW_Data);,GSO_Group_MA_Validation.sas
" CREATE TABLE adjustments AS select distinct e.associate AS gso_name, a.*, b.*, coalesce( c.GOALED_ACCOUNT_ID,d.GOALED_ACCOUNT_ID) AS gso_acct_id, coalesce( c.report_month,d.report_month) AS deployed_month, coalesce( c.gso_continent,d.gso_continent) AS gso_continent, coalesce( c.gso_office,d.gso_office) AS gso_office, coalesce( c.segment,d.segment) AS GSO_SEGMENT, coalesce( c.gso_account_role,d.gso_account_role) AS gso_account_role, coalesce( c.deployment_parameter,d.deployment_parameter) AS deployment_parameter, coalesce( c.deployment_city,d.deployment_city) AS depl_city_grp, coalesce( c.sub_segment,d.sub_segment) AS sub_segment, coalesce( c.gso_roster_key,d.gso_roster_key) AS gso_roster_key, coalesce( c.associate_role_type,d.associate_role_type) AS associate_role_type, coalesce( c.position_type,d.position_type) AS position_type FROM adj_submissions a LEFT JOIN all_adjustments b ON ( a.quote=b.quote) LEFT JOIN gso_group_roster c ON (  c.report_month=b.month AND a.eid_adj=c.eid AND UPPER( a.Deployed_Account_Name__Account_t)=UPPER( c.ROSTER_ACCOUNT_NAME)) LEFT JOIN gso_group_roster d ON (  d.report_month=b.month AND a.eid_adj=d.eid AND UPPER( a.Deployed_Account_Name__Account_t)=UPPER( d.ROSTER_ACCOUNT_NAME)) LEFT JOIN associate e ON ( UPPER( a.EID_ADJ)=UPPER( e.EID)) ORDER BY row_id;",GSO_Group_MA_Validation.sas
"CREATE TABLE transpose AS ( SELECT   *  , CONCAT_WS( ',',deployment_list, deployment_parameter ) AS deployment_list , CASE WHEN  first(row_id ) THEN ' ' END AS deployment_list, LAST(row_id) OVER ( PARTITION BY row_id GROUP BY row_id ORDER BY row_id )  FROM adjustments );",GSO_Group_MA_Validation.sas
ALTER TABLE transpose DROP COLUMN deployment_parameter ;,GSO_Group_MA_Validation.sas
" CREATE TABLE final_adjust AS ( SELECT  * , CASE WHEN  quote not IN ( %achquotes)  THEN 'N' ELSE 'Y' END AS ACH_EADS, CASE WHEN  quote not IN ( %gsoquotes)  THEN 'N' ELSE 'Y' END AS GSO_EADS, CASE WHEN  quote not IN ( %globalquotes)  THEN 'N' ELSE 'Y' END AS GLOBAL_EADS FROM transpose );",GSO_Group_MA_Validation.sas
" CREATE TABLE dupcheck AS select quote, COUNT( quote) AS cnt_quote FROM final_adjust GROUP BY quote HAVING COUNT( quote) > 1;",GSO_Group_MA_Validation.sas
" CREATE TABLE reason4 AS select distinct b.quote, b.eid, b.GOALED_ACCOUNT_ID FROM prelim_vs_Adj b INNER JOIN final_adjust c ON ( UPPER( b.EID) = UPPER( c.EID_ADJ) AND b.quote=c.quote AND b.GOALED_ACCOUNT_ID =c.gso_acct_id) WHERE b.year IN ( &curyr,&lstyr) AND Prelim_action IN ( 'Prelim_Prod') AND not( Prospect_include='NO' ) ;",GSO_Group_MA_Validation.sas
" CREATE TABLE reason2 AS select distinct b.quote, b.quote_status, b.eid, b.GOALED_ACCOUNT_ID, LTRIM( RTRIM( Prelim_action)) || ' - ' || LTRIM( RTRIM( include_reason)) AS reason_2a, CASE WHEN segment='Prospect' THEN LTRIM( RTRIM( Prospect_include)) || ' - ' || LTRIM( RTRIM( Prospect_include_reason)) END AS reason_2b FROM prelim_vs_Adj b INNER JOIN final_adjust c ON (  b.quote=c.quote AND b.quote_status=c.quote_status AND b.GOALED_ACCOUNT_ID =c.gso_acct_id) WHERE b.year IN ( &curyr,&lstyr) AND ( Prelim_action not IN ( 'Prelim_Prod') OR ( Prospect_include='NO') ) ;",GSO_Group_MA_Validation.sas
" CREATE TABLE reason2c AS select distinct b.quote, b.quote_status, b.eid, b.GOALED_ACCOUNT_ID, LTRIM( RTRIM( Prelim_action)) || ' - ' || LTRIM( RTRIM( Prelim_comments)) AS reason_2c FROM prelim_vs_Adj b INNER JOIN final_adjust c ON ( UPPER( b.EID) = UPPER( c.EID_ADJ) AND b.quote=c.quote AND b.quote_status=c.quote_status AND b.GOALED_ACCOUNT_ID =c.gso_acct_id) WHERE b.year IN ( &curyr,&lstyr) AND ( Prelim_action IN ( 'Prelim_Prod') AND not( Prospect_include='NO') AND include_reason='Suspect ADR' ) ;",GSO_Group_MA_Validation.sas
 CREATE TABLE all_opty AS  (  select distinct opty_number FROM AW_GSO_PRD.MI_SW_EVO_GROUP_EADS ) ;,GSO_Group_MA_Validation.sas
" CREATE TABLE adj_validation AS select distinct CASE WHEN a.quote not IN ( select quote FROM global_quotes) THEN 'Quote is not valid/not found IN the Global Group EADS' ELSE '' END AS Reason_1, CASE WHEN a.quote IN ( select quote FROM SRW_Data) THEN 'Quote found IN SRW Data Source' ELSE '' END AS Reason_1a, CASE WHEN a.quote not IN ( select quote FROM global_quotes) AND a.quote not IN ( select quote FROM SRW_Data) AND a.quote IN ( select opty_number FROM all_opty) THEN 'Quote entered is an Opty Number' ELSE '' END AS Reason_2a, CASE WHEN a.Brand_Code IN ( 'MV','ZC','DS','VB') THEN 'Brand Exclusion' ELSE '' END AS Reason_1b, CASE WHEN a.quote not IN ( select quote FROM prelim_vs_Adj WHERE Prelim_action IN ( 'Prelim_Prod') AND not( Prospect_include='NO')) THEN 'Quote is not ON prelim achievement' ELSE '' END AS Reason_2, CASE WHEN a.quote not IN ( select quote FROM all_quotes aq WHERE ( ( aq.year=2019 AND aq.month <=6) OR aq.year=2018 )) THEN 'Quote Not Within Compensation Cycle' ELSE '' END AS Reason_3, CASE WHEN a.quote IN ( select quote FROM reason4 b WHERE ( UPPER( b.EID) = UPPER( a.EID_ADJ))) THEN 'Quote tracking to submitting associate' ELSE '' END AS Reason_4, CASE WHEN a.quote IN ( select distinct b.quote FROM prelim_vs_Adj b INNER JOIN final_adjust c ON ( UPPER( b.EID)<>UPPER( c.EID_ADJ) AND b.quote=c.quote) WHERE b.year IN ( &curyr,&lstyr) AND Prelim_action IN ( 'Prelim_Prod') AND not( Prospect_include='NO')) THEN 'Quote also tracking to other associate( s)' ELSE '' END AS Reason_5, CASE WHEN a.quote IN ( select quote FROM dupcheck) THEN 'Duplicate submissions for this quote' ELSE '' END AS Reason_6, a.quote, a.* FROM final_adjust a LEFT JOIN all_prelim b ON ( a.quote=b.quote AND a.gso_segment=b.segment) ORDER BY Row_N;",GSO_Group_MA_Validation.sas
" CREATE TABLE adj_validation2 AS select a.*, b.reason_2a, b.reason_2b, c.reason_2c FROM adj_validation a LEFT JOIN reason2 b ON ( a.quote=b.quote AND a.quote_status=b.quote_status AND coalesce( a.gso_acct_id,'')=coalesce( b.goaled_account_id,'') AND a.eid_adj = b.eid ) LEFT JOIN reason2c c ON ( a.quote=c.quote AND a.quote_status=c.quote_status AND a.eid_adj=c.eid AND coalesce( a.gso_acct_id,'')=coalesce( c.goaled_account_id,'')) ORDER BY row_N;",GSO_Group_MA_Validation.sas
" CREATE TABLE Quote_to_Assoc AS select distinct a.quote, a.*, b.EID, CASE WHEN a.quote IN ( select distinct b.quote FROM prelim_vs_Adj b INNER JOIN final_adjust c ON ( UPPER( b.EID)<>UPPER( c.EID_ADJ) AND b.quote=c.quote AND b.GOALED_ACCOUNT_ID =c.gso_acct_id) WHERE b.year IN ( &curyr,&lstyr) AND Prelim_action IN ( 'Prelim_Prod') AND not( Prospect_include='NO')) THEN 'Quote also tracking to other associate( s)' ELSE '' END AS Quote_to_Other_Assoc FROM final_adjust a INNER JOIN all_prelim b ON ( a.quote=b.quote AND a.EID_ADJ<>b.EID) HAVING Quote_to_Other_Assoc<>'' ORDER BY Row_N;",GSO_Group_MA_Validation.sas
" CREATE TABLE final_validation AS select Reason_1 ,Reason_1a ,Reason_1b ,Reason_2 ,reason_2a ,reason_2b ,reason_2c ,Reason_3 ,Reason_4 ,Reason_5 ,Reason_6 ,quote ,QUOTE_STATUS ,gso_name ,Row_ID ,EID_ADJ ,Deployed_Account_Name__Account_t ,ADJ_CAT ,RPT_METRIC ,MONTH ,YEAR ,QTR ,MARSHA_CD ,SYS_RECORD ,QUOTE_NAME ,ORIG_DEF_DATE ,ARV_DATE ,ORIG_DEF_RM_NTS ,ORIG_DEF_RM_REV ,QUOTE_CUR_CD ,LOCAL_RV ,Prop_Name ,Brand_Code ,Peak_RN ,REFERRED_BY_EID ,QUOTE_ORIGINATING_MGR_EID ,Hotel_continent ,Hotel_Country ,End_User_Account_Name ,End_User_Account_Continent ,End_User_Account_Country ,end_user_account_ISO ,End_User_Account_City ,End_User_Account_Source_ID ,End_User_Account_Parent ,End_User_Account_Parent_ID ,Intermediary_Account_Name ,Intermediary_Account_Continent ,Intermediary_Account_Country ,int_account_ISO ,Intermediary_Account_City ,Intermediary_Account_Source_ID ,Intermediary_Account_Parent ,Intermediary_Account_Parent_ID ,gso_acct_id ,deployed_month ,gso_continent ,gso_office ,GSO_SEGMENT ,gso_account_role ,deployment_list ,depl_city_grp ,ACH_EADS ,GSO_EADS ,GLOBAL_EADS FROM adj_validation2;",GSO_Group_MA_Validation.sas
"CREATE TABLE ""\\hdqmdm1fpcl3v2\LODG-SMPS\Support\Global Performance Services ( GPS)\Rachel Collins\GSO Man Adj Process-CODED FOLDER DO NOT MOVE\GSO GROUP Man Adj Process-CODED FILE DO NOT MOVE_Q2.xlsx"" AS ( SELECT * FROM final_validation) ;",GSO_Group_MA_Validation.sas
"CREATE TABLE ""\\hdqmdm1fpcl3v2\LODG-SMPS\Support\Global Performance Services ( GPS)\Rachel Collins\GSO Man Adj Process-CODED FOLDER DO NOT MOVE\GSO GROUP Man Adj Process-CODED FILE DO NOT MOVE_Q2.xlsx"" AS ( SELECT * FROM Quote_to_Assoc() ALTER TABLE ""\\hdqmdm1fpcl3v2\LODG-SMPS\Support\Global Performance Services ( GPS)\Rachel Collins\GSO Man Adj Process-CODED FOLDER DO NOT MOVE\GSO GROUP Man Adj Process-CODED FILE DO NOT MOVE_Q2.xlsx"" DROP COLUMN Row_N ;",GSO_Group_MA_Validation.sas
" CREATE TABLE Group_adj_cascade AS select RTRIM( ROW_ID) AS ROW_ID , RTRIM( QUOTE_num) AS Quote , ADJ_CAT , RTRIM( USER_EID) AS EID , RTRIM( MARSHA_CD) AS MARSHA , RTRIM( GSO_ACCT_ID) AS GOALED_ACCOUNT_ID , '' AS QUOTE_STATUS , 1 AS NET_QT_CNT , '' AS DATA_SOURCE , CASE WHEN msd_cred_mo='January' THEN 1 when msd_cred_mo='February' THEN 2 when msd_cred_mo='March' THEN 3 when msd_cred_mo='April' THEN 4 when msd_cred_mo='May' THEN 5 when msd_cred_mo='June' THEN 6 when msd_cred_mo='July' THEN 7 when msd_cred_mo='August' THEN 8 when msd_cred_mo='September' THEN 9 when msd_cred_mo='October' THEN 10 when msd_cred_mo='November' THEN 11 when msd_cred_mo='December' THEN 12 END AS msd_cred_mo , CASE WHEN msd_cred_mo='January' THEN 201901 when msd_cred_mo='February' THEN 201902 when msd_cred_mo='March' THEN 201903 when msd_cred_mo='April' THEN 201904 when msd_cred_mo='May' THEN 201905 when msd_cred_mo='June' THEN 201906 when msd_cred_mo='July' THEN 201907 when msd_cred_mo='August' THEN 201908 when msd_cred_mo='September' THEN 201909 when msd_cred_mo='October' THEN 201910 when msd_cred_mo='November' THEN 201911 when msd_cred_mo='December' THEN 201912 END AS ASOF_YRMO , '' AS GSO_ACCT_NAME , QT_ORIG_DEF_RM_NTS AS RN , QT_ORIG_DEF_RM_REV AS LOCAL_RV , QT_ORIG_DEF_CUR_CD AS QUOTE_CUR_CD , QUOTE_NAME , 'Quotes Not Previously Credited' AS CATEGORY , RTRIM( Deployed_Account_Continent) AS QUOTE_ACCOUNT_REGION , RTRIM( Deployed_Account_Country) AS QUOTE_ACCOUNT_COUNTRY , RTRIM( Deployed_Account_Country_ISO) AS QUOTE_ACCOUNT_COUNTRY_ISO , RTRIM( Deployed_Account_City) AS QUOTE_ACCOUNT_CITY , '' AS ACCOUNT_TYPE , '' AS MA_KEY , 'YES' AS INCLUDE , ADJ_CAT AS INCLUDE_REASON , 'Manual_Adj' AS PRELIM_ACTION , 'Approved MA ' || RTRIM( ROW_ID) AS PRELIM_COMMENTS FROM final_cds_feed WHERE quote_num<>'' AND LTRIM( RTRIM( ADJ_CAT)) IN ( '1. Addendum Block Change','2. Cancellation Revenue Collected', '4. Incorrect Account and/or Intermediary','9. Disconnected Property','5. Non-Definite Status' ) ;",GSO_Group_Pace_Adjustment_NotinPrelim.sas
 CREATE TABLE source_data AS ( SELECT  *  FROM Group_adj_cascade );,GSO_Group_Pace_Adjustment_NotinPrelim.sas
" CREATE TABLE AW_GSO_STG.GRP_MA_BASE_STG (  Row_ID VARCHAR( 50), QUOTE VARCHAR( 16), ADJ_CAT VARCHAR( 100), EID VARCHAR( 255), MARSHA   VARCHAR( 10), GOALED_ACCOUNT_ID VARCHAR( 25), QUOTE_STATUS VARCHAR( 10), NET_QT_CNT integer, DATA_SOURCE VARCHAR( 10), MSD_CRED_MO integer, ASOF_YRMO integer, GSO_ACCT_NAME VARCHAR( 100), RN integer, LOCAL_RV double, QUOTE_CUR_CD VARCHAR( 100), QUOTE_NAME VARCHAR( 100), CATEGORY  VARCHAR( 100), QUOTE_ACCOUNT_REGION VARCHAR( 30), QUOTE_ACCOUNT_COUNTRY VARCHAR( 100), QUOTE_ACCOUNT_COUNTRY_ISO VARCHAR( 100), QUOTE_ACCOUNT_CITY VARCHAR( 100), ACCOUNT_TYPE VARCHAR( 100), MA_KEY VARCHAR( 100), INCLUDE VARCHAR( 8), INCLUDE_REASON VARCHAR( 100), PRELIM_ACTION VARCHAR( 14), PRELIM_COMMENTS VARCHAR( 165) ) ) by odbc ;",GSO_Group_Pace_Adjustment_NotinPrelim.sas
INSERT INTO TABLE AWPROD.GRP_MA_BASE_STG SELECT * FROM work.source_data;,GSO_Group_Pace_Adjustment_NotinPrelim.sas
   TRUNCATE table AW_GSO_STG.GRP_MA_BASE ) by odbc ;,GSO_Group_Pace_Adjustment_NotinPrelim.sas
   INSERT INTO AW_GSO_STG.GRP_MA_BASE Select * FROM AW_GSO_STG.GRP_MA_BASE_STG ) by odbc ;,GSO_Group_Pace_Adjustment_NotinPrelim.sas
   DROP TABLE AW_GSO_STG.GRP_MA_BASE_STG ) by odbc ;,GSO_Group_Pace_Adjustment_NotinPrelim.sas
"   CALL AW_TGT_PROXY_DBO.GRANT_ON_TABLE( 'AW_GSO_STG','GRP_MA_BASE' )  ) by odbc ;",GSO_Group_Pace_Adjustment_NotinPrelim.sas
   ANALYZE TABLE AW_GSO_STG.GRP_MA_BASE COMPUTE STATISTICS FOR ALL COLUMNS TABLESAMPLE SYSTEM( 10 )  ,GSO_Group_Pace_Adjustment_NotinPrelim.sas
 CREATE TABLE fx_conversion AS  (  select * FROM AW_TGT_BUS_DBO.TREASFX_FCST_HIST FX WHERE FX.ASOF_YRMO =EXTRACT(YEAR FROM CURRENT DATE - 1 YEAR) * 100 + 12  ) ;,GSO_Group_Pace_Adjustment_Processing_2019.sas
" CREATE TABLE quotename AS  (  select distinct quote, quote_name FROM AW_GSO_PRD.MI_SW_EVO_GRP_ACH_EADS_GSO_FINAL  ) ;",GSO_Group_Pace_Adjustment_Processing_2019.sas
SELECT DISTINCT * FROM quotename ORDER BY quote;,GSO_Group_Pace_Adjustment_Processing_2019.sas
" CREATE TABLE prelim_prod AS  (  select GSO_ROSTER_KEY, YEAR, MONTH, ASOF_YRMO,GSO_CONTINENT, GSO_OFFICE, GSO_SUB_REGION, SEGMENT, SUB_SEGMENT, POSITION_ID, GOAL_TYPE, ROSTER_ACCOUNT_NAME, SUBMITTED_ACCOUNT_NAME, GOALED_ACCOUNT_ID, GOALED_ACCOUNT_ID_SOURCE, RELTIO_ID, DUNS, INDUSTRY, EID, EID_PROSPECT, ISAC_POSITION_ID, GSO_DB_ID, ASSOCIATE_ROLE_TYPE, POSITION_TYPE, GSO_ACCOUNT_ROLE, DEPLOYMENT_PARAMETER, DEPLOYMENT_ISO, DEPLOYMENT_CITY, DEPLOYMENT_STRATEGY_NOTES, LEADER_POSITION_ID, GSO_DB_ID_LEADER, EID_LEADER, SVP_POSITION_ID, SVP_NAME, VP_POSITION_ID, VP_NAME, LEADER_AREA_TEAM_POSITION_ID, LEADER_AREA_TEAM, SUB_LEADER_1_POSITION_ID, SUB_LEADER_1, SUB_LEADER_2_POSITION_ID, SUB_LEADER_2, QUOTE, QUOTE_NAME, QUOTE_STATUS, MARSHA, BRND_NAME, BRND, DATA_SOURCE, CHAIN, QUOTE_ACCOUNT_REGION, QUOTE_ACCOUNT_COUNTRY, QUOTE_ACCOUNT_COUNTRY_ISO, QUOTE_ACCOUNT_CITY, ULTIMATE_PARENT_URI, ULTIMATE_PARENT_ACCOUNT_NM, ULTIMATE_PARENT_DUNS, IMMEDIATE_PARENT_ACCOUNT_NM, IMMEDIATE_PARENT_DUNS, IMMEDIATE_PARENT_URI, CHILD_ACCOUNT_NM, CHILD_DUNS, CHILD_URI, PROSPECT_INCLUDE, INCLUDE, INCLUDE_REASON, PRELIM_ACTION, PRELIM_COMMENTS, REFERRED_BY_EID, PRIMARY_OPPTY_EID, PROSPECT_QUOTE_FLAG, PROSPECT_INCLUDE_REASON, SUM( NET_QT_CNT) AS NET_QT_CNT, SUM( RN) AS RN, SUM( RV) AS RV, SUM( LOCAL_RV) AS local_rv, SUM( COMPUTED_RV) AS computed_rv FROM (  select GSO_ROSTER_KEY, YEAR, MONTH, ASOF_YRMO, GSO_CONTINENT, GSO_OFFICE, GSO_SUB_REGION, SEGMENT, SUB_SEGMENT, POSITION_ID, GOAL_TYPE, ROSTER_ACCOUNT_NAME, SUBMITTED_ACCOUNT_NAME, GOALED_ACCOUNT_ID, GOALED_ACCOUNT_ID_SOURCE, RELTIO_ID, DUNS, INDUSTRY, EID, EID_PROSPECT, ISAC_POSITION_ID, GSO_DB_ID, ASSOCIATE_ROLE_TYPE, POSITION_TYPE, GSO_ACCOUNT_ROLE, DEPLOYMENT_PARAMETER, DEPLOYMENT_ISO, DEPLOYMENT_CITY, '' AS DEPLOYMENT_STRATEGY_NOTES, LEADER_POSITION_ID, GSO_DB_ID_LEADER, EID_LEADER, SVP_POSITION_ID, SVP_NAME, VP_POSITION_ID, VP_NAME, LEADER_AREA_TEAM_POSITION_ID, LEADER_AREA_TEAM, SUB_LEADER_1_POSITION_ID, SUB_LEADER_1, SUB_LEADER_2_POSITION_ID, SUB_LEADER_2, QUOTE, '' AS QUOTE_NAME, QUOTE_STATUS, MARSHA, BRND_NAME, BRND, DATA_SOURCE, CHAIN, '' AS QUOTE_ACCOUNT_REGION, '' AS QUOTE_ACCOUNT_COUNTRY, '' AS QUOTE_ACCOUNT_COUNTRY_ISO, '' AS QUOTE_ACCOUNT_CITY, ULTIMATE_PARENT_URI, ULTIMATE_PARENT_ACCOUNT_NM, ULTIMATE_PARENT_DUNS, '' AS IMMEDIATE_PARENT_ACCOUNT_NM, '' AS IMMEDIATE_PARENT_DUNS, '' AS IMMEDIATE_PARENT_URI, '' AS CHILD_ACCOUNT_NM, '' AS CHILD_DUNS, '' AS CHILD_URI, '' AS PROSPECT_INCLUDE, INCLUDE, '' AS INCLUDE_REASON, 'Prelim_Prod' AS PRELIM_ACTION, '' AS PRELIM_COMMENTS, '' AS REFERRED_BY_EID, '' AS PRIMARY_OPPTY_EID, '' AS PROSPECT_QUOTE_FLAG, '' AS PROSPECT_INCLUDE_REASON, SUM( NET_QT_CNT) AS NET_QT_CNT, SUM( RN) AS RN, SUM( RV) AS RV, SUM( LOCAL_RV) AS local_rv, SUM( COMPUTED_RV) AS computed_rv FROM AW_GSO_PRD.MI_SW_EVO_GRP_ACH_EADS_GSO_FINAL WHERE prelim_action IN ( 'Prelim_Prod','Manual_Adj') AND ( segment<>'Prospect' OR ( PROSPECT_INCLUDE='YES' AND segment='Prospect')) AND ( year=2018 OR year=2019) GROUP BY GSO_ROSTER_KEY, YEAR, MONTH, ASOF_YRMO, GSO_CONTINENT, GSO_OFFICE, GSO_SUB_REGION, SEGMENT, SUB_SEGMENT, POSITION_ID, GOAL_TYPE, ROSTER_ACCOUNT_NAME, SUBMITTED_ACCOUNT_NAME, GOALED_ACCOUNT_ID, GOALED_ACCOUNT_ID_SOURCE, RELTIO_ID, DUNS, INDUSTRY, EID, EID_PROSPECT, ISAC_POSITION_ID, GSO_DB_ID, ASSOCIATE_ROLE_TYPE, POSITION_TYPE, GSO_ACCOUNT_ROLE, DEPLOYMENT_PARAMETER, DEPLOYMENT_ISO, DEPLOYMENT_CITY, DEPLOYMENT_STRATEGY_NOTES, LEADER_POSITION_ID, GSO_DB_ID_LEADER, EID_LEADER, SVP_POSITION_ID, SVP_NAME, VP_POSITION_ID, VP_NAME, LEADER_AREA_TEAM_POSITION_ID, LEADER_AREA_TEAM, SUB_LEADER_1_POSITION_ID, SUB_LEADER_1, SUB_LEADER_2_POSITION_ID, SUB_LEADER_2, QUOTE, QUOTE_NAME, QUOTE_STATUS, MARSHA, BRND_NAME, BRND, DATA_SOURCE, CHAIN, QUOTE_ACCOUNT_REGION, QUOTE_ACCOUNT_COUNTRY, QUOTE_ACCOUNT_COUNTRY_ISO, QUOTE_ACCOUNT_CITY, ULTIMATE_PARENT_URI, ULTIMATE_PARENT_ACCOUNT_NM, ULTIMATE_PARENT_DUNS, PROSPECT_INCLUDE, IMMEDIATE_PARENT_ACCOUNT_NM, IMMEDIATE_PARENT_DUNS, IMMEDIATE_PARENT_URI, CHILD_ACCOUNT_NM, CHILD_DUNS, CHILD_URI, INCLUDE, INCLUDE_REASON, PRELIM_ACTION, PRELIM_COMMENTS, REFERRED_BY_EID, PRIMARY_OPPTY_EID, PROSPECT_QUOTE_FLAG, PROSPECT_INCLUDE_REASON ) GROUP BY GSO_ROSTER_KEY, YEAR, MONTH, ASOF_YRMO, GSO_CONTINENT, GSO_OFFICE, GSO_SUB_REGION, SEGMENT, SUB_SEGMENT, POSITION_ID, GOAL_TYPE, ROSTER_ACCOUNT_NAME, SUBMITTED_ACCOUNT_NAME, GOALED_ACCOUNT_ID, GOALED_ACCOUNT_ID_SOURCE, RELTIO_ID, DUNS, INDUSTRY, EID, EID_PROSPECT, ISAC_POSITION_ID, GSO_DB_ID, ASSOCIATE_ROLE_TYPE, POSITION_TYPE, GSO_ACCOUNT_ROLE, DEPLOYMENT_PARAMETER, DEPLOYMENT_ISO, DEPLOYMENT_CITY, DEPLOYMENT_STRATEGY_NOTES, LEADER_POSITION_ID, GSO_DB_ID_LEADER, EID_LEADER, SVP_POSITION_ID, SVP_NAME, VP_POSITION_ID, VP_NAME, LEADER_AREA_TEAM_POSITION_ID, LEADER_AREA_TEAM, SUB_LEADER_1_POSITION_ID, SUB_LEADER_1, SUB_LEADER_2_POSITION_ID, SUB_LEADER_2, QUOTE, QUOTE_NAME, QUOTE_STATUS, MARSHA, BRND_NAME, BRND, DATA_SOURCE, CHAIN, QUOTE_ACCOUNT_REGION, QUOTE_ACCOUNT_COUNTRY, QUOTE_ACCOUNT_COUNTRY_ISO, QUOTE_ACCOUNT_CITY, ULTIMATE_PARENT_URI, ULTIMATE_PARENT_ACCOUNT_NM, ULTIMATE_PARENT_DUNS, PROSPECT_INCLUDE, IMMEDIATE_PARENT_ACCOUNT_NM, IMMEDIATE_PARENT_DUNS, IMMEDIATE_PARENT_URI, CHILD_ACCOUNT_NM, CHILD_DUNS, CHILD_URI, INCLUDE, INCLUDE_REASON, PRELIM_ACTION, PRELIM_COMMENTS, REFERRED_BY_EID, PRIMARY_OPPTY_EID, PROSPECT_QUOTE_FLAG, PROSPECT_INCLUDE_REASON  ) ;",GSO_Group_Pace_Adjustment_Processing_2019.sas
" CREATE TABLE prelim_prod_final AS select b.quote_name, a.* FROM prelim_prod a LEFT JOIN quotename b ON ( a.quote=b.quote ) ;",GSO_Group_Pace_Adjustment_Processing_2019.sas
" CREATE TABLE all_GSO_quotes AS  (  select * FROM AW_GSO_PRD.MI_SW_EVO_GRP_ACH_EADS_GSO_FINAL WHERE year IN ( 2018,2019) ) ;",GSO_Group_Pace_Adjustment_Processing_2019.sas
 CREATE TABLE non_prelim_prod4 AS select * FROM all_GSO_quotes WHERE quote not IN ( select distinct quote FROM prelim_prod_final ) ;,GSO_Group_Pace_Adjustment_Processing_2019.sas
 CREATE TABLE all_prelim AS ( SELECT  *  FROM non_prelim_prod4 UNION ALL SELECT  *  FROM prelim_prod_final);,GSO_Group_Pace_Adjustment_Processing_2019.sas
" CREATE TABLE adj_final AS ( SELECT  *  , _n_ AS row_N  FROM adj_final  WHERE UPPER( GPS_Approval)='YES' AND row_id<>:'');",GSO_Group_Pace_Adjustment_Processing_2019.sas
"CREATE TABLE prospect_add AS ( SELECT  *  , UPPER( user_eid ) AS user_eid  FROM adj_final  WHERE Row_ID<>'' AND LTRIM( RTRIM( ADJ_CAT))='7. Prospect Business Adjustment' AND LTRIM( RTRIM( ___Prospect___Tracking_Manager_F))='c. Tracking Manager Issue');",GSO_Group_Pace_Adjustment_Processing_2019.sas
"CREATE TABLE adj_others AS ( SELECT  *  , UPPER( user_eid ) AS user_eid  FROM adj_final  WHERE Row_ID<>'' AND LTRIM( RTRIM( ADJ_CAT))<>'7. Prospect Business Adjustment' AND LTRIM( RTRIM( ___Prospect___Tracking_Manager_F))<>'c. Tracking Manager Issue' AND LTRIM( RTRIM( ADJ_CAT)) not IN ( '9. Disconnected Property','5. Non-Definite Status'));",GSO_Group_Pace_Adjustment_Processing_2019.sas
"CREATE TABLE adj_disc AS ( SELECT  *  , UPPER( user_eid ) AS user_eid  FROM adj_final  WHERE Row_ID<>'' AND LTRIM( RTRIM( ADJ_CAT)) IN ( '9. Disconnected Property','5. Non-Definite Status'));",GSO_Group_Pace_Adjustment_Processing_2019.sas
 CREATE TABLE prospect_set AS  (  select * FROM AW_GSO_PRD.MI_SW_EVO_GROUP_EADS WHERE quote IN ( %prospect) UNION select * FROM AW_GSO_STG.MI_GROUP_EADS_PROSPECT WHERE quote IN ( %prospect)  ) ;,GSO_Group_Pace_Adjustment_Processing_2019.sas
 CREATE TABLE prospect_notfound AS select * FROM prospect_add WHERE quote_num not IN ( select quote FROM prospect_set ) ;,GSO_Group_Pace_Adjustment_Processing_2019.sas
"CREATE TABLE prospect_notfound AS ( SELECT  *, QT_ORIG_DEF_CUR_CD AS currency_cd, 2019 AS year , CASE WHEN  msd_cred_mo='January'  THEN 1 WHEN  msd_cred_mo='February'  THEN 2 WHEN  msd_cred_mo='March'  THEN 3 WHEN  msd_cred_mo='April'  THEN 4 WHEN  msd_cred_mo='May'  THEN 5 WHEN  msd_cred_mo='June'  THEN 6 WHEN  msd_cred_mo='July'  THEN 7 WHEN  msd_cred_mo='August'  THEN 8 WHEN  msd_cred_mo='September'  THEN 9 WHEN  msd_cred_mo='October'  THEN 10 WHEN  msd_cred_mo='November'  THEN 11 WHEN  msd_cred_mo='December'  THEN 12 END AS month FROM prospect_notfound );",GSO_Group_Pace_Adjustment_Processing_2019.sas
"ALTER TABLE prospect_notfound DROP COLUMN GSO_ACCT_ROLE ,  GSO_DPL_PARAM ,  GSO_SEGMENT ,  ORIG_DEF_DATE ,  ARV_DATE ;",GSO_Group_Pace_Adjustment_Processing_2019.sas
" CREATE TABLE all_prospect_add AS ( SELECT  *  FROM prospect_set UNION ALL SELECT  *, quote_num AS quote FROM prospect_notfound);",GSO_Group_Pace_Adjustment_Processing_2019.sas
" CREATE TABLE prospect_rollup AS  (  SELECT DISTINCT GSO_ROSTER_KEY , EID_PROSPECT , EID , gso_continent , gso_office , gso_sub_region , segment , sub_segment , report_month , gso_db_id , gso_account_role , POSITION_ID , goal_type , associate_role_type , position_type , Roster_account_name , submitted_account_name , deployment_parameter , LEADER_POSITION_ID , GSO_DB_ID_LEADER , EID_LEADER , SVP_POSITION_ID , SVP_NAME , VP_POSITION_ID , VP_NAME , LEADER_AREA_TEAM_POSITION_ID , LEADER_AREA_TEAM , SUB_LEADER_1_POSITION_ID , SUB_LEADER_1 , SUB_LEADER_2_POSITION_ID , SUB_LEADER_2 FROM AW_GSO_STG.GSO_ROSTER_BY_MONTH WHERE SEGMENT IN ( 'Prospect')  ) ;",GSO_Group_Pace_Adjustment_Processing_2019.sas
" CREATE TABLE prospect_adj AS select distinct d.*, a.*, b.*, c.fxtocusd FROM prospect_add a INNER JOIN all_prospect_add b ON ( a.quote_num=b.quote) INNER JOIN fx_conversion c ON ( c.curr_code=b.currency_cd AND b.month=c.mon) INNER JOIN prospect_rollup d ON ( d.eid=a.user_eid AND b.month=d.report_month ) ;",GSO_Group_Pace_Adjustment_Processing_2019.sas
 CREATE TABLE adj_final_all AS ( SELECT  *  FROM prospect_set UNION ALL SELECT  *  FROM adj_others UNION ALL SELECT  *  FROM adj_disc);,GSO_Group_Pace_Adjustment_Processing_2019.sas
" CREATE TABLE apply_adj AS select a.*, b.*, c.fxtocusd FROM all_prelim a INNER JOIN adj_final_all b ON ( a.quote=b.quote_num) LEFT JOIN fx_conversion c ON ( c.curr_code=b.QT_ORIG_DEF_CUR_CD AND a.month=c.mon ) ;",GSO_Group_Pace_Adjustment_Processing_2019.sas
" CREATE TABLE apply_adj_v2 AS ( SELECT  *  , 'Manual Adjustment' AS Prospect_Include_Reason  FROM apply_adj_v2  WHERE segment='Prospect');",GSO_Group_Pace_Adjustment_Processing_2019.sas
 CREATE TABLE feed_CDS AS select * FROM adj_final WHERE row_id not IN ( select row_id FROM apply_adj_v2 ) ;,GSO_Group_Pace_Adjustment_Processing_2019.sas
 CREATE TABLE final_cds AS ( SELECT  *  FROM feed_CDS UNION ALL SELECT  *  FROM incorrect_acct);,GSO_Group_Pace_Adjustment_Processing_2019.sas
CREATE TABLE final_cds_feed AS (SELECT DISTINCT * FROM final_cds ORDER BY row_id);,GSO_Group_Pace_Adjustment_Processing_2019.sas
 CREATE TABLE grp_ach_temp AS  (  select * FROM AW_GSO_STG.MI_SW_EVO_GRP_ACH_TEMP WHERE year is not null  ) ;,GSO_Group_Pace_Adjustment_Processing_2019.sas
" CREATE TABLE ach_temp AS ( SELECT  *  , include_reason AS adj_cat  FROM grp_ach_temp );",GSO_Group_Pace_Adjustment_Processing_2019.sas
 CREATE TABLE final_adjust AS ( SELECT  *  FROM apply_adj_v2 UNION ALL SELECT  *  FROM ach_temp);,GSO_Group_Pace_Adjustment_Processing_2019.sas
" CREATE TABLE groupadj.group_adj_Q2_2019 AS select GSO_ROSTER_KEY , ROW_ID , 2019 AS year , CASE WHEN year=2018 THEN 201906 when year=2019 AND month=1 THEN 201901 when year=2019 AND month=2 THEN 201902 when year=2019 AND month=3 THEN 201903 when year=2019 AND month=4 THEN 201904 when year=2019 AND month=5 THEN 201905 when year=2019 AND month=6 THEN 201906 when year=2019 AND month=7 THEN 201907 when year=2019 AND month=8 THEN 201908 when year=2019 AND month=9 THEN 201909 when year=2019 AND month=10 THEN 201910 when year=2019 AND month=11 THEN 201911 when year=2019 AND month=12 THEN 201912 END AS ASOF_YRMO , CASE WHEN year=2018 THEN 6 when month IN ( 1,2,3) THEN 6 ELSE month END AS MONTH , GSO_CONTINENT , GSO_OFFICE , GSO_SUB_REGION , SEGMENT , SUB_SEGMENT , POSITION_ID , GOAL_TYPE , ROSTER_ACCOUNT_NAME , SUBMITTED_ACCOUNT_NAME , GOALED_ACCOUNT_ID , GOALED_ACCOUNT_ID_SOURCE , RELTIO_ID , DUNS , INDUSTRY , EID , EID_PROSPECT , ISAC_POSITION_ID , GSO_DB_ID , ASSOCIATE_ROLE_TYPE , POSITION_TYPE , GSO_ACCOUNT_ROLE , DEPLOYMENT_PARAMETER , DEPLOYMENT_ISO , DEPLOYMENT_CITY , DEPLOYMENT_STRATEGY_NOTES , LEADER_POSITION_ID , GSO_DB_ID_LEADER , EID_LEADER , SVP_POSITION_ID , SVP_NAME , VP_POSITION_ID , VP_NAME , LEADER_AREA_TEAM_POSITION_ID , LEADER_AREA_TEAM , SUB_LEADER_1_POSITION_ID , SUB_LEADER_1 , SUB_LEADER_2_POSITION_ID , SUB_LEADER_2 , QUOTE , QUOTE_NAME , QUOTE_STATUS , 0 AS NET_QT_CNT , MARSHA , BRND_NAME , BRND , DATA_SOURCE , CHAIN , QUOTE_ACCOUNT_REGION , QUOTE_ACCOUNT_COUNTRY , QUOTE_ACCOUNT_COUNTRY_ISO , QUOTE_ACCOUNT_CITY , INCLUDE , INCLUDE_REASON , PRELIM_ACTION , PRELIM_COMMENTS , REFERRED_BY_EID , PRIMARY_OPPTY_EID , PROSPECT_QUOTE_FLAG , PROSPECT_INCLUDE , PROSPECT_INCLUDE_REASON , ULTIMATE_PARENT_ACCOUNT_NM , ULTIMATE_PARENT_DUNS , ULTIMATE_PARENT_URI , IMMEDIATE_PARENT_ACCOUNT_NM , IMMEDIATE_PARENT_DUNS , IMMEDIATE_PARENT_URI , CHILD_ACCOUNT_NM , CHILD_DUNS , CHILD_URI , RN , RV , LOCAL_RV , COMPUTED_RV FROM final_adjust;",GSO_Group_Pace_Adjustment_Processing_2019.sas
"CREATE TABLE Adj_Report AS ( SELECT  * , CASE WHEN  b  THEN 'Y' END AS Processed FROM apply_adj UNION ALL SELECT  * , CASE WHEN  b  THEN 'Y' END AS Processed FROM final_adjust);",GSO_Group_Pace_Adjustment_Processing_2019.sas
"ALTER TABLE Adj_Report DROP COLUMN report_month ,  unique_ma_id ,  DUNS ,  industry ,  deployment_strategy_notes ,  isac_id ,  isac_id_int ,  sa_notes ,  ad_notes ;",GSO_Group_Pace_Adjustment_Processing_2019.sas
 CREATE TABLE adj_not_proc AS select * FROM adj_final WHERE row_id not IN ( select row_id FROM final_adjust  ) ;,GSO_Group_Pace_Adjustment_Processing_2019.sas
 CREATE TABLE adj_proc AS select * FROM adj_final WHERE row_id IN ( select row_id FROM final_adjust  ) ;,GSO_Group_Pace_Adjustment_Processing_2019.sas
"CREATE TABLE ""\\hdqmdm1fpcl3v2\LODG-SMPS\Support\Global Performance Services ( GPS)\Rachel Collins\GSO Man Adj Process-CODED FOLDER DO NOT MOVE\Group_MA_Post_Process_Report_Q2_2019_FINAL.xlsx"" AS ( SELECT * FROM Adj_Report) ;",GSO_Group_Pace_Adjustment_Processing_2019.sas
"CREATE TABLE ""\\hdqmdm1fpcl3v2\LODG-SMPS\Support\Global Performance Services ( GPS)\Rachel Collins\GSO Man Adj Process-CODED FOLDER DO NOT MOVE\Group_MA_Post_Process_Report_Q2_2019_FINAL.xlsx"" AS ( SELECT * FROM adj_proc) ;",GSO_Group_Pace_Adjustment_Processing_2019.sas
"CREATE TABLE ""\\hdqmdm1fpcl3v2\LODG-SMPS\Support\Global Performance Services ( GPS)\Rachel Collins\GSO Man Adj Process-CODED FOLDER DO NOT MOVE\Group_MA_Post_Process_Report_Q2_2019_FINAL.xlsx"" AS ( SELECT * FROM adj_not_proc) ;",GSO_Group_Pace_Adjustment_Processing_2019.sas
CREATE TABLE source_data AS ( SELECT  *  FROM groupadj.group_adj_Q2_2019 );,GSO_Group_Pace_Adjustment_Processing_2019.sas
ALTER TABLE source_data DROP COLUMN Row_id ;,GSO_Group_Pace_Adjustment_Processing_2019.sas
" CREATE TABLE AW_GSO_STG.MI_SW_EVO_GRP_ACH_EADS_GSO_STG (  GSO_ROSTER_KEY VARCHAR( 255), YEAR integer, MONTH integer, ASOF_YRMO integer, GSO_CONTINENT VARCHAR( 255), GSO_OFFICE VARCHAR( 255), GSO_SUB_REGION VARCHAR( 255), SEGMENT VARCHAR( 255), SUB_SEGMENT VARCHAR( 255), POSITION_ID VARCHAR( 255), GOAL_TYPE VARCHAR( 255), ROSTER_ACCOUNT_NAME VARCHAR( 255), SUBMITTED_ACCOUNT_NAME VARCHAR( 255), GOALED_ACCOUNT_ID VARCHAR( 255), GOALED_ACCOUNT_ID_SOURCE VARCHAR( 255), RELTIO_ID VARCHAR( 255), DUNS VARCHAR( 255), INDUSTRY VARCHAR( 255), EID VARCHAR( 255), EID_PROSPECT VARCHAR( 255), ISAC_POSITION_ID VARCHAR( 255), GSO_DB_ID integer, ASSOCIATE_ROLE_TYPE VARCHAR( 255), POSITION_TYPE VARCHAR( 255), GSO_ACCOUNT_ROLE VARCHAR( 255), DEPLOYMENT_PARAMETER VARCHAR( 255), DEPLOYMENT_ISO VARCHAR( 255), DEPLOYMENT_CITY VARCHAR( 255), DEPLOYMENT_STRATEGY_NOTES VARCHAR( 255), LEADER_POSITION_ID VARCHAR( 255), GSO_DB_ID_LEADER integer, EID_LEADER VARCHAR( 255), SVP_POSITION_ID VARCHAR( 255), SVP_NAME VARCHAR( 255), VP_POSITION_ID VARCHAR( 255), VP_NAME VARCHAR( 255), LEADER_AREA_TEAM_POSITION_ID VARCHAR( 255), LEADER_AREA_TEAM VARCHAR( 255), SUB_LEADER_1_POSITION_ID VARCHAR( 255), SUB_LEADER_1 VARCHAR( 255), SUB_LEADER_2_POSITION_ID VARCHAR( 255), SUB_LEADER_2 VARCHAR( 255), QUOTE VARCHAR( 16), QUOTE_NAME VARCHAR( 255), QUOTE_STATUS VARCHAR( 10), NET_QT_CNT integer, MARSHA VARCHAR( 10), BRND_NAME VARCHAR( 33), BRND VARCHAR( 3), DATA_SOURCE VARCHAR( 10), CHAIN VARCHAR( 2), QUOTE_ACCOUNT_REGION VARCHAR( 30), QUOTE_ACCOUNT_COUNTRY VARCHAR( 100), QUOTE_ACCOUNT_COUNTRY_ISO VARCHAR( 100), QUOTE_ACCOUNT_CITY VARCHAR( 100), INCLUDE VARCHAR( 8), INCLUDE_REASON VARCHAR( 100), PRELIM_ACTION VARCHAR( 14), PRELIM_COMMENTS VARCHAR( 165), REFERRED_BY_EID VARCHAR( 100), PRIMARY_OPPTY_EID VARCHAR( 100), PROSPECT_QUOTE_FLAG VARCHAR( 1), PROSPECT_INCLUDE VARCHAR( 3), PROSPECT_INCLUDE_REASON VARCHAR( 97), ULTIMATE_PARENT_ACCOUNT_NM VARCHAR( 268), ULTIMATE_PARENT_DUNS VARCHAR( 268), ULTIMATE_PARENT_URI VARCHAR( 25), IMMEDIATE_PARENT_ACCOUNT_NM VARCHAR( 268), IMMEDIATE_PARENT_DUNS VARCHAR( 268), IMMEDIATE_PARENT_URI VARCHAR( 25), CHILD_ACCOUNT_NM VARCHAR( 268), CHILD_DUNS VARCHAR( 268), CHILD_URI VARCHAR( 25), RN integer, RV double, LOCAL_RV double, COMPUTED_RV DOUBLE ) ) by odbc ;",GSO_Group_Pace_Adjustment_Processing_2019.sas
INSERT INTO TABLE AWPROD.MI_SW_EVO_GRP_ACH_EADS_GSO_STG SELECT * FROM work.source_data;,GSO_Group_Pace_Adjustment_Processing_2019.sas
   INSERT INTO AW_GSO_STG.MI_SW_EVO_GRP_ACH_EADS_GSO_ADJ Select * FROM AW_GSO_STG.MI_SW_EVO_GRP_ACH_EADS_GSO_STG ) by odbc ;,GSO_Group_Pace_Adjustment_Processing_2019.sas
   DROP TABLE AW_GSO_STG.MI_SW_EVO_GRP_ACH_EADS_GSO_STG ) by odbc ;,GSO_Group_Pace_Adjustment_Processing_2019.sas
"   CALL AW_TGT_PROXY_DBO.GRANT_ON_TABLE( 'AW_GSO_STG','MI_SW_EVO_GRP_ACH_EADS_GSO_ADJ' )  ) by odbc ;",GSO_Group_Pace_Adjustment_Processing_2019.sas
   ANALYZE TABLE AW_GSO_STG.MI_SW_EVO_GRP_ACH_EADS_GSO_ADJ COMPUTE STATISTICS FOR ALL COLUMNS TABLESAMPLE SYSTEM( 10 )  ,GSO_Group_Pace_Adjustment_Processing_2019.sas
"CREATE TABLE man_adj_source AS ( SELECT  *, Reason_4_new AS Reason_4, Reason_5_new AS Reason_5, CAST( Reason_4, $30.  ) AS Reason_4_new , CAST( Reason_5, $30.  ) AS Reason_5_new  FROM man_adj_source  WHERE row_id<>' ');",GSO_TRN_ADJ_FINAL_VALIDATION.sas
"ALTER TABLE man_adj_source DROP COLUMN Reason_4 ,  Reason_5 ;",GSO_TRN_ADJ_FINAL_VALIDATION.sas
" CREATE TABLE man_adj AS ( SELECT  *  , FORMAT(Reason_1, VARCHAR(30)) AS Reason_1 , FORMAT(Reason_2, VARCHAR(30)) AS Reason_2 , FORMAT(Reason_3, VARCHAR(30)) AS Reason_3 , FORMAT(Reason_4, VARCHAR(30)) AS Reason_4 , FORMAT(row_id, INT)  AS row_id , UPPER( Marsha_Code_ ) AS Marsha_Code_ , UPPER( Account_Name_ ) AS Account_Name_ , UPPER( REVENUECURRENCYCODE_Mustmatchwha ) AS REVENUECURRENCYCODE_Mustmatchwha  FROM man_adj_source );",GSO_TRN_ADJ_FINAL_VALIDATION.sas
 CREATE TABLE curr_ref AS select distinct( curr_code) FROM aw_tgt.treasfx_fcst;,GSO_TRN_ADJ_FINAL_VALIDATION.sas
" CREATE TABLE man_adj2 AS select a.* , b.* , c.marsha AS plu_marsha FROM Man_adj a LEFT JOIN Curr_ref b ON a.REVENUECURRENCYCODE_Mustmatchwha=b.curr_code LEFT JOIN aw_tgt.property_master c ON a.Marsha_Code_=c.marsha;",GSO_TRN_ADJ_FINAL_VALIDATION.sas
"SELECT * FROM Man_adj2 ORDER BY Marsha_Code_ ,Account_Name_ ,Month_Impacted_ ,Year_Applied;",GSO_TRN_ADJ_FINAL_VALIDATION.sas
" CREATE TABLE errors AS ( SELECT  *  , Marsha_Code_||Account_Name_||Month_Impacted_||Year_Impacted AS concatvbl  FROM Man_adj2 );",GSO_TRN_ADJ_FINAL_VALIDATION.sas
SELECT * FROM errors ORDER BY concatvbl;,GSO_TRN_ADJ_FINAL_VALIDATION.sas
" CREATE TABLE Man_adj3 AS ( SELECT   *  , first(concatvbl) AS first_id , last(concatvbl) AS last_id , CASE WHEN  not ( first_id = 1 AND last_id = 1)  THEN 1 ELSE 0 END AS dup, GROUP BY concatvbl ORDER BY concatvbl )  FROM errors );",GSO_TRN_ADJ_FINAL_VALIDATION.sas
" UPDATE man_adj3 set Reason_1 = ( CASE WHEN plu_marsha = '' THEN 'Invalid Marsha Code' ELSE '' END), Reason_2 = ( CASE WHEN curr_code = '' THEN 'Invalid Currency Code' ELSE '' END), Reason_3 = ( CASE WHEN dup = 1 THEN 'Multiple Submissions' ELSE '' END), Reason_4 = ( CASE WHEN UPPER( Segment_) not IN ( 'CORPORATE', 'CORPORATE-EXTENDED STAY', 'AIRLINE', 'GOVERNMENT') THEN 'Invalid Segment' ELSE '' END) ;",GSO_TRN_ADJ_FINAL_VALIDATION.sas
SELECT * FROM Man_adj3 ORDER BY Row_ID;,GSO_TRN_ADJ_FINAL_VALIDATION.sas
"CREATE TABLE ""\\hdqmdm1fpcl3v2\LODG-SMPS\Support\Global Performance Services ( GPS)\Rachel Collins\GSO Man Adj Process-CODED FOLDER DO NOT MOVE\GSO TRANSIENT Man Adj Process-CODED FILE DO NOT MOVE_Q2_Final.xlsx"" AS ( SELECT * FROM man_adj3) ;",GSO_TRN_ADJ_FINAL_VALIDATION.sas
" CREATE TABLE gso_corp_roster AS  (  select * FROM AW_GSO_PRD.GSO_ROSTER_BY_MONTH WHERE goal_type='Stayed_Paid' AND segment IN ( 'Corporate','Government','Airline') AND nvl( SEG_TYPE_EXCEPTION,'') <> 'Y' ) ;",GSO_TRN_ADJ_INITIAL_VALIDATION.sas
" CREATE TABLE adjustments AS ( SELECT  *  , UPPER( Segment_Type_ ) AS seg_type , CASE WHEN  Month_Impacted_='January'  THEN 1 WHEN  Month_Impacted_='February'  THEN 2 WHEN  Month_Impacted_='March'  THEN 3 WHEN  Month_Impacted_='April'  THEN 4 WHEN  Month_Impacted_='May'  THEN 5 WHEN  Month_Impacted_='June'  THEN 6 WHEN  Month_Impacted_='July'  THEN 7 WHEN  Month_Impacted_='August'  THEN 8 WHEN  Month_Impacted_='September'  THEN 9 WHEN  Month_Impacted_='October'  THEN 10 WHEN  Month_Impacted_='November'  THEN 11 WHEN  Month_Impacted_='December'  THEN 12 END AS month FROM man_adj_source );",GSO_TRN_ADJ_INITIAL_VALIDATION.sas
" CREATE TABLE adjustments_final AS select distinct e.associate AS associate_name, a.*, c.position_id, c.GOALED_ACCOUNT_ID, c.report_month AS deployed_month, c.gso_continent AS gso_continent, c.gso_office AS gso_office, c.segment AS GSO_SEGMENT, c.gso_account_role AS gso_account_role, c.associate_role_type, c.deployment_parameter AS deployment_parameter, c.deployment_city AS depl_city, c.sub_segment AS sub_segment, c.gso_roster_key AS gso_roster_key FROM adjustments a LEFT JOIN gso_corp_roster c ON (  c.report_month=a.month AND UPPER( a.Associate_EID_)=UPPER( c.eid) AND UPPER( a.Account_Name_)=UPPER( c.ROSTER_ACCOUNT_NAME)) AND a.seg_type=c.seg_type LEFT JOIN associate e ON ( UPPER( a.Associate_EID_)=UPPER( e.EID)) ORDER BY row_id;",GSO_TRN_ADJ_INITIAL_VALIDATION.sas
"CREATE TABLE transpose AS ( SELECT   *  , CONCAT_WS( ',',country_deployment, deployment_parameter ) AS country_deployment , CASE WHEN  first(row_id ) THEN ' ' END AS country_deployment, LAST(row_id) OVER ( PARTITION BY row_id GROUP BY row_id ORDER BY row_id )  FROM adjustments_final );",GSO_TRN_ADJ_INITIAL_VALIDATION.sas
ALTER TABLE transpose DROP COLUMN deployment_parameter ;,GSO_TRN_ADJ_INITIAL_VALIDATION.sas
" CREATE TABLE man_adj AS ( SELECT  *  , FORMAT(Reason_1, VARCHAR(30)) AS Reason_1 , FORMAT(Reason_2, VARCHAR(30)) AS Reason_2 , FORMAT(Reason_3, VARCHAR(30)) AS Reason_3 , FORMAT(Reason_4, VARCHAR(30)) AS Reason_4 , UPPER( Marsha_Code_ ) AS Marsha_Code_ , UPPER( Account_Name_ ) AS Account_Name_ , UPPER( REVENUE_CURRENCY_CODE__Must_matc ) AS REVENUE_CURRENCY_CODE__Must_matc  FROM transpose );",GSO_TRN_ADJ_INITIAL_VALIDATION.sas
 CREATE TABLE curr_ref AS select distinct( curr_code) FROM aw_tgt.treasfx_fcst;,GSO_TRN_ADJ_INITIAL_VALIDATION.sas
" CREATE TABLE man_adj2 AS select a.* , b.* , c.marsha AS plu_marsha FROM Man_adj a LEFT JOIN Curr_ref b ON a.REVENUE_CURRENCY_CODE__Must_matc=b.curr_code LEFT JOIN aw_tgt.property_master c ON a.Marsha_Code_=c.marsha;",GSO_TRN_ADJ_INITIAL_VALIDATION.sas
"SELECT * FROM Man_adj2 ORDER BY Marsha_Code_ ,Account_Name_ ,Month_Impacted_ ,Year_Applied;",GSO_TRN_ADJ_INITIAL_VALIDATION.sas
" CREATE TABLE errors AS ( SELECT  *  , Marsha_Code_||Account_Name_||Month_Impacted_||Year_Impacted AS concatvbl  FROM Man_adj2 );",GSO_TRN_ADJ_INITIAL_VALIDATION.sas
SELECT * FROM errors ORDER BY concatvbl;,GSO_TRN_ADJ_INITIAL_VALIDATION.sas
" CREATE TABLE Man_adj3 AS ( SELECT   *  , first(concatvbl) AS first_id , last(concatvbl) AS last_id , CASE WHEN  not ( first_id = 1 AND last_id = 1)  THEN 1 ELSE 0 END AS dup, GROUP BY concatvbl ORDER BY concatvbl )  FROM errors );",GSO_TRN_ADJ_INITIAL_VALIDATION.sas
" UPDATE man_adj3 set Reason_1 = ( CASE WHEN plu_marsha = '' THEN 'Invalid Marsha Code' ELSE '' END), Reason_2 = ( CASE WHEN curr_code = '' THEN 'Invalid Currency Code' ELSE '' END), Reason_3 = ( CASE WHEN dup = 1 THEN 'Multiple Submissions' ELSE '' END) ;",GSO_TRN_ADJ_INITIAL_VALIDATION.sas
SELECT * FROM Man_adj3 ORDER BY Row_ID;,GSO_TRN_ADJ_INITIAL_VALIDATION.sas
" CREATE TABLE man_adj4 AS select Row_id, Reason_1, Reason_2, Reason_3, Reason_4, Chain___Marriott_or_Starwood, Month_Impacted_, Year_Impacted, Month_Applied_, Year_Applied, GSO_SEGMENT, seg_type, position_id, gso_office, associate_name, Associate_EID_, associate_role_type, Marsha_Code_, Account_Name_, GOALED_ACCOUNT_ID AS account_id, _1__I_have_verified_unmatched_pr, _2__Documentation_is_attached_to, _3__System_technical_issue_cause, Mini_Hotel_Contract_Code, gso_account_role, country_deployment, Room_Nights_, Room_Revenue_, REVENUE_CURRENCY_CODE__Must_matc, Name_of_Unmatched_listing_to_sub, SourceID_of_Unmatched_listing_to, Reason_for_Manual_Adjustment_, Submission_Notes_, GPS_Approved, GPS_Comments FROM Man_adj3;",GSO_TRN_ADJ_INITIAL_VALIDATION.sas
"CREATE TABLE ""\\hdqmdm1fpcl3v2\LODG-SMPS\Support\Global Performance Services ( GPS)\Rachel Collins\GSO Man Adj Process-CODED FOLDER DO NOT MOVE\GSO TRANSIENT Man Adj Process-CODED FILE DO NOT MOVE_Q2.xlsx"" AS ( SELECT * FROM man_adj4) ;",GSO_TRN_ADJ_INITIAL_VALIDATION.sas
" CREATE TABLE archive.trn_ma_base_source_Q2_2019 AS select a.ROW_ID , a.Year_Impacted AS YEAR , CASE WHEN a.Month_Impacted_='January' THEN 1 WHEN a.Month_Impacted_='February' THEN 2 WHEN a.Month_Impacted_='March' THEN 3 WHEN a.Month_Impacted_='April' THEN 4 WHEN a.Month_Impacted_='May' THEN 5 WHEN a.Month_Impacted_='June' THEN 6 WHEN a.Month_Impacted_='July' THEN 7 WHEN a.Month_Impacted_='August' THEN 8 WHEN a.Month_Impacted_='September' THEN 9 WHEN a.Month_Impacted_='October' THEN 10 WHEN a.Month_Impacted_='November' THEN 11 WHEN a.Month_Impacted_='December' THEN 12 END AS MONTH , CASE WHEN PLU.REGION IN ( 'AF','ML') THEN 'Middle East Africa' WHEN PLU.REGION IN ( 'W_','E_') THEN 'United States' WHEN PLU.REGION IN ( 'EC') THEN 'Asia Pacific Excluding China' ELSE PLU.REGION_NAME END AS PROP_REGION , ISO.COUNTRY_ISO3_CD AS PROP_COUNTRY_ISO , PLU.BRND AS BRND , PLU.MISW_FLAG AS CHAIN , CASE WHEN upper( a.segment_)='CORPORATE-EXTENDED STAY' THEN 'LENGTH of Stay 5-11' ELSE 'LENGTH of Stay 1-4' END AS LOS_TIER , upper( a.Segment_Type_) AS SEG_TYPE , PLU.MARSHA AS MARSHA , ACCOUNT_ID AS ULTIMATE_PARENT_URI , '' AS IMMEDIATE_PARENT_URI , '' AS IMMEDIATE_PARENT_ACCOUNT_NM , '' AS IMMEDIATE_PARENT_DUNS , '' AS CHILD_URI , '' AS CHILD_ACCOUNT_NM , '' AS CHILD_DUNS , a.REVENUECURRENCYCODE_Mustmatchwha AS PROP_CURR , SUM( a.Room_Nights_) AS RN , SUM( a.Room_Revenue_) AS LOCAL_RV FROM Man_adj3 a LEFT JOIN aw_tgt.property_master PLU ON a.Marsha_Code_=PLU.marsha LEFT JOIN gso_stg.COUNTRY_GSO_CONTINENT_MAPPING ISO ON UPPER( PLU.COUNTRY) = ISO.COUNTRY_NAME WHERE GPS_Approved='Yes' GROUP BY ROW_ID, YEAR, MONTH, PROP_REGION, PROP_COUNTRY_ISO, BRND, CHAIN, LOS_TIER, SEG_TYPE, MARSHA, ULTIMATE_PARENT_URI, IMMEDIATE_PARENT_URI, IMMEDIATE_PARENT_ACCOUNT_NM, IMMEDIATE_PARENT_DUNS, CHILD_URI, CHILD_ACCOUNT_NM, CHILD_DUNS, PROP_CURR ORDER BY ROW_ID, YEAR, MONTH, PROP_REGION, PROP_COUNTRY_ISO, BRND, CHAIN, LOS_TIER, SEG_TYPE, MARSHA, ULTIMATE_PARENT_URI, IMMEDIATE_PARENT_URI, IMMEDIATE_PARENT_ACCOUNT_NM, IMMEDIATE_PARENT_DUNS, CHILD_URI, CHILD_ACCOUNT_NM, CHILD_DUNS, PROP_CURR ;",GSO_TRN_ADJ_LOAD.sas
 CREATE TABLE adj_approved_processed AS select * FROM man_adj WHERE GPS_Approved='Yes' AND row_id IN ( select row_id FROM archive.trn_ma_base_source_Q2_2019 ) ;,GSO_TRN_ADJ_LOAD.sas
 CREATE TABLE adj_approved_notprocessed AS select * FROM man_adj WHERE GPS_Approved='Yes' AND row_id not IN ( select row_id FROM archive.trn_ma_base_source_Q2_2019 ) ;,GSO_TRN_ADJ_LOAD.sas
"CREATE TABLE ""\\hdqmdm1fpcl3v2\LODG-SMPS\Support\Global Performance Services ( GPS)\Rachel Collins\GSO Man Adj Process-CODED FOLDER DO NOT MOVE\Transient_MA_Post_Process_Report.xlsx"" AS ( SELECT * FROM adj_approved_processed) ;",GSO_TRN_ADJ_LOAD.sas
"CREATE TABLE ""\\hdqmdm1fpcl3v2\LODG-SMPS\Support\Global Performance Services ( GPS)\Rachel Collins\GSO Man Adj Process-CODED FOLDER DO NOT MOVE\Transient_MA_Post_Process_Report.xlsx"" AS ( SELECT * FROM adj_approved_notprocessed) ;",GSO_TRN_ADJ_LOAD.sas
" CREATE TABLE AW_GSO_STG.TRN_MA_BASE_STG (  YEAR SMALLINT, MONTH SMALLINT, PROP_REGION VARCHAR( 1000), PROP_COUNTRY_ISO VARCHAR( 255), BRND   VARCHAR( 255), CHAIN VARCHAR( 255), LOS_TIER VARCHAR( 255), SEG_TYPE VARCHAR( 255), MARSHA VARCHAR( 255), ULTIMATE_PARENT_URI VARCHAR( 255), IMMEDIATE_PARENT_URI VARCHAR( 255), IMMEDIATE_PARENT_ACCOUNT_NM VARCHAR( 1000), IMMEDIATE_PARENT_DUNS VARCHAR( 255), CHILD_URI VARCHAR( 255), CHILD_ACCOUNT_NM VARCHAR( 1000), CHILD_DUNS VARCHAR( 255), PROP_CURR  VARCHAR( 255), RN BIGINT, LOCAL_RV FLOAT ) ) by odbc ;",GSO_TRN_ADJ_LOAD.sas
INSERT INTO TABLE gso_stg.TRN_MA_BASE_STG SELECT * FROM archive.trn_ma_base_source_Q2_2019;,GSO_TRN_ADJ_LOAD.sas
   TRUNCATE Table AW_GSO_STG.TRN_MA_BASE ) by odbc ;,GSO_TRN_ADJ_LOAD.sas
   INSERT INTO AW_GSO_STG.TRN_MA_BASE Select * FROM AW_GSO_STG.TRN_MA_BASE_STG ) by odbc ;,GSO_TRN_ADJ_LOAD.sas
DROP TABLE gso_stg.TRN_MA_BASE_STG;,GSO_TRN_ADJ_LOAD.sas
"   CALL AW_TGT_PROXY_DBO.GRANT_ON_TABLE( 'AW_GSO_STG','TRN_MA_BASE' )  ) by odbc ;",GSO_TRN_ADJ_LOAD.sas
   ANALYZE TABLE AW_GSO_STG.TRN_MA_BASE COMPUTE STATISTICS FOR ALL COLUMNS TABLESAMPLE SYSTEM( 10 )  ,GSO_TRN_ADJ_LOAD.sas
 CREATE TABLE aw_check AS  (  SELECT COUNT( *) AS aw_cnt FROM AW_GSO_STG.TRN_MA_BASE  ) ;,GSO_TRN_ADJ_LOAD.sas
 CREATE TABLE source_check AS SELECT COUNT( *) AS sc_cnt FROM archive.trn_ma_base_source_Q1_2019 ;,GSO_TRN_ADJ_LOAD.sas
" CREATE TABLE check AS ( SELECT  *  , sc_cnt-aw_cnt AS cnt_chk , CASE WHEN cnt_chk=0 THEN 'YES' ELSE 'NO' END AS success FROM aw_check JOIN source_check);",GSO_TRN_ADJ_LOAD.sas
" CREATE TABLE PACE_ADJUSTMENTS1 AS  ( select ORG_NM AS ORGANIZATION, MARSHA_CD AS MARSHA, SLS_MGR_LOGIN AS ASSOCIATE_EID, CLARITAS_ID AS DEPLOYED_CLARITAS_ID, QUOTE_NUMBER AS QUOTE_, ADJ_MONTH_ID AS PERIOD_IMPACTED, MARKET_NM AS MARKET, AREA_NM AS AREA, SLS_MGR_ROLE AS ROLE_SEGMENT, ACCT_COMP_TYPE AS REVENUE_TYPE, ARRIVAL_DT AS ARRIVAL_DATE, NET_RM_NGTS AS RN, NET_RM_REV AS RR, NET_FUNC_REV AS CR, NEW_DEF_FLG AS NEW_DEFINITE_FLAG FROM AW_SLS_DBO.MANUAL_ADJUSTMENTS WHERE adj_year_id=&curyr)  ;",Import Manual Adjustments.sas
 CREATE TABLE CLEAN_ADJUSTMENTS AS ( SELECT  *  FROM pace_adjustments1  WHERE SLS_MGR_ROLE not IN ( 'Citywide Sales Executive'));,Import Manual Adjustments.sas
"CREATE TABLE Manual_Adds_&CURYR AS (SELECT * FROM Manual_Adds_&CURYR.a WHERE period<>.  ORDER BY year ,period);",Import Manual Adjustments.sas
" CREATE TABLE Adj AS ( SELECT  *, year AS rpt_yr, period AS rpt_pd_mo, org AS organization, segment AS position_title, Executive_EID AS Associate_EID, 0 AS Booked_Assigned_REV , 0 AS Booked_Non_Assigned_REV , 0 AS Booked_Assigned_REV_Goal , 0 AS Booked_Non_Assigned_REV_Goal , 0 AS Bkd_Assigned_Outbound_REV , 0 AS Bkd_Assigned_Outbound_REV_Goal , 0 AS Bkd_NonAssn_Outbound_REV , 0 AS Bkd_NonAssn_Outbound_REV_Goal , 0 AS Actual_Assigned_REV , 0 AS Actual_Assigned_REV_Goal , ""Pace-M"" AS House_Credit , CASE WHEN  acct_comp_type=""Non Assigned Account IN Organization""  THEN ( curr_rv_ly+fut_rv_ly+curr_cat_revenue_ly+fut_cat_revenue_ly ) WHEN   acct_comp_type=""Assigned Account IN Organization""  THEN ( curr_rv_ly+fut_rv_ly+curr_cat_revenue_ly+fut_cat_revenue_ly ) FROM Manual_Adds_&CURYR );",Import Manual Adjustments.sas
"CREATE TABLE CY_Manual_Adds AS (SELECT rpt_yr, rpt_pd_mo, Organization, Market, Area, Associate_EID, Position_Title, House_Credit, SUM(Booked_Assigned_REV) AS Booked_Assigned_REV, SUM(Booked_Assigned_REV_Goal) AS Booked_Assigned_REV_Goal, SUM(Booked_Non_Assigned_REV) AS Booked_Non_Assigned_REV, SUM(Booked_Non_Assigned_REV_Goal) AS Booked_Non_Assigned_REV_Goal, SUM(Bkd_Assigned_Outbound_REV) AS Bkd_Assigned_Outbound_REV, SUM(Bkd_Assigned_Outbound_REV_Goal) AS Bkd_Assigned_Outbound_REV_Goal, SUM(Bkd_NonAssn_Outbound_REV) AS Bkd_NonAssn_Outbound_REV, SUM(Bkd_NonAssn_Outbound_REV_Goal) AS Bkd_NonAssn_Outbound_REV_Goal, SUM(Actual_Assigned_REV) AS Actual_Assigned_REV, SUM(Actual_Assigned_REV_Goal) AS Actual_Assigned_REV_Goal FROM adj GROUP BY rpt_yr, rpt_pd_mo, Organization, Market, Area, Associate_EID, Position_Title, House_Credit );",Import Manual Adjustments.sas
" CREATE TABLE PACE_ADJUSTMENTS1 AS  ( SELECT MARSHA_CD AS MARSHA, ORG_NM AS ORGANIZATION, SLS_MGR_ROLE AS ROLE_SEGMENT, QUOTE_NUMBER AS QUOTE_, QUOTE_NM AS QUOTE_NAME, NET_RM_NGTS AS RN, NET_RM_REV AS RR, NET_FUNC_REV AS CR FROM AW_SLS_PRD_AM.MANUAL_ADJUSTMENTS WHERE ADJ_YEAR_ID=&CURYR  )  ;",Import_ManualAdj.sas
" CREATE TABLE ManAdj_ AS ( SELECT MARSHA, Organization, Role_Segment, Quote_, Quote_Name, RN, RR, CR, CASE WHEN  rn=' '  THEN 0 END AS rn, CASE WHEN  rr=' '  THEN 0 END AS rr, CASE WHEN  cr=' '  THEN 0 END AS cr FROM PACE_ADJUSTMENTS1  WHERE marsha<>'');",Import_ManualAdj.sas
"CREATE TABLE ManAdj_Detail AS (SELECT MARSHA, Role_Segment, Organization, Quote_, Quote_Name, SUM(RN) AS RN, SUM(RR) AS RR, SUM(CR) AS CR FROM ManAdj_Data GROUP BY MARSHA, Role_Segment, Organization, Quote_, Quote_Name );",Import_ManualAdj.sas
"CREATE TABLE SFODATA.MA_Detail2 AS (SELECT * FROM ManAdj_Detail ORDER BY MARSHA ,Role_Segment ,Quote_ ,Quote_Name);",Import_ManualAdj.sas
" CREATE TABLE Inb_Outb AS ( SELECT  * , CASE WHEN  organization='East Northeast'  THEN 'ENE' WHEN   organization='Florida'  THEN 'FL' WHEN   organization='Mid Atlantic'  THEN 'MA' WHEN   organization='Northern Mid-America'  THEN 'NMA' WHEN   organization='Western Mountain Pacific'  THEN 'WMP' WHEN   organization='West Southwest'  THEN 'WSW' WHEN   organization='West South Central'  THEN 'WSC' WHEN   organization='South Southeast'  THEN 'SSE' END AS Org2 FROM ManAdj_Data );",Import_ManualAdj.sas
SELECT * FROM Inb_Outb ORDER BY Marsha;,Import_ManualAdj.sas
" CREATE TABLE SFO_orgs5 AS ( SELECT  *, Organization AS Verify_org FROM SFO_Orgs4 );",Import_ManualAdj.sas
SELECT * FROM SFO_orgs5 ORDER BY marsha;,Import_ManualAdj.sas
" CREATE TABLE combin AS ( SELECT  * , CASE WHEN  Org2=verify_org  THEN 'Inbound' ELSE 'Outbound' END AS MA_Org FROM Inb_Outb A LEFT JOIN SFO_orgs5 B ON  A.marsha =  B.marsha);",Import_ManualAdj.sas
"CREATE TABLE SFODATA.InboundMA AS (SELECT MARSHA, SUM(RN) AS RN, SUM(RR) AS RR, SUM(CR) AS CR FROM combin WHERE MA_Org='Inbound' GROUP BY MARSHA );",Import_ManualAdj.sas
"CREATE TABLE SFODATA.OtherOrg AS (SELECT MARSHA, SUM(RN) AS RN, SUM(RR) AS RR, SUM(CR) AS CR FROM combin WHERE MA_Org<>'Inbound' GROUP BY MARSHA );",Import_ManualAdj.sas
"SELECT * FROM rmblk_past ORDER BY hotel_cd ,book_key ,blk_dt ,rm_blk_stat_cd;",Intl_Pace_All.sas
"SELECT * FROM rmblk_future ORDER BY hotel_cd ,book_key ,blk_dt ,rm_blk_stat_cd;",Intl_Pace_All.sas
"CREATE TABLE rmblk_future_dups AS (SELECT DISTINCT * FROM rmblk_future ORDER BY hotel_cd ,book_key ,blk_dt);",Intl_Pace_All.sas
 CREATE TABLE rmblk_past2 AS ( SELECT  *  FROM rmblk_past  WHERE blk_dt<&TY_Fut.);,Intl_Pace_All.sas
" CREATE TABLE rmblk_snap&aoTYsnap. AS ( SELECT  *  , FORMAT(blk_dt, date7.) AS blk_dt , FORMAT(arr_date, date7.) AS arr_date , FORMAT(dep_date, date7.) AS dep_date  FROM rmblk_past2 A JOIN rmblk_future B ON  A.hotel_cd =  B.hotel_cd AND  A.book_key =  B.book_key AND  A.blk_dt =  B.blk_dt AND  A.rm_blk_stat_cd =  B.rm_blk_stat_cd);",Intl_Pace_All.sas
"SELECT * FROM bkdata_past ORDER BY hotel_cd ,book_key;",Intl_Pace_All.sas
"SELECT * FROM bkdata_future ORDER BY hotel_cd ,book_key;",Intl_Pace_All.sas
" CREATE TABLE bkdata_snap&aoTYsnap. AS ( SELECT  *  , FORMAT(bk_stat_dt, datetime.) AS bk_stat_dt , FORMAT(arr_dt, datetime.) AS arr_dt , FORMAT(dep_dt, datetime.) AS dep_dt , FORMAT(date7., datetime.) AS date7. , FORMAT(create_dt, datetime.) AS create_dt , FORMAT(updt_dt, datetime.) AS updt_dt  FROM bkdata_past A JOIN bkdata_future B ON  A.hotel_cd =  B.hotel_cd AND  A.book_key =  B.book_key);",Intl_Pace_All.sas
"CREATE TABLE bkdata_dup_1 AS (SELECT DISTINCT * FROM bkdata_snap&aoTYsnap. ORDER BY hotel_cd ,book_key);",Intl_Pace_All.sas
" CREATE TABLE bkdata_snap&aoTYsnap. AS ( SELECT  *  FROM bkdata_snap&aoTYsnap.  WHERE hotel_cd not IN ( 'SJUPR','STTFR' ));",Intl_Pace_All.sas
" CREATE TABLE rmblk_snap&aoTYsnap. AS ( SELECT  *  FROM rmblk_snap&aoTYsnap.  WHERE hotel_cd not in( 'SJUPR','STTFR' ));",Intl_Pace_All.sas
DROP TABLE AWPROD.rmblk_snap_hist;,Intl_Pace_All.sas
DROP TABLE AWPROD.bkdata_snap_hist;,Intl_Pace_All.sas
   ALTER TABLE aw_rev_dbo.rmblk_snap rename to rmblk_snap_hist ) by odbc ;,Intl_Pace_All.sas
   ALTER TABLE aw_rev_dbo.bkdata_snap rename to bkdata_snap_hist ) by odbc ;,Intl_Pace_All.sas
 CREATE TABLE rmblk_snap2 AS ( SELECT  *  FROM rmblk_snap&aoTYsnap. );,Intl_Pace_All.sas
CREATE TABLE bkdata_snap2 AS ( SELECT  *  FROM bkdata_snap&aoTYsnap. );,Intl_Pace_All.sas
ALTER TABLE bkdata_snap2 DROP COLUMN bk_name ;,Intl_Pace_All.sas
" CREATE TABLE group_pace_lux AS select b.marsha, b.brnd, b.mf, b.acomp, b.future_comp, b.LY_Comp, b.region, b.hotel_name, a.* FROM aw_tgt.grp_bookingpace a LEFT JOIN aw_tgt.property_master b ON a.prop_master_id=b.marsha WHERE b.brnd IN ( 'XR' 'WH' 'LC' 'JW' 'RZ' 'EB' 'BG') AND snapshot_date= '30Nov19'D;",Lux Group Pace.sas
" CREATE TABLE otbty AS  (  select stay_date, property_cd, segment , CASE WHEN b.ab_day_of_week_cd IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' END AS wdwe , SUM( room_nights) AS rn, SUM( rev_net) AS rev_net, SUM( rev_net_us) AS rev_net_us FROM Mrdw_fact_otb_seg_extract_pd a, mrdw_dim_date b WHERE a.stay_date=b.date_dt AND acctg_yr=&cur_yr AND acctg_pd=&cur_pd AND acctg_wk=&cur_wk GROUP BY stay_date, property_cd, segment , tier_los_ind, wdwe ORDER BY stay_date, property_cd, segment, wdwe  )  ;",MAMS - OTB Data Pull.sas
" CREATE TABLE otbly AS  (  select stay_date, property_cd, segment , CASE WHEN b.ab_day_of_week_cd IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' END AS wdwe , SUM( room_nights) AS rn, SUM( rev_net) AS rev_net, SUM( rev_net_us) AS rev_net_us FROM Mrdw_fact_otb_seg_extract_pd a, mrdw_dim_date b WHERE a.stay_date=b.date_dt AND acctg_yr=&last_yr AND acctg_pd=&cur_pdly AND acctg_wk=&cur_wkly GROUP BY stay_date, property_cd, segment , tier_los_ind, wdwe ORDER BY stay_date, property_cd, segment, wdwe  )  ;",MAMS - OTB Data Pull.sas
" CREATE TABLE allotb AS select coalesce( a.property_cd,b.property_cd) AS marsha , coalesce( a.stay_date,b.stay_date+364) AS stay_date format date9. , coalesce( a.segment,b.segment) AS segment , coalesce( a.wdwe,b.wdwe) AS wdwe , a.rn, a.rev_net, a.rev_net_us, b.rn AS rn_ly, b.rev_net AS rev_net_ly, b.rev_net_us AS rev_net_us_ly FROM otbty AS a full JOIN otbly AS b ON a.property_cd=b.property_cd AND a.stay_date=b.stay_date+364 AND a.segment=b.segment AND a.wdwe=b.wdwe;",MAMS - OTB Data Pull.sas
" CREATE TABLE allotb2 AS select marsha, segment, wdwe , CASE WHEN 100*year( stay_date)+month( stay_date) = &mo_out1 THEN '_1MNOut' when 100*year( stay_date)+month( stay_date) = &mo_out2 THEN '_2MNOut' when 100*year( stay_date)+month( stay_date) = &mo_out3 THEN '_3MNOut' END AS timeframe , SUM( ( rn+0)) AS rn, SUM( ( rev_net+0)) AS rv, SUM( ( rn_ly+0)) AS rn_ly, SUM( ( rev_net_ly+0)) AS rv_ly FROM allotb GROUP BY marsha, segment, wdwe, calculated timeframe;",MAMS - OTB Data Pull.sas
" CREATE TABLE allotb3 AS ( SELECT  * , CASE WHEN  timeframe='_1MNOut' AND wdwe='WD' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rn END AS WD_TR_RN_1MO_OTB, CASE WHEN  timeframe='_1MNOut' AND wdwe='WD' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rn_ly END AS WD_TR_RN_1MO_OTB_LY, CASE WHEN  timeframe='_1MNOut' AND wdwe='WD' AND segment = 'GRP'  THEN rn END AS WD_GR_RN_1MO_OTB, CASE WHEN  timeframe='_1MNOut' AND wdwe='WD' AND segment = 'GRP'  THEN rn_ly END AS WD_GR_RN_1MO_OTB_LY, CASE WHEN  timeframe='_1MNOut' AND wdwe='WD' AND segment<>'CMP'  THEN rn END AS WD_TOT_RN_1MO_OTB, CASE WHEN  timeframe='_1MNOut' AND wdwe='WD' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rv END AS WD_TR_RV_1MO_OTB, CASE WHEN  timeframe='_1MNOut' AND wdwe='WD' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rv_ly END AS WD_TR_RV_1MO_OTB_LY, CASE WHEN  timeframe='_1MNOut' AND wdwe='WD' AND segment = 'GRP'  THEN rv END AS WD_GR_RV_1MO_OTB, CASE WHEN  timeframe='_1MNOut' AND wdwe='WD' AND segment = 'GRP'  THEN rv_ly END AS WD_GR_RV_1MO_OTB_LY, CASE WHEN  timeframe='_2MNOut' AND wdwe='WD' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rn END AS WD_TR_RN_2MO_OTB, CASE WHEN  timeframe='_2MNOut' AND wdwe='WD' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rn_ly END AS WD_TR_RN_2MO_OTB_LY, CASE WHEN  timeframe='_2MNOut' AND wdwe='WD' AND segment = 'GRP'  THEN rn END AS WD_GR_RN_2MO_OTB, CASE WHEN  timeframe='_2MNOut' AND wdwe='WD' AND segment = 'GRP'  THEN rn_ly END AS WD_GR_RN_2MO_OTB_LY, CASE WHEN  timeframe='_2MNOut' AND wdwe='WD' AND segment<>'CMP'  THEN rn END AS WD_TOT_RN_2MO_OTB, CASE WHEN  timeframe='_2MNOut' AND wdwe='WD' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rv END AS WD_TR_RV_2MO_OTB, CASE WHEN  timeframe='_2MNOut' AND wdwe='WD' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rv_ly END AS WD_TR_RV_2MO_OTB_LY, CASE WHEN  timeframe='_2MNOut' AND wdwe='WD' AND segment = 'GRP'  THEN rv END AS WD_GR_RV_2MO_OTB, CASE WHEN  timeframe='_2MNOut' AND wdwe='WD' AND segment = 'GRP'  THEN rv_ly END AS WD_GR_RV_2MO_OTB_LY, CASE WHEN  timeframe='_3MNOut' AND wdwe='WD' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rn END AS WD_TR_RN_3MO_OTB, CASE WHEN  timeframe='_3MNOut' AND wdwe='WD' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rn_ly END AS WD_TR_RN_3MO_OTB_LY, CASE WHEN  timeframe='_3MNOut' AND wdwe='WD' AND segment = 'GRP'  THEN rn END AS WD_GR_RN_3MO_OTB, CASE WHEN  timeframe='_3MNOut' AND wdwe='WD' AND segment = 'GRP'  THEN rn_ly END AS WD_GR_RN_3MO_OTB_LY, CASE WHEN  timeframe='_3MNOut' AND wdwe='WD' AND segment<>'CMP'  THEN rn END AS WD_TOT_RN_3MO_OTB, CASE WHEN  timeframe='_3MNOut' AND wdwe='WD' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rv END AS WD_TR_RV_3MO_OTB, CASE WHEN  timeframe='_3MNOut' AND wdwe='WD' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rv_ly END AS WD_TR_RV_3MO_OTB_LY, CASE WHEN  timeframe='_3MNOut' AND wdwe='WD' AND segment = 'GRP'  THEN rv END AS WD_GR_RV_3MO_OTB, CASE WHEN  timeframe='_3MNOut' AND wdwe='WD' AND segment = 'GRP'  THEN rv_ly END AS WD_GR_RV_3MO_OTB_LY, CASE WHEN  timeframe='_1MNOut' AND wdwe='WE' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rn END AS WE_TR_RN_1MO_OTB, CASE WHEN  timeframe='_1MNOut' AND wdwe='WE' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rn_ly END AS WE_TR_RN_1MO_OTB_LY, CASE WHEN  timeframe='_1MNOut' AND wdwe='WE' AND segment = 'GRP'  THEN rn END AS WE_GR_RN_1MO_OTB, CASE WHEN  timeframe='_1MNOut' AND wdwe='WE' AND segment = 'GRP'  THEN rn_ly END AS WE_GR_RN_1MO_OTB_LY, CASE WHEN  timeframe='_1MNOut' AND wdwe='WE' AND segment<>'CMP'  THEN rn END AS WE_TOT_RN_1MO_OTB, CASE WHEN  timeframe='_1MNOut' AND wdwe='WE' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rv END AS WE_TR_RV_1MO_OTB, CASE WHEN  timeframe='_1MNOut' AND wdwe='WE' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rv_ly END AS WE_TR_RV_1MO_OTB_LY, CASE WHEN  timeframe='_1MNOut' AND wdwe='WE' AND segment = 'GRP'  THEN rv END AS WE_GR_RV_1MO_OTB, CASE WHEN  timeframe='_1MNOut' AND wdwe='WE' AND segment = 'GRP'  THEN rv_ly END AS WE_GR_RV_1MO_OTB_LY, CASE WHEN  timeframe='_2MNOut' AND wdwe='WE' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rn END AS WE_TR_RN_2MO_OTB, CASE WHEN  timeframe='_2MNOut' AND wdwe='WE' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rn_ly END AS WE_TR_RN_2MO_OTB_LY, CASE WHEN  timeframe='_2MNOut' AND wdwe='WE' AND segment = 'GRP'  THEN rn END AS WE_GR_RN_2MO_OTB, CASE WHEN  timeframe='_2MNOut' AND wdwe='WE' AND segment = 'GRP'  THEN rn_ly END AS WE_GR_RN_2MO_OTB_LY, CASE WHEN  timeframe='_2MNOut' AND wdwe='WE' AND segment<>'CMP'  THEN rn END AS WE_TOT_RN_2MO_OTB, CASE WHEN  timeframe='_2MNOut' AND wdwe='WE' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rv END AS WE_TR_RV_2MO_OTB, CASE WHEN  timeframe='_2MNOut' AND wdwe='WE' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rv_ly END AS WE_TR_RV_2MO_OTB_LY, CASE WHEN  timeframe='_2MNOut' AND wdwe='WE' AND segment = 'GRP'  THEN rv END AS WE_GR_RV_2MO_OTB, CASE WHEN  timeframe='_2MNOut' AND wdwe='WE' AND segment = 'GRP'  THEN rv_ly END AS WE_GR_RV_2MO_OTB_LY, CASE WHEN  timeframe='_3MNOut' AND wdwe='WE' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rn END AS WE_TR_RN_3MO_OTB, CASE WHEN  timeframe='_3MNOut' AND wdwe='WE' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rn_ly END AS WE_TR_RN_3MO_OTB_LY, CASE WHEN  timeframe='_3MNOut' AND wdwe='WE' AND segment = 'GRP'  THEN rn END AS WE_GR_RN_3MO_OTB, CASE WHEN  timeframe='_3MNOut' AND wdwe='WE' AND segment = 'GRP'  THEN rn_ly END AS WE_GR_RN_3MO_OTB_LY, CASE WHEN  timeframe='_3MNOut' AND wdwe='WE' AND segment<>'CMP'  THEN rn END AS WE_TOT_RN_3MO_OTB, CASE WHEN  timeframe='_3MNOut' AND wdwe='WE' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rv END AS WE_TR_RV_3MO_OTB, CASE WHEN  timeframe='_3MNOut' AND wdwe='WE' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rv_ly END AS WE_TR_RV_3MO_OTB_LY, CASE WHEN  timeframe='_3MNOut' AND wdwe='WE' AND segment = 'GRP'  THEN rv END AS WE_GR_RV_3MO_OTB, CASE WHEN  timeframe='_3MNOut' AND wdwe='WE' AND segment = 'GRP'  THEN rv_ly END AS WE_GR_RV_3MO_OTB_LY, CASE WHEN  timeframe='_1MNOut' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rn END AS FW_TR_RN_1MO_OTB, CASE WHEN  timeframe='_1MNOut' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rn_ly END AS FW_TR_RN_1MO_OTB_LY, CASE WHEN  timeframe='_1MNOut' AND segment = 'GRP'  THEN rn END AS FW_GR_RN_1MO_OTB, CASE WHEN  timeframe='_1MNOut' AND segment = 'GRP'  THEN rn_ly END AS FW_GR_RN_1MO_OTB_LY, CASE WHEN  timeframe='_1MNOut' AND segment<>'CMP'  THEN rn END AS FW_TOT_RN_1MO_OTB, CASE WHEN  timeframe='_1MNOut' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rv END AS FW_TR_RV_1MO_OTB, CASE WHEN  timeframe='_1MNOut' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rv_ly END AS FW_TR_RV_1MO_OTB_LY, CASE WHEN  timeframe='_1MNOut' AND segment = 'GRP'  THEN rv END AS FW_GR_RV_1MO_OTB, CASE WHEN  timeframe='_1MNOut' AND segment = 'GRP'  THEN rv_ly END AS FW_GR_RV_1MO_OTB_LY, CASE WHEN  timeframe='_2MNOut' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rn END AS FW_TR_RN_2MO_OTB, CASE WHEN  timeframe='_2MNOut' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rn_ly END AS FW_TR_RN_2MO_OTB_LY, CASE WHEN  timeframe='_2MNOut' AND segment = 'GRP'  THEN rn END AS FW_GR_RN_2MO_OTB, CASE WHEN  timeframe='_2MNOut' AND segment = 'GRP'  THEN rn_ly END AS FW_GR_RN_2MO_OTB_LY, CASE WHEN  timeframe='_2MNOut' AND segment<>'CMP'  THEN rn END AS FW_TOT_RN_2MO_OTB, CASE WHEN  timeframe='_2MNOut' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rv END AS FW_TR_RV_2MO_OTB, CASE WHEN  timeframe='_2MNOut' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rv_ly END AS FW_TR_RV_2MO_OTB_LY, CASE WHEN  timeframe='_2MNOut' AND segment = 'GRP'  THEN rv END AS FW_GR_RV_2MO_OTB, CASE WHEN  timeframe='_2MNOut' AND segment = 'GRP'  THEN rv_ly END AS FW_GR_RV_2MO_OTB_LY, CASE WHEN  timeframe='_3MNOut' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rn END AS FW_TR_RN_3MO_OTB, CASE WHEN  timeframe='_3MNOut' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rn_ly END AS FW_TR_RN_3MO_OTB_LY, CASE WHEN  timeframe='_3MNOut' AND segment = 'GRP'  THEN rn END AS FW_GR_RN_3MO_OTB, CASE WHEN  timeframe='_3MNOut' AND segment = 'GRP'  THEN rn_ly END AS FW_GR_RN_3MO_OTB_LY, CASE WHEN  timeframe='_3MNOut' AND segment<>'CMP'  THEN rn END AS FW_TOT_RN_3MO_OTB, CASE WHEN  timeframe='_3MNOut' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rv END AS FW_TR_RV_3MO_OTB, CASE WHEN  timeframe='_3MNOut' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rv_ly END AS FW_TR_RV_3MO_OTB_LY, CASE WHEN  timeframe='_3MNOut' AND segment = 'GRP'  THEN rv END AS FW_GR_RV_3MO_OTB, CASE WHEN  timeframe='_3MNOut' AND segment = 'GRP'  THEN rv_ly END AS FW_GR_RV_3MO_OTB_LY FROM allotb2 );",MAMS - OTB Data Pull.sas
" CREATE TABLE mams.esf_otb AS select marsha , SUM( WD_TR_RN_1MO_OTB) AS WD_TR_RN_1MO_OTB , SUM( WD_TR_RN_1MO_OTB)/SUM( WD_TR_RN_1MO_OTB_ly) -1 AS  WD_TR_RN_Chg_1MO_OTB , SUM( WD_TR_RN_1MO_OTB)/SUM( WD_TOT_RN_1MO_OTB) AS WD_TR_Mix_1MO_OTB , SUM( WD_GR_RN_1MO_OTB) AS WD_GR_RN_1MO_OTB , SUM( WD_GR_RN_1MO_OTB)/SUM( WD_GR_RN_1MO_OTB_ly) -1 AS  WD_GR_RN_Chg_1MO_OTB , SUM( WD_GR_RN_1MO_OTB)/SUM( WD_TOT_RN_1MO_OTB) AS WD_GR_Mix_1MO_OTB , ( SUM( WD_GR_RV_1MO_OTB) / SUM( WD_GR_RN_1MO_OTB)) / ( SUM( WD_GR_RV_1MO_OTB_ly) / SUM( WD_GR_RN_1MO_OTB_ly)) AS WD_GR_ADR_Chg_1MO_OTB , SUM( WD_TR_RN_2MO_OTB) AS WD_TR_RN_2PO_OTB , SUM( WD_TR_RN_2MO_OTB)/SUM( WD_TR_RN_2MO_OTB_ly) -1 AS  WD_TR_RN_Chg_2PO_OTB , SUM( WD_TR_RN_2MO_OTB)/SUM( WD_TOT_RN_2MO_OTB) AS WD_TR_Mix_2PO_OTB , SUM( WD_GR_RN_2MO_OTB) AS WD_GR_RN_2PO_OTB , SUM( WD_GR_RN_2MO_OTB)/SUM( WD_GR_RN_2MO_OTB_ly) -1 AS  WD_GR_RN_Chg_2PO_OTB , SUM( WD_GR_RN_2MO_OTB)/SUM( WD_TOT_RN_2MO_OTB) AS WD_GR_Mix_2PO_OTB , ( SUM( WD_GR_RV_2MO_OTB) / SUM( WD_GR_RN_2MO_OTB)) / ( SUM( WD_GR_RV_2MO_OTB_ly) / SUM( WD_GR_RN_2MO_OTB_ly)) AS WD_GR_ADR_Chg_2PO_OTB , SUM( WD_TR_RN_3MO_OTB) AS WD_TR_RN_3MO_OTB , SUM( WD_TR_RN_3MO_OTB)/SUM( WD_TR_RN_3MO_OTB_ly) -1 AS  WD_TR_RN_Chg_3MO_OTB , SUM( WD_TR_RN_3MO_OTB)/SUM( WD_TOT_RN_3MO_OTB) AS WD_TR_Mix_3MO_OTB , SUM( WD_GR_RN_3MO_OTB) AS WD_GR_RN_3MO_OTB , SUM( WD_GR_RN_3MO_OTB)/SUM( WD_GR_RN_3MO_OTB_ly) -1 AS  WD_GR_RN_Chg_3MO_OTB , SUM( WD_GR_RN_3MO_OTB)/SUM( WD_TOT_RN_3MO_OTB) AS WD_GR_Mix_3MO_OTB , ( SUM( WD_GR_RV_3MO_OTB) / SUM( WD_GR_RN_3MO_OTB)) / ( SUM( WD_GR_RV_3MO_OTB_ly) / SUM( WD_GR_RN_3MO_OTB_ly)) AS WD_GR_ADR_Chg_3MO_OTB , SUM( WE_TR_RN_1MO_OTB) AS WE_TR_RN_1MO_OTB , SUM( WE_TR_RN_1MO_OTB)/SUM( WE_TR_RN_1MO_OTB_ly) -1 AS  WE_TR_RN_Chg_1MO_OTB , SUM( WE_TR_RN_1MO_OTB)/SUM( WE_TOT_RN_1MO_OTB) AS WE_TR_Mix_1MO_OTB , SUM( WE_GR_RN_1MO_OTB) AS WE_GR_RN_1MO_OTB , SUM( WE_GR_RN_1MO_OTB)/SUM( WE_GR_RN_1MO_OTB_ly) -1 AS  WE_GR_RN_Chg_1MO_OTB , SUM( WE_GR_RN_1MO_OTB)/SUM( WE_TOT_RN_1MO_OTB) AS WE_GR_Mix_1MO_OTB , ( SUM( WE_GR_RV_1MO_OTB) / SUM( WE_GR_RN_1MO_OTB)) / ( SUM( WE_GR_RV_1MO_OTB_ly) / SUM( WE_GR_RN_1MO_OTB_ly)) AS WE_GR_ADR_Chg_1MO_OTB , SUM( WE_TR_RN_2MO_OTB) AS WE_TR_RN_2PO_OTB , SUM( WE_TR_RN_2MO_OTB)/SUM( WE_TR_RN_2MO_OTB_ly) -1 AS  WE_TR_RN_Chg_2PO_OTB , SUM( WE_TR_RN_2MO_OTB)/SUM( WE_TOT_RN_2MO_OTB) AS WE_TR_Mix_2PO_OTB , SUM( WE_GR_RN_2MO_OTB) AS WE_GR_RN_2PO_OTB , SUM( WE_GR_RN_2MO_OTB)/SUM( WE_GR_RN_2MO_OTB_ly) -1 AS  WE_GR_RN_Chg_2PO_OTB , SUM( WE_GR_RN_2MO_OTB)/SUM( WE_TOT_RN_2MO_OTB) AS WE_GR_Mix_2PO_OTB , ( SUM( WE_GR_RV_2MO_OTB) / SUM( WE_GR_RN_2MO_OTB)) / ( SUM( WE_GR_RV_2MO_OTB_ly) / SUM( WE_GR_RN_2MO_OTB_ly)) AS WE_GR_ADR_Chg_2PO_OTB , SUM( WE_TR_RN_3MO_OTB) AS WE_TR_RN_3MO_OTB , SUM( WE_TR_RN_3MO_OTB)/SUM( WE_TR_RN_3MO_OTB_ly) -1 AS  WE_TR_RN_Chg_3MO_OTB , SUM( WE_TR_RN_3MO_OTB)/SUM( WE_TOT_RN_3MO_OTB) AS WE_TR_Mix_3MO_OTB , SUM( WE_GR_RN_3MO_OTB) AS WE_GR_RN_3MO_OTB , SUM( WE_GR_RN_3MO_OTB)/SUM( WE_GR_RN_3MO_OTB_ly) -1 AS  WE_GR_RN_Chg_3MO_OTB , SUM( WE_GR_RN_3MO_OTB)/SUM( WE_TOT_RN_3MO_OTB) AS WE_GR_Mix_3MO_OTB , ( SUM( WE_GR_RV_3MO_OTB) / SUM( WE_GR_RN_3MO_OTB)) / ( SUM( WE_GR_RV_3MO_OTB_ly) / SUM( WE_GR_RN_3MO_OTB_ly)) AS WE_GR_ADR_Chg_3MO_OTB , SUM( FW_TR_RN_1MO_OTB) AS FW_TR_RN_1MO_OTB , SUM( FW_TR_RN_1MO_OTB)/SUM( FW_TR_RN_1MO_OTB_ly) -1 AS  FW_TR_RN_Chg_1MO_OTB , SUM( FW_TR_RN_1MO_OTB)/SUM( FW_TOT_RN_1MO_OTB) AS FW_TR_Mix_1MO_OTB , SUM( FW_GR_RN_1MO_OTB) AS FW_GR_RN_OTB_TY_1MO , SUM( FW_GR_RN_1MO_OTB_LY) AS FW_GR_RN_OTB_LY_1MO , SUM( FW_GR_RN_1MO_OTB)/SUM( FW_GR_RN_1MO_OTB_ly) -1 AS  FW_GR_RN_Chg_1MO_OTB , SUM( FW_GR_RN_1MO_OTB)/SUM( FW_TOT_RN_1MO_OTB) AS FW_GR_Mix_1MO_OTB , ( SUM( FW_GR_RV_1MO_OTB) / SUM( FW_GR_RN_1MO_OTB)) / ( SUM( FW_GR_RV_1MO_OTB_ly) / SUM( FW_GR_RN_1MO_OTB_ly)) AS FW_GR_ADR_Chg_1MO_OTB , SUM( FW_TR_RN_2MO_OTB) AS FW_TR_RN_2PO_OTB , SUM( FW_TR_RN_2MO_OTB)/SUM( FW_TR_RN_2MO_OTB_ly) -1 AS  FW_TR_RN_Chg_2PO_OTB , SUM( FW_TR_RN_2MO_OTB)/SUM( FW_TOT_RN_2MO_OTB) AS FW_TR_Mix_2PO_OTB , SUM( FW_GR_RN_2MO_OTB) AS FW_GR_RN_2PO_OTB , SUM( FW_GR_RN_2MO_OTB)/SUM( FW_GR_RN_2MO_OTB_ly) -1 AS  FW_GR_RN_Chg_2PO_OTB , SUM( FW_GR_RN_2MO_OTB)/SUM( FW_TOT_RN_2MO_OTB) AS FW_GR_Mix_2PO_OTB , ( SUM( FW_GR_RV_2MO_OTB) / SUM( FW_GR_RN_2MO_OTB)) / ( SUM( FW_GR_RV_2MO_OTB_ly) / SUM( FW_GR_RN_2MO_OTB_ly)) AS FW_GR_ADR_Chg_2PO_OTB , SUM( FW_TR_RN_3MO_OTB) AS FW_TR_RN_3MO_OTB , SUM( FW_TR_RN_3MO_OTB)/SUM( FW_TR_RN_3MO_OTB_ly) -1 AS  FW_TR_RN_Chg_3MO_OTB , SUM( FW_TR_RN_3MO_OTB)/SUM( FW_TOT_RN_3MO_OTB) AS FW_TR_Mix_3MO_OTB , SUM( FW_GR_RN_3MO_OTB) AS FW_GR_RN_OTB_TY_3MO , SUM( FW_GR_RN_3MO_OTB_LY) AS FW_GR_RN_OTB_LY_3MO , SUM( FW_GR_RN_3MO_OTB)/SUM( FW_GR_RN_3MO_OTB_ly) -1 AS  FW_GR_RN_Chg_3MO_OTB , SUM( FW_GR_RN_3MO_OTB)/SUM( FW_TOT_RN_3MO_OTB) AS FW_GR_Mix_3MO_OTB , ( SUM( FW_GR_RV_3MO_OTB) / SUM( FW_GR_RN_3MO_OTB)) / ( SUM( FW_GR_RV_3MO_OTB_ly) / SUM( FW_GR_RN_3MO_OTB_ly)) AS FW_GR_ADR_Chg_3MO_OTB , SUM( SUM( WD_GR_RN_3MO_OTB),-SUM( WD_GR_RN_3MO_OTB_ly)) AS WD_GR_RN_Var_3MO_OTB , SUM( SUM( WE_GR_RN_1MO_OTB),-SUM( WE_GR_RN_1MO_OTB_ly)) AS WE_GR_RN_Var_1MO_OTB , SUM( SUM( WE_GR_RN_3MO_OTB),-SUM( WE_GR_RN_3MO_OTB_ly)) AS WE_GR_RN_Var_3MO_OTB FROM allotb3 GROUP BY marsha;",MAMS - OTB Data Pull.sas
" CREATE TABLE all_rpo AS  (  select prop_code, stydt,FCST_OCC_CURR,STYDOW FROM aw_TGT_PROXY_DBO.IT_CACHE_PW_OUTPUT_TGT WHERE EXECUTION_DT = &dte  )  ;",MAMS - OY Forecast.sas
" CREATE TABLE fw_fcst AS select PROP_CODE, 100*year( STYDT)+month( STYDT) AS yrmo, AVG( FCST_OCC_CURR/100) AS FW_OY_FCST FROM all_rpo GROUP BY PROP_CODE, calculated yrmo;",MAMS - OY Forecast.sas
" CREATE TABLE WD_fcst AS select PROP_CODE, 100*year( STYDT)+month( STYDT) AS yrmo, AVG( FCST_OCC_CURR/100) AS WD_OY_FCST FROM all_rpo WHERE STYDOW not IN ( 'FRI', 'SAT') GROUP BY PROP_CODE, calculated yrmo;",MAMS - OY Forecast.sas
" CREATE TABLE WE_fcst AS select PROP_CODE, 100*year( STYDT)+month( STYDT) AS yrmo, AVG( FCST_OCC_CURR/100) AS WE_OY_FCST FROM all_rpo WHERE STYDOW IN ( 'FRI', 'SAT') GROUP BY PROP_CODE, calculated yrmo;",MAMS - OY Forecast.sas
" CREATE TABLE WED_fcst AS select PROP_CODE, 100*year( STYDT)+month( STYDT) AS yrmo, AVG( FCST_OCC_CURR/100) AS WED_OY_FCST FROM all_rpo WHERE STYDOW ='WED' GROUP BY PROP_CODE, calculated yrmo;",MAMS - OY Forecast.sas
" CREATE TABLE TUEWED_fcst AS select PROP_CODE, COUNT( PROP_CODE) AS midweek_occ_ge80_num FROM all_rpo WHERE STYDOW ='WED' AND 100*year( STYDT)+month( STYDT) IN ( &mo_out1, &mo_out2, &mo_out3) AND FCST_OCC_CURR/100>=.8 GROUP BY PROP_CODE;",MAMS - OY Forecast.sas
" CREATE TABLE Sat_fcst AS select PROP_CODE, 100*year( STYDT)+month( STYDT) AS yrmo, AVG( FCST_OCC_CURR/100) AS SAT_OY_FCST FROM all_rpo WHERE STYDOW ='SAT' GROUP BY PROP_CODE, calculated yrmo;",MAMS - OY Forecast.sas
" CREATE TABLE all_fcst AS select a.PROP_CODE, a.yrmo, a.FW_OY_FCST, b.WD_OY_FCST, c.WE_OY_FCST, d.WED_OY_FCST, e.SAT_OY_FCST FROM fw_fcst AS a LEFT JOIN wd_fcst AS b ON a.PROP_CODE=b.PROP_CODE AND a.yrmo=b.yrmo LEFT JOIN we_fcst AS c ON a.PROP_CODE=c.PROP_CODE AND a.yrmo=c.yrmo LEFT JOIN wed_fcst AS d ON a.PROP_CODE=d.PROP_CODE AND a.yrmo=d.yrmo LEFT JOIN sat_fcst AS e ON a.PROP_CODE=e.PROP_CODE AND a.yrmo=e.yrmo;",MAMS - OY Forecast.sas
 CREATE TABLE fcst_1mo AS ( SELECT  *  FROM all_fcst  WHERE yrmo=&mo_out1);,MAMS - OY Forecast.sas
 CREATE TABLE fcst_2mo AS ( SELECT  *  FROM all_fcst  WHERE yrmo=&mo_out2);,MAMS - OY Forecast.sas
 CREATE TABLE fcst_3mo AS ( SELECT  *  FROM all_fcst  WHERE yrmo=&mo_out3);,MAMS - OY Forecast.sas
" CREATE TABLE mams.mams_oy_forecast AS select coalesce( a.PROP_CODE,b.PROP_CODE,c.PROP_CODE) AS MARSHA , a.FW_OY_FCST AS FW_OY_FCST_Occ_1MO, a.WD_OY_FCST AS WD_OY_FCST_Occ_1MO , a.WE_OY_FCST AS WE_OY_FCST_Occ_1MO, a.WED_OY_FCST AS Wed_Occ_1MO , a.SAT_OY_FCST AS Sat_Occ_1MO , b.FW_OY_FCST AS FW_OY_FCST_Occ_2MO, b.WD_OY_FCST AS WD_OY_FCST_Occ_2PO , b.WE_OY_FCST AS WE_OY_FCST_Occ_2PO, b.WED_OY_FCST AS Wed_Occ_2MO , b.SAT_OY_FCST AS Sat_Occ_2MO , c.FW_OY_FCST AS FW_OY_FCST_Occ_3MO, c.WD_OY_FCST AS WD_OY_FCST_Occ_3MO , c.WE_OY_FCST AS WE_OY_FCST_Occ_3MO, c.WED_OY_FCST AS Wed_Occ_3MO , c.SAT_OY_FCST AS Sat_Occ_3MO , d.midweek_occ_ge80_num FROM fcst_1mo AS a full JOIN fcst_2mo AS b ON a.PROP_CODE=b.PROP_CODE full JOIN fcst_3mo AS c ON coalesce( a.PROP_CODE,b.PROP_CODE)=c.PROP_CODE LEFT JOIN TUEWED_fcst AS d ON coalesce( a.PROP_CODE,b.PROP_CODE,c.PROP_CODE)=d.PROP_CODE;",MAMS - OY Forecast.sas
 CREATE TABLE prop_master AS  (  SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER A  ) ;,MAMS MRDW Data Pull - Monthly New.sas
" CREATE TABLE daysytd_ty AS  (  select b.year_cal , COUNT( b.date_dt) AS days_ytd_ty FROM mrdw_dim_date b WHERE 100*b.year_cal+b.month_cal_id <= &curr_mo AND 100*b.year_cal+b.month_cal_id >= &curr_mo-12 GROUP BY b.year_cal ORDER BY b.year_cal  )  ;",MAMS MRDW Data Pull - Monthly New.sas
" CREATE TABLE daysytd_ly AS  (  select b.year_cal , COUNT( b.date_dt) AS days_ytd_ly FROM mrdw_dim_date b WHERE 100*b.year_cal+b.month_cal_id <= &curr_mo-100 AND 100*b.year_cal+b.month_cal_id >= &curr_mo-112 GROUP BY b.year_cal ORDER BY b.year_cal  )  ;",MAMS MRDW Data Pull - Monthly New.sas
" CREATE TABLE ytddata AS  (  select a.property_cd, b.year_cal , SUM( a.roomnights_qty) AS rn, SUM( a.net_rev_local_amt) AS rv , SUM( net_rev_usd_sub_amt) AS rv_usd FROM mrdw_fact_agg_dr_rev_analysis a, mrdw_dim_date b WHERE a.date_stay_dt=b.date_dt AND a.brand_cd IN ( 'CY', 'SH', 'FI', 'AR', 'OX', 'AL', 'FP') AND 100*b.year_cal+b.month_cal_id <= &curr_mo AND 100*b.year_cal+b.month_cal_id >= &curr_mo-12 GROUP BY a.property_cd, b.year_cal ORDER BY a.property_cd, b.year_cal  )  ;",MAMS MRDW Data Pull - Monthly New.sas
" CREATE TABLE ytddataly AS  (  select a.property_cd, b.year_cal , SUM( a.roomnights_qty) AS rn, SUM( a.net_rev_local_amt) AS rv , SUM( net_rev_usd_sub_amt) AS rv_usd FROM mrdw_fact_agg_dr_rev_analysis a, mrdw_dim_date b WHERE a.date_stay_dt=b.date_dt AND a.brand_cd IN ( 'CY', 'SH', 'FI', 'AR', 'OX', 'AL', 'FP') AND 100*b.year_cal+b.month_cal_id <= &curr_mo-100 AND 100*b.year_cal+b.month_cal_id >= &curr_mo-112 GROUP BY a.property_cd, b.year_cal ORDER BY a.property_cd, b.year_cal  )  ;",MAMS MRDW Data Pull - Monthly New.sas
" CREATE TABLE RevPAR_YTD AS select plu.marsha, coalesce( a.year_Cal,b.year_cal+1) AS year , a.rv, a.rv_usd, b.rv AS rv_ly, b.rv_usd AS rv_usd_ly , c.days_ytd_ty*plu.hcap AS capacity_ty , d.days_ytd_ly*plu.hcap AS capacity_ly , CASE WHEN plu.curr='USD' THEN a.rv_usd/calculated capacity_ty ELSE a.rv_usd/calculated capacity_ty END AS RevPAR_YTD_TY , CASE WHEN plu.curr='USD' THEN b.rv_usd/calculated capacity_ly ELSE b.rv_usd/calculated capacity_ly END AS RevPAR_YTD_LY , ( calculated RevPAR_YTD_TY/calculated RevPAR_YTD_LY) - 1 AS RevPAR_YTD_Chg FROM prop_master AS plu full JOIN ytddata AS a ON plu.marsha=a.property_cd full JOIN ytddataly AS b ON plu.marsha=b.property_cd AND a.year_cal=b.year_cal+1 LEFT JOIN daysytd_ty AS c ON coalesce( a.year_Cal,b.year_cal+1)=c.year_cal LEFT JOIN daysytd_ly AS d ON coalesce( a.year_Cal-1,b.year_cal)=d.year_cal;",MAMS MRDW Data Pull - Monthly New.sas
 CREATE TABLE junk AS  (  select b.* FROM mrdw_dim_date b LIMIT 500  )  ;,MAMS MRDW Data Pull - Monthly New.sas
" CREATE TABLE daysinmo AS  (  select b.year_cal, b.month_cal_id , CASE WHEN b.ab_day_of_week_cd IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' END AS wdwe , COUNT( b.date_dt) AS days FROM mrdw_dim_date b WHERE 100*b.year_cal+b.month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo, &curr_mo-100, &l2_mo-100, &l3_mo-100) GROUP BY b.year_cal, b.month_cal_id, wdwe ORDER BY b.year_cal, b.month_cal_id, wdwe  )  ;",MAMS MRDW Data Pull - Monthly New.sas
" CREATE TABLE daysinmo2 AS ( SELECT  * , CASE WHEN  100*year_cal+month_cal_id = &curr_mo  THEN days END AS MN_days, CASE WHEN  100*year_cal+month_cal_id = &curr_mo-100  THEN days END AS MN_days_ly, CASE WHEN  100*year_cal+month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo)  THEN days END AS L3_days, CASE WHEN  100*year_cal+month_cal_id+100 IN ( &curr_mo, &l2_mo, &l3_mo)  THEN days END AS L3_days_ly, CASE WHEN  wdwe='WD' AND 100*year_cal+month_cal_id = &curr_mo  THEN days END AS MN_WD_days, CASE WHEN  wdwe='WD' AND 100*year_cal+month_cal_id = &curr_mo-100  THEN days END AS MN_WD_days_ly, CASE WHEN  wdwe='WD' AND 100*year_cal+month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo)  THEN days END AS L3_WD_days, CASE WHEN  wdwe='WD' AND 100*year_cal+month_cal_id+100 IN ( &curr_mo, &l2_mo, &l3_mo)  THEN days END AS L3_WD_days_ly, CASE WHEN  wdwe='WE' AND 100*year_cal+month_cal_id = &curr_mo  THEN days END AS MN_WE_days, CASE WHEN  wdwe='WE' AND 100*year_cal+month_cal_id = &curr_mo-100  THEN days END AS MN_WE_days_ly, CASE WHEN  wdwe='WE' AND 100*year_cal+month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo)  THEN days END AS L3_WE_days, CASE WHEN  wdwe='WE' AND 100*year_cal+month_cal_id+100 IN ( &curr_mo, &l2_mo, &l3_mo)  THEN days END AS L3_WE_days_ly FROM daysinmo );",MAMS MRDW Data Pull - Monthly New.sas
" CREATE TABLE daysinmonth AS select &curr_mo AS yrmo, SUM( MN_days) AS MN_days, SUM( MN_days_ly) AS MN_days_ly , SUM( L3_days) AS L3_days, SUM( L3_days_ly) AS L3_days_ly , SUM( MN_WD_days) AS MN_WD_days, SUM( MN_WD_days_ly) AS MN_WD_days_ly , SUM( L3_WD_days) AS L3_WD_days, SUM( L3_WD_days_ly) AS L3_WD_days_ly , SUM( MN_WE_days) AS MN_WE_days, SUM( MN_WE_days_ly) AS MN_WE_days_ly , SUM( L3_WE_days) AS L3_WE_days, SUM( L3_WE_days_ly) AS L3_WE_days_ly FROM daysinmo2;",MAMS MRDW Data Pull - Monthly New.sas
" CREATE TABLE mrdwdata AS  (  select a.property_cd, b.year_cal, b.month_cal_id , CASE WHEN a.market_prefix_cd IN ( '10', '12', '30', '34', '37', '20', '23', '24', '21') THEN 'NQ' when a.market_prefix_cd IN ( '17', '18') THEN 'SC' when a.market_prefix_cd = '16' THEN 'GV' when a.market_prefix_cd IN ( 'GR', 'CN', 'CT') THEN a.market_prefix_cd ELSE 'OT' END AS segment , CASE WHEN b.ab_day_of_week_cd IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' END AS wdwe , CASE WHEN a.market_prefix_cd IN ( '10', '12') THEN a.market_prefix_cd ELSE 'OT' END AS bnch , SUM( a.roomnights_qty) AS rn, SUM( a.net_rev_local_amt) AS rv , SUM( net_rev_usd_sub_amt) AS rv_usd FROM mrdw_fact_agg_dr_rev_analysis a, mrdw_dim_date b WHERE a.date_stay_dt=b.date_dt AND a.brand_cd IN ( 'CY', 'SH', 'FI', 'AR', 'OX', 'AL', 'FP') AND a.market_prefix_cd not IN ( '60', '61', '62', '63', '64', '65', '66', '67', '68', '69') AND 100*b.year_cal+b.month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo, &curr_mo-100, &l2_mo-100, &l3_mo-100) GROUP BY a.property_cd, b.year_cal, b.month_cal_id, segment, wdwe, bnch ORDER BY a.property_cd, b.year_cal, b.month_cal_id, segment, wdwe, bnch  )  ;",MAMS MRDW Data Pull - Monthly New.sas
" CREATE TABLE mndata AS select property_cd , CASE WHEN 100*a.year_cal+a.month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo) THEN &curryr ELSE &curryr-1 END AS yr , 'MN' AS timeframe, segment, wdwe, bnch , rn, rv, rv_usd FROM mrdwdata AS a WHERE 100*a.year_cal+a.month_cal_id = &curr_mo OR 100*a.year_cal+a.month_cal_id = &curr_mo-100;",MAMS MRDW Data Pull - Monthly New.sas
" CREATE TABLE l3data AS select property_cd , CASE WHEN 100*a.year_cal+a.month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo) THEN &curryr ELSE &curryr-1 END AS yr , 'L3' AS timeframe, segment, wdwe, bnch , SUM( rn) AS rn, SUM( rv) AS rv, SUM( rv_usd) AS rv_usd FROM mrdwdata AS a GROUP BY property_cd, calculated yr, segment, wdwe, bnch;",MAMS MRDW Data Pull - Monthly New.sas
 CREATE TABLE mrdwdata2 AS ( SELECT  *  FROM l3data UNION ALL SELECT  *  FROM mndata);,MAMS MRDW Data Pull - Monthly New.sas
" CREATE TABLE mrdwdata3 AS select coalesce( a.property_cd,b.property_cd) AS marsha, coalesce( a.timeframe,b.timeframe) AS timeframe , coalesce( a.segment,b.segment) AS segment, coalesce( a.wdwe,b.wdwe) AS wdwe , coalesce( a.bnch,b.bnch) AS bnch , a.rn AS rn, a.rv_usd AS rv, b.rn AS rn_ly, b.rv_usd AS rv_ly FROM mrdwdata2 AS a full JOIN mrdwdata2 AS b ON a.property_cd=b.property_cd AND a.yr=b.yr+1 AND a.timeframe=b.timeframe AND a.segment=b.segment AND a.wdwe=b.wdwe AND a.bnch=b.bnch WHERE coalesce( a.yr,b.yr+1)=&curryr;",MAMS MRDW Data Pull - Monthly New.sas
"SELECT * FROM mrdwdata3 ORDER BY marsha ,timeframe ,segment ,wdwe ,bnch;",MAMS MRDW Data Pull - Monthly New.sas
" CREATE TABLE tranmrdw2 AS ( SELECT  *  , compress( timeframe||'_'||segment||'_'||wdwe||'_'||_name_ ) AS idVAR  FROM tranmrdw );",MAMS MRDW Data Pull - Monthly New.sas
" CREATE TABLE tr_sum1 AS select marsha, compress( timeframe||'_'||segment||'_'||'FW'||'_'||_name_) AS idVAR, SUM( col1) AS col1 FROM tranmrdw GROUP BY marsha, calculated idVAR;",MAMS MRDW Data Pull - Monthly New.sas
" CREATE TABLE tr_sum2 AS select marsha, compress( timeframe||'_'||'TO'||'_'||wdwe||'_'||_name_) AS idVAR, SUM( col1) AS col1 FROM tranmrdw GROUP BY marsha, calculated idVAR;",MAMS MRDW Data Pull - Monthly New.sas
" CREATE TABLE tr_sum3 AS select marsha, compress( timeframe||'_'||segment||'_'||wdwe||'_'||_name_) AS idVAR, SUM( col1) AS col1 FROM tranmrdw GROUP BY marsha, calculated idVAR;",MAMS MRDW Data Pull - Monthly New.sas
" CREATE TABLE tr_sum4 AS select marsha, compress( timeframe||'_'||'TO'||'_'||'FW'||'_'||_name_) AS idVAR, SUM( col1) AS col1 FROM tranmrdw GROUP BY marsha, calculated idVAR;",MAMS MRDW Data Pull - Monthly New.sas
" CREATE TABLE tr_sum5 AS select marsha, compress( timeframe||'_'||bnch||'_'||wdwe||'_'||_name_) AS idVAR, SUM( col1) AS col1 FROM tranmrdw WHERE bnch<>'OT' GROUP BY marsha, calculated idVAR;",MAMS MRDW Data Pull - Monthly New.sas
" CREATE TABLE tr_sumall AS ( SELECT  *  , &curr_mo AS yrmo  FROM tr_sum3 UNION ALL SELECT  *  , &curr_mo AS yrmo  FROM tr_sum1 UNION ALL SELECT  *  , &curr_mo AS yrmo  FROM tr_sum2 UNION ALL SELECT  *  , &curr_mo AS yrmo  FROM tr_sum4 UNION ALL SELECT  *  , &curr_mo AS yrmo  FROM tr_sum5);",MAMS MRDW Data Pull - Monthly New.sas
"SELECT * FROM tr_sumall ORDER BY marsha ,idVAR;",MAMS MRDW Data Pull - Monthly New.sas
" CREATE TABLE mams.mams_mrdw AS select a.marsha , MN_TO_WD_rv/MN_TO_WD_rn AS WD_ADR_MN , L3_TO_WD_rv/L3_TO_WD_rn AS WD_ADR_L3 , ( MN_TO_WD_rv/L3_TO_WD_rn) / ( MN_TO_WD_rv_ly/MN_TO_WD_rn_ly) - 1 AS WD_ADR_chg_MN , ( L3_TO_WD_rv/L3_TO_WD_rn) / ( L3_TO_WD_rv_ly/L3_TO_WD_rn_ly) - 1 AS WD_ADR_chg_L3 , L3_NQ_WD_rn / ( L3_NQ_WD_rn+L3_SC_WD_rn+L3_OT_WD_rn) AS WD_NQ_Mix_L3 , ( L3_NQ_WD_rv/L3_NQ_WD_rn) / ( L3_NQ_WD_rv_ly/L3_NQ_WD_rn_ly) - 1 AS WD_NQ_ADR_chg_L3 , ( MN_NQ_WD_rv/MN_NQ_WD_rn) / ( MN_NQ_WD_rv_ly/MN_NQ_WD_rn_ly) - 1 AS WD_NQ_ADR_chg_MN , ( L3_NQ_WD_rn/L3_NQ_WD_rn_ly) - 1 AS WD_NQ_RN_chg_L3 , ( MN_NQ_WD_rn/MN_NQ_WD_rn_ly) - 1 AS WD_NQ_RN_chg_MN , ( MN_GR_WD_rn/MN_GR_WD_rn_ly) - 1 AS WD_GR_RN_chg_MN , ( L3_GR_WD_rn/L3_GR_WD_rn_ly) - 1 AS WD_GR_RN_chg_L3 , ( L3_SC_WD_rv/L3_SC_WD_rn) / ( L3_SC_WD_rv_ly/L3_SC_WD_rn_ly) - 1 AS WD_SC_ADR_chg_L3 , ( MN_SC_WD_rn/MN_SC_WD_rn_ly) - 1 AS WD_SC_RN_chg_MN , ( L3_SC_WD_rn/L3_SC_WD_rn_ly) - 1 AS WD_SC_RN_chg_L3 , ( L3_NQ_WD_rv+L3_SC_WD_rv+L3_GV_WD_rv+L3_OT_WD_rv)/( L3_NQ_WD_rn+L3_SC_WD_rn+L3_GV_WD_rn+L3_OT_WD_rn) / ( L3_NQ_WD_rv/L3_NQ_WD_rn) AS WD_TRE_L3 , ( L3_GR_FW_rn+-L3_GR_FW_rn_ly) AS FW_GR_RN_chg_rn_L3 , ( MN_GR_FW_rn+-MN_GR_FW_rn_ly) AS FW_GR_RN_chg_rn_MN , L3_GR_WD_rn / L3_TO_WD_rn AS WD_Gr_Mix_L3 , SUM( L3_GR_WD_rn / L3_TO_WD_rn, -L3_GR_WD_rn_ly / L3_TO_WD_rn_ly) AS WD_Gr_Mix_chg_L3 , MN_GR_WD_rn / MN_TO_WD_rn AS WD_Gr_Mix_MN , SUM( MN_GR_WD_rn / MN_TO_WD_rn, -MN_GR_WD_rn_ly / MN_TO_WD_rn_ly) AS WD_Gr_Mix_Chg_MN , ( L3_GR_WD_rv/L3_GR_WD_rn) AS WD_GR_ADR_L3 , ( L3_GR_WE_rv/L3_GR_WE_rn) AS WE_GR_ADR_L3 , ( L3_GR_FW_rv/L3_GR_FW_rn) AS FW_GR_ADR_L3 , L3_TO_WE_rn/( hcap*L3_WE_days) AS WE_Occ_L3 , MN_TO_WD_rn/( hcap*MN_WD_days) AS WD_Occ_MN , L3_TO_WD_rn/( hcap*L3_WD_days) AS WD_Occ_L3 , MN_TO_WD_rn_ly/( hcap*MN_WD_days_ly) AS WD_Occ_MN_LY , calculated WD_Occ_MN - calculated WD_Occ_MN_LY AS WD_Occ_chg_MN , L3_SC_WD_rn / ( L3_NQ_WD_rn+L3_SC_WD_rn+L3_OT_WD_rn) AS WD_SC_Mix_L3 , ( L3_NQ_WE_rv/L3_NQ_WE_rn) / ( L3_NQ_WE_rv_ly/L3_NQ_WE_rn_ly) - 1 AS WE_NQ_ADR_chg_L3 , ( MN_NQ_WE_rv/MN_NQ_WE_rn) / ( MN_NQ_WE_rv_ly/MN_NQ_WE_rn_ly) - 1 AS WE_NQ_ADR_chg_MN , ( L3_NQ_WE_rn/L3_NQ_WE_rn_ly) - 1 AS WE_NQ_RN_chg_L3 , ( MN_NQ_WE_rn/MN_NQ_WE_rn_ly) - 1 AS WE_NQ_RN_chg_MN , ( MN_GR_WE_rn+-MN_GR_WE_rn_ly)/MN_GR_WE_rn_ly AS WE_GR_RN_chg_MN , ( L3_GR_WE_rn+-L3_GR_WE_rn_ly)/L3_GR_WE_rn_ly AS WE_GR_RN_chg_L3 , ( MN_GR_WE_rn+-MN_GR_WE_rn_ly) AS WE_GR_RN_Var_MN , ( L3_GR_WE_rn+-L3_GR_WE_rn_ly) AS WE_GR_RN_Var_L3 , ( MN_GR_WD_rn+-MN_GR_WD_rn_ly) AS WD_GR_RN_Var_MN , ( L3_GR_WD_rn+-L3_GR_WD_rn_ly) AS WD_GR_RN_Var_L3 , ( L3_GR_FW_rn+-L3_GR_FW_rn_ly) / L3_GR_FW_rn_ly AS FW_Group_RN_PctChg_L3 , ( ( MN_NQ_WD_rn+MN_SC_WD_rn+MN_GV_WD_rn+MN_OT_WD_rn)-( MN_NQ_WD_rn_ly+MN_SC_WD_rn_ly+MN_GV_WD_rn_ly+MN_OT_WD_rn_ly)) / ( MN_NQ_WD_rn_ly+MN_SC_WD_rn_ly+MN_GV_WD_rn_ly+MN_OT_WD_rn_ly) AS WD_TR_RNPCTChg_MN , ( ( L3_NQ_WD_rn+L3_SC_WD_rn+L3_GV_WD_rn+L3_OT_WD_rn)-( L3_NQ_WD_rn_ly+L3_SC_WD_rn_ly+L3_GV_WD_rn_ly+L3_OT_WD_rn_ly)) / ( L3_NQ_WD_rn_ly+L3_SC_WD_rn_ly+L3_GV_WD_rn_ly+L3_OT_WD_rn_ly) AS WD_TR_RNPCTChg_L3 , L3_GR_WE_rn / L3_TO_WE_rn AS WE_GR_Mix_L3 , SUM( L3_GR_WE_rn / L3_TO_WE_rn,-L3_GR_WE_rn_ly / L3_TO_WE_rn_ly) AS WE_GR_Mix_chg_L3 , MN_GR_WE_rn / MN_TO_WE_rn AS WE_GR_Mix_MN , SUM( MN_GR_WE_rn / MN_TO_WE_rn, -MN_GR_WE_rn_ly / MN_TO_WE_rn_ly) AS WE_GR_Mix_chg_MN , ( L3_NQ_WD_rn+L3_SC_WD_rn+L3_GV_WD_rn+L3_OT_WD_rn) / L3_TO_WD_rn AS WD_TR_Mix_L3 , ( L3_NQ_WD_rn_ly+L3_SC_WD_rn_ly+L3_GV_WD_rn_ly+L3_OT_WD_rn_ly) / L3_TO_WD_rn_ly AS WD_TR_Mix_LY_L3 , calculated WD_TR_Mix_L3 - calculated WD_TR_Mix_LY_L3 AS WD_TR_Mix_chg_L3 , ( MN_NQ_WD_rn+MN_SC_WD_rn+MN_GV_WD_rn+MN_OT_WD_rn) / MN_TO_WD_rn AS WD_TR_Mix_MN , ( MN_NQ_WD_rn_ly+MN_SC_WD_rn_ly+MN_GV_WD_rn_ly+MN_OT_WD_rn_ly) / MN_TO_WD_rn_ly AS WD_TR_Mix_LY_MN , calculated WD_TR_Mix_MN - calculated WD_TR_Mix_LY_MN AS WD_TR_Mix_chg_MN , ( L3_NQ_WE_rn+L3_SC_WE_rn+L3_GV_WE_rn+L3_OT_WE_rn) / L3_TO_WE_rn AS WE_TR_Mix_L3 , ( L3_NQ_WE_rn_ly+L3_SC_WE_rn_ly+L3_GV_WE_rn_ly+L3_OT_WE_rn_ly) / L3_TO_WE_rn_ly AS WE_TR_Mix_LY_L3 , calculated WE_TR_Mix_L3 - calculated WE_TR_Mix_LY_L3 AS WE_TR_Mix_chg_L3 , ( MN_NQ_WE_rn+MN_SC_WE_rn+MN_GV_WE_rn+MN_OT_WE_rn) / MN_TO_WE_rn AS WE_TR_Mix_MN , ( MN_NQ_WE_rn_ly+MN_SC_WE_rn_ly+MN_GV_WE_rn_ly+MN_OT_WE_rn_ly) / MN_TO_WE_rn_ly AS WE_TR_Mix_LY_MN , calculated WE_TR_Mix_MN - calculated WE_TR_Mix_LY_MN AS WE_TR_Mix_chg_MN , d.RevPAR_YTD_TY AS FW_RevPAR_YTD , d.RevPAR_YTD_Chg AS FW_RevPAR_Chg_YTD , L3_GV_WD_rn / L3_TO_WD_rn AS WD_GV_Mix_L3 , MN_12_WD_RV/MN_12_WD_RN AS WD_MC12_ADR_MN FROM tran2_mrdw AS a INNER JOIN daysinmonth AS b ON a.yrmo=b.yrmo INNER JOIN prop_master AS c ON a.marsha=c.marsha LEFT JOIN RevPAR_YTD AS d ON a.marsha=d.marsha ORDER BY a.marsha;",MAMS MRDW Data Pull - Monthly New.sas
" CREATE TABLE tobe120 AS  (  select PROP_CODE, SUM( AU_GRP_RMS_TOBE) AS GRP_TOBE_RM120 FROM AW_REV_DBO.WEEKLY_PROJ WHERE STAYDATE >= &startdt AND STAYDATE <= &enddt GROUP BY PROP_CODE  ) ;",MAMS zeroTOBEs120.sas
"CREATE TABLE mams.tobe120_0 AS ( SELECT  *  , 'YES' AS GRP_TOBE_No120flg  FROM tobe120  WHERE GRP_TOBE_RM120=0);",MAMS zeroTOBEs120.sas
ALTER TABLE mams.tobe120_0 DROP COLUMN GRP_TOBE_RM120 ;,MAMS zeroTOBEs120.sas
 CREATE TABLE esf.tobe120_0 AS ( SELECT  *  FROM mams.tobe120_0 );,MAMS zeroTOBEs120.sas
 CREATE TABLE prop_master AS  (  SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER A  ) ;,MAMS-STR Monthly (FW WD and WE) - AW.sas
" CREATE TABLE MN_STR_DATA AS  (  SELECT marsha, time_type, data_category, data_type, currency_type, asof_yrmo, yrmnth , MARAVAIL, MARSOLD, MARREV, MARAVAILLY, MARSOLDLY, MARREVLY , MKTAVAIL, MKTSOLD, MKTREV, MKTAVAILLY, MKTSOLDLY, MKTREVLY FROM AW_CMP_DBO.STR_MONTHLY_DATA A WHERE asof_yrmo= &STARMNTH. AND yrmnth=&STARMNTH. AND TIME_TYPE IN ( 'MONTH', 'LAST3', 'YTD') AND DATA_CATEGORY IN ( 'Rooms', 'WDWE_Rooms') AND currency_type='Local' order BY MARSHA, time_type, data_category, data_type, currency_type, asof_yrmo, yrmnth  ) ;",MAMS-STR Monthly (FW WD and WE) - AW.sas
"CREATE TABLE Cal_pd AS ( SELECT  *  , MARSOLD/MARAVAIL AS STR_MNLY_Occ_MN , MKTSOLD/MKTAVAIL AS STR_MNLY_CompOcc_MN , ( STR_MNLY_Occ_MN -( MARSOLDLY /MARAVAILLY ))/( MARSOLDLY /MARAVAILLY  ) AS STR_MNLY_OccChg_MN , ( STR_MNLY_CompOcc_MN -( MKTSOLDLY /MKTAVAILLY ))/( MKTSOLDLY /MKTAVAILLY  ) AS STR_MNLY_CompOccChg_MN , MARREV /MARSOLD AS STR_MNLY_ADR_MN , MKTREV /MKTSOLD AS STR_MNLY_CompADR_MN , ( STR_MNLY_ADR_MN-MARREVLY /MARSOLDLY )/( MARREVLY/MARSOLDLY  ) AS STR_MNLY_ADRChg_MN , ( STR_MNLY_CompADR_MN-MKTREVLY /MKTSOLDLY )/( MKTREVLY/MKTSOLDLY  ) AS STR_MNLY_CompADRChg_MN , MARREV /MARAVAIL AS STR_MNLY_Rev_MN , MKTREV /MKTAVAIL AS STR_MNLY_CompRev_MN , ( STR_MNLY_Rev_MN-( MARREVLY/MARAVAILLY))/( MARREVLY/MARAVAILLY ) AS STR_MNLY_RevChg_MN , ( STR_MNLY_CompRev_MN-( MKTREVLY/MKTAVAILLY))/( MKTREVLY/MKTAVAILLY ) AS STR_MNLY_CompRevChg_MN , 100*( STR_MNLY_Occ_MN /STR_MNLY_CompOcc_MN  ) AS STR_MNLY_OccIndex_MN , 100*(  ( MARSOLDLY /MARAVAILLY )/ ( MKTSOLDLY/MKTAVAILLY)  ) AS STR_MNLY_OccIndexLY_MN , ( STR_MNLY_OccIndex_MN -STR_MNLY_OccIndexLY_MN )/STR_MNLY_OccIndexLY_MN AS STR_MNLY_OccIndexChg_MN , 100*( STR_MNLY_ADR_MN /STR_MNLY_CompADR_MN  ) AS STR_MNLY_ADRIndex_MN , 100*(  ( MARREVLY/MARSOLDLY)/ ( MKTREVLY/MKTSOLDLY) ) AS STR_MNLY_ADRIndexLY_MN , ( STR_MNLY_ADRIndex_MN -STR_MNLY_ADRIndexLY_MN )/STR_MNLY_ADRIndexLY_MN AS STR_MNLY_ADRIndexChg_MN , 100*( STR_MNLY_Rev_MN/STR_MNLY_CompRev_MN ) AS STR_MNLY_RevPARIndex_MN , 100*( MARREVLY /MARAVAILLY )/( MKTREVLY /MKTAVAILLY  ) AS STR_MNLY_RevPARIndexLY_MN , ( STR_MNLY_RevPARIndex_MN -STR_MNLY_RevPARIndexLY_MN )/STR_MNLY_RevPARIndexLY_MN AS STR_MNLY_RevPARIndexChg_MN , MARREV AS STR_MNLY_Revenue_MN  FROM MN_STR_DATA  WHERE TIME_TYPE='MONTH' AND DATA_CATEGORY='Rooms');",MAMS-STR Monthly (FW WD and WE) - AW.sas
"ALTER TABLE Cal_pd DROP COLUMN MARAVAIL ,  MARSOLD ,  MARREV ,  MARAVAILLY ,  MARSOLDLY ,  MARREVLY ,  MKTAVAIL ,  MKTSOLD ,  MKTREV ,  MKTAVAILLY ,  MKTSOLDLY ,  MKTREVLY ;",MAMS-STR Monthly (FW WD and WE) - AW.sas
SELECT * FROM Cal_pd ORDER BY MARSHA;,MAMS-STR Monthly (FW WD and WE) - AW.sas
"CREATE TABLE Cal_l3 AS ( SELECT  *  , MARSOLD/MARAVAIL AS STR_MNLY_Occ_L3 , MKTSOLD/MKTAVAIL AS STR_MNLY_CompOcc_L3 , ( STR_MNLY_Occ_L3 -( MARSOLDLY /MARAVAILLY ))/( MARSOLDLY /MARAVAILLY  ) AS STR_MNLY_OccChg_L3 , ( STR_MNLY_CompOcc_L3 -( MKTSOLDLY /MKTAVAILLY ))/( MKTSOLDLY /MKTAVAILLY  ) AS STR_MNLY_CompOccChg_L3 , MARREV /MARSOLD AS STR_MNLY_ADR_L3 , MKTREV /MKTSOLD AS STR_MNLY_CompADR_L3 , ( STR_MNLY_ADR_L3-MARREVLY /MARSOLDLY )/( MARREVLY/MARSOLDLY  ) AS STR_MNLY_ADRChg_L3 , ( STR_MNLY_CompADR_L3-MKTREVLY /MKTSOLDLY )/( MKTREVLY/MKTSOLDLY  ) AS STR_MNLY_CompADRChg_L3 , MARREV /MARAVAIL AS STR_MNLY_Rev_L3 , MKTREV /MKTAVAIL AS STR_MNLY_CompRev_L3 , ( STR_MNLY_Rev_L3-( MARREVLY/MARAVAILLY))/( MARREVLY/MARAVAILLY ) AS STR_MNLY_RevChg_L3 , ( STR_MNLY_Rev_L3-( MKTREVLY/MKTAVAILLY))/( MKTREVLY/MKTAVAILLY ) AS STR_MNLY_CompRevChg_L3 , 100*( STR_MNLY_Occ_L3 /STR_MNLY_CompOcc_L3  ) AS STR_MNLY_OccIndex_L3 , 100*(  ( MARSOLDLY /MARAVAILLY )/ ( MKTSOLDLY/MKTAVAILLY)  ) AS STR_MNLY_OccIndexLY_L3 , ( STR_MNLY_OccIndex_L3 -STR_MNLY_OccIndexLY_L3 )/STR_MNLY_OccIndexLY_L3 AS STR_MNLY_OccIndexChg_L3 , 100*( STR_MNLY_ADR_L3 /STR_MNLY_CompADR_L3  ) AS STR_MNLY_ADRIndex_L3 , 100*(  ( MARREVLY/MARSOLDLY)/ ( MKTREVLY/MKTSOLDLY) ) AS STR_MNLY_ADRIndexLY_L3 , ( STR_MNLY_ADRIndex_L3 -STR_MNLY_ADRIndexLY_L3 )/STR_MNLY_ADRIndexLY_L3 AS STR_MNLY_ADRIndexChg_L3 , 100*( STR_MNLY_Rev_L3/STR_MNLY_CompRev_L3 ) AS STR_MNLY_RevPARIndex_L3 , 100*( MARREVLY /MARAVAILLY )/( MKTREVLY /MKTAVAILLY  ) AS STR_MNLY_RevPARIndexLY_L3 , ( STR_MNLY_RevPARIndex_L3 -STR_MNLY_RevPARIndexLY_L3 )/STR_MNLY_RevPARIndexLY_L3 AS STR_MNLY_RevPARIndexChg_L3 , MARREV AS STR_MNLY_Revenue_L3  FROM MN_STR_DATA  WHERE TIME_TYPE='LAST3' AND DATA_CATEGORY='Rooms');",MAMS-STR Monthly (FW WD and WE) - AW.sas
"ALTER TABLE Cal_l3 DROP COLUMN MARAVAIL ,  MARSOLD ,  MARREV ,  MARAVAILLY ,  MARSOLDLY ,  MARREVLY ,  MKTAVAIL ,  MKTSOLD ,  MKTREV ,  MKTAVAILLY ,  MKTSOLDLY ,  MKTREVLY ;",MAMS-STR Monthly (FW WD and WE) - AW.sas
SELECT * FROM Cal_l3 ORDER BY MARSHA;,MAMS-STR Monthly (FW WD and WE) - AW.sas
"CREATE TABLE Cal_YTD AS ( SELECT  *  , MARSOLD/MARAVAIL AS STR_MNLY_Occ_YTD , MKTSOLD/MKTAVAIL AS STR_MNLY_CompOcc_YTD , ( STR_MNLY_Occ_YTD -( MARSOLDLY /MARAVAILLY ))/( MARSOLDLY /MARAVAILLY  ) AS STR_MNLY_OccChg_YTD , ( STR_MNLY_CompOcc_YTD -( MKTSOLDLY /MKTAVAILLY ))/( MKTSOLDLY /MKTAVAILLY  ) AS STR_MNLY_CompOccChg_YTD , MARREV /MARSOLD AS STR_MNLY_ADR_YTD , MKTREV /MKTSOLD AS STR_MNLY_CompADR_YTD , ( STR_MNLY_ADR_YTD-MARREVLY /MARSOLDLY )/( MARREVLY/MARSOLDLY  ) AS STR_MNLY_ADRChg_YTD , ( STR_MNLY_CompADR_YTD-MKTREVLY /MKTSOLDLY )/( MKTREVLY/MKTSOLDLY  ) AS STR_MNLY_CompADRChg_YTD , MARREV /MARAVAIL AS STR_MNLY_Rev_YTD , MKTREV /MKTAVAIL AS STR_MNLY_CompRev_YTD , ( STR_MNLY_Rev_YTD-( MARREVLY/MARAVAILLY))/( MARREVLY/MARAVAILLY ) AS STR_MNLY_RevChg_YTD , ( STR_MNLY_Rev_YTD-( MKTREVLY/MKTAVAILLY))/( MKTREVLY/MKTAVAILLY ) AS STR_MNLY_CompRevChg_YTD , 100*( STR_MNLY_Occ_YTD /STR_MNLY_CompOcc_YTD  ) AS STR_MNLY_OccIndex_YTD , 100*(  ( MARSOLDLY /MARAVAILLY )/ ( MKTSOLDLY/MKTAVAILLY)  ) AS STR_MNLY_OccIndexLY_YTD , ( STR_MNLY_OccIndex_YTD -STR_MNLY_OccIndexLY_YTD )/STR_MNLY_OccIndexLY_YTD AS STR_MNLY_OccIndexChg_YTD , 100*( STR_MNLY_ADR_YTD /STR_MNLY_CompADR_YTD  ) AS STR_MNLY_ADRIndex_YTD , 100*(  ( MARREVLY/MARSOLDLY)/ ( MKTREVLY/MKTSOLDLY) ) AS STR_MNLY_ADRIndexLY_YTD , ( STR_MNLY_ADRIndex_YTD -STR_MNLY_ADRIndexLY_YTD )/STR_MNLY_ADRIndexLY_YTD AS STR_MNLY_ADRIndexChg_YTD , 100*( STR_MNLY_Rev_YTD/STR_MNLY_CompRev_YTD ) AS STR_MNLY_RevPARIndex_YTD , 100*( MARREVLY /MARAVAILLY )/( MKTREVLY /MKTAVAILLY  ) AS STR_MNLY_RevPARIndexLY_YTD , ( STR_MNLY_RevPARIndex_YTD -STR_MNLY_RevPARIndexLY_YTD )/STR_MNLY_RevPARIndexLY_YTD AS STR_MNLY_RevPARIndexChg_YTD , MARREV AS STR_MNLY_Revenue_YTD  FROM MN_STR_DATA  WHERE TIME_TYPE='YTD' AND DATA_CATEGORY='Rooms');",MAMS-STR Monthly (FW WD and WE) - AW.sas
"ALTER TABLE Cal_YTD DROP COLUMN MARAVAIL ,  MARSOLD ,  MARREV ,  MARAVAILLY ,  MARSOLDLY ,  MARREVLY ,  MKTAVAIL ,  MKTSOLD ,  MKTREV ,  MKTAVAILLY ,  MKTSOLDLY ,  MKTREVLY ;",MAMS-STR Monthly (FW WD and WE) - AW.sas
SELECT * FROM Cal_YTD ORDER BY MARSHA;,MAMS-STR Monthly (FW WD and WE) - AW.sas
CREATE TABLE STR_FW_MONTHLY_&STR_FLDR. AS ( SELECT  *  FROM Cal_pd A JOIN Cal_l3 B ON  A.MARSHA =  B.MARSHA);,MAMS-STR Monthly (FW WD and WE) - AW.sas
ALTER TABLE STR_FW_MONTHLY_&STR_FLDR. DROP COLUMN TIMEF ;,MAMS-STR Monthly (FW WD and WE) - AW.sas
"CREATE TABLE mams.STR_FW_MONTHLY_&STR_FLDR. AS ( SELECT  *  , 'FW' AS MNLY_WDFW  FROM STR_FW_MONTHLY_&STR_FLDR. A JOIN Cal_YTD B ON  A.MARSHA =  B.MARSHA);",MAMS-STR Monthly (FW WD and WE) - AW.sas
ALTER TABLE mams.STR_FW_MONTHLY_&STR_FLDR. DROP COLUMN TIMEF ;,MAMS-STR Monthly (FW WD and WE) - AW.sas
" CREATE TABLE WD_MONTH2 AS ( SELECT MARSHA , MARSOLD/MARAVAIL AS STR_MNLY_Occ_MN , MKTSOLD/MKTAVAIL AS STR_MNLY_CompOcc_MN , MARSOLDLY/MARAVAILLY AS Occ_pd_LY , MKTSOLDLY/MKTAVAILLY AS CompOcc_pd_LY , STR_MNLY_Occ_MN-Occ_pd_LY AS STR_MNLY_OccChg_MN , STR_MNLY_CompOcc_MN-CompOcc_pd_LY AS STR_MNLY_CompOccChg_MN , MARREV/MARSOLD AS STR_MNLY_ADR_MN , MKTREV/MKTSOLD AS STR_MNLY_CompADR_MN , MARREVLY/MARSOLDLY AS ADR_pd_LY , MKTREVLY/MKTSOLDLY AS CompADR_pd_LY , ( STR_MNLY_ADR_MN-ADR_pd_LY)/ADR_pd_LY AS STR_MNLY_ADRChg_MN , ( STR_MNLY_CompADR_MN-CompADR_pd_LY)/CompADR_pd_LY AS STR_MNLY_CompADRChg_MN , MARREV/MARAVAIL AS STR_MNLY_Rev_MN , MKTREV/MKTAVAIL AS STR_MNLY_CompRev_MN , MARREVLY/MARAVAILLY AS RevPAR_pd_LY , MKTREVLY/MKTAVAILLY AS CompRevPAR_pd_LY , ( STR_MNLY_Rev_MN-RevPAR_pd_LY)/RevPAR_pd_LY AS STR_MNLY_RevChg_MN , ( STR_MNLY_CompRev_MN-CompRevPAR_pd_LY)/CompRevPAR_pd_LY AS STR_MNLY_CompRevChg_MN , 100*STR_MNLY_Occ_MN/STR_MNLY_CompOcc_MN AS STR_MNLY_OccIndex_MN , 100*Occ_pd_LY/CompOcc_pd_LY AS STR_MNLY_OccIndexLY_MN , ( STR_MNLY_OccIndex_MN-STR_MNLY_OccIndexLY_MN)/STR_MNLY_OccIndexLY_MN AS STR_MNLY_OccIndexChg_MN , 100*STR_MNLY_ADR_MN/STR_MNLY_CompADR_MN AS STR_MNLY_ADRIndex_MN , 100*ADR_pd_LY/CompADR_pd_LY AS STR_MNLY_ADRIndexLY_MN , ( STR_MNLY_ADRIndex_MN-STR_MNLY_ADRIndexLY_MN)/STR_MNLY_ADRIndexLY_MN AS STR_MNLY_ADRIndexChg_MN , 100*STR_MNLY_Rev_MN/STR_MNLY_CompRev_MN AS STR_MNLY_RevPARIndex_MN , 100*RevPAR_pd_LY/CompRevPAR_pd_LY AS STR_MNLY_RevPARIndexLY_MN , ( STR_MNLY_RevPARIndex_MN-STR_MNLY_RevPARIndexLY_MN)/STR_MNLY_RevPARIndexLY_MN AS STR_MNLY_RevPARIndexChg_MN  FROM MN_STR_DATA  WHERE TIME_TYPE='MONTH' AND DATA_CATEGORY='WDWE_Rooms' AND DATA_TYPE='WD');",MAMS-STR Monthly (FW WD and WE) - AW.sas
" CREATE TABLE WD_LAST32 AS ( SELECT MARSHA , MARSOLD/MARAVAIL AS STR_MNLY_Occ_L3 , MKTSOLD/MKTAVAIL AS STR_MNLY_CompOcc_L3 , MARSOLDLY/MARAVAILLY AS Occ_l3_LY , MKTSOLDLY/MKTAVAILLY AS CompOcc_l3_LY , STR_MNLY_Occ_L3-Occ_l3_LY AS STR_MNLY_OccChg_L3 , STR_MNLY_CompOcc_L3-CompOcc_l3_LY AS STR_MNLY_CompOccChg_L3 , MARREV/MARSOLD AS STR_MNLY_ADR_L3 , MKTREV/MKTSOLD AS STR_MNLY_CompADR_L3 , MARREVLY/MARSOLDLY AS ADR_l3_LY , MKTREVLY/MKTSOLDLY AS CompADR_l3_LY , ( STR_MNLY_ADR_L3-ADR_l3_LY)/ADR_l3_LY AS STR_MNLY_ADRChg_L3 , ( STR_MNLY_CompADR_L3-CompADR_l3_LY)/CompADR_l3_LY AS STR_MNLY_CompADRChg_L3 , MARREV/MARAVAIL AS STR_MNLY_Rev_L3 , MKTREV/MKTAVAIL AS STR_MNLY_CompRev_L3 , MARREVLY/MARAVAILLY AS RevPAR_l3_LY , MKTREVLY/MKTAVAILLY AS CompRevPAR_l3_LY , ( STR_MNLY_Rev_L3-RevPAR_l3_LY)/RevPAR_l3_LY AS STR_MNLY_RevChg_L3 , ( STR_MNLY_CompRev_L3-CompRevPAR_l3_LY)/CompRevPAR_l3_LY AS STR_MNLY_CompRevChg_L3 , 100*STR_MNLY_Occ_L3/STR_MNLY_CompOcc_L3 AS STR_MNLY_OccIndex_L3 , 100*Occ_l3_LY/CompOcc_l3_LY AS STR_MNLY_OccIndexLY_L3 , ( STR_MNLY_OccIndex_L3-STR_MNLY_OccIndexLY_L3)/STR_MNLY_OccIndexLY_L3 AS STR_MNLY_OccIndexChg_L3 , 100*STR_MNLY_ADR_L3/STR_MNLY_CompADR_L3 AS STR_MNLY_ADRIndex_L3 , 100*ADR_l3_LY/CompADR_l3_LY AS STR_MNLY_ADRIndexLY_L3 , ( STR_MNLY_ADRIndex_L3-STR_MNLY_ADRIndexLY_L3)/STR_MNLY_ADRIndexLY_L3 AS STR_MNLY_ADRIndexChg_L3 , 100*STR_MNLY_Rev_L3/STR_MNLY_CompRev_L3 AS STR_MNLY_RevPARIndex_L3 , 100*RevPAR_l3_LY/CompRevPAR_l3_LY AS STR_MNLY_RevPARIndexLY_L3 , ( STR_MNLY_RevPARIndex_L3-STR_MNLY_RevPARIndexLY_L3)/STR_MNLY_RevPARIndexLY_L3 AS STR_MNLY_RevPARIndexChg_L3  FROM MN_STR_DATA  WHERE TIME_TYPE='LAST3' AND DATA_CATEGORY='WDWE_Rooms' AND DATA_TYPE='WD');",MAMS-STR Monthly (FW WD and WE) - AW.sas
SELECT * FROM WD_MONTH2 ORDER BY marsha;,MAMS-STR Monthly (FW WD and WE) - AW.sas
SELECT * FROM WD_LAST32 ORDER BY marsha;,MAMS-STR Monthly (FW WD and WE) - AW.sas
" CREATE TABLE mams.STR_WD_MONTHLY_&STR_FLDR. AS ( SELECT  *  , 'WD' AS MNLY_WDFW  FROM WD_MONTH2 A JOIN WD_LAST32 B ON  A.MARSHA =  B.MARSHA);",MAMS-STR Monthly (FW WD and WE) - AW.sas
" CREATE TABLE WE_MONTH2 AS ( SELECT MARSHA , MARSOLD/MARAVAIL AS STR_MNLY_Occ_MN , MKTSOLD/MKTAVAIL AS STR_MNLY_CompOcc_MN , MARSOLDLY/MARAVAILLY AS Occ_pd_LY , MKTSOLDLY/MKTAVAILLY AS CompOcc_pd_LY , STR_MNLY_Occ_MN-Occ_pd_LY AS STR_MNLY_OccChg_MN , STR_MNLY_CompOcc_MN-CompOcc_pd_LY AS STR_MNLY_CompOccChg_MN , MARREV/MARSOLD AS STR_MNLY_ADR_MN , MKTREV/MKTSOLD AS STR_MNLY_CompADR_MN , MARREVLY/MARSOLDLY AS ADR_pd_LY , MKTREVLY/MKTSOLDLY AS CompADR_pd_LY , ( STR_MNLY_ADR_MN-ADR_pd_LY)/ADR_pd_LY AS STR_MNLY_ADRChg_MN , ( STR_MNLY_CompADR_MN-CompADR_pd_LY)/CompADR_pd_LY AS STR_MNLY_CompADRChg_MN , MARREV/MARAVAIL AS STR_MNLY_Rev_MN , MKTREV/MKTAVAIL AS STR_MNLY_CompRev_MN , MARREVLY/MARAVAILLY AS RevPAR_pd_LY , MKTREVLY/MKTAVAILLY AS CompRevPAR_pd_LY , ( STR_MNLY_Rev_MN-RevPAR_pd_LY)/RevPAR_pd_LY AS STR_MNLY_RevChg_MN , ( STR_MNLY_CompRev_MN-CompRevPAR_pd_LY)/CompRevPAR_pd_LY AS STR_MNLY_CompRevChg_MN , 100*STR_MNLY_Occ_MN/STR_MNLY_CompOcc_MN AS STR_MNLY_OccIndex_MN , 100*Occ_pd_LY/CompOcc_pd_LY AS STR_MNLY_OccIndexLY_MN , ( STR_MNLY_OccIndex_MN-STR_MNLY_OccIndexLY_MN)/STR_MNLY_OccIndexLY_MN AS STR_MNLY_OccIndexChg_MN , 100*STR_MNLY_ADR_MN/STR_MNLY_CompADR_MN AS STR_MNLY_ADRIndex_MN , 100*ADR_pd_LY/CompADR_pd_LY AS STR_MNLY_ADRIndexLY_MN , ( STR_MNLY_ADRIndex_MN-STR_MNLY_ADRIndexLY_MN)/STR_MNLY_ADRIndexLY_MN AS STR_MNLY_ADRIndexChg_MN , 100*STR_MNLY_Rev_MN/STR_MNLY_CompRev_MN AS STR_MNLY_RevPARIndex_MN , 100*RevPAR_pd_LY/CompRevPAR_pd_LY AS STR_MNLY_RevPARIndexLY_MN , ( STR_MNLY_RevPARIndex_MN-STR_MNLY_RevPARIndexLY_MN)/STR_MNLY_RevPARIndexLY_MN AS STR_MNLY_RevPARIndexChg_MN  FROM MN_STR_DATA  WHERE TIME_TYPE='MONTH' AND DATA_CATEGORY='WDWE_Rooms' AND DATA_TYPE='WE');",MAMS-STR Monthly (FW WD and WE) - AW.sas
" CREATE TABLE WE_LAST32 AS ( SELECT MARSHA , MARSOLD/MARAVAIL AS STR_MNLY_Occ_L3 , MKTSOLD/MKTAVAIL AS STR_MNLY_CompOcc_L3 , MARSOLDLY/MARAVAILLY AS Occ_l3_LY , MKTSOLDLY/MKTAVAILLY AS CompOcc_l3_LY , STR_MNLY_Occ_L3-Occ_l3_LY AS STR_MNLY_OccChg_L3 , STR_MNLY_CompOcc_L3-CompOcc_l3_LY AS STR_MNLY_CompOccChg_L3 , MARREV/MARSOLD AS STR_MNLY_ADR_L3 , MKTREV/MKTSOLD AS STR_MNLY_CompADR_L3 , MARREVLY/MARSOLDLY AS ADR_l3_LY , MKTREVLY/MKTSOLDLY AS CompADR_l3_LY , ( STR_MNLY_ADR_L3-ADR_l3_LY)/ADR_l3_LY AS STR_MNLY_ADRChg_L3 , ( STR_MNLY_CompADR_L3-CompADR_l3_LY)/CompADR_l3_LY AS STR_MNLY_CompADRChg_L3 , MARREV/MARAVAIL AS STR_MNLY_Rev_L3 , MKTREV/MKTAVAIL AS STR_MNLY_CompRev_L3 , MARREVLY/MARAVAILLY AS RevPAR_l3_LY , MKTREVLY/MKTAVAILLY AS CompRevPAR_l3_LY , ( STR_MNLY_Rev_L3-RevPAR_l3_LY)/RevPAR_l3_LY AS STR_MNLY_RevChg_L3 , ( STR_MNLY_CompRev_L3-CompRevPAR_l3_LY)/CompRevPAR_l3_LY AS STR_MNLY_CompRevChg_L3 , 100*STR_MNLY_Occ_L3/STR_MNLY_CompOcc_L3 AS STR_MNLY_OccIndex_L3 , 100*Occ_l3_LY/CompOcc_l3_LY AS STR_MNLY_OccIndexLY_L3 , ( STR_MNLY_OccIndex_L3-STR_MNLY_OccIndexLY_L3)/STR_MNLY_OccIndexLY_L3 AS STR_MNLY_OccIndexChg_L3 , 100*STR_MNLY_ADR_L3/STR_MNLY_CompADR_L3 AS STR_MNLY_ADRIndex_L3 , 100*ADR_l3_LY/CompADR_l3_LY AS STR_MNLY_ADRIndexLY_L3 , ( STR_MNLY_ADRIndex_L3-STR_MNLY_ADRIndexLY_L3)/STR_MNLY_ADRIndexLY_L3 AS STR_MNLY_ADRIndexChg_L3 , 100*STR_MNLY_Rev_L3/STR_MNLY_CompRev_L3 AS STR_MNLY_RevPARIndex_L3 , 100*RevPAR_l3_LY/CompRevPAR_l3_LY AS STR_MNLY_RevPARIndexLY_L3 , ( STR_MNLY_RevPARIndex_L3-STR_MNLY_RevPARIndexLY_L3)/STR_MNLY_RevPARIndexLY_L3 AS STR_MNLY_RevPARIndexChg_L3  FROM MN_STR_DATA  WHERE TIME_TYPE='LAST3' AND DATA_CATEGORY='WDWE_Rooms' AND DATA_TYPE='WE');",MAMS-STR Monthly (FW WD and WE) - AW.sas
SELECT * FROM WE_MONTH2 ORDER BY marsha;,MAMS-STR Monthly (FW WD and WE) - AW.sas
SELECT * FROM WE_LAST32 ORDER BY marsha;,MAMS-STR Monthly (FW WD and WE) - AW.sas
" CREATE TABLE mams.STR_WE_MONTHLY_&STR_FLDR. AS ( SELECT  *  , 'WE' AS MNLY_WDFW  FROM WE_MONTH2 A JOIN WE_LAST32 B ON  A.MARSHA =  B.MARSHA);",MAMS-STR Monthly (FW WD and WE) - AW.sas
" CREATE TABLE work.global_pipeline AS ( SELECT  *  , &STARMNTH AS ASOF_YRMO  FROM PIPELINE.global_pipeline  WHERE PROJECT_PHASE in( 'In Construction','Final Planning','Ab AND oned','Final Planning','Deferred','Unconfirmed' ) );",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_AW_load_global_pipeline_Load_wASYRMO.sas
" CREATE TABLE AW_TGT_BUS_DBO.STR_GLOBAL_PIPELINE_STG (  PROJECT_ID VARCHAR( 10), PROJECT_NAME VARCHAR( 128), ADDRESS VARCHAR( 120), CITY VARCHAR( 46), STATE VARCHAR( 6), COUNTRY VARCHAR( 56), POSTAL_CODE VARCHAR( 14), MARKET VARCHAR( 56), TRACT VARCHAR( 68), ROOM_COUNT integer, CONDOTEL_ROOM_COUNT VARCHAR( 6), TIMESHARE_UNITS VARCHAR( 6), PROJECTED_OPENING_DATE VARCHAR( 20), PROJECT_PHASE VARCHAR( 30), AFFILIATION_CODE VARCHAR( 8), AFFILIATION_NAME VARCHAR( 76), CHAIN_SCALE VARCHAR( 42), PROJECT_OVERVIEW VARCHAR( 2048), DATE_ENTERED_PRE_PLANNING VARCHAR( 20), DATE_ENTERED_PLANNING VARCHAR( 20), DATE_ENTERED_FINAL_PLANNING VARCHAR( 20), DATE_ENTERED_CONSTRUCTION VARCHAR( 20), DATE_ENTERED_DEFERRED VARCHAR( 20), DATE_ENTERED_ABANDONED VARCHAR( 20), MANAGEMENT_COMPANY_NAME VARCHAR( 122), MANAGEMENT_CONTACT_NAME VARCHAR( 52), MANAGEMENT_ADDRESS_1 VARCHAR( 98), MANAGEMENT_ADDRESS_2 VARCHAR( 70), MANAGEMENT_CITY VARCHAR( 28), MANAGEMENT_STATE VARCHAR( 6), MANAGEMENT_COUNTRY VARCHAR( 40), MANAGEMENT_POSTAL_CODE VARCHAR( 20), MANAGEMENT_PHONE VARCHAR( 26), MANAGEMENT_EMAIL VARCHAR( 78), MANAGEMENT_WEBSITE VARCHAR( 140), OWNER_COMPANY_NAME VARCHAR( 134), OWNER_CONTACT_NAME VARCHAR( 132), OWNER_ADDRESS_1 VARCHAR( 106), OWNER_ADDRESS_2 VARCHAR( 88), OWNER_CITY VARCHAR( 28), OWNER_STATE VARCHAR( 22), OWNER_COUNTRY VARCHAR( 40), OWNER_POSTAL_CODE VARCHAR( 20), OWNER_PHONE VARCHAR( 26), OWNER_EMAIL VARCHAR( 72), OWNER_WEBSITE VARCHAR( 100), DEVELOPER_COMPANY_NAME VARCHAR( 160), DEVELOPER_CONTACT_NAME VARCHAR( 72), DEVELOPER_ADDRESS_1 VARCHAR( 118), DEVELOPER_ADDRESS_2 VARCHAR( 96), DEVELOPER_CITY VARCHAR( 28), DEVELOPER_STATE VARCHAR( 10), DEVELOPER_COUNTRY VARCHAR( 40), DEVELOPER_POSTAL_CODE VARCHAR( 20), DEVELOPER_PHONE VARCHAR( 26), DEVELOPER_EMAIL VARCHAR( 62), DEVELOPER_WEBSITE VARCHAR( 200), ARCHITECT_COMPANY_NAME VARCHAR( 98), ARCHITECT_CONTACT_NAME VARCHAR( 52), ARCHITECT_ADDRESS1 VARCHAR( 92), ARCHITECT_ADDRESS_2 VARCHAR( 134), ARCHITECT_CITY VARCHAR( 38), ARCHITECT_STATE VARCHAR( 6), ARCHITECT_COUNTRY VARCHAR( 40), ARCHITECT_POSTAL_CODE VARCHAR( 20), ARCHITECT_PHONE VARCHAR( 26), ARCHITECT_EMAIL VARCHAR( 68), ARCHITECT_WEBSITE VARCHAR( 66), PARENT_COMPANY_NAME VARCHAR( 74), CONDOTEL__Y_N_ VARCHAR( 2), POOL__Y_N_ VARCHAR( 2), RESTAURANT__Y_N_ VARCHAR( 2), BUSINESS_CENTER__Y_N_ VARCHAR( 2), MEETING_SPACE__Y_N_ VARCHAR( 2), NUMBER_OF_MEETING_ROOMS VARCHAR( 10), LARGEST_MEETING_ROOM_SQ_FT VARCHAR( 10), TOTAL_MEETING_SPACE_SQ_FT VARCHAR( 12), PROJECT_AREA__1000_SQ__FT_ VARCHAR( 18), PROJECT_VALUE__MILLIONS__ VARCHAR( 12), COUNTY_FIP VARCHAR( 10), COUNTY_NAME VARCHAR( 48), MSA_FIP VARCHAR( 10), MSA_NAME VARCHAR( 200), DATA_SOURCE VARCHAR( 20), EXECUTED_DATE VARCHAR( 20), DATE_CREATED VARCHAR( 20), FUTURE_STR_NUMBER VARCHAR( 12), LATITUDE VARCHAR( 20), LONGITUDE VARCHAR( 22), CONTINENT VARCHAR( 22), NON_RENTAL_RESIDENCES integer, PROJECT_NUM integer, FUTURE_STR_NUM integer, ASOF_YRMO INTEGER ) ) by odbc ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_AW_load_global_pipeline_Load_wASYRMO.sas
INSERT INTO TABLE AWPROD.STR_GLOBAL_PIPELINE_STG SELECT * FROM global_pipeline;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_AW_load_global_pipeline_Load_wASYRMO.sas
   INSERT INTO AW_TGT_BUS_DBO.STR_GLOBAL_PIPELINE Select * FROM AW_TGT_BUS_DBO.STR_GLOBAL_PIPELINE_STG ) by odbc ;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_AW_load_global_pipeline_Load_wASYRMO.sas
   DROP TABLE AW_TGT_BUS_DBO.STR_GLOBAL_PIPELINE_STG ) by odbc ;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_AW_load_global_pipeline_Load_wASYRMO.sas
" CREATE TABLE aw_stg_bus_dbo.str_raw_daily_data_hist_new_week (  MARSHA VARCHAR( 5) , STR_ID INTEGER , BRAND VARCHAR( 2) , CURRENCY_TYPE VARCHAR( 12) , CUR VARCHAR( 3) , ASOF_DATE INTEGER , COMPLETE_DATA INTEGER , COMPLETE_DATA_SEG INTEGER , DATASOURCE VARCHAR( 3) , DATE_TY INTEGER , YRMNTH_TY INTEGER , YEAR_TY INTEGER , MONTH_TY INTEGER , DOM_TY INTEGER , DOW_TY INTEGER , WDWE_TY VARCHAR( 2) , DATE_LY INTEGER , YRMNTH_LY INTEGER , YEAR_LY INTEGER , MONTH_LY INTEGER , DOM_LY INTEGER , DOW_LY INTEGER , WDWE_LY VARCHAR( 2) , MARAVAIL INTEGER , MARSOLD INTEGER , MARREV DOUBLE , MKTAVAIL INTEGER , MKTSOLD DOUBLE , MKTREV DOUBLE , MKTAVAIL_UNW INTEGER , MKTSOLD_UNW DOUBLE , MKTREV_UNW DOUBLE , MARAVAILLY INTEGER , MARSOLDLY INTEGER , MARREVLY DOUBLE , MKTAVAILLY INTEGER , MKTSOLDLY DOUBLE , MKTREVLY DOUBLE , MKTAVAIL_UNWLY INTEGER , MKTSOLD_UNWLY DOUBLE , MKTREV_UNWLY DOUBLE , MARAVAIL_GP INTEGER , MARSOLD_GP INTEGER , MARREV_GP DOUBLE , MKTAVAIL_GP INTEGER , MKTSOLD_GP DOUBLE , MKTREV_GP DOUBLE , MKTAVAIL_UNW_GP INTEGER , MKTSOLD_UNW_GP DOUBLE , MKTREV_UNW_GP DOUBLE , MARAVAILLY_GP INTEGER , MARSOLDLY_GP INTEGER , MARREVLY_GP DOUBLE , MKTAVAILLY_GP INTEGER , MKTSOLDLY_GP DOUBLE , MKTREVLY_GP DOUBLE , MKTAVAIL_UNWLY_GP INTEGER , MKTSOLD_UNWLY_GP DOUBLE , MKTREV_UNWLY_GP DOUBLE , MARAVAIL_TN INTEGER , MARSOLD_TN INTEGER , MARREV_TN DOUBLE , MKTAVAIL_TN INTEGER , MKTSOLD_TN DOUBLE , MKTREV_TN DOUBLE , MKTAVAIL_UNW_TN INTEGER , MKTSOLD_UNW_TN DOUBLE , MKTREV_UNW_TN DOUBLE , MARAVAILLY_TN INTEGER , MARSOLDLY_TN INTEGER , MARREVLY_TN DOUBLE , MKTAVAILLY_TN INTEGER , MKTSOLDLY_TN DOUBLE , MKTREVLY_TN DOUBLE , MKTAVAIL_UNWLY_TN INTEGER , MKTSOLD_UNWLY_TN DOUBLE , MKTREV_UNWLY_TN DOUBLE , MARAVAIL_CN INTEGER , MARSOLD_CN INTEGER , MARREV_CN DOUBLE , MKTAVAIL_CN INTEGER , MKTSOLD_CN DOUBLE , MKTREV_CN DOUBLE , MKTAVAIL_UNW_CN INTEGER , MKTSOLD_UNW_CN DOUBLE , MKTREV_UNW_CN DOUBLE , MARAVAILLY_CN INTEGER , MARSOLDLY_CN INTEGER , MARREVLY_CN DOUBLE , MKTAVAILLY_CN INTEGER , MKTSOLDLY_CN DOUBLE , MKTREVLY_CN DOUBLE , MKTAVAIL_UNWLY_CN INTEGER , MKTSOLD_UNWLY_CN DOUBLE , MKTREV_UNWLY_CN DOUBLE ) ) by odbc ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_aw_load_new_week.sas
   INSERT INTO AW_STG_BUS_DBO.STR_RAW_DAILY_DATA_HIST_TMP SELECT * FROM AW_CMP_DBO.STR_RAW_DAILY_DATA_HIST WHERE ASOF_DATE < &PREVDT AND ASOF_DATE <> ( SELECT MIN( ASOF_DATE) FROM AW_CMP_DBO.STR_RAW_DAILY_DATA_HIST) ) by odbc ;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_aw_load_new_week.sas
INSERT INTO TABLE AWSTG.STR_RAW_DAILY_DATA_HIST_NEW_WEEK SELECT * FROM output.new_week;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_aw_load_new_week.sas
   INSERT INTO AW_STG_BUS_DBO.STR_RAW_DAILY_DATA_HIST_TMP SELECT * FROM AW_STG_BUS_DBO.STR_RAW_DAILY_DATA_HIST_NEW_WEEK ) by odbc ;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_aw_load_new_week.sas
   TRUNCATE TABLE AW_CMP_DBO.STR_RAW_DAILY_DATA_HIST ) by odbc ;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_aw_load_new_week.sas
   INSERT INTO AW_CMP_DBO.STR_RAW_DAILY_DATA_HIST SELECT * FROM AW_STG_BUS_DBO.STR_RAW_DAILY_DATA_HIST_TMP ) by odbc ;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_aw_load_new_week.sas
"   CALL AW_TGT_PROXY_DBO.GRANT_ON_TABLE( 'AW_CMP_DBO' ,'STR_RAW_DAILY_DATA_HIST'  )  ) by odbc ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_aw_load_new_week.sas
   TRUNCATE TABLE AW_STG_BUS_DBO.STR_RAW_DAILY_DATA_HIST_TMP ) by odbc ;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_aw_load_new_week.sas
   DROP TABLE AW_STG_BUS_DBO.STR_RAW_DAILY_DATA_HIST_NEW_WEEK ) by odbc ;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_aw_load_new_week.sas
" CREATE TABLE AW_TGT_BUS_DBO.str_global_census_STG (  STR_Number VARCHAR( 20), Hotel_Name VARCHAR( 300), Address_1 VARCHAR( 210), Address_2 VARCHAR( 225), City VARCHAR( 200), State VARCHAR( 10), Country VARCHAR( 75), Postal_Code VARCHAR( 30), Market VARCHAR( 120), Tract VARCHAR( 120), Continent VARCHAR( 45), Sub_Continent VARCHAR( 60), Open_Date VARCHAR( 20), Original_Affiliation VARCHAR( 120), Rooms double, Chain_Scale VARCHAR( 63), Class VARCHAR( 60), Affiliation VARCHAR( 120), Telephone VARCHAR( 45), Fax VARCHAR( 45), Mailing_Address_1 VARCHAR( 210), Mailing_Address_2 VARCHAR( 225), Mailing_City VARCHAR( 300), Mailing_State VARCHAR( 10), Mailing_Country VARCHAR( 75), Mailing_Postal_Code VARCHAR( 30), Floors double, Indoor_Corridors__Y_N_ VARCHAR( 3), Location VARCHAR( 60), Restaurant__Y_N_ VARCHAR( 3), Convention__Y_N_ VARCHAR( 3), Conference__Y_N_ VARCHAR( 3), Largest_Meeting_Space double, Total_Meeting_Space double, Resort__Y_N_ VARCHAR( 3), Ski__Y_N_ VARCHAR( 3), Spa__Y_N_ VARCHAR( 3), Golf__Y_N_ VARCHAR( 3), Boutique__Y_N_ VARCHAR( 3), All_Suites__Y_N_ VARCHAR( 3), Casino__Y_N_ VARCHAR( 3), Single_Low_Rate double, Single_High_Rate double, Double_Low_Rate double, Double_High_Rate double, Suite_Low_Rate double, Suite_High_Rate double, Operation VARCHAR( 60), Parent_Company VARCHAR( 150), Chain_ID VARCHAR( 30), Year_Affiliated VARCHAR( 20), Ex_Affiliation VARCHAR( 90), Ex_Affiliation_2 VARCHAR( 90), Ex_Affiliation_3 VARCHAR( 63), Management_Company VARCHAR( 400), Management_Contact_Name VARCHAR( 66), Management_Contact_Title VARCHAR( 400), Management_Address_1 VARCHAR( 200), Management_Address_2 VARCHAR( 200), Management_City VARCHAR( 100), Management_State VARCHAR( 6), Management_Country VARCHAR( 60), Management_Postal_Code VARCHAR( 30), Management_Phone VARCHAR( 45), Management_Email VARCHAR( 400), Management_Website VARCHAR( 400), Owner_Company VARCHAR( 150), Owner_Contact_Name VARCHAR( 66), Owner_Contact_Title VARCHAR( 120), Owner_Address_1 VARCHAR( 180), Owner_Address_2 VARCHAR( 120), Owner_City VARCHAR( 120), Owner_State VARCHAR( 6), Owner_Country VARCHAR( 60), Owner_Postal_Code VARCHAR( 30), Owner_Phone VARCHAR( 100), Owner_Email VARCHAR( 120), Owner_Website VARCHAR( 90), Latitude VARCHAR( 30), Longitude VARCHAR( 33), Region VARCHAR( 60), County VARCHAR( 90), MSA  VARCHAR( 150), Price VARCHAR( 30), STR_NUM double, ASOF_YRMO INTEGER ) ) by odbc ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_AW_load_STR_Census_wASYRMO.sas
" CREATE TABLE global_census AS ( SELECT  *  , &STARMNTH AS ASOF_YRMO  FROM PIPELINE.global_census );",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_AW_load_STR_Census_wASYRMO.sas
INSERT INTO TABLE AWPROD.str_global_census_STG SELECT * FROM work.global_census;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_AW_load_STR_Census_wASYRMO.sas
   INSERT INTO AW_TGT_BUS_DBO.STR_GLOBAL_CENSUS Select * FROM AW_TGT_BUS_DBO.str_global_census_STG ) by odbc ;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_AW_load_STR_Census_wASYRMO.sas
   DROP TABLE AW_TGT_BUS_DBO.str_global_census_STG ) by odbc ;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_AW_load_STR_Census_wASYRMO.sas
"CREATE TABLE STARPROP1 AS ( SELECT STRNumber , PropertyName , Affiliation , ChainID , MARSHA , Starlink FROM ""\\Hdqmdm1fpcl4v1\lodg-revmgmt\DSS\star_data\DaySTR_Raw_Data\MarrCode_&DBEGL7..txt"" );",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_AW_Load_STR_Property_v2.sas
"CREATE TABLE starprop2 AS (SELECT distinct ChainID, STR_ID FROM STARPROP1 WHERE STR_ID<>' ' AND RTRIM( ChainID)<> ORDER BY ChainID);",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_AW_Load_STR_Property_v2.sas
"CREATE TABLE starprop2 AS ( SELECT  *  , UPPER( CHAINID ) AS MARSHA  FROM starprop2 );",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_AW_Load_STR_Property_v2.sas
ALTER TABLE starprop2 DROP COLUMN CHAINID ;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_AW_Load_STR_Property_v2.sas
" CREATE TABLE AW_STG_BUS_DBO.STR_MI_PROPERTY_LIST (  MARSHA VARCHAR( 5), STR_ID integer, RUN_DATE  DATE ) ) by odbc ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_AW_Load_STR_Property_v2.sas
" CREATE TABLE sourceData AS ( SELECT  *  , ""&sysdate""d AS RUN_DATE  FROM starprop2 );",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_AW_Load_STR_Property_v2.sas
INSERT INTO TABLE AWSTG.STR_MI_PROPERTY_LIST SELECT * FROM work.sourceData;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_AW_Load_STR_Property_v2.sas
" CREATE HADOOP TABLE AW_STG_BUS_DBO.STR_MI_PROPERTY_LIST_STG (  MARSHA VARCHAR( 5), STR_ID INTEGER, RUN_DATE DATE ) stored AS parquetfile ) by odbc ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_AW_Load_STR_Property_v2.sas
   INSERT INTO AW_STG_BUS_DBO.STR_MI_PROPERTY_LIST_STG Select FROM AW_STG_BUS_DBO.STR_MI_PROPERTY_LIST ) by odbc ;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_AW_Load_STR_Property_v2.sas
 CREATE TABLE work.str_chk AS  (  SELECT COUNT( *) AS count_aw FROM AW_STG_BUS_DBO.STR_MI_PROPERTY_LIST_STG  ) ;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_AW_Load_STR_Property_v2.sas
 CREATE TABLE work.str_chk2 AS SELECT COUNT( *) AS count_src FROM SOURCEDATA;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_AW_Load_STR_Property_v2.sas
DROP TABLE AWSTG.STR_MI_PROPERTY_LIST_REPL;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_AW_Load_STR_Property_v2.sas
"  CALL AW_TGT_PROXY_DBO.GRANT_ON_TABLE( %quote( %'%scan( &outschm.,1,. )%'),%quote( %'%scan( &outtab.,1,. )%') ) ",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_AW_Load_STR_Property_v2.sas
DROP TABLE AWSTG.STR_MI_PROPERTY_LIST;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_AW_Load_STR_Property_v2.sas
 CREATE TABLE work.global_census AS  (  SELECT * FROM AW_CMP_DBO.STR_GLOBAL_CENSUS WHERE ASOF_YRMO = &STARMNTH   ) ;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_compset_check_tool.sas
" CREATE TABLE comp.Compset_check_&STARMNTH AS select a.STR_NUM, a.Country, a.Market, a.Tract, a.Class, a.Chain_Scale , a.Affiliation, a.Hotel_Name, a.Address_1, a.City, a.State, a.Postal_Code , a.Parent_Company, a.Management_Company, a.Owner_Company , a.Open_Date, b.DaySTAR_Part, b.STAR_Part, a.Rooms , ""&Month. &Year."" AS run_date, ""&Month."" AS run_month , ""&Year."" AS run_year FROM global_census a LEFT JOIN participation AS b ON a.STR_NUMBER = b.CENSUS_ID WHERE b.star_part = ""Y"" ORDER BY a.country, a.Market, a.Tract, a.Class, a.Affiliation ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_compset_check_tool.sas
" CREATE TABLE work.PLU AS  (  SELECT MARSHA, MF, BRND, CURR, REGION, HOTNAME, RD, CLUSTER_NAME, MARKET_NAME, STR_ID, ACOMP, AVP, SUB_BRAND, '' AS HIGH_IMPACT, DOMINT, SUB_BRAND, COUNTRY FROM AW_TGT_BUS_DBO.PROPERTY_MASTER WHERE openflag = 'Y' ORDER BY marsha   ) ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_DAYSTAR_LOAD_AW.sas
"CREATE TABLE DAYSTR_DATA_FROM_RAW AS ( SELECT Aff , Census , ChainID , DateTY , DateLY , PropSupTY , PropDemTY , PropRevTY , PropSupLY , PropDemLY , PropRevLY , CompSupTY , CompDemTY , CompRevTY , CompSupLY , CompDemLY , CompRevLY , MASCSupTY , MASCDemTY , MASCRevTY , MASCSupLY , MASCDemLY , MASCRevLY , OccRankTY , ADRRankTY , RevParRankTY , OccRank_ChgTY , ADRRank_ChgTY , RevParRank_ChgTY , OccRankLY , ADRRankLY , RevParRankLY , OccRank_ChgLY , ADRRank_ChgLY , RevParRank_ChgLY , PropLocRevTY , PropLocRevLY , CompLocRevTY , CompLocRevLY , MASCLocRevTY , MASCLocRevLY , CurrencyCo FROM ""\\Hdqmdm1fpcl4v1\lodg-revmgmt\DSS\star_data\DaySTR_Raw_Data\ddMARR&DBEGL7..txt"" );",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_DAYSTAR_LOAD_AW.sas
"CREATE TABLE DAYSTR_Plus_DATA_FROM_RAW AS ( SELECT Census , ChainID , DateTY , DateLY , Mar_Avail_TY , Mar_Sold_TY , Mar_Rev_TY , Mar_G_Sold_TY , Mar_C_Sold_TY , Mar_T_Sold_TY , Mar_G_Rev_TY , Mar_C_Rev_TY , Mar_T_Rev_TY , Mar_Avail_LY , Mar_Sold_LY , Mar_Rev_LY , Mar_G_Sold_LY , Mar_C_Sold_LY , Mar_T_Sold_LY , Mar_G_Rev_LY , Mar_C_Rev_LY , Mar_T_Rev_LY , CS_Avail_TY , CS_Sold_TY , CS_Rev_TY , CS_G_Sold_TY , CS_C_Sold_TY , CS_T_Sold_TY , CS_G_Rev_TY , CS_C_Rev_TY , CS_T_Rev_TY , CS_Avail_LY , CS_Sold_LY , CS_Rev_LY , CS_G_Sold_LY , CS_C_Sold_LY , CS_T_Sold_LY , CS_G_Rev_LY , CS_C_Rev_LY , CS_T_Rev_LY , Mar_FB_Rev_TY , Mar_Other_Rev_TY , Mar_Total_Rev_TY , Mar_FB_Rev_LY , Mar_Other_Rev_LY , Mar_Total_Rev_LY , CS_FB_Rev_TY , CS_Other_Rev_TY , CS_Total_Rev_TY , CS_FB_Rev_LY , CS_Other_Rev_LY , CS_Total_Rev_LY , MAR_Loc_Rev_TY , MAR_Loc_Rev_LY , MAR_G_Loc_Rev_TY , MAR_G_Loc_Rev_LY , MAR_C_Loc_Rev_TY , MAR_C_Loc_Rev_LY , MAR_T_Loc_Rev_TY , MAR_T_Loc_Rev_LY , CS_Loc_Rev_TY , CS_Loc_Rev_LY , CS_G_Loc_Rev_TY , CS_G_Loc_Rev_LY , CS_C_Loc_Rev_TY , CS_C_Loc_Rev_LY , CS_T_Loc_Rev_TY , CS_T_Loc_Rev_ FROM ""\\Hdqmdm1fpcl4v1\lodg-revmgmt\DSS\star_data\DaySTR_Raw_Data\marrplus_6wk_&DBEGL7..txt"" );",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_DAYSTAR_LOAD_AW.sas
" CREATE TABLE starcurr_edw_&CURYRPD AS  (  SELECT CURR_CODE AS from_currency_cd , ROUND( FXTOCUSD,7) AS currency_exch_rte , LTRIM( CAST( CURRENT DATE AS DATE),10)as currency_exch_dte , MON AS month FROM AW_TGT_BUS_DBO.TREASFX_FCST WHERE asof_yrmo = ( SELECT MAX( ASOF_YRMO) FROM AW_TGT_BUS_DBO.TREASFX_FCST) ORDER BY CURR_CODE, YRMON  ) ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_DAYSTAR_LOAD_AW.sas
" CREATE TABLE raw_daily_data_lc AS select p.marsha, p.str_ID, p.brnd AS BRAND , ""Local"" AS CURRENCY_TYPE , d.CurrencyCode AS CUR , &DATALOAD. AS ASOF_DATE , CASE WHEN d.PropSupTY>0 AND d.PropDemTY>0 AND d.PropLocRevTY>0 AND d.CompSupTY>0 AND d.CompDemTY>0 AND d.CompLocRevTY>0 AND d.PropSupLY>0 AND d.PropDemLY>0 AND d.PropLocRevLY>0 AND d.CompSupLY>0 AND d.CompDemLY>0 AND d.CompLocRevLY>0 THEN 1 ELSE 0 END AS COMPLETE_DATA , CASE WHEN d.PropSupTY >0 AND ( s.Mar_G_Sold_TY + s.Mar_T_Sold_TY + s.Mar_C_Sold_TY) >0 AND ( s.MAR_G_Loc_Rev_TY + s.MAR_T_Loc_Rev_TY + s.MAR_C_Loc_Rev_TY) >0 AND d.CompSupTY >0 AND ( s.CS_G_Sold_TY + s.CS_T_Sold_TY + s.CS_C_Sold_TY) >0 AND ( s.CS_G_Loc_Rev_TY+ s.CS_T_Loc_Rev_TY+ s.CS_C_Loc_Rev_TY) >0 AND d.PropSupLY >0 AND ( s.Mar_G_Sold_LY + s.Mar_T_Sold_LY + s.Mar_C_Sold_LY) >0 AND ( s.MAR_G_Loc_Rev_LY + s.MAR_T_Loc_Rev_LY + s.MAR_C_Loc_Rev_LY) >0 AND d.CompSupLY >0 AND (  s.CS_G_Sold_LY + s.CS_T_Sold_LY + s.CS_C_Sold_LY) >0 AND ( s.CS_G_Loc_Rev_LY+ s.CS_T_Loc_Rev_LY + s.CS_C_Loc_Rev_LY) > 0 THEN 1 ELSE 0 END AS COMPLETE_DATA_SEG , ""STR"" AS DATASOURCE , d.DateTY AS DATE_TY, CAST( SUBSTRING( CAST( d.DateTY, 8. ),1,6), 6. ) AS YRMNTH_TY , CAST( SUBSTRING( CAST( d.DateTY, 8. ),1,4), 4. ) AS YEAR_TY , CAST( SUBSTRING( CAST( d.DateTY, 8. ),5,2), 2. ) AS MONTH_TY , CAST( SUBSTRING( CAST( d.DateTY, 8. ),7,2), 2. ) AS DOM_TY , Weekday( InCAST(  Put(  d.DateTY, 8. ), Yymmdd10. )) AS DOW_TY , CASE WHEN Weekday( InCAST(  Put(  d.DateTY, 8. ), Yymmdd10. )) = 6 OR Weekday( InCAST(  Put(  d.DateTY, 8. ), Yymmdd10. )) = 7 THEN 'WE' ELSE 'WD' END AS WDWE_TY , d.DateLY AS DATE_LY, CAST( SUBSTRING( CAST( d.DateLY, 8. ),1,6), 6. ) AS YRMNTH_LY , CAST( SUBSTRING( CAST( d.DateLY, 8. ),1,4), 4. ) AS YEAR_LY , CAST( SUBSTRING( CAST( d.DateLY, 8. ),5,2), 2. ) AS MONTH_LY , CAST( SUBSTRING( CAST( d.DateLY, 8. ),7,2), 2. ) AS DOM_LY , Weekday( InCAST(  Put(  d.DateLY, 8. ), Yymmdd10. )) AS DOW_LY , CASE WHEN Weekday( InCAST(  Put(  d.DateLY, 8. ), Yymmdd10. )) = 6 OR Weekday( InCAST(  Put(  d.DateLY, 8. ), Yymmdd10. )) = 7 THEN 'WE' ELSE 'WD' END AS WDWE_LY , d.PropSupTY AS MARAVAIL, d.PropDemTY AS MARSOLD , d.PropLocRevTY AS MARREV , ( d.PropSupTY) / ( d.CompSupTY) * ( d.CompSupTY) AS MKTAVAIL , ( d.PropSupTY) / ( d.CompSupTY) * ( d.CompDemTY) AS MKTSOLD , ( d.PropSupTY) / ( d.CompSupTY) * ( d.CompLocRevTY) AS MKTREV , d.CompSupTY AS MKTAVAIL_UNW, d.CompDemTY AS MKTSOLD_UNW , d.CompLocRevTY AS MKTREV_UNW , d.PropSupLY AS MARAVAILLY, d.PropDemLY AS MARSOLDLY , d.PropLocRevLY AS MARREVLY , ( d.PropSupLY) / ( d.CompSupLY) * ( d.CompSupLY) AS MKTAVAILLY , ( d.PropSupLY) / ( d.CompSupLY) * ( d.CompDemLY) AS MKTSOLDLY , ( d.PropSupLY) / ( d.CompSupLY) * ( d.CompLocRevLY) AS MKTREVLY , d.CompSupLY AS MKTAVAIL_UNWLY, d.CompDemLY AS MKTSOLD_UNWLY , d.CompLocRevLY AS MKTREV_UNWLY , d.PropSupTY AS MARAVAIL_GP, s.Mar_G_Sold_TY AS MARSOLD_GP , s.MAR_G_Loc_Rev_TY AS MARREV_GP , ( d.PropSupTY) / ( d.CompSupTY) * ( d.CompSupTY) AS MKTAVAIL_GP , ( d.PropSupTY) / ( d.CompSupTY) * ( s.CS_G_Sold_TY) AS MKTSOLD_GP , ( d.PropSupTY) / ( d.CompSupTY) * ( s.CS_G_Loc_Rev_TY) AS MKTREV_GP , d.CompSupTY AS MKTAVAIL_UNW_GP, s.CS_G_Sold_TY AS MKTSOLD_UNW_GP , s.CS_G_Loc_Rev_TY AS MKTREV_UNW_GP , d.PropSupLY AS MARAVAILLY_GP, s.Mar_G_Sold_LY AS MARSOLDLY_GP , s.MAR_G_Loc_Rev_LY AS MARREVLY_GP , ( d.PropSupLY) / ( d.CompSupLY) * ( d.CompSupLY) AS MKTAVAILLY_GP , ( d.PropSupLY) / ( d.CompSupLY) * ( s.CS_G_Sold_LY) AS MKTSOLDLY_GP , ( d.PropSupLY) / ( d.CompSupLY) * ( s.CS_G_Loc_Rev_LY) AS MKTREVLY_GP , d.CompSupLY AS MKTAVAIL_UNWLY_GP, s.CS_G_Sold_LY AS MKTSOLD_UNWLY_GP , s.CS_G_Loc_Rev_LY AS MKTREV_UNWLY_GP , d.PropSupTY AS MARAVAIL_TN, s.Mar_T_Sold_TY AS MARSOLD_TN , s.MAR_T_Loc_Rev_TY AS MARREV_TN , ( d.PropSupTY) / ( d.CompSupTY) * ( d.CompSupTY) AS MKTAVAIL_TN , ( d.PropSupTY) / ( d.CompSupTY) * ( s.CS_T_Sold_TY) AS MKTSOLD_TN , ( d.PropSupTY) / ( d.CompSupTY) * ( s.CS_T_Loc_Rev_TY) AS MKTREV_TN , d.CompSupTY AS MKTAVAIL_UNW_TN, s.CS_T_Sold_TY AS MKTSOLD_UNW_TN , s.CS_T_Loc_Rev_TY AS MKTREV_UNW_TN , d.PropSupLY AS MARAVAILLY_TN, s.Mar_T_Sold_LY AS MARSOLDLY_TN , s.MAR_T_Loc_Rev_LY AS MARREVLY_TN , ( d.PropSupLY) / ( d.CompSupLY) * ( d.CompSupLY) AS MKTAVAILLY_TN , ( d.PropSupLY) / ( d.CompSupLY) * ( s.CS_T_Sold_LY) AS MKTSOLDLY_TN , ( d.PropSupLY) / ( d.CompSupLY) * ( s.CS_T_Loc_Rev_LY) AS MKTREVLY_TN , d.CompSupLY AS MKTAVAIL_UNWLY_TN, s.CS_T_Sold_LY AS MKTSOLD_UNWLY_TN , s.CS_T_Loc_Rev_LY AS MKTREV_UNWLY_TN , d.PropSupTY AS MARAVAIL_CN, s.Mar_C_Sold_TY AS MARSOLD_CN , s.MAR_C_Loc_Rev_TY AS MARREV_CN , ( d.PropSupTY) / ( d.CompSupTY) * ( d.CompSupTY) AS MKTAVAIL_CN , ( d.PropSupTY) / ( d.CompSupTY) * ( s.CS_C_Sold_TY) AS MKTSOLD_CN , ( d.PropSupTY) / ( d.CompSupTY) * ( s.CS_C_Loc_Rev_TY) AS MKTREV_CN , d.CompSupTY AS MKTAVAIL_UNW_CN, s.CS_C_Sold_TY AS MKTSOLD_UNW_CN , s.CS_C_Loc_Rev_TY AS MKTREV_UNW_CN , d.PropSupLY AS MARAVAILLY_CN, s.Mar_C_Sold_LY AS MARSOLDLY_CN , s.MAR_C_Loc_Rev_LY AS MARREVLY_CN , ( d.PropSupLY) / ( d.CompSupLY) * ( d.CompSupLY) AS MKTAVAILLY_CN , ( d.PropSupLY) / ( d.CompSupLY) * ( s.CS_C_Sold_LY) AS MKTSOLDLY_CN , ( d.PropSupLY) / ( d.CompSupLY) * ( s.CS_C_Loc_Rev_LY) AS MKTREVLY_CN , d.CompSupLY AS MKTAVAIL_UNWLY_CN, s.CS_C_Sold_LY AS MKTSOLD_UNWLY_CN , s.CS_C_Loc_Rev_LY AS MKTREV_UNWLY_CN FROM Daystr_data_from_raw AS d LEFT JOIN plu AS p ON d.census = p.str_id LEFT JOIN DAYSTR_Plus_DATA_FROM_RAW AS s ON d.census = s.census AND d.datety = s.datety WHERE p.marsha <> '' ORDER BY p.str_ID, d.DateTY ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_DAYSTAR_LOAD_AW.sas
" CREATE TABLE raw_daily_data_cc AS select p.marsha, p.str_ID, p.brnd AS BRAND , ""Constant USD"" AS CURRENCY_TYPE , ""USD"" AS CUR , &DATALOAD. AS ASOF_DATE , CASE WHEN d.PropSupTY>0 AND d.PropDemTY>0 AND d.PropLocRevTY>0 AND d.CompSupTY>0 AND d.CompDemTY>0 AND d.CompLocRevTY>0 AND d.PropSupLY>0 AND d.PropDemLY>0 AND d.PropLocRevLY>0 AND d.CompSupLY>0 AND d.CompDemLY>0 AND d.CompLocRevLY > 0 THEN 1 ELSE 0 END AS COMPLETE_DATA , CASE WHEN d.PropSupTY >0 AND ( s.Mar_G_Sold_TY + s.Mar_T_Sold_TY + s.Mar_C_Sold_TY) >0 AND ( s.MAR_G_Loc_Rev_TY + s.MAR_T_Loc_Rev_TY + s.MAR_C_Loc_Rev_TY) >0 AND d.CompSupTY >0 AND ( s.CS_G_Sold_TY + s.CS_T_Sold_TY + s.CS_C_Sold_TY) >0 AND ( s.CS_G_Loc_Rev_TY+ s.CS_T_Loc_Rev_TY+ s.CS_C_Loc_Rev_TY) >0 AND d.PropSupLY >0 AND ( s.Mar_G_Sold_LY + s.Mar_T_Sold_LY + s.Mar_C_Sold_LY) >0 AND ( s.MAR_G_Loc_Rev_LY + s.MAR_T_Loc_Rev_LY + s.MAR_C_Loc_Rev_LY) >0 AND d.CompSupLY >0 AND (  s.CS_G_Sold_LY + s.CS_T_Sold_LY + s.CS_C_Sold_LY) >0 AND ( s.CS_G_Loc_Rev_LY+ s.CS_T_Loc_Rev_LY + s.CS_C_Loc_Rev_LY) > 0 THEN 1 ELSE 0 END AS COMPLETE_DATA_SEG , ""STR"" AS DATASOURCE , d.DateTY AS DATE_TY, CAST( SUBSTRING( CAST( d.DateTY, 8. ),1,6), 6. ) AS YRMNTH_TY , CAST( SUBSTRING( CAST( d.DateTY, 8. ),1,4), 4. ) AS YEAR_TY , CAST( SUBSTRING( CAST( d.DateTY, 8. ),5,2), 2. ) AS MONTH_TY , CAST( SUBSTRING( CAST( d.DateTY, 8. ),7,2), 2. ) AS DOM_TY , Weekday( InCAST(  Put(  d.DateTY, 8. ), Yymmdd10. )) AS DOW_TY , CASE WHEN Weekday( InCAST(  Put(  d.DateTY, 8. ), Yymmdd10. )) = 6 OR Weekday( InCAST(  Put(  d.DateTY, 8. ), Yymmdd10. )) = 7 THEN 'WE' ELSE 'WD' END AS WDWE_TY , d.DateLY AS DATE_LY, CAST( SUBSTRING( CAST( d.DateLY, 8. ),1,6), 6. ) AS YRMNTH_LY , CAST( SUBSTRING( CAST( d.DateLY, 8. ),1,4), 4. ) AS YEAR_LY , CAST( SUBSTRING( CAST( d.DateLY, 8. ),5,2), 2. ) AS MONTH_LY , CAST( SUBSTRING( CAST( d.DateLY, 8. ),7,2), 2. ) AS DOM_LY , Weekday( InCAST(  Put(  d.DateLY, 8. ), Yymmdd10. )) AS DOW_LY , CASE WHEN Weekday( InCAST(  Put(  d.DateLY, 8. ), Yymmdd10. )) = 6 OR Weekday( InCAST(  Put(  d.DateLY, 8. ), Yymmdd10. )) = 7 THEN 'WE' ELSE 'WD' END AS WDWE_LY , d.PropSupTY AS MARAVAIL, d.PropDemTY AS MARSOLD , d.PropLocRevTY * c.currency_exch_rte AS MARREV , ( d.PropSupTY) / ( d.CompSupTY) * ( d.CompSupTY) AS MKTAVAIL , ( d.PropSupTY) / ( d.CompSupTY) * ( d.CompDemTY) AS MKTSOLD , ( d.PropSupTY) / ( d.CompSupTY) * ( d.CompLocRevTY)* c.currency_exch_rte AS MKTREV , d.CompSupTY AS MKTAVAIL_UNW, d.CompDemTY AS MKTSOLD_UNW , d.CompLocRevTY * c.currency_exch_rte AS MKTREV_UNW , d.PropSupLY AS MARAVAILLY, d.PropDemLY AS MARSOLDLY , d.PropLocRevLY * cly.currency_exch_rte AS MARREVLY , ( d.PropSupLY) / ( d.CompSupLY) * ( d.CompSupLY) AS MKTAVAILLY , ( d.PropSupLY) / ( d.CompSupLY) * ( d.CompDemLY) AS MKTSOLDLY , ( d.PropSupLY) / ( d.CompSupLY) * ( d.CompLocRevLY) * cly.currency_exch_rte AS MKTREVLY , d.CompSupLY AS MKTAVAIL_UNWLY, d.CompDemLY AS MKTSOLD_UNWLY , d.CompLocRevLY * cly.currency_exch_rte AS MKTREV_UNWLY , d.PropSupTY AS MARAVAIL_GP, s.Mar_G_Sold_TY AS MARSOLD_GP , s.MAR_G_Loc_Rev_TY * c.currency_exch_rte AS MARREV_GP , ( d.PropSupTY) / ( d.CompSupTY) * ( d.CompSupTY) AS MKTAVAIL_GP , ( d.PropSupTY) / ( d.CompSupTY) * ( s.CS_G_Sold_TY) AS MKTSOLD_GP , ( d.PropSupTY) / ( d.CompSupTY) * ( s.CS_G_Loc_Rev_TY) * c.currency_exch_rte AS MKTREV_GP , d.CompSupTY AS MKTAVAIL_UNW_GP, s.CS_G_Sold_TY AS MKTSOLD_UNW_GP , s.CS_G_Loc_Rev_TY * c.currency_exch_rte AS MKTREV_UNW_GP , d.PropSupLY AS MARAVAILLY_GP, s.Mar_G_Sold_LY AS MARSOLDLY_GP , s.MAR_G_Loc_Rev_LY * cly.currency_exch_rte AS MARREVLY_GP , ( d.PropSupLY) / ( d.CompSupLY) * ( d.CompSupLY) AS MKTAVAILLY_GP , ( d.PropSupLY) / ( d.CompSupLY) * ( s.CS_G_Sold_LY) AS MKTSOLDLY_GP , ( d.PropSupLY) / ( d.CompSupLY) * ( s.CS_G_Loc_Rev_LY) * cly.currency_exch_rte AS MKTREVLY_GP , d.CompSupLY AS MKTAVAIL_UNWLY_GP, s.CS_G_Sold_LY AS MKTSOLD_UNWLY_GP , s.CS_G_Loc_Rev_LY * cly.currency_exch_rte AS MKTREV_UNWLY_GP , d.PropSupTY AS MARAVAIL_TN, s.Mar_T_Sold_TY AS MARSOLD_TN , s.MAR_T_Loc_Rev_TY * c.currency_exch_rte AS MARREV_TN , ( d.PropSupTY) / ( d.CompSupTY) * ( d.CompSupTY) AS MKTAVAIL_TN , ( d.PropSupTY) / ( d.CompSupTY) * ( s.CS_T_Sold_TY) AS MKTSOLD_TN , ( d.PropSupTY) / ( d.CompSupTY) * ( s.CS_T_Loc_Rev_TY) * c.currency_exch_rte AS MKTREV_TN , d.CompSupTY AS MKTAVAIL_UNW_TN, s.CS_T_Sold_TY AS MKTSOLD_UNW_TN , s.CS_T_Loc_Rev_TY * c.currency_exch_rte AS MKTREV_UNW_TN , d.PropSupLY AS MARAVAILLY_TN, s.Mar_T_Sold_LY AS MARSOLDLY_TN , s.MAR_T_Loc_Rev_LY * cly.currency_exch_rte AS MARREVLY_TN , ( d.PropSupLY) / ( d.CompSupLY) * ( d.CompSupLY) AS MKTAVAILLY_TN , ( d.PropSupLY) / ( d.CompSupLY) * ( s.CS_T_Sold_LY) AS MKTSOLDLY_TN , ( d.PropSupLY) / ( d.CompSupLY) * ( s.CS_T_Loc_Rev_LY) * cly.currency_exch_rte AS MKTREVLY_TN , d.CompSupLY AS MKTAVAIL_UNWLY_TN, s.CS_T_Sold_LY AS MKTSOLD_UNWLY_TN , s.CS_T_Loc_Rev_LY * cly.currency_exch_rte AS MKTREV_UNWLY_TN , d.PropSupTY AS MARAVAIL_CN, s.Mar_C_Sold_TY AS MARSOLD_CN , s.MAR_C_Loc_Rev_TY * c.currency_exch_rte AS MARREV_CN , ( d.PropSupTY) / ( d.CompSupTY) * ( d.CompSupTY) AS MKTAVAIL_CN , ( d.PropSupTY) / ( d.CompSupTY) * ( s.CS_C_Sold_TY) AS MKTSOLD_CN , ( d.PropSupTY) / ( d.CompSupTY) * ( s.CS_C_Loc_Rev_TY) * c.currency_exch_rte AS MKTREV_CN , d.CompSupTY AS MKTAVAIL_UNW_CN, s.CS_C_Sold_TY AS MKTSOLD_UNW_CN , s.CS_C_Loc_Rev_TY * c.currency_exch_rte AS MKTREV_UNW_CN , d.PropSupLY AS MARAVAILLY_CN, s.Mar_C_Sold_LY AS MARSOLDLY_CN , s.MAR_C_Loc_Rev_LY * cly.currency_exch_rte AS MARREVLY_CN , ( d.PropSupLY) / ( d.CompSupLY) * ( d.CompSupLY) AS MKTAVAILLY_CN , ( d.PropSupLY) / ( d.CompSupLY) * ( s.CS_C_Sold_LY) AS MKTSOLDLY_CN , ( d.PropSupLY) / ( d.CompSupLY) * ( s.CS_C_Loc_Rev_LY) * cly.currency_exch_rte AS MKTREVLY_CN , d.CompSupLY AS MKTAVAIL_UNWLY_CN, s.CS_C_Sold_LY AS MKTSOLD_UNWLY_CN , s.CS_C_Loc_Rev_LY * cly.currency_exch_rte AS MKTREV_UNWLY_CN FROM Daystr_data_from_raw AS d LEFT JOIN plu AS p ON d.census = p.str_id LEFT JOIN DAYSTR_Plus_DATA_FROM_RAW AS s ON d.census = s.census AND d.datety = s.datety LEFT JOIN starcurr_edw_&STARMNTH AS c ON ( d.CurrencyCode eq c.from_currency_cd AND CAST( SUBSTRING( CAST( d.DateTY, 8. ),5,2), 2. ) = c.month) LEFT JOIN starcurr_edw_&STARMNTH AS cly ON ( d.CurrencyCode eq cly.from_currency_cd AND CAST( SUBSTRING( CAST( d.DateLY, 8. ),5,2), 2. ) = cly.month) WHERE p.marsha <> '' ORDER BY p.str_ID, d.DateTY ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_DAYSTAR_LOAD_AW.sas
 CREATE TABLE work.STR_RAW_DAILY_DATA_NEW_WEEK_STG AS ( SELECT  *  FROM wstr.final_raw_daily_data_cc UNION ALL SELECT  *  FROM wstr.final_raw_daily_data_lc);,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_DAYSTAR_LOAD_AW.sas
" CREATE TABLE work.STR_RAW_DAILY_DATA_NEW_WEEK AS SELECT MARSHA , STR_ID , BRAND , CURRENCY_TYPE , CUR , ASOF_DATE , COMPLETE_DATA , COMPLETE_DATA_SEG , DATASOURCE , DATE_TY , YRMNTH_TY , YEAR_TY , MONTH_TY , DOM_TY , DOW_TY , WDWE_TY , DATE_LY , YRMNTH_LY , YEAR_LY , MONTH_LY , DOM_LY , DOW_LY , WDWE_LY , MARAVAIL , MARSOLD , MARREV , MKTAVAIL , MKTSOLD , MKTREV , MKTAVAIL_UNW , MKTSOLD_UNW , MKTREV_UNW , MARAVAILLY , MARSOLDLY , MARREVLY , MKTAVAILLY , MKTSOLDLY , MKTREVLY , MKTAVAIL_UNWLY , MKTSOLD_UNWLY , MKTREV_UNWLY , MARAVAIL_GP , MARSOLD_GP , MARREV_GP , MKTAVAIL_GP , MKTSOLD_GP , MKTREV_GP , MKTAVAIL_UNW_GP , MKTSOLD_UNW_GP , MKTREV_UNW_GP , MARAVAILLY_GP , MARSOLDLY_GP , MARREVLY_GP , MKTAVAILLY_GP , MKTSOLDLY_GP , MKTREVLY_GP , MKTAVAIL_UNWLY_GP , MKTSOLD_UNWLY_GP , MKTREV_UNWLY_GP , MARAVAIL_TN , MARSOLD_TN , MARREV_TN , MKTAVAIL_TN , MKTSOLD_TN , MKTREV_TN , MKTAVAIL_UNW_TN , MKTSOLD_UNW_TN , MKTREV_UNW_TN , MARAVAILLY_TN , MARSOLDLY_TN , MARREVLY_TN , MKTAVAILLY_TN , MKTSOLDLY_TN , MKTREVLY_TN , MKTAVAIL_UNWLY_TN , MKTSOLD_UNWLY_TN , MKTREV_UNWLY_TN , MARAVAIL_CN , MARSOLD_CN , MARREV_CN , MKTAVAIL_CN , MKTSOLD_CN , MKTREV_CN , MKTAVAIL_UNW_CN , MKTSOLD_UNW_CN , MKTREV_UNW_CN , MARAVAILLY_CN , MARSOLDLY_CN , MARREVLY_CN , MKTAVAILLY_CN , MKTSOLDLY_CN , MKTREVLY_CN , MKTAVAIL_UNWLY_CN , MKTSOLD_UNWLY_CN , MKTREV_UNWLY_CN FROM work.STR_RAW_DAILY_DATA_NEW_WEEK_STG;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_DAYSTAR_LOAD_AW.sas
 CREATE TABLE output.new_week AS SELECT * FROM output.STR_RAW_DAILY_DATA_HIST_&prevdt WHERE asof_date = &DBEGL7F AND date_ty < ( SELECT min( date_TY) FROM work.STR_RAW_DAILY_DATA_NEW_WEEK) UNION SELECT * FROM work.STR_RAW_DAILY_DATA_NEW_WEEK;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_DAYSTAR_LOAD_AW.sas
 DELETE * FROM output.str_raw_daily_data_hist_&prevdt WHERE asof_date = &DBEGL7F;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_DAYSTAR_LOAD_AW.sas
 INSERT INTO output.STR_RAW_DAILY_DATA_HIST_&prevdt SELECT * FROM output.new_week;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_DAYSTAR_LOAD_AW.sas
"CREATE TABLE WORK.STR_D  AS ( SELECT AFF , CENSUS , CHAINID , DATETY , DATELY , MARCAPTY , MAROCCTY , MARREVTY , MARCAPLY , MAROCCLY , MARREVLY , MKTCAPTY , MKTOCCTY , MKTREVTY , MKTCAPLY , MKTOCCLY , MKTREVLY , MASCCAPTY , MASCOCCTY , MASCREVTY , MASCCAPLY , MASCOCCLY , MASCREVLY , OCCRANKTY , ADRRANKTY , REVPARRANKTY , OCCPERCCHGRANKTY , ADRPERCCHGRANKTY , REVPARPERCCHGRANKTY , OCCRANKLY , ADRRANKLY , REVPARRANKLY , OCCPERCCHGRANKLY , ADRPERCCHGRANKLY , REVPARPERCCHGRANKLY , MARLocRevTY , MarLocRevLY , mktLocRevTY , mktLocRevLY , MASCLocRevTY , MASCLocRev FROM ""\\Hdqmdm1fpcl4v1\lodg-revmgmt\DSS\star_data\DaySTR_Raw_Data\ddMARR&DBEGL7..txt"" );",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_OY_DATA.sas
" CREATE TABLE MS2 AS ( SELECT MARSHA, STR_ID, STR_ID AS CENSUS FROM PLU  WHERE STR_ID<>' ');",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_OY_DATA.sas
SELECT * FROM MS2 ORDER BY CENSUS;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_OY_DATA.sas
SELECT * FROM STR_D ORDER BY CENSUS;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_OY_DATA.sas
 CREATE TABLE STR_D2 AS ( SELECT  *  FROM STR_D A JOIN MS2 B ON  A.CENSUS =  B.CENSUS);,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_OY_DATA.sas
 CREATE TABLE DATES AS SELECT UNIQUE DATETY AS DT FROM STR_D ORDER BY DT DESC;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_OY_DATA.sas
 CREATE TABLE WK_DATES AS ( SELECT  *  FROM DATES );,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_OY_DATA.sas
SELECT * FROM WK_DATES ORDER BY DT;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_OY_DATA.sas
 CREATE TABLE WK_STRT AS ( SELECT  *  FROM WK_DATES );,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_OY_DATA.sas
 SELECT DT INTO :WK_START FROM WK_STRT;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_OY_DATA.sas
 CREATE TABLE LAST_DATE AS ( SELECT  *  FROM DATES );,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_OY_DATA.sas
 SELECT DT INTO :CURDATE FROM LAST_DATE;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_OY_DATA.sas
 CREATE TABLE MTD_DATES AS ( SELECT  *  FROM DATES  WHERE DT BETWEEN &MTD_START AND &CURDATE);,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_OY_DATA.sas
"CREATE TABLE MTD_DATES_LY AS ( SELECT  *  , DT - 10000 AS DT_LY  FROM MTD_DATES );",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_OY_DATA.sas
ALTER TABLE MTD_DATES_LY DROP COLUMN DT ;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_OY_DATA.sas
" CREATE TABLE WK_SUB AS ( SELECT  *  FROM STR_D2  WHERE DATETY IN ( %DO_OVER( DTS_WK, PHRASE=?) ));",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_OY_DATA.sas
" CREATE TABLE WK_SUB_incl_excep AS select census, a.marsha, datety, dately, marcapty, maroccty, marcaply, maroccly, mktcapty, mktoccty, mktcaply, mktoccly , CASE WHEN b.currency = ""USD"" THEN marrevty ELSE marlocrevty END AS marlocrevty , CASE WHEN b.currency = ""USD"" THEN marrevly ELSE marlocrevly END AS marlocrevly , CASE WHEN b.currency = ""USD"" THEN mktrevty ELSE mktlocrevty END AS mktlocrevty , CASE WHEN b.currency = ""USD"" THEN mktrevly ELSE mktlocrevly END AS mktlocrevly FROM WK_SUB a LEFT JOIN exceptions AS b ON a.marsha = b.marsha;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_OY_DATA.sas
" CREATE TABLE WK_MAR AS SELECT a.MARSHA AS MARSHA, 'W' AS TIMEF, MIN( DATETY) AS START_DATE, MAX( DATETY) AS END_DATE, 'M' AS REC_TYPE, ( SUM( MAROCCTY)/SUM( MARCAPTY))*100 AS OCC_TY, ( SUM( MAROCCLY)/SUM( MARCAPLY))*100 AS OCCLY, ( CALCULATED OCC_TY - CALCULATED OCCLY/ CALCULATED OCCLY)*100 AS OCC_CHG, ( SUM( marlocrevty)/SUM( MAROCCTY)) AS ADR_TY, ( SUM( marlocrevly)/SUM( MAROCCLY)) AS ADRLY, ( CALCULATED ADR_TY - CALCULATED ADRLY/ CALCULATED ADRLY)*100 AS ADR_CHG, ( SUM( marlocrevty)/SUM( MARCAPTY)) AS REVPAR_TY, ( SUM( marlocrevly)/SUM( MARCAPLY)) AS REVPARLY, ( CALCULATED REVPAR_TY - CALCULATED REVPARLY/ CALCULATED REVPARLY)*100 AS REVPAR_CHG, '' AS DENOM, '' AS BLANK FROM WK_SUB_incl_excep a WHERE a.MARSHA<>'' GROUP BY a.MARSHA;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_OY_DATA.sas
" CREATE TABLE WK_MKT AS SELECT a.MARSHA AS MARSHA, 'W' AS TIMEF, MIN( DATETY) AS START_DATE, MAX( DATETY) AS END_DATE, 'C' AS REC_TYPE, ( SUM( MKTOCCTY)/SUM( MKTCAPTY))*100 AS OCC_TY, ( SUM( MKTOCCLY)/SUM( MKTCAPLY))*100 AS OCCLY, ( CALCULATED OCC_TY - CALCULATED OCCLY/ CALCULATED OCCLY)*100 AS OCC_CHG, ( SUM( mktlocrevty)/SUM( MKTOCCTY)) AS ADR_TY, ( SUM( mktlocrevly)/SUM( MKTOCCLY)) AS ADRLY, ( CALCULATED ADR_TY - CALCULATED ADRLY/ CALCULATED ADRLY)*100 AS ADR_CHG, ( SUM( mktlocrevty)/SUM( MKTCAPTY)) AS REVPAR_TY, ( SUM( mktlocrevly)/SUM( MKTCAPLY)) AS REVPARLY, ( CALCULATED REVPAR_TY - CALCULATED REVPARLY/ CALCULATED REVPARLY)*100 AS REVPAR_CHG, '' AS DENOM, '' AS BLANK FROM WK_SUB_incl_excep a WHERE a.MARSHA<>'' GROUP BY a.MARSHA;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_OY_DATA.sas
" CREATE TABLE WK_IND AS SELECT M.MARSHA, 'W' AS TIMEF, M.START_DATE, M.END_DATE, 'I' AS REC_TYPE, ( M.OCC_TY/K.OCC_TY)*100 AS OCC_TY, ( M.OCCLY/K.OCCLY)*100 AS OCCLY, ( CALCULATED OCC_TY - CALCULATED OCCLY/ CALCULATED OCCLY)*100 AS OCC_CHG, ( M.ADR_TY/K.ADR_TY)*100 AS ADR_TY, ( M.ADRLY/K.ADRLY)*100 AS ADRLY, ( CALCULATED ADR_TY - CALCULATED ADRLY/ CALCULATED ADRLY)*100 AS ADR_CHG, ( M.REVPAR_TY/K.REVPAR_TY)*100 AS REVPAR_TY, ( M.REVPARLY/K.REVPARLY)*100 AS REVPARLY, ( CALCULATED REVPAR_TY - CALCULATED REVPARLY/ CALCULATED REVPARLY)*100 AS REVPAR_CHG, '' AS DENOM, '' AS BLANK FROM WK_MAR M, WK_MKT K WHERE M.MARSHA = K.MARSHA;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_OY_DATA.sas
" CREATE TABLE MTD_SUB_TY AS ( SELECT  *  FROM STR_D2  WHERE DATETY IN ( %DO_OVER( DTS_MTD, PHRASE=?) ));",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_OY_DATA.sas
" CREATE TABLE MTD_SUBLY AS ( SELECT  *  FROM STR_D2  WHERE DATELY IN ( %DO_OVER( DTS_MTD_LY, PHRASE=?) ));",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_OY_DATA.sas
" CREATE TABLE MTD_SUB_TY_incl_excep AS select census, a.marsha, datety, dately, marcapty, maroccty, marcaply, maroccly, mktcapty, mktoccty, mktcaply, mktoccly , CASE WHEN b.currency = ""USD"" THEN marrevty ELSE marlocrevty END AS marlocrevty , CASE WHEN b.currency = ""USD"" THEN marrevly ELSE marlocrevly END AS marlocrevly , CASE WHEN b.currency = ""USD"" THEN mktrevty ELSE mktlocrevty END AS mktlocrevty , CASE WHEN b.currency = ""USD"" THEN mktrevly ELSE mktlocrevly END AS mktlocrevly FROM MTD_SUB_TY a LEFT JOIN exceptions AS b ON a.marsha = b.marsha;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_OY_DATA.sas
" CREATE TABLE MTD_SUB_LY_incl_excep AS select census, a.marsha, datety, dately, marcapty, maroccty, marcaply, maroccly, mktcapty, mktoccty, mktcaply, mktoccly , CASE WHEN b.currency = ""USD"" THEN marrevty ELSE marlocrevty END AS marlocrevty , CASE WHEN b.currency = ""USD"" THEN marrevly ELSE marlocrevly END AS marlocrevly , CASE WHEN b.currency = ""USD"" THEN mktrevty ELSE mktlocrevty END AS mktlocrevty , CASE WHEN b.currency = ""USD"" THEN mktrevly ELSE mktlocrevly END AS mktlocrevly FROM MTD_SUBLY a LEFT JOIN exceptions AS b ON a.marsha = b.marsha;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_OY_DATA.sas
" CREATE TABLE MTD_MAR AS SELECT T.MARSHA AS MARSHA, 'M' AS TIMEF, MIN( T.DATETY) AS START_DATE, MAX( T.DATETY) AS END_DATE, 'M' AS REC_TYPE, ( SUM( T.MAROCCTY)/SUM( T.MARCAPTY))*100 AS OCC_TY, ( SUM( L.MAROCCLY)/SUM( L.MARCAPLY))*100 AS OCCLY, ( CALCULATED OCC_TY - CALCULATED OCCLY/ CALCULATED OCCLY)*100 AS OCC_CHG, ( SUM( T.marlocrevty)/SUM( T.MAROCCTY)) AS ADR_TY, ( SUM( L.marlocrevly)/SUM( L.MAROCCLY)) AS ADRLY, ( CALCULATED ADR_TY - CALCULATED ADRLY/ CALCULATED ADRLY)*100 AS ADR_CHG, ( SUM( T.marlocrevty)/SUM( T.MARCAPTY)) AS REVPAR_TY, ( SUM( L.marlocrevly)/SUM( L.MARCAPLY)) AS REVPARLY, ( CALCULATED REVPAR_TY - CALCULATED REVPARLY/ CALCULATED REVPARLY)*100 AS REVPAR_CHG, '' AS DENOM, '' AS BLANK FROM MTD_SUB_TY_incl_excep AS T INNER JOIN MTD_SUB_LY_incl_excep AS L ON T.MARSHA = L.MARSHA WHERE T.MARSHA<>'' GROUP BY T.MARSHA;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_OY_DATA.sas
" CREATE TABLE MTD_MKT AS SELECT T.MARSHA AS MARSHA, 'M' AS TIMEF, MIN( T.DATETY) AS START_DATE, MAX( T.DATETY) AS END_DATE, 'C' AS REC_TYPE, ( SUM( T.MKTOCCTY)/SUM( T.MKTCAPTY))*100 AS OCC_TY, ( SUM( L.MKTOCCLY)/SUM( L.MKTCAPLY))*100 AS OCCLY, ( CALCULATED OCC_TY - CALCULATED OCCLY/ CALCULATED OCCLY)*100 AS OCC_CHG, ( SUM( T.mktlocrevty)/SUM( T.MKTOCCTY)) AS ADR_TY, ( SUM( L.mktlocrevly)/SUM( L.MKTOCCLY)) AS ADRLY, ( CALCULATED ADR_TY - CALCULATED ADRLY/ CALCULATED ADRLY)*100 AS ADR_CHG, ( SUM( T.mktlocrevty)/SUM( T.MKTCAPTY)) AS REVPAR_TY, ( SUM( L.mktlocrevly)/SUM( L.MKTCAPLY)) AS REVPARLY, ( CALCULATED REVPAR_TY - CALCULATED REVPARLY/ CALCULATED REVPARLY)*100 AS REVPAR_CHG, '' AS DENOM, '' AS BLANK FROM MTD_SUB_TY_incl_excep AS T INNER JOIN MTD_SUB_LY_incl_excep AS L ON T.MARSHA = L.MARSHA WHERE T.MARSHA<>'' GROUP BY T.MARSHA;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_OY_DATA.sas
" CREATE TABLE MTD_IND AS SELECT M.MARSHA, 'M' AS TIMEF, M.START_DATE, M.END_DATE, 'I' AS REC_TYPE, ( M.OCC_TY/K.OCC_TY)*100 AS OCC_TY, ( M.OCCLY/K.OCCLY)*100 AS OCCLY, ( CALCULATED OCC_TY - CALCULATED OCCLY/ CALCULATED OCCLY)*100 AS OCC_CHG, ( M.ADR_TY/K.ADR_TY)*100 AS ADR_TY, ( M.ADRLY/K.ADRLY)*100 AS ADRLY, ( CALCULATED ADR_TY - CALCULATED ADRLY/ CALCULATED ADRLY)*100 AS ADR_CHG, ( M.REVPAR_TY/K.REVPAR_TY)*100 AS REVPAR_TY, ( M.REVPARLY/K.REVPARLY)*100 AS REVPARLY, ( CALCULATED REVPAR_TY - CALCULATED REVPARLY/ CALCULATED REVPARLY)*100 AS REVPAR_CHG, '' AS DENOM, '' AS BLANK FROM MTD_MAR AS M INNER JOIN MTD_MKT AS K ON M.MARSHA = K.MARSHA;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_OY_DATA.sas
"CREATE TABLE MTD_RANK  AS ( SELECT CENSUS: , CHAINID: , HOT_NAME: , TIME_FR: , OCC_RANK: , ADR_RANK: , REVPAR_RANK: , OCC_CHG_RANK: , ADR_CHG_RANK: , REVPAR_CHG_RAN FROM ""\\Hdqmdm1fpcl4v1\lodg-revmgmt\DSS\star_data\DaySTR_Raw_Data\MTDRANK_&DBEGL7..TXT"" );",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_OY_DATA.sas
"ALTER TABLE MTD_RANK  DROP COLUMN CHAINID ,  HOT_NAME ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_OY_DATA.sas
" CREATE TABLE MTD_RANK_2 AS SELECT M.MARSHA, 'M' AS TIMEF, &MTD_START AS START_DATE, &CURDATE AS END_DATE, 'R' AS REC_TYPE, CAST( MTD.OCC_RANK, 2. ) AS OCC_TY, CAST( MTD.OCC_CHG_RANK, 2. ) AS OCC_CHG, CAST( MTD.ADR_RANK, 2. ) AS ADR_TY, CAST( MTD.ADR_CHG_RANK, 2. ) AS ADR_CHG, CAST( MTD.REVPAR_RANK, 2. ) AS REVPAR_TY, CAST( MTD.REVPAR_CHG_RANK, 2. ) AS REVPAR_CHG, MTD.DENOM, '' AS BLANK FROM MTD_CLEAN MTD LEFT JOIN MS2 M ON MTD.CENSUS = M.CENSUS WHERE MARSHA<>"""";",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_OY_DATA.sas
"CREATE TABLE WEEK_RANK AS ( SELECT CENSUS: , CHAINID: , HOT_NAME: , TIME_FR: , OCC_RANK: , ADR_RANK: , REVPAR_RANK: , OCC_CHG_RANK: , ADR_CHG_RANK: , REVPAR_CHG_RAN FROM ""\\Hdqmdm1fpcl4v1\lodg-revmgmt\DSS\star_data\DaySTR_Raw_Data\WEEKRANK_&DBEGL7..TXT"" );",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_OY_DATA.sas
"ALTER TABLE WEEK_RANK DROP COLUMN CHAINID ,  HOT_NAME ,  TIME_FR ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_OY_DATA.sas
" CREATE TABLE WEEK_RANK_2 AS SELECT M.MARSHA, 'W' AS TIMEF, &WK_START AS START_DATE, &CURDATE AS END_DATE, 'R' AS REC_TYPE, CAST( W.OCC_RANK, 2. ) AS OCC_TY, CAST( W.OCC_CHG_RANK, 2. ) AS OCC_CHG, CAST( W.ADR_RANK, 2. ) AS ADR_TY, CAST( W.ADR_CHG_RANK, 2. ) AS ADR_CHG, CAST( W.REVPAR_RANK, 2. ) AS REVPAR_TY, CAST( W.REVPAR_CHG_RANK, 2. ) AS REVPAR_CHG, W.DENOM, '' AS BLANK FROM WEEK_CLEAN W LEFT JOIN MS2 M ON W.CENSUS = M.CENSUS WHERE MARSHA<>"""";",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_OY_DATA.sas
 CREATE TABLE RANK AS ( SELECT  *  FROM MTD_RANK_2 UNION ALL SELECT  *  FROM WEEK_RANK_2);,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_OY_DATA.sas
"CREATE TABLE EXPORT AS ( SELECT  *  , FORMAT(ROUND( OCC_TY, 0.001 ), FLOAT(6, 1))  AS OCC_TY , FORMAT(ROUND( OCC_CHG, 0.0001 ), FLOAT(6, 1))  AS OCC_CHG , FORMAT(ROUND( ADR_TY, 0.00001 ), FLOAT(6, 2))  AS ADR_TY , FORMAT(ROUND( ADR_CHG, 0.0001 ), FLOAT(6, 1))  AS ADR_CHG , FORMAT(ROUND( REVPAR_TY, 0.0001 ), FLOAT(6, 2))  AS REVPAR_TY , FORMAT(ROUND( REVPAR_CHG, 0.0001 ), FLOAT(6, 1))  AS REVPAR_CHG  FROM WK_MAR UNION ALL SELECT  *  , FORMAT(ROUND( OCC_TY, 0.001 ), FLOAT(6, 1))  AS OCC_TY , FORMAT(ROUND( OCC_CHG, 0.0001 ), FLOAT(6, 1))  AS OCC_CHG , FORMAT(ROUND( ADR_TY, 0.00001 ), FLOAT(6, 2))  AS ADR_TY , FORMAT(ROUND( ADR_CHG, 0.0001 ), FLOAT(6, 1))  AS ADR_CHG , FORMAT(ROUND( REVPAR_TY, 0.0001 ), FLOAT(6, 2))  AS REVPAR_TY , FORMAT(ROUND( REVPAR_CHG, 0.0001 ), FLOAT(6, 1))  AS REVPAR_CHG  FROM WK_MKT UNION ALL SELECT  *  , FORMAT(ROUND( OCC_TY, 0.001 ), FLOAT(6, 1))  AS OCC_TY , FORMAT(ROUND( OCC_CHG, 0.0001 ), FLOAT(6, 1))  AS OCC_CHG , FORMAT(ROUND( ADR_TY, 0.00001 ), FLOAT(6, 2))  AS ADR_TY , FORMAT(ROUND( ADR_CHG, 0.0001 ), FLOAT(6, 1))  AS ADR_CHG , FORMAT(ROUND( REVPAR_TY, 0.0001 ), FLOAT(6, 2))  AS REVPAR_TY , FORMAT(ROUND( REVPAR_CHG, 0.0001 ), FLOAT(6, 1))  AS REVPAR_CHG  FROM WK_IND UNION ALL SELECT  *  , FORMAT(ROUND( OCC_TY, 0.001 ), FLOAT(6, 1))  AS OCC_TY , FORMAT(ROUND( OCC_CHG, 0.0001 ), FLOAT(6, 1))  AS OCC_CHG , FORMAT(ROUND( ADR_TY, 0.00001 ), FLOAT(6, 2))  AS ADR_TY , FORMAT(ROUND( ADR_CHG, 0.0001 ), FLOAT(6, 1))  AS ADR_CHG , FORMAT(ROUND( REVPAR_TY, 0.0001 ), FLOAT(6, 2))  AS REVPAR_TY , FORMAT(ROUND( REVPAR_CHG, 0.0001 ), FLOAT(6, 1))  AS REVPAR_CHG  FROM MTD_MAR UNION ALL SELECT  *  , FORMAT(ROUND( OCC_TY, 0.001 ), FLOAT(6, 1))  AS OCC_TY , FORMAT(ROUND( OCC_CHG, 0.0001 ), FLOAT(6, 1))  AS OCC_CHG , FORMAT(ROUND( ADR_TY, 0.00001 ), FLOAT(6, 2))  AS ADR_TY , FORMAT(ROUND( ADR_CHG, 0.0001 ), FLOAT(6, 1))  AS ADR_CHG , FORMAT(ROUND( REVPAR_TY, 0.0001 ), FLOAT(6, 2))  AS REVPAR_TY , FORMAT(ROUND( REVPAR_CHG, 0.0001 ), FLOAT(6, 1))  AS REVPAR_CHG  FROM MTD_MKT UNION ALL SELECT  *  , FORMAT(ROUND( OCC_TY, 0.001 ), FLOAT(6, 1))  AS OCC_TY , FORMAT(ROUND( OCC_CHG, 0.0001 ), FLOAT(6, 1))  AS OCC_CHG , FORMAT(ROUND( ADR_TY, 0.00001 ), FLOAT(6, 2))  AS ADR_TY , FORMAT(ROUND( ADR_CHG, 0.0001 ), FLOAT(6, 1))  AS ADR_CHG , FORMAT(ROUND( REVPAR_TY, 0.0001 ), FLOAT(6, 2))  AS REVPAR_TY , FORMAT(ROUND( REVPAR_CHG, 0.0001 ), FLOAT(6, 1))  AS REVPAR_CHG  FROM MTD_IND);",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_OY_DATA.sas
"ALTER TABLE EXPORT DROP COLUMN OCCLY ,  ADRLY ,  REVPARLY ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_OY_DATA.sas
INSERT INTO TABLE EXPORT SELECT * FROM RANK;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_OY_DATA.sas
CREATE TABLE '\\Hdqmdm1fpcl4v1\lodg-star\CA_PROCESSING\WEEKLY_PROCESSING\2_SECONDARY_REPORTING\ONE_YIELD_DATA\OUTPUT\OY_MARKETSHARE.TXT' AS ( SELECT * FROM EXPORT) ;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_OY_DATA.sas
" CREATE TABLE work.Qcrunch AS  (  SELECT plu.marsha, plu.brnd, plu.hotname, plu.mf, plu.domint, plu.rd , CASE WHEN SUM( str.complete_data) = RTRIM( ( SELECT Max( asof_yrmo) FROM aw_tgt_bus_dbo.property_master_hist), 2) AND plu.acomp = 'Y' THEN 'Y' ELSE 'N' END AS SCOMP, SUM( str.complete_data) AS comp_data_check , RTRIM( ( SELECT Max( asof_yrmo) FROM aw_tgt_bus_dbo.property_master_hist), 2) AS month_check, plu.acomp , 'Prelim June' AS MONTH, '' AS custom, 'YTD' AS timef, plu.region, SUM( str.maravail) AS MARAVAIL, SUM( str.marsold) AS MARSOLD, SUM( str.marrev) AS MARREV, SUM( str.maravailly) AS MARAVAILLY, SUM( str.marsoldly) AS MARSOLDLY, SUM( str.marrevly) AS MARREVLY, SUM( str.mktavail) AS MKTAVAIL, SUM( str.mktsold) AS MKTSOLDSCOMP, SUM( str.mktrev) AS MKTREV, SUM( str.mktavailly) AS MKTAVAILLY, SUM( str.mktsoldly) AS MKTSOLDLY, SUM( str.mktrevly) AS MKTREVLY, 1 AS Include, CASE WHEN (  SUM( str.maravail) <> 0 AND SUM( str.mktavail) <> 0 ) THEN SUM( str.marrev) / SUM( str.maravail) / (  SUM ( str.mktrev) / SUM( str.mktavail) ) 100 ELSE NULL END AS RevPAR_Index, CASE WHEN (  SUM( str.maravail) <> 0 AND SUM( str.mktavail) <> 0 AND SUM( str.maravailly) <> 0 AND SUM( str.mktavailly) <> 0 ) THEN SUM( str.marrev) / SUM( str.maravail) / (  SUM( str.mktrev) / SUM( str.mktavail) ) * 100 / (  SUM( str.marrevly) / SUM( str.maravailly) / (  SUM( str.mktrevly) / SUM( str.mktavailly) ) * 100 ) - 1 ELSE NULL END AS RPI_chg, CASE WHEN (  SUM( str.marsold) <> 0 AND SUM( str.mktsold) <> 0 ) THEN (  SUM( str.marsold) / SUM( str.mktsold) ) * 100 ELSE NULL END AS Occ_Index, CASE WHEN (  SUM( str.marsold) <> 0 AND SUM( str.mktsold) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.mktsoldly) <> 0 ) THEN (  (  SUM( str.marsold) / SUM( str.mktsold) ) * 100 ) / (  (  SUM( str.marsoldly) / SUM( str.mktsoldly) ) * 100 ) - 1 ELSE NULL END AS OI_chg, CASE WHEN (  SUM( str.marsold) <> 0 AND SUM( str.mktsold) <> 0 ) THEN SUM( str.marrev) / SUM( str.marsold) / (  SUM( str.mktrev) / SUM( str.mktsold) ) * 100 ELSE NULL END AS ADR_Index, CASE WHEN (  SUM( str.marsold) <> 0 AND SUM( str.mktsold) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.mktsoldly) <> 0 AND SUM( str.marrevly) <> 0 AND SUM( str.mktrev) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.mktrevly) <> 0 AND SUM( str.mktsoldly) <> 0 ) THEN SUM( str.marrev) / SUM( str.marsold) / (  SUM( str.mktrev) / SUM( str.mktsold) ) * 100 / (  SUM( str.marrevly) / SUM( str.marsoldly) / (  SUM( str.mktrevly) / SUM( str.mktsoldly) ) * 100 ) - 1 ELSE NULL END AS ADR_chg, '' AS blank1, '' AS blank2, '' AS blank3, '' AS blank4, '' AS blank5, '' AS blank6, '' AS blank7, '' AS blank8, '' AS blank9, CASE WHEN (  SUM( str.maravail) <> 0 AND SUM( str.mktavail) <> 0 AND SUM( str.maravailly) <> 0 AND SUM( str.mktavailly) <> 0 AND SUM( str.mktrev) <> 0 AND SUM( str.mktrevly) <> 0 AND SUM( str.marrev) <> 0 AND SUM( str.marrevly) <> 0 ) THEN CASE WHEN SUM( str.marrev) / SUM( str.maravail) / (  SUM( str.mktrev) / SUM( str.mktavail) ) * 100 / (  SUM( str.marrevly) / SUM( str.maravailly) / (  SUM( str.mktrevly) / SUM( str.mktavailly) ) * 100 ) - 1 >= 0 THEN 1 ELSE 0 END ELSE NULL END AS RPI_Up, CASE WHEN (  SUM( str.maravail) <> 0 AND SUM( str.mktavail) <> 0 AND SUM( str.maravailly) <> 0 AND SUM( str.mktavailly) <> 0 AND SUM( str.mktrev) <> 0 AND SUM( str.mktrevly) <> 0 AND SUM( str.marrev) <> 0 AND SUM( str.marrevly) <> 0 ) THEN CASE WHEN SUM( str.marrev) / SUM( str.maravail) / (  SUM( str.mktrev) / SUM( str.mktavail) ) * 100 / (  SUM( str.marrevly) / SUM( str.maravailly) / (  SUM( str.mktrevly) / SUM( str.mktavailly) ) * 100 ) - 1 >= 0 THEN 0 ELSE 1 END ELSE NULL END AS RPI_Down, CASE WHEN (  SUM( str.marsold) <> 0 AND SUM( str.mktsold) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.mktsoldly) <> 0 ) THEN CASE WHEN (  (  SUM( str.marsold) / SUM( str.mktsold) ) * 100 ) / (  (  SUM( str.marsoldly) / SUM( str.mktsoldly) ) * 100 ) - 1 > 0 THEN 1 ELSE 0 END ELSE NULL END AS OI_Up, CASE WHEN (  SUM( str.marsold) <> 0 AND SUM( str.mktsold) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.mktsoldly) <> 0 ) THEN CASE WHEN (  (  SUM( str.marsold) / SUM( str.mktsold) ) * 100 ) / (  (  SUM( str.marsoldly) / SUM( str.mktsoldly) ) * 100 ) - 1 > 0 THEN 0 ELSE 1 END ELSE NULL END AS OI_Down, CASE WHEN (  SUM( str.marsold) <> 0 AND SUM( str.mktsold) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.mktsoldly) <> 0 AND SUM( str.marrevly) <> 0 AND SUM( str.mktrev) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.mktrevly) <> 0 AND SUM( str.mktsoldly) <> 0 ) THEN CASE WHEN SUM( str.marrev) / SUM( str.marsold) / (  SUM( str.mktrev) / SUM( str.mktsold) ) * 100 / (  SUM( str.marrevly) / SUM( str.marsoldly) / (  SUM( str.mktrevly) / SUM( str.mktsoldly) ) * 100 ) - 1 > 0 THEN 1 ELSE 0 END ELSE NULL END AS ADR_UP, CASE WHEN (  SUM( str.marsold) <> 0 AND SUM( str.mktsold) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.mktsoldly) <> 0 AND SUM( str.marrevly) <> 0 AND SUM( str.mktrev) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.mktrevly) <> 0 AND SUM( str.mktsoldly) <> 0 ) THEN CASE WHEN SUM( str.marrev) / SUM( str.marsold) / (  SUM( str.mktrev) / SUM( str.mktsold) ) * 100 / (  SUM( str.marrevly) / SUM( str.marsoldly) / (  SUM( str.mktrevly) / SUM( str.mktsoldly) ) * 100 ) - 1 > 0 THEN 0 ELSE 1 END ELSE NULL END AS ADR_Down, plu.owner, plu.manager, plu.franchisee, plu.rd AS rd2, plu.str_market, plu.cluster_name, plu.opendate, '' AS high_impact, plu.mvp, '' AS redo_mn, '' AS redo_ytd, plu.gen, plu.sfo_area, '' AS sfo_leader, plu.sfo_market, '' AS sfogroup, plu.hCLASS, plu.avp, plu.sub_brand, plu.misw_flag, plu.division FROM (  SELECT b.marsha, b.asof_yrmo, b.yrmnth, b.timef, b.complete_data, b.maravail, b.marsold, b.marrev, b.mktavail, b.mktsold, b.mktrev, b.maravailly, b.marsoldly, b.marrevly, b.mktavailly, b.mktsoldly, b.mktrevly FROM aw_cmp_dbo.str_monthly_data b WHERE b.timef = 'MONTH' AND b.asof_yrmo = ( SELECT Max( asof_yrmo) FROM aw_cmp_dbo.str_monthly_data) AND b.currency_type = 'Constant USD' AND LTRIM( b.yrmnth, 4) = LTRIM( ( SELECT Max( asof_yrmo) FROM aw_cmp_dbo.str_monthly_data), 4) UNION SELECT b.marsha, b.asof_date AS asof_yrmo, b.yrmnth, b.timef, b.complete_data, b.maravail, b.marsold, b.marrev, b.mktavail, b.mktsold, b.mktrev, b.maravailly, b.marsoldly, b.marrevly, b.mktavailly, b.mktsoldly, b.mktrevly FROM aw_cmp_dbo.str_weekly_data_hist b WHERE b.timef = 'MTD' AND b.asof_date = ( SELECT Max( asof_date) FROM aw_cmp_dbo.str_weekly_data_hist) AND b.currency_type = 'Constant USD' AND b.yrmnth = ( SELECT Max( yrmnth) FROM aw_cmp_dbo.str_weekly_data_hist)) str LTRIM JOIN aw_tgt_bus_dbo.property_master_hist plu ON plu.marsha = str.marsha WHERE plu.asof_yrmo = ( SELECT Max( asof_yrmo) FROM aw_tgt_bus_dbo.property_master_hist) GROUP BY plu.marsha, plu.brnd, plu.hotname, plu.mf, plu.domint, plu.rd, plu.acomp, plu.region, plu.owner, plu.manager, plu.franchisee, plu.rd, plu.str_market, plu.cluster_name, plu.opendate, plu.mvp, plu.gen, plu.sfo_area, plu.sfo_market, plu.hCLASS, plu.avp, plu.sub_brand, plu.misw_flag, plu.division UNION SELECT plu.marsha, plu.brnd, plu.hotname, plu.mf, plu.domint, plu.rd , CASE WHEN SUM( str.complete_data) = RTRIM( ( SELECT Max( asof_yrmo) FROM aw_tgt_bus_dbo.property_master_hist), 2) - (  RTRIM( ( SELECT Max( asof_yrmo) FROM aw_tgt_bus_dbo.property_master_hist), 2) - 3 ) AND plu.acomp = 'Y' THEN 'Y' ELSE 'N' END AS SCOMP, SUM( str.complete_data) AS comp_data_check , RTRIM( ( SELECT Max( asof_yrmo) FROM aw_tgt_bus_dbo.property_master_hist), 2) AS month_check, plu.acomp , 'Prelim June' AS MONTH, '' AS custom, 'QTD' AS timef, plu.region, SUM( str.maravail) AS MARAVAIL, SUM( str.marsold) AS MARSOLD, SUM( str.marrev) AS MARREV, SUM( str.maravailly) AS MARAVAILLY, SUM( str.marsoldly) AS MARSOLDLY, SUM( str.marrevly) AS MARREVLY, SUM( str.mktavail) AS MKTAVAIL, SUM( str.mktsold) AS MKTSOLD, SUM( str.mktrev) AS MKTREV, SUM( str.mktavailly) AS MKTAVAILLY, SUM( str.mktsoldly) AS MKTSOLDLY, SUM( str.mktrevly) AS MKTREVLY, 1 AS Include, CASE WHEN (  SUM( str.maravail) <> 0 AND SUM( str.mktavail) <> 0 ) THEN SUM( str.marrev) / SUM( str.maravail) / (  SUM ( str.mktrev) / SUM( str.mktavail) ) 100 ELSE NULL END AS RevPAR_Index, CASE WHEN (  SUM( str.maravail) <> 0 AND SUM( str.mktavail) <> 0 AND SUM( str.maravailly) <> 0 AND SUM( str.mktavailly) <> 0 AND SUM( str.mktrev) <> 0 AND SUM( str.mktrevly) <> 0 AND SUM( str.marrev) <> 0 AND SUM( str.marrevly) <> 0 ) THEN SUM( str.marrev) / SUM( str.maravail) / (  SUM( str.mktrev) / SUM( str.mktavail) ) * 100 / (  SUM( str.marrevly) / SUM( str.maravailly) / (  SUM( str.mktrevly) / SUM( str.mktavailly) ) * 100 ) - 1 ELSE NULL END AS RPI_chg, CASE WHEN (  SUM( str.marsold) <> 0 AND SUM( str.mktsold) <> 0 ) THEN (  SUM( str.marsold) / SUM( str.mktsold) ) * 100 ELSE NULL END AS Occ_Index, CASE WHEN (  SUM( str.marsold) <> 0 AND SUM( str.mktsold) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.mktsoldly) <> 0 ) THEN (  (  SUM( str.marsold) / SUM( str.mktsold) ) * 100 ) / (  (  SUM( str.marsoldly) / SUM( str.mktsoldly) ) * 100 ) - 1 ELSE NULL END AS OI_chg, CASE WHEN (  SUM( str.marsold) <> 0 AND SUM( str.mktsold) <> 0 ) THEN SUM( str.marrev) / SUM( str.marsold) / (  SUM( str.mktrev) / SUM( str.mktsold) ) * 100 ELSE NULL END AS ADR_Index, CASE WHEN (  SUM( str.marsold) <> 0 AND SUM( str.mktsold) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.mktsoldly) <> 0 AND SUM( str.marrevly) <> 0 AND SUM( str.mktrev) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.mktrevly) <> 0 AND SUM( str.mktsoldly) <> 0 ) THEN SUM( str.marrev) / SUM( str.marsold) / (  SUM( str.mktrev) / SUM( str.mktsold) ) * 100 / (  SUM( str.marrevly) / SUM( str.marsoldly) / (  SUM( str.mktrevly) / SUM( str.mktsoldly) ) * 100 ) - 1 ELSE NULL END AS ADR_chg, '' AS blank1, '' AS blank2, '' AS blank3, '' AS blank4, '' AS blank5, '' AS blank6, '' AS blank7, '' AS blank8, '' AS blank9, CASE WHEN (  SUM( str.maravail) <> 0 AND SUM( str.mktavail) <> 0 AND SUM( str.maravailly) <> 0 AND SUM( str.mktavailly) <> 0 AND SUM( str.mktrev) <> 0 AND SUM( str.mktrevly) <> 0 AND SUM( str.marrev) <> 0 AND SUM( str.marrevly) <> 0 ) THEN CASE WHEN SUM( str.marrev) / SUM( str.maravail) / (  SUM( str.mktrev) / SUM( str.mktavail) ) * 100 / (  SUM( str.marrevly) / SUM( str.maravailly) / (  SUM( str.mktrevly) / SUM( str.mktavailly) ) * 100 ) - 1 >= 0 THEN 1 ELSE 0 END ELSE NULL END AS RPI_Up, CASE WHEN (  SUM( str.maravail) <> 0 AND SUM( str.mktavail) <> 0 AND SUM( str.maravailly) <> 0 AND SUM( str.mktavailly) <> 0 AND SUM( str.mktrev) <> 0 AND SUM( str.mktrevly) <> 0 AND SUM( str.marrev) <> 0 AND SUM( str.marrevly) <> 0 ) THEN CASE WHEN SUM( str.marrev) / SUM( str.maravail) / (  SUM( str.mktrev) / SUM( str.mktavail) ) * 100 / (  SUM( str.marrevly) / SUM( str.maravailly) / (  SUM( str.mktrevly) / SUM( str.mktavailly) ) * 100 ) - 1 >= 0 THEN 0 ELSE 1 END ELSE NULL END AS RPI_Down, CASE WHEN (  SUM( str.marsold) <> 0 AND SUM( str.mktsold) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.mktsoldly) <> 0 ) THEN CASE WHEN (  (  SUM( str.marsold) / SUM( str.mktsold) ) * 100 ) / (  (  SUM( str.marsoldly) / SUM( str.mktsoldly) ) * 100 ) - 1 > 0 THEN 1 ELSE 0 END ELSE NULL END AS OI_Up, CASE WHEN (  SUM( str.marsold) <> 0 AND SUM( str.mktsold) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.mktsoldly) <> 0 ) THEN CASE WHEN (  (  SUM( str.marsold) / SUM( str.mktsold) ) * 100 ) / (  (  SUM( str.marsoldly) / SUM( str.mktsoldly) ) * 100 ) - 1 > 0 THEN 0 ELSE 1 END ELSE NULL END AS OI_Down, CASE WHEN (  SUM( str.marsold) <> 0 AND SUM( str.mktsold) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.mktsoldly) <> 0 AND SUM( str.marrevly) <> 0 AND SUM( str.mktrev) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.mktrevly) <> 0 AND SUM( str.mktsoldly) <> 0 ) THEN CASE WHEN SUM( str.marrev) / SUM( str.marsold) / (  SUM( str.mktrev) / SUM( str.mktsold) ) * 100 / (  SUM( str.marrevly) / SUM( str.marsoldly) / (  SUM( str.mktrevly) / SUM( str.mktsoldly) ) * 100 ) - 1 > 0 THEN 1 ELSE 0 END ELSE NULL END AS ADR_UP, CASE WHEN (  SUM( str.marsold) <> 0 AND SUM( str.mktsold) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.mktsoldly) <> 0 AND SUM( str.marrevly) <> 0 AND SUM( str.mktrev) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.mktrevly) <> 0 AND SUM( str.mktsoldly) <> 0 ) THEN CASE WHEN SUM( str.marrev) / SUM( str.marsold) / (  SUM( str.mktrev) / SUM( str.mktsold) ) * 100 / (  SUM( str.marrevly) / SUM( str.marsoldly) / (  SUM( str.mktrevly) / SUM( str.mktsoldly) ) * 100 ) - 1 > 0 THEN 0 ELSE 1 END ELSE NULL END AS ADR_Down, plu.owner, plu.manager, plu.franchisee, plu.rd AS rd2, plu.str_market, plu.cluster_name, plu.opendate, '' AS high_impact, plu.mvp, '' AS redo_mn, '' AS redo_ytd, plu.gen, plu.sfo_area, '' AS sfo_leader, plu.sfo_market, '' AS sfogroup, plu.hCLASS, plu.avp, plu.sub_brand, plu.misw_flag, plu.division FROM (  SELECT b.marsha, b.asof_yrmo, b.yrmnth, b.timef, b.complete_data, b.maravail, b.marsold, b.marrev, b.mktavail, b.mktsold, b.mktrev, b.maravailly, b.marsoldly, b.marrevly, b.mktavailly, b.mktsoldly, b.mktrevly FROM aw_cmp_dbo.str_monthly_data b WHERE b.timef = 'MONTH' AND b.asof_yrmo = ( SELECT Max( asof_yrmo) FROM aw_cmp_dbo.str_monthly_data) AND b.currency_type = 'Constant USD' AND LTRIM( b.yrmnth, 4) = LTRIM( ( SELECT Max( asof_yrmo) FROM aw_cmp_dbo.str_monthly_data), 4) AND RTRIM( b.yrmnth, 2) >= RTRIM( ( SELECT Max( asof_yrmo) FROM aw_cmp_dbo.str_monthly_data), 2) - 1 UNION SELECT b.marsha, b.asof_date AS asof_yrmo, b.yrmnth, b.timef, b.complete_data, b.maravail, b.marsold, b.marrev, b.mktavail, b.mktsold, b.mktrev, b.maravailly, b.marsoldly, b.marrevly, b.mktavailly, b.mktsoldly, b.mktrevly FROM aw_cmp_dbo.str_weekly_data_hist b WHERE b.timef = 'MTD' AND b.asof_date = ( SELECT Max( asof_date) FROM aw_cmp_dbo.str_weekly_data_hist) AND b.currency_type = 'Constant USD' AND b.yrmnth = ( SELECT Max( yrmnth) FROM aw_cmp_dbo.str_weekly_data_hist)) str LTRIM JOIN aw_tgt_bus_dbo.property_master_hist plu ON plu.marsha = str.marsha WHERE plu.asof_yrmo = ( SELECT Max( asof_yrmo) FROM aw_tgt_bus_dbo.property_master_hist) GROUP BY plu.marsha, plu.brnd, plu.hotname, plu.mf, plu.domint, plu.rd, plu.acomp, plu.region, plu.owner, plu.manager, plu.franchisee, plu.rd, plu.str_market, plu.cluster_name, plu.opendate, plu.mvp, plu.gen, plu.sfo_area, plu.sfo_market, plu.hCLASS, plu.avp, plu.sub_brand, plu.misw_flag, plu.division ORDER BY MARSHA  ) ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_Quarterly_Crunch.sas
"CREATE TABLE ""\\Hdqmdm1fpcl4v1\lodg-STAR\Quarterly Crunch Raw Data\quarterly_crunch_&curyrpd._raw_data.csv"" AS ( SELECT * FROM QCRUNCH) ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_Quarterly_Crunch.sas
" CREATE TABLE AW_TGT_BUS_DBO.STR_COMPETE_STG (  MARSHA VARCHAR( 5), MAR_HOTEL  VARCHAR( 6), COMP_HOTEL VARCHAR( 6), CHAIN_NAME  VARCHAR( 25), HOTEL_NAME  VARCHAR( 50), CITY  VARCHAR( 30), STATE  VARCHAR( 8), PHONE  VARCHAR( 15), CAP  SMALLINT, OPENDATE  VARCHAR( 6), ZIP  VARCHAR( 10), CONTROL  VARCHAR( 1), COUNTRY  VARCHAR( 20), SCALE  VARCHAR( 25), RUNDATE  VARCHAR( 6) ) ) by odbc ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_compete.sas
"CREATE TABLE work.compete1 AS ( SELECT  *, rundate AS rundate1, COMPSET AS COMP_HOTEL, rundate1 AS rundate  FROM output.compete2 );",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_compete.sas
ALTER TABLE work.compete1 DROP COLUMN rundate1 ;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_compete.sas
SELECT * FROM work.compete1 ORDER BY MAR_HOTEL;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_compete.sas
" CREATE TABLE work.plu AS (  SELECT RTRIM( STR_ID) AS MAR_HOTEL , MARSHA FROM AW_TGT_BUS_DBO.PROPERTY_MASTER_HIST WHERE asof_yrmo = &STARMNTH. AND openflag = 'Y' AND BRND IN ( 'CY','FI','SH','FS','JW','BR','RI','TS','RZ','AK','GE','PR','EB','OX','CC','BG','AR','ER','DE','4P','AL','EL','GX','LC','MD','SI','ST','TX','WH','WI','FP','XR')   ) ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_compete.sas
SELECT * FROM plu ORDER BY MAR_HOTEL;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_compete.sas
 CREATE TABLE work.compete AS ( SELECT  *  FROM plu A RIGHT JOIN work.compete1 B ON  A.MAR_HOTEL =  B.MAR_HOTEL);,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_compete.sas
 CREATE TABLE tmp AS ( SELECT  *  FROM work.compete  WHERE MARSHA=' ' AND MAR_HOTEL=COMP_HOTEL);,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_compete.sas
"SELECT DISTINCT * FROM work.compete ORDER BY MAR_HOTEL ,COMP_HOTEL;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_compete.sas
INSERT INTO TABLE AWPROD.STR_COMPETE_STG SELECT * FROM work.compete;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_compete.sas
   TRUNCATE TABLE AW_TGT_BUS_DBO.STR_COMPETE) by odbc ;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_compete.sas
   INSERT INTO AW_TGT_BUS_DBO.STR_COMPETE Select * FROM AW_TGT_BUS_DBO.STR_COMPETE_STG ) by odbc ;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_compete.sas
   DROP TABLE AW_TGT_BUS_DBO.STR_COMPETE_STG ) by odbc ;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_compete.sas
"CREATE TABLE Mon_Plus_data AS ( SELECT  *  , STR_ID AS STAR_ID  FROM Str_CC.ALL1PLUSFINAL );",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_30Month_Load_Flat.sas
"ALTER TABLE Mon_Plus_data DROP COLUMN COUNT2 ,  STR_ID ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_30Month_Load_Flat.sas
"CREATE TABLE MNTH60STR_Plus_DATA_RAW AS ( SELECT STAR_ID , YrMnth1 , MAR_Avail , MAR_GR_Sold , MAR_CN_Sold , MAR_TN_Sold , MAR_GR_Rev , MAR_CN_Rev , MAR_TN_Rev , MKT_Avail , MKT_GR_Sold , MKT_CN_Sold , MKT_TN_Sold , MKT_GR_Rev , MKT_CN_Rev , MKT_TN_Rev , MAR_FB , MAR_OtherRev , MAR_TotRev , MKT_FB , MKT_OtherRev , MKT_TotRev , MAR_SampAvail , MAR_TotAvail , MKT_SampAvail , MKT_TotAvail , 108622 THEN delete AS IF STAR_I FROM ""\\Hdqmdm1fpcl4v1\lodg-STAR\Monthly_Reporting\&month.&STARYR.\proc\plus60mo.txt""  WHERE STAR_ID<>108622);",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_30Month_Load_Flat.sas
"CREATE TABLE MNTH60STR_Plus_DATA_RAW AS ( SELECT  *  , 'MONTH' AS TIMEF , YrMnth1 AS YrMnth  FROM MNTH60STR_Plus_DATA_RAW );",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_30Month_Load_Flat.sas
ALTER TABLE MNTH60STR_Plus_DATA_RAW DROP COLUMN YrMnth1 ;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_30Month_Load_Flat.sas
"SELECT DISTINCT * FROM MNTH60STR_Plus_DATA_RAW ORDER BY STAR_ID ,YrMnth ,TimeF;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_30Month_Load_Flat.sas
"CREATE TABLE propplus AS ( SELECT Hotel , STAR_ID , TIMEF , YrMnth , ASOF_YRMO , Mar_Avail , Mar_GR_Sold , Mar_CN_Sold , Mar_TN_Sold , Mar_GR_Rev , Mar_CN_Rev , Mar_TN_Rev , Mar_Avail_LY , Mar_GR_Sold_LY , Mar_CN_Sold_LY , Mar_TN_Sold_LY , Mar_GR_Rev_LY , Mar_CN_Rev_LY , Mar_TN_Rev_LY , MKT_Avail , MKT_GR_Sold , MKT_CN_Sold , MKT_TN_Sold , MKT_GR_Rev , MKT_CN_Rev , MKT_TN_Rev , MKT_Avail_LY , MKT_GR_Sold_LY , MKT_CN_Sold_LY , MKT_TN_Sold_LY , MKT_GR_Rev_LY , MKT_CN_Rev_LY , MKT_TN_Rev_LY , Mar_FB_Rev , Mar_Other_Rev , Mar_Total_Rev , Mar_FB_Rev_LY , Mar_Other_Rev_LY , Mar_Total_Rev_LY , MKT_FB_Rev , MKT_Other_Rev , MKT_Total_Rev , MKT_FB_Rev_LY , MKT_Other_Rev_LY , MKT_Total_Rev_LY , MAR_SampAva , MAR_TotAva , MAR_SampAva_LY , MAR_TotAva_LY , MKT_SampAva , MKT_TotAva , MKT_SampAva_LY , MKT_TotAva_ FROM ""\\Hdqmdm1fpcl4v1\lodg-STAR\Monthly_Reporting\&month.&STARYR.\proc\propplus.txt"" );",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_30Month_Load_Flat.sas
"ALTER TABLE propplus DROP COLUMN Hotel ,  Mar_FB_Rev ,  Mar_Other_Rev ,  Mar_Total_Rev ,  Mar_FB_Rev_LY ,  Mar_Other_Rev_LY ,  Mar_Total_Rev_LY ,  MKT_FB_Rev ,  MKT_Other_Rev ,  MKT_Total_Rev ,  MKT_FB_Rev_LY ,  MKT_Other_Rev_LY ,  MKT_Total_Rev_LY ,  MAR_SampAva ,  MAR_TotAva ,  MAR_SampAva_LY ,  MAR_TotAva_LY ,  MKT_SampAva ,  MKT_TotAva ,  MKT_SampAva_LY ,  MKT_TotAva_LY ,  Mar_Avail_LY ,  Mar_GR_Sold_LY ,  Mar_CN_Sold_LY ,  Mar_TN_Sold_LY ,  Mar_GR_Rev_LY ,  Mar_CN_Rev_LY ,  Mar_TN_Rev_LY ,  MKT_Avail_LY ,  MKT_GR_Sold_LY ,  MKT_CN_Sold_LY ,  MKT_TN_Sold_LY ,  MKT_GR_Rev_LY ,  MKT_CN_Rev_LY ,  MKT_TN_Rev_LY ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_30Month_Load_Flat.sas
"SELECT * FROM propplus ORDER BY STAR_ID ,YrMnth ,TimeF;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_30Month_Load_Flat.sas
 CREATE TABLE MNTH60STR_Plus AS ( SELECT  *  FROM propplus A JOIN MNTH60STR_Plus_DATA_RAW B ON  A.STAR_ID =  B.STAR_ID AND  A.YrMnth =  B.YrMnth AND  A.TimeF =  B.TimeF);,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_30Month_Load_Flat.sas
"CREATE TABLE Mon_Rank_data AS ( SELECT  *, TIMEF AS TIMEF1, YrMnth AS YrMnth1, STR AS STAR_ID, Occ_Num AS Rank_Occ_Num, Occ_Den AS Rank_Occ_Den, ADR_Num AS Rank_ADR_Num, ADR_Den AS Rank_ADR_Den, RevPAR_Num AS Rank_RevPAR_Num, RevPAR_Den AS Rank_RevPAR_Den, Occ_Chg_Num AS Rank_Occ_Chg_Num, Occ_Chg_Den AS Rank_Occ_Chg_Den, ADR_Chg_Num AS Rank_ADR_Chg_Num, ADR_Chg_Den AS Rank_ADR_Chg_Den, RevPAR_Chg_Num AS Rank_RevPAR_Chg_Num, RevPAR_Chg_Den AS Rank_RevPAR_Chg_Den, YrMnth1 AS YrMnth , CASE WHEN  TIMEF1='MON'  THEN 'MONTH' WHEN   TIMEF1='YTD'  THEN 'YTD' WHEN   TIMEF1='3MO'  THEN 'LAST3' WHEN   TIMEF1='TWE'  THEN 'LAST12' END AS TIMEF FROM Str_CC.MNTH30STR_Rank_DATA_FROM_RAW );",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_30Month_Load_Flat.sas
"ALTER TABLE Mon_Rank_data DROP COLUMN TIMEF1 ,  YrMnth1 ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_30Month_Load_Flat.sas
"SELECT DISTINCT * FROM Mon_Rank_data ORDER BY STAR_ID ,YrMnth ,TimeF;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_30Month_Load_Flat.sas
"CREATE TABLE work.starcomp AS ( SELECT  *, COMP AS SCOMP FROM Str_acc.Starview_Comp_CD );",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_30Month_Load_Flat.sas
ALTER TABLE work.starcomp DROP COLUMN STR_ID ;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_30Month_Load_Flat.sas
SELECT * FROM work.starcomp ORDER BY marsha;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_30Month_Load_Flat.sas
"CREATE TABLE work.X30MONTH_CD AS ( SELECT  *, BRND AS brand, BRND AS brand, MSType AS MSType1, MSType AS MSType1, MARCAP AS MARAVAIL, MAROCC AS MARSOLD, MKTCAP AS MKTAVAIL, MKTOCC AS MKTSOLD, MARCAPLY AS MARAVAILLY, MAROCCLY AS MARSOLDLY, MKTCAPLY AS MKTAVAILLY, MKTOCCLY AS MKTSOLDLYMARSOLDLY AS MKTSOLDLY AS , FORMAT(cur, VARCHAR(3)) AS cur , FORMAT(datadate, VARCHAR(6)) AS datadate , FORMAT(TIMEF, VARCHAR(6)) AS TIMEF , FORMAT(Mnth, VARCHAR(6)) AS YrMnth , FORMAT(datasource, VARCHAR(4)) AS datasource , MSType1 AS MSType , STRCODE AS STAR_ID  FROM Str_ACC.X30MONTH_CD  WHERE marsha<>'' AND STAR_ID<>' ' AND marsha<>'');",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_30Month_Load_Flat.sas
"ALTER TABLE work.X30MONTH_CD DROP COLUMN STRCODE ,  MNTH ,  ITEM ,  MSType1 ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_30Month_Load_Flat.sas
SELECT * FROM work.X30MONTH_CD ORDER BY marsha;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_30Month_Load_Flat.sas
" CREATE TABLE work.X30MONTH_CD AS ( SELECT  *  , FORMAT(marrev, FLOAT(13, 2))  AS marrev , FORMAT(mktrev, FLOAT(13, 2))  AS mktrev , FORMAT(marrevly, FLOAT(13, 2))  AS marrevly , FORMAT(mktrevly, FLOAT(13, 2))  AS mktrevly  FROM work.X30MONTH_CD A LEFT JOIN work.starcomp B ON  A.Marsha =  B.Marsha WHERE STAR_ID<>0 AND ( MARAVAIL+MARSOLD+marrev+MKTAVAIL+MKTSOLD+mktrev+marAVAILly+marSOLDly+marrevly+mktAVAILly+mktSOLDly+mktrevly)<>0);",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_30Month_Load_Flat.sas
"SELECT DISTINCT * FROM work.X30MONTH_CD ORDER BY STAR_ID ,YrMnth ,TimeF;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_30Month_Load_Flat.sas
" CREATE TABLE xAW30MONTH_CD AS ( SELECT  *, datadate AS rundate FROM work.X30MONTH_CD A JOIN MNTH60STR_Plus B ON  A.STAR_ID =  B.STAR_ID AND  A.YrMnth =  B.YrMnth AND  A.TimeF =  B.TimeF JOIN Mon_Rank_data C ON  B.STAR_ID =  C.STAR_ID AND  B.YrMnth =  C.YrMnth AND  B.TimeF =  C.TimeF);",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_30Month_Load_Flat.sas
" CREATE TABLE xAW30MONTH_CD AS ( SELECT  *  , MARAVAIL / MKT_Avail * MKT_GR_Sold AS MKT_GR_Sold1 , MARAVAIL / MKT_Avail * MKT_CN_Sold AS MKT_CN_Sold1 , MARAVAIL / MKT_Avail * MKT_TN_Sold AS MKT_TN_Sold1 , MARAVAIL / MKT_Avail * MKT_GR_Rev AS MKT_GR_Rev1 , MARAVAIL / MKT_Avail * MKT_CN_Rev AS MKT_CN_Rev1 , MARAVAIL / MKT_Avail * MKT_TN_Rev AS MKT_TN_Rev1 , MKT_GR_Sold AS MKT_GR_Sold_unweighted , MKT_CN_Sold AS MKT_CN_Sold_unweighted , MKT_TN_Sold AS MKT_TN_Sold_unweighted , MKT_GR_Rev AS MKT_GR_Rev_unweighted , MKT_CN_Rev AS MKT_CN_Rev_unweighted , MKT_TN_Rev AS MKT_TN_Rev_unweighted , MKT_Avail AS MKT_Avail_unweighted  FROM xAW30MONTH_CD );",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_30Month_Load_Flat.sas
"CREATE TABLE xAW30MONTH_CD_pw AS ( SELECT  *  , MKT_GR_Sold1 AS MKT_GR_Sold , MKT_CN_Sold1 AS MKT_CN_Sold , MKT_TN_Sold1 AS MKT_TN_Sold , MKT_GR_Rev1 AS MKT_GR_Rev , MKT_CN_Rev1 AS MKT_CN_Rev , MKT_TN_Rev1 AS MKT_TN_Rev  FROM xAW30MONTH_CD );",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_30Month_Load_Flat.sas
"ALTER TABLE xAW30MONTH_CD_pw DROP COLUMN MAR_Avail ,  MKT_Avail ,  MKT_GR_Sold1 ,  MKT_CN_Sold1 ,  MKT_TN_Sold1 ,  MKT_GR_Rev1 ,  MKT_CN_Rev1 ,  MKT_TN_Rev1 ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_30Month_Load_Flat.sas
"CREATE TABLE Str_CC.AW30MONTH_CD_&STARMNTH AS ( SELECT  *  , FORMAT(MARSHA, &STARMNTH) AS MARSHA , FORMAT(STAR_ID, &STARMNTH) AS STAR_ID , FORMAT(brand, &STARMNTH) AS brand , FORMAT(cur, &STARMNTH) AS cur , FORMAT(YrMnth, &STARMNTH) AS YrMnth , FORMAT(TIMEF, &STARMNTH) AS TIMEF , FORMAT(SCOMP, &STARMNTH) AS SCOMP , FORMAT(datasource, &STARMNTH) AS datasource , FORMAT(MSType, &STARMNTH) AS MSType , FORMAT(MARAVAIL, &STARMNTH) AS MARAVAIL , FORMAT(MARSOLD, &STARMNTH) AS MARSOLD , FORMAT(MARREV, &STARMNTH) AS MARREV , FORMAT(MKTAVAIL, &STARMNTH) AS MKTAVAIL , FORMAT(MKTSOLD, &STARMNTH) AS MKTSOLD , FORMAT(MKTREV, &STARMNTH) AS MKTREV , FORMAT(MARAVAILLY, &STARMNTH) AS MARAVAILLY , FORMAT(MARSOLDLY, &STARMNTH) AS MARSOLDLY , FORMAT(MARREVLY, &STARMNTH) AS MARREVLY , FORMAT(MKTAVAILLY, &STARMNTH) AS MKTAVAILLY , FORMAT(MKTSOLDLY, &STARMNTH) AS MKTSOLDLY , FORMAT(MKTREVLY, &STARMNTH) AS MKTREVLY , FORMAT(MAR_GR_Sold, &STARMNTH) AS MAR_GR_Sold , FORMAT(MAR_CN_Sold, &STARMNTH) AS MAR_CN_Sold , FORMAT(MAR_TN_Sold, &STARMNTH) AS MAR_TN_Sold , FORMAT(MAR_GR_Rev, &STARMNTH) AS MAR_GR_Rev , FORMAT(MAR_CN_Rev, &STARMNTH) AS MAR_CN_Rev , FORMAT(MAR_TN_Rev, &STARMNTH) AS MAR_TN_Rev , FORMAT(MKT_GR_Sold, &STARMNTH) AS MKT_GR_Sold , FORMAT(MKT_CN_Sold, &STARMNTH) AS MKT_CN_Sold , FORMAT(MKT_TN_Sold, &STARMNTH) AS MKT_TN_Sold , FORMAT(MKT_GR_Rev, &STARMNTH) AS MKT_GR_Rev , FORMAT(MKT_CN_Rev, &STARMNTH) AS MKT_CN_Rev , FORMAT(MKT_TN_Rev, &STARMNTH) AS MKT_TN_Rev , FORMAT(MKT_Avail_unweighted, &STARMNTH) AS MKT_Avail_unweighted , FORMAT(MKT_GR_Sold_unweighted, &STARMNTH) AS MKT_GR_Sold_unweighted , FORMAT(MKT_CN_Sold_unweighted, &STARMNTH) AS MKT_CN_Sold_unweighted , FORMAT(MKT_TN_Sold_unweighted, &STARMNTH) AS MKT_TN_Sold_unweighted , FORMAT(MKT_GR_Rev_unweighted, &STARMNTH) AS MKT_GR_Rev_unweighted , FORMAT(MKT_CN_Rev_unweighted, &STARMNTH) AS MKT_CN_Rev_unweighted , FORMAT(MKT_TN_Rev_unweighted, &STARMNTH) AS MKT_TN_Rev_unweighted , FORMAT(MAR_FB, &STARMNTH) AS MAR_FB , FORMAT(MAR_OtherRev, &STARMNTH) AS MAR_OtherRev , FORMAT(MAR_TotRev, &STARMNTH) AS MAR_TotRev , FORMAT(MKT_FB, &STARMNTH) AS MKT_FB , FORMAT(MKT_OtherRev, &STARMNTH) AS MKT_OtherRev , FORMAT(MKT_TotRev, &STARMNTH) AS MKT_TotRev , FORMAT(MAR_SampAvail, &STARMNTH) AS MAR_SampAvail , FORMAT(MAR_TotAvail, &STARMNTH) AS MAR_TotAvail , FORMAT(MKT_SampAvail, &STARMNTH) AS MKT_SampAvail , FORMAT(MKT_TotAvail, &STARMNTH) AS MKT_TotAvail , FORMAT(Rank_Occ_Num, &STARMNTH) AS Rank_Occ_Num , FORMAT(Rank_Occ_Den, &STARMNTH) AS Rank_Occ_Den , FORMAT(Rank_ADR_Num, &STARMNTH) AS Rank_ADR_Num , FORMAT(Rank_ADR_Den, &STARMNTH) AS Rank_ADR_Den , FORMAT(Rank_RevPAR_Num, &STARMNTH) AS Rank_RevPAR_Num , FORMAT(Rank_RevPAR_Den, &STARMNTH) AS Rank_RevPAR_Den , FORMAT(Rank_Occ_Chg_Num, &STARMNTH) AS Rank_Occ_Chg_Num , FORMAT(Rank_Occ_Chg_Den, &STARMNTH) AS Rank_Occ_Chg_Den , FORMAT(Rank_ADR_Chg_Num, &STARMNTH) AS Rank_ADR_Chg_Num , FORMAT(Rank_ADR_Chg_Den, &STARMNTH) AS Rank_ADR_Chg_Den , FORMAT(Rank_RevPAR_Chg_Num, &STARMNTH) AS Rank_RevPAR_Chg_Num , FORMAT(Rank_RevPAR_Chg_Den, &STARMNTH) AS Rank_RevPAR_Chg_Den  FROM xAW30MONTH_CD_pw );",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_30Month_Load_Flat.sas
ALTER TABLE Str_CC.AW30MONTH_CD_&STARMNTH DROP COLUMN rundate ;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_30Month_Load_Flat.sas
" CREATE TABLE AW_TGT_BUS_DBO.STR_30MONTH_STG (  MARSHA VARCHAR( 5), STAR_ID INTEGER, brand VARCHAR( 2), cur VARCHAR( 3), YrMnth VARCHAR( 6), TIMEF VARCHAR( 6), SCOMP VARCHAR( 1), datasource VARCHAR( 4), MSType VARCHAR( 2), MARAVAIL INTEGER, MARSOLD INTEGER, MARREV DOUBLE, MKTAVAIL INTEGER, MKTSOLD INTEGER, MKTREV DOUBLE, MARAVAILLY INTEGER, MARSOLDLY INTEGER, MARREVLY DOUBLE, MKTAVAILLY INTEGER, MKTSOLDLY INTEGER, MKTREVLY DOUBLE, MAR_GR_Sold INTEGER, MAR_CN_Sold INTEGER, MAR_TN_Sold INTEGER, MAR_GR_Rev DOUBLE, MAR_CN_Rev DOUBLE, MAR_TN_Rev DOUBLE, MKT_GR_Sold DOUBLE, MKT_CN_Sold DOUBLE, MKT_TN_Sold DOUBLE, MKT_GR_Rev DOUBLE, MKT_CN_Rev DOUBLE, MKT_TN_Rev DOUBLE, MKT_Avail_unweighted INTEGER, MKT_GR_Sold_unweighted INTEGER, MKT_CN_Sold_unweighted INTEGER, MKT_TN_Sold_unweighted INTEGER, MKT_GR_Rev_unweighted DOUBLE, MKT_CN_Rev_unweighted DOUBLE, MKT_TN_Rev_unweighted DOUBLE, MAR_FB DOUBLE, MAR_OtherRev DOUBLE, MAR_TotRev DOUBLE, MKT_FB DOUBLE, MKT_OtherRev DOUBLE, MKT_TotRev DOUBLE, MAR_SampAvail INTEGER, MAR_TotAvail INTEGER, MKT_SampAvail INTEGER, MKT_TotAvail INTEGER, Rank_Occ_Num SMALLINT, Rank_Occ_Den SMALLINT, Rank_ADR_Num SMALLINT, Rank_ADR_Den SMALLINT, Rank_RevPAR_Num SMALLINT, Rank_RevPAR_Den SMALLINT, Rank_Occ_Chg_Num SMALLINT, Rank_Occ_Chg_Den SMALLINT, Rank_ADR_Chg_Num SMALLINT, Rank_ADR_Chg_Den SMALLINT, Rank_RevPAR_Chg_Num SMALLINT, Rank_RevPAR_Chg_Den SMALLINT, ASOF_YRMO INTEGER ) ) by odbc ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_30Month_Load_Flat.sas
INSERT INTO TABLE AWPROD.STR_30MONTH_STG SELECT * FROM Str_CC.AW30MONTH_CD_&STARMNTH;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_30Month_Load_Flat.sas
   INSERT INTO AW_TGT_BUS_DBO.STR_30MONTH Select * FROM AW_TGT_BUS_DBO.STR_30MONTH_STG ) by odbc ;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_30Month_Load_Flat.sas
   DROP TABLE AW_TGT_BUS_DBO.STR_30MONTH_STG ) by odbc ;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_30Month_Load_Flat.sas
"CREATE TABLE Mon_Plus_data AS ( SELECT  *  , STR_ID AS STAR_ID  FROM Str_CC.ALL1PLUSFINAL );",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_60Month_Load_Flat.sas
"ALTER TABLE Mon_Plus_data DROP COLUMN COUNT2 ,  STR_ID ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_60Month_Load_Flat.sas
"CREATE TABLE MNTH60STR_Plus_DATA_RAW AS ( SELECT STAR_ID , YrMnth1 , MAR_Avail , MAR_GR_Sold , MAR_CN_Sold , MAR_TN_Sold , MAR_GR_Rev , MAR_CN_Rev , MAR_TN_Rev , MKT_Avail , MKT_GR_Sold , MKT_CN_Sold , MKT_TN_Sold , MKT_GR_Rev , MKT_CN_Rev , MKT_TN_Rev , MAR_FB , MAR_OtherRev , MAR_TotRev , MKT_FB , MKT_OtherRev , MKT_TotRev , MAR_SampAvail , MAR_TotAvail , MKT_SampAvail , MKT_TotAvail , 108622 THEN delete AS IF STAR_I FROM ""\\Hdqmdm1fpcl4v1\lodg-STAR\Monthly_Reporting\&month.&STARYR.\proc\plus60mo.txt""  WHERE STAR_ID<>108622);",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_60Month_Load_Flat.sas
"CREATE TABLE MNTH60STR_Plus_DATA_RAW AS ( SELECT  *  , 'MONTH' AS TIMEF , YrMnth1 AS YrMnth  FROM MNTH60STR_Plus_DATA_RAW );",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_60Month_Load_Flat.sas
"ALTER TABLE MNTH60STR_Plus_DATA_RAW DROP COLUMN YrMnth1 ,  MAR_SampAvail ,  MAR_TotAvail ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_60Month_Load_Flat.sas
"SELECT DISTINCT * FROM MNTH60STR_Plus_DATA_RAW ORDER BY STAR_ID ,YrMnth ,TimeF;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_60Month_Load_Flat.sas
"CREATE TABLE propplus AS ( SELECT Hotel , STAR_ID , TIMEF , YrMnth , ASOF_YRMO , Mar_Avail , Mar_GR_Sold , Mar_CN_Sold , Mar_TN_Sold , Mar_GR_Rev , Mar_CN_Rev , Mar_TN_Rev , Mar_Avail_LY , Mar_GR_Sold_LY , Mar_CN_Sold_LY , Mar_TN_Sold_LY , Mar_GR_Rev_LY , Mar_CN_Rev_LY , Mar_TN_Rev_LY , MKT_Avail , MKT_GR_Sold , MKT_CN_Sold , MKT_TN_Sold , MKT_GR_Rev , MKT_CN_Rev , MKT_TN_Rev , MKT_Avail_LY , MKT_GR_Sold_LY , MKT_CN_Sold_LY , MKT_TN_Sold_LY , MKT_GR_Rev_LY , MKT_CN_Rev_LY , MKT_TN_Rev_LY , Mar_FB_Rev , Mar_Other_Rev , Mar_Total_Rev , Mar_FB_Rev_LY , Mar_Other_Rev_LY , Mar_Total_Rev_LY , MKT_FB_Rev , MKT_Other_Rev , MKT_Total_Rev , MKT_FB_Rev_LY , MKT_Other_Rev_LY , MKT_Total_Rev_LY , MAR_SampAva , MAR_TotAva , MAR_SampAva_LY , MAR_TotAva_LY , MKT_SampAva , MKT_TotAva , MKT_SampAva_LY , MKT_TotAva_ FROM ""\\Hdqmdm1fpcl4v1\lodg-STAR\Monthly_Reporting\&month.&STARYR.\proc\propplus.txt"" );",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_60Month_Load_Flat.sas
"ALTER TABLE propplus DROP COLUMN Hotel ,  Mar_FB_Rev ,  Mar_Other_Rev ,  Mar_Total_Rev ,  Mar_FB_Rev_LY ,  Mar_Other_Rev_LY ,  Mar_Total_Rev_LY ,  MKT_FB_Rev ,  MKT_Other_Rev ,  MKT_Total_Rev ,  MKT_FB_Rev_LY ,  MKT_Other_Rev_LY ,  MKT_Total_Rev_LY ,  MAR_SampAva ,  MAR_TotAva ,  MAR_SampAva_LY ,  MAR_TotAva_LY ,  MKT_SampAva ,  MKT_TotAva ,  MKT_SampAva_LY ,  MKT_TotAva_LY ,  Mar_Avail_LY ,  Mar_GR_Sold_LY ,  Mar_CN_Sold_LY ,  Mar_TN_Sold_LY ,  Mar_GR_Rev_LY ,  Mar_CN_Rev_LY ,  Mar_TN_Rev_LY ,  MKT_Avail_LY ,  MKT_GR_Sold_LY ,  MKT_CN_Sold_LY ,  MKT_TN_Sold_LY ,  MKT_GR_Rev_LY ,  MKT_CN_Rev_LY ,  MKT_TN_Rev_LY ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_60Month_Load_Flat.sas
"SELECT * FROM propplus ORDER BY STAR_ID ,YrMnth ,TimeF;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_60Month_Load_Flat.sas
 CREATE TABLE MNTH60STR_Plus AS ( SELECT  *  FROM propplus A JOIN MNTH60STR_Plus_DATA_RAW B ON  A.STAR_ID =  B.STAR_ID AND  A.YrMnth =  B.YrMnth AND  A.TimeF =  B.TimeF);,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_60Month_Load_Flat.sas
"CREATE TABLE Mon_Rank_data AS ( SELECT  *, TIMEF AS TIMEF1, YrMnth AS YrMnth1, STR AS STAR_ID, Occ_Num AS Rank_Occ_Num, Occ_Den AS Rank_Occ_Den, ADR_Num AS Rank_ADR_Num, ADR_Den AS Rank_ADR_Den, RevPAR_Num AS Rank_RevPAR_Num, RevPAR_Den AS Rank_RevPAR_Den, Occ_Chg_Num AS Rank_Occ_Chg_Num, Occ_Chg_Den AS Rank_Occ_Chg_Den, ADR_Chg_Num AS Rank_ADR_Chg_Num, ADR_Chg_Den AS Rank_ADR_Chg_Den, RevPAR_Chg_Num AS Rank_RevPAR_Chg_Num, RevPAR_Chg_Den AS Rank_RevPAR_Chg_Den, YrMnth1 AS YrMnth , CASE WHEN  TIMEF1='MON'  THEN 'MONTH' WHEN   TIMEF1='YTD'  THEN 'YTD' WHEN   TIMEF1='3MO'  THEN 'LAST3' WHEN   TIMEF1='TWE'  THEN 'LAST12' END AS TIMEF FROM Str_CC.MNTH30STR_Rank_DATA_FROM_RAW );",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_60Month_Load_Flat.sas
"ALTER TABLE Mon_Rank_data DROP COLUMN TIMEF1 ,  YrMnth1 ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_60Month_Load_Flat.sas
"SELECT DISTINCT * FROM Mon_Rank_data ORDER BY STAR_ID ,YrMnth ,TimeF;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_60Month_Load_Flat.sas
"CREATE TABLE work.starcomp AS ( SELECT  *, COMP AS SCOMP FROM Str_acc.Starview_Comp_CD );",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_60Month_Load_Flat.sas
ALTER TABLE work.starcomp DROP COLUMN STR_ID ;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_60Month_Load_Flat.sas
SELECT * FROM work.starcomp ORDER BY marsha;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_60Month_Load_Flat.sas
"CREATE TABLE work.X60_MONTH_CD AS ( SELECT  *, YrMnth AS Mnth, STRCODE AS STAR_ID, BRND AS brand, BRND AS brand, MSType AS MSType1, MARCAP AS MARAVAIL, MAROCC AS MARSOLD, MKTCAP AS MKTAVAIL, MKTOCC AS MKTSOLD , FORMAT(cur, VARCHAR(3)) AS cur , FORMAT('MONTH', VARCHAR(6)) AS TIMEF , FORMAT(Mnth, VARCHAR(6)) AS YrMnth , FORMAT(datasource, VARCHAR(4)) AS datasource , MSType1 AS MSType , &STARMNTH AS ASOF_YRMO  FROM Str_ACC.X60_MONTH_CD  WHERE marsha<>'' AND STAR_ID<>' ' AND marsha<>'');",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_60Month_Load_Flat.sas
ALTER TABLE work.X60_MONTH_CD DROP COLUMN MSType1 ;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_60Month_Load_Flat.sas
SELECT * FROM work.X60_MONTH_CD ORDER BY marsha;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_60Month_Load_Flat.sas
" CREATE TABLE work.X60_MONTH_CD AS ( SELECT  *  , FORMAT(marrev, FLOAT(13, 2))  AS marrev , FORMAT(mktrev, FLOAT(13, 2))  AS mktrev  FROM work.X60_MONTH_CD A LEFT JOIN work.starcomp B ON  A.Marsha =  B.Marsha WHERE STAR_ID<>0 AND ( MARAVAIL+MARSOLD+marrev+MKTAVAIL+MKTSOLD+mktrev)<>0);",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_60Month_Load_Flat.sas
"SELECT DISTINCT * FROM work.X60_MONTH_CD ORDER BY STAR_ID ,YrMnth ,TimeF;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_60Month_Load_Flat.sas
 CREATE TABLE xAW60MONTH_CD AS ( SELECT  *  FROM work.X60_MONTH_CD A JOIN MNTH60STR_Plus B ON  A.STAR_ID =  B.STAR_ID AND  A.YrMnth =  B.YrMnth AND  A.TimeF =  B.TimeF JOIN Mon_Rank_data C ON  B.STAR_ID =  C.STAR_ID AND  B.YrMnth =  C.YrMnth AND  B.TimeF =  C.TimeF);,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_60Month_Load_Flat.sas
"CREATE TABLE Str_CC.AW60MONTH_CD_&STARMNTH AS ( SELECT  *  , FORMAT(MARSHA, &STARMNTH) AS MARSHA , FORMAT(STAR_ID, &STARMNTH) AS STAR_ID , FORMAT(brand, &STARMNTH) AS brand , FORMAT(cur, &STARMNTH) AS cur , FORMAT(YrMnth, &STARMNTH) AS YrMnth , FORMAT(TIMEF, &STARMNTH) AS TIMEF , FORMAT(SCOMP, &STARMNTH) AS SCOMP , FORMAT(datasource, &STARMNTH) AS datasource , FORMAT(MSType, &STARMNTH) AS MSType , FORMAT(MARAVAIL, &STARMNTH) AS MARAVAIL , FORMAT(MARSOLD, &STARMNTH) AS MARSOLD , FORMAT(MARREV, &STARMNTH) AS MARREV , FORMAT(MKTAVAIL, &STARMNTH) AS MKTAVAIL , FORMAT(MKTSOLD, &STARMNTH) AS MKTSOLD , FORMAT(MKTREV, &STARMNTH) AS MKTREV , FORMAT(MARREV_lcl, &STARMNTH) AS MARREV_lcl , FORMAT(MKTREV_lcl, &STARMNTH) AS MKTREV_lcl , FORMAT(COMPSETHOTELS, &STARMNTH) AS COMPSETHOTELS , FORMAT(COMPSETROOMS, &STARMNTH) AS COMPSETROOMS , FORMAT(REPORTINGHOTELS, &STARMNTH) AS REPORTINGHOTELS , FORMAT(REPORTINGROOMS, &STARMNTH) AS REPORTINGROOMS , FORMAT(MAR_Avail, &STARMNTH) AS MAR_Avail , FORMAT(MAR_GR_Sold, &STARMNTH) AS MAR_GR_Sold , FORMAT(MAR_CN_Sold, &STARMNTH) AS MAR_CN_Sold , FORMAT(MAR_TN_Sold, &STARMNTH) AS MAR_TN_Sold , FORMAT(MAR_GR_Rev, &STARMNTH) AS MAR_GR_Rev , FORMAT(MAR_CN_Rev, &STARMNTH) AS MAR_CN_Rev , FORMAT(MAR_TN_Rev, &STARMNTH) AS MAR_TN_Rev , FORMAT(MKT_Avail, &STARMNTH) AS MKT_Avail , FORMAT(MKT_GR_Sold, &STARMNTH) AS MKT_GR_Sold , FORMAT(MKT_CN_Sold, &STARMNTH) AS MKT_CN_Sold , FORMAT(MKT_TN_Sold, &STARMNTH) AS MKT_TN_Sold , FORMAT(MKT_GR_Rev, &STARMNTH) AS MKT_GR_Rev , FORMAT(MKT_CN_Rev, &STARMNTH) AS MKT_CN_Rev , FORMAT(MKT_TN_Rev, &STARMNTH) AS MKT_TN_Rev , FORMAT(MAR_FB, &STARMNTH) AS MAR_FB , FORMAT(MAR_OtherRev, &STARMNTH) AS MAR_OtherRev , FORMAT(MAR_TotRev, &STARMNTH) AS MAR_TotRev , FORMAT(MKT_FB, &STARMNTH) AS MKT_FB , FORMAT(MKT_OtherRev, &STARMNTH) AS MKT_OtherRev , FORMAT(MKT_TotRev, &STARMNTH) AS MKT_TotRev , FORMAT(MKT_SampAvail, &STARMNTH) AS MKT_SampAvail , FORMAT(MKT_TotAvail, &STARMNTH) AS MKT_TotAvail , FORMAT(Rank_Occ_Num, &STARMNTH) AS Rank_Occ_Num , FORMAT(Rank_Occ_Den, &STARMNTH) AS Rank_Occ_Den , FORMAT(Rank_ADR_Num, &STARMNTH) AS Rank_ADR_Num , FORMAT(Rank_ADR_Den, &STARMNTH) AS Rank_ADR_Den , FORMAT(Rank_RevPAR_Num, &STARMNTH) AS Rank_RevPAR_Num , FORMAT(Rank_RevPAR_Den, &STARMNTH) AS Rank_RevPAR_Den , FORMAT(Rank_Occ_Chg_Num, &STARMNTH) AS Rank_Occ_Chg_Num , FORMAT(Rank_Occ_Chg_Den, &STARMNTH) AS Rank_Occ_Chg_Den , FORMAT(Rank_ADR_Chg_Num, &STARMNTH) AS Rank_ADR_Chg_Num , FORMAT(Rank_ADR_Chg_Den, &STARMNTH) AS Rank_ADR_Chg_Den , FORMAT(Rank_RevPAR_Chg_Num, &STARMNTH) AS Rank_RevPAR_Chg_Num , FORMAT(Rank_RevPAR_Chg_Den, &STARMNTH) AS Rank_RevPAR_Chg_Den , FORMAT(currency_exch_rte, &STARMNTH) AS currency_exch_rte  FROM xAW60MONTH_CD );",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_60Month_Load_Flat.sas
ALTER TABLE Str_CC.AW60MONTH_CD_&STARMNTH DROP COLUMN Mnth ;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_60Month_Load_Flat.sas
" CREATE TABLE AW_TGT_BUS_DBO.STR_60MONTH_STG (  MARSHA VARCHAR( 5), STAR_ID INTEGER, brand VARCHAR( 2), cur VARCHAR( 3), YrMnth VARCHAR( 6), TIMEF VARCHAR( 6), SCOMP VARCHAR( 1), datasource VARCHAR( 4), MSType VARCHAR( 2), MARAVAIL INTEGER, MARSOLD INTEGER, MARREV DOUBLE, MKTAVAIL INTEGER, MKTSOLD INTEGER, MKTREV DOUBLE, MARREV_lcl DOUBLE, MKTREV_lcl DOUBLE, COMPSETHOTELS INTEGER, COMPSETROOMS INTEGER, REPORTINGHOTELS INTEGER, REPORTINGROOMS INTEGER, MAR_Avail INTEGER, MAR_GR_Sold INTEGER, MAR_CN_Sold INTEGER, MAR_TN_Sold INTEGER, MAR_GR_Rev DOUBLE, MAR_CN_Rev DOUBLE, MAR_TN_Rev DOUBLE, MKT_Avail INTEGER, MKT_GR_Sold INTEGER, MKT_CN_Sold INTEGER, MKT_TN_Sold INTEGER, MKT_GR_Rev DOUBLE, MKT_CN_Rev DOUBLE, MKT_TN_Rev DOUBLE, MAR_FB INTEGER, MAR_OtherRev DOUBLE, MAR_TotRev DOUBLE, MKT_FB INTEGER, MKT_OtherRev DOUBLE, MKT_TotRev DOUBLE, MKT_SampAvail INTEGER, MKT_TotAvail INTEGER, Rank_Occ_Num INTEGER, Rank_Occ_Den SMALLINT, Rank_ADR_Num SMALLINT, Rank_ADR_Den SMALLINT, Rank_RevPAR_Num SMALLINT, Rank_RevPAR_Den SMALLINT, Rank_Occ_Chg_Num SMALLINT, Rank_Occ_Chg_Den SMALLINT, Rank_ADR_Chg_Num SMALLINT, Rank_ADR_Chg_Den SMALLINT, Rank_RevPAR_Chg_Num SMALLINT, Rank_RevPAR_Chg_Den SMALLINT, currency_exch_rte DOUBLE, ASOF_YRMO INTEGER ) ) by odbc ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_60Month_Load_Flat.sas
INSERT INTO TABLE AWPROD.STR_60MONTH_STG SELECT * FROM Str_CC.AW60MONTH_CD_&STARMNTH;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_60Month_Load_Flat.sas
   INSERT INTO AW_TGT_BUS_DBO.STR_60MONTH Select * FROM AW_TGT_BUS_DBO.STR_60MONTH_STG ) by odbc ;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_60Month_Load_Flat.sas
   DROP TABLE AW_TGT_BUS_DBO.STR_60MONTH_STG ) by odbc ;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_60Month_Load_Flat.sas
" CREATE TABLE AW_TGT_BUS_DBO.STR_STARVIEW_COMP_STG (  MARSHA  VARCHAR( 5), STAR_ID BIGINT, SCOMP VARCHAR( 1), ASOF_YRMO INTEGER ) ) by odbc ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_Comp_Load.sas
"CREATE TABLE work.starcomp AS ( SELECT  *, COMP AS SCOMP, &STARMNTH AS ASOF_YRMO , STR_ID AS STAR_ID  FROM Str_acc.Starview_Comp_CD );",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_Comp_Load.sas
ALTER TABLE work.starcomp DROP COLUMN STR_ID ;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_Comp_Load.sas
INSERT INTO TABLE AWPROD.STR_STARVIEW_COMP_STG SELECT * FROM work.starcomp;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_Comp_Load.sas
   INSERT INTO AW_TGT_BUS_DBO.STR_STARVIEW_COMP Select * FROM AW_TGT_BUS_DBO.STR_STARVIEW_COMP_STG ) by odbc ;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_Comp_Load.sas
   DROP TABLE AW_TGT_BUS_DBO.STR_STARVIEW_COMP_STG ) by odbc ;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_AW_load_Star_Comp_Load.sas
"CREATE TABLE sfo AS (SELECT MARSHA, SFO_AREA, SFO_MARKET, SFO_ORG FROM PROP_Original ORDER BY MARSHA);",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC36_Batch_Monthly_ReportsV9.sas
"CREATE TABLE sfo AS ( SELECT  *  , SFO_ORG AS SFOGROUP , "" "" AS SFO_LEADER  FROM sfo );",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC36_Batch_Monthly_ReportsV9.sas
ALTER TABLE sfo DROP COLUMN SFO_ORG ;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC36_Batch_Monthly_ReportsV9.sas
"CREATE TABLE NALO AS ( SELECT MANAGER_CODE , BRAND: , MANAGER: , OWNER: , MARSHA: , TYPE: , PRIMAR FROM ""\\Hdqmdm1fpcl3v2\lodg-smps\Reporting Analysis\Sales Comp Analysis\Competitive Analysis\Monthly Reporting\NALO export\Open Property.txt"" MISSOVER );",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC36_Batch_Monthly_ReportsV9.sas
 CREATE TABLE comp AS ( SELECT  *  FROM proc.starview_comp_cd );,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC36_Batch_Monthly_ReportsV9.sas
 CREATE TABLE redomn AS ( SELECT  *  FROM proc.renovate_mnth_list );,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC36_Batch_Monthly_ReportsV9.sas
 CREATE TABLE redoytd AS ( SELECT  *  FROM proc.renovate_ytd_list );,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC36_Batch_Monthly_ReportsV9.sas
 CREATE TABLE data AS ( SELECT  *  FROM proc.x30month_cd );,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC36_Batch_Monthly_ReportsV9.sas
 CREATE TABLE datapw AS ( SELECT  *  FROM proc.X60_month_cd );,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC36_Batch_Monthly_ReportsV9.sas
" CREATE TABLE MS2 AS ( SELECT  *  , BRND AS BRAND  FROM PROP_Original );",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC36_Batch_Monthly_ReportsV9.sas
" CREATE TABLE JW AS SELECT m.MARSHA, d.MNTH, d.TIMEF, m.BRND, m.MF, d.MARCAP, d.MAROCC, d.MARREV, d.MARCAPLY, d.MAROCCLY, d.MARREVLY, d.MKTCAP, d.MKTOCC, d.MKTREV, d.MKTCAPLY, d.MKTOCCLY, d.MKTREVLY, ( ( ( d.MAROCC/D.MARCAP)/( D.MAROCCLY/D.MARCAPLY)) - 1)*100 AS OCC_CHG, ( ( ( D.MARREV/D.MAROCC)/( D.MARREVLY/D.MAROCCLY))- 1)*100 AS ADR_CHG, ( ( ( D.MARREV/D.MARCAP)/( D.MARREVLY/D.MARCAPLY))- 1) * 100 AS REVPAR_CHG, m.COUNTRY FROM DATA D INNER JOIN COMP C ON d.STRCODE = C.STR_ID INNER JOIN MS2 m ON C.MARSHA = m.MARSHA WHERE d.MNTH=""&STARMNTH"" AND d.TIMEF IN( ""MONTH"", ""YTD"") AND m.BRND IN( ""FS"", ""CC"",""JW"") AND UPPER( m.COUNTRY) IN( ""UNITED STATES"", ""CANADA"") AND C.COMP=""Y"" AND m.STATE<>""HI"";",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC36_Batch_Monthly_ReportsV9.sas
CREATE TABLE jwmonth AS ( SELECT  *  FROM JW  WHERE TIMEF = 'MONTH');,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC36_Batch_Monthly_ReportsV9.sas
CREATE TABLE jwytd AS ( SELECT  *  FROM JW  WHERE TIMEF <> 'MONTH');,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC36_Batch_Monthly_ReportsV9.sas
" CREATE TABLE RI AS SELECT m.MARSHA, m.BRND, d.TIMEF, d.MNTH, d.MARCAP, d.MAROCC, d.MARREV, d.MARCAPLY, d.MAROCCLY, d.MARREVLY, d.MKTCAP, d.MKTOCC, d.MKTREV, d.MKTCAPLY, d.MKTOCCLY, d.MKTREVLY, ( ( ( d.MAROCC/D.MARCAP)/( D.MAROCCLY/D.MARCAPLY)) - 1)*100 AS OCC_CHG, ( ( ( D.MARREV/D.MAROCC)/( D.MARREVLY/D.MAROCCLY))- 1)*100 AS ADR_CHG, ( ( ( D.MARREV/D.MARCAP)/( D.MARREVLY/D.MARCAPLY))- 1) * 100 AS REVPAR_CHG FROM DATA D INNER JOIN COMP C ON d.STRCODE = C.STR_ID INNER JOIN MS2 m ON C.MARSHA = m.MARSHA WHERE d.MNTH=""&STARMNTH"" AND d.TIMEF IN( ""MONTH"", ""YTD"") AND m.BRND = ""RI"" AND m.region IN( ""E_"", ""S_"", ""W_"",""C_"") AND C.COMP=""Y"";",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC36_Batch_Monthly_ReportsV9.sas
" CREATE TABLE MGMT AS SELECT L.MANAGER, L.MANAGER_CODE, m.brnd, COUNT( L.MANAGER_CODE) AS CountOfManager_Code, D.TIMEF, D.MNTH, SUM( d.MARCAP) AS MARCAP, SUM( d.MAROCC) AS MAROCC, SUM( d.MARREV) AS MARREV, SUM( d.MARCAPLY) AS MARCAPLY, SUM( d.MAROCCLY) AS MAROCCLY, SUM( d.MARREVLY) AS MARREVLY, SUM( d.MKTCAP) AS MKTCAP, SUM( d.MKTOCC) AS MKTOCC, SUM( d.MKTREV) AS MKTREV, SUM( d.MKTCAPLY) AS MKTCAPLY, SUM( d.MKTOCCLY) AS MKTOCCLY, SUM( d.MKTREVLY) AS MKTREVLY, ( calculated marocc/ calculated mktocc) * 100 AS Marr_OI_TY, ( calculated maroccly/ calculated mktoccly) * 100 AS Marr_OI_LY, ( calculated Marr_OI_TY/ calculated Marr_OI_LY)- 1 AS OI_Chg, ( ( calculated marrev/calculated marocc)/( calculated mktrev/calculated mktocc)) * 100 AS AI_TY, ( ( calculated marrevly/calculated maroccly)/( calculated mktrevly/calculated mktoccly)) * 100 AS AI_LY, ( calculated AI_TY/ calculated AI_LY)-1 AS AI_CHG, ( calculated MARREV/calculated MKTREV) * 100 AS Marr_RI_TY, ( calculated MARREVLY/ calculated MKTREVLY) * 100 AS Marr_RI_LY, ( CALCULATED Marr_RI_TY/ CALCULATED Marr_RI_LY)-1 AS RI_Chg, ( calculated marocc/ calculated marcap) AS Marr_occ_ty, ( calculated marrev/calculated marocc) AS Marr_ADR_TY, ( calculated marrev/ calculated marcap) AS Marr_RevPAR_TY FROM DATA AS D INNER JOIN MS2 AS M ON D.STRCODE = M.STR_ID INNER JOIN Comp AS C ON M.MARSHA = C.MARSHA INNER JOIN NALO AS L ON C.MARSHA = L.MARSHA WHERE M.REGION IN( ""E_"", ""S_"", ""W_"",""C_"") AND C.COMP =""Y"" AND D.TIMEF IN( ""LAST12"", ""YTD"", ""MONTH"", ""LAST3"") AND D.MNTH = ""&STARMNTH"" AND D.MARCAP <> 0 AND D.MAROCC <> 0 AND D.MARREV <> 0 AND D.MARCAPLY <> 0 AND D.MAROCCLY <> 0 AND D.MARREVLY <> 0 AND D.MKTCAP <>0 AND D.MKTOCC <> 0 AND D.MKTREV <> 0 AND D.MKTCAPLY <> 0 AND D.MKTOCCLY <> 0 AND D.MKTREVLY <> 0 AND L.MANAGER_CODE Is Not missing GROUP BY L.MANAGER, M.BRND, D.TIMEF, D.MNTH, L.MANAGER_CODE;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC36_Batch_Monthly_ReportsV9.sas
" CREATE TABLE MGMTA AS SELECT L.MANAGER, L.MANAGER_CODE , COUNT( L.MANAGER_CODE) AS CountOfManager_Code, D.TIMEF, D.MNTH, SUM( d.MARCAP) AS MARCAP, SUM( d.MAROCC) AS MAROCC, SUM( d.MARREV) AS MARREV, SUM( d.MARCAPLY) AS MARCAPLY, SUM( d.MAROCCLY) AS MAROCCLY, SUM( d.MARREVLY) AS MARREVLY, SUM( d.MKTCAP) AS MKTCAP, SUM( d.MKTOCC) AS MKTOCC, SUM( d.MKTREV) AS MKTREV, SUM( d.MKTCAPLY) AS MKTCAPLY, SUM( d.MKTOCCLY) AS MKTOCCLY, SUM( d.MKTREVLY) AS MKTREVLY, ( calculated marocc/ calculated mktocc) * 100 AS Marr_OI_TY, ( calculated maroccly/ calculated mktoccly) * 100 AS Marr_OI_LY, ( calculated Marr_OI_TY/ calculated Marr_OI_LY)- 1 AS OI_Chg, ( ( calculated marrev/calculated marocc)/( calculated mktrev/calculated mktocc)) * 100 AS AI_TY, ( ( calculated marrevly/calculated maroccly)/( calculated mktrevly/calculated mktoccly)) * 100 AS AI_LY, ( calculated AI_TY/ calculated AI_LY)-1 AS AI_CHG, ( calculated MARREV/calculated MKTREV) * 100 AS Marr_RI_TY, ( calculated MARREVLY/ calculated MKTREVLY) * 100 AS Marr_RI_LY, ( CALCULATED Marr_RI_TY/ CALCULATED Marr_RI_LY)-1 AS RI_Chg, ( calculated marocc/ calculated marcap) AS Marr_occ_ty, ( calculated marrev/calculated marocc) AS Marr_ADR_TY, ( calculated marrev/ calculated marcap) AS Marr_RevPAR_TY FROM DATA AS D INNER JOIN MS2 AS M ON D.STRCODE = M.STR_ID INNER JOIN Comp AS C ON M.MARSHA = C.MARSHA INNER JOIN NALO AS L ON C.MARSHA = L.MARSHA WHERE M.REGION IN( ""E_"", ""S_"", ""W_"",""C_"") AND C.COMP =""Y"" AND D.TIMEF IN( ""LAST12"", ""YTD"", ""MONTH"", ""LAST3"") AND D.MNTH = ""&STARMNTH"" AND D.MARCAP <> 0 AND D.MAROCC <> 0 AND D.MARREV <> 0 AND D.MARCAPLY <> 0 AND D.MAROCCLY <> 0 AND D.MARREVLY <> 0 AND D.MKTCAP <>0 AND D.MKTOCC <> 0 AND D.MKTREV <> 0 AND D.MKTCAPLY <> 0 AND D.MKTOCCLY <> 0 AND D.MKTREVLY <> 0 AND L.MANAGER_CODE Is Not missing GROUP BY L.MANAGER, D.TIMEF, D.MNTH, L.MANAGER_CODE;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC36_Batch_Monthly_ReportsV9.sas
" CREATE TABLE MGMT2 AS ( SELECT MANAGER, MANAGER_CODE, CountOfManager_Code, MNTH, TIMEF, Marr_OI_TY, OIChg, AI_TY, Marr_RI_TY, Marr_occ_ty, Marr_ADR_TY, Marr_RevPAR_TY , FORMAT(Brnd, VARCHAR(8)) AS Brnd , OI_Chg*100 AS OICHG , AI_CHG *100 AS AICHG , RI_Chg*100 AS RIChg  FROM MGMT) ORDER BY MANAGER BRND TIMEF MNTH MANAGER_CODE ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC36_Batch_Monthly_ReportsV9.sas
" CREATE TABLE MGMTA2 AS ( SELECT MANAGER, MANAGER_CODE, Brnd, CountOfManager_Code, MNTH, TIMEF, Marr_OI_TY, OIChg, AI_TY, Marr_RI_TY, Marr_occ_ty, Marr_ADR_TY, Marr_RevPAR_TY , 'All' AS BRND , 1 AS countofmanager_code , OI_Chg*100 AS OICHG , AI_CHG *100 AS AICHG , RI_Chg*100 AS RIChg  FROM MGMTA) ORDER BY MANAGER TIMEF MNTH MANAGER_CODE ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC36_Batch_Monthly_ReportsV9.sas
 CREATE TABLE MGMT_Final AS select * FROM mgmt2 UNION select * FROM mgmta2;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC36_Batch_Monthly_ReportsV9.sas
" CREATE TABLE OWN AS SELECT L.OWNER, L.OWNER_CODE, m.brnd, COUNT( L.OWNER_CODE) AS CountOfOWNER_Code, D.TIMEF, D.MNTH, SUM( d.MARCAP) AS MARCAP, SUM( d.MAROCC) AS MAROCC, SUM( d.MARREV) AS MARREV, SUM( d.MARCAPLY) AS MARCAPLY, SUM( d.MAROCCLY) AS MAROCCLY, SUM( d.MARREVLY) AS MARREVLY, SUM( d.MKTCAP) AS MKTCAP, SUM( d.MKTOCC) AS MKTOCC, SUM( d.MKTREV) AS MKTREV, SUM( d.MKTCAPLY) AS MKTCAPLY, SUM( d.MKTOCCLY) AS MKTOCCLY, SUM( d.MKTREVLY) AS MKTREVLY, ( calculated marocc/ calculated mktocc) * 100 AS Marr_OI_TY, ( calculated maroccly/ calculated mktoccly) * 100 AS Marr_OI_LY, ( calculated Marr_OI_TY/ calculated Marr_OI_LY)- 1 AS OI_Chg, ( ( calculated marrev/calculated marocc)/( calculated mktrev/calculated mktocc)) * 100 AS AI_TY, ( ( calculated marrevly/calculated maroccly)/( calculated mktrevly/calculated mktoccly)) * 100 AS AI_LY, ( calculated AI_TY/ calculated AI_LY)-1 AS AI_CHG, ( calculated MARREV/calculated MKTREV) * 100 AS Marr_RI_TY, ( calculated MARREVLY/ calculated MKTREVLY) * 100 AS Marr_RI_LY, ( CALCULATED Marr_RI_TY/ CALCULATED Marr_RI_LY)-1 AS RI_Chg, ( calculated marocc/ calculated marcap) AS Marr_occ_ty, ( calculated marrev/calculated marocc) AS Marr_ADR_TY, ( calculated marrev/ calculated marcap) AS Marr_RevPAR_TY FROM DATA AS D INNER JOIN MS2 AS M ON D.STRCODE = M.STR_ID INNER JOIN Comp AS C ON M.MARSHA = C.MARSHA INNER JOIN NALO AS L ON C.MARSHA = L.MARSHA WHERE M.REGION IN( ""E_"", ""S_"", ""W_"",""C_"") AND C.COMP =""Y"" AND D.TIMEF IN( ""LAST12"", ""YTD"", ""MONTH"", ""LAST3"") AND D.MNTH = ""&STARMNTH"" AND D.MARCAP <> 0 AND D.MAROCC <> 0 AND D.MARREV <> 0 AND D.MARCAPLY <> 0 AND D.MAROCCLY <> 0 AND D.MARREVLY <> 0 AND D.MKTCAP <>0 AND D.MKTOCC <> 0 AND D.MKTREV <> 0 AND D.MKTCAPLY <> 0 AND D.MKTOCCLY <> 0 AND D.MKTREVLY <> 0 AND L.OWNER_CODE Is Not missing GROUP BY L.OWNER, M.BRND, D.TIMEF, D.MNTH, L.OWNER_CODE;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC36_Batch_Monthly_ReportsV9.sas
" CREATE TABLE OWNA AS SELECT L.OWNER, L.OWNER_CODE , COUNT( L.OWNER_CODE) AS CountOfOWNER_Code, D.TIMEF, D.MNTH, SUM( d.MARCAP) AS MARCAP, SUM( d.MAROCC) AS MAROCC, SUM( d.MARREV) AS MARREV, SUM( d.MARCAPLY) AS MARCAPLY, SUM( d.MAROCCLY) AS MAROCCLY, SUM( d.MARREVLY) AS MARREVLY, SUM( d.MKTCAP) AS MKTCAP, SUM( d.MKTOCC) AS MKTOCC, SUM( d.MKTREV) AS MKTREV, SUM( d.MKTCAPLY) AS MKTCAPLY, SUM( d.MKTOCCLY) AS MKTOCCLY, SUM( d.MKTREVLY) AS MKTREVLY, ( calculated marocc/ calculated mktocc) * 100 AS Marr_OI_TY, ( calculated maroccly/ calculated mktoccly) * 100 AS Marr_OI_LY, ( calculated Marr_OI_TY/ calculated Marr_OI_LY)- 1 AS OI_Chg, ( ( calculated marrev/calculated marocc)/( calculated mktrev/calculated mktocc)) * 100 AS AI_TY, ( ( calculated marrevly/calculated maroccly)/( calculated mktrevly/calculated mktoccly)) * 100 AS AI_LY, ( calculated AI_TY/ calculated AI_LY)-1 AS AI_CHG, ( calculated MARREV/calculated MKTREV) * 100 AS Marr_RI_TY, ( calculated MARREVLY/ calculated MKTREVLY) * 100 AS Marr_RI_LY, ( CALCULATED Marr_RI_TY/ CALCULATED Marr_RI_LY)-1 AS RI_Chg, ( calculated marocc/ calculated marcap) AS Marr_occ_ty, ( calculated marrev/calculated marocc) AS Marr_ADR_TY, ( calculated marrev/ calculated marcap) AS Marr_RevPAR_TY FROM DATA AS D INNER JOIN MS2 AS M ON D.STRCODE = M.STR_ID INNER JOIN Comp AS C ON M.MARSHA = C.MARSHA INNER JOIN NALO AS L ON C.MARSHA = L.MARSHA WHERE M.REGION IN( ""E_"", ""S_"", ""W_"",""C_"") AND C.COMP =""Y"" AND D.TIMEF IN( ""LAST12"", ""YTD"", ""MONTH"", ""LAST3"") AND D.MNTH = ""&STARMNTH"" AND D.MARCAP <> 0 AND D.MAROCC <> 0 AND D.MARREV <> 0 AND D.MARCAPLY <> 0 AND D.MAROCCLY <> 0 AND D.MARREVLY <> 0 AND D.MKTCAP <>0 AND D.MKTOCC <> 0 AND D.MKTREV <> 0 AND D.MKTCAPLY <> 0 AND D.MKTOCCLY <> 0 AND D.MKTREVLY <> 0 AND L.OWNER_CODE Is Not missing GROUP BY L.OWNER, D.TIMEF, D.MNTH, L.OWNER_CODE;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC36_Batch_Monthly_ReportsV9.sas
" CREATE TABLE OWN2 AS ( SELECT OWNER, OWNER_CODE, Brnd, CountOfOWNER_Code, MNTH, TIMEF, Marr_OI_TY, OIChg, AI_TY, Marr_RI_TY, Marr_occ_ty, Marr_ADR_TY, Marr_RevPAR_TY , OI_Chg*100 AS OICHG , AI_CHG *100 AS AICHG , RI_Chg*100 AS RIChg  FROM OWN) ORDER BY OWNER BRND TIMEF MNTH OWNER_CODE ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC36_Batch_Monthly_ReportsV9.sas
" CREATE TABLE OWNA2 AS ( SELECT OWNER, OWNER_CODE, Brnd, CountOfOWNER_Code, MNTH, TIMEF, Marr_OI_TY, OIChg, AI_TY, Marr_RI_TY, Marr_occ_ty, Marr_ADR_TY, Marr_RevPAR_TY , 'All' AS BRND , 1 AS countofowner_code , OI_Chg*100 AS OICHG , AI_CHG *100 AS AICHG , RI_Chg*100 AS RIChg  FROM OWNA) ORDER BY OWNER TIMEF MNTH OWNER_CODE ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC36_Batch_Monthly_ReportsV9.sas
 CREATE TABLE Owner_Final AS select * FROM OWNA2 UNION select * FROM mgmt2;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC36_Batch_Monthly_ReportsV9.sas
" CREATE TABLE star AS SELECT m.brnd, COUNT( m.brnd) AS CountOfBrand, D.TIMEF, D.MNTH, SUM( d.MARCAP) AS MARCAP, SUM( d.MAROCC) AS MAROCC, SUM( d.MARREV) AS MARREV, SUM( d.MARCAPLY) AS MARCAPLY, SUM( d.MAROCCLY) AS MAROCCLY, SUM( d.MARREVLY) AS MARREVLY, SUM( d.MKTCAP) AS MKTCAP, SUM( d.MKTOCC) AS MKTOCC, SUM( d.MKTREV) AS MKTREV, SUM( d.MKTCAPLY) AS MKTCAPLY, SUM( d.MKTOCCLY) AS MKTOCCLY, SUM( d.MKTREVLY) AS MKTREVLY, ( calculated marocc/ calculated mktocc) * 100 AS Marr_OI_TY, ( calculated maroccly/ calculated mktoccly) * 100 AS Marr_OI_LY, ( calculated Marr_OI_TY/ calculated Marr_OI_LY)- 1 AS OI_Chg, ( ( calculated marrev/calculated marocc)/( calculated mktrev/calculated mktocc)) * 100 AS Marr_AI_TY, ( ( calculated marrevly/calculated maroccly)/( calculated mktrevly/calculated mktoccly)) * 100 AS AI_LY, ( calculated Marr_AI_TY/ calculated AI_LY)- 1 AS AI_CHG, ( calculated MARREV/calculated MKTREV) * 100 AS Marr_RI_TY, ( calculated MARREVLY/ calculated MKTREVLY) * 100 AS Marr_RI_LY, ( CALCULATED Marr_RI_TY/ CALCULATED Marr_RI_LY)- 1 AS RI_Chg, ( calculated marocc/ calculated marcap) AS Marr_occ_ty, ( calculated marrev/calculated marocc) AS Marr_ADR_TY, ( calculated marrev/ calculated marcap) AS Marr_RevPAR_TY FROM DATA AS D INNER JOIN MS2 AS M ON D.STRCODE = M.STR_ID INNER JOIN Comp AS C ON M.MARSHA = C.MARSHA WHERE M.REGION IN( ""E_"", ""S_"", ""W_"",""C_"") AND C.COMP =""Y"" AND D.TIMEF IN( ""LAST12"", ""YTD"", ""MONTH"", ""LAST3"") AND D.MNTH = ""&STARMNTH"" GROUP BY m.brnd, D.TIMEF, D.MNTH;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC36_Batch_Monthly_ReportsV9.sas
" CREATE TABLE star2 AS ( SELECT Brnd, CountOfBrand, TIMEF, MNTH, Marr_OI_TY, Marr_AI_TY, Marr_RI_TY, Marr_occ_ty, Marr_ADR_TY, Marr_RevPAR_TY , OI_Chg*100 AS OICHG , AI_CHG *100 AS AICHG , RI_Chg*100 AS RIChg  FROM star );",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC36_Batch_Monthly_ReportsV9.sas
" CREATE TABLE starview AS SELECT m.MARSHA, m.BRND, m.REGION, m.MF FROM comp c INNER JOIN ms2 m ON c.STR_ID = m.STR_ID WHERE c.COMP=""Y"";",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC36_Batch_Monthly_ReportsV9.sas
"CREATE TABLE ""&O_and_F.\Starview Final Report.xls"" AS ( SELECT * FROM WORK.star2) ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC36_Batch_Monthly_ReportsV9.sas
"CREATE TABLE ""&O_and_F.\Owner Final Report.xls"" AS ( SELECT * FROM WORK.owner_final) ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC36_Batch_Monthly_ReportsV9.sas
"CREATE TABLE ""&O_and_F.\Mngt Final Report.xls"" AS ( SELECT * FROM WORK.mgmt_final) ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC36_Batch_Monthly_ReportsV9.sas
"CREATE TABLE ""&O_and_F.\Starviewcomp_Extract.xls"" AS ( SELECT * FROM WORK.starview) ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC36_Batch_Monthly_ReportsV9.sas
"CREATE TABLE ""&O_and_F.\JW Query for Scorecard Month.xls"" AS ( SELECT * FROM WORK.JWMONTH) ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC36_Batch_Monthly_ReportsV9.sas
"CREATE TABLE ""&O_and_F.\JW Query for Scorecard YTD.xls"" AS ( SELECT * FROM WORK.JWYTD) ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC36_Batch_Monthly_ReportsV9.sas
"CREATE TABLE ""&O_and_F.\Residence Inn Query for Scorecard Month.xls"" AS ( SELECT * FROM WORK.RI) ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC36_Batch_Monthly_ReportsV9.sas
"CREATE TABLE ""\\hdqmdm1fpcl4v1\LODG-STAR\Star Files\Starview_Final_Report.csv"" AS ( SELECT * FROM WORK.star2) ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC36_Batch_Monthly_ReportsV9.sas
"CREATE TABLE ""\\hdqmdm1fpcl4v1\LODG-STAR\Star Files\Owner_Final_Report.csv"" AS ( SELECT * FROM WORK.owner_final) ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC36_Batch_Monthly_ReportsV9.sas
"CREATE TABLE ""\\hdqmdm1fpcl4v1\LODG-STAR\Star Files\Mngt_Final_Report.csv"" AS ( SELECT * FROM WORK.mgmt_final) ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC36_Batch_Monthly_ReportsV9.sas
"CREATE TABLE ""\\hdqmdm1fpcl4v1\LODG-STAR\Star Files\Starviewcomp_Extract.csv"" AS ( SELECT * FROM WORK.starview) ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC36_Batch_Monthly_ReportsV9.sas
"CREATE TABLE ""\\hdqmdm1fpcl4v1\LODG-STAR\Star Files\JW_Query_for_Scorecard_Month.csv"" AS ( SELECT * FROM WORK.JWMONTH) ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC36_Batch_Monthly_ReportsV9.sas
"CREATE TABLE ""\\hdqmdm1fpcl4v1\LODG-STAR\Star Files\JW_Query_for_Scorecard_YTD.csv"" AS ( SELECT * FROM WORK.JWYTD) ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC36_Batch_Monthly_ReportsV9.sas
"CREATE TABLE ""\\hdqmdm1fpcl4v1\LODG-STAR\Star Files\Residence_Inn_Query_for_Scorecard_Month.csv"" AS ( SELECT * FROM WORK.RI) ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC36_Batch_Monthly_ReportsV9.sas
"CREATE TABLE MONIND AS ( SELECT IndSegID , PrimarySeg , SecondarySeg , Description , Date , Supply , Demand , Reven FROM ""\\Hdqmdm1fpcl4v1\lodg-STAR\Monthly_Reporting\&month.&STARYR.\proc\monind_&STARMNTH..txt"" );",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC52_industry_v5.sas
"CREATE TABLE IND_A AS ( SELECT  *  , 'STR' AS DATASOURCE , &STARMNTH. AS Asof_yrmo , DATE AS YRMNTH , Supply AS MARCAP , Demand AS MAROCC , Revenue AS MARREV , CASE WHEN  Description = 'United States'  THEN 'US Industry - All Chain Scales' WHEN   Description = 'United States Extended Stay - Lower' OR Description = 'United States Extended Stay - Upper'  THEN 'US Industry - Extended Stay' ELSE 'US Industry - Chain Scales' END AS Identifier FROM MONIND );",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC52_industry_v5.sas
"ALTER TABLE IND_A DROP COLUMN DATE ,  Supply ,  Demand ,  Revenue ,  IndSegID ,  PrimarySeg ,  SecondarySeg ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC52_industry_v5.sas
" CREATE TABLE IND_B AS ( SELECT  *  , TRIMCONCAT( YRMNTH,""01"" ) AS date  FROM IND_A );",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC52_industry_v5.sas
" CREATE TABLE IND_C AS ( SELECT  *  , FORMAT(CAST( RTRIM( date), yymmdd8.  ), yymmddn8.) AS date_new  FROM IND_B );",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC52_industry_v5.sas
" CREATE TABLE IND_MONTH AS select m0.date_new, m0.Description, m0.Identifier, m0.ASOF_YRMO, m0.YRMNTH , 'Rooms' AS DATA_CATEGORY , '' AS DATA_TYPE, 'MONTH' AS TIME_TYPE, 'MONTH' AS TIMEF , m0.DATASOURCE , m0.MARCAP AS MARAVAIL, m0.MAROCC AS MARSOLD, m0.MARREV , m1.MARCAP AS MARAVAILLY, m1.MAROCC AS MARSOLDLY, m1.MARREV AS MARREVLY , m2.MARCAP AS MARAVAILLY_2PRIOR, m2.MAROCC AS MARSOLDLY_2PRIOR, m2.MARREV AS MARREVLY_2PRIOR , CASE WHEN m0.MARCAP*m0.MAROCC*m0.MARREV*m1.MARCAP*m1.MAROCC*m1.MARREV > 0 THEN 1 ELSE 0 END AS COMPLETE_DATA FROM IND_C AS m0 LEFT JOIN IND_C AS m1 ON m0.Description = m1.Description AND m0.YRMNTH = m1.YRMNTH + 100 LEFT JOIN IND_C AS m2 ON m0.Description = m2.Description AND m0.YRMNTH = m2.YRMNTH + 200 WHERE m0.YRMNTH <= &STARMNTH ORDER BY m0.Description, m0.Identifier, m0.YRMNTH ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC52_industry_v5.sas
" CREATE TABLE IND_L12_A AS SELECT M0.DATE_NEW, M0.DESCRIPTION, M0.IDENTIFIER, M0.ASOF_YRMO, M0.YRMNTH , M0.DATA_CATEGORY, M0.DATA_TYPE, 'LAST12' AS TIME_TYPE, 'LAST12' AS TIMEF , M0.DATASOURCE , M0.MARAVAIL+M1.MARAVAIL+M2.MARAVAIL+M3.MARAVAIL+M4.MARAVAIL+M5.MARAVAIL +M6.MARAVAIL+M7.MARAVAIL+M8.MARAVAIL+M9.MARAVAIL+M10.MARAVAIL+M11.MARAVAIL AS MARAVAIL , M0.MARSOLD+M1.MARSOLD+M2.MARSOLD+M3.MARSOLD+M4.MARSOLD+M5.MARSOLD +M6.MARSOLD+M7.MARSOLD+M8.MARSOLD+M9.MARSOLD+M10.MARSOLD+M11.MARSOLD AS MARSOLD , M0.MARREV+M1.MARREV+M2.MARREV+M3.MARREV+M4.MARREV+M5.MARREV +M6.MARREV+M7.MARREV+M8.MARREV+M9.MARREV+M10.MARREV+M11.MARREV AS MARREV , M0.COMPLETE_DATA+M1.COMPLETE_DATA+M2.COMPLETE_DATA+M3.COMPLETE_DATA+M4.COMPLETE_DATA+M5.COMPLETE_DATA +M6.COMPLETE_DATA+M7.COMPLETE_DATA+M8.COMPLETE_DATA+M9.COMPLETE_DATA+M10.COMPLETE_DATA+M11.COMPLETE_DATA AS DATA_CHECK FROM IND_FINAL_MONTH AS M0 LEFT JOIN IND_FINAL_MONTH AS M1 ON M0.DESCRIPTION = M1.DESCRIPTION AND M0.DATE_NEW = DATEADD('MONTH',1,M1.DATE_NEW) AND M0.DATA_TYPE = M1.DATA_TYPE LEFT JOIN IND_FINAL_MONTH AS M2 ON M0.DESCRIPTION = M2.DESCRIPTION AND M0.DATE_NEW = DATEADD('MONTH',2,M2.DATE_NEW) AND M0.DATA_TYPE = M2.DATA_TYPE LEFT JOIN IND_FINAL_MONTH AS M3 ON M0.DESCRIPTION = M3.DESCRIPTION AND M0.DATE_NEW = DATEADD('MONTH',3,M3.DATE_NEW) AND M0.DATA_TYPE = M3.DATA_TYPE LEFT JOIN IND_FINAL_MONTH AS M4 ON M0.DESCRIPTION = M4.DESCRIPTION AND M0.DATE_NEW = DATEADD('MONTH',4,M4.DATE_NEW) AND M0.DATA_TYPE = M4.DATA_TYPE LEFT JOIN IND_FINAL_MONTH AS M5 ON M0.DESCRIPTION = M5.DESCRIPTION AND M0.DATE_NEW = DATEADD('MONTH',5,M5.DATE_NEW) AND M0.DATA_TYPE = M5.DATA_TYPE LEFT JOIN IND_FINAL_MONTH AS M6 ON M0.DESCRIPTION = M6.DESCRIPTION AND M0.DATE_NEW = DATEADD('MONTH',6,M6.DATE_NEW) AND M0.DATA_TYPE = M6.DATA_TYPE LEFT JOIN IND_FINAL_MONTH AS M7 ON M0.DESCRIPTION = M7.DESCRIPTION AND M0.DATE_NEW = DATEADD('MONTH',7,M7.DATE_NEW) AND M0.DATA_TYPE = M7.DATA_TYPE LEFT JOIN IND_FINAL_MONTH AS M8 ON M0.DESCRIPTION = M8.DESCRIPTION AND M0.DATE_NEW = DATEADD('MONTH',8,M8.DATE_NEW) AND M0.DATA_TYPE = M8.DATA_TYPE LEFT JOIN IND_FINAL_MONTH AS M9 ON M0.DESCRIPTION = M9.DESCRIPTION AND M0.DATE_NEW = DATEADD('MONTH',9,M9.DATE_NEW) AND M0.DATA_TYPE = M9.DATA_TYPE LEFT JOIN IND_FINAL_MONTH AS M10 ON M0.DESCRIPTION = M10.DESCRIPTION AND M0.DATE_NEW = DATEADD('MONTH',10,M10.DATE_NEW) AND M0.DATA_TYPE = M10.DATA_TYPE LEFT JOIN IND_FINAL_MONTH AS M11 ON M0.DESCRIPTION = M11.DESCRIPTION AND M0.DATE_NEW = DATEADD('MONTH',11,M11.DATE_NEW)AND M0.DATA_TYPE = M11.DATA_TYPE ORDER BY M0.DESCRIPTION, M0.IDENTIFIER, M0.YRMNTH ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC52_industry_v5.sas
" CREATE TABLE IND_L12_B AS select m0.* , m1.MARAVAIL AS MARAVAILLY, m1.MARSOLD AS MARSOLDLY, m1.MARREV AS MARREVLY , m2.MARAVAIL AS MARAVAILLY_2PRIOR, m2.MARSOLD AS MARSOLDLY_2PRIOR, m2.MARREV AS MARREVLY_2PRIOR , CASE WHEN m0.DATA_CHECK = 12 THEN 1 ELSE 0 END AS COMPLETE_DATA FROM IND_L12_A AS m0 LEFT JOIN IND_L12_A AS m1 ON m0.Description = m1.Description AND m0.YRMNTH = m1.YRMNTH + 100 AND m0.DATA_TYPE = m1.DATA_TYPE LEFT JOIN IND_L12_A AS m2 ON m0.Description = m2.Description AND m0.YRMNTH = m2.YRMNTH + 200 AND m0.DATA_TYPE = m2.DATA_TYPE ORDER BY m0.Description, m0.Identifier, m0.YRMNTH ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC52_industry_v5.sas
" CREATE TABLE IND_L3_A AS SELECT M0.DATE_NEW, M0.DESCRIPTION, M0.IDENTIFIER, M0.ASOF_YRMO, M0.YRMNTH , M0.DATA_CATEGORY, M0.DATA_TYPE, 'LAST3' AS TIME_TYPE, 'LAST3' AS TIMEF , M0.DATASOURCE , M0.MARAVAIL+M1.MARAVAIL+M2.MARAVAIL AS MARAVAIL , M0.MARSOLD+M1.MARSOLD+M2.MARSOLD AS MARSOLD , M0.MARREV+M1.MARREV+M2.MARREV AS MARREV , M0.COMPLETE_DATA+M1.COMPLETE_DATA+M2.COMPLETE_DATA AS DATA_CHECK FROM IND_FINAL_MONTH AS M0 LEFT JOIN IND_FINAL_MONTH AS M1 ON M0.DESCRIPTION = M1.DESCRIPTION AND M0.DATE_NEW = DATEADD('MONTH',1,M1.DATE_NEW) AND M0.DATA_TYPE = M1.DATA_TYPE LEFT JOIN IND_FINAL_MONTH AS M2 ON M0.DESCRIPTION = M2.DESCRIPTION AND M0.DATE_NEW = DATEADD('MONTH',2,M2.DATE_NEW) AND M0.DATA_TYPE = M2.DATA_TYPE ORDER BY M0.DESCRIPTION, M0.IDENTIFIER, M0.YRMNTH ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC52_industry_v5.sas
" CREATE TABLE IND_L3_B AS select m0.* , m1.MARAVAIL AS MARAVAILLY, m1.MARSOLD AS MARSOLDLY, m1.MARREV AS MARREVLY , m2.MARAVAIL AS MARAVAILLY_2PRIOR, m2.MARSOLD AS MARSOLDLY_2PRIOR, m2.MARREV AS MARREVLY_2PRIOR , CASE WHEN m0.DATA_CHECK = 3 THEN 1 ELSE 0 END AS COMPLETE_DATA FROM IND_L3_A AS m0 LEFT JOIN IND_L3_A AS m1 ON m0.Description = m1.Description AND m0.YRMNTH = m1.YRMNTH + 100 AND m0.DATA_TYPE = m1.DATA_TYPE LEFT JOIN IND_L3_A AS m2 ON m0.Description = m2.Description AND m0.YRMNTH = m2.YRMNTH + 200 AND m0.DATA_TYPE = m2.DATA_TYPE ORDER BY m0.Description, m0.Identifier, m0.YRMNTH ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC52_industry_v5.sas
" CREATE TABLE IND_YTD_A AS SELECT M0.DATE_NEW AS DATE_NEW_ORIG, M0.YRMNTH AS YRMNTH_ORIG,EXTRACT(MONTH FROM M0.DATE_NEW) AS MONTH_ORIG, M0.DATA_TYPE AS DATA_TYPE_ORIG, M0.DATA_TYPE AS DATA_TYPE_PREV,EXTRACT(MONTH FROM M0.DATE_NEW) AS MONTH_PREV, M0.* FROM IND_FINAL_MONTH AS M0 UNION SELECT M0.DATE_NEW AS DATE_NEW_ORIG, M0.YRMNTH AS YRMNTH_ORIG,EXTRACT(MONTH FROM M0.DATE_NEW) AS MONTH_ORIG, M0.DATA_TYPE AS DATA_TYPE_ORIG, M1.DATA_TYPE AS DATA_TYPE_PREV,EXTRACT(MONTH FROM M1.DATE_NEW) AS MONTH_PREV, M1.* FROM IND_FINAL_MONTH AS M0 RIGHT JOIN IND_FINAL_MONTH AS M1 ON M0.DESCRIPTION = M1.DESCRIPTION AND M0.DATE_NEW = DATEADD('MONTH',1,M1.DATE_NEW) AND M0.DATA_TYPE = M1.DATA_TYPE UNION SELECT M0.DATE_NEW AS DATE_NEW_ORIG, M0.YRMNTH AS YRMNTH_ORIG,EXTRACT(MONTH FROM M0.DATE_NEW) AS MONTH_ORIG, M0.DATA_TYPE AS DATA_TYPE_ORIG, M1.DATA_TYPE AS DATA_TYPE_PREV,EXTRACT(MONTH FROM M1.DATE_NEW) AS MONTH_PREV, M1.* FROM IND_FINAL_MONTH AS M0 RIGHT JOIN IND_FINAL_MONTH AS M1 ON M0.DESCRIPTION = M1.DESCRIPTION AND M0.DATE_NEW = DATEADD('MONTH',2,M1.DATE_NEW) AND M0.DATA_TYPE = M1.DATA_TYPE UNION SELECT M0.DATE_NEW AS DATE_NEW_ORIG, M0.YRMNTH AS YRMNTH_ORIG,EXTRACT(MONTH FROM M0.DATE_NEW) AS MONTH_ORIG, M0.DATA_TYPE AS DATA_TYPE_ORIG, M1.DATA_TYPE AS DATA_TYPE_PREV,EXTRACT(MONTH FROM M1.DATE_NEW) AS MONTH_PREV, M1.* FROM IND_FINAL_MONTH AS M0 RIGHT JOIN IND_FINAL_MONTH AS M1 ON M0.DESCRIPTION = M1.DESCRIPTION AND M0.DATE_NEW = DATEADD('MONTH',3,M1.DATE_NEW) AND M0.DATA_TYPE = M1.DATA_TYPE UNION SELECT M0.DATE_NEW AS DATE_NEW_ORIG, M0.YRMNTH AS YRMNTH_ORIG,EXTRACT(MONTH FROM M0.DATE_NEW) AS MONTH_ORIG, M0.DATA_TYPE AS DATA_TYPE_ORIG, M1.DATA_TYPE AS DATA_TYPE_PREV,EXTRACT(MONTH FROM M1.DATE_NEW) AS MONTH_PREV, M1.* FROM IND_FINAL_MONTH AS M0 RIGHT JOIN IND_FINAL_MONTH AS M1 ON M0.DESCRIPTION = M1.DESCRIPTION AND M0.DATE_NEW = DATEADD('MONTH',4,M1.DATE_NEW) AND M0.DATA_TYPE = M1.DATA_TYPE UNION SELECT M0.DATE_NEW AS DATE_NEW_ORIG, M0.YRMNTH AS YRMNTH_ORIG,EXTRACT(MONTH FROM M0.DATE_NEW) AS MONTH_ORIG, M0.DATA_TYPE AS DATA_TYPE_ORIG, M1.DATA_TYPE AS DATA_TYPE_PREV,EXTRACT(MONTH FROM M1.DATE_NEW) AS MONTH_PREV, M1.* FROM IND_FINAL_MONTH AS M0 RIGHT JOIN IND_FINAL_MONTH AS M1 ON M0.DESCRIPTION = M1.DESCRIPTION AND M0.DATE_NEW = DATEADD('MONTH',5,M1.DATE_NEW) AND M0.DATA_TYPE = M1.DATA_TYPE UNION SELECT M0.DATE_NEW AS DATE_NEW_ORIG, M0.YRMNTH AS YRMNTH_ORIG,EXTRACT(MONTH FROM M0.DATE_NEW) AS MONTH_ORIG, M0.DATA_TYPE AS DATA_TYPE_ORIG, M1.DATA_TYPE AS DATA_TYPE_PREV,EXTRACT(MONTH FROM M1.DATE_NEW) AS MONTH_PREV, M1.* FROM IND_FINAL_MONTH AS M0 RIGHT JOIN IND_FINAL_MONTH AS M1 ON M0.DESCRIPTION = M1.DESCRIPTION AND M0.DATE_NEW = DATEADD('MONTH',6,M1.DATE_NEW) AND M0.DATA_TYPE = M1.DATA_TYPE UNION SELECT M0.DATE_NEW AS DATE_NEW_ORIG, M0.YRMNTH AS YRMNTH_ORIG,EXTRACT(MONTH FROM M0.DATE_NEW) AS MONTH_ORIG, M0.DATA_TYPE AS DATA_TYPE_ORIG, M1.DATA_TYPE AS DATA_TYPE_PREV,EXTRACT(MONTH FROM M1.DATE_NEW) AS MONTH_PREV, M1.* FROM IND_FINAL_MONTH AS M0 RIGHT JOIN IND_FINAL_MONTH AS M1 ON M0.DESCRIPTION = M1.DESCRIPTION AND M0.DATE_NEW = DATEADD('MONTH',7,M1.DATE_NEW) AND M0.DATA_TYPE = M1.DATA_TYPE UNION SELECT M0.DATE_NEW AS DATE_NEW_ORIG, M0.YRMNTH AS YRMNTH_ORIG,EXTRACT(MONTH FROM M0.DATE_NEW) AS MONTH_ORIG, M0.DATA_TYPE AS DATA_TYPE_ORIG, M1.DATA_TYPE AS DATA_TYPE_PREV,EXTRACT(MONTH FROM M1.DATE_NEW) AS MONTH_PREV, M1.* FROM IND_FINAL_MONTH AS M0 RIGHT JOIN IND_FINAL_MONTH AS M1 ON M0.DESCRIPTION = M1.DESCRIPTION AND M0.DATE_NEW = DATEADD('MONTH',8,M1.DATE_NEW) AND M0.DATA_TYPE = M1.DATA_TYPE UNION SELECT M0.DATE_NEW AS DATE_NEW_ORIG, M0.YRMNTH AS YRMNTH_ORIG,EXTRACT(MONTH FROM M0.DATE_NEW) AS MONTH_ORIG, M0.DATA_TYPE AS DATA_TYPE_ORIG, M1.DATA_TYPE AS DATA_TYPE_PREV,EXTRACT(MONTH FROM M1.DATE_NEW) AS MONTH_PREV, M1.* FROM IND_FINAL_MONTH AS M0 RIGHT JOIN IND_FINAL_MONTH AS M1 ON M0.DESCRIPTION = M1.DESCRIPTION AND M0.DATE_NEW = DATEADD('MONTH',9,M1.DATE_NEW) AND M0.DATA_TYPE = M1.DATA_TYPE UNION SELECT M0.DATE_NEW AS DATE_NEW_ORIG, M0.YRMNTH AS YRMNTH_ORIG,EXTRACT(MONTH FROM M0.DATE_NEW) AS MONTH_ORIG, M0.DATA_TYPE AS DATA_TYPE_ORIG, M1.DATA_TYPE AS DATA_TYPE_PREV,EXTRACT(MONTH FROM M1.DATE_NEW) AS MONTH_PREV, M1.* FROM IND_FINAL_MONTH AS M0 RIGHT JOIN IND_FINAL_MONTH AS M1 ON M0.DESCRIPTION = M1.DESCRIPTION AND M0.DATE_NEW = DATEADD('MONTH',10,M1.DATE_NEW) AND M0.DATA_TYPE = M1.DATA_TYPE UNION SELECT M0.DATE_NEW AS DATE_NEW_ORIG, M0.YRMNTH AS YRMNTH_ORIG,EXTRACT(MONTH FROM M0.DATE_NEW) AS MONTH_ORIG, M0.DATA_TYPE AS DATA_TYPE_ORIG, M1.DATA_TYPE AS DATA_TYPE_PREV,EXTRACT(MONTH FROM M1.DATE_NEW) AS MONTH_PREV, M1.* FROM IND_FINAL_MONTH AS M0 RIGHT JOIN IND_FINAL_MONTH AS M1 ON M0.DESCRIPTION = M1.DESCRIPTION AND M0.DATE_NEW = DATEADD('MONTH',11,M1.DATE_NEW) AND M0.DATA_TYPE = M1.DATA_TYPE ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC52_industry_v5.sas
" CREATE TABLE IND_YTD_B AS select date_new_orig AS date_new, Description, Identifier, ASOF_YRMO, YRMNTH_ORIG AS YRMNTH , DATA_CATEGORY, DATA_TYPE_ORIG AS DATA_TYPE, 'YTD' AS TIME_TYPE, 'YTD' AS TIMEF , DATASOURCE ,SUM( MARAVAIL) AS MARAVAIL, SUM( MARSOLD) AS MARSOLD, SUM( MARREV) AS MARREV ,SUM( COMPLETE_DATA) AS DATA_CHECK , month_orig FROM IND_YTD_A WHERE month_prev <= month_orig GROUP BY date_new_orig, Description, Identifier, ASOF_YRMO, YRMNTH_ORIG, DATA_CATEGORY, DATA_TYPE_ORIG, DATASOURCE, month_orig ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC52_industry_v5.sas
" CREATE TABLE IND_YTD_C AS select m0.* , m1.MARAVAIL AS MARAVAILLY, m1.MARSOLD AS MARSOLDLY, m1.MARREV AS MARREVLY , m2.MARAVAIL AS MARAVAILLY_2PRIOR, m2.MARSOLD AS MARSOLDLY_2PRIOR, m2.MARREV AS MARREVLY_2PRIOR , CASE WHEN m0.DATA_CHECK = m0.month_orig THEN 1 ELSE 0 END AS COMPLETE_DATA FROM IND_YTD_B AS m0 LEFT JOIN IND_YTD_B AS m1 ON m0.Description = m1.Description AND m0.YRMNTH = m1.YRMNTH + 100 AND m0.DATA_TYPE = m1.DATA_TYPE LEFT JOIN IND_YTD_B AS m2 ON m0.Description = m2.Description AND m0.YRMNTH = m2.YRMNTH + 200 AND m0.DATA_TYPE = m2.DATA_TYPE ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC52_industry_v5.sas
"CREATE TABLE IND_YTD_D AS ( SELECT  *  , FORMAT(date_new, yymmddn8.) AS date_new  FROM IND_YTD_C );",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC52_industry_v5.sas
ALTER TABLE IND_YTD_D DROP COLUMN month_orig ;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC52_industry_v5.sas
" CREATE TABLE STR_CC.IND_FINAL_&TIMEF. AS ( SELECT Description, ASOF_YRMO, YRMNTH, DATA_CATEGORY, TIMEF, COMPLETE_DATA, DATASOURCE , Identifier AS IND_GROUP , MARAVAIL AS AVAIL , MARSOLD AS SOLD , MARREV AS REV , MARAVAILLY AS AVAILLY , MARSOLDLY AS SOLDLY , MARREVLY AS REVLY , MARAVAILLY_2PRIOR AS AVAILLY_2PRIOR , MARSOLDLY_2PRIOR AS SOLDLY_2PRIOR , MARREVLY_2PRIOR AS REVLY_2PRIOR  FROM IND_FINAL_&TIMEF. );",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC52_industry_v5.sas
" CREATE TABLE AW_STG_BUS_DBO.STR_US_INDUSTRY_DATA_STG (  Description VARCHAR( 40), IND_GROUP VARCHAR( 30), ASOF_YRMO INTEGER, YrMnth INTEGER, DATA_CATEGORY VARCHAR( 15), TIMEF VARCHAR( 12), COMPLETE_DATA INTEGER, datasource VARCHAR( 4), AVAIL INTEGER, SOLD INTEGER, REV DOUBLE, AVAILLY INTEGER, SOLDLY INTEGER, REVLY DOUBLE, AVAILLY_2PRIOR INTEGER, SOLDLY_2PRIOR INTEGER, REVLY_2PRIOR DOUBLE ) ) by odbc ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC52_industry_v5.sas
INSERT INTO TABLE AWPROD.STR_US_INDUSTRY_DATA_STG SELECT * FROM STR_CC.IND_FINAL_&TIMEF.;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC52_industry_v5.sas
   INSERT INTO AW_STG_BUS_DBO.STR_US_INDUSTRY_DATA Select * FROM AW_STG_BUS_DBO.STR_US_INDUSTRY_DATA_STG ) by odbc ;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC52_industry_v5.sas
   DROP TABLE AW_STG_BUS_DBO.STR_US_INDUSTRY_DATA_STG ) by odbc ;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC52_industry_v5.sas
" CREATE TABLE STAR60M_CD_REG_A AS ( SELECT  *  , FORMAT(CAST( STRCODE, 7.  ), INT)  AS STR_ID , """" AS DATA_TYPE , CASE WHEN  MSTYPE = 'SR'  THEN 'SELF' WHEN  MSTYPE = 'SB'  THEN 'STR' ELSE 'MKG' END AS DATASOURCE FROM Str_CC.STAR60m_CD_PW );",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC53_new60month_newAW_vALL11marsha.sas
" CREATE TABLE STAR60M_CD_REG AS select m0.* , c.comp AS SCOMP , CASE WHEN m0.MARCAP*m0.MAROCC*m0.MARREV_LCL*m0.MKTCAP*m0.MKTOCC*m0.MKTREV_LCL FROM STAR60M_CD_REG_A AS m0 LEFT JOIN STAR60M_CD_REG_A AS m1 ON m0.MARSHA = m1.MARSHA AND m0.YRMNTH = m1.YRMNTH + 100 LEFT JOIN Str_acc.Starview_Comp_CD AS c ON m0.MARSHA = c.MARSHA ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC53_new60month_newAW_vALL11marsha.sas
" CREATE TABLE STAR60M_CD_PLUS AS select m0.* , d.COMPLETE_DATA FROM Str_CC.STAR60m_CD_PLUS AS m0 LEFT JOIN Str_cc.STAR60m_PLUS_COMPLETE_DATA AS d ON m0.STR_ID = d.STR_ID AND m0.YRMNTH = d.YRMNTH ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC53_new60month_newAW_vALL11marsha.sas
" CREATE TABLE STAR60M_CD_WDWE AS select m0.* , d.COMPLETE_DATA FROM Str_CC.STAR60m_CD_WDWE AS m0 LEFT JOIN Str_cc.STAR60m_WDWE_COMPLETE_DATA AS d ON m0.STR_ID = d.STR_ID AND m0.YRMNTH = d.YRMNTH ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC53_new60month_newAW_vALL11marsha.sas
" CREATE TABLE STAR60m_CD_date_&SEG. AS ( SELECT  *  , TRIMCONCAT( YRMNTH,""01"" ) AS date , CAST( YRMNTH, 8.  ) AS newyrmo  FROM STAR60m_CD_&SEG. );",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC53_new60month_newAW_vALL11marsha.sas
" CREATE TABLE STAR60m_CD_date2_&SEG. AS ( SELECT  *  , FORMAT(CAST( RTRIM( date), yymmdd8.  ), yymmddn8.) AS date_new  FROM STAR60m_CD_date_&SEG. );",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC53_new60month_newAW_vALL11marsha.sas
CREATE TABLE STAR60m_CD_date2_&SEG. AS (SELECT * FROM STAR60m_CD_date2_&SEG. ORDER BY MARSHA);,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC53_new60month_newAW_vALL11marsha.sas
" CREATE TABLE a_test_&SEG. AS select m0.MARSHA, m0.STR_ID, m0.YRMNTH, m0.DATA_TYPE, COUNT( m0.MARSHA) AS COUNT FROM STAR60m_CD_date2_&SEG. AS m0 GROUP BY m0.MARSHA, m0.STR_ID, m0.YRMNTH, m0.DATA_TYPE ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC53_new60month_newAW_vALL11marsha.sas
 CREATE TABLE a_test_&SEG._a AS select * FROM a_test_&SEG AS m0 WHERE m0.COUNT <>1 ;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC53_new60month_newAW_vALL11marsha.sas
" CREATE TABLE STAR60m_FINAL_&SEG._month_LC AS select m0.date_new, m0.MARSHA, m0.STR_ID, m0.BRND AS BRAND, 'Local' AS CURRENCY_TYPE, m0.CUR AS CUR , m0.YRMNTH , CASE WHEN m0.DATA_TYPE IN ( 'WD','WE') THEN 'WDWE_Rooms' when m0.DATA_TYPE IN ( 'TN','CN','GP') THEN 'Seg_Rooms' ELSE 'Rooms' END AS DATA_CATEGORY , m0.DATA_TYPE, 'MONTH' AS TIME_TYPE, CONCAT_WS( '_','MONTH',m0.DATA_TYPE) AS TIMEF, m0.SCOMP , m0.COMPLETE_DATA , m0.DATASOURCE , m0.MARCAP AS MARAVAIL, m0.MAROCC AS MARSOLD, m0.MARREV_LCL AS MARREV , m0.MKTCAPPW AS MKTAVAIL, m0.MKTOCCPW AS MKTSOLD, m0.MKTREV_LCLPW AS MKTREV , m0.MKTCAP AS MKTAVAIL_UNW, m0.MKTOCC AS MKTSOLD_UNW, m0.MKTREV_LCL AS MKTREV_UNW , m1.MARCAP AS MARAVAILLY, m1.MAROCC AS MARSOLDLY, m1.MARREV_LCL AS MARREVLY , m1.MKTCAPPW AS MKTAVAILLY, m1.MKTOCCPW AS MKTSOLDLY, m1.MKTREV_LCLPW AS MKTREVLY , m1.MKTCAP AS MKTAVAIL_UNWLY, m1.MKTOCC AS MKTSOLD_UNWLY, m1.MKTREV_LCL AS MKTREV_UNWLY , m2.MARCAP AS MARAVAILLY_2PRIOR, m2.MAROCC AS MARSOLDLY_2PRIOR, m2.MARREVCD AS MARREVLY_2PRIOR , m2.MKTCAPPW AS MKTAVAILLY_2PRIOR, m2.MKTOCCPW AS MKTSOLDLY_2PRIOR, m2.MKTREVCDPW AS MKTREVLY_2PRIOR , m2.MKTCAP AS MKTAVAIL_UNWLY_2PRIOR, m2.MKTOCC AS MKTSOLD_UNWLY_2PRIOR, m2.MKTREVCD AS MKTREV_UNWLY_2PRIOR FROM STAR60m_CD_date2_&SEG. AS m0 LEFT JOIN STAR60m_CD_date2_&SEG. AS m1 ON m0.MARSHA = m1.MARSHA AND m0.YRMNTH = m1.YRMNTH + 100 AND m0.DATA_TYPE = m1.DATA_TYPE LEFT JOIN STAR60m_CD_date2_&SEG. AS m2 ON m0.MARSHA = m2.MARSHA AND m0.YRMNTH = m2.YRMNTH + 200 AND m0.DATA_TYPE = m2.DATA_TYPE WHERE m0.YRMNTH <= &STARMNTH ORDER BY m0.STR_ID, m0.DATA_TYPE, m0.YRMNTH ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC53_new60month_newAW_vALL11marsha.sas
" CREATE TABLE STAR60m_FINAL_&SEG._month_CC AS select m0.date_new, m0.MARSHA, m0.STR_ID, m0.BRND AS BRAND, 'Constant USD' AS CURRENCY_TYPE, 'USD' AS CUR , m0.YRMNTH , CASE WHEN m0.DATA_TYPE IN ( 'WD','WE') THEN 'WDWE_Rooms' when m0.DATA_TYPE IN ( 'TN','CN','GP') THEN 'Seg_Rooms' ELSE 'Rooms' END AS DATA_CATEGORY , m0.DATA_TYPE, 'MONTH' AS TIME_TYPE, CONCAT_WS( '_','MONTH',m0.DATA_TYPE) AS TIMEF, m0.SCOMP , m0.COMPLETE_DATA , m0.DATASOURCE , m0.MARCAP AS MARAVAIL, m0.MAROCC AS MARSOLD, m0.MARREVCD AS MARREV , m0.MKTCAPPW AS MKTAVAIL, m0.MKTOCCPW AS MKTSOLD, m0.MKTREVCDPW AS MKTREV , m0.MKTCAP AS MKTAVAIL_UNW, m0.MKTOCC AS MKTSOLD_UNW, m0.MKTREVCD AS MKTREV_UNW , m1.MARCAP AS MARAVAILLY, m1.MAROCC AS MARSOLDLY, m1.MARREVCD AS MARREVLY , m1.MKTCAPPW AS MKTAVAILLY, m1.MKTOCCPW AS MKTSOLDLY, m1.MKTREVCDPW AS MKTREVLY , m1.MKTCAP AS MKTAVAIL_UNWLY, m1.MKTOCC AS MKTSOLD_UNWLY, m1.MKTREVCD AS MKTREV_UNWLY , m2.MARCAP AS MARAVAILLY_2PRIOR, m2.MAROCC AS MARSOLDLY_2PRIOR, m2.MARREVCD AS MARREVLY_2PRIOR , m2.MKTCAPPW AS MKTAVAILLY_2PRIOR, m2.MKTOCCPW AS MKTSOLDLY_2PRIOR, m2.MKTREVCDPW AS MKTREVLY_2PRIOR , m2.MKTCAP AS MKTAVAIL_UNWLY_2PRIOR, m2.MKTOCC AS MKTSOLD_UNWLY_2PRIOR, m2.MKTREVCD AS MKTREV_UNWLY_2PRIOR FROM STAR60m_CD_date2_&SEG. AS m0 LEFT JOIN STAR60m_CD_date2_&SEG. AS m1 ON m0.MARSHA = m1.MARSHA AND m0.YRMNTH = m1.YRMNTH + 100 AND m0.DATA_TYPE = m1.DATA_TYPE LEFT JOIN STAR60m_CD_date2_&SEG. AS m2 ON m0.MARSHA = m2.MARSHA AND m0.YRMNTH = m2.YRMNTH + 200 AND m0.DATA_TYPE = m2.DATA_TYPE WHERE m0.YRMNTH <= &STARMNTH ORDER BY m0.STR_ID, m0.DATA_TYPE , m0.YRMNTH ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC53_new60month_newAW_vALL11marsha.sas
" CREATE TABLE STAR60M_L12_&SEG._&CUR._A AS SELECT M0.DATE_NEW, M0.MARSHA, M0.STR_ID, M0.BRAND, M0.CURRENCY_TYPE, M0.CUR , M0.YRMNTH, M0.DATA_CATEGORY, M0.DATA_TYPE, 'LAST12' AS TIME_TYPE, CONCAT_WS( '_','LAST12',M0.DATA_TYPE) AS TIMEF, M0.SCOMP , M0.DATASOURCE , M0.MARAVAIL+M1.MARAVAIL+M2.MARAVAIL+M3.MARAVAIL+M4.MARAVAIL+M5.MARAVAIL +M6.MARAVAIL+M7.MARAVAIL+M8.MARAVAIL+M9.MARAVAIL+M10.MARAVAIL+M11.MARAVAIL AS MARAVAIL , M0.MARSOLD+M1.MARSOLD+M2.MARSOLD+M3.MARSOLD+M4.MARSOLD+M5.MARSOLD +M6.MARSOLD+M7.MARSOLD+M8.MARSOLD+M9.MARSOLD+M10.MARSOLD+M11.MARSOLD AS MARSOLD , M0.MARREV+M1.MARREV+M2.MARREV+M3.MARREV+M4.MARREV+M5.MARREV +M6.MARREV+M7.MARREV+M8.MARREV+M9.MARREV+M10.MARREV+M11.MARREV AS MARREV , ( M0.MARAVAIL+M1.MARAVAIL+M2.MARAVAIL+M3.MARAVAIL+M4.MARAVAIL+M5.MARAVAIL+M6.MARAVAIL+M7.MARAVAIL+M8.MARAVAIL+M9.MARAVAIL+M10.MARAVAIL+M11.MARAVAIL) / ( M0.MKTAVAIL_UNW+M1.MKTAVAIL_UNW+M2.MKTAVAIL_UNW+M3.MKTAVAIL_UNW+M4.MKTAVAIL_UNW+M5.MKTAVAIL_UNW+M6.MKTAVAIL_UNW+M7.MKTAVAIL_UNW+M8.MKTAVAIL_UNW+M9.MKTAVAIL_UNW+M10.MKTAVAIL_UNW+M11.MKTAVAIL_UNW) * ( M0.MKTAVAIL_UNW+M1.MKTAVAIL_UNW+M2.MKTAVAIL_UNW+M3.MKTAVAIL_UNW+M4.MKTAVAIL_UNW+M5.MKTAVAIL_UNW+M6.MKTAVAIL_UNW+M7.MKTAVAIL_UNW+M8.MKTAVAIL_UNW+M9.MKTAVAIL_UNW+M10.MKTAVAIL_UNW+M11.MKTAVAIL_UNW) AS MKTAVAIL , ( M0.MARAVAIL+M1.MARAVAIL+M2.MARAVAIL+M3.MARAVAIL+M4.MARAVAIL+M5.MARAVAIL+M6.MARAVAIL+M7.MARAVAIL+M8.MARAVAIL+M9.MARAVAIL+M10.MARAVAIL+M11.MARAVAIL) / ( M0.MKTAVAIL_UNW+M1.MKTAVAIL_UNW+M2.MKTAVAIL_UNW+M3.MKTAVAIL_UNW+M4.MKTAVAIL_UNW+M5.MKTAVAIL_UNW+M6.MKTAVAIL_UNW+M7.MKTAVAIL_UNW+M8.MKTAVAIL_UNW+M9.MKTAVAIL_UNW+M10.MKTAVAIL_UNW+M11.MKTAVAIL_UNW) * ( M0.MKTSOLD_UNW+M1.MKTSOLD_UNW+M2.MKTSOLD_UNW+M3.MKTSOLD_UNW+M4.MKTSOLD_UNW+M5.MKTSOLD_UNW+M6.MKTSOLD_UNW+M7.MKTSOLD_UNW+M8.MKTSOLD_UNW+M9.MKTSOLD_UNW+M10.MKTSOLD_UNW+M11.MKTSOLD_UNW) AS MKTSOLD , ( M0.MARAVAIL+M1.MARAVAIL+M2.MARAVAIL+M3.MARAVAIL+M4.MARAVAIL+M5.MARAVAIL+M6.MARAVAIL+M7.MARAVAIL+M8.MARAVAIL+M9.MARAVAIL+M10.MARAVAIL+M11.MARAVAIL) / ( M0.MKTAVAIL_UNW+M1.MKTAVAIL_UNW+M2.MKTAVAIL_UNW+M3.MKTAVAIL_UNW+M4.MKTAVAIL_UNW+M5.MKTAVAIL_UNW+M6.MKTAVAIL_UNW+M7.MKTAVAIL_UNW+M8.MKTAVAIL_UNW+M9.MKTAVAIL_UNW+M10.MKTAVAIL_UNW+M11.MKTAVAIL_UNW) * ( M0.MKTREV_UNW+M1.MKTREV_UNW+M2.MKTREV_UNW+M3.MKTREV_UNW+M4.MKTREV_UNW+M5.MKTREV_UNW+M6.MKTREV_UNW+M7.MKTREV_UNW+M8.MKTREV_UNW+M9.MKTREV_UNW+M10.MKTREV_UNW+M11.MKTREV_UNW) AS MKTREV , M0.MKTAVAIL_UNW+M1.MKTAVAIL_UNW+M2.MKTAVAIL_UNW+M3.MKTAVAIL_UNW+M4.MKTAVAIL_UNW+M5.MKTAVAIL_UNW +M6.MKTAVAIL_UNW+M7.MKTAVAIL_UNW+M8.MKTAVAIL_UNW+M9.MKTAVAIL_UNW+M10.MKTAVAIL_UNW+M11.MKTAVAIL_UNW AS MKTAVAIL_UNW , M0.MKTSOLD_UNW+M1.MKTSOLD_UNW+M2.MKTSOLD_UNW+M3.MKTSOLD_UNW+M4.MKTSOLD_UNW+M5.MKTSOLD_UNW +M6.MKTSOLD_UNW+M7.MKTSOLD_UNW+M8.MKTSOLD_UNW+M9.MKTSOLD_UNW+M10.MKTSOLD_UNW+M11.MKTSOLD_UNW AS MKTSOLD_UNW , M0.MKTREV_UNW+M1.MKTREV_UNW+M2.MKTREV_UNW+M3.MKTREV_UNW+M4.MKTREV_UNW+M5.MKTREV_UNW +M6.MKTREV_UNW+M7.MKTREV_UNW+M8.MKTREV_UNW+M9.MKTREV_UNW+M10.MKTREV_UNW+M11.MKTREV_UNW AS MKTREV_UNW , M0.COMPLETE_DATA+M1.COMPLETE_DATA+M2.COMPLETE_DATA+M3.COMPLETE_DATA+M4.COMPLETE_DATA+M5.COMPLETE_DATA +M6.COMPLETE_DATA+M7.COMPLETE_DATA+M8.COMPLETE_DATA+M9.COMPLETE_DATA+M10.COMPLETE_DATA+M11.COMPLETE_DATA AS DATA_CHECK FROM STAR60M_FINAL_&SEG._MONTH_&CUR. AS M0 LEFT JOIN STAR60M_FINAL_&SEG._MONTH_&CUR. AS M1 ON M0.MARSHA = M1.MARSHA AND M0.DATE_NEW = DATEADD('MONTH',1,M1.DATE_NEW) AND M0.DATA_TYPE = M1.DATA_TYPE LEFT JOIN STAR60M_FINAL_&SEG._MONTH_&CUR. AS M2 ON M0.MARSHA = M2.MARSHA AND M0.DATE_NEW = DATEADD('MONTH',2,M2.DATE_NEW) AND M0.DATA_TYPE = M2.DATA_TYPE LEFT JOIN STAR60M_FINAL_&SEG._MONTH_&CUR. AS M3 ON M0.MARSHA = M3.MARSHA AND M0.DATE_NEW = DATEADD('MONTH',3,M3.DATE_NEW) AND M0.DATA_TYPE = M3.DATA_TYPE LEFT JOIN STAR60M_FINAL_&SEG._MONTH_&CUR. AS M4 ON M0.MARSHA = M4.MARSHA AND M0.DATE_NEW = DATEADD('MONTH',4,M4.DATE_NEW) AND M0.DATA_TYPE = M4.DATA_TYPE LEFT JOIN STAR60M_FINAL_&SEG._MONTH_&CUR. AS M5 ON M0.MARSHA = M5.MARSHA AND M0.DATE_NEW = DATEADD('MONTH',5,M5.DATE_NEW) AND M0.DATA_TYPE = M5.DATA_TYPE LEFT JOIN STAR60M_FINAL_&SEG._MONTH_&CUR. AS M6 ON M0.MARSHA = M6.MARSHA AND M0.DATE_NEW = DATEADD('MONTH',6,M6.DATE_NEW) AND M0.DATA_TYPE = M6.DATA_TYPE LEFT JOIN STAR60M_FINAL_&SEG._MONTH_&CUR. AS M7 ON M0.MARSHA = M7.MARSHA AND M0.DATE_NEW = DATEADD('MONTH',7,M7.DATE_NEW) AND M0.DATA_TYPE = M7.DATA_TYPE LEFT JOIN STAR60M_FINAL_&SEG._MONTH_&CUR. AS M8 ON M0.MARSHA = M8.MARSHA AND M0.DATE_NEW = DATEADD('MONTH',8,M8.DATE_NEW) AND M0.DATA_TYPE = M8.DATA_TYPE LEFT JOIN STAR60M_FINAL_&SEG._MONTH_&CUR. AS M9 ON M0.MARSHA = M9.MARSHA AND M0.DATE_NEW = DATEADD('MONTH',9,M9.DATE_NEW) AND M0.DATA_TYPE = M9.DATA_TYPE LEFT JOIN STAR60M_FINAL_&SEG._MONTH_&CUR. AS M10 ON M0.MARSHA = M10.MARSHA AND M0.DATE_NEW = DATEADD('MONTH',10,M10.DATE_NEW) AND M0.DATA_TYPE = M10.DATA_TYPE LEFT JOIN STAR60M_FINAL_&SEG._MONTH_&CUR. AS M11 ON M0.MARSHA = M11.MARSHA AND M0.DATE_NEW = DATEADD('MONTH',11,M11.DATE_NEW)AND M0.DATA_TYPE = M11.DATA_TYPE ORDER BY M0.DATE_NEW, M0.MARSHA, M0.STR_ID, M0.BRAND, M0.CURRENCY_TYPE, M0.CUR , M0.YRMNTH, M0.DATA_TYPE, M0.SCOMP , M0.DATASOURCE ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC53_new60month_newAW_vALL11marsha.sas
 CREATE TABLE STAR60m_L12_&SEG._&CUR._B AS select * FROM STAR60m_L12_&SEG._&CUR._A ;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC53_new60month_newAW_vALL11marsha.sas
" CREATE TABLE STAR60m_FINAL_&SEG._L12_&CUR. AS select m0.* , m1.MARAVAIL AS MARAVAILLY, m1.MARSOLD AS MARSOLDLY, m1.MARREV AS MARREVLY , m1.MKTAVAIL AS MKTAVAILLY, m1.MKTSOLD AS MKTSOLDLY, m1.MKTREV AS MKTREVLY , m1.MKTAVAIL_UNW AS MKTAVAIL_UNWLY, m1.MKTSOLD_UNW AS MKTSOLD_UNWLY, m1.MKTREV_UNW AS MKTREV_UNWLY , m2.MARAVAIL AS MARAVAILLY_2PRIOR, m2.MARSOLD AS MARSOLDLY_2PRIOR, m2.MARREV AS MARREVLY_2PRIOR , m2.MKTAVAIL AS MKTAVAILLY_2PRIOR, m2.MKTSOLD AS MKTSOLDLY_2PRIOR, m2.MKTREV AS MKTREVLY_2PRIOR , m2.MKTAVAIL_UNW AS MKTAVAIL_UNWLY_2PRIOR, m2.MKTSOLD_UNW AS MKTSOLD_UNWLY_2PRIOR, m2.MKTREV_UNW AS MKTREV_UNWLY_2PRIOR , CASE WHEN m0.DATA_CHECK = 12 THEN 1 ELSE 0 END AS COMPLETE_DATA FROM STAR60m_L12_&SEG._&CUR._B AS m0 LEFT JOIN STAR60m_L12_&SEG._&CUR._B AS m1 ON m0.MARSHA = m1.MARSHA AND m0.YRMNTH = m1.YRMNTH + 100 AND m0.DATA_TYPE = m1.DATA_TYPE LEFT JOIN STAR60m_L12_&SEG._&CUR._B AS m2 ON m0.MARSHA = m2.MARSHA AND m0.YRMNTH = m2.YRMNTH + 200 AND m0.DATA_TYPE = m2.DATA_TYPE ORDER BY m0.STR_ID, m0.DATA_TYPE , m0.YRMNTH ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC53_new60month_newAW_vALL11marsha.sas
" CREATE TABLE STAR60M_L3_&SEG._&CUR._A AS SELECT M0.DATE_NEW, M0.MARSHA, M0.STR_ID, M0.BRAND, M0.CURRENCY_TYPE, M0.CUR , M0.YRMNTH, M0.DATA_CATEGORY, M0.DATA_TYPE, 'LAST3' AS TIME_TYPE, CONCAT_WS( '_','LAST3',M0.DATA_TYPE) AS TIMEF, M0.SCOMP , M0.DATASOURCE , M0.MARAVAIL+M1.MARAVAIL+M2.MARAVAIL AS MARAVAIL , M0.MARSOLD+M1.MARSOLD+M2.MARSOLD AS MARSOLD , M0.MARREV+M1.MARREV+M2.MARREV AS MARREV , ( M0.MARAVAIL+M1.MARAVAIL+M2.MARAVAIL) / ( M0.MKTAVAIL_UNW+M1.MKTAVAIL_UNW+M2.MKTAVAIL_UNW) * ( M0.MKTAVAIL_UNW+M1.MKTAVAIL_UNW+M2.MKTAVAIL_UNW) AS MKTAVAIL , ( M0.MARAVAIL+M1.MARAVAIL+M2.MARAVAIL) / ( M0.MKTAVAIL_UNW+M1.MKTAVAIL_UNW+M2.MKTAVAIL_UNW) * ( M0.MKTSOLD_UNW+M1.MKTSOLD_UNW+M2.MKTSOLD_UNW) AS MKTSOLD , ( M0.MARAVAIL+M1.MARAVAIL+M2.MARAVAIL) / ( M0.MKTAVAIL_UNW+M1.MKTAVAIL_UNW+M2.MKTAVAIL_UNW) * ( M0.MKTREV_UNW+M1.MKTREV_UNW+M2.MKTREV_UNW) AS MKTREV , M0.MKTAVAIL_UNW+M1.MKTAVAIL_UNW+M2.MKTAVAIL_UNW AS MKTAVAIL_UNW , M0.MKTSOLD_UNW+M1.MKTSOLD_UNW+M2.MKTSOLD_UNW AS MKTSOLD_UNW , M0.MKTREV_UNW+M1.MKTREV_UNW+M2.MKTREV_UNW AS MKTREV_UNW , M0.COMPLETE_DATA+M1.COMPLETE_DATA+M2.COMPLETE_DATA AS DATA_CHECK FROM STAR60M_FINAL_&SEG._MONTH_&CUR. AS M0 LEFT JOIN STAR60M_FINAL_&SEG._MONTH_&CUR. AS M1 ON M0.MARSHA = M1.MARSHA AND M0.DATE_NEW = DATEADD('MONTH',1,M1.DATE_NEW) AND M0.DATA_TYPE = M1.DATA_TYPE LEFT JOIN STAR60M_FINAL_&SEG._MONTH_&CUR. AS M2 ON M0.MARSHA = M2.MARSHA AND M0.DATE_NEW = DATEADD('MONTH',2,M2.DATE_NEW) AND M0.DATA_TYPE = M2.DATA_TYPE ORDER BY M0.DATE_NEW, M0.MARSHA, M0.STR_ID, M0.BRAND, M0.CURRENCY_TYPE, M0.CUR , M0.YRMNTH, M0.DATA_TYPE, M0.SCOMP , M0.DATASOURCE ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC53_new60month_newAW_vALL11marsha.sas
 CREATE TABLE STAR60m_L3_&SEG._&CUR._B AS select * FROM STAR60m_L3_&SEG._&CUR._A ;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC53_new60month_newAW_vALL11marsha.sas
" CREATE TABLE STAR60m_FINAL_&SEG._L3_&CUR. AS select m0.* , m1.MARAVAIL AS MARAVAILLY, m1.MARSOLD AS MARSOLDLY, m1.MARREV AS MARREVLY , m1.MKTAVAIL AS MKTAVAILLY, m1.MKTSOLD AS MKTSOLDLY, m1.MKTREV AS MKTREVLY , m1.MKTAVAIL_UNW AS MKTAVAIL_UNWLY, m1.MKTSOLD_UNW AS MKTSOLD_UNWLY, m1.MKTREV_UNW AS MKTREV_UNWLY , m2.MARAVAIL AS MARAVAILLY_2PRIOR, m2.MARSOLD AS MARSOLDLY_2PRIOR, m2.MARREV AS MARREVLY_2PRIOR , m2.MKTAVAIL AS MKTAVAILLY_2PRIOR, m2.MKTSOLD AS MKTSOLDLY_2PRIOR, m2.MKTREV AS MKTREVLY_2PRIOR , m2.MKTAVAIL_UNW AS MKTAVAIL_UNWLY_2PRIOR, m2.MKTSOLD_UNW AS MKTSOLD_UNWLY_2PRIOR, m2.MKTREV_UNW AS MKTREV_UNWLY_2PRIOR , CASE WHEN m0.DATA_CHECK = 3 THEN 1 ELSE 0 END AS COMPLETE_DATA FROM STAR60m_L3_&SEG._&CUR._B AS m0 LEFT JOIN STAR60m_L3_&SEG._&CUR._B AS m1 ON m0.MARSHA = m1.MARSHA AND m0.YRMNTH = m1.YRMNTH + 100 AND m0.DATA_TYPE = m1.DATA_TYPE LEFT JOIN STAR60m_L3_&SEG._&CUR._B AS m2 ON m0.MARSHA = m2.MARSHA AND m0.YRMNTH = m2.YRMNTH + 200 AND m0.DATA_TYPE = m2.DATA_TYPE ORDER BY m0.STR_ID, m0.DATA_TYPE , m0.YRMNTH ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC53_new60month_newAW_vALL11marsha.sas
" CREATE TABLE STAR60M_YTD_&SEG._&CUR._A AS SELECT M0.DATE_NEW AS DATE_NEW_ORIG, M0.YRMNTH AS YRMNTH_ORIG,EXTRACT(MONTH FROM M0.DATE_NEW) AS MONTH_ORIG, M0.DATA_TYPE AS DATA_TYPE_ORIG, M0.DATA_TYPE AS DATA_TYPE_PREV,EXTRACT(MONTH FROM M0.DATE_NEW) AS MONTH_PREV, M0.* FROM STAR60M_FINAL_&SEG._MONTH_&CUR. AS M0 UNION SELECT M0.DATE_NEW AS DATE_NEW_ORIG, M0.YRMNTH AS YRMNTH_ORIG,EXTRACT(MONTH FROM M0.DATE_NEW) AS MONTH_ORIG, M0.DATA_TYPE AS DATA_TYPE_ORIG, M1.DATA_TYPE AS DATA_TYPE_PREV,EXTRACT(MONTH FROM M1.DATE_NEW) AS MONTH_PREV, M1.* FROM STAR60M_FINAL_&SEG._MONTH_&CUR. AS M0 RIGHT JOIN STAR60M_FINAL_&SEG._MONTH_&CUR. AS M1 ON M0.MARSHA = M1.MARSHA AND M0.DATE_NEW = DATEADD('MONTH',1,M1.DATE_NEW) AND M0.DATA_TYPE = M1.DATA_TYPE UNION SELECT M0.DATE_NEW AS DATE_NEW_ORIG, M0.YRMNTH AS YRMNTH_ORIG,EXTRACT(MONTH FROM M0.DATE_NEW) AS MONTH_ORIG, M0.DATA_TYPE AS DATA_TYPE_ORIG, M1.DATA_TYPE AS DATA_TYPE_PREV,EXTRACT(MONTH FROM M1.DATE_NEW) AS MONTH_PREV, M1.* FROM STAR60M_FINAL_&SEG._MONTH_&CUR. AS M0 RIGHT JOIN STAR60M_FINAL_&SEG._MONTH_&CUR. AS M1 ON M0.MARSHA = M1.MARSHA AND M0.DATE_NEW = DATEADD('MONTH',2,M1.DATE_NEW) AND M0.DATA_TYPE = M1.DATA_TYPE UNION SELECT M0.DATE_NEW AS DATE_NEW_ORIG, M0.YRMNTH AS YRMNTH_ORIG,EXTRACT(MONTH FROM M0.DATE_NEW) AS MONTH_ORIG, M0.DATA_TYPE AS DATA_TYPE_ORIG, M1.DATA_TYPE AS DATA_TYPE_PREV,EXTRACT(MONTH FROM M1.DATE_NEW) AS MONTH_PREV, M1.* FROM STAR60M_FINAL_&SEG._MONTH_&CUR. AS M0 RIGHT JOIN STAR60M_FINAL_&SEG._MONTH_&CUR. AS M1 ON M0.MARSHA = M1.MARSHA AND M0.DATE_NEW = DATEADD('MONTH',3,M1.DATE_NEW) AND M0.DATA_TYPE = M1.DATA_TYPE UNION SELECT M0.DATE_NEW AS DATE_NEW_ORIG, M0.YRMNTH AS YRMNTH_ORIG,EXTRACT(MONTH FROM M0.DATE_NEW) AS MONTH_ORIG, M0.DATA_TYPE AS DATA_TYPE_ORIG, M1.DATA_TYPE AS DATA_TYPE_PREV,EXTRACT(MONTH FROM M1.DATE_NEW) AS MONTH_PREV, M1.* FROM STAR60M_FINAL_&SEG._MONTH_&CUR. AS M0 RIGHT JOIN STAR60M_FINAL_&SEG._MONTH_&CUR. AS M1 ON M0.MARSHA = M1.MARSHA AND M0.DATE_NEW = DATEADD('MONTH',4,M1.DATE_NEW) AND M0.DATA_TYPE = M1.DATA_TYPE UNION SELECT M0.DATE_NEW AS DATE_NEW_ORIG, M0.YRMNTH AS YRMNTH_ORIG,EXTRACT(MONTH FROM M0.DATE_NEW) AS MONTH_ORIG, M0.DATA_TYPE AS DATA_TYPE_ORIG, M1.DATA_TYPE AS DATA_TYPE_PREV,EXTRACT(MONTH FROM M1.DATE_NEW) AS MONTH_PREV, M1.* FROM STAR60M_FINAL_&SEG._MONTH_&CUR. AS M0 RIGHT JOIN STAR60M_FINAL_&SEG._MONTH_&CUR. AS M1 ON M0.MARSHA = M1.MARSHA AND M0.DATE_NEW = DATEADD('MONTH',5,M1.DATE_NEW) AND M0.DATA_TYPE = M1.DATA_TYPE UNION SELECT M0.DATE_NEW AS DATE_NEW_ORIG, M0.YRMNTH AS YRMNTH_ORIG,EXTRACT(MONTH FROM M0.DATE_NEW) AS MONTH_ORIG, M0.DATA_TYPE AS DATA_TYPE_ORIG, M1.DATA_TYPE AS DATA_TYPE_PREV,EXTRACT(MONTH FROM M1.DATE_NEW) AS MONTH_PREV, M1.* FROM STAR60M_FINAL_&SEG._MONTH_&CUR. AS M0 RIGHT JOIN STAR60M_FINAL_&SEG._MONTH_&CUR. AS M1 ON M0.MARSHA = M1.MARSHA AND M0.DATE_NEW = DATEADD('MONTH',6,M1.DATE_NEW) AND M0.DATA_TYPE = M1.DATA_TYPE UNION SELECT M0.DATE_NEW AS DATE_NEW_ORIG, M0.YRMNTH AS YRMNTH_ORIG,EXTRACT(MONTH FROM M0.DATE_NEW) AS MONTH_ORIG, M0.DATA_TYPE AS DATA_TYPE_ORIG, M1.DATA_TYPE AS DATA_TYPE_PREV,EXTRACT(MONTH FROM M1.DATE_NEW) AS MONTH_PREV, M1.* FROM STAR60M_FINAL_&SEG._MONTH_&CUR. AS M0 RIGHT JOIN STAR60M_FINAL_&SEG._MONTH_&CUR. AS M1 ON M0.MARSHA = M1.MARSHA AND M0.DATE_NEW = DATEADD('MONTH',7,M1.DATE_NEW) AND M0.DATA_TYPE = M1.DATA_TYPE UNION SELECT M0.DATE_NEW AS DATE_NEW_ORIG, M0.YRMNTH AS YRMNTH_ORIG,EXTRACT(MONTH FROM M0.DATE_NEW) AS MONTH_ORIG, M0.DATA_TYPE AS DATA_TYPE_ORIG, M1.DATA_TYPE AS DATA_TYPE_PREV,EXTRACT(MONTH FROM M1.DATE_NEW) AS MONTH_PREV, M1.* FROM STAR60M_FINAL_&SEG._MONTH_&CUR. AS M0 RIGHT JOIN STAR60M_FINAL_&SEG._MONTH_&CUR. AS M1 ON M0.MARSHA = M1.MARSHA AND M0.DATE_NEW = DATEADD('MONTH',8,M1.DATE_NEW) AND M0.DATA_TYPE = M1.DATA_TYPE UNION SELECT M0.DATE_NEW AS DATE_NEW_ORIG, M0.YRMNTH AS YRMNTH_ORIG,EXTRACT(MONTH FROM M0.DATE_NEW) AS MONTH_ORIG, M0.DATA_TYPE AS DATA_TYPE_ORIG, M1.DATA_TYPE AS DATA_TYPE_PREV,EXTRACT(MONTH FROM M1.DATE_NEW) AS MONTH_PREV, M1.* FROM STAR60M_FINAL_&SEG._MONTH_&CUR. AS M0 RIGHT JOIN STAR60M_FINAL_&SEG._MONTH_&CUR. AS M1 ON M0.MARSHA = M1.MARSHA AND M0.DATE_NEW = DATEADD('MONTH',9,M1.DATE_NEW) AND M0.DATA_TYPE = M1.DATA_TYPE UNION SELECT M0.DATE_NEW AS DATE_NEW_ORIG, M0.YRMNTH AS YRMNTH_ORIG,EXTRACT(MONTH FROM M0.DATE_NEW) AS MONTH_ORIG, M0.DATA_TYPE AS DATA_TYPE_ORIG, M1.DATA_TYPE AS DATA_TYPE_PREV,EXTRACT(MONTH FROM M1.DATE_NEW) AS MONTH_PREV, M1.* FROM STAR60M_FINAL_&SEG._MONTH_&CUR. AS M0 RIGHT JOIN STAR60M_FINAL_&SEG._MONTH_&CUR. AS M1 ON M0.MARSHA = M1.MARSHA AND M0.DATE_NEW = DATEADD('MONTH',10,M1.DATE_NEW) AND M0.DATA_TYPE = M1.DATA_TYPE UNION SELECT M0.DATE_NEW AS DATE_NEW_ORIG, M0.YRMNTH AS YRMNTH_ORIG,EXTRACT(MONTH FROM M0.DATE_NEW) AS MONTH_ORIG, M0.DATA_TYPE AS DATA_TYPE_ORIG, M1.DATA_TYPE AS DATA_TYPE_PREV,EXTRACT(MONTH FROM M1.DATE_NEW) AS MONTH_PREV, M1.* FROM STAR60M_FINAL_&SEG._MONTH_&CUR. AS M0 RIGHT JOIN STAR60M_FINAL_&SEG._MONTH_&CUR. AS M1 ON M0.MARSHA = M1.MARSHA AND M0.DATE_NEW = DATEADD('MONTH',11,M1.DATE_NEW) AND M0.DATA_TYPE = M1.DATA_TYPE ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC53_new60month_newAW_vALL11marsha.sas
" CREATE TABLE STAR60m_YTD_&SEG._&CUR._B AS select date_new_orig AS date_new, MARSHA, STR_ID, BRAND, CURRENCY_TYPE, CUR, YRMNTH_ORIG AS YRMNTH, 'YTD' AS TIME_TYPE, DATA_CATEGORY, DATA_TYPE_ORIG AS DATA_TYPE, SCOMP , DATASOURCE ,SUM( MARAVAIL) AS MARAVAIL, SUM( MARSOLD) AS MARSOLD, SUM( MARREV) AS MARREV ,SUM( MKTAVAIL_UNW) AS MKTAVAIL_UNW, SUM( MKTSOLD_UNW) AS MKTSOLD_UNW, SUM( MKTREV_UNW) AS MKTREV_UNW ,SUM( COMPLETE_DATA) AS DATA_CHECK , month_orig FROM STAR60m_YTD_&SEG._&CUR._A WHERE month_prev <= month_orig GROUP BY date_new_orig, MARSHA, STR_ID, BRAND, CURRENCY_TYPE, CUR, YRMNTH_ORIG, DATA_CATEGORY, DATA_TYPE_ORIG, SCOMP, DATASOURCE, month_orig ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC53_new60month_newAW_vALL11marsha.sas
" CREATE TABLE STAR60m_YTD_&SEG._&CUR._C AS select date_new, MARSHA, STR_ID, BRAND, CURRENCY_TYPE, CUR, YRMNTH, DATA_CATEGORY, DATA_TYPE, TIME_TYPE, CONCAT_WS( '_',TIME_TYPE,DATA_TYPE) AS TIMEF, SCOMP , DATASOURCE , MARAVAIL, MARSOLD, MARREV , MKTAVAIL_UNW, MKTSOLD_UNW, MKTREV_UNW , MARAVAIL / MKTAVAIL_UNW * MKTAVAIL_UNW AS MKTAVAIL , MARAVAIL / MKTAVAIL_UNW * MKTSOLD_UNW AS MKTSOLD , MARAVAIL / MKTAVAIL_UNW * MKTREV_UNW AS MKTREV , DATA_CHECK , month_orig FROM STAR60m_YTD_&SEG._&CUR._B ORDER BY date_new, MARSHA, STR_ID, BRAND, CURRENCY_TYPE, CUR, YRMNTH, DATA_TYPE, TIME_TYPE, SCOMP , DATASOURCE , MARAVAIL, MARSOLD, MARREV , MKTAVAIL_UNW, MKTSOLD_UNW, MKTREV_UNW , MARAVAIL , DATA_CHECK , month_orig ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC53_new60month_newAW_vALL11marsha.sas
" CREATE TABLE STAR60m_FINAL_&SEG._YTD_&CUR. AS select m0.* , m1.MARAVAIL AS MARAVAILLY, m1.MARSOLD AS MARSOLDLY, m1.MARREV AS MARREVLY , m1.MKTAVAIL_UNW AS MKTAVAIL_UNWLY, m1.MKTSOLD_UNW AS MKTSOLD_UNWLY, m1.MKTREV_UNW AS MKTREV_UNWLY , m1.MKTAVAIL AS MKTAVAILLY, m1.MKTSOLD AS MKTSOLDLY, m1.MKTREV AS MKTREVLY , m2.MARAVAIL AS MARAVAILLY_2PRIOR, m2.MARSOLD AS MARSOLDLY_2PRIOR, m2.MARREV AS MARREVLY_2PRIOR , m2.MKTAVAIL_UNW AS MKTAVAIL_UNWLY_2PRIOR, m2.MKTSOLD_UNW AS MKTSOLD_UNWLY_2PRIOR, m2.MKTREV_UNW AS MKTREV_UNWLY_2PRIOR , m2.MKTAVAIL AS MKTAVAILLY_2PRIOR, m2.MKTSOLD AS MKTSOLDLY_2PRIOR, m2.MKTREV AS MKTREVLY_2PRIOR , CASE WHEN m0.DATA_CHECK = m0.month_orig THEN 1 ELSE 0 END AS COMPLETE_DATA FROM STAR60m_YTD_&SEG._&CUR._C AS m0 LEFT JOIN STAR60m_YTD_&SEG._&CUR._C AS m1 ON m0.MARSHA = m1.MARSHA AND m0.YRMNTH = m1.YRMNTH + 100 AND m0.DATA_TYPE = m1.DATA_TYPE LEFT JOIN STAR60m_YTD_&SEG._&CUR._C AS m2 ON m0.MARSHA = m2.MARSHA AND m0.YRMNTH = m2.YRMNTH + 200 AND m0.DATA_TYPE = m2.DATA_TYPE ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC53_new60month_newAW_vALL11marsha.sas
"CREATE TABLE STAR60m_FINAL_&SEG._YTD_&CUR. AS ( SELECT  *  , FORMAT(date_new, yymmddn8.) AS date_new  FROM STAR60m_FINAL_&SEG._YTD_&CUR. );",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC53_new60month_newAW_vALL11marsha.sas
ALTER TABLE STAR60m_FINAL_&SEG._YTD_&CUR. DROP COLUMN month_orig ;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC53_new60month_newAW_vALL11marsha.sas
" CREATE TABLE STAR60m_FINAL_&SEG._&TIMEF._&CUR._1 AS ( SELECT MARSHA, STR_ID, BRAND, CURRENCY_TYPE, CUR, YRMNTH, DATA_CATEGORY, DATA_TYPE, TIME_TYPE, TIMEF, SCOMP, COMPLETE_DATA, DATASOURCE, MARAVAIL, MARSOLD, MARREV, MKTAVAIL, MKTSOLD, MKTREV, MKTAVAIL_UNW, MKTSOLD_UNW, MKTREV_UNW, MARAVAILLY, MARSOLDLY, MARREVLY, MKTAVAILLY, MKTSOLDLY, MKTREVLY, MKTAVAIL_UNWLY, MKTSOLD_UNWLY, MKTREV_UNWLY, MARAVAILLY_2PRIOR, MARSOLDLY_2PRIOR, MARREVLY_2PRIOR, MKTAVAILLY_2PRIOR, MKTSOLDLY_2PRIOR, MKTREVLY_2PRIOR, MKTAVAIL_UNWLY_2PRIOR, MKTSOLD_UNWLY_2PRIOR, MKTREV_UNWLY_2PRIOR , &STARMNTH AS ASOF_YRMO  FROM STAR60m_FINAL_&SEG._&TIMEF._&CUR. );",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC53_new60month_newAW_vALL11marsha.sas
CREATE TABLE STR_CC.STAR60m_FINAL_&SEG._&TIMEF._&CUR. AS (SELECT * FROM STAR60m_FINAL_&SEG._&TIMEF._&CUR._1 ORDER BY MARSHA);,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC53_new60month_newAW_vALL11marsha.sas
" CREATE TABLE STR_CC.STAR60m_REG_ONLY_FINAL AS ( SELECT  *  , STR_ID AS STAR_ID , &STARMNTH AS ASOF_YRMO  FROM STAR60m_FINAL_REG_L12_CC UNION ALL SELECT  *  , STR_ID AS STAR_ID , &STARMNTH AS ASOF_YRMO  FROM STAR60m_FINAL_REG_L12_LC UNION ALL SELECT  *  , STR_ID AS STAR_ID , &STARMNTH AS ASOF_YRMO  FROM STAR60m_FINAL_REG_L3_CC UNION ALL SELECT  *  , STR_ID AS STAR_ID , &STARMNTH AS ASOF_YRMO  FROM STAR60m_FINAL_REG_L3_LC UNION ALL SELECT  *  , STR_ID AS STAR_ID , &STARMNTH AS ASOF_YRMO  FROM STAR60m_FINAL_REG_MONTH_CC UNION ALL SELECT  *  , STR_ID AS STAR_ID , &STARMNTH AS ASOF_YRMO  FROM STAR60m_FINAL_REG_MONTH_LC UNION ALL SELECT  *  , STR_ID AS STAR_ID , &STARMNTH AS ASOF_YRMO  FROM STAR60m_FINAL_REG_YTD_CC UNION ALL SELECT MARSHA, BRAND, CURRENCY_TYPE, CUR, YRMNTH, TIMEF, SCOMP, DATASOURCE, MARAVAIL, MARSOLD, MARREV, MKTAVAIL, MKTSOLD, MKTREV, MKTAVAIL_UNW, MKTSOLD_UNW, MKTREV_UNW, MARAVAILLY, MARSOLDLY, MARREVLY, MKTAVAILLY, MKTSOLDLY, MKTREVLY, MKTAVAIL_UNWLY, MKTSOLD_UNWLY, MKTREV_UNWLY , STR_ID AS STAR_ID , &STARMNTH AS ASOF_YRMO  FROM STAR60m_FINAL_REG_YTD_LC);",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC53_new60month_newAW_vALL11marsha.sas
" CREATE TABLE AW_STG_BUS_DBO.STR_60MONTH_PRE_CGC_STG (  MARSHA VARCHAR( 5), STAR_ID INTEGER, brand VARCHAR( 2), CURRENCY_TYPE VARCHAR( 12), cur VARCHAR( 3), YrMnth INTEGER, TIMEF VARCHAR( 11), SCOMP VARCHAR( 1), datasource VARCHAR( 4), MARAVAIL INTEGER, MARSOLD INTEGER, MARREV DOUBLE, MKTAVAIL INTEGER, MKTSOLD DOUBLE, MKTREV DOUBLE, MKTAVAIL_UNW INTEGER, MKTSOLD_UNW DOUBLE, MKTREV_UNW DOUBLE, MARAVAILLY INTEGER, MARSOLDLY INTEGER, MARREVLY DOUBLE, MKTAVAILLY INTEGER, MKTSOLDLY DOUBLE, MKTREVLY DOUBLE, MKTAVAIL_UNWLY INTEGER, MKTSOLD_UNWLY DOUBLE, MKTREV_UNWLY DOUBLE, ASOF_YRMO INTEGER ) ) by odbc ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC53_new60month_newAW_vALL11marsha.sas
INSERT INTO TABLE AWPROD.STR_60MONTH_PRE_CGC_STG SELECT * FROM STR_CC.STAR60m_REG_ONLY_FINAL;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC53_new60month_newAW_vALL11marsha.sas
   INSERT INTO AW_STG_BUS_DBO.STR_60MONTH_PRE_CGC Select * FROM AW_STG_BUS_DBO.STR_60MONTH_PRE_CGC_STG ) by odbc ;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC53_new60month_newAW_vALL11marsha.sas
   DROP TABLE AW_STG_BUS_DBO.STR_60MONTH_PRE_CGC_STG ) by odbc ;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC53_new60month_newAW_vALL11marsha.sas
" CREATE TABLE AW_CMP_DBO.STR_MONTHLY_DATA_HIST_STG (  MARSHA VARCHAR( 5), STR_ID INTEGER, BRAND VARCHAR( 2), CURRENCY_TYPE VARCHAR( 12), CUR VARCHAR( 3), ASOF_YRMO INTEGER, YrMnth INTEGER, DATA_CATEGORY VARCHAR( 15), DATA_TYPE VARCHAR( 5), TIME_TYPE VARCHAR( 6), TIMEF VARCHAR( 12), SCOMP VARCHAR( 1), COMPLETE_DATA INTEGER, datasource VARCHAR( 4), MARAVAIL INTEGER, MARSOLD INTEGER, MARREV DOUBLE, MKTAVAIL INTEGER, MKTSOLD DOUBLE, MKTREV DOUBLE, MKTAVAIL_UNW INTEGER, MKTSOLD_UNW DOUBLE, MKTREV_UNW DOUBLE, MARAVAILLY INTEGER, MARSOLDLY INTEGER, MARREVLY DOUBLE, MKTAVAILLY INTEGER, MKTSOLDLY DOUBLE, MKTREVLY DOUBLE, MKTAVAIL_UNWLY INTEGER, MKTSOLD_UNWLY DOUBLE, MKTREV_UNWLY DOUBLE, MARAVAILLY_2PRIOR INTEGER, MARSOLDLY_2PRIOR INTEGER, MARREVLY_2PRIOR DOUBLE, MKTAVAILLY_2PRIOR INTEGER, MKTSOLDLY_2PRIOR DOUBLE, MKTREVLY_2PRIOR DOUBLE, MKTAVAIL_UNWLY_2PRIOR INTEGER, MKTSOLD_UNWLY_2PRIOR DOUBLE, MKTREV_UNWLY_2PRIOR DOUBLE ) ) by odbc ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC53_new60month_newAW_vALL11marsha.sas
INSERT INTO TABLE AWPROD.STR_MONTHLY_DATA_HIST_STG SELECT * FROM STR_CC.STAR60m_FINAL_&SEG._&TIMEF._&CUR.;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC53_new60month_newAW_vALL11marsha.sas
   INSERT INTO AW_CMP_DBO.STR_MONTHLY_DATA Select * FROM AW_CMP_DBO.STR_MONTHLY_DATA_HIST_STG ) by odbc ;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC53_new60month_newAW_vALL11marsha.sas
   DROP TABLE AW_CMP_DBO.STR_MONTHLY_DATA_HIST_STG ) by odbc ;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_str_monthly_reporting_CC53_new60month_newAW_vALL11marsha.sas
" CREATE TABLE work.WDWE AS  (  select plu.marsha ,plu.brnd ,plu.hotname ,plu.MF ,plu.domint ,plu.RD ,str.SCOMP AS WCOMP ,'OCT' AS MNTH ,'' AS Custom ,str.timef ,plu.region ,SUM( str.maravail) AS maravail ,SUM( str.marsold) AS marsold ,SUM( str.marrev) AS marrev ,SUM( str.maravailly) AS maravailly ,SUM( str.marsoldly) AS marsoldly ,SUM( str.marrevly) AS marrevly ,SUM( str.mktavail) AS mktavail ,SUM( str.mktsold) AS mktsold ,SUM( str.mktrev) AS mktrev ,SUM( str.mktavailly) AS mktavailly ,SUM( str.mktsoldly) AS mktsoldly ,SUM( str.mktrevly) AS mktrevly , 1 AS Include ,CASE WHEN (  SUM( str.maravail) <> 0 AND SUM( str.mktavail) <> 0 ) THEN SUM( str.marrev) / SUM( str.maravail) / (  SUM ( str.mktrev) / SUM( str.mktavail) ) 100 ELSE NULL END AS RevPAR_Index, CASE WHEN (  SUM( str.maravail) <> 0 AND SUM( str.mktavail) <> 0 AND SUM( str.maravailly) <> 0 AND SUM( str.mktavailly) <> 0 ) THEN SUM( str.marrev) / SUM( str.maravail) / (  SUM( str.mktrev) / SUM( str.mktavail) ) * 100 / (  SUM( str.marrevly) / SUM( str.maravailly) / (  SUM( str.mktrevly) / SUM( str.mktavailly) ) * 100 ) - 1 ELSE NULL END AS RPI_chg, CASE WHEN (  SUM( str.marsold) <> 0 AND SUM( str.mktsold) <> 0 ) THEN (  SUM( str.marsold) / SUM( str.mktsold) ) * 100 ELSE NULL END AS Occ_Index, CASE WHEN (  SUM( str.marsold) <> 0 AND SUM( str.mktsold) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.mktsoldly) <> 0 ) THEN (  (  SUM( str.marsold) / SUM( str.mktsold) ) * 100 ) / (  (  SUM( str.marsoldly) / SUM( str.mktsoldly) ) * 100 ) - 1 ELSE NULL END AS OI_chg, CASE WHEN (  SUM( str.marsold) <> 0 AND SUM( str.mktsold) <> 0 ) THEN SUM( str.marrev) / SUM( str.marsold) / (  SUM( str.mktrev) / SUM( str.mktsold) ) * 100 ELSE NULL END AS ADR_Index, CASE WHEN (  SUM( str.marsold) <> 0 AND SUM( str.mktsold) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.mktsoldly) <> 0 AND SUM( str.marrevly) <> 0 AND SUM( str.mktrev) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.mktrevly) <> 0 AND SUM( str.mktsoldly) <> 0 ) THEN SUM( str.marrev) / SUM( str.marsold) / (  SUM( str.mktrev) / SUM( str.mktsold) ) * 100 / (  SUM( str.marrevly) / SUM( str.marsoldly) / (  SUM( str.mktrevly) / SUM( str.mktsoldly) ) * 100 ) - 1 ELSE NULL END AS ADR_chg ,CASE WHEN ( SUM( str.maravail) <> 0 AND SUM( str.marsold) <> 0) THEN SUM( str.marsold)/SUM( str.maravail) END AS MarOcc ,CASE WHEN ( SUM( str.marsold) <> 0 ) THEN SUM( str.marrev)/SUM( str.marsold) END AS MarADR ,CASE WHEN ( SUM( str.marsold) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.marrevly) <> 0 ) THEN ( ( SUM( str.marrev)/SUM( str.marsold))- ( SUM( str.marrevly)/SUM( str.marsoldly)))/( SUM( str.marrevly)/SUM( str.marsoldly)) END AS MarADRChg ,CASE WHEN ( SUM( str.maravail) <> 0) THEN SUM( str.marrev)/SUM( str.maravail) END AS MarRevPar , CASE WHEN ( SUM( str.maravail) <> 0 AND SUM( str.maravailly) <> 0 AND SUM( str.marrevly) <> 0 ) THEN ( ( SUM( str.marrev)/SUM( str.maravail))- ( SUM( str.marrevly)/SUM( str.maravailly)))/( SUM( str.marrevly)/SUM( str.maravailly)) END AS MarREVPARChg , CASE WHEN ( SUM( str.mktavail) <> 0) THEN SUM( str.mktsold) /SUM( str.mktavail) END AS MktOcc , CASE WHEN ( SUM( str.mktsold) <> 0 ) THEN SUM( str.mktrev)/SUM( str.mktsold) END AS MktADR ,CASE WHEN ( SUM( str.mktavail) <> 0) THEN SUM( str.mktrev)/SUM( str.mktavail) END AS MktRevPar ,CASE WHEN (  SUM( str.maravail) <> 0 AND SUM( str.mktavail) <> 0 AND SUM( str.maravailly) <> 0 AND SUM( str.mktavailly) <> 0 AND SUM( str.mktrev) <> 0 AND SUM( str.mktrevly) <> 0 AND SUM( str.marrev) <> 0 AND SUM( str.marrevly) <> 0 ) THEN CASE WHEN SUM( str.marrev) / SUM( str.maravail) / (  SUM( str.mktrev) / SUM( str.mktavail) ) * 100 / (  SUM( str.marrevly) / SUM( str.maravailly) / (  SUM( str.mktrevly) / SUM( str.mktavailly) ) * 100 ) - 1 >= 0 THEN 1 ELSE 0 END ELSE NULL END AS RPI_Up, CASE WHEN (  SUM( str.maravail) <> 0 AND SUM( str.mktavail) <> 0 AND SUM( str.maravailly) <> 0 AND SUM( str.mktavailly) <> 0 AND SUM( str.mktrev) <> 0 AND SUM( str.mktrevly) <> 0 AND SUM( str.marrev) <> 0 AND SUM( str.marrevly) <> 0 ) THEN CASE WHEN SUM( str.marrev) / SUM( str.maravail) / (  SUM( str.mktrev) / SUM( str.mktavail) ) * 100 / (  SUM( str.marrevly) / SUM( str.maravailly) / (  SUM( str.mktrevly) / SUM( str.mktavailly) ) * 100 ) - 1 >= 0 THEN 0 ELSE 1 END ELSE NULL END AS RPI_Down, CASE WHEN (  SUM( str.marsold) <> 0 AND SUM( str.mktsold) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.mktsoldly) <> 0 ) THEN CASE WHEN (  (  SUM( str.marsold) / SUM( str.mktsold) ) * 100 ) / (  (  SUM( str.marsoldly) / SUM( str.mktsoldly) ) * 100 ) - 1 > 0 THEN 1 ELSE 0 END ELSE NULL END AS OI_Up, CASE WHEN (  SUM( str.marsold) <> 0 AND SUM( str.mktsold) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.mktsoldly) <> 0 ) THEN CASE WHEN (  (  SUM( str.marsold) / SUM( str.mktsold) ) * 100 ) / (  (  SUM( str.marsoldly) / SUM( str.mktsoldly) ) * 100 ) - 1 > 0 THEN 0 ELSE 1 END ELSE NULL END AS OI_Down, CASE WHEN (  SUM( str.marsold) <> 0 AND SUM( str.mktsold) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.mktsoldly) <> 0 AND SUM( str.marrevly) <> 0 AND SUM( str.mktrev) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.mktrevly) <> 0 AND SUM( str.mktsoldly) <> 0 ) THEN CASE WHEN SUM( str.marrev) / SUM( str.marsold) / (  SUM( str.mktrev) / SUM( str.mktsold) ) * 100 / (  SUM( str.marrevly) / SUM( str.marsoldly) / (  SUM( str.mktrevly) / SUM( str.mktsoldly) ) * 100 ) - 1 > 0 THEN 1 ELSE 0 END ELSE NULL END AS ADR_UP, CASE WHEN (  SUM( str.marsold) <> 0 AND SUM( str.mktsold) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.mktsoldly) <> 0 AND SUM( str.marrevly) <> 0 AND SUM( str.mktrev) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.mktrevly) <> 0 AND SUM( str.mktsoldly) <> 0 ) THEN CASE WHEN SUM( str.marrev) / SUM( str.marsold) / (  SUM( str.mktrev) / SUM( str.mktsold) ) * 100 / (  SUM( str.marrevly) / SUM( str.marsoldly) / (  SUM( str.mktrevly) / SUM( str.mktsoldly) ) * 100 ) - 1 > 0 THEN 0 ELSE 1 END ELSE NULL END AS ADR_Down, plu.acomp, plu.owner, plu.manager, plu.franchisee, plu.rd, plu.str_market, plu.cluster_name, plu.opendate, '' AS high_impact, plu.mvp, '' AS redo_mn, '' AS redo_ytd, plu.gen, plu.sfo_area, '' AS sfo_leader, plu.sfo_market, '' AS sfogroup, plu.hCLASS, plu.avp, plu.sub_brand, plu.misw_flag, plu.division FROM aw_cmp_dbo.STR_MONTHLY_DATA str LEFT JOIN aw_TGT_BUS_DBO.PROPERTY_MASTER_HIST PLU ON str.marsha = plu.marsha AND str.asof_yrmo = plu.asof_yrmo WHERE str.timef IN ( 'MONTH_WD','MONTH_WE','LAST3_WD','LAST3_WE','LAST12_WD','LAST12_WE','YTD_WD','YTD_WE') AND str.Currency_type = 'Constant USD' AND str.asof_yrmo = ( select max( asof_yrmo)from aw_cmp_dbo.STR_MONTHLY_DATA) AND str.yrmnth = ( select max( yrmnth)from aw_cmp_dbo.STR_MONTHLY_DATA) GROUP BY plu.marsha, plu.brnd, str.scomp, str.timef, plu.hotname, plu.mf, plu.domint, plu.rd, plu.acomp, plu.region, plu.owner, plu.manager, plu.franchisee, plu.rd, plu.str_market, plu.cluster_name, plu.opendate, plu.mvp, plu.gen, plu.sfo_area, plu.sfo_market, plu.hCLASS, plu.avp, plu.sub_brand, plu.misw_flag, plu.division ORDER BY MARSHA   ) ;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_wcomp_aw.sas
"CREATE TABLE WDWECRUNCH AS ( SELECT  * , CASE WHEN  maravail<>0  THEN marsold/maravail ELSE 0 END AS MAROCC, CASE WHEN  MARAVAILLY<>0  THEN MARSOLDLY/MARAVAILLY ELSE 0 END AS MAROCCLY FROM WDWE );",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_wcomp_aw.sas
ALTER TABLE WDWECRUNCH DROP COLUMN marocc ;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_wcomp_aw.sas
" CREATE TABLE WDWECRUNCH AS ( SELECT  *  , ( MAROCC - MAROCCLY ) AS MARPTCHG  FROM WDWECRUNCH );",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_wcomp_aw.sas
CREATE TABLE WDWECRUNCH AS ( SELECT  *  FROM WDWECRUNCH );,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_wcomp_aw.sas
ALTER TABLE WDWECRUNCH DROP COLUMN MAROCCLY ;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_wcomp_aw.sas
" CREATE TABLE WDWECRUNCH_FINAL AS SELECT MARSHA, BRND, HOTNAME, MF, DOMINT, RD, WCOMP, MNTH, CUSTOM, TIMEF, REGION, MARAVAIL, MARSOLD, MARREV, MARAVAILLY, MARSOLDLY, MARREVLY, MKTAVAIL, MKTSOLD, MKTREV, MKTAVAILLY, MKTSOLDLY, MKTREVLY, INCLUDE, REVPAR_INDEX, RPI_CHG, OCC_INDEX, OI_CHG, ADR_INDEX, ADR_CHG, MAROCC, MARPTCHG, MARADR, MARADRCHG, MARREVPAR, MARREVPARCHG, MKTOCC, MKTADR, MKTREVPAR, RPI_UP, RPI_DOWN, OI_UP, OI_DOWN, ADR_UP, ADR_DOWN, ACOMP, OWNER, MANAGER, FRANCHISEE, RD, STR_MARKET, CLUSTER_NAME, OPENDATE, HIGH_IMPACT, RD AS RD_1, MVP, REDO_MN, REDO_YTD, GEN, SFO_AREA, SFO_LEADER, SFO_MARKET, SFOGROUP, HCLASS, AVP, SUB_BRAND, MISW_FLAG, DIVISION FROM WDWECRUNCH;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_wcomp_aw.sas
" CREATE TABLE WDWECRUNCH_FINAL AS ( SELECT  * , CASE WHEN  TIMEF = 'LAST12_WD'  THEN 'L12-WD' WHEN  TIMEF = 'LAST12_WE'  THEN 'L12-WE' WHEN  TIMEF = 'LAST3_WD'  THEN 'L3-WD' WHEN  TIMEF = 'LAST3_WE'  THEN 'L3-WE' WHEN  TIMEF = 'MONTH_WD'  THEN 'MN-WD' WHEN  TIMEF = 'MONTH_WE'  THEN 'MN-WE' WHEN  TIMEF = 'YTD_WD'  THEN 'YTD-WD' WHEN  TIMEF = 'YTD_WE'  THEN 'YTD-WE' END AS TIMEF FROM WDWECRUNCH_FINAL );",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_wcomp_aw.sas
"SELECT * FROM WDWECRUNCH_FINAL ORDER BY MARSHA ,TIMEF;",MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_wcomp_aw.sas
CREATE TABLE '\\Hdqmdm1fpcl4v1\lodg-bi\Production\Star_Reporting_Monthly\02_CC\WDWE_CRUNCH\WDWE_AW.csv' AS ( SELECT * FROM WDWECRUNCH_FINAL) ;,MDP_Migration_AW_Code_1-10-2020_1709_CX_RM_Analytics_-_DSP_wcomp_aw.sas
 CREATE TABLE HI.PLU_Master AS  (  SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER AS a  ) ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
" CREATE TABLE PLU_TC AS select a.*, ( CASE WHEN a.Division='AM' AND a.Region IN ( 'E_', 'W_','C_') THEN 'US/Canada' when a.Division='AM' AND a.Region IN ( 'S_') THEN 'CALA' when a.Division='EU' THEN 'Europe' when a.Division='PA' THEN 'APAC' when a.Division='ME' THEN 'MEA' ELSE 'Not Avail' end) AS Division_Category, ( CASE WHEN a.Division='AM' AND a.Region IN ( 'E_', 'W_') THEN 'Americas/US' when a.Division='AM' AND a.Region='S_' THEN 'Americas/CALA' when a.Division='AM' AND a.Region='C_' THEN 'Americas/Canada' when a.Division='EU' THEN 'Intl/Europe' when a.Division='PA' THEN 'Intl/APAC' when a.Division='ME' THEN 'Intl/MEA' ELSE 'Not Avail' end) AS Region_Category, ( CASE WHEN a.BRND IN ( 'RZ','EB','BG','JW','LC','ST','WH','XR','FS','BR','CC','AK','DE','WI','SI','MD','DS','TX','GE') THEN 'Full Service Brands' when a.BRND IN ( 'CY','FI','SH','AR','OX','AL','4P','FP','PR','RI','TS','EL') THEN 'Select Service Brands' when a.BRND IN ( 'ZC','MV','ER','VB','GX','EE','NR','NO','OI') THEN 'Excluded Brands' ELSE 'Unassigned/Not Avail' end) AS Brand_Category, ( CASE WHEN a.BRND IN ( 'RZ','EB','BG','JW','LC','ST','WH','XR') THEN 'Luxury Brands' when a.BRND IN ( 'FS','BR','CC','AK','DE','WI','SI','MD','DS','TX','GE') THEN 'Premium Brands' when a.BRND IN ( 'CY','FI','SH','AR','OX','AL','4P','FP','PR') THEN 'Modern Essentials Brands' when a.BRND IN ( 'RI','TS','EL') THEN 'Extended Stay Brands' when a.BRND IN ( 'ZC','MV','ER','VB','GX','EE','NR','NO','OI') THEN 'Excluded Brands' ELSE 'Unassigned/Not Avail' end) AS Brand_Type FROM HI.PLU_Master AS a ORDER BY a.MISW_Flag, a.Marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
 CREATE TABLE work.TREASFX_FCST AS  (  SELECT * FROM AW_TGT_BUS_DBO.TREASFX_FCST AS a  ) ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
"SELECT * FROM work.TREASFX_FCST ORDER BY YrMon ,Curr_Code;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
 CREATE TABLE HI.PLU_SOTB AS  (  SELECT * FROM AW_REV_DBO.PLU_SOTB AS a  ) ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
" CREATE TABLE Finance_Comp AS ( SELECT MARSHA, ACOMP, ACOMP AS ACOMP_SotbACOMP_Sotb AS ACOMP FROM HI.PLU_SOTB );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
" CREATE TABLE work.PLU_SOTB AS select b.MARSHA, b.ACOMP_Sotb,a.* FROM HI.PLU_SOTB AS a INNER JOIN Finance_Comp AS b ON a.MARSHA=b.MARSHA ORDER BY b.MARSHA;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
 CREATE TABLE FB.FIN_FORECASTACTUALS_FOODBEV_Raw AS  (  SELECT * FROM AW_TGT_BUS_DBO.FIN_FORECASTACTUALS_FOODBEV AS a  ) ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
 CREATE TABLE test_data2 AS ( SELECT  *  FROM Data_asof&YrMon.  whereMARSHA='NYCEX' AND year=2017);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
" CREATE TABLE Outlet_Count1 AS select a.Data_YrMon, a.Year, a.Month_Name, a.MARSHA, a.FB_Category, a.FB_Group, a.FB_Type, SUM( a.Outlet_seats) AS Outlet_seats, SUM( a.Rev_LCL) AS Rev_LCL, SUM( a.Rev_CUSD) AS Rev_CUSD FROM Data_asof&YrMon. AS a GROUP BY a.Data_YrMon, a.Year, a.Month_Name, a.MARSHA, a.FB_Category, a.FB_Group, a.FB_Type;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
" CREATE TABLE Outlet_Count2 AS ( SELECT  * , CASE WHEN  Rev_LCL>0  THEN 1 ELSE 0 END AS Outlet_Count ELSE 0 FROM Outlet_Count1  WHERE FB_Category='Outlets');",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
" CREATE TABLE Outlet_Count3 AS select a.Data_YrMon, a.Year, a.Month_Name, a.MARSHA, a.FB_Category, a.FB_Group, a.FB_Type, SUM( a.Rev_LCL) AS Rev_LCL, SUM( a.Rev_CUSD) AS Rev_CUSD, SUM( a.Outlet_seats) AS Outlet_seats, SUM( a.Outlet_Count) AS Outlet_Count FROM Outlet_Count2 AS a GROUP BY a.Data_YrMon, a.Year, a.Month_Name, a.MARSHA, a.FB_Category, a.FB_Group, a.FB_Type;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
" CREATE TABLE Data_0 AS select a.*, coalesce( b.Outlet_Count,0) AS Outlet_Count, coalesce( b.Outlet_Seats,0) AS Seats FROM Data_asof&YrMon. AS a LEFT JOIN Outlet_Count3 AS b ON a.FB_Category='Outlets' AND a.Dept_Category='Outlets/Outlet Stat' AND a.Metric_Level='Outlet Stat' AND a.Data_YrMon=b.Data_YrMon AND a.MARSHA=b.MARSHA AND a.FB_Category=b.FB_Category AND a.FB_Group=b.FB_Group AND a.FB_Type=b.FB_Type ORDER BY a.Data_YrMon, a.MARSHA, a.Year, a.Quarter, a.Month_Name, a.Month;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
" CREATE TABLE Data_1 AS select a.Data_YrMon, a.MARSHA, a.Curr_Code, a.Fx_Rate, a.Dept_Category, a.Metric_Level, a.Detail_Category, a.FB_Category, a.FB_Group, a.FB_Type, a.Year, a.Quarter, a.Mon, a.Month_Name, a.Month, a.Day_Count, a.Rpt_YrMon, SUM( a.Outlet_Count) AS Outlet_Count, SUM( a.Seats) AS Seats, SUM( a.Cater_Sq_feet) AS Cater_Sq_feet, SUM( a.Cater_Sq_Meters) AS Cater_Sq_Meters, SUM( a.Meal_Pd_Count) AS Meal_Pd_Count, SUM( a.Cover_Count) AS Covers, SUM( a.Rev_LCL) AS Rev_LCL, SUM( a.Rev_CUSD) AS Rev_CUSD FROM Data_0 AS a GROUP BY a.Data_YrMon, a.MARSHA, a.Curr_Code, a.Fx_Rate, a.Dept_Category, a.Metric_Level, a.Detail_Category, a.FB_Category, a.FB_Group, a.FB_Type, a.Year, a.Quarter, a.Mon, a.Month_Name, a.Month, a.Day_Count, a.Rpt_YrMon;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
" CREATE TABLE Data_2 AS ( SELECT  *  , ( BNQT_Group+BNQT_Local+BNQT_Other ) AS BNQT_ALL , CASE WHEN  FB_Type=""Banquets- Group"" AND Rev_LCL>0  THEN 1 ELSE 0 END AS BNQT_Group, CASE WHEN  FB_Type=""Banquets- Local"" AND Rev_LCL>0  THEN 1 ELSE 0 END AS BNQT_Local, CASE WHEN  FB_Type=""Banquets- Other"" AND Rev_LCL>0  THEN 1 ELSE 0 END AS BNQT_Other, CASE WHEN  FB_Category= ""Catering"" AND Detail_Category IN ( 'Breakfast','Lunch','Dinner')  THEN 1 ELSE 0 END AS Day_Part_Count FROM Data_1 );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
 CREATE TABLE Space_1 AS ( SELECT  *  FROM Data_asof&YrMon.  WHERE FB_Category='Catering');,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
" CREATE TABLE Space_2 AS select a.Data_YrMon, a.Year, a.Month_Name, a.MARSHA, a.FB_Category, a.FB_Group, a.FB_Type, SUM( a.Cater_Sq_feet) AS Sq_Feet, SUM( a.Cater_Sq_Meters) AS Sq_Meters FROM Space_1 AS a GROUP by a.Data_YrMon, a.Year, a.Month_Name, a.MARSHA, a.FB_Category, a.FB_Group, a.FB_Type;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
" CREATE TABLE Space_3 AS ( SELECT  * , CASE WHEN  Sq_Feet>0 AND Sq_Meters>0  THEN ""Both"" WHEN   Sq_Feet>0  THEN ""Feet"" WHEN   Sq_Meters>0  THEN ""Meters"" ELSE ""not avail"" END AS Space_Metric FROM Space_2 );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
" CREATE TABLE Data_3 AS select a.*, coalesce( b.Space_Metric,""not avail"") AS Space_Metric, coalesce( b.Sq_Feet,0) AS Sq_Feet, coalesce( b.Sq_Meters,0) AS Sq_Meters FROM Data_2 AS a LEFT JOIN Space_3 AS b ON a.FB_Category='Catering' AND a.Metric_Level='Outlet Stat' AND a.Data_YrMon=b.Data_YrMon AND a.MARSHA=b.MARSHA AND a.FB_Category=b.FB_Category AND a.FB_Group=b.FB_Group AND a.FB_Type=b.FB_Type ORDER BY a.Data_YrMon, a.MARSHA, a.Year, a.Quarter, a.Month_Name, a.Month;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
" CREATE TABLE Data_3a AS select a.Data_YrMon, a.MARSHA, a.FB_Category, a.FB_Group, a.FB_Type, a.Year, a.Quarter, a.Mon, a.Month_Name, a.Month, a.Day_Count, a.Rpt_YrMon, SUM( a.Outlet_Count) AS Outlet_Count, SUM( a.Seats) AS Seats, SUM( a.Sq_Feet) AS Sq_Feet, SUM( a.Sq_Meters) AS Sq_Meters FROM Data_3 AS a GROUP BY a.Data_YrMon, a.MARSHA, a.FB_Category, a.FB_Group, a.FB_Type, a.Year, a.Quarter, a.Mon, a.Month_Name, a.Month, a.Day_Count, a.Rpt_YrMon;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
" CREATE TABLE Data_3b AS select a.Data_YrMon, a.MARSHA, a.Curr_Code, a.Fx_Rate, a.Dept_Category, a.Metric_Level, a.Detail_Category, a.FB_Category, a.FB_Group, a.FB_Type, a.Year, a.Quarter, a.Mon, a.Month_Name, a.Month, a.Day_Count, a.Rpt_YrMon, SUM( a.Meal_Pd_Count) AS Meal_Pd_Count, SUM( a.Covers) AS Covers, SUM( a.Rev_LCL) AS Rev_LCL, SUM( a.Rev_CUSD) AS Rev_CUSD, SUM( a.Day_Part_Count) AS Day_Part_Count, SUM( a.BNQT_Group) AS BNQT_Group, SUM( a.BNQT_Local) AS BNQT_Local, SUM( a.BNQT_Other) AS BNQT_Other, SUM( a.BNQT_ALL) AS BNQT_ALL FROM Data_3 AS a WHERE a.Metric_Level IN ( 'Food','Beverage','Other','AV') GROUP BY a.Data_YrMon, a.MARSHA, a.Curr_Code, a.Fx_Rate, a.Dept_Category, a.Metric_Level, a.Detail_Category, a.FB_Category, a.FB_Group, a.FB_Type, a.Year, a.Quarter, a.Mon, a.Month_Name, a.Month, a.Day_Count, a.Rpt_YrMon;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
" CREATE TABLE Data_3c AS select a.*, coalesce( b.Outlet_Count,0) AS Outlet_Count, coalesce( b.Seats,0) AS Seats, coalesce( b.Sq_Feet,0) AS Sq_Feet, coalesce( b.Sq_Meters,0) AS Sq_Meters FROM Data_3b AS a LEFT JOIN Data_3a AS b ON a.Data_YrMon=b.Data_YrMon AND a.MARSHA=b.MARSHA AND a.FB_Category=b.FB_Category AND a.FB_Group=b.FB_Group AND a.FB_Type=b.FB_Type ORDER BY a.Data_YrMon, a.MARSHA, a.FB_Category, a.FB_Group, a.FB_Type;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
" CREATE TABLE Data_3d AS ( SELECT  * , CASE WHEN  Sq_Feet>0 AND Sq_Meters>0  THEN ""Both"" WHEN   Sq_Feet>0  THEN ""Feet"" WHEN   Sq_Meters>0  THEN ""Meters"" ELSE ""not avail"" END AS Space_Metric FROM Data_3c );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
" CREATE TABLE Data_4 AS ( SELECT  *  , ( Seats*Meal_Pd_Count)*Day_Count AS Total_Avail_Seats , ( Sq_Feet*Day_Part_Count)*Day_Count AS Total_Avail_Sq_Footage , ( Sq_Meters*Day_Part_Count)*Day_Count AS Total_Avail_Sq_Meters  FROM Data_3d );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
" CREATE TABLE Data_5 AS select a.Data_YrMon, a.MARSHA, a.Dept_Category, a.Metric_Level, a.Detail_Category, a.Rpt_YrMon, a.FB_Category, a.FB_Group, a.FB_Type, a.Outlet_Count, a.Curr_Code, a.Year, a.Quarter, a.Mon, a.Month_Name, a.Month, a.Day_Count, a.Fx_Rate, a.Space_Metric, SUM( a.Seats) AS Seats, SUM( a.Total_Avail_Seats) AS Total_Avail_Seats, SUM( a.Sq_Feet) AS Sq_Feet, SUM( a.Total_Avail_Sq_Footage) AS Total_Avail_Sq_Footage, SUM( a.Sq_Meters) AS Sq_Meters, SUM( a.Total_Avail_Sq_Meters) AS Total_Avail_Sq_Meters, SUM( a.Meal_Pd_Count) AS Meal_Pd_Count, SUM( a.Covers) AS Covers, SUM( a.Rev_LCL) AS Rev_LCL, SUM( a.Rev_CUSD) AS Rev_CUSD, SUM( a.Day_Part_Count) AS Day_Part_Count, SUM( a.BNQT_Group) AS BNQT_Group, SUM( a.BNQT_Local) AS BNQT_Local, SUM( a.BNQT_Other) AS BNQT_Other, SUM( a.BNQT_ALL) AS BNQT_ALL FROM Data_4 AS a GROUP BY a.Data_YrMon, a.MARSHA, a.Dept_Category, a.Metric_Level, a.Detail_Category, a.Rpt_YrMon, a.FB_Category, a.FB_Group, a.FB_Type, a.Outlet_Count, a.Curr_Code, a.Year, a.Quarter, a.Mon, a.Month_Name, a.Month, a.Day_Count, a.Fx_Rate, a.Space_Metric;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
 CREATE TABLE FB.FIN_Outlet_Master AS ( SELECT  *  FROM Outlet_Count3 );,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
 CREATE TABLE FB.FIN_Space_Master AS ( SELECT  *  FROM Space_3 );,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
 CREATE TABLE FB.FIN_FB_Data_Master AS ( SELECT  *  FROM Data_5 );,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
 CREATE TABLE Data_6 AS ( SELECT  *  FROM FB.FIN_FB_Data_Master );,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
" CREATE TABLE Data_7 AS select a.Rpt_YrMon, a.Data_YrMon, a.MARSHA, a.Curr_Code, a.Dept_Category, a.FB_Category, a.FB_Group, a.FB_Type, a.Metric_Level, a.Detail_Category, a.Outlet_Count, a.Space_Metric, a.Year, a.Quarter, a.Mon, a.Month_Name, a.Month, a.Day_Count, a.Fx_Rate, b.FxToCUSD AS Fx_CUSD , SUM( a.Seats) AS Seats, SUM( a.Sq_Feet) AS Sq_Feet, SUM( a.Sq_Meters) AS Sq_Meters, SUM( a.Total_Avail_Seats) AS Total_Avail_Seats, SUM( a.Total_Avail_Sq_Footage) AS Total_Avail_Sq_Footage, SUM( a.Total_Avail_Sq_Meters) AS Total_Avail_Sq_Meters, SUM( a.Meal_Pd_Count) AS Meal_Pd_Count, SUM( a.Covers) AS Covers, SUM( a.Rev_LCL) AS Rev_LCL, SUM( a.Rev_CUSD) AS Rev_CUSD, SUM( a.Day_Part_Count) AS Day_Part_Count, SUM( a.BNQT_Group) AS BNQT_Group, SUM( a.BNQT_Local) AS BNQT_Local, SUM( a.BNQT_Other) AS BNQT_Other, SUM( a.BNQT_ALL) AS BNQT_ALL FROM Data_6 AS a LEFT JOIN TreasFx_Fcst AS b ON a.Rpt_YrMon=b.AsOf_YrMo AND a.Curr_Code=b.Curr_Code AND a.Mon=b.Mon GROUP BY a.Rpt_YrMon, a.Data_YrMon, a.MARSHA, a.Curr_Code, a.Dept_Category, a.FB_Category, a.FB_Group, a.FB_Type, a.Metric_Level, a.Detail_Category, a.Outlet_Count, a.Space_Metric, a.Year, a.Quarter, a.Mon, a.Month_Name, a.Month, a.Day_Count, a.Fx_Rate, b.FxToCUSD;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
" CREATE TABLE Data_8 AS ( SELECT  *  , Rev_LCL*Fx_CUSD AS cf_Rev_CUSD  FROM Data_7 );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
" CREATE TABLE Data_9b AS ( SELECT  *  , ( Rev_LCL_Food+Rev_LCL_Bvrg ) AS Rev_LCL_FB , ( Rev_USD_Food+Rev_USD_Bvrg ) AS Rev_USD_FB , ( Rev_CUSD_Food+Rev_CUSD_Bvrg ) AS Rev_CUSD_FB  FROM Data_9a );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
" CREATE TABLE Data_9 AS select a.Rpt_YrMon, a.Data_YrMon, a.MARSHA, a.FB_Category, a.FB_Group, a.Space_Metric, a.FB_Type, a.Outlet_Count, a.Dept_Category, a.Metric_Level, a.Detail_Category, a.Curr_Code, a.Year, a.Quarter, a.Mon, a.Month_Name, a.Month, a.Day_Count, a.Fx_Rate, a.Fx_CUSD, SUM( a.Seats) AS Seats, SUM( a.Sq_Feet) AS Sq_Feet, SUM( a.Sq_Meters) AS Sq_Meters, SUM( a.Total_Avail_Seats) AS Total_Avail_Seats, SUM( a.Total_Avail_Sq_Footage) AS Total_Avail_Sq_Footage, SUM( a.Total_Avail_Sq_Meters) AS Total_Avail_Sq_Meters, SUM( a.Day_Part_Count) AS Day_Part_Count, SUM( a.BNQT_Group) AS BNQT_Group, SUM( a.BNQT_Local) AS BNQT_Local, SUM( a.BNQT_Other) AS BNQT_Other, SUM( a.BNQT_ALL) AS BNQT_ALL, SUM( a.Meal_Pd_Count) AS Meal_Pd_Count, SUM( a.Covers) AS Covers, SUM( a.Rev_LCL) AS Rev_LCL, SUM( a.cf_Rev_CUSD) AS Rev_USD, SUM( a.Rev_CUSD) AS Rev_CUSD, SUM( a.Rev_LCL_Food) AS Rev_LCL_Food, SUM( a.Rev_LCL_Bvrg) AS Rev_LCL_Bvrg, SUM( a.Rev_LCL_FB) AS Rev_LCL_FB, SUM( a.Rev_LCL_Othr) AS Rev_LCL_Othr, SUM( a.Rev_LCL_Total) AS Rev_LCL_Total, SUM( a.Rev_LCL_AV) AS Rev_LCL_AV, SUM( a.Rev_LCL_Bnqt) AS Rev_LCL_Bnqt, SUM( a.Rev_LCL_IRD) AS Rev_LCL_IRD, SUM( a.Rev_LCL_Outlets) AS Rev_LCL_Outlets, SUM( a.Rev_LCL_ALL) AS Rev_LCL_ALL, SUM( a.Rev_USD_Food) AS Rev_USD_Food, SUM( a.Rev_USD_Bvrg) AS Rev_USD_Bvrg, SUM( a.Rev_USD_FB) AS Rev_USD_FB, SUM( a.Rev_USD_Othr) AS Rev_USD_Othr, SUM( a.Rev_USD_Total) AS Rev_USD_Total, SUM( a.Rev_USD_AV) AS Rev_USD_AV, SUM( a.Rev_USD_Bnqt) AS Rev_USD_Bnqt, SUM( a.Rev_USD_IRD) AS Rev_USD_IRD, SUM( a.Rev_USD_Outlets) AS Rev_USD_Outlets, SUM( a.Rev_USD_ALL) AS Rev_USD_ALL, SUM( a.Rev_CUSD_Food) AS Rev_CUSD_Food, SUM( a.Rev_CUSD_Bvrg) AS Rev_CUSD_Bvrg, SUM( a.Rev_CUSD_FB) AS Rev_CUSD_FB, SUM( a.Rev_CUSD_Othr) AS Rev_CUSD_Othr, SUM( a.Rev_CUSD_Total) AS Rev_CUSD_Total, SUM( a.Rev_CUSD_AV) AS Rev_CUSD_AV, SUM( a.Rev_CUSD_Bnqt) AS Rev_CUSD_Bnqt, SUM( a.Rev_CUSD_IRD) AS Rev_CUSD_IRD, SUM( a.Rev_CUSD_Outlets) AS Rev_CUSD_Outlets, SUM( a.Rev_CUSD_ALL) AS Rev_CUSD_ALL FROM Data_9c AS a GROUP BY a.Rpt_YrMon, a.Data_YrMon, a.MARSHA, a.FB_Category, a.FB_Group, a.Space_Metric, a.FB_Type, a.Outlet_Count, a.Dept_Category, a.Metric_Level, a.Detail_Category, a.Curr_Code, a.Year, a.Quarter, a.Mon, a.Month_Name, a.Month, a.Day_Count, a.Fx_Rate, a.Fx_CUSD;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
" CREATE TABLE Data_9_Detail AS ( SELECT  *, Detail_Category AS Data_Level AS None, '2- Detail' AS Rpt_Level  FROM Data_9 );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
" CREATE TABLE Data_9_SubTotal AS select a.Rpt_YrMon, a.Data_YrMon, a.MARSHA, a.FB_Category, a.FB_Group, a.Space_Metric, a.FB_Type, a.Outlet_Count, a.Dept_Category, a.Metric_Level, CASE WHEN a.Metric_Level='Food' THEN 'Total Food' when a.Metric_Level='Beverage' THEN 'Total Beverage' when a.Metric_Level IN ( 'AV', 'Other') THEN 'Total Other' ELSE 'not avail' END AS Data_Level, a.Curr_Code, a.Year, a.Quarter, a.Mon, a.Month_Name, a.Month, a.Day_Count, a.Fx_Rate, a.Fx_CUSD, SUM( a.Seats) AS Seats, SUM( a.Sq_Feet) AS Sq_Feet, SUM( a.Sq_Meters) AS Sq_Meters, SUM( a.Total_Avail_Seats) AS Total_Avail_Seats, SUM( a.Total_Avail_Sq_Footage) AS Total_Avail_Sq_Footage, SUM( a.Total_Avail_Sq_Meters) AS Total_Avail_Sq_Meters, SUM( a.Day_Part_Count) AS Day_Part_Count, SUM( a.BNQT_Group) AS BNQT_Group, SUM( a.BNQT_Local) AS BNQT_Local, SUM( a.BNQT_Other) AS BNQT_Other, SUM( a.BNQT_ALL) AS BNQT_ALL, SUM( a.Meal_Pd_Count) AS Meal_Pd_Count, SUM( a.Covers) AS Covers, SUM( a.Rev_LCL) AS Rev_LCL, SUM( a.cf_Rev_CUSD) AS Rev_USD, SUM( a.Rev_CUSD) AS Rev_CUSD, SUM( a.Rev_LCL_Food) AS Rev_LCL_Food, SUM( a.Rev_LCL_Bvrg) AS Rev_LCL_Bvrg, SUM( a.Rev_LCL_FB) AS Rev_LCL_FB, SUM( a.Rev_LCL_Othr) AS Rev_LCL_Othr, SUM( a.Rev_LCL_Total) AS Rev_LCL_Total, SUM( a.Rev_LCL_AV) AS Rev_LCL_AV, SUM( a.Rev_LCL_Bnqt) AS Rev_LCL_Bnqt, SUM( a.Rev_LCL_IRD) AS Rev_LCL_IRD, SUM( a.Rev_LCL_Outlets) AS Rev_LCL_Outlets, SUM( a.Rev_LCL_ALL) AS Rev_LCL_ALL, SUM( a.Rev_USD_Food) AS Rev_USD_Food, SUM( a.Rev_USD_Bvrg) AS Rev_USD_Bvrg, SUM( a.Rev_USD_FB) AS Rev_USD_FB, SUM( a.Rev_USD_Othr) AS Rev_USD_Othr, SUM( a.Rev_USD_Total) AS Rev_USD_Total, SUM( a.Rev_USD_AV) AS Rev_USD_AV, SUM( a.Rev_USD_Bnqt) AS Rev_USD_Bnqt, SUM( a.Rev_USD_IRD) AS Rev_USD_IRD, SUM( a.Rev_USD_Outlets) AS Rev_USD_Outlets, SUM( a.Rev_USD_ALL) AS Rev_USD_ALL, SUM( a.Rev_CUSD_Food) AS Rev_CUSD_Food, SUM( a.Rev_CUSD_Bvrg) AS Rev_CUSD_Bvrg, SUM( a.Rev_CUSD_FB) AS Rev_CUSD_FB, SUM( a.Rev_CUSD_Othr) AS Rev_CUSD_Othr, SUM( a.Rev_CUSD_Total) AS Rev_CUSD_Total, SUM( a.Rev_CUSD_AV) AS Rev_CUSD_AV, SUM( a.Rev_CUSD_Bnqt) AS Rev_CUSD_Bnqt, SUM( a.Rev_CUSD_IRD) AS Rev_CUSD_IRD, SUM( a.Rev_CUSD_Outlets) AS Rev_CUSD_Outlets, SUM( a.Rev_CUSD_ALL) AS Rev_CUSD_ALL FROM Data_9c AS a GROUP BY a.Rpt_YrMon, a.Data_YrMon, a.MARSHA, a.FB_Category, a.FB_Group, a.Space_Metric, a.FB_Type, a.Outlet_Count, a.Dept_Category, a.Metric_Level,calculated Data_Level, a.Curr_Code, a.Year, a.Quarter, a.Mon, a.Month_Name, a.Month, a.Day_Count, a.Fx_Rate, a.Fx_CUSD;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
" CREATE TABLE Data_9_Summary AS ( SELECT  *  , '1- Summary' AS Rpt_Level  FROM Data_9_Subtotal );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
" CREATE TABLE Data_9_Total AS select a.Rpt_YrMon, a.Data_YrMon, a.MARSHA, a.FB_Category, a.FB_Group, a.Space_Metric, CASE WHEN a.FB_Category='Catering' THEN 'Banquets/ALL' ELSE a.FB_Type END AS FB_Type, a.Outlet_Count, ( RTRIM( a.FB_Category)||""/TOTAL"") AS Dept_Category, 'Total' AS Metric_Level, 'Total Dept' AS Data_Level, a.Curr_Code, a.Year, a.Quarter, a.Mon, a.Month_Name, a.Month, a.Day_Count, a.Fx_Rate, a.Fx_CUSD, SUM( a.Seats) AS Seats, SUM( a.Sq_Feet) AS Sq_Feet, SUM( a.Sq_Meters) AS Sq_Meters, SUM( a.Total_Avail_Seats) AS Total_Avail_Seats, SUM( a.Total_Avail_Sq_Footage) AS Total_Avail_Sq_Footage, SUM( a.Total_Avail_Sq_Meters) AS Total_Avail_Sq_Meters, SUM( a.Day_Part_Count) AS Day_Part_Count, SUM( a.BNQT_Group) AS BNQT_Group, SUM( a.BNQT_Local) AS BNQT_Local, SUM( a.BNQT_Other) AS BNQT_Other, SUM( a.BNQT_ALL) AS BNQT_ALL, SUM( a.Meal_Pd_Count) AS Meal_Pd_Count, SUM( a.Covers) AS Covers, SUM( a.Rev_LCL) AS Rev_LCL, SUM( a.cf_Rev_CUSD) AS Rev_USD, SUM( a.Rev_CUSD) AS Rev_CUSD, SUM( a.Rev_LCL_Food) AS Rev_LCL_Food, SUM( a.Rev_LCL_Bvrg) AS Rev_LCL_Bvrg, SUM( a.Rev_LCL_FB) AS Rev_LCL_FB, SUM( a.Rev_LCL_Othr) AS Rev_LCL_Othr, SUM( a.Rev_LCL_Total) AS Rev_LCL_Total, SUM( a.Rev_LCL_AV) AS Rev_LCL_AV, SUM( a.Rev_LCL_Bnqt) AS Rev_LCL_Bnqt, SUM( a.Rev_LCL_IRD) AS Rev_LCL_IRD, SUM( a.Rev_LCL_Outlets) AS Rev_LCL_Outlets, SUM( a.Rev_LCL_ALL) AS Rev_LCL_ALL, SUM( a.Rev_USD_Food) AS Rev_USD_Food, SUM( a.Rev_USD_Bvrg) AS Rev_USD_Bvrg, SUM( a.Rev_USD_FB) AS Rev_USD_FB, SUM( a.Rev_USD_Othr) AS Rev_USD_Othr, SUM( a.Rev_USD_Total) AS Rev_USD_Total, SUM( a.Rev_USD_AV) AS Rev_USD_AV, SUM( a.Rev_USD_Bnqt) AS Rev_USD_Bnqt, SUM( a.Rev_USD_IRD) AS Rev_USD_IRD, SUM( a.Rev_USD_Outlets) AS Rev_USD_Outlets, SUM( a.Rev_USD_ALL) AS Rev_USD_ALL, SUM( a.Rev_CUSD_Food) AS Rev_CUSD_Food, SUM( a.Rev_CUSD_Bvrg) AS Rev_CUSD_Bvrg, SUM( a.Rev_CUSD_FB) AS Rev_CUSD_FB, SUM( a.Rev_CUSD_Othr) AS Rev_CUSD_Othr, SUM( a.Rev_CUSD_Total) AS Rev_CUSD_Total, SUM( a.Rev_CUSD_AV) AS Rev_CUSD_AV, SUM( a.Rev_CUSD_Bnqt) AS Rev_CUSD_Bnqt, SUM( a.Rev_CUSD_IRD) AS Rev_CUSD_IRD, SUM( a.Rev_CUSD_Outlets) AS Rev_CUSD_Outlets, SUM( a.Rev_CUSD_ALL) AS Rev_CUSD_ALL FROM Data_9c AS a GROUP BY a.Rpt_YrMon, a.Data_YrMon, a.MARSHA, a.FB_Category, a.FB_Group, a.Space_Metric, calculated FB_Type, a.Outlet_Count, calculated Dept_Category, calculated Metric_Level, calculated Data_Level, a.Curr_Code, a.Year, a.Quarter, a.Mon, a.Month_Name, a.Month, a.Day_Count, a.Fx_Rate, a.Fx_CUSD;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
" CREATE TABLE Data_9_Other AS ( SELECT  *  , '3- Other' AS Rpt_Level  FROM Data_9_Total );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
 CREATE TABLE Data_9_ALL AS ( SELECT  *  FROM Data_9_Detail UNION ALL SELECT  *  FROM Data_9_Summary UNION ALL SELECT  *  FROM Data_9_Other);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
"SELECT * FROM Data_9_ALL ORDER BY Rpt_YrMon ,Data_YrMon ,MARSHA ,Rpt_Level ,FB_Category ,FB_Group ,FB_Type;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
" CREATE TABLE Data_9_Final AS select a.Rpt_YrMon, a.Data_YrMon, a.MARSHA, a.FB_Category, a.FB_Group, a.Space_Metric, a.FB_Type, a.Outlet_Count, a.Dept_Category, a.Metric_Level, a.Rpt_Level, a.Data_Level, ( ""OU""||p.PeopleSoft_ID||"" - ""||RTRIM( p.HotName)||""- ""||a.Curr_Code) AS Fin_Hotel_Name, a.Curr_Code, a.Year, a.Quarter, a.Month_Name, a.Month, a.Day_Count, a.Fx_Rate, a.Fx_CUSD, p.OPENFLAG, p.MISW_FLAG, p.Division, p.Division_Category, p.Region_Category, p.Region, p.Region_Name, p.Brand_Category, p.Brand_Type, p.BRND, p.BRND_NAME, p.Hotel_Name, p.MF, p.ACOMP, p.LY_COMP, p.HCAP, p.Market_Name, p.HClass, p.HCLASS2, p.Opendate, p.Redemption_Category, SUM( a.Seats) AS Seats, SUM( a.Sq_Feet) AS Sq_Feet, SUM( a.Sq_Meters) AS Sq_Meters, SUM( a.Total_Avail_Seats) AS Total_Avail_Seats, SUM( a.Total_Avail_Sq_Footage) AS Total_Avail_Sq_Footage, SUM( a.Total_Avail_Sq_Meters) AS Total_Avail_Sq_Meters, SUM( a.Day_Part_Count) AS Day_Part_Count, SUM( a.BNQT_Group) AS BNQT_Group, SUM( a.BNQT_Local) AS BNQT_Local, SUM( a.BNQT_Other) AS BNQT_Other, SUM( a.BNQT_ALL) AS BNQT_ALL, SUM( a.Meal_Pd_Count) AS Meal_Pd_Count, SUM( a.Covers) AS Covers, SUM( a.Rev_LCL) AS Rev_LCL, SUM( a.Rev_USD) AS Rev_USD, SUM( a.Rev_CUSD) AS Rev_CUSD, SUM( a.Rev_LCL_Food) AS Rev_LCL_Food, SUM( a.Rev_LCL_Bvrg) AS Rev_LCL_Bvrg, SUM( a.Rev_LCL_FB) AS Rev_LCL_FB, SUM( a.Rev_LCL_Othr) AS Rev_LCL_Othr, SUM( a.Rev_LCL_Total) AS Rev_LCL_Total, SUM( a.Rev_LCL_AV) AS Rev_LCL_AV, SUM( a.Rev_LCL_Bnqt) AS Rev_LCL_Bnqt, SUM( a.Rev_LCL_IRD) AS Rev_LCL_IRD, SUM( a.Rev_LCL_Outlets) AS Rev_LCL_Outlets, SUM( a.Rev_LCL_ALL) AS Rev_LCL_ALL, SUM( a.Rev_USD_Food) AS Rev_USD_Food, SUM( a.Rev_USD_Bvrg) AS Rev_USD_Bvrg, SUM( a.Rev_USD_FB) AS Rev_USD_FB, SUM( a.Rev_USD_Othr) AS Rev_USD_Othr, SUM( a.Rev_USD_Total) AS Rev_USD_Total, SUM( a.Rev_USD_AV) AS Rev_USD_AV, SUM( a.Rev_USD_Bnqt) AS Rev_USD_Bnqt, SUM( a.Rev_USD_IRD) AS Rev_USD_IRD, SUM( a.Rev_USD_Outlets) AS Rev_USD_Outlets, SUM( a.Rev_USD_ALL) AS Rev_USD_ALL, SUM( a.Rev_CUSD_Food) AS Rev_CUSD_Food, SUM( a.Rev_CUSD_Bvrg) AS Rev_CUSD_Bvrg, SUM( a.Rev_CUSD_FB) AS Rev_CUSD_FB, SUM( a.Rev_CUSD_Othr) AS Rev_CUSD_Othr, SUM( a.Rev_CUSD_Total) AS Rev_CUSD_Total, SUM( a.Rev_CUSD_AV) AS Rev_CUSD_AV, SUM( a.Rev_CUSD_Bnqt) AS Rev_CUSD_Bnqt, SUM( a.Rev_CUSD_IRD) AS Rev_CUSD_IRD, SUM( a.Rev_CUSD_Outlets) AS Rev_CUSD_Outlets, SUM( a.Rev_CUSD_ALL) AS Rev_CUSD_ALL FROM Data_9_ALL AS a LEFT JOIN work.PLU_TC AS p ON a.MARSHA=p.MARSHA GROUP BY a.Rpt_YrMon, a.Data_YrMon, a.MARSHA, a.FB_Category, a.FB_Group, a.Space_Metric, a.FB_Type, a.Outlet_Count, a.Dept_Category, a.Metric_Level, a.Rpt_Level, a.Data_Level, calculated Fin_Hotel_Name, a.Curr_Code, a.Year, a.Quarter, a.Month_Name, a.Month, a.Day_Count, a.Fx_Rate, a.Fx_CUSD, p.OPENFLAG, p.MISW_FLAG, p.Division, p.Division_Category, p.Region_Category, p.Region, p.Region_Name, p.Brand_Category, p.Brand_Type, p.BRND, p.BRND_NAME, p.Hotel_Name, p.MF, p.ACOMP, p.LY_COMP, p.HCAP, p.Market_Name, p.HClass, p.HCLASS2, p.Opendate, p.Redemption_Category;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
 CREATE TABLE Test_detail AS ( SELECT  *  FROM Data_9_detail  whereMARSHA='NYCEX' AND Data_YrMon=201901);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
 CREATE TABLE Test_summary AS ( SELECT  *  FROM Data_9_summary  whereMARSHA='NYCEX' AND Data_YrMon=201901);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
 CREATE TABLE Test_other AS ( SELECT  *  FROM Data_9_other  whereMARSHA='NYCEX' AND Data_YrMon=201901);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
 CREATE TABLE FB.Fin_FB_Data_ALL AS ( SELECT  *  FROM Data_9_Final );,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
 CREATE TABLE FB.Fin_FB_Data_Summary AS ( SELECT  *  FROM FB.Fin_FB_Data_ALL  WHERE Rpt_Level='1- Summary' AND data_yrmon >= 201801);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
 CREATE TABLE FB.Fin_FB_Data_Other AS ( SELECT  *  FROM FB.Fin_FB_Data_ALL  WHERE Rpt_Level='3- Other' AND data_yrmon >= 201801);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
"CREATE TABLE ""G:\RM EAnlys\RM Analytics Team\Projects\Food AND Beverage\Output Files\FB Data_as of &YrMon..xlsx"" AS ( SELECT * FROM FB.Fin_FB_Data_Summary) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
"CREATE TABLE ""G:\RM EAnlys\RM Analytics Team\Projects\Food AND Beverage\Output Files\FB Data_as of &YrMon..xlsx"" AS ( SELECT * FROM FB.Fin_FB_Data_Other) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
 CREATE TABLE FB.FB_Data_Dinesh_ao&YrMon. AS ( SELECT  *  FROM FB.Fin_FB_Data_ALL  WHERE Rpt_Level='3- Other' AND data_yrmon >= 201801);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
"CREATE TABLE ""G:\RM EAnlys\Shared_Data\group pace\Catering Pace\Finance Catering AND AV Data_&YrMon..xlsx"" AS ( SELECT * FROM FB.FB_Data_Dinesh_ao&YrMon.) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
 CREATE TABLE FB.Fin_FB_Data_Detail AS ( SELECT  *  FROM FB.Fin_FB_Data_ALL  WHERE Rpt_Level='2- Detail');,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
 CREATE TABLE FB_Data_Detail_all AS ( SELECT  *  FROM FB.Fin_FB_Data_Detail  whereOPENFLAG='Y' AND MF='M');,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
" CREATE TABLE FB_Data_Detail AS select a.* FROM FB_Data_Detail_all AS a INNER JOIN PLU_Sotb AS b ON a.MARSHA=b.MARSHA_new AND b.ACOMP_Sotb=""Y"" ORDER BY a.MARSHA;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
 CREATE TABLE FB_Data_Detail_2017 AS ( SELECT  *  FROM FB_Data_Detail  WHERE data_yrmon <= 201712);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
 CREATE TABLE FB_Data_Detail_2018 AS ( SELECT  *  FROM FB_Data_Detail  wheredata_yrmon >= 201801 AND data_yrmon <= 201812);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
 CREATE TABLE FB_Data_Detail_2019ytd AS ( SELECT  *  FROM FB_Data_Detail  WHERE data_yrmon >= 201901);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
"CREATE TABLE ""G:\RM EAnlys\RM Analytics Team\Projects\Food AND Beverage\Output Files\FB Data_Detail_as of &YrMon..xlsx"" AS ( SELECT * FROM FB_Data_Detail_2017) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
"CREATE TABLE ""G:\RM EAnlys\RM Analytics Team\Projects\Food AND Beverage\Output Files\FB Data_Detail_as of &YrMon..xlsx"" AS ( SELECT * FROM FB_Data_Detail_2018) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
"CREATE TABLE ""G:\RM EAnlys\RM Analytics Team\Projects\Food AND Beverage\Output Files\FB Data_Detail_as of &YrMon..xlsx"" AS ( SELECT * FROM FB_Data_Detail_2019ytd) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_FB_Data_from_Finance_Extract.sas
" CREATE TABLE plu AS ( (  select marsha, hcap FROM AW_TGT_BUS_DBO.property_master  )  ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_One_Yield_v2_Effectiveness_GrpError.sas
" CREATE TABLE oy.group_error_steve_sum AS select prop_code, avg( abs( ttl_proj-ttl_act)) / avg( p.hcap) AS grp_abs_error_pct_cap format=percent10.2, avg( ttl_proj > ttl_act) AS Grp_Pct_Fcst_Over_Act format=percent10. FROM oy.group_error_steve a INNER JOIN plu p ON a.prop_code=p.marsha GROUP BY prop_code;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_One_Yield_v2_Effectiveness_GrpError.sas
"CREATE TABLE DateFormats  ( format , hadoopfmt );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES($N8601B timestamp);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES($N8601BA timestamp);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES($N8601E timestamp);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES($N8601EA timestamp);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES($N8601EH timestamp);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES($N8601EX timestamp);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES($N8601H timestamp);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES($N8601X timestamp);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(B8601DA date);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(B8601DN timestamp);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(B8601DT timestamp);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(B8601DX timestamp);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(B8601DZ timestamp);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(B8601LX timestamp);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(B8601LZ time);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(B8601TM time);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(B8601TX time);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(B8601TZ time);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(DATE date);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(DATEAMPM timestamp);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(DATETIME timestamp);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(DAY date);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(DDMMYY date);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(DOWNAME date);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(DTDATE timestamp);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(DTMONYY timestamp);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(DTWKDATX timestamp);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(DTYEAR timestamp);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(DTYYQC timestamp);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(E8601DA date);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(E8601DN timestamp);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(E8601DT timestamp);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(E8601DX timestamp);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(E8601DZ timestamp);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(E8601LX timestamp);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(E8601LZ time);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(E8601TM time);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(E8601TX time);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(E8601TZ time);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(HHMM time);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(HOUR time);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(JULDAY date);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(JULIAN date);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(MDYAMPM timestamp);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(MMDDYY date);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(MMSS time);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(MMYY date);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(MONNAME date);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(MONTH date);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(MONYY date);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(PDJULG date);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(PDJULI date);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(QTR date);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(QTRR date);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(TIME time);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(TIMEAMPM timestamp);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(TOD timestamp);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(WEEKDATE date);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(WEEKDATX date);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(WEEKDAY date);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(WEEKU time);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(WEEKV time);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(WEEKW time);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(WORDDATE date);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(WORDDATX date);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(YEAR date);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(YYMM date);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(YYMMDD date);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(YYMON date);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(YYQ date);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO DateFormats  VALUES(YYQR date);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
CREATE INDEX format ON DateFormats (format);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
CREATE TABLE summaryforconversion_max AS (SELECT MAX(_numeric_) AS _numeric_ FROM &intab. );,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
CREATE TABLE summaryforconversion_min AS (SELECT MIN(_numeric_) AS _numeric_ FROM &intab. );,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
CREATE TABLE summaryforconversion_sum AS (SELECT SUM(_numeric_) AS _numeric_ FROM &intab. );,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
" CREATE TABLE summaryforconversiont AS ( SELECT  *  , ' ' AS col1 , abs( col1 ) AS col1  FROM summaryforconversion_sumt UNION ALL SELECT  *  , ' ' AS col1 , abs( col1 ) AS col1  FROM summaryforconversion_maxt UNION ALL SELECT  *  , ' ' AS col1 , abs( col1 ) AS col1  FROM summaryforconversion_mint WHERE a);",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
" CREATE TABLE summaryforconversiont2  AS select _name_ AS name, max( col1) AS max, max( col2) AS SUM FROM summaryforconversiont GROUP BY _name_;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
CREATE INDEX name ON summaryforconversiont2(name);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
SELECT * FROM contents ORDER BY VARnum;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
 select COUNT( *) into :numVARs FROM contents;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
" select COUNT( *) into :badchars FROM &intab. WHERE CHARINDEX('',&VAR.,'oksnp')>0;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
" CREATE TABLE contents AS ( SELECT  * , CASE WHEN  TRIM( name)=""&VAR.""  THEN LENGTH*2 END AS LENGTH FROM Contents );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
   DROP TABLE IF EXISTS &outtab. ) by odbc ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
 CREATE HADOOP TABLE &outtab. (  &TabFmt. ) STORED AS PARQUETFILE ) by odbc   DROP TABLE IF EXISTS &eid..TEMP_Load ) by odbc  ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
 Create TABLE &eid..TEMP_Load (  &TabFmt. )  ,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
 select COUNT( *) format=32. into :numrows FROM &intab.;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
INSERT INTO TABLE awprodz.temp_load SELECT * FROM &intab.;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
  INSERT INTO &outtab. select * FROM &eid..TEMP_Load) by odbc  delete FROM &eid..temp_load,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
"  DROP TABLE IF EXISTS &eid..TEMP_Load) by odbc  CALL AW_TGT_PROXY_DBO.GRANT_ON_TABLE( %quote( %'%scan( &outtab.,1,. )%'),%quote( %'%scan( &outtab.,2,. )%') ) ",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
 select Records_Uploaded into :RecsUp FROM  (  select COUNT( *) AS Records_Uploaded FROM &outtab. ) ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_SAS_Shared_Macros_AWupload.sas
 select max( modate) into :LastMoDate FROM dictionary.tables WHERE libname = 'FINANCE' select modate into :IDemEyeDate FROM dictionary.tables WHERE libname = 'INTL' AND memname='INTLDEMEYE';,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
 CREATE TABLE prop_MISW  AS ( (  select * FROM AW_TGT_BUS_DBO.property_master_hist WHERE asof_yrmo = &ODYrMo. AND openflag = 'Y'  )  ) ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
CREATE INDEX marsha ON prop_MISW(marsha);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
"CREATE TABLE owner.plu AS ( SELECT marsha, brnd, brnd2, mf, cluster_name, market_name, region, avp, adrm, rd, hotel_name , 'ME' AS when ( 'CY','FI','SH','FP','OX','AL') Brnd2 , 'ES' AS when ( 'ER','RI','TS','EL') Brnd2 , 'FS' AS otherwise Brnd2  FROM prop_misw  WHERE mf='M');",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
CREATE INDEX marsha ON owner.plu(marsha);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
"CREATE TABLE WORK.Actuals_&file. AS ( SELECT MARSHA , Year , Month , PD_mo_IND , WDWE , Segment , Rms , REV , lcl_curr , PHSG_SOURCE_IND , FXRATEUSDperCU FROM ""G:\DSS\OY Rev Plan Data\MonthActuals\&file..txt"" MISSOVER lrecl=88 );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
" CREATE TABLE FX_by_hotel  AS select prop_code AS marsha, ( usd_au_tr_rv+usd_au_gr_def_rv) / ( au_tr_rv+au_gr_def_rv) AS FX_USD_to_Local FROM proj.Extractsum_mo_&ODYrMo._ActUpdt a WHERE wdwe='WD' AND a.year=&odYr. AND a.month=&Curmon.;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
CREATE INDEX marsha ON FX_by_hotel(marsha);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
" CREATE TABLE Currency_FillIn  AS select distinct marsha, lcl_curr FROM Actuals_NALO_&ODYrMo. WHERE lcl_curr is not null UNION select distinct marsha, lcl_curr FROM Actuals_ILO_&ODYrMo. WHERE lcl_curr is not null;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
CREATE INDEX marsha ON Currency_FillIn(marsha);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
" CREATE TABLE Actuals AS ( SELECT  *  , EXTRACT(QUARTER FROM mdy( month,1,year) ) AS Quarter , ifc( wdwe='F','MO','W' || WDWE ) AS WDWE , ifn( lcl_curr<>'USD',rev,.  ) AS Rev_local , ifn( lcl_curr='USD',rev,rev * FX_USD_to_Local ) AS Rev_USD , rms AS group_rms , Rev_local AS group_rev_local , Rev_USD AS group_rev , rms AS Contract_rms , Rev_local AS Contract_rev_local , Rev_USD AS contract_rev , rms AS Transient_rms , Rev_local AS Transient_Rev_Local , Rev_USD AS Transient_Rev , Rev_local AS Group_Rebates_local , Rev_USD AS Group_Rebates , rev_local AS Transient_Rebates_local , Rev_USD AS Transient_Rebates , rev_local AS Contract_Rebates_local , Rev_USD AS Contract_Rebates , rev_local AS Other_Rev_local , Rev_USD AS Other_Rev , Rev AS when ( 'GRP CTRG') Group_Catering , Rev AS when ( 'LCL CTRG') Local_Catering  FROM Actuals_NALO_&ODYrMo. UNION ALL SELECT  *  , EXTRACT(QUARTER FROM mdy( month,1,year) ) AS Quarter , ifc( wdwe='F','MO','W' || WDWE ) AS WDWE , ifn( lcl_curr<>'USD',rev,.  ) AS Rev_local , ifn( lcl_curr='USD',rev,rev * FX_USD_to_Local ) AS Rev_USD , rms AS group_rms , Rev_local AS group_rev_local , Rev_USD AS group_rev , rms AS Contract_rms , Rev_local AS Contract_rev_local , Rev_USD AS contract_rev , rms AS Transient_rms , Rev_local AS Transient_Rev_Local , Rev_USD AS Transient_Rev , Rev_local AS Group_Rebates_local , Rev_USD AS Group_Rebates , rev_local AS Transient_Rebates_local , Rev_USD AS Transient_Rebates , rev_local AS Contract_Rebates_local , Rev_USD AS Contract_Rebates , rev_local AS Other_Rev_local , Rev_USD AS Other_Rev , Rev AS when ( 'GRP CTRG') Group_Catering , Rev AS when ( 'LCL CTRG') Local_Catering  FROM Actuals_ilo_&ODYrMo.);",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
"CREATE TABLE Actuals_Updatea AS (SELECT marsha, year, month, wdwe, lcl_curr, SUM(group_rms) AS group_rms, SUM(group_rev_local) AS group_rev_local, SUM(group_rev) AS group_rev, SUM(Contract_rms) AS Contract_rms, SUM(Contract_rev_local) AS Contract_rev_local, SUM(Contract_rev) AS Contract_rev, SUM(Transient_rms) AS Transient_rms, SUM(Transient_rev_local) AS Transient_rev_local, SUM(Transient_rev) AS Transient_rev, SUM(group_Rebates_local) AS group_Rebates_local, SUM(group_rebates) AS group_rebates, SUM(Contract_Rebates_local) AS Contract_Rebates_local, SUM(Contract_rebates) AS Contract_rebates, SUM(Transient_Rebates_local) AS Transient_Rebates_local, SUM(Transient_rebates) AS Transient_rebates, SUM(other_rev_local) AS other_rev_local, SUM(Other_Rev) AS Other_Rev, SUM(group_catering) AS group_catering, SUM(local_catering) AS local_catering FROM actuals GROUP BY marsha, year, month, wdwe, lcl_curr );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
" CREATE TABLE Rm_Projections AS select prop_code AS MARSHA, e.year,EXTRACT(QUARTER FROM mdy( e.month,1,e.year)) AS Quarter, e.WDWE, SUM( capacity) AS Capacity, SUM( coalesce( a.Group_Rms,( au_gr_ten_rn+ au_gr_tobe_rn+ au_gr_def_rn))) AS Group_Rms, SUM( CASE WHEN au_tr_rv<>usd_au_tr_rv THEN coalesce( a.Group_Rev_Local,( au_gr_ten_rv+ au_gr_tobe_rv+ au_gr_def_rv)) end) AS Group_Rev_local, SUM( coalesce( a.group_rev,(  usd_au_gr_ten_rv+ usd_au_gr_tobe_rv+ usd_au_gr_def_rv))) AS Group_Rev, SUM( coalesce( a.contract_rms,au_ct_rn)) AS Contract_Rms, SUM( CASE WHEN au_tr_rv<>usd_au_tr_rv THEN coalesce( a.contract_rev_local,au_ct_rv) end) AS Contract_Rev_local, SUM( coalesce( a.contract_rev,usd_au_ct_rv)) AS Contract_Rev, SUM( coalesce( a.transient_rms,au_tr_rn)) AS Transient_Rms, SUM( CASE WHEN au_tr_rv<>usd_au_tr_rv THEN coalesce( a.transient_rev_local,au_tr_rv) end) AS Transient_Rev_local, SUM( coalesce( a.transient_rev,usd_au_tr_rv)) AS Transient_Rev, SUM( CASE WHEN au_gr_reb<>au_gr_reb_usd THEN coalesce( a.group_rebates_local,au_gr_reb) end) AS Group_Rebates_local, SUM( CASE WHEN au_ct_reb<>au_ct_reb_usd THEN coalesce( a.contract_rebates_local,au_ct_reb) end) AS Contract_Rebates_local, SUM( CASE WHEN au_tr_reb<>au_tr_reb_usd THEN coalesce( a.transient_rebates_local,au_tr_reb) end) AS Transient_Rebates_local, SUM( CASE WHEN au_othrm_rv<>au_othrm_rv_usd THEN coalesce( a.other_rev_local,au_othrm_rv) end) AS Other_Rev_local, SUM( coalesce( a.group_rebates,usd_au_gr_reb)) AS Group_Rebates, SUM( coalesce( a.contract_rebates,usd_au_ct_reb)) AS Contract_Rebates, SUM( coalesce( a.transient_rebates,usd_au_tr_reb)) AS Transient_Rebates, SUM( coalesce( a.other_rev,usd_au_othrm_rv)) AS Other_Rev, SUM( CASE WHEN e.year < &ODYr. THEN ( au_gr_ten_rn+ au_gr_tobe_rn+ au_gr_def_rn) ELSE b_gr_rn end ) AS Budget_Group_Rms, SUM( CASE WHEN au_tr_rv<>usd_au_tr_rv AND e.year < &ODYr. THEN ( au_gr_ten_rv+ au_gr_tobe_rv+ au_gr_def_rv) when au_tr_rv<>usd_au_tr_rv THEN b_gr_rv end ) AS Budget_Group_Rev_local, SUM( CASE WHEN e.year < &ODYr. THEN ( usd_au_gr_ten_rv+ usd_au_gr_tobe_rv+ usd_au_gr_def_rv) ELSE usd_b_gr_rv end ) AS Budget_Group_Rev, SUM( CASE WHEN e.year < &ODYr. THEN au_ct_rn ELSE b_ct_rn end) AS Budget_Contract_Rms, SUM( CASE WHEN au_tr_rv<>usd_au_tr_rv AND e.year < &ODYr. THEN au_ct_rv when au_tr_rv<>usd_au_tr_rv THEN b_ct_rv end) AS Budget_Contract_Rev_local, SUM( CASE WHEN e.year < &ODYr. THEN usd_au_ct_rv ELSE usd_b_ct_rv end) AS Budget_Contract_Rev, SUM( CASE WHEN e.year < &ODYr. THEN au_tr_rn ELSE b_tr_rn end) AS Budget_Transient_Rms, SUM( CASE WHEN au_tr_rv<>usd_au_tr_rv AND e.year < &ODYr. THEN au_tr_rv when au_tr_rv<>usd_au_tr_rv THEN b_tr_rv end) AS Budget_Transient_Rev_local, SUM( CASE WHEN e.year < &ODYr. THEN usd_au_tr_rv ELSE usd_b_tr_rv end) AS Budget_Transient_Rev, SUM( CASE WHEN au_gr_reb<>au_gr_reb_usd AND e.year < &ODYr. THEN au_gr_reb when b_gr_reb<>usd_b_gr_reb THEN b_gr_reb end) AS Budget_Group_Rebates_local, SUM( CASE WHEN au_ct_reb<>au_ct_reb_usd AND e.year < &ODYr. THEN au_ct_reb when b_ct_reb<>usd_b_ct_reb THEN b_ct_reb end) AS Budget_Contract_Rebates_local, SUM( CASE WHEN au_tr_reb<>au_tr_reb_usd AND e.year < &ODYr. THEN au_tr_reb when b_tr_reb<>usd_b_tr_reb THEN b_tr_reb end) AS Budget_Transient_Rebates_local, SUM( CASE WHEN au_othrm_rv<>au_othrm_rv_usd AND e.year < &ODYr. THEN au_othrm_rv when b_othrm_rv<>usd_b_othrm_rv THEN b_othrm_rv end) AS Budget_Other_Rev_local, SUM( CASE WHEN e.year < &ODYr. THEN usd_au_gr_reb ELSE usd_b_gr_reb end) AS Budget_Group_Rebates, SUM( CASE WHEN e.year < &ODYr. THEN usd_au_ct_reb ELSE usd_b_ct_reb end) AS Budget_Contract_Rebates, SUM( CASE WHEN e.year < &ODYr. THEN usd_au_tr_reb ELSE usd_b_tr_reb end) AS Budget_Transient_Rebates, SUM( CASE WHEN e.year < &ODYr. THEN usd_au_othrm_rv ELSE usd_b_othrm_rv end) AS Budget_Other_Rev, SUM( CASE WHEN e.year < &ODYr. THEN Capacity ELSE budgCap end) AS Budget_Capacity FROM proj.Extractsum_mo_&ODYrMo._actupdt e LEFT JOIN Actuals_Update a ON e.prop_code=a.marsha AND e.year=a.year AND e.month=a.month AND e.wdwe=a.wdwe WHERE e.year between &OdYr.-1 AND &OdYr.+1 GROUP BY prop_code, e.year, calculated Quarter, e.WDWE;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
" CREATE TABLE fx_by_month AS select DISTINCT prop_code AS marsha, year, month, CURCY_LOCAL, CURCY_SELLING, FX_SELLING_PER_USD, FX FROM proj.Extractsum_mo_&ODYrMo._ActUpdt WHERE year >= %SUBSTRING( &odyr,1,4) ORDER BY MARSHA, YEAR DESC, MONTH DESC;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
"CREATE TABLE Catering_NALO AS ( SELECT MARSHA , Year , Month , GR_LY_Rev , LC_ProjAct_Rev , LC_Bgt_Rev , LC_LY_Rev , EXTRACT(QUARTER FROM mdy( month,1,year) ) AS Quarter , gr_ly_rev AS GR_ProjAct_Rev , gr_ly_rev AS GR_Bgt_Rev , ' ' AS gr_ly_rev , lc_ly_rev AS lc_projAct_Rev , lc_ly_rev AS lc_bgt_rev , ' ' AS lc_ly_re FROM ""\\hdqmdm1fpcl4v1\lodg-revmgmt\rm eanlys\reports\Owner Deck\data\&ODYrMo\CateringNALO_&ODYrMo..txt"" lrecl=938 missover firstobs=2  WHERE YEAR = %SUBSTRING( &ODYr,1,4));",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
"CREATE TABLE Catering_ILO AS ( SELECT MARSHA , Year , Month , GR_LY_Rev , LC_ProjAct_Rev , LC_Bgt_Rev , LC_LY_Rev , EXTRACT(QUARTER FROM mdy( month,1,year) ) AS Quarter , gr_ly_rev AS GR_ProjAct_Rev , gr_ly_rev AS GR_Bgt_Rev , ' ' AS gr_ly_rev , lc_ly_rev AS lc_projAct_Rev , lc_ly_rev AS lc_bgt_rev , ' ' AS lc_ly_re FROM ""\\hdqmdm1fpcl4v1\lodg-revmgmt\rm eanlys\reports\Owner Deck\data\&ODYrMo\CateringILO_&ODYrMo..txt"" lrecl=938 missover firstobs=2  WHERE YEAR = %SUBSTRING( &ODYr,1,4));",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
 CREATE TABLE catering AS ( SELECT  *  FROM catering_nalo UNION ALL SELECT  *  FROM catering_ilo);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
" CREATE TABLE Catering_Sum AS select f.curcy_local, c.marsha, c.year, c.quarter, 'MO' AS WDWE, SUM( CASE WHEN f.curcy_local='USD' THEN . ELSE coalesce( a.group_catering,c.gr_projAct_rev) * f.fx end) AS Group_Catering_local, SUM( CASE WHEN f.curcy_local='USD' THEN . ELSE coalesce( a.local_catering,c.lc_projAct_Rev) * f.fx end) AS Local_Catering_local, SUM( CASE WHEN f.curcy_local='USD' THEN . ELSE gr_bgt_rev * f.fx end) AS Budget_Group_Catering_local, SUM( CASE WHEN f.curcy_local='USD' THEN . ELSE lc_bgt_rev * f.fx end) AS Budget_Local_Catering_local, SUM( coalesce( a.group_catering,c.gr_projAct_rev) / fx_selling_per_usd) AS group_catering, SUM( coalesce( a.local_catering,c.lc_projAct_Rev) / fx_selling_per_usd) AS local_catering, SUM( gr_bgt_rev / fx_selling_per_usd) AS budget_group_catering, SUM( lc_bgt_rev / fx_selling_per_usd) AS budget_local_catering FROM catering c LEFT JOIN actuals_UPDATE a ON c.marsha=a.marsha AND c.year=a.year AND c.month=a.month AND a.wdwe='MO' LEFT JOIN fx_by_month2 f ON f.marsha=c.marsha AND f.year=c.year AND f.month=c.month GROUP BY f.curcy_local, c.marsha, c.year, c.quarter;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
" CREATE TABLE owner.Projections AS select p.*, r.*, c.*, &ODYrMo AS AsOf FROM rm_projections r LEFT JOIN catering_sum c ON r.marsha=c.marsha AND r.year=c.year AND r.quarter=c.quarter AND r.wdwe=c.wdwe RIGHT JOIN owner.plu p ON p.marsha=r.marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
" CREATE TABLE STLY_Base AS  ( select marsha, int( stay_yr) AS Year, int( stay_qtr) AS Quarter, int( stay_pd) AS Month, WDWE, book_stat, SUM( rooms_Net) AS Rooms, SUM( rooms_rv_Gross) AS Gross_Rev, SUM( rooms_net_ly) AS Rooms_STLY, SUM( rooms_rv_ly) AS Gross_Rev_STLY, SUM( rooms_Gross) AS Gross_Rooms_TY, SUM( rooms_gross_LY) AS Gross_Rooms_STLY, SUM( CASE WHEN opp_type='G' THEN rooms_net end) AS Group_Rooms, SUM( CASE WHEN opp_type='G' THEN rooms_net_ly end) AS Group_Rooms_STLY, SUM( CASE WHEN opp_type='L' THEN catering_rv end) AS Catering_Rev_Local, SUM( CASE WHEN opp_type='G' THEN catering_rv end) AS Catering_Rev_Group, SUM( CASE WHEN opp_type='L' THEN catering_rv_ly end) AS Catering_Rev_Local_STLY, SUM( CASE WHEN opp_type='G' THEN catering_rv_ly end) AS Catering_Rev_Group_STLY, asof_yrmo AS AsOf FROM aw_tgt_bus_dbo.oy_groupbookingpace a WHERE a.asof_yrmo = &ODYrMo. AND a.stay_yr <= &ODYr. + 4 AND a.book_act_ind = '0' GROUP BY marsha, int( stay_yr), int( stay_qtr), int( stay_pd), WDWE, book_stat, a.asof_yrmo  ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
 CREATE TABLE STLY_Props  AS select distinct marsha FROM STLY_Base;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
CREATE INDEX marsha ON STLY_Props(marsha);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
" CREATE TABLE STLY_Add AS ( SELECT marsha, stayyr, stayqtr, Gross_Rev_STLY, stayYr AS Year, stayQtr AS Quarter, staypd AS Month, '1' AS WDWE , 'D' AS Book_Stat , rmntsdefty AS Rooms , revdefty AS Gross_Rev , rmntsdefly AS Rooms_STLY , revdefly AS Gross_Rev_STLY , '1' AS book_stat , rmntstentty AS Rooms , revtentty AS Gross_Rev , rmntstently AS Rooms_STLY , revtently AS Gross_Rev_STLY  FROM AWPROD.ROLLINGDATA_MISW  WHERE reportingyr = &ODYr. AND reportingpd=&CurMon. AND (_iorc_ <> %sysrc( _sok))or );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
 CREATE TABLE STLY_Combined AS ( SELECT  *  FROM STLY_Base UNION ALL SELECT  *  FROM STLY_Add);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
" CREATE TABLE owner.stly AS select p.*, s.* FROM stly_Combined s RIGHT JOIN owner.plu p ON s.marsha=p.marsha WHERE book_stat <> 'Z';",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
" CREATE TABLE DemEyeReg AS  (  select a.property_cd AS MARSHA, ( a.date_stay_dt >= &nzMoBeg. OR a.date_stay_dt between &nzMoLYBeg. AND &nzMoLYEnd) AS Mth, ( a.date_stay_dt >= &nzL3Beg. OR a.date_stay_dt between &nzL3LYBeg. AND &nzmoLYend. ) AS L3, ( a.year_cal_id=&ODyr. OR ( a.year_cal_id=&ODyr.-1 AND a.date_stay_dt <= &nzMoLYEnd. )) AS YTD, CASE WHEN a.year_cal_id=&odYr. OR a.date_stay_dt >= &Nzl3Beg THEN 'TY' ELSE 'LY' END AS TYLY, CASE WHEN a.ab_day_of_week_cd IN ( 'FRI','SAT') THEN 'WE' ELSE 'WD' END AS WDWE, CASE WHEN a.market_seg_nm IN ( 'Group','Contract','Complimentary') THEN a.market_seg_nm ELSE 'Transient' END AS Segment1, a.market_seg_nm AS Segment2, a.ab_tier_loa_txt AS LOS_Tier, SUM( a.roomnights_qty) AS rn, SUM( CASE WHEN p.currency_iso_cd='USD' THEN a.net_rev_usd_amt ELSE a.net_rev_local_amt end) AS rv, SUM( a.net_rev_usd_sub_amt) AS rv_usd FROM mrdw_fact_agg_dr_rev_analysis a INNER JOIN mrdw_dim_property p ON a.property_cd=p.property_cd WHERE a.date_stay_dt <= &nzMoEnd. AND ( a.year_cal_id IN (  &ODyr., &ODyr.-1) OR a.date_stay_dt >= &nzL3LYBeg. ) AND a.brand_cd IN ( 'FS', 'BR', 'CC', 'RZ', 'BG', 'EB', 'CY', 'RI', 'SH', 'TS', 'FI', 'AK', 'AR', 'ER', 'GE', 'AL','DE','EL','FP','LC','MD','OX','SI','TX','WH','WI','XR') GROUP BY a.property_cd, ( a.date_stay_dt >= &nzMoBeg. OR a.date_stay_dt between &nzMoLYBeg. AND &nzMoLYEnd), ( a.date_stay_dt >= &nzL3Beg. OR a.date_stay_dt between &nzL3LYBeg. AND &nzmoLYend. ), ( a.year_cal_id=&ODyr. OR ( a.year_cal_id=&ODyr.-1 AND a.date_stay_dt <= &nzMoLYEnd. )), CASE WHEN a.year_cal_id=&odYr. OR a.date_stay_dt >= &Nzl3Beg THEN 'TY' ELSE 'LY' end, WDWE, Segment1, a.market_seg_nm, a.ab_tier_loa_txt  )  ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
"CREATE TABLE DemandRaw AS ( SELECT MARSHA , YrMo , WDWE , los_tier , Segment2 , Addl_Demand , ( yrmo = &ODYrMo. OR yrmo = ( &ODYrMo.-100) ) AS Mth , ( ( &ODYrMo >= yrmo >= &l2. ) OR ( ( &l2.-100) <= yrmo <= ( &ODYrMo.-100)) ) AS L3 , ( ( &ODYrMo >= yrmo >= &ODYr.01) OR ( &LYR.01 <= yrmo <= ( &ODYrMo.-100)) ) AS YTD , ifc( yrmo >= &ODYr.01 OR yrmo >= &l2.,'TY','LY' ) AS TYLY , ifc( Segment2 IN ( 'Group','Contract','Complimentary'), segment2, 'Transient' ) AS segment FROM ""G:\RM EAnlys\Reports\Owner Deck\data\&ODYrMo\State of the Hotel Addl Demand.csv"" );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
"CREATE TABLE Demand AS (SELECT marsha, tyly, ytd, l3, mth, wdwe, segment1, segment2, los_tier, SUM(Addl_demand) AS Addl_demand FROM demandRaw GROUP BY marsha, tyly, ytd, l3, mth, wdwe, segment1, segment2, los_tier );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
"SELECT * FROM demeyereg ORDER BY marsha ,tyly ,ytd ,l3 ,mth ,wdwe ,segment1 ,segment2 ,los_tier;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
"SELECT * FROM demand ORDER BY marsha ,tyly ,ytd ,l3 ,mth ,wdwe ,segment1 ,segment2 ,los_tier;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
" CREATE TABLE fx_mrdw  AS select marsha, mth, l3, ytd, SUM( rv_usd) / SUM( rv) AS fx_usd_per_selling FROM demeyereg WHERE tyly='TY' GROUP BY marsha, mth, l3, ytd;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
"CREATE INDEX idx ON fx_mrdw(marsha, mth, l3, ytd);",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
" CREATE TABLE demeyereg_YoY AS ( SELECT  *, rv AS rv_local, rv_usd AS rv AS None, 1 AS fx_usd_per_selling , CASE WHEN  rv_LY <> rv_local_LY  THEN rv_local_ly * fx_usd_per_selling ELSE rv_local_ly END AS rv_ly FROM demeyereg A JOIN demeyereg B ON  A.marsha =  B.marsha AND  A.ytd =  B.ytd AND  A.L3 =  B.L3 AND  A.mth =  B.mth AND  A.wdwe =  B.wdwe AND  A.segment1 =  B.segment1 AND  A.segment2 =  B.segment2 AND  A.los_tier =  B.los_tier JOIN demand C ON  B.marsha =  C.marsha AND  B.ytd =  C.ytd AND  B.L3 =  C.L3 AND  B.mth =  C.mth AND  B.wdwe =  C.wdwe AND  B.segment1 =  C.segment1 AND  B.segment2 =  C.segment2 AND  B.los_tier =  C.los_tier JOIN demand D ON  C.marsha =  D.marsha AND  C.ytd =  D.ytd AND  C.L3 =  D.L3 AND  C.mth =  D.mth AND  C.wdwe =  D.wdwe AND  C.segment1 =  D.segment1 AND  C.segment2 =  D.segment2 AND  C.los_tier =  D.los_tier WHERE TYLY='TY') rename=( rv=rv_local rv_usd=rv demeyereg ( and=( tyly='LY') rename=( rn=rn_ly rv=rv_local_ly RV_USD=RV_LY demand ( and=( tyly='TY' demand ( and=( tyly='LY') rename=( addl_demand=addl_demand_ly AND _iorc_ = %sysrc( _dsenom)) AS ( SELECT  *  , 1 AS fx_usd_per_selling , CASE WHEN  rv_LY <> rv_local_LY  THEN rv_local_ly * fx_usd_per_selling ELSE rv_local_ly END AS rv_ly FROM fx_mrdw A JOIN key=idx B ON  A.marsha =  B.marsha AND  A.ytd =  B.ytd AND  A.L3 =  B.L3 AND  A.mth =  B.mth AND  A.wdwe =  B.wdwe AND  A.segment1 =  B.segment1 AND  A.segment2 =  B.segment2 AND  A.los_tier =  B.los_tier JOIN / C ON  B.marsha =  C.marsha AND  B.ytd =  C.ytd AND  B.L3 =  C.L3 AND  B.mth =  C.mth AND  B.wdwe =  C.wdwe AND  B.segment1 =  C.segment1 AND  B.segment2 =  C.segment2 AND  B.los_tier =  C.los_tier JOIN unique D ON  C.marsha =  D.marsha AND  C.ytd =  D.ytd AND  C.L3 =  D.L3 AND  C.mth =  D.mth AND  C.wdwe =  D.wdwe AND  C.segment1 =  D.segment1 AND  C.segment2 =  D.segment2 AND  C.los_tier =  D.los_tier WHERE TYLY='TY') rename=( rv=rv_local rv_usd=rv demeyereg ( and=( tyly='LY') rename=( rn=rn_ly rv=rv_local_ly RV_USD=RV_LY demand ( and=( tyly='TY' demand ( and=( tyly='LY') rename=( addl_demand=addl_demand_ly AND _iorc_ = %sysrc( _dsenom));",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
"CREATE TABLE DemEyeReg_Sum AS (SELECT marsha, ytd, L3, mth, wdwe, segment1, segment2, SUM(rn:) AS rn:, SUM(rv:) AS rv:, SUM(addl_demand:) AS addl_demand: FROM demeyereg_yoy GROUP BY marsha, ytd, L3, mth, wdwe, segment1, segment2 );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
" CREATE TABLE owner.DemEyeReg  AS select p.*, CASE WHEN YTD=1 THEN 'YTD' when L3=1 THEN 'L3 ' when Mth=1 THEN 'MO ' END AS TimeFrame, d.*, &ODYrMo. AS AsOf FROM owner.plu p LEFT JOIN demeyereg_sum d ON p.marsha=d.marsha WHERE p.brnd not IN ( 'RI','TS','ER') AND ( ytd=1 OR L3=1 OR mth=1 ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
"ALTER TABLE owner.DemEyeReg DROP COLUMN ytd,L3,mth ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
" CREATE TABLE owner.DemEyeRegIntl AS select p.*, CASE WHEN i.timeframe='MN' THEN 'MO ' ELSE i.timeframe END AS timeframe, i.wdwe, d.mrdw_category_2 AS segment1, d.mrdw_category AS Segment2, i.rn, i.rv, i.rv_local, i.rn_ly, i.rv_ly, i.rv_local_ly FROM owner.plu p LEFT JOIN idemeye.intldemeye i ON p.marsha=i.marsha INNER JOIN ownroot.demeyemap d ON i.seg2=d.finance_category WHERE p.region='S_' ORDER BY i.marsha, calculated timeframe, i.wdwe, d.mrdw_category_2, d.mrdw_category ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
" CREATE TABLE DemEyeES_YoY AS ( SELECT  * , CASE WHEN  los_tier <> 'LOA:1-4'  THEN 'WD' END AS WDWE FROM DemEyeReg_YoY );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
"CREATE TABLE DemEyeES_Sum AS (SELECT marsha, ytd, L3, mth, los_Tier, wdwe, segment1, segment2, SUM(rn:) AS rn:, SUM(rv:) AS rv:, SUM(addl_demand:) AS addl_demand: FROM demeyeES_yoy GROUP BY marsha, ytd, L3, mth, los_Tier, wdwe, segment1, segment2 );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
" CREATE TABLE owner.DemEyeES  AS select p.*, CASE WHEN YTD=1 THEN 'YTD' when L3=1 THEN 'L3 ' when Mth=1 THEN 'MO ' END AS TimeFrame, d.*, &ODYrMo. AS AsOf FROM owner.plu p LEFT JOIN demeyeES_sum d ON p.marsha=d.marsha WHERE p.brnd IN ( 'RI','TS','ER') AND ( ytd=1 OR L3=1 OR mth=1 ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
"ALTER TABLE owner.DemEyeES DROP COLUMN ytd,L3,mth ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
" CREATE TABLE fx_mrdw_MTH  AS select p.curr, SUM( rv_usd) / SUM( rv) AS fx_usd_per_selling FROM demeyereg d INNER JOIN prop_misw p ON d.marsha=p.marsha WHERE tyly='TY' AND MTH=1 GROUP BY p.curr;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
CREATE INDEX curr ON fx_mrdw_MTH(curr);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
" CREATE TABLE fx_mrdw_YTD  AS select p.curr, SUM( rv_usd) / SUM( rv) AS fx_usd_per_selling FROM demeyereg d INNER JOIN prop_misw p ON d.marsha=p.marsha WHERE tyly='TY' AND YTD=1 GROUP BY p.curr;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
CREATE INDEX curr ON fx_mrdw_YTD(curr);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
" CREATE TABLE ACT_CurrMo AS  (   select a.marsha_cd AS marsha, a.company_nm AS coname, SUM( comrn_ty) AS rnty_YTD, SUM( comrvlocal_ty) AS rvty_YTD_local, SUM( comrvusd_ty) AS rvty_YTD, SUM( comrn_ly) AS rnly_YTD, SUM( comrvlocal_ly) AS rvly_YTD_local, SUM( comrvusd_ly) AS rvly_YTD FROM nzedwprd_tgt.admin.mrdw_fact_act_prop_dtls a WHERE Tier not IN ( 'Ecommerce','GOVT','QUAL') AND year_id = &ODYr. AND month_id = &CurMon. GROUP BY a.marsha_cd, a.company_nm  ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
" CREATE TABLE ACT_LastMo AS  (   select a.marsha_cd AS marsha, a.company_nm AS coname, SUM( comrn_ty) AS rnty_YTD, SUM( comrvlocal_ty) AS rvty_YTD_local, SUM( comrvusd_ty) AS rvty_YTD, SUM( comrn_ly) AS rnly_YTD, SUM( comrvlocal_ly) AS rvly_YTD_local, SUM( comrvusd_ly) AS rvly_YTD FROM nzedwprd_tgt.admin.mrdw_fact_act_prop_dtls a WHERE Tier not IN ( 'Ecommerce','GOVT','QUAL') AND year_id = %SUBSTRING( &L1.,1,4) AND month_id = %SUBSTRING( &L1.,5,2) GROUP BY a.marsha_cd, a.company_nm  ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
" CREATE TABLE ACT_CurrMo2 AS select a.marsha, a.coname, a.rnty_ytd - coalesce( b.rnty_ytd,0) AS rnty_mn, a.rvty_ytd_local - coalesce( b.rvty_ytd_local,0) AS rvty_mn_local, a.rvty_YTD - coalesce( b.rvty_YTD,0) AS rvty_mn, a.rnly_YTD - coalesce( b.rnly_YTD,0) AS rnly_mn, a.rvly_YTD_local - coalesce( b.rvly_YTD_local,0) AS rvly_mn_local, a.rvly_YTD - coalesce( b.rvly_YTD,0) AS rvly_mn, a.rnty_YTD, a.rvty_YTD_local, a.rvty_YTD, a.rnly_YTD, a.rvly_YTD_local, a.rvly_YTD FROM act_currmo a LEFT JOIN act_LastMo b ON a.marsha=b.marsha AND a.coname=b.coname AND &ODYr = %SUBSTRING( &L1,1,4 ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
 CREATE TABLE ACT AS ( SELECT * FROM ['ACT']);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
"CREATE TABLE ACT_rank AS SELECT * FROM ( SELECT *, RANK() OVER (  PARTITION BY marsha ORDER BY rnTY_YTD DESC  ) AS rank FROM ACT_rank) WHERE  rank between 1 AND 10;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
" CREATE TABLE owner.act_Top10  AS select p.*, a.* FROM owner.plu p LEFT JOIN Act_Rank a ON p.marsha=a.marsha ORDER BY p.marsha, rank;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
ALTER TABLE owner.act_Top10 DROP COLUMN rank ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
" CREATE TABLE owner.STR AS select p.*, s.timef, s.maravail, s.marsold, s.marrev_str_usd AS marrev, s.marrev_lcl, s.mktavail, s.mktsold, s.mktrev_str_usd AS mktrev, s.mktrev_lcl, s.maravailLY, s.marsoldLY, s.marrevly_str_usd AS marrevLY, s.marrevly_lcl, s.mktavailLY, s.mktsoldLY, s.mktrevLY_str_usd AS mktrevLY, s.mktrevly_lcl FROM owner.plu p LEFT JOIN Str_cc.Nonvalidated_crunch_&L1. s ON p.marsha=s.marsha WHERE timef not like 'L12%';",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
" CREATE TABLE otbty AS  (  select a.property_cd, date( date_trunc( 'month',CASE WHEN a.cal_yr=&ODYr. THEN a.stay_date ELSE a.stay_date+364 end)) AS MoDate_TY, c.market_seg_nm, ( CASE WHEN date_part( 'dow',a.stay_date) < 6 THEN 'WD' ELSE 'WE' end) AS wdwe, a.tier_los_ind, a.room_category_cd, SUM( CASE WHEN a.cal_yr=&ODYr. THEN a.room_nights ELSE 0 end) AS rn_TY, SUM( CASE WHEN a.cal_yr=&ODYr. THEN a.rev_net ELSE 0 end) AS rv_TY, SUM( CASE WHEN a.cal_yr=&ODYr. THEN a.rev_net_us ELSE 0 end) AS rv_usd_TY, SUM( CASE WHEN a.cal_yr=&LYR. THEN a.room_nights ELSE 0 end) AS rn_LY, SUM( CASE WHEN a.cal_yr=&LYR. THEN a.rev_net ELSE 0 end) AS rv_LY, SUM( CASE WHEN a.cal_yr=&LYR. THEN a.rev_net_us ELSE 0 end) AS rv_usd_LY FROM Mrdw_fact_otb_seg_extract_mn a INNER JOIN ( select distinct b.market_seg_nm, b.market_prefix_cd FROM mrdw_fact_agg_dr_rev_analysis b WHERE b.year_cal_id IN (  &ODyr. ) AND b.month_cal_id=&CurMon. ) c ON a.market_segment=c.market_prefix_cd WHERE ( a.cal_yr=&ODYr. AND a.cal_month=&Curmon. AND a.stay_date between &nzN1Beg. AND &nzN4End. ) OR ( a.cal_yr=&LYR. AND a.cal_month=&Curmon. AND a.stay_date between &nzN1LYBeg. AND &nzN4LYEnd. ) GROUP BY a.property_cd, MoDate_TY, c.market_seg_nm, wdwe, tier_los_ind,room_category_cd ORDER BY a.property_cd, MoDate_TY, c.market_seg_nm, wdwe, tier_los_ind,room_category_cd  )  ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
" CREATE TABLE owner.OTB_All  AS select b.*, a.* FROM work.otbty AS a LEFT JOIN owner.plu AS b ON b.marsha=a.property_cd;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
ALTER TABLE owner.OTB_All DROP COLUMN property_cd ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_State_of_the_Hotel.sas
"CREATE TABLE sourceData AS ( SELECT D_RUN , ' ' AS au_grp_rebates , ' ' AS au_cnt_rebates , ' ' AS au_other_re, CASE WHEN  AU_Grp_RMS_DEF=' '  THEN 0 END AS AU_Grp_RMS_DEF, CASE WHEN  AU_Grp_RMS_TNT=' '  THEN 0 END AS AU_Grp_RMS_TNT, CASE WHEN  AU_Grp_RMS_TOBE=' '  THEN 0 END AS AU_Grp_RMS_TOBE, CASE WHEN  AU_TRN_RMS=' '  THEN 0 END AS AU_TRN_RMS, CASE WHEN  AU_CNT_RMS=' '  THEN 0 END AS AU_CNT_RMS, CASE WHEN  Capacity=' '  THEN 0 END AS Capacity, CASE WHEN  AU_OOO=' '  THEN 0 END AS AU_OOO FROM ""\\hdqmdm1fpcl4v1\lodg-revmgmt\RM EAnlys\Shared_Data\Projections\Daily Extract\pj_test_extract_&ExtractDt..txt"" missover  WHERE _N_ = 1 AND day( staydate) <> 1) AS ( SELECT prop_code , StayDate , AU_GRP_RMS_DEF , AU_GRP_RMS_TNT , AU_GRP_RMS_TOBE , AU_TRN_RMS , AU_GRP_REBATES , AU_TRN_REBATES , AU_CNT_RMS , AU_CNT_REBATES , AU_GRP_REV_DEF , AU_GRP_REV_TNT , AU_GRP_REV_TOBE , OY_TRNS_FCST , AU_OTHER_REV , AU_TRN_REV , AU_CNT_REV , AU_OOO , GRP_NOTE , TRN_NOTE , CNT_NOTE , CAPACITY , SELL_OUT , COMP_RMS , SEG_ID , ' ' AS au_grp_rebates , ' ' AS au_cnt_rebates , ' ' AS au_other_re, CASE WHEN  AU_Grp_RMS_DEF=' '  THEN 0 END AS AU_Grp_RMS_DEF, CASE WHEN  AU_Grp_RMS_TNT=' '  THEN 0 END AS AU_Grp_RMS_TNT, CASE WHEN  AU_Grp_RMS_TOBE=' '  THEN 0 END AS AU_Grp_RMS_TOBE, CASE WHEN  AU_TRN_RMS=' '  THEN 0 END AS AU_TRN_RMS, CASE WHEN  AU_CNT_RMS=' '  THEN 0 END AS AU_CNT_RMS, CASE WHEN  Capacity=' '  THEN 0 END AS Capacity, CASE WHEN  AU_OOO=' '  THEN 0 END AS AU_OOO FROM ""\\hdqmdm1fpcl4v1\lodg-revmgmt\RM EAnlys\Shared_Data\Projections\Daily Extract\pj_test_extract_&ExtractDt..txt"" missover  WHERE _N_ = 1 AND day( staydate) <> 1);",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_Weekly_Revenue_Planning_Daily_Extract_Weekly_Batch.sas
    INSERT INTO AW_REV_DBO.Weekly_Proj Select * FROM AW_REV_DBO.Weekly_temp ) by odbc ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_Weekly_Revenue_Planning_Daily_Extract_Weekly_Batch.sas
"   CALL AW_TGT_PROXY_DBO.GRANT_ON_TABLE( 'AW_REV_DBO','Weekly_Proj' )  ) by odbc ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Analytics_Weekly_Revenue_Planning_Daily_Extract_Weekly_Batch.sas
" CREATE TABLE dow_count_p3 AS selectEXTRACT(YEAR FROM date_dt_p) AS year,EXTRACT(MONTH FROM date_dt_p) AS mnth, COUNT( date_dt_p) AS COUNT FROM dow_count_p GROUP BY year, mnth ORDER BY year, mnth;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Product_Analytics_7_Group_Projection_Comparision_RMSAD_LockedFcst.sas
" CREATE TABLE RMSAD_PLU AS  (  SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER A WHERE openflag = 'Y' AND project_status='Open' AND brnd not IN ( 'DS', 'MV','ZC') AND interface='2'   ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Product_Analytics_7_Group_Projection_Comparision_RMSAD_LockedFcst.sas
 CREATE TABLE RP_snap AS  (  SELECT * FROM AW_REV_DBO.PROJECTIONS_MISW_BYMO_&runmo.   ) ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Product_Analytics_7_Group_Projection_Comparision_RMSAD_LockedFcst.sas
" CREATE TABLE rp_group AS select a.marsha AS prop_code, year AS year, mo AS month, rn, budget_rn FROM rp_snap AS a INNER JOIN rmsad_plu AS b ON a.marsha=b.marsha WHERE market_segment_misw='Group' AND year >= ( &ACT_LYr. ) GROUP BY a.marsha, year, month;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Product_Analytics_7_Group_Projection_Comparision_RMSAD_LockedFcst.sas
 CREATE TABLE hotel AS select distinct( prop_code) FROM rp_group;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Product_Analytics_7_Group_Projection_Comparision_RMSAD_LockedFcst.sas
" CREATE TABLE time_p AS select year, mnth AS month FROM dow_count_p3 GROUP BY year, month;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Product_Analytics_7_Group_Projection_Comparision_RMSAD_LockedFcst.sas
" CREATE TABLE projection_backbone AS select a.prop_code, b.year, b.month FROM hotel a, time_p b;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Product_Analytics_7_Group_Projection_Comparision_RMSAD_LockedFcst.sas
" CREATE TABLE group_yoy AS select a.*, b.rn AS rn_ty, b.budget_rn, c.rn AS rn_ly FROM projection_backbone AS a LEFT JOIN rp_group AS b ON a.prop_code=b.prop_code AND a.year=b.year AND a.month=b.month LEFT JOIN rp_group AS c ON a.prop_code=c.prop_code AND a.year=c.year+1 AND a.month=c.month ORDER BY a.prop_code, a.year, a.month;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Product_Analytics_7_Group_Projection_Comparision_RMSAD_LockedFcst.sas
" CREATE TABLE group_yoy2 AS ( SELECT  * , CASE WHEN  rn_ly=' '  THEN 0 END AS rn_ly, CASE WHEN  rn_ty=' '  THEN 0 END AS rn_ty, CASE WHEN  budget_rn=' '  THEN 0 END AS budget_rn FROM group_yoy );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Product_Analytics_7_Group_Projection_Comparision_RMSAD_LockedFcst.sas
 CREATE TABLE gfcstcmp.group_yoy2_&runmo. AS ( SELECT  *  FROM group_yoy2 );,MDP_Migration_AW_Code_1-10-2020_1709_RM_Product_Analytics_7_Group_Projection_Comparision_RMSAD_LockedFcst.sas
" CREATE TABLE = group_yoy2 outfile=""G:\\RM EAnlys\\Shared_Data\\OYSData\\Suppy - Group Projection\\RMSAD Data\\grp_fcst_comparison_&runmo..csv"" dbms=csv replace  , group_yoy2 outfile=""G:\RM EAnlys\Shared_Data\OYSData\Suppy - Group Projection\RMSAD Data\grp_fcst_comparison_&runmo..csv"" dbms=csv replace AS data ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Product_Analytics_7_Group_Projection_Comparision_RMSAD_LockedFcst.sas
" CREATE TABLE PLU AS  (  SELECT a.*, b.ERS2_USER FROM AW_TGT_BUS_DBO.PROPERTY_MASTER A LEFT JOIN AW_TGT_PROXY_DBO.IT_OY_PROP_CD_WEEKLY B ON a.marsha=b.prop_code WHERE openflag = 'Y' AND project_status='Open' AND interface='2'   ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Product_Analytics_7_SRL_data.sas
 CREATE TABLE UAT1_d AS  (  SELECT a.* FROM AW_TGT_PROXY_DBO.IT_SCE8_POP_STD_RM_CAP_HIST AS a INNER JOIN ( select max( data_dt) AS maxdate FROM AW_TGT_PROXY_DBO.IT_SCE8_POP_STD_RM_CAP_HIST) AS b ON a.data_dt=b.maxdate WHERE a.set_status='ON'   ) ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Product_Analytics_7_SRL_data.sas
" CREATE TABLE data_2a AS select distinct prop_code,EXTRACT(YEAR FROM stay_dt) AS year,EXTRACT(MONTH FROM stay_dt) AS month, COUNT( user_capped) AS cap_ct FROM uat1_d GROUP BY prop_code, year, month;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Product_Analytics_7_SRL_data.sas
" CREATE TABLE data_3a AS select distinct prop_code,EXTRACT(YEAR FROM stay_dt) AS year,EXTRACT(MONTH FROM stay_dt) AS month, COUNT( user_capped) AS act_ct FROM uat1_d WHERE act_status='Y' GROUP BY prop_code, year, month;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Product_Analytics_7_SRL_data.sas
" CREATE TABLE srl_data AS select b.*, coalesce( c.act_ct, 0) AS act_ct FROM data_2a AS b LEFT JOIN data_3a AS c ON b.prop_code=c.prop_code AND b.year=c.year AND b.month=c.month ORDER BY b.prop_code, b.year, b.month;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Product_Analytics_7_SRL_data.sas
 CREATE TABLE srlsetup.srl_data_&yrmn. AS ( SELECT  *  FROM srl_data );,MDP_Migration_AW_Code_1-10-2020_1709_RM_Product_Analytics_7_SRL_data.sas
"CREATE TABLE ""G:\RM EAnlys\Shared_Data\OYSData\Standard Room Limit Data\RMSAD Data\srl_data_&yrmn..csv"" AS ( SELECT * FROM srl_data) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Product_Analytics_7_SRL_data.sas
 CREATE TABLE junk AS  (  select b.* FROM mrdw_dim_date b LIMIT 500  )  ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_(no_Add_Dem)_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE daysinmo AS  (  select b.year_cal, b.month_cal_id , CASE WHEN b.ab_day_of_week_cd IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' END AS wdwe , COUNT( b.date_dt) AS days FROM mrdw_dim_date b WHERE 100*b.year_cal+b.month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo, &curr_mo-100, &l2_mo-100, &l3_mo-100) GROUP BY b.year_cal, b.month_cal_id, wdwe ORDER BY b.year_cal, b.month_cal_id, wdwe  )  ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_(no_Add_Dem)_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE daysinmo2 AS ( SELECT  * , CASE WHEN  100*year_cal+month_cal_id = &curr_mo  THEN days END AS MN_days, CASE WHEN  100*year_cal+month_cal_id = &curr_mo-100  THEN days END AS MN_days_ly, CASE WHEN  100*year_cal+month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo)  THEN days END AS L3_days, CASE WHEN  100*year_cal+month_cal_id+100 IN ( &curr_mo, &l2_mo, &l3_mo)  THEN days END AS L3_days_ly, CASE WHEN  wdwe='WD' AND 100*year_cal+month_cal_id = &curr_mo  THEN days END AS MN_WD_days, CASE WHEN  wdwe='WD' AND 100*year_cal+month_cal_id = &curr_mo-100  THEN days END AS MN_WD_days_ly, CASE WHEN  wdwe='WD' AND 100*year_cal+month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo)  THEN days END AS L3_WD_days, CASE WHEN  wdwe='WD' AND 100*year_cal+month_cal_id+100 IN ( &curr_mo, &l2_mo, &l3_mo)  THEN days END AS L3_WD_days_ly, CASE WHEN  wdwe='WE' AND 100*year_cal+month_cal_id = &curr_mo  THEN days END AS MN_WE_days, CASE WHEN  wdwe='WE' AND 100*year_cal+month_cal_id = &curr_mo-100  THEN days END AS MN_WE_days_ly, CASE WHEN  wdwe='WE' AND 100*year_cal+month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo)  THEN days END AS L3_WE_days, CASE WHEN  wdwe='WE' AND 100*year_cal+month_cal_id+100 IN ( &curr_mo, &l2_mo, &l3_mo)  THEN days END AS L3_WE_days_ly FROM daysinmo );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_(no_Add_Dem)_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE daysinmonth AS select &curr_mo AS yrmo, SUM( MN_days) AS MN_days, SUM( MN_days_ly) AS MN_days_ly , SUM( L3_days) AS L3_days, SUM( L3_days_ly) AS L3_days_ly , SUM( MN_WD_days) AS MN_WD_days, SUM( MN_WD_days_ly) AS MN_WD_days_ly , SUM( L3_WD_days) AS L3_WD_days, SUM( L3_WD_days_ly) AS L3_WD_days_ly , SUM( MN_WE_days) AS MN_WE_days, SUM( MN_WE_days_ly) AS MN_WE_days_ly , SUM( L3_WE_days) AS L3_WE_days, SUM( L3_WE_days_ly) AS L3_WE_days_ly FROM daysinmo2;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_(no_Add_Dem)_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE AdtlDemand AS  (  select a14.property_cd AS MARSHA, a13.year_cal, a13.month_cal_id , CASE WHEN qy_stay_nights <= 4 THEN 'T1' ELSE 'ES' END AS esflag , CASE WHEN a12.cd_room_pool like 'T%' THEN 'TBD' when a12.cd_room_pool like 'O%' THEN 'TBD' when a12.cd_room_pool like 'S%' THEN 'STD' when a12.cd_room_pool like 'G%' THEN 'STD' ELSE 'TBD' END AS rmpool , SUM( a12.qy_addl_demand_total) AS DEMAND FROM mrdw_fact_ddm_stat_unconstrain AS a12 JOIN mrdw_dim_date AS a13 ON ( a12.id_date_stay = a13.date_key) JOIN mrdw_dim_property AS a14 ON ( a12.id_property = a14.property_id) WHERE 100*a13.year_cal+a13.month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo, &curr_mo-100, &l2_mo-100, &l3_mo-100) GROUP BY a14.property_cd, a13.year_cal, a13.month_cal_id, esflag, rmpool ORDER BY a14.property_cd, a13.year_cal, a13.month_cal_id, esflag, rmpool )  ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_(no_Add_Dem)_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE adem_mn AS select marsha , CASE WHEN 100*a.year_cal+a.month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo) THEN &curryr ELSE &curryr-1 END AS yr , 'MN' AS timeframe, esflag, rmpool , DEMAND FROM AdtlDemand AS a WHERE 100*a.year_cal+a.month_cal_id = &curr_mo OR 100*a.year_cal+a.month_cal_id = &curr_mo-100;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_(no_Add_Dem)_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE adem_l3 AS select marsha , CASE WHEN 100*a.year_cal+a.month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo) THEN &curryr ELSE &curryr-1 END AS yr , 'L3' AS timeframe, esflag, rmpool , SUM( Demand) AS demand FROM AdtlDemand AS a GROUP BY marsha, calculated yr, timeframe, esflag, rmpool;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_(no_Add_Dem)_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE ademall AS ( SELECT  *  , compress( timeframe||'_'||esflag||'_'||rmpool||'_Dem_'||yr_lbl ) AS idVAR , CASE WHEN  yr=&curryr  THEN 'TY' WHEN  yr=&curryr-1  THEN 'LY' END AS yr_lbl FROM adem_mn UNION ALL SELECT  *  , compress( timeframe||'_'||esflag||'_'||rmpool||'_Dem_'||yr_lbl ) AS idVAR , CASE WHEN  yr=&curryr  THEN 'TY' WHEN  yr=&curryr-1  THEN 'LY' END AS yr_lbl FROM adem_l3);",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_(no_Add_Dem)_ESFactor_MRDW_Data_Pull.sas
SELECT * FROM ademall ORDER BY marsha;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_(no_Add_Dem)_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE MC29_RN_L12 AS  (  select a.property_cd , SUM( a.roomnights_qty) AS MC29_RN_L12 FROM mrdw_fact_agg_dr_rev_analysis a, mrdw_dim_date b WHERE a.date_stay_dt=b.date_dt AND a.brand_cd IN ( 'RI', 'TS', 'ER') AND a.market_prefix_cd = '29' AND 100*b.year_cal+b.month_cal_id > &curr_mo - 100 AND 100*b.year_cal+b.month_cal_id <= &curr_mo GROUP BY a.property_cd ORDER BY a.property_cd  )  ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_(no_Add_Dem)_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE daysytd_ty AS  (  select b.year_cal , COUNT( b.date_dt) AS days_ytd_ty FROM mrdw_dim_date b WHERE 100*b.year_cal+b.month_cal_id <= &curr_mo AND 100*b.year_cal+b.month_cal_id >= &curr_mo-12 GROUP BY b.year_cal ORDER BY b.year_cal  )  ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_(no_Add_Dem)_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE daysytd_ly AS  (  select b.year_cal , COUNT( b.date_dt) AS days_ytd_ly FROM mrdw_dim_date b WHERE 100*b.year_cal+b.month_cal_id <= &curr_mo-100 AND 100*b.year_cal+b.month_cal_id >= &curr_mo-112 GROUP BY b.year_cal ORDER BY b.year_cal  )  ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_(no_Add_Dem)_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE esytddata_ty AS  (  select a.property_cd, b.year_cal , SUM( a.roomnights_qty) AS rn, SUM( a.net_rev_local_amt) AS rv , SUM( net_rev_usd_sub_amt) AS rv_usd FROM mrdw_fact_agg_dr_rev_analysis a, mrdw_dim_date b WHERE a.date_stay_dt=b.date_dt AND a.brand_cd IN ( 'RI', 'TS', 'ER') AND a.ab_tier_los_txt <> 'LOS:1-4' AND 100*b.year_cal+b.month_cal_id <= &curr_mo AND 100*b.year_cal+b.month_cal_id >= &curr_mo-12 GROUP BY a.property_cd, b.year_cal ORDER BY a.property_cd, b.year_cal  )  ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_(no_Add_Dem)_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE esytddata_ly AS  (  select a.property_cd, b.year_cal , SUM( a.roomnights_qty) AS rn, SUM( a.net_rev_local_amt) AS rv , SUM( net_rev_usd_sub_amt) AS rv_usd FROM mrdw_fact_agg_dr_rev_analysis a, mrdw_dim_date b WHERE a.date_stay_dt=b.date_dt AND a.brand_cd IN ( 'RI', 'TS', 'ER') AND a.ab_tier_los_txt <> 'LOS:1-4' AND 100*b.year_cal+b.month_cal_id <= &curr_mo-100 AND 100*b.year_cal+b.month_cal_id >= &curr_mo-112 GROUP BY a.property_cd, b.year_cal ORDER BY a.property_cd, b.year_cal  )  ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_(no_Add_Dem)_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE esytddata AS select a.marsha, a.hcap, d.days_ytd_ty, e.days_ytd_ly, b.rn AS esrn_ty , CASE WHEN a.curr='USD' THEN b.rv_usd ELSE b.rv END AS esrv_ty , c.rn AS esrn_ly , CASE WHEN a.curr='USD' THEN c.rv_usd ELSE c.rv END AS esrv_ly , b.rn/( a.hcap*d.days_ytd_ty) AS EsOcc_YTD , c.rn/( a.hcap*e.days_ytd_ly) AS EsOcc_ly_YTD , ( calculated EsOcc_YTD+- calculated EsOcc_ly_YTD) AS ESOcc_chg_YTD , calculated esrv_ty/( a.hcap*d.days_ytd_ty) AS EsRevPAR_YTD , calculated esrv_ly/( a.hcap*e.days_ytd_ly) AS EsRevPAR_ly_YTD , ( calculated EsRevPAR_YTD/calculated EsRevPAR_ly_YTD) - 1 AS EsRevPAR_chg_YTD , calculated esrv_ty/b.rn AS EsADR_YTD , calculated esrv_ly/c.rn AS EsADR_ly_YTD , ( calculated EsADR_YTD/calculated EsADR_ly_YTD) - 1 AS EsADR_chg_YTD FROM dss.prop AS a LEFT JOIN esytddata_ty AS b ON a.marsha=b.property_cd LEFT JOIN esytddata_ly AS c ON a.marsha=c.property_cd LEFT JOIN daysytd_ty AS d ON b.year_cal=d.year_cal LEFT JOIN daysytd_ly AS e ON c.year_cal=e.year_cal WHERE a.openflag='Y' AND a.brnd IN ( 'RI', 'TS', 'ER' ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_(no_Add_Dem)_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE mrdwdata AS  (  select a.property_cd, b.year_cal, b.month_cal_id, a.ab_tier_los_txt , CASE WHEN a.market_prefix_cd IN ( '10', '12', '30', '34', '37', '20', '23', '24', '21') THEN 'NQ' when a.market_prefix_cd IN ( '17', '18') THEN 'SC' when a.market_prefix_cd = '16' THEN 'GV' when a.market_prefix_cd IN ( 'GR', 'CN', 'CT') THEN a.market_prefix_cd ELSE 'OT' END AS segment , CASE WHEN b.ab_day_of_week_cd IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' END AS wdwe , CASE WHEN a.ab_tier_los_txt = 'LOS:1-4' THEN 'T1' ELSE 'ES' END AS es_flag , CASE WHEN a.room_pool_cd like 'O%' THEN 'STD' when a.room_pool_cd like 'S%' THEN 'STD' when a.room_pool_cd like 'G%' THEN 'STD' ELSE 'TBD' END AS rmpool , CASE WHEN a.market_prefix_cd IN ( '10', '12') THEN a.market_prefix_cd ELSE 'OT' END AS bnch , SUM( a.roomnights_qty) AS rn, SUM( a.net_rev_local_amt) AS rv , SUM( net_rev_usd_sub_amt) AS rv_usd FROM mrdw_fact_agg_dr_rev_analysis a, mrdw_dim_date b WHERE a.date_stay_dt=b.date_dt AND a.brand_cd IN ( 'RI', 'TS', 'ER') AND 100*b.year_cal+b.month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo, &curr_mo-100, &l2_mo-100, &l3_mo-100) GROUP BY a.property_cd, b.year_cal, b.month_cal_id, a.ab_tier_los_txt, segment, wdwe, es_flag, rmpool, bnch ORDER BY a.property_cd, b.year_cal, b.month_cal_id, a.ab_tier_los_txt, segment, wdwe, es_flag, rmpool, bnch  )  ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_(no_Add_Dem)_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE mndata AS select property_cd , CASE WHEN 100*a.year_cal+a.month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo) THEN &curryr ELSE &curryr-1 END AS yr , 'MN' AS timeframe, ab_tier_los_txt, segment, wdwe, es_flag, rmpool, bnch , rn, rv, rv_usd FROM mrdwdata AS a WHERE 100*a.year_cal+a.month_cal_id = &curr_mo OR 100*a.year_cal+a.month_cal_id = &curr_mo-100;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_(no_Add_Dem)_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE l3data AS select property_cd , CASE WHEN 100*a.year_cal+a.month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo) THEN &curryr ELSE &curryr-1 END AS yr , 'L3' AS timeframe, ab_tier_los_txt, segment, wdwe, es_flag, rmpool, bnch , SUM( rn) AS rn, SUM( rv) AS rv, SUM( rv_usd) AS rv_usd FROM mrdwdata AS a GROUP BY property_cd, calculated yr, ab_tier_los_txt, segment, wdwe, es_flag, rmpool, bnch;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_(no_Add_Dem)_ESFactor_MRDW_Data_Pull.sas
 CREATE TABLE mrdwdata2 AS ( SELECT  *  FROM l3data UNION ALL SELECT  *  FROM mndata);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_(no_Add_Dem)_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE mrdwdata3 AS select coalesce( a.property_cd,b.property_cd) AS marsha, coalesce( a.timeframe,b.timeframe) AS timeframe , CASE WHEN coalesce( a.ab_tier_los_txt,b.ab_tier_los_txt) = 'LOS:1-4' THEN 'T1' when coalesce( a.ab_tier_los_txt,b.ab_tier_los_txt) = 'LOS:5-11' THEN 'T2' when coalesce( a.ab_tier_los_txt,b.ab_tier_los_txt) = 'LOS:12-29' THEN 'T3' when coalesce( a.ab_tier_los_txt,b.ab_tier_los_txt) = 'LOS:30+' THEN 'T4' END AS tier , coalesce( a.segment,b.segment) AS segment, coalesce( a.wdwe,b.wdwe) AS wdwe , coalesce( a.es_flag,b.es_flag) AS esflag, coalesce( a.rmpool,b.rmpool) AS rmpool , coalesce( a.bnch,b.bnch) AS bnch , a.rn AS rn, a.rv_usd AS rv, b.rn AS rn_ly, b.rv_usd AS rv_ly FROM mrdwdata2 AS a full JOIN mrdwdata2 AS b ON a.property_cd=b.property_cd AND a.yr=b.yr+1 AND a.timeframe=b.timeframe AND a.ab_tier_los_txt=b.ab_tier_los_txt AND a.segment=b.segment AND a.wdwe=b.wdwe AND a.es_flag=b.es_flag AND a.rmpool=b.rmpool AND a.bnch=b.bnch WHERE coalesce( a.yr,b.yr+1)=&curryr;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_(no_Add_Dem)_ESFactor_MRDW_Data_Pull.sas
"SELECT * FROM mrdwdata3 ORDER BY marsha ,timeframe ,tier ,segment ,wdwe ,esflag ,rmpool ,bnch;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_(no_Add_Dem)_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE tranmrdw2 AS ( SELECT  *  , compress( timeframe||'_'||tier||'_'||segment||'_'||wdwe||'_'||_name_ ) AS idVAR  FROM tranmrdw );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_(no_Add_Dem)_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE tr_sum1 AS select marsha, compress( timeframe||'_'||esflag||'_'||segment||'_'||'FW'||'_'||_name_) AS idVAR, SUM( col1) AS col1 FROM tranmrdw GROUP BY marsha, calculated idVAR;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_(no_Add_Dem)_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE tr_sum2 AS select marsha, compress( timeframe||'_'||esflag||'_'||'TO'||'_'||wdwe||'_'||_name_) AS idVAR, SUM( col1) AS col1 FROM tranmrdw GROUP BY marsha, calculated idVAR;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_(no_Add_Dem)_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE tr_sum3 AS select marsha, compress( timeframe||'_'||tier||'_'||segment||'_'||wdwe||'_'||_name_) AS idVAR, SUM( col1) AS col1 FROM tranmrdw GROUP BY marsha, calculated idVAR;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_(no_Add_Dem)_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE tr_sum4 AS select marsha, compress( timeframe||'_'||esflag||'_'||'TO'||'_'||'FW'||'_'||_name_) AS idVAR, SUM( col1) AS col1 FROM tranmrdw GROUP BY marsha, calculated idVAR;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_(no_Add_Dem)_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE tr_sum5 AS select marsha, compress( timeframe||'_'||esflag||'_'||segment||'_'||wdwe||'_'||rmpool||'_'||_name_) AS idVAR, SUM( col1) AS col1 FROM tranmrdw GROUP BY marsha, calculated idVAR;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_(no_Add_Dem)_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE tr_sum6 AS select marsha, compress( timeframe||'_'||esflag||'_'||bnch||'_'||wdwe||'_'||_name_) AS idVAR, SUM( col1) AS col1 FROM tranmrdw WHERE bnch<>'OT' GROUP BY marsha, calculated idVAR;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_(no_Add_Dem)_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE tr_sum7 AS select marsha, compress( timeframe||'_'||tier||'_'||bnch||'_'||'FW'||'_'||_name_) AS idVAR, SUM( col1) AS col1 FROM tranmrdw WHERE bnch = '12' GROUP BY marsha, calculated idVAR;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_(no_Add_Dem)_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE tr_sum8 AS select marsha, compress( timeframe||'_'||tier||'_'||segment||'_'||'FW'||'_'||_name_) AS idVAR, SUM( col1) AS col1 FROM tranmrdw WHERE segment='GR' AND tier<>'T1' GROUP BY marsha, calculated idVAR;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_(no_Add_Dem)_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE tr_sumall AS ( SELECT  *  , &curr_mo AS yrmo  FROM tr_sum5 UNION ALL SELECT  *  , &curr_mo AS yrmo  FROM tr_sum1 UNION ALL SELECT  *  , &curr_mo AS yrmo  FROM tr_sum2 UNION ALL SELECT  *  , &curr_mo AS yrmo  FROM tr_sum3 UNION ALL SELECT  *  , &curr_mo AS yrmo  FROM tr_sum4 UNION ALL SELECT  *  , &curr_mo AS yrmo  FROM tr_sum6 UNION ALL SELECT  *  , &curr_mo AS yrmo  FROM tr_sum7 UNION ALL SELECT  *  , &curr_mo AS yrmo  FROM tr_sum8);",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_(no_Add_Dem)_ESFactor_MRDW_Data_Pull.sas
"SELECT * FROM tr_sumall ORDER BY marsha ,idVAR;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_(no_Add_Dem)_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE esf.esf_mrdw AS select a.marsha, ( L3_ES_GR_FW_rn/L3_ES_GR_FW_rn_ly) - 1 AS Es_GR_RN_Chg_L3 , ( MN_ES_GR_FW_rn/MN_ES_GR_FW_rn_ly) - 1 AS Es_GR_RN_Chg_MN , L3_ES_GR_FW_rn / ( L3_ES_TO_WD_rn+L3_ES_TO_WE_rn) AS Es_GR_RN_Mix_L3 , ( L3_ES_TO_FW_rn/L3_ES_TO_FW_rn_ly) - 1 AS Es_RN_Chg_L3 , ( MN_ES_TO_FW_rn/MN_ES_TO_FW_rn_ly) - 1 AS Es_RN_Chg_MN , L3_ES_TO_FW_rn/( L3_ES_TO_FW_rn+L3_T1_TO_FW_rn) - L3_ES_TO_FW_rn_ly/( L3_ES_TO_FW_rn_ly+L3_T1_TO_FW_rn_ly) AS Es_RN_Mix_Chg_L3 , L3_ES_TO_FW_rn/( L3_ES_TO_FW_rn+L3_T1_TO_FW_rn) AS Es_RN_Mix_L3 , ( L3_ES_TO_FW_rv/L3_ES_TO_FW_rn) AS EsADR_L3 , ( L3_ES_TO_FW_rv/L3_ES_TO_FW_rn)/( L3_ES_TO_FW_rv_ly/L3_ES_TO_FW_rn_ly) - 1 AS EsADR_Chg_L3 , L3_ES_TO_FW_rn/( c.hcap*L3_days) AS ESOcc_L3 , L3_ES_TO_FW_rn/( c.hcap*L3_days) - L3_ES_TO_FW_rn_ly/( c.hcap*L3_days_ly) AS EsOcc_Chg_L3 , MN_ES_TO_FW_rn/( c.hcap*MN_days) AS ESOcc_MN , MN_ES_TO_FW_rn/( c.hcap*MN_days) - MN_ES_TO_FW_rn_ly/( c.hcap*MN_days_ly) AS EsOcc_Chg_MN , L3_ES_SC_FW_rn/L3_ES_SC_FW_rn_ly - 1 AS Especialcorp_RN_Chg_L3 , L3_ES_SC_FW_rn AS Especialcorp_RN_L3 , ( L3_ES_TO_FW_rv/( c.hcap*L3_days)) / ( L3_ES_TO_FW_rv_ly/( c.hcap*L3_days_ly)) - 1 AS EsRevPAR_Chg_L3 , ( L3_ES_TO_FW_rv/( c.hcap*L3_days)) AS EsRevPAR_L3 , ( MN_ES_TO_FW_rv/MN_ES_TO_FW_rn) AS EsADR_MN , ( MN_ES_TO_FW_rv/MN_ES_TO_FW_rn)/( MN_ES_TO_FW_rv_ly/MN_ES_TO_FW_rn_ly) - 1 AS EsADR_chg_MN , ( MN_ES_TO_FW_rv/( c.hcap*MN_days)) AS EsRevPAR_MN , ( MN_ES_TO_FW_rv/( c.hcap*MN_days))/( MN_ES_TO_FW_rv_ly/( c.hcap*MN_days_ly)) - 1 AS EsRevPAR_chg_MN , L3_ES_TO_FW_rn AS EsRN_L3 , ( L3_ES_GR_FW_rn+L3_T1_GR_FW_rn)/( L3_ES_GR_FW_rn_ly+L3_T1_GR_FW_rn_ly) - 1 AS FW_GR_RN_Chg_L3 , ( L3_ES_GR_FW_rn+L3_T1_GR_FW_rn)/( L3_ES_TO_FW_rn+L3_T1_TO_FW_rn) AS FW_GR_RN_Mix_L3 , ( L3_ES_SC_FW_rn+L3_T1_SC_FW_rn)/( L3_ES_TO_FW_rn+L3_T1_TO_FW_rn) AS FW_Specialcorp_Mix_L3 , ( L3_ES_TO_FW_rn+L3_T1_TO_FW_rn)/( c.hcap*L3_days) AS Occ_L3 , ( MN_ES_TO_FW_rn+MN_T1_TO_FW_rn)/( c.hcap*MN_days) AS Occ_MN , ( ( MN_ES_TO_FW_rv+MN_T1_TO_FW_rv)/( c.hcap*MN_days)) AS RevPAR_MN , L3_ES_SC_FW_rn/( L3_ES_TO_FW_rn+L3_T1_TO_FW_rn) AS SpecCorp_Es_Mix_L3 , ( MN_T1_NQ_FW_rv/MN_T1_NQ_FW_rn)/( MN_T1_NQ_FW_rv_ly/MN_T1_NQ_FW_rn_ly) - 1 AS T1_LM_NQ_ADR_Chg , L3_T1_NQ_FW_rn/L3_T1_TO_FW_rn AS T1_NQ_Mix_L3 , L3_T1_NQ_FW_rn/L3_T1_TO_FW_rn - L3_T1_NQ_FW_rn_ly/L3_T1_TO_FW_rn_ly AS T1_NQ_Mix_L3_Chg , L3_T1_NQ_WD_rn/L3_T1_TO_WD_rn AS T1_WD_NQ_Mix_L3 , L3_T1_NQ_WD_rn/L3_T1_TO_WD_rn - L3_T1_NQ_WD_rn_ly/L3_T1_TO_WD_rn_ly AS T1_WD_NQ_Mix_L3_Chg , ( ( L3_T1_10_WD_rv+L3_T1_10_WE_rv)/( L3_T1_10_WD_rn+L3_T1_10_WE_rn)) / ( ( L3_T1_12_WD_rv+L3_T1_12_WE_rv)/( L3_T1_12_WD_rn+L3_T1_12_WE_rn)) - 1 AS T1_Prem_2BD_vs_Studio_L3 , ( L3_T1_NQ_WD_STD_rv+L3_T1_SC_WD_STD_rv+L3_T1_GV_WD_STD_rv+L3_T1_OT_WD_STD_rv)/( L3_T1_NQ_WD_STD_rn+L3_T1_SC_WD_STD_rn+L3_T1_GV_WD_STD_rn+L3_T1_OT_WD_STD_rn) / ( L3_T1_NQ_WD_STD_rv/L3_T1_NQ_WD_STD_rn) AS T1_TransRateEff_L3 , ( L3_T1_NQ_WD_STD_rv+L3_T1_SC_WD_STD_rv+L3_T1_GV_WD_STD_rv+L3_T1_OT_WD_STD_rv)/( L3_T1_NQ_WD_STD_rn+L3_T1_SC_WD_STD_rn+L3_T1_GV_WD_STD_rn+L3_T1_OT_WD_STD_rn) / ( L3_T1_NQ_WD_STD_rv/L3_T1_NQ_WD_STD_rn) - ( L3_T1_NQ_WD_STD_rv_ly+L3_T1_SC_WD_STD_rv_ly+L3_T1_GV_WD_STD_rv_ly+L3_T1_OT_WD_STD_rv_ly)/( L3_T1_NQ_WD_STD_rn_ly+L3_T1_SC_WD_STD_rn_ly+L3_T1_GV_WD_STD_rn_ly+L3_T1_OT_WD_STD_rn_ly) / ( L3_T1_NQ_WD_STD_rv_ly/L3_T1_NQ_WD_STD_rn_ly) AS T1_TransRateEff_Chg_L3 , L3_T1_NQ_WD_rn/L3_T1_TO_WD_rn AS T1_WD_NQ_Mix_L3 , L3_T1_GR_WE_rn/L3_T1_TO_WE_rn AS T1_WE_GR_Mix_L3 , L3_T1_NQ_WE_rn/L3_T1_TO_WE_rn AS T1_WE_NQ_Mix_L3 , ( L3_T1_NQ_WE_STD_rv+L3_T1_SC_WE_STD_rv+L3_T1_GV_WE_STD_rv+L3_T1_OT_WE_STD_rv)/( L3_T1_NQ_WE_STD_rn+L3_T1_SC_WE_STD_rn+L3_T1_GV_WE_STD_rn+L3_T1_OT_WE_STD_rn) / ( L3_T1_NQ_WE_STD_rv/L3_T1_NQ_WE_STD_rn) - ( L3_T1_NQ_WE_STD_rv_ly+L3_T1_SC_WE_STD_rv_ly+L3_T1_GV_WE_STD_rv_ly+L3_T1_OT_WE_STD_rv_ly)/( L3_T1_NQ_WE_STD_rn_ly+L3_T1_SC_WE_STD_rn_ly+L3_T1_GV_WE_STD_rn_ly+L3_T1_OT_WE_STD_rn_ly) / ( L3_T1_NQ_WE_STD_rv_ly/L3_T1_NQ_WE_STD_rn_ly) AS T1_WE_TRE_Chg_L3 , ( MN_T1_NQ_WE_STD_rv+MN_T1_SC_WE_STD_rv+MN_T1_GV_WE_STD_rv+MN_T1_OT_WE_STD_rv)/( MN_T1_NQ_WE_STD_rn+MN_T1_SC_WE_STD_rn+MN_T1_GV_WE_STD_rn+MN_T1_OT_WE_STD_rn) / ( MN_T1_NQ_WE_STD_rv/MN_T1_NQ_WE_STD_rn) AS T1_WE_TRE_MN , ( ( MN_T2_NQ_WD_rv+MN_T2_NQ_WD_rv)/( MN_T2_NQ_WD_rn+MN_T2_NQ_WD_rn)) / ( ( MN_T2_NQ_WD_rv_ly+MN_T2_NQ_WD_rv_ly)/( MN_T2_NQ_WD_rn_ly+MN_T2_NQ_WD_rn_ly)) - 1 AS T2_LM_NQ_ADR_Chg , ( ( MN_T3_NQ_WD_rv+MN_T3_NQ_WD_rv)/( MN_T3_NQ_WD_rn+MN_T3_NQ_WD_rn)) / ( ( MN_T3_NQ_WD_rv_ly+MN_T3_NQ_WD_rv_ly)/( MN_T3_NQ_WD_rn_ly+MN_T3_NQ_WD_rn_ly)) - 1 AS T3_LM_NQ_ADR_Chg , ( ( MN_T4_NQ_WD_rv+MN_T4_NQ_WD_rv)/( MN_T4_NQ_WD_rn+MN_T4_NQ_WD_rn)) / ( ( MN_T4_NQ_WD_rv_ly+MN_T4_NQ_WD_rv_ly)/( MN_T4_NQ_WD_rn_ly+MN_T4_NQ_WD_rn_ly)) - 1 AS T4_LM_NQ_ADR_Chg , ( L3_T1_GR_WD_rn+L3_T2_GR_WD_rn+L3_T3_GR_WD_rn+L3_T4_GR_WD_rn)/( L3_T1_GR_WD_rn_ly+L3_T2_GR_WD_rn_ly+L3_T3_GR_WD_rn_ly+L3_T4_GR_WD_rn_ly) - 1 AS WD_Gr_RN_Chg_L3 , ( L3_T1_TO_WD_rn+L3_ES_TO_WD_rn)/( c.hcap*L3_WD_days) AS WD_Occ_L3 , ( L3_T1_GR_WE_rn+L3_T2_GR_WE_rn+L3_T3_GR_WE_rn+L3_T4_GR_WE_rn)/( L3_T1_GR_WE_rn_ly+L3_T2_GR_WE_rn_ly+L3_T3_GR_WE_rn_ly+L3_T4_GR_WE_rn_ly) - 1 AS WE_Gr_RN_Chg_L3 , ( MN_T1_GR_WE_rn+MN_T2_GR_WE_rn+MN_T3_GR_WE_rn+MN_T4_GR_WE_rn)/( MN_T1_GR_WE_rn_ly+MN_T2_GR_WE_rn_ly+MN_T3_GR_WE_rn_ly+MN_T4_GR_WE_rn_ly) - 1 AS WE_GR_RN_Chg_MN , SUM( ( L3_T1_GR_WE_rn+L3_T2_GR_WE_rn+L3_T3_GR_WE_rn+L3_T4_GR_WE_rn),-( L3_T1_GR_WE_rn_ly+L3_T2_GR_WE_rn_ly+L3_T3_GR_WE_rn_ly+L3_T4_GR_WE_rn_ly)) AS WE_Gr_RN_Var_L3 , SUM( ( MN_T1_GR_WE_rn+MN_T2_GR_WE_rn+MN_T3_GR_WE_rn+MN_T4_GR_WE_rn),-( MN_T1_GR_WE_rn_ly+MN_T2_GR_WE_rn_ly+MN_T3_GR_WE_rn_ly+MN_T4_GR_WE_rn_ly)) AS WE_Gr_RN_Var_MN , ( MN_T1_GR_WE_rn/MN_T1_GR_WE_rn_ly) - 1 AS WE_T1_Gr_RN_Chg_MN , ( MN_T1_GR_WE_rn+-MN_T1_GR_WE_rn_ly) AS WE_T1_Gr_RN_Var_MN , ( L3_T1_GR_WE_rn/L3_T1_GR_WE_rn_ly) - 1 AS WE_T1_Gr_RN_Chg_L3 , ( L3_T1_GR_WE_rn+-L3_T1_GR_WE_rn_ly) AS WE_T1_Gr_RN_Var_L3 , ( L3_T1_TO_WE_rn+L3_ES_TO_WE_rn)/( c.hcap*L3_WE_days) AS WE_Occ_L3 , ( MN_T1_TO_WE_rn+MN_ES_TO_WE_rn)/( c.hcap*MN_WE_days) AS WE_Occ_MN , ( L3_ES_NQ_WD_STD_rn+L3_ES_SC_WD_STD_rn+L3_ES_OT_WD_STD_rn+L3_ES_GR_WD_STD_rn+L3_ES_CN_WD_STD_rn +L3_ES_NQ_WE_STD_rn+L3_ES_SC_WE_STD_rn+L3_ES_OT_WE_STD_rn+L3_ES_GR_WE_STD_rn+L3_ES_CN_WE_STD_rn) AS L3_STD_RN , ( L3_ES_TO_FW_rn+L3_T1_TO_FW_rn) AS L3_TOT_RN , 1 - calculated L3_STD_RN / calculated L3_TOT_RN AS PremiumRoomPool_Mix_L3 , d.MC29_RN_L12 , . AS Studio_TotDem_L3 , . AS TotDem_L3 , . AS ES_Add_Demand_Chg_MN , . AS ES_Add_Demand_Chg_L3 , ( MN_T2_GR_FW_rv/MN_T2_GR_FW_rn) AS T2_GR_ADR_MN , ( MN_T3_GR_FW_rv/MN_T3_GR_FW_rn) AS T3_GR_ADR_MN , ( MN_T4_GR_FW_rv/MN_T4_GR_FW_rn) AS T4_GR_ADR_MN , ( MN_T2_GR_FW_rv_ly/MN_T2_GR_FW_rn_ly) AS T2_GR_ADR_LY_MN , ( MN_T3_GR_FW_rv_ly/MN_T3_GR_FW_rn_ly) AS T3_GR_ADR_LY_MN , ( MN_T4_GR_FW_rv_ly/MN_T4_GR_FW_rn_ly) AS T4_GR_ADR_LY_MN , ( calculated T2_GR_ADR_MN / calculated T2_GR_ADR_LY_MN) - 1 AS T2_GR_ADR_Chg_MN , ( calculated T3_GR_ADR_MN / calculated T3_GR_ADR_LY_MN) - 1 AS T3_GR_ADR_Chg_MN , ( calculated T4_GR_ADR_MN / calculated T4_GR_ADR_LY_MN) - 1 AS T4_GR_ADR_Chg_MN , ( MN_T2_12_FW_rv/MN_T2_12_FW_rn) AS T2_12_ADR_MN , ( MN_T3_12_FW_rv/MN_T3_12_FW_rn) AS T3_12_ADR_MN , ( MN_T4_12_FW_rv/MN_T4_12_FW_rn) AS T4_12_ADR_MN , ( MN_T2_12_FW_rv_ly/MN_T2_12_FW_rn_ly) AS T2_12_ADR_LY_MN , ( MN_T3_12_FW_rv_ly/MN_T3_12_FW_rn_ly) AS T3_12_ADR_LY_MN , ( MN_T4_12_FW_rv_ly/MN_T4_12_FW_rn_ly) AS T4_12_ADR_LY_MN , ( calculated T2_12_ADR_MN / calculated T2_12_ADR_LY_MN) - 1 AS T2_12_ADR_Chg_MN , ( calculated T3_12_ADR_MN / calculated T3_12_ADR_LY_MN) - 1 AS T3_12_ADR_Chg_MN , ( calculated T4_12_ADR_MN / calculated T4_12_ADR_LY_MN) - 1 AS T4_12_ADR_Chg_MN , f.EsOcc_YTD, f.EsOcc_chg_YTD , f.EsADR_YTD, f.EsADR_chg_YTD , f.EsRevPAR_YTD, f.EsRevPAR_chg_YTD , L3_T1_GV_WD_rn/L3_T1_TO_WD_rn AS T1_WD_GV_MIX_L3 , L3_ES_GV_FW_rn/L3_ES_TO_FW_rn AS ES_FW_GV_MIX_L3 , MN_T1_12_WD_rv/MN_T1_12_WD_rn AS T1_WD_MC12_ADR_MN , ( MN_T2_12_FW_rv+MN_T3_12_FW_rv+MN_T4_12_FW_rv)/( MN_T2_12_FW_rn+MN_T3_12_FW_rn+MN_T4_12_FW_rn) AS ES_FW_MC12_ADR_MN FROM tran2_mrdw AS a INNER JOIN daysinmonth AS b ON a.yrmo=b.yrmo INNER JOIN dss.prop AS c ON a.marsha=c.marsha LEFT JOIN MC29_RN_L12 AS d ON a.marsha=d.property_cd LEFT JOIN tran_adem AS e ON a.marsha=e.marsha LEFT JOIN esytddata AS f ON a.marsha=f.marsha ORDER BY a.marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_(no_Add_Dem)_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE MadMktShr AS  (  select a.MARSHA_cd AS marsha, TIER, company_nm AS coname , COMRN_TY AS RNTY_PD, comrvlocal_ty AS RVTY_PD, COMRN_LY AS RNLY_PD, comrvlocal_ly AS RVLY_PD , sprt_local_ty AS SPRT, prrt_local_ty AS PRRT, COMRN_TY AS SPRN, disc_local_ty AS DISC , COMRN_LY AS SPRNLY, disc_local_ly AS DISCLY , sprt_local_ly AS SPRTY_LY, dh_rev_local_ty AS DHRV , CASE WHEN sav_local_ty > 0 THEN net_rev_local_ty/sav_local_ty ELSE 0 END AS VR_TY , CASE WHEN sav_local_ly > 0 THEN net_rev_local_ly/sav_local_ly ELSE 0 END AS cVR_LY FROM mrdw_fact_act_prop_dtls AS a WHERE tier not IN ( 'CONTR', 'Ecommerce', 'GOVT', 'QUAL') AND year_id=2019 AND month_id=9 )  ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ACT_MAMS_full_procedure.sas
" CREATE TABLE MadMktShr1 AS select a.marsha, a.coname, a.tier, a.VR_TY, a.SPRN, a.RNTY_PD, a.SPRN/( &WD_YTD) AS avg, ROUND( ( a.SPRN/( &WD_YTD)),0.1) AS rnd_avg FROM MadMktShr a ORDER BY a.marsha, a.coname, a.tier, a.VR_TY, a.SPRN, a.RNTY_PD ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ACT_MAMS_full_procedure.sas
" CREATE TABLE MadMktShr2 AS select a.marsha, a.coname, a.tier, a.VR_TY, a.SPRN, a.RNTY_PD, a.avg, a.rnd_avg , CASE WHEN a.avg<a.rnd_avg THEN a.rnd_avg-0.1 ELSE a.rnd_avg END AS rn1 , CASE WHEN a.avg<a.rnd_avg THEN a.rnd_avg ELSE a.rnd_avg+0.1 END AS rn2 FROM MadMktShr1 a ORDER BY a.marsha, a.coname, a.tier, a.VR_TY, a.SPRN, a.RNTY_PD, a.avg, a.rnd_avg ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ACT_MAMS_full_procedure.sas
" CREATE TABLE MadMktShr3 AS select a.marsha, a.coname, a.tier, a.VR_TY, a.SPRN, a.RNTY_PD, a.avg, a.rnd_avg, a.rn1, a.rn2, b.lo AS lo1, b.hi AS hi1 FROM MadMktShr2 a LEFT JOIN regression AS b ON ROUND( a.rn1,0.1)=ROUND( b.rn,0.1) ORDER BY a.marsha, a.coname, a.tier, a.VR_TY, a.SPRN, a.RNTY_PD, a.avg, a.rnd_avg, a.rn1, a.rn2, lo1, hi1 ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ACT_MAMS_full_procedure.sas
" CREATE TABLE MadMktShr4 AS select a.marsha, a.coname, a.tier, a.VR_TY, a.SPRN, a.RNTY_PD AS RNTY_YTD, a.avg, a.rnd_avg, a.rn1, a.rn2, a.lo1, a.hi1, b.lo AS lo2, b.hi AS hi2 , CASE WHEN ( a.lo1-b.lo)/( a.rn1-a.rn2)=0 THEN a.lo1 ELSE ( a.lo1+( a.rn1-a.avg)/( ( a.lo1-b.lo)/( a.rn1-a.rn2))) END AS low , CASE WHEN ( a.hi1-b.hi)/( a.rn1-a.rn2)=0 THEN a.hi1 ELSE ( a.hi1+( a.rn1-a.avg)/( ( a.hi1-b.hi)/( a.rn1-a.rn2))) END AS high FROM MadMktShr3 a LEFT JOIN regression AS b ON ROUND( a.rn2,0.1)=ROUND( b.rn,0.1) ORDER BY a.marsha, a.coname, a.tier, a.VR_TY, a.SPRN, RNTY_YTD, a.avg, a.rnd_avg, a.rn1, a.rn2, a.lo1, lo2, a.hi1, hi2 ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ACT_MAMS_full_procedure.sas
" CREATE TABLE MadMktShr5 AS select marsha, coname, tier, RNTY_YTD , CASE WHEN VR_TY < low THEN 3 when VR_TY >= high THEN 1 ELSE 2 END AS level FROM MadMktShr4 WHERE tier not IN ( '' 'GOVT' 'TIER') ORDER BY marsha, coname, tier, RNTY_YTD, level ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ACT_MAMS_full_procedure.sas
" CREATE TABLE mams.actdata AS select marsha, SUM( RNTY_YTD) AS rn, SUM( RNTY_YTD*level)/SUM( RNTY_YTD) AS avg_level FROM MadMktShr5 GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ACT_MAMS_full_procedure.sas
 CREATE TABLE esf.actdata AS ( SELECT  *  FROM mams.actdata );,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ACT_MAMS_full_procedure.sas
" CREATE TABLE Strike_Annual AS select c.MARSHA , b.MARSHA_NEW, b.BRND, b.STR_ID, b.PEOPLESOFT_ID, b.MF, b.AVP , 'MONTH' AS TIMEF , CASE WHEN a.MARSHA IN ( &NONCOMP. ) THEN ""N"" ELSE a.SCOMP END AS SCOMP , SUM( a.COMPLETE_DATA) AS COMPLETE_DATA , b.HOTEL_NAME, b.REGION, b.DOMINT , CASE WHEN b.BRND IN ( ""CY"", ""FI"", ""RI"", ""SH"", ""TS"", ""AR"", ""OX"", ""FP"", ""AL"", ""EL"") THEN ""MSB"" ELSE ""FS"" end AS TYPE , SUM( a.MARAVAIL) AS MARAVAIL, SUM( a.MARREV) AS MARREV, SUM( a.MKTAVAIL) AS MKTAVAIL, SUM( a.MKTREV) AS MKTREV , SUM( a.MARAVAILLY) AS MARAVAILLY, SUM( a.MARREVLY) AS MARREVLY, SUM( a.MKTAVAILLY) AS MKTAVAILLY, SUM( a.MKTREVLY) AS MKTREVLY , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( (  ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))/100 , ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100 )-1,.00001) AS RPI_PCT_CHG , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100 ,.00001) AS RPI_PNT_CHG , ""Y"" AS Strike_Hotel FROM CMP.STR_MONTHLY_DATA AS a LEFT JOIN TGT_BUS.PROPERTY_MASTER_MISW_HIST AS b ON a.MARSHA = b.MARSHA_NEW AND a.asof_yrmo = b.asof_yrmo LEFT JOIN STRIKE AS c ON a.MARSHA = c.MARSHA WHERE a.TIMEF ='MONTH' AND a.DATA_CATEGORY = 'Rooms' AND a.CURRENCY_TYPE = 'Constant USD' AND a.asof_yrmo = &YRMNTH. AND a.YRMNTH >= 201801 AND c.MARSHA <> """" AND ( a.YRMNTH <= c.YTD_Data_to_Pull OR a.YRMNTH >= c.Post_Strike_Pull) GROUP BY c.MARSHA , b.MARSHA_NEW, b.BRND, b.STR_ID, b.PEOPLESOFT_ID, b.MF, b.AVP , calculated TIMEF , calculated SCOMP, b.HOTEL_NAME, b.REGION, b.DOMINT, calculated TYPE, calculated Strike_Hotel ORDER BY c.MARSHA;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
"CREATE TABLE ""&OUTPUT.\Strike Hotels.xlsx"" AS ( SELECT * FROM Strike_Annual) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE WEST2 AS ( SELECT F1, RevPAR_Index___Change, _018_RevPAR_Index_Goal FROM WEST  WHERE F1 <> """");",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE EAST2 AS ( SELECT F1, RevPAR_Index___Change, _018_RevPAR_Index_Goal FROM EAST  WHERE F1 <> """");",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE CANADA2 AS ( SELECT F1, RevPAR_Index___Change, _018_RevPAR_Index_Goal FROM CANADA  WHERE F1 <> """");",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE CALA2 AS ( SELECT F1 , CAST( _018_Scomp_Status_in_Column_J, percent20.  ) AS RevPAR_Index___Change , F32 AS _018_RevPAR_Index_Goal  FROM CALA  WHERE F1 <> """");",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
"CREATE TABLE AMERICAS_GOALS_1 AS ( SELECT  *  , F1 AS MARSHA , _018_RevPAR_Index_Goal AS RC_GOAL  FROM WEST2 UNION ALL SELECT  *  , F1 AS MARSHA , _018_RevPAR_Index_Goal AS RC_GOAL  FROM EAST2 UNION ALL SELECT  *  , F1 AS MARSHA , _018_RevPAR_Index_Goal AS RC_GOAL  FROM CANADA2 UNION ALL SELECT  *  , F1 AS MARSHA , _018_RevPAR_Index_Goal AS RC_GOAL  FROM CALA2);",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
"ALTER TABLE AMERICAS_GOALS_1 DROP COLUMN F1 ,  _018_RevPAR_Index_Goal ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE AMERICAS_GOALS AS select b.MARSHA_NEW AS MARSHA, a.RevPAR_Index___Change, a.RC_GOAL FROM AMERICAS_GOALS_1 a LEFT JOIN ( select * FROM TGT_BUS.PROPERTY_MASTER_MISW_HIST WHERE asof_yrmo = &YRMNTH. ) AS b ON ( a.MARSHA=b.marsha OR a.MARSHA=b.MARSHA_NEW);",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE Annual AS select a.MARSHA, b.MARSHA_NEW, b.BRND, b.STR_ID, b.PEOPLESOFT_ID, b.MF, b.AVP , a.TIMEF , CASE WHEN a.MARSHA IN ( &NONCOMP. ) THEN ""N"" ELSE a.SCOMP END AS SCOMP , a.COMPLETE_DATA, b.HOTEL_NAME, b.REGION, b.DOMINT , CASE WHEN b.BRND IN ( ""CY"", ""FI"", ""RI"", ""SH"", ""TS"", ""AR"", ""OX"", ""FP"", ""AL"", ""EL"") THEN ""MSB"" ELSE ""FS"" end AS TYPE , MARAVAIL, MARREV, MKTAVAIL, MKTREV, MARAVAILLY, MARREVLY, MKTAVAILLY, MKTREVLY , ROUND( ( ( a.MARREV/ a.MARAVAIL)/( a.MKTREV/a.MKTAVAIL))*100,.00001) AS RPI_TY , ROUND( ( ( a.MARREVLY/ a.MARAVAILLY)/( a.MKTREVLY/a.MKTAVAILLY))*100,.00001) AS RPI_LY , ROUND( (  ( ( a.MARREV/ a.MARAVAIL)/( a.MKTREV/a.MKTAVAIL))/100 , ( ( a.MARREVLY/ a.MARAVAILLY)/( a.MKTREVLY/a.MKTAVAILLY))*100 )-1,.00001) AS RPI_PCT_CHG , ROUND( ( ( a.MARREV/ a.MARAVAIL)/( a.MKTREV/a.MKTAVAIL))*100 - ( ( a.MARREVLY/ a.MARAVAILLY)/( a.MKTREVLY/a.MKTAVAILLY))*100 ,.00001) AS RPI_PNT_CHG FROM CMP.STR_MONTHLY_DATA AS a LEFT JOIN TGT_BUS.PROPERTY_MASTER_MISW_HIST AS b ON a.MARSHA = b.MARSHA_NEW AND a.asof_yrmo = b.asof_yrmo WHERE a.TIMEF ='LAST12' AND a.DATA_CATEGORY = 'Rooms' AND a.CURRENCY_TYPE = 'Constant USD' AND a.YRMNTH = &YRMNTH. AND a.asof_yrmo = &YRMNTH.;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE annual_check AS select a.MARSHA, CASE WHEN a.RPI_PCT_CHG < b.RPI_PCT_CHG THEN 'Skip_Months' ELSE 'Full_Period' END AS Strike_Hotel_Check FROM annual a LEFT JOIN Strike_Annual AS b ON a.MARSHA = b.MARSHA;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
 CREATE TABLE annual_full AS select a.* FROM annual a LEFT JOIN annual_check AS b ON a.MARSHA = b.MARSHA WHERE b.Strike_Hotel_Check = 'Full_Period';,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
 CREATE TABLE annual_skip AS select a.* FROM Strike_annual a LEFT JOIN annual_check AS b ON a.MARSHA = b.MARSHA WHERE b.Strike_Hotel_Check = 'Skip_Months';,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
 CREATE TABLE annual AS ( SELECT  *  FROM annual_skip UNION ALL SELECT  *  FROM annual_full);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE AMERICAS_SYSTEMWIDE_SCOMP AS select a.MARSHA, a.MARSHA_NEW, a.HOTEL_NAME, a.REGION, a.BRND, a.TYPE, a.SCOMP , CASE WHEN a.SCOMP = 'Y' THEN 1 ELSE 0 END AS SCOMP_NUM , RPI_TY, RPI_LY, a.RPI_PCT_CHG FROM ANNUAL AS a ORDER BY a.TYPE, a.MARSHA;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE Full_Service_Property_Level AS select a.MARSHA, a.MARSHA_NEW, a.HOTEL_NAME, a.REGION, a.AVP, a.BRND, a.SCOMP , CASE WHEN a.SCOMP = 'Y' THEN 1 ELSE 0 END AS SCOMP_NUM , RPI_TY, RPI_LY, a.RPI_PCT_CHG , b.RevPAR_Index___Change AS RPI_GOAL_PCT_CHG FROM ANNUAL AS a INNER JOIN AMERICAS_GOALS AS b ON a.MARSHA = b.MARSHA WHERE a.MF = 'M' AND ( a.TYPE = 'FS' OR a.REGION = 'S_') AND a.REGION<>'C_' AND a.BRND not IN ( 'RZ', 'EB') AND a.MARSHA not IN ( 'MCOJW', 'MCORZ' ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE Canadian_Local AS select a.MARSHA, b.MARSHA_NEW, b.HOTEL_NAME, b.REGION, b.AVP, b.BRND, a.SCOMP , CASE WHEN a.SCOMP = 'Y' THEN 1 ELSE 0 END AS SCOMP_NUM , ROUND( ( ( a.MARREV/ a.MARAVAIL)/( a.MKTREV/a.MKTAVAIL))*100,.00001) AS RPI_TY , ROUND( ( ( a.MARREVLY/ a.MARAVAILLY)/( a.MKTREVLY/a.MKTAVAILLY))*100,.00001) AS RPI_LY , ROUND( (  ( ( a.MARREV/ a.MARAVAIL)/( a.MKTREV/a.MKTAVAIL))/100 , ( ( a.MARREVLY/ a.MARAVAILLY)/( a.MKTREVLY/a.MKTAVAILLY))*100 )-1,.00001) AS RPI_PCT_CHG , c.RevPAR_Index___Change AS RPI_GOAL_PCT_CHG FROM CMP.STR_MONTHLY_DATA AS a LEFT JOIN TGT_BUS.PROPERTY_MASTER_MISW_HIST AS b ON a.MARSHA = b.MARSHA_NEW AND a.asof_yrmo = b.asof_yrmo INNER JOIN AMERICAS_GOALS AS c ON a.MARSHA = c.MARSHA WHERE a.TIMEF ='LAST12' AND a.DATA_CATEGORY = 'Rooms' AND a.CURRENCY_TYPE = 'Local' AND a.YRMNTH = &YRMNTH. AND b.REGION = 'C_' AND b.MF = 'M' AND b.BRND not IN ( ""CY"", ""FI"", ""RI"", ""SH"", ""TS"", ""AR"", ""OX"", ""FP"", ""AL"", ""EL"") AND b.BRND not IN ( 'RZ', 'EB') AND a.MARSHA not IN ( 'MCOJW', 'MCORZ' ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE FS_consolidated_1 AS select a.MARSHA, a.MARSHA_NEW, CASE WHEN a.SCOMP = 'Y' THEN 1 ELSE 0 END AS SCOMP_COUNT , a.MARREV, a.MARAVAIL, a.MKTREV, a.MKTAVAIL, a.MARREVLY, a.MARAVAILLY, a.MKTREVLY, a.MKTAVAILLY , b.RevPAR_Index___Change , a.MARREVLY/a.MARAVAILLY / ( a.MKTREVLY/a.MKTAVAILLY)*100 * ( 1 + b.RevPAR_Index___Change) / 100 * a.MKTREV AS MARREV_GOAL FROM ANNUAL AS a INNER JOIN AMERICAS_GOALS AS b ON a.MARSHA=b.MARSHA WHERE a.MARSHA IN ( 'MCOJW', 'MCORZ' ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE FS_consolidated_2 AS select '33GLR' AS MARSHA, '33GLR' AS MARSHA_NEW , SUM ( SCOMP_COUNT) AS SCOMP_COUNT , SUM( MARREV) AS MARREV, SUM( MARAVAIL) AS MARAVAIL, SUM( MKTREV) AS MKTREV, SUM( MKTAVAIL) AS MKTAVAIL , SUM( MARREVLY) AS MARREVLY, SUM( MARAVAILLY) AS MARAVAILLY, SUM( MKTREVLY) AS MKTREVLY, SUM( MKTAVAILLY) AS MKTAVAILLY , SUM( MARREV_GOAL) AS MARREV_GOAL FROM FS_consolidated_1 a GROUP BY calculated MARSHA, calculated MARSHA_NEW;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE FS_consolidated_3 AS select a.MARSHA, a.MARSHA_NEW, 'Combined MCOJW AND MCORZ for bonus purposes' AS HOTEL_NAME, 'E_' AS REGION, '' AS AVP, '' AS BRND , CASE WHEN SCOMP_COUNT = 2 THEN 'Y' ELSE 'N' END AS SCOMP , CASE WHEN SCOMP_COUNT = 2 THEN 1 ELSE 0 END AS SCOMP_NUM , ROUND( ( a.MARREV/ a.MKTREV)*100,.000001) AS RPI_TY , ROUND( ( a.MARREVLY/a.MKTREVLY)*100,.000001)AS RPI_LY , ROUND( ( a.MARREV_GOAL/ a.MARAVAIL)/( a.MKTREV/ a.MKTAVAIL)*100 / ( ( a.MARREVLY/ a.MARAVAILLY)/( a.MKTREVLY/ a.MKTAVAILLY)*100) - 1, .000001) AS RPI_GOAL_PCT_CHG , ROUND( (  ( ( a.MARREV/ a.MARAVAIL)/( a.MKTREV/a.MKTAVAIL))/100 , ( ( a.MARREVLY/ a.MARAVAILLY)/( a.MKTREVLY/a.MKTAVAILLY))*100 )-1,.00001) AS RPI_PCT_CHG FROM FS_consolidated_2 a;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
 CREATE TABLE FIELD_BONUS_REPORT AS ( SELECT  *  FROM Full_Service_Property_Level UNION ALL SELECT  *  FROM FS_consolidated_3 UNION ALL SELECT  *  FROM Canadian_Local);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE MSB_hotels AS select a.MARSHA, a.MARSHA_NEW, a.HOTEL_NAME, a.REGION, a.BRND, a.MF, a.SCOMP , CASE WHEN a.SCOMP = 'Y' THEN 1 ELSE 0 END AS SCOMP_NUM , a.RPI_TY, a.RPI_LY, a.RPI_PCT_CHG FROM ANNUAL a WHERE a.TYPE = 'MSB' AND a.MF = 'M' AND a.REGION IN ( 'E_', 'W_', 'C_') AND a.SCOMP = 'Y';",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE MSB_Consolidated_1 AS select '31LLB' AS MARSHA, '33LLB' AS MARSHA_NEW, ""Consolidated Little Lake Bryan"" AS HOTEL_NAME, 'E_' AS REGION , '' AS BRND, 'M' AS MF , SUM ( CASE WHEN a.SCOMP = 'Y' THEN 1 ELSE 0 end ) AS SCOMP_COUNT , SUM( MARAVAIL) AS MARAVAIL, SUM( MARREV) AS MARREV, SUM( MKTAVAIL) AS MKTAVAIL, SUM( MKTREV) AS MKTREV , SUM( MARAVAILLY) AS MARAVAILLY, SUM( MARREVLY) AS MARREVLY, SUM( MKTAVAILLY) AS MKTAVAILLY, SUM( MKTREVLY) AS MKTREVLY FROM ANNUAL a WHERE a.MARSHA IN ( 'MCOLX', 'MCOLY', 'MCOLZ' ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE MSB_Consolidated_2 AS select a.MARSHA, a.MARSHA_NEW, a.HOTEL_NAME, a.REGION, a.BRND, a.MF , CASE WHEN SCOMP_COUNT = 3 THEN 'Y' ELSE 'N' END AS SCOMP , CASE WHEN SCOMP_COUNT = 3 THEN 1 ELSE 0 END AS SCOMP_NUM , ROUND( ( ( a.MARREV/ a.MARAVAIL)/( a.MKTREV/a.MKTAVAIL))*100,.00001) AS RPI_TY , ROUND( ( ( a.MARREVLY/ a.MARAVAILLY)/( a.MKTREVLY/a.MKTAVAILLY))*100,.00001) AS RPI_LY , ROUND( (  ( ( a.MARREV/ a.MARAVAIL)/( a.MKTREV/a.MKTAVAIL))/100 , ( ( a.MARREVLY/ a.MARAVAILLY)/( a.MKTREVLY/a.MKTAVAILLY))*100 )-1,.00001) AS RPI_PCT_CHG FROM MSB_Consolidated_1 a;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
 CREATE TABLE MSB_Property_Level AS ( SELECT  *  FROM MSB_hotels UNION ALL SELECT  *  FROM MSB_consolidated_2);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE Ritz_Property_Level AS select a.MARSHA, a.HOTEL_NAME, a.REGION, a.BRND, a.MF, a.SCOMP , CASE WHEN a.SCOMP = 'Y' THEN 1 ELSE 0 END AS SCOMP_NUM , a.RPI_TY , b.RC_GOAL FROM ANNUAL a LEFT JOIN AMERICAS_GOALS AS b ON a.MARSHA=b.MARSHA WHERE a.BRND IN ( 'RZ', 'EB') AND a.REGION IN ( 'E_', 'W_' ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE MSB_NONCOMP AS select a.MARSHA, a.MARSHA_NEW, a.HOTEL_NAME, a.REGION, a.BRND, a.MF , 'N' AS SCOMP, 0 AS SCOMP_NUM FROM TGT_BUS.PROPERTY_MASTER_MISW_HIST a LEFT JOIN MSB_hotels AS b ON a.MARSHA = b.MARSHA WHERE a.asof_yrmo = &yrmnth. AND b.SCOMP <> 'Y' AND a.BRND IN ( ""CY"", ""FI"", ""RI"", ""SH"", ""TS"", ""AR"", ""OX"", ""FP"", ""AL"", ""EL"") AND a.MF = 'M' AND a.REGION IN ( 'E_', 'W_', 'C_') ORDER BY a.MARSHA;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
"CREATE TABLE ""&OUTPUT.\Property AND Plan Tabs &CURDATE..xlsx"" AS ( SELECT * FROM AMERICAS_SYSTEMWIDE_SCOMP) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
"CREATE TABLE ""&OUTPUT.\Property AND Plan Tabs &CURDATE..xlsx"" AS ( SELECT * FROM MSB_Property_Level) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
"CREATE TABLE ""&OUTPUT.\Property AND Plan Tabs &CURDATE..xlsx"" AS ( SELECT * FROM FIELD_BONUS_REPORT) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
"CREATE TABLE ""&OUTPUT.\Property AND Plan Tabs &CURDATE..xlsx"" AS ( SELECT * FROM RITZ_Property_Level) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
"CREATE TABLE ""&OUTPUT.\Property AND Plan Tabs &CURDATE..xlsx"" AS ( SELECT * FROM MSB_NONCOMP) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE Global AS select 'Global' AS DESCRIPTION, COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a WHERE a.SCOMP = 'Y' GROUP BY calculated DESCRIPTION;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE Americas AS select 'Americas' AS DESCRIPTION, COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a WHERE a.SCOMP = 'Y' AND a.REGION IN ( 'E_', 'W_', 'C_', 'S_') AND a.MF = 'M' GROUP BY calculated DESCRIPTION;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE Americas_MSB AS select 'Americas_MSB' AS DESCRIPTION, COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a WHERE a.SCOMP = 'Y' AND a.TYPE = 'MSB' AND a.REGION IN ( 'E_', 'W_', 'C_', 'S_') AND a.MF = 'M' GROUP BY calculated DESCRIPTION;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE CALA AS select 'CALA' AS DESCRIPTION, COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a WHERE a.SCOMP = 'Y' AND a.REGION = 'S_' AND a.MF = 'M' GROUP BY calculated DESCRIPTION;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE Amer_MSB_System_FS_Fran AS select 'Americas_MSB_Systemwide_FS_Franchised' AS DESCRIPTION, COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a WHERE a.SCOMP = 'Y' AND a.REGION IN ( 'E_', 'W_', 'C_', 'S_') AND ( a.TYPE = 'MSB' OR a.MF = 'F') GROUP BY calculated DESCRIPTION;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE Ritz_Company AS select 'Ritz_Company' AS DESCRIPTION, COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a WHERE a.SCOMP = 'Y' AND a.BRND = 'RZ' GROUP BY calculated DESCRIPTION;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE St_Regis AS select 'St. Regis' AS DESCRIPTION, COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a WHERE a.SCOMP = 'Y' AND a.BRND = 'ST' GROUP BY calculated DESCRIPTION;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE Edition AS select 'Edition' AS DESCRIPTION, COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a WHERE a.SCOMP = 'Y' AND a.BRND = 'EB' GROUP BY calculated DESCRIPTION;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE RH_OX_AC AS select 'Renaissance, Moxy, AND AC' AS DESCRIPTION, COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a WHERE a.SCOMP = 'Y' AND a.BRND IN ( 'BR', 'OX', 'AR') AND a.REGION IN ( 'E_', 'W_', 'C_') GROUP BY calculated DESCRIPTION;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
 CREATE TABLE PLAN_TAB AS ( SELECT  *  FROM Amer_MSB_System_FS_Fran UNION ALL SELECT  *  FROM Global UNION ALL SELECT  *  FROM Americas UNION ALL SELECT  *  FROM Americas_MSB UNION ALL SELECT  *  FROM CALA UNION ALL SELECT  *  FROM Ritz_Company UNION ALL SELECT  *  FROM St_Regis UNION ALL SELECT  *  FROM Edition UNION ALL SELECT  *  FROM RH_OX_AC);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
"CREATE TABLE ""&OUTPUT.\Property AND Plan Tabs &CURDATE..xlsx"" AS ( SELECT * FROM PLAN_TAB) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE Region_All_Brands AS select CASE WHEN a.REGION = 'W_' THEN 'West Managed Region' when a.REGION = 'E_' THEN 'East Managed Region' when a.REGION = 'S_' THEN 'CALA Managed Region' when a.REGION = 'C_' THEN 'Canada Managed Region' END AS DESCRIPTION, COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a WHERE a.SCOMP = 'Y' AND a.REGION IN ( 'E_', 'W_', 'C_', 'S_') AND a.MF = 'M' GROUP BY calculated DESCRIPTION;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE Region_MSB AS select CASE WHEN a.REGION = 'W_' THEN 'MSB West Managed Region' when a.REGION = 'E_' THEN 'MSB East Managed Region' when a.REGION = 'S_' THEN 'MSB CALA Managed Region' when a.REGION = 'C_' THEN 'MSB Canada Managed Region' END AS DESCRIPTION, COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a WHERE a.SCOMP = 'Y' AND a.REGION IN ( 'E_', 'W_', 'C_', 'S_') AND a.MF = 'M' AND a.TYPE = 'MSB' GROUP BY calculated DESCRIPTION;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
 CREATE TABLE Region AS ( SELECT  *  FROM Region_MSB UNION ALL SELECT  *  FROM Region_All_Brands);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
"CREATE TABLE ""&OUTPUT.\Region Tab &CURDATE..xlsx"" AS ( SELECT * FROM Region) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE unique_BMD_3399 AS ( SELECT marsha, Unit, Peoplesoft_EEID, PEOPLESOFT_NAME FROM BMD_3399 );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
"SELECT DISTINCT * FROM unique_BMD_3399 ORDER BY marsha ,Unit ,Peoplesoft_EEID ,PEOPLESOFT_NAME;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE BMD_3399_ROLLUPS AS select b.Peoplesoft_EEID, b.PEOPLESOFT_NAME, ""3399"" AS Plan_ID , COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a LEFT JOIN unique_BMD_3399 AS b ON a.MARSHA_NEW = b.MARSHA WHERE a.SCOMP = 'Y' AND b.MARSHA <> '' GROUP BY b.Peoplesoft_EEID, b.PEOPLESOFT_NAME, Plan_ID;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE unique_BMD_3400 AS ( SELECT marsha, Unit, Peoplesoft_EEID, PEOPLESOFT_NAME FROM BMD_3400 );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
"SELECT DISTINCT * FROM unique_BMD_3400 ORDER BY marsha ,Unit ,Peoplesoft_EEID ,PEOPLESOFT_NAME;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE BMD_3400_ROLLUPS AS select b.Peoplesoft_EEID, b.PEOPLESOFT_NAME, ""3400"" AS Plan_ID , COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a LEFT JOIN unique_BMD_3400 AS b ON a.MARSHA_NEW = b.MARSHA WHERE a.SCOMP = 'Y' AND b.MARSHA <> '' GROUP BY b.Peoplesoft_EEID, b.PEOPLESOFT_NAME, Plan_ID;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE unique_Column_4364 AS ( SELECT marshacode, Unit, Property_Name FROM Column_4364 );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
"SELECT DISTINCT * FROM unique_Column_4364 ORDER BY marshacode ,Unit ,Property_Name;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE Column_4364_ROLLUPS AS select ""Column_4364"" AS Plan_ID , COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a LEFT JOIN unique_Column_4364 AS b ON a.MARSHA_NEW = b.marshacode WHERE a.SCOMP = 'Y' AND b.marshacode <> '' GROUP BY Plan_ID;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
 CREATE TABLE BMD_ROLLUPS AS ( SELECT  *  FROM Column_4364_ROLLUPS UNION ALL SELECT  *  FROM BMD_3400_ROLLUPS UNION ALL SELECT  *  FROM BMD_3399_ROLLUPS);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE unique_area_list AS ( SELECT MARSHA_Code, EMPL_ID, EMPLOYEE, PLID FROM area_list );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
"SELECT DISTINCT * FROM unique_area_list ORDER BY MARSHA_Code ,EMPL_ID ,EMPLOYEE ,PLID;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE AREA_ROLLUPS AS select b.EMPL_ID, b.EMPLOYEE, b.PLID , COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a INNER JOIN UNIQUE_AREA_LIST AS b ON a.MARSHA_NEW = b.MARSHA_Code WHERE a.SCOMP = 'Y' AND b.MARSHA_Code <> '' GROUP BY b.EMPL_ID, b.EMPLOYEE, b.PLID;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE unique_sales_list AS ( SELECT MARSHACode, EEID, PLID FROM sales_list );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
"SELECT DISTINCT * FROM unique_sales_list ORDER BY MARSHACode ,EEID ,PLID;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE SALES_ROLLUPS AS select b.EEID, b.PLID , COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( (  ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))/100 , ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100 )-1,.00001) AS RPI_PCT_CHG FROM ANNUAL a INNER JOIN UNIQUE_SALES_LIST AS b ON a.MARSHA_NEW = b.MARSHACode WHERE a.SCOMP = 'Y' AND b.MARSHACode <> '' GROUP BY b.EEID, b.PLID;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
"CREATE TABLE ""&OUTPUT.\Employee Tab &CURDATE..xlsx"" AS ( SELECT * FROM BMD_ROLLUPS) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
"CREATE TABLE ""&OUTPUT.\Employee Tab &CURDATE..xlsx"" AS ( SELECT * FROM AREA_ROLLUPS) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
"CREATE TABLE ""&OUTPUT.\Employee Tab &CURDATE..xlsx"" AS ( SELECT * FROM SALES_ROLLUPS) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE RPI_Kicker AS select a.MARSHA_NEW AS MARSHA, a.HOTEL_NAME, a.REGION , CASE WHEN b.RevPAR_Index___Change = . AND b.RC_Goal = . THEN ""N"" ELSE ""Y"" END AS Has_RPI_Goal , CASE WHEN a.BRND IN ( 'RZ','EB') THEN b.RC_GOAL ELSE RPI_LY * ( 1 + b.RevPAR_Index___Change) END AS Absolute_RPI_Goal , RPI_TY, a.RPI_PCT_CHG , CASE WHEN b.RevPAR_Index___Change = . AND b.RC_Goal = . THEN '' when b.RC_Goal = . AND a.RPI_PCT_CHG > b.RevPAR_Index___Change THEN ""Y"" when b.RevPAR_Index___Change = . AND a.RPI_TY > b.RC_Goal THEN ""Y"" ELSE ""N"" END AS Achieved_Goal FROM ANNUAL AS a LEFT JOIN AMERICAS_GOALS AS b ON a.MARSHA = b.MARSHA WHERE a.MF = 'M' AND a.REGION IN ( 'W_', 'E_', 'C_', 'S_') AND a.BRND IN ( 'JW', 'RZ', 'BG', 'EB', 'FS', 'DE', 'BR', 'GE', 'AK', 'CY', 'FI', 'RI', 'SH', 'TS', 'OX', 'AR', 'PR') AND a.RPI_TY > 0;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
"CREATE TABLE ""&OUTPUT.\RPI_Kicker &CURDATE..xlsx"" AS ( SELECT * FROM RPI_Kicker) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE rmblk AS select * FROM share.rmblk2006 WHERE hotel_cd IN ( select marsha FROM aw_tgt.property_master WHERE region IN ( 'EC','GC')) andEXTRACT(YEAR FROM arr_date) = 2019 andEXTRACT(MONTH FROM arr_date) <= 10;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Asia_SGDS_Data.sas
" CREATE TABLE bk AS select * FROM share.bkdata2006 WHERE hotel_cd IN ( select marsha FROM aw_tgt.property_master WHERE region IN ( 'EC','GC')) andEXTRACT(YEAR FROM arr_dt) = 2019 andEXTRACT(MONTH FROM arr_dt) <= 10;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Asia_SGDS_Data.sas
" CREATE TABLE fs AS select * FROM share.fsdata2006 WHERE hotel_cd IN ( select marsha FROM aw_tgt.property_master WHERE region IN ( 'EC','GC')) AND book_key IN ( select book_key FROM bk ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Asia_SGDS_Data.sas
CREATE TABLE fs AS ( SELECT  *  FROM fs );,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Asia_SGDS_Data.sas
"ALTER TABLE fs DROP COLUMN func_st_tm ,  func_en_tm ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Asia_SGDS_Data.sas
" CREATE TABLE AUTO_HOTELS AS ( SELECT  *  , FORMAT(MDY( SUBSTRING( MI_OPEN_DATE, 1, 2), 1, SUBSTRING( MI_OPEN_DATE, 7, 4) ), ""ddMMMyyyy"") AS OPENDATE2 , FORMAT(( DATEADD('MONTH',-12,OPENDATE2) ), ""ddMMMyyyy"") AS ONE_YEAR_PRE , FORMAT(( DATEADD('MONTH',+12,OPENDATE2) ), ""ddMMMyyyy"") AS ONE_YEAR_POST , FORMAT(( DATEADD('MONTH',+24,OPENDATE2) ), ""ddMMMyyyy"") AS TWO_YEARS_POST , CAST( SUBSTRING( MI_OPEN_DATE, 7, 4) || SUBSTRING( MI_OPEN_DATE, 1, 2) AS INT  ) AS YEARMN_OPEN  FROM FDD_COMP );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Autograph_Hotel_Groupings_by_Open_Date_Converted_to_AW.sas
" CREATE TABLE RECENT_STR_DATA AS select a.MARSHA, b.MARSHA_NEW, b.BRND_NAME , e.Comp_Status_per_YE17_Tree_Node AS FRAN_COMP , a.YRMNTH , a.MARAVAIL, a.MARSOLD, a.MARREV FROM CMP.STR_MONTHLY_DATA a LEFT JOIN TGT_BUS.PROPERTY_MASTER_MISW_HIST AS b ON a.MARSHA = b.MARSHA AND a.ASOF_YRMO = b.ASOF_YRMO LEFT JOIN FDD_Comp AS e ON b.MARSHA_NEW = e.MARSHA WHERE a.TIMEF ='MONTH' AND a.DATA_CATEGORY = 'Rooms' AND a.CURRENCY_TYPE = 'Constant USD' AND a.ASOF_YRMO = &YRMNTH. AND a.YRMNTH >= &YRMNTH. - 500 AND b.COUNTRY IN ( 'United States', 'Canada') AND a.MARAVAIL * a.MARREV > 0 AND e.Comp_Status_per_YE17_Tree_Node <> """" AND b.BRND IN ( 'AK', 'DE', 'LC', 'TX') ORDER BY a.MARSHA, b.MARSHA_NEW, b.BRND_NAME, e.Comp_Status_per_YE17_Tree_Node;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Autograph_Hotel_Groupings_by_Open_Date_Converted_to_AW.sas
" CREATE TABLE OLD_STR_DATA AS select a.MARSHA, b.MARSHA_NEW, b.BRND_NAME , e.Comp_Status_per_YE17_Tree_Node AS FRAN_COMP , a.YRMNTH , a.MARCAP AS MARAVAIL, a.MAROCC AS MARSOLD, a.MARREV FROM OldStar.x60_month_cd a LEFT JOIN TGT_BUS.PROPERTY_MASTER_MISW_HIST AS b ON a.MARSHA = b.MARSHA LEFT JOIN FDD_Comp AS e ON b.MARSHA_NEW = e.MARSHA WHERE a.YRMNTH < &YRMNTH. - 500 AND b.asof_yrmo = &YRMNTH. AND b.COUNTRY IN ( 'United States', 'Canada') AND a.MARCAP * a.MARREV > 0 AND e.Comp_Status_per_YE17_Tree_Node <> """" AND b.BRND IN ( 'AK', 'DE', 'LC', 'TX') ORDER BY a.MARSHA, b.MARSHA_NEW, b.BRND_NAME, e.Comp_Status_per_YE17_Tree_Node;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Autograph_Hotel_Groupings_by_Open_Date_Converted_to_AW.sas
" CREATE TABLE STR_DATA AS ( SELECT  *  , FORMAT(mdy( SUBSTRING ( yrmnth,5,6),1,SUBSTRING( yrmnth, 1, 4)), ""ddMMMyyyy"") AS date  FROM RECENT_STR_DATA UNION ALL SELECT  *  , FORMAT(mdy( SUBSTRING ( yrmnth,5,6),1,SUBSTRING( yrmnth, 1, 4)), ""ddMMMyyyy"") AS date  FROM OLD_STR_DATA);",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Autograph_Hotel_Groupings_by_Open_Date_Converted_to_AW.sas
" CREATE TABLE auto_data AS select a.MARSHA, a.BRND_NAME, a.YRMNTH , a.MARAVAIL, a.MARSOLD, a.MARREV , c.opendate2 AS MI_OPEN_DATE , CASE WHEN a.date = c.opendate2 THEN ""Open_Month"" when a.date >= c.One_Year_Pre AND a.date < c.opendate2 THEN ""One Year Pre"" when a.date > c.opendate2 AND a.date <= c.One_Year_Post THEN ""One Year Post"" when a.date > c.One_Year_Post AND a.date <= c.Two_Years_Post THEN ""Two Years Post"" ELSE """" END AS Time_Period , CASE WHEN c.yearmn_open <= &YRMNTH. - 200 THEN ""Two & Three Year"" when c.yearmn_open > &YRMNTH. - 200 AND c.yearmn_open <= &YRMNTH. - 100 THEN ""One Year"" when c.yearmn_open > &YRMNTH. - 100 THEN ""Less Than One Year"" ELSE """" END AS Hotel_Grouping FROM STR_DATA a LEFT JOIN auto_hotels AS c ON a.MARSHA_NEW=c.MARSHA;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Autograph_Hotel_Groupings_by_Open_Date_Converted_to_AW.sas
" CREATE TABLE good_data_flags_TY AS select a.*, COUNT( a.marsha) AS complete_months_TY FROM auto_data a GROUP BY a.marsha, a.time_period;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Autograph_Hotel_Groupings_by_Open_Date_Converted_to_AW.sas
"CREATE TABLE Good_Data AS ( SELECT  * , CASE WHEN  time_period = ""One Year Pre"" AND complete_months_TY = 12  THEN ""Y"" WHEN  Hotel_Grouping = ""One Year"" AND time_period = ""One Year Post"" AND complete_months_TY = 12  THEN ""Y"" WHEN  Hotel_Grouping = ""Two & Three Year"" AND time_period = ""One Year Post"" AND complete_months_TY = 12  THEN ""Y"" WHEN  Hotel_Grouping = ""Two & Three Year"" AND time_period = ""Two Years Post"" AND complete_months_TY = 12  THEN ""Y"" END AS good_data FROM good_data_flags_TY );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Autograph_Hotel_Groupings_by_Open_Date_Converted_to_AW.sas
ALTER TABLE Good_Data DROP COLUMN complete_months_TY ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Autograph_Hotel_Groupings_by_Open_Date_Converted_to_AW.sas
"CREATE TABLE Good_Data_DE_DUPED AS (SELECT DISTINCT * FROM Good_Data ORDER BY marsha ,time_period ,hotel_grouping ,good_data);",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Autograph_Hotel_Groupings_by_Open_Date_Converted_to_AW.sas
" CREATE TABLE no_dupes AS select a.marsha, a.hotel_grouping, COUNT( a.good_data) AS good_data FROM Good_Data_DE_DUPED a GROUP BY a.marsha, a.hotel_grouping;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Autograph_Hotel_Groupings_by_Open_Date_Converted_to_AW.sas
" CREATE TABLE no_dupes2 AS ( SELECT  * , CASE WHEN  hotel_grouping = ""One Year"" AND good_data = 2  THEN ""Y"" WHEN  hotel_grouping = ""Two & Three Year"" AND good_data = 3  THEN ""Y"" END AS good_data_all_years FROM no_dupes );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Autograph_Hotel_Groupings_by_Open_Date_Converted_to_AW.sas
" CREATE TABLE Good_TY_Absolute_Data AS select a.*, b.good_data_all_years FROM Good_Data a LEFT JOIN no_dupes2 AS b ON a.marsha=b.marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Autograph_Hotel_Groupings_by_Open_Date_Converted_to_AW.sas
"CREATE TABLE ""&OUTPUT.\Autograph Pre Post Conversion &Run_Date..xlsx"" AS ( SELECT * FROM Good_TY_Absolute_Data) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Autograph_Hotel_Groupings_by_Open_Date_Converted_to_AW.sas
   DROP TABLE aw_stg_bus_dbo.tmp_temp ) by odbc ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_ACTIVITY_UPLOAD.sas
" CREATE TABLE AW_STG_BUS_DBO.TMP_TEMP (  production_month INTEGER, production_year INTEGER, stay_month INTEGER, stay_quarter INTEGER, stay_year INTEGER, property_id VARCHAR( 12), production_type_cd VARCHAR( 4000), sales_market_segment_cd VARCHAR( 256), industry_CLASS_txt VARCHAR( 256), room_nights DOUBLE, revenue_local DOUBLE, revenue_usd DOUBLE, num_of_groups INTEGER, room_nights_py DOUBLE, revenue_py_local DOUBLE, revenue_py_usd DOUBLE, ytd_room_nights DOUBLE, ytd_revenue_local DOUBLE, ytd_revenue_usd DOUBLE, ytd_num_of_groups INTEGER, ytd_room_nights_py DOUBLE, ytd_revenue_py_local DOUBLE, ytd_revenue_py_usd DOUBLE, data_source_cd VARCHAR( 20) ) ) by odbc ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_ACTIVITY_UPLOAD.sas
 CREATE TABLE sourceData AS ( SELECT  *  FROM gd.grp_activity_misw_UPDATEd );,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_ACTIVITY_UPLOAD.sas
INSERT INTO TABLE AWPROD.TMP_TEMP SELECT * FROM work.sourceData;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_ACTIVITY_UPLOAD.sas
   INSERT INTO AW_STG_BUS_DBO.GRP_ACTIVITY_MISW select * FROM AW_STG_BUS_DBO.tmp_temp ) by odbc ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_ACTIVITY_UPLOAD.sas
   DROP TABLE AW_STG_BUS_DBO.tmp_temp ) by odbc ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_ACTIVITY_UPLOAD.sas
" CREATE TABLE mar_pace_oy AS select &MonEnd. AS snapshot_date,CAST( stay_yr AS INT ) AS stay_year,CAST( stay_qtr AS INT ) AS stay_quarter, CAST( stay_pd AS INT ) AS stay_month,marsha AS prop_master_id, book_stat AS status,'Banquet' AS revenue_department,segment AS market_segment, 'OY' AS data_source,rooms_net AS room_nights, rooms_rv_gross AS room_revenue_local,( rooms_rv_gross*local_fx) AS room_revenue_usd, rooms_net_ly AS stly_room_nights,rooms_rv_ly AS stly_room_revenue_local, ( rooms_rv_ly*local_fx) AS stly_room_revenue_usd,catering_rv AS other_revenue_local, ( catering_rv*local_fx) AS other_revenue_usd,catering_rv_ly AS stly_other_revenue_local, ( catering_rv_ly*local_fx) AS stly_other_revenue_usd FROM aw_tgt.oy_groupbookingpace WHERE opp_type='G' AND book_act_ind='0' AND asof_yrmo=&YrMon.;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_GRP_SCRIPT_FINAL.sas
 CREATE TABLE gd.pace_oy AS ( SELECT  *  FROM mar_pace_oy UNION ALL SELECT  *  FROM gd.pace_oy WHERE snapshot_date<>&MonEnd. );,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE mar_pace_cater_oy AS select &MonEnd. AS snapshot_date,CAST( stay_yr AS INT ) AS stay_year,CAST( stay_qtr AS INT ) AS stay_quarter, CAST( stay_pd AS INT ) AS stay_month,marsha AS prop_master_id, book_stat AS status,'Catering' AS revenue_department,segment AS market_segment, 'OY' AS data_source,rooms_net AS room_nights, rooms_rv_gross AS room_revenue_local,( rooms_rv_gross*local_fx) AS room_revenue_usd, rooms_net_ly AS stly_room_nights,rooms_rv_ly AS stly_room_revenue_local, ( rooms_rv_ly*local_fx) AS stly_room_revenue_usd,catering_rv AS other_revenue_local, ( catering_rv*local_fx) AS other_revenue_usd,catering_rv_ly AS stly_other_revenue_local, ( catering_rv_ly*local_fx) AS stly_other_revenue_usd FROM aw_tgt.oy_groupbookingpace WHERE opp_type='L' AND book_act_ind='0' AND asof_yrmo=&YrMon.;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_GRP_SCRIPT_FINAL.sas
 CREATE TABLE gd.pace_cater_oy AS ( SELECT  *  FROM mar_pace_cater_oy UNION ALL SELECT  *  FROM gd.pace_cater_oy WHERE snapshot_date<>&MonEnd. );,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE intl_pace_def AS select &MonEnd. AS snapshot_date, year AS stay_year, qtr AS stay_quarter, mon AS stay_month, marsha AS prop_master_id, 'Definite' AS status_cd, 'Banquet' AS revenue_department, 'Other' AS market_segment, 'MANUAL' AS data_source, rn_def AS room_nights, rv_def2 AS room_revenue_local, rv_def2 AS room_revenue_usd, ly_rn_def AS stly_room_nights, ly_rv_def2 AS stly_room_revenue_local, ly_rv_def2 AS stly_room_revenue_usd, 0 AS other_revenue_local, 0 AS other_revenue_usd, 0 AS stly_other_revenue_local, 0 AS stly_other_revenue_usd FROM snap.group_&MonYr.;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE intl_pace_tent AS select &MonEnd. AS snapshot_date, year AS stay_year, qtr AS stay_quarter, mon AS stay_month, marsha AS prop_master_id, 'Tentative' AS status_cd, 'Banquet' AS revenue_department, 'Other' AS market_segment, 'MANUAL' AS data_source, rn_tent AS room_nights, rv_tent2 AS room_revenue_local, rv_tent2 AS room_revenue_usd, ly_rn_tent AS stly_room_nights, ly_rv_tent2 AS stly_room_revenue_local, ly_rv_tent2 AS stly_room_revenue_usd, 0 AS other_revenue_local, 0 AS other_revenue_usd, 0 AS stly_other_revenue_local, 0 AS stly_other_revenue_usd FROM snap.group_&MonYr.;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_GRP_SCRIPT_FINAL.sas
 CREATE TABLE intl_pace_man AS ( SELECT  *  FROM intl_pace_def UNION ALL SELECT  *  FROM intl_pace_tent);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_GRP_SCRIPT_FINAL.sas
 delete FROM intl_pace_man WHERE room_nights=0 AND room_revenue_local=0 AND room_revenue_usd=0 AND stly_room_nights=0 AND stly_room_revenue_local=0 AND stly_room_revenue_usd=0 AND other_revenue_local=0 AND other_revenue_usd=0 AND stly_other_revenue_local=0 AND stly_other_revenue_usd=0;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_GRP_SCRIPT_FINAL.sas
" UPDATE intl_pace_man set data_source='MAN' WHERE prop_master_id IN ( 'ADBBR','BEGCY','BUDCY','BUDHU','ESBJW','ISTCY','ISTDT','SKPMC','TBSCY','TBSMC','CAIBR','CAIJW', 'BJSNE','DPSCY','DPSSM','SELPN','SHAJD','SHAKS','SZVCY','BJVEB','FAOLC','FAOPC','FAOPL' )  delete FROM intl_pace_man WHERE data_source='MANUAL';",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_GRP_SCRIPT_FINAL.sas
 CREATE TABLE gd.intl_pace_man AS ( SELECT  *  FROM intl_pace_man UNION ALL SELECT  *  FROM gd.intl_pace_man WHERE snapshot_date<>&MonEnd. );,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_GRP_SCRIPT_FINAL.sas
 CREATE TABLE gd.gbp_rolling_new AS ( SELECT  *  FROM awrevam.rollingdata_misw  wherereportingyr = &Yr. AND reportingpd = &Mon. and( manualflag='Y') OR ( manualflag='N' AND datasource='CI' ) );,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE RATES AS ( SELECT  *  , COMPRESS( CURR_CODE||MON ) AS CURMON , CAST( SUBSTRING( YRMON,1,4) AS INT  ) AS YEAR , SUBSTRING( CAST( ASOF_YRMO AS INT ),1,4 ) AS YR , CAST( SUBSTRING( CAST( ASOF_YRMO AS INT ),5,2) AS INT  ) AS MO , compress( yr||CAST( mo AS INT ) ) AS asof_yrmon  FROM AW_TGT.TREASFX_FCST_HIST  WHERE CURR_CODE<>'' AND ASOF_YRMO>=&YrMon.);",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE gbp_rolling_new AS select a.*,b.lcurrency FROM gd.gbp_rolling_new AS a LEFT JOIN aw_tgt.property_master AS b ON a.marsha=b.marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE gbp_rolling_new AS ( SELECT  *  , compress( reportingyr||reportingpd ) AS asof_yrmon , CASE WHEN  stayyr>reportingyr  THEN compress( lcurrency||CAST( 12 AS VARCHAR(2) ) ) ELSE compress( lcurrency||CAST( staypd AS VARCHAR(2) ) ) END AS curmon FROM gbp_rolling_new );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE gd.gbp_rolling_new1 AS select a.*,b.fxtocusd FROM gbp_rolling_new AS a LEFT JOIN rates AS b ON a.asof_yrmon=b.asof_yrmon AND a.curmon=b.curmon;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE gd.mar_pace_sia_def AS select intnx( 'month',mdy( reportingpd,1,reportingyr),0,'e') AS snapshot_date, stayyr AS stay_year, stayqtr AS stay_quarter, staypd AS stay_month, marsha AS prop_master_id, 'Definite' AS status format=$10., 'Banquet' AS revenue_department format=$10., 'Other' AS market_segment, 'SIA' AS data_source format=$10., rmntsdefty AS room_nights, revdefty/fxtocusd AS room_revenue_local, revdefty AS room_revenue_usd, rmntsdefly AS stly_room_nights, revdefly/fxtocusd AS stly_room_revenue_local, revdefly AS stly_room_revenue_usd FROM gd.gbp_rolling_new1;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE gd.mar_pace_sia_tent AS select intnx( 'month',mdy( reportingpd,1,reportingyr),0,'e') AS snapshot_date, stayyr AS stay_year, stayqtr AS stay_quarter, staypd AS stay_month, marsha AS prop_master_id, 'Tentative' AS status, 'Banquet' AS revenue_department, 'Other' AS market_segment, 'SIA' AS data_source, rmntstentty AS room_nights, revtentty/fxtocusd AS room_revenue_local, revtentty AS room_revenue_usd, rmntstently AS stly_room_nights, revtently/fxtocusd AS stly_room_revenue_local, revtently AS stly_room_revenue_usd FROM gd.gbp_rolling_new1;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE mar_pace AS ( SELECT  *  , FORMAT(status, VARCHAR(10)) AS status , FORMAT(revenue_department, VARCHAR(10)) AS revenue_department , FORMAT(data_source, VARCHAR(10)) AS data_source  FROM gd.mar_pace_sia_def UNION ALL SELECT  *  , FORMAT(status, VARCHAR(10)) AS status , FORMAT(revenue_department, VARCHAR(10)) AS revenue_department , FORMAT(data_source, VARCHAR(10)) AS data_source  FROM gd.mar_pace_sia_tent);",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE gd.pace AS select snapshot_date,stay_year,stay_quarter,stay_month,prop_master_id, status AS status_cd,revenue_department,market_segment,data_source,room_nights, room_revenue_local,room_revenue_usd,stly_room_nights,stly_room_revenue_local,stly_room_revenue_usd, 0 AS other_revenue_local,0 AS other_revenue_usd, 0 AS stly_other_revenue_local,0 AS stly_other_revenue_usd FROM mar_pace;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE pace_oy AS ( SELECT  *  , FORMAT(status_cd, VARCHAR(10)) AS status_cd , CASE WHEN  status='D'  THEN 'Definite' WHEN  status='1'  THEN 'Tentative1' WHEN  status='2'  THEN 'Tentative2' WHEN  status='H'  THEN 'Hold' WHEN  status='P'  THEN 'Prospect' END AS status_cd FROM mar_pace_oy );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE pace_oy_sum AS select snapshot_date,stay_year,stay_quarter,stay_month,prop_master_id, status_cd,revenue_department,market_segment,data_source,SUM( room_nights) AS room_nights, SUM( room_revenue_local) AS room_revenue_local,SUM( room_revenue_usd) AS room_revenue_usd, SUM( stly_room_nights) AS stly_room_nights,SUM( stly_room_revenue_local) AS stly_room_revenue_local, SUM( stly_room_revenue_usd) AS stly_room_revenue_usd, SUM( other_revenue_local) AS other_revenue_local,SUM( other_revenue_usd) AS other_revenue_usd, SUM( stly_other_revenue_local) AS stly_other_revenue_local,SUM( stly_other_revenue_usd) AS stly_other_revenue_usd FROM pace_oy GROUP BY snapshot_date,stay_year,stay_quarter,stay_month,prop_master_id, status_cd,revenue_department,market_segment,data_source;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE pace_cater_oy AS ( SELECT  *  , FORMAT(status_cd, VARCHAR(10)) AS status_cd , CASE WHEN  status='D'  THEN 'Definite' WHEN  status='1'  THEN 'Tentative1' WHEN  status='2'  THEN 'Tentative2' WHEN  status='H'  THEN 'Hold' WHEN  status='P'  THEN 'Prospect' END AS status_cd FROM mar_pace_cater_oy );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE cater_oy_sum AS select snapshot_date,stay_year,stay_quarter,stay_month,prop_master_id, status_cd,revenue_department,market_segment,data_source,SUM( room_nights) AS room_nights, SUM( room_revenue_local) AS room_revenue_local,SUM( room_revenue_usd) AS room_revenue_usd, SUM( stly_room_nights) AS stly_room_nights,SUM( stly_room_revenue_local) AS stly_room_revenue_local, SUM( stly_room_revenue_usd) AS stly_room_revenue_usd, SUM( other_revenue_local) AS other_revenue_local,SUM( other_revenue_usd) AS other_revenue_usd, SUM( stly_other_revenue_local) AS stly_other_revenue_local,SUM( stly_other_revenue_usd) AS stly_other_revenue_usd FROM pace_cater_oy GROUP BY snapshot_date,stay_year,stay_quarter,stay_month,prop_master_id, status_cd,revenue_department,market_segment,data_source;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_GRP_SCRIPT_FINAL.sas
INSERT INTO TABLE gd.pace SELECT * FROM intl_pace_man;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_GRP_SCRIPT_FINAL.sas
 INSERT INTO gd.pace select * FROM pace_oy_sum WHERE prop_master_id not IN ( select distinct marsha FROM gd.gbp_rolling_new )  INSERT INTO gd.pace select * FROM cater_oy_sum WHERE prop_master_id not IN ( select distinct marsha FROM gd.gbp_rolling_new ) ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE sgds_pace AS select intnx( 'month',mdy( CAST( SUBSTRING( as_of_date,6,2) AS INT ),1,CAST( SUBSTRING( as_of_date,2,4) AS INT )),0,'e') AS snapshot_date, stay_yr AS stay_year, stay_qtr AS stay_quarter, stay_mon AS stay_month, hotel_cd AS prop_master_id, 'Definite' AS status format=$10., 'Banquet' AS revenue_department format=$10., mkt_seg_dsc AS market_segment, 'SGDS' AS data_source format=$10., SUM( ty_rm) AS room_nights, SUM( ty_rev) AS room_revenue_local, SUM( ty_rev) AS room_revenue_usd, SUM( ly_rm_mon) AS stly_room_nights, SUM( ly_rev_mon) AS stly_room_revenue_local, SUM( ly_rev_mon) AS stly_room_revenue_usd, 0 AS other_revenue_local, 0 AS other_revenue_usd, 0 AS stly_other_revenue_local, 0 AS stly_other_revenue_usd, ( CASE WHEN stay_yr>CAST( SUBSTRING( as_of_date,2,4) AS INT ) THEN compress( 'EGP'||CAST( 12 AS INT )) ELSE compress( 'EGP'||CAST( stay_mon AS INT )) end) AS curmon FROM share_gp.mon_otb_file_nalo_v2 WHERE CAST( SUBSTRING( as_of_date,2,6) AS INT )=&YrMon. AND hotel_cd IN ( 'CAIBR','CAIJW') GROUP BY calculated snapshot_date,stay_yr,stay_qtr,stay_mon,hotel_cd, calculated status,calculated revenue_department,mkt_seg_dsc,calculated data_source;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE sgds_pace_temp AS select a.*,b.fxtocusd FROM sgds_pace AS a LEFT JOIN rates AS b ON a.curmon=b.curmon WHERE b.asof_yrmo=&YrMon.;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_GRP_SCRIPT_FINAL.sas
"CREATE TABLE gd.sgds_pace AS ( SELECT  *  , room_revenue_usd/fxtocusd AS room_revenue_local , stly_room_revenue_usd/fxtocusd AS stly_room_revenue_local  FROM sgds_pace_temp );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_GRP_SCRIPT_FINAL.sas
"ALTER TABLE gd.sgds_pace DROP COLUMN curmon ,  fxtocusd ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_GRP_SCRIPT_FINAL.sas
INSERT INTO TABLE gd.pace SELECT * FROM gd.sgds_pace;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE gd.mar_pace_ly_actuals AS select year+1 AS stay_year, month AS stay_month, prop_code AS prop_master_id, 'Definite' AS status_cd, 'Banquet' AS revenue_department_nm, SUM( au_gr_def_rn) AS ly_room_nights_amt, SUM( ( au_gr_def_rv+au_gr_reb)) AS ly_room_revenue_local_amt, SUM( ( usd_au_gr_def_rv+usd_au_gr_reb)) AS ly_room_revenue_usd_amt FROM proj.extractsum_mo_&YrMon._actupdt WHERE year IN ( 2016,2017,2018) GROUP BY year,month,prop_code;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE gd.pace_final AS select a.snapshot_date,a.stay_year,a.stay_quarter,a.stay_month,a.prop_master_id, a.status_cd,a.revenue_department AS revenue_department_nm,a.market_segment AS market_segment_cd, a.data_source AS data_source_nm,a.room_nights,a.room_revenue_local AS room_revenue_local_amt, a.room_revenue_usd AS room_revenue_usd_amt,a.stly_room_nights,a.stly_room_revenue_local AS stly_room_revenue_local_amt, a.stly_room_revenue_usd AS stly_room_revenue_usd_amt,b.ly_room_nights_amt, b.ly_room_revenue_local_amt,b.ly_room_revenue_usd_amt,a.other_revenue_local AS other_revenue_local_amt, a.other_revenue_usd AS other_revenue_usd_amt,a.stly_other_revenue_local AS stly_other_revenue_local_amt, a.stly_other_revenue_usd AS stly_other_revenue_usd_amt FROM gd.pace AS a LEFT JOIN gd.mar_pace_ly_actuals AS b ON a.stay_year=b.stay_year AND a.stay_month=b.stay_month AND a.prop_master_id=b.prop_master_id AND a.status_cd=b.status_cd AND a.revenue_department=b.revenue_department_nm WHERE a.data_source not IN ( 'DUP' ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE gd.grp_bookingpace_mi AS ( SELECT  *  , FORMAT(market_segment_cd, VARCHAR(60)) AS market_segment_cd , CASE WHEN  status_cd='D'  THEN 'Definite' WHEN  status_cd='1'  THEN 'Tentative1' WHEN  status_cd='2'  THEN 'Tentative2' WHEN  status_cd='Tentativ'  THEN 'Tentative' WHEN  status_cd='H'  THEN 'Hold' WHEN  status_cd='P'  THEN 'Prospect' END AS status_cd, CASE WHEN  market_segment_cd IN ( 'C')  THEN 'GROUP_CORPORATE' WHEN  market_segment_cd IN ( 'A','N','R')  THEN 'GROUP_ASSOCIATION' WHEN  market_segment_cd IN ( 'B','G','V','Z')  THEN 'GROUP_GOVERNMENT' WHEN  market_segment_cd IN ( 'S','M','P','E','L','F')  THEN 'GROUP_SMERF' WHEN  market_segment_cd IN ( 'T')  THEN 'GROUP_TOUR_SERIES' WHEN  market_segment_cd IN ( 'Other','I','O','W')  THEN 'GROUP_OTHER' WHEN  market_segment_cd IN ( 'U','Y')  THEN 'UNKNOWN' END AS market_segment_cd FROM gd.pace_final );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE gd.grp_bookingpace_misw AS select CAST( snapshot_date,date9. ) AS snapshot_date, stay_year, stay_quarter, stay_month, prop_master_id, status_cd, revenue_department_nm, market_segment_cd, data_source_nm, room_nights, room_revenue_local_amt, room_revenue_usd_amt, stly_room_nights, stly_room_revenue_local_amt, stly_room_revenue_usd_amt, ly_room_nights_amt, ly_room_revenue_local_amt, ly_room_revenue_usd_amt, 0 AS food_revenue_local_amt, 0 AS food_revenue_usd_amt, 0 AS stly_food_revenue_local_amt, 0 AS stly_food_revenue_usd_amt, 0 AS ly_food_revenue_local_amt, 0 AS ly_food_revenue_usd_amt, 0 AS bev_revenue_local_amt, 0 AS bev_revenue_usd_amt, 0 AS stly_bev_revenue_local_amt, 0 AS stly_bev_revenue_usd_amt, 0 AS ly_bev_revenue_local_amt, 0 AS ly_bev_revenue_usd_amt, 0 AS rm_rental_revenue_local_amt, 0 AS rm_rental_revenue_usd_amt, 0 AS stly_rm_rental_revenue_local_amt, 0 AS stly_rm_rental_revenue_usd_amt, 0 AS ly_room_rental_revenue_local_amt, 0 AS ly_room_rental_revenue_usd_amt, 0 AS resource_revenue_local_amt, 0 AS resource_revenue_usd_amt, 0 AS stly_resource_revenue_local_amt, 0 AS stly_resource_revenue_usd_amt, 0 AS ly_resource_revenue_local_amt, 0 AS ly_resource_revenue_usd_amt, other_revenue_local_amt, other_revenue_usd_amt, stly_other_revenue_local_amt, stly_other_revenue_usd_amt, 0 AS ly_other_revenue_local_amt, 0 AS ly_other_revenue_usd_amt FROM gd.grp_bookingpace_mi;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_GRP_SCRIPT_FINAL.sas
 CREATE TABLE SW_OY_PACE AS select * FROM gd.grp_bookingpace_misw WHERE data_source_nm='OY' AND prop_master_id IN ( select marsha FROM aw_tgt.property_master WHERE misw_flag='SW' ) ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE gd.SW_PACE_TY AS select distinct a.snapshot_date, a.stay_year, a.stay_quarter, a.stay_month, a.prop_master_id, a.status_cd, a.revenue_department_nm, a.market_segment_cd, a.data_source_nm, SUM( a.room_nights) AS room_nights, SUM( a.room_revenue_local_amt) AS room_revenue_local_amt, SUM( a.room_revenue_usd_amt) AS room_revenue_usd_amt, SUM( a.food_revenue_local_amt) AS food_revenue_local_amt, SUM( a.food_revenue_usd_amt) AS food_revenue_usd_amt, SUM( a.bev_revenue_local_amt) AS bev_revenue_local_amt, SUM( a.bev_revenue_usd_amt) AS bev_revenue_usd_amt, SUM( a.rm_rental_revenue_local_amt) AS rm_rental_revenue_local_amt, SUM( a.rm_rental_revenue_usd_amt) AS rm_rental_revenue_usd_amt, SUM( a.resource_revenue_local_amt) AS resource_revenue_local_amt, SUM( a.resource_revenue_usd_amt) AS resource_revenue_usd_amt, SUM( a.other_revenue_local_amt) AS other_revenue_local_amt, SUM( a.other_revenue_usd_amt) AS other_revenue_usd_amt FROM SW_OY_PACE AS a whereEXTRACT(YEAR FROM CAST( a.snapshot_date,date9. ))=&Yr. andEXTRACT(MONTH FROM CAST( a.snapshot_date,date9. ))=&Mon. GROUP BY a.snapshot_date, a.stay_year, a.stay_quarter, a.stay_month, a.prop_master_id, a.status_cd, a.revenue_department_nm, a.market_segment_cd, a.data_source_nm;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE sw_pace_ly_init AS select distinct ""&SSDate."" AS snapshot_date, a.stay_year+1 AS stay_year, a.stay_quarter, a.stay_month, a.prop_master_id, a.status_cd, a.revenue_department_nm, a.market_segment_cd, ""OY"" AS data_source_nm, SUM( a.room_nights) AS stly_room_nights, SUM( a.room_revenue_local_amt) AS stly_room_revenue_local_amt, SUM( a.room_revenue_usd_amt) AS stly_room_revenue_usd_amt, SUM( a.room_nights) AS ly_room_nights_amt, SUM( a.room_revenue_local_amt) AS ly_room_revenue_local_amt, SUM( a.room_revenue_usd_amt) AS ly_room_revenue_usd_amt, SUM( a.food_revenue_local_amt) AS stly_food_revenue_local_amt, SUM( a.food_revenue_usd_amt) AS stly_food_revenue_usd_amt, SUM( a.food_revenue_local_amt) AS ly_food_revenue_local_amt, SUM( a.food_revenue_usd_amt) AS ly_food_revenue_usd_amt, SUM( a.bev_revenue_local_amt) AS stly_bev_revenue_local_amt, SUM( a.bev_revenue_usd_amt) AS stly_bev_revenue_usd_amt, SUM( a.bev_revenue_local_amt) AS ly_bev_revenue_local_amt, SUM( a.bev_revenue_usd_amt) AS ly_bev_revenue_usd_amt, SUM( a.rm_rental_revenue_local_amt) AS stly_rm_rental_revenue_local_amt, SUM( a.rm_rental_revenue_usd_amt) AS stly_rm_rental_revenue_usd_amt, SUM( a.rm_rental_revenue_local_amt) AS ly_rm_rental_revenue_local_amt, SUM( a.rm_rental_revenue_usd_amt) AS ly_rm_rental_revenue_usd_amt, SUM( a.resource_revenue_local_amt) AS stly_resource_revenue_local_amt, SUM( a.resource_revenue_usd_amt) AS stly_resource_revenue_usd_amt, SUM( a.resource_revenue_local_amt) AS ly_resource_revenue_local_amt, SUM( a.resource_revenue_usd_amt) AS ly_resource_revenue_usd_amt, SUM( a.other_revenue_local_amt) AS stly_other_revenue_local_amt, SUM( a.other_revenue_usd_amt) AS stly_other_revenue_usd_amt, SUM( a.other_revenue_local_amt) AS ly_other_revenue_local_amt, SUM( a.other_revenue_usd_amt) AS ly_other_revenue_usd_amt FROM aw_stg.grp_bookingpace_misw AS a whereEXTRACT(YEAR FROM a.snapshot_date)=&LYr. andEXTRACT(MONTH FROM a.snapshot_date)=&Mon. AND a.prop_master_id IN ( select prop_master_id FROM SW_OY_PACE) GROUP BY a.snapshot_date, a.stay_year, a.stay_quarter, a.stay_month, a.prop_master_id, a.status_cd, a.revenue_department_nm, a.market_segment_cd, a.data_source_nm;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE gd.oy_data AS select distinct a.marsha,region,country,CAST( stay_yr AS INT ) AS stay_year,CAST( stay_pd AS INT ) AS stay_month, local_fx,local_cur,sell_fx,sell_cur,asof_yrmo FROM aw_tgt.oy_groupbookingpace AS a LEFT JOIN aw_tgt.property_master AS b ON a.marsha=b.marsha WHERE asof_yrmo=&YrMon.;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE RZPROPS AS select distinct a.marsha,a.region,a.country,2019 AS stay_year,b.mon AS stay_month, b.curr_code AS local_cur,b.fxtocusd AS local_fx, b.curr_code AS sell_cur,b.fxtocusd AS sell_fx FROM aw_tgt.property_master AS a INNER JOIN rates AS b ON a.lcurrency=b.curr_code WHERE brnd='RZ' AND asof_yrmo=&YrMon.;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE RZCURR AS select distinct curr_code AS local_cur,fxtocusd AS local_fx,curr_code AS sell_cur,fxtocusd AS sell_fx FROM rates WHERE mon=12 AND asof_yrmo=&YrMon. AND curr_code IN ( select distinct local_cur FROM RZPROPS ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_GRP_SCRIPT_FINAL.sas
" INSERT INTO RZPROPS select distinct a.marsha,a.region,a.country,2020 AS stay_year,b.mon AS stay_month, c.local_cur,c.local_fx,c.sell_cur,c.sell_fx FROM aw_tgt.property_master AS a INNER JOIN rates AS b ON a.lcurrency=b.curr_code INNER JOIN RZCURR AS c ON b.curr_code=c.local_cur WHERE brnd='RZ' AND b.asof_yrmo=&YrMon.;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_GRP_SCRIPT_FINAL.sas
" INSERT INTO RZPROPS select distinct a.marsha,a.region,a.country,2021 AS stay_year,b.mon AS stay_month, c.local_cur,c.local_fx,c.sell_cur,c.sell_fx FROM aw_tgt.property_master AS a INNER JOIN rates AS b ON a.lcurrency=b.curr_code INNER JOIN RZCURR AS c ON b.curr_code=c.local_cur WHERE brnd='RZ' AND b.asof_yrmo=&YrMon.;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_GRP_SCRIPT_FINAL.sas
" INSERT INTO RZPROPS select distinct a.marsha,a.region,a.country,2022 AS stay_year,b.mon AS stay_month, c.local_cur,c.local_fx,c.sell_cur,c.sell_fx FROM aw_tgt.property_master AS a INNER JOIN rates AS b ON a.lcurrency=b.curr_code INNER JOIN RZCURR AS c ON b.curr_code=c.local_cur WHERE brnd='RZ' AND b.asof_yrmo=&YrMon.;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_GRP_SCRIPT_FINAL.sas
" INSERT INTO RZPROPS select distinct a.marsha,a.region,a.country,2023 AS stay_year,b.mon AS stay_month, c.local_cur,c.local_fx,c.sell_cur,c.sell_fx FROM aw_tgt.property_master AS a INNER JOIN rates AS b ON a.lcurrency=b.curr_code INNER JOIN RZCURR AS c ON b.curr_code=c.local_cur WHERE brnd='RZ' AND b.asof_yrmo=&YrMon.;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_GRP_SCRIPT_FINAL.sas
 CREATE TABLE RZPROPS AS ( SELECT  *  FROM RZPROPS  WHERE marsha<>'MCORZ');,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_GRP_SCRIPT_FINAL.sas
INSERT INTO TABLE gd.oy_data SELECT * FROM RZPROPS;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE sw_pace_ly_temp AS select a.*,b.local_fx,b.local_cur,b.sell_fx,b.sell_cur FROM sw_pace_ly_init AS a LEFT JOIN gd.oy_data AS b ON a.prop_master_id=b.marsha AND a.stay_year=b.stay_year AND a.stay_month=b.stay_month;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE gd.sw_pace_ly AS ( SELECT  *  , ly_room_revenue_local_amt*local_fx AS ly_room_revenue_usd_amt , stly_food_revenue_local_amt*local_fx AS stly_food_revenue_usd_amt , ly_food_revenue_local_amt*local_fx AS ly_food_revenue_usd_amt , stly_bev_revenue_local_amt*local_fx AS stly_bev_revenue_usd_amt , ly_bev_revenue_local_amt*local_fx AS ly_bev_revenue_usd_amt , stly_rm_rental_revenue_local_amt*local_fx AS stly_rm_rental_revenue_usd_amt , ly_rm_rental_revenue_local_amt*local_fx AS ly_rm_rental_revenue_usd_amt , stly_resource_revenue_local_amt*local_fx AS stly_resource_revenue_usd_amt , ly_resource_revenue_local_amt*local_fx AS ly_resource_revenue_usd_amt , stly_other_revenue_local_amt*local_fx AS stly_other_revenue_usd_amt , ly_other_revenue_local_amt*local_fx AS ly_other_revenue_usd_amt  FROM sw_pace_ly_temp  WHERE not missing( local_fx));",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE SW_PACE AS ( select distinct snapshot_date, stay_year, stay_quarter, stay_month, prop_master_id, status_cd, revenue_department_nm, market_segment_cd, data_source_nm FROM gd.SW_PACE_TY) UNION ( select distinct snapshot_date, stay_year, stay_quarter, stay_month, prop_master_id, status_cd, revenue_department_nm, market_segment_cd, data_source_nm FROM gd.SW_PACE_LY WHERE stay_year>=2019 ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE gd.SW_OY_PACE AS select distinct a.snapshot_date, a.stay_year, a.stay_quarter, a.stay_month, a.prop_master_id, a.status_cd, a.revenue_department_nm, a.market_segment_cd, a.data_source_nm, b.room_nights, b.room_revenue_local_amt, b.room_revenue_usd_amt, c.stly_room_nights, c.stly_room_revenue_local_amt, c.stly_room_revenue_usd_amt, c.ly_room_nights_amt, c.ly_room_revenue_local_amt, c.ly_room_revenue_usd_amt, b.food_revenue_local_amt, b.food_revenue_usd_amt, c.stly_food_revenue_local_amt, c.stly_food_revenue_usd_amt, c.ly_food_revenue_local_amt, c.ly_food_revenue_usd_amt, b.bev_revenue_local_amt, b.bev_revenue_usd_amt, c.stly_bev_revenue_local_amt, c.stly_bev_revenue_usd_amt, c.ly_bev_revenue_local_amt, c.ly_bev_revenue_usd_amt, b.rm_rental_revenue_local_amt, b.rm_rental_revenue_usd_amt, c.stly_rm_rental_revenue_local_amt, c.stly_rm_rental_revenue_usd_amt, c.ly_rm_rental_revenue_local_amt, c.ly_rm_rental_revenue_usd_amt, b.resource_revenue_local_amt, b.resource_revenue_usd_amt, c.stly_resource_revenue_local_amt, c.stly_resource_revenue_usd_amt, c.ly_resource_revenue_local_amt, c.ly_resource_revenue_usd_amt, b.other_revenue_local_amt, b.other_revenue_usd_amt, c.stly_other_revenue_local_amt, c.stly_other_revenue_usd_amt, c.ly_other_revenue_local_amt, c.ly_other_revenue_usd_amt FROM SW_PACE AS a LEFT JOIN gd.SW_PACE_TY AS b ON a.stay_year=b.stay_year AND a.stay_quarter=b.stay_quarter AND a.stay_month=b.stay_month AND a.prop_master_id=b.prop_master_id AND a.status_cd=b.status_cd AND a.revenue_department_nm=b.revenue_department_nm AND a.market_segment_cd=b.market_segment_cd LEFT JOIN gd.SW_PACE_LY AS c ON a.stay_year=c.stay_year AND a.stay_quarter=c.stay_quarter AND a.stay_month=c.stay_month AND a.prop_master_id=c.prop_master_id AND a.status_cd=c.status_cd AND a.revenue_department_nm=c.revenue_department_nm AND a.market_segment_cd=c.market_segment_cd;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_GRP_SCRIPT_FINAL.sas
 CREATE TABLE gd.grp_bookingpace_misw_UPDATEd AS select * FROM gd.grp_bookingpace_misw WHERE prop_master_id not IN ( select prop_master_id FROM gd.sw_oy_pace ) ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_GRP_SCRIPT_FINAL.sas
 INSERT INTO gd.grp_bookingpace_misw_UPDATEd select * FROM gd.sw_oy_pace;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_GRP_SCRIPT_FINAL.sas
" CREATE TABLE AMT.AMT_AGG_2020 AS ( SELECT  *  , 2020 AS Pricing_Season  FROM AMT.AMT_AGG_2020 );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_load_AMT_AGG_2020_1st_Setup.sas
" CREATE TABLE AMT_AGG_2020_1 AS ( SELECT Name, vFormat, VARNUM , compress( LENGTH ) AS x , CASE WHEN  compress( FORMAT)=""$""  THEN compress( ""Varchar( ""||x||"")"" ) WHEN   compress( FORMAT)=""DATE""  THEN ""Date"" ELSE ""Integer"" END AS vFormat FROM temp );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_load_AMT_AGG_2020_1st_Setup.sas
SELECT * FROM AMT_AGG_2020_1 ORDER BY VARNUM;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_load_AMT_AGG_2020_1st_Setup.sas
DROP TABLE AWPROD.AMT_AGG;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_load_AMT_AGG_2020_1st_Setup.sas
" CREATE TABLE AW_REV_STG.AMT_AGG (  marsha Varchar( 5) , Strategy Varchar( 41) , RN_to_Replace Bigint , ACCOUNT_ID Bigint , Company_Name Varchar( 45) , Tier Varchar( 6) , Brand_Code Varchar( 2) , Hotel_Name Varchar( 80) , Comp Varchar( 1) , MF Varchar( 1) , Region Varchar( 23) , AVP Varchar( 26) , AD Varchar( 30) , ADRM Varchar( 23) , GRMRS_Hotel Varchar( 2) , GRMRS_RevMgr Varchar( 35) , GRMRS_Team_Leader Varchar( 22) , Market Varchar( 28) , Country Varchar( 32) , Hotel_Class Varchar( 10) , HCAP Bigint , Recommendation Varchar( 24) , Rec2 Varchar( 23) , Pricing_Scenario Bigint , Exception Bigint , RN_L12 DOUBLE , Rev_L12 DOUBLE , Retail_Rev_L12 DOUBLE , Displace_RV_L12 DOUBLE , ADR_L12 DOUBLE , Discount_Percent_L12 DOUBLE , Displacement_Percent_L12 DOUBLE , SrtOrder Bigint , Price Varchar( 1) , RN_YTD DOUBLE , Rev_YTD DOUBLE , Retail_Rev_YTD DOUBLE , Displace_RV_YTD DOUBLE , ADR_YTD DOUBLE , Discount_Percent_YTD DOUBLE , Displacement_Percent_YTD DOUBLE , Rebid_Frequency_Percetn DOUBLE , Hotels_No_Rebid_Response Bigint , Accepted_No_Rebid_Response Bigint , Acceptance_Rate_No_Rebid_Respons DOUBLE , Hotels_Yes_Rebid_Response Bigint , Accepted_Yes_Rebid_Response Bigint , Acceptance_Rate_Yes_Rebid_Respon DOUBLE , Loss_in_ADR_pct DOUBLE , Hist_ADR_Chg_2017_pct DOUBLE , Hist_ADR_Chg_2018_pct DOUBLE , Hist_ADR_Chg_2019_YTD_pct DOUBLE , Pricing_Season Smallint ) ) by odbc ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_load_AMT_AGG_2020_1st_Setup.sas
INSERT INTO TABLE AWPROD.AMT_AGG SELECT * FROM AMT.AMT_AGG_2020;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_load_AMT_AGG_2020_1st_Setup.sas
DROP TABLE REVDBO.AMT_AGG;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_load_AMT_AGG_2020_1st_Setup.sas
" CREATE HADOOP TABLE AW_REV_DBO.AMT_AGG (  marsha Varchar( 5) , Strategy Varchar( 41) , RN_to_Replace Bigint , ACCOUNT_ID Bigint , Company_Name Varchar( 45) , Tier Varchar( 6) , Brand_Code Varchar( 2) , Hotel_Name Varchar( 80) , Comp Varchar( 1) , MF Varchar( 1) , Region Varchar( 23) , AVP Varchar( 26) , AD Varchar( 30) , ADRM Varchar( 23) , GRMRS_Hotel Varchar( 2) , GRMRS_RevMgr Varchar( 35) , GRMRS_Team_Leader Varchar( 22) , Market Varchar( 28) , Country Varchar( 32) , Hotel_Class Varchar( 10) , HCAP Bigint , Recommendation Varchar( 24) , Rec2 Varchar( 23) , Pricing_Scenario Bigint , Exception Bigint , RN_L12 DOUBLE , Rev_L12 DOUBLE , Retail_Rev_L12 DOUBLE , Displace_RV_L12 DOUBLE , ADR_L12 DOUBLE , Discount_Percent_L12 DOUBLE , Displacement_Percent_L12 DOUBLE , SrtOrder Bigint , Price Varchar( 1) , RN_YTD DOUBLE , Rev_YTD DOUBLE , Retail_Rev_YTD DOUBLE , Displace_RV_YTD DOUBLE , ADR_YTD DOUBLE , Discount_Percent_YTD DOUBLE , Displacement_Percent_YTD DOUBLE , Rebid_Frequency_Percetn DOUBLE , Hotels_No_Rebid_Response Bigint , Accepted_No_Rebid_Response Bigint , Acceptance_Rate_No_Rebid_Respons DOUBLE , Hotels_Yes_Rebid_Response Bigint , Accepted_Yes_Rebid_Response Bigint , Acceptance_Rate_Yes_Rebid_Respon DOUBLE , Loss_in_ADR_pct DOUBLE , Hist_ADR_Chg_2017_pct DOUBLE , Hist_ADR_Chg_2018_pct DOUBLE , Hist_ADR_Chg_2019_YTD_pct DOUBLE , Pricing_Season Smallint ) stored AS parquetfile ) by odbc ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_load_AMT_AGG_2020_1st_Setup.sas
   INSERT INTO AW_REV_DBO.AMT_AGG Select * FROM AW_REV_STG.AMT_AGG ) by odbc ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_load_AMT_AGG_2020_1st_Setup.sas
DROP TABLE AWPROD.AW_REV_STG.AMT_AGG;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_load_AMT_AGG_2020_1st_Setup.sas
   DROP TABLE AW_STG_BUS_DBO.tmp_temp ) by odbc ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_PACE_UPLOAD.sas
" CREATE TABLE AW_STG_BUS_DBO.tmp_temp (  snapshot_date VARCHAR( 10), stay_year INTEGER, stay_quarter INTEGER, stay_month INTEGER, prop_master_id VARCHAR( 12), status_cd VARCHAR( 30), revenue_department_nm VARCHAR( 100), market_segment_cd VARCHAR( 100), data_source_nm VARCHAR( 20), room_nights DOUBLE, room_revenue_local_amt DOUBLE, room_revenue_usd_amt DOUBLE, stly_room_nights DOUBLE, stly_room_revenue_local_amt DOUBLE, stly_room_revenue_usd_amt DOUBLE, ly_room_nights_amt DOUBLE, ly_room_revenue_local_amt DOUBLE, ly_room_revenue_usd_amt DOUBLE, food_revenue_local_amt DOUBLE, food_revenue_usd_amt DOUBLE, stly_food_revenue_local_amt DOUBLE, stly_food_revenue_usd_amt DOUBLE, ly_food_revenue_local_amt DOUBLE, ly_food_revenue_usd_amt DOUBLE, bev_revenue_local_amt DOUBLE, bev_revenue_usd_amt DOUBLE, stly_bev_revenue_local_amt DOUBLE, stly_bev_revenue_usd_amt DOUBLE, ly_bev_revenue_local_amt DOUBLE, ly_bev_revenue_usd_amt DOUBLE, rm_rental_revenue_local_amt DOUBLE, rm_rental_revenue_usd_amt DOUBLE, stly_rm_rental_revenue_local_amt DOUBLE, stly_rm_rental_revenue_usd_amt DOUBLE, ly_room_rental_revenue_local_amt DOUBLE, ly_room_rental_revenue_usd_amt DOUBLE, resource_revenue_local_amt DOUBLE, resource_revenue_usd_amt DOUBLE, stly_resource_revenue_local_amt DOUBLE, stly_resource_revenue_usd_amt DOUBLE, ly_resource_revenue_local_amt DOUBLE, ly_resource_revenue_usd_amt DOUBLE, other_revenue_local_amt DOUBLE, other_revenue_usd_amt DOUBLE, stly_other_revenue_local_amt DOUBLE, stly_other_revenue_usd_amt DOUBLE, ly_other_revenue_local_amt DOUBLE, ly_other_revenue_usd_amt DOUBLE ) ) by odbc ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_PACE_UPLOAD.sas
" CREATE TABLE sourceData AS select snapshot_date, stay_year, stay_quarter, stay_month, prop_master_id, status_cd, revenue_department_nm, market_segment_cd, data_source_nm, room_nights, room_revenue_local_amt, room_revenue_usd_amt, stly_room_nights, stly_room_revenue_local_amt, stly_room_revenue_usd_amt, ly_room_nights_amt, ly_room_revenue_local_amt, ly_room_revenue_usd_amt, food_revenue_local_amt, food_revenue_usd_amt, stly_food_revenue_local_amt, stly_food_revenue_usd_amt, ly_food_revenue_local_amt, ly_food_revenue_usd_amt, bev_revenue_local_amt, bev_revenue_usd_amt, stly_bev_revenue_local_amt, stly_bev_revenue_usd_amt, ly_bev_revenue_local_amt, ly_bev_revenue_usd_amt, rm_rental_revenue_local_amt, rm_rental_revenue_usd_amt, stly_rm_rental_revenue_local_amt, stly_rm_rental_revenue_usd_amt, ly_room_rental_revenue_local_amt, ly_room_rental_revenue_usd_amt, resource_revenue_local_amt, resource_revenue_usd_amt, stly_resource_revenue_local_amt, stly_resource_revenue_usd_amt, ly_resource_revenue_local_amt, ly_resource_revenue_usd_amt, other_revenue_local_amt, other_revenue_usd_amt, stly_other_revenue_local_amt, stly_other_revenue_usd_amt, ly_other_revenue_local_amt, ly_other_revenue_usd_amt FROM gd.grp_bookingpace_misw_UPDATEd;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_PACE_UPLOAD.sas
INSERT INTO TABLE AWPROD.TMP_TEMP SELECT * FROM work.sourceData;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_PACE_UPLOAD.sas
"   INSERT INTO AW_STG_BUS_DBO.GRP_BOOKINGPACE_MISW select to_date( snapshot_date,'ddmonyyyy'), stay_year, stay_quarter, stay_month, prop_master_id, status_cd, revenue_department_nm, market_segment_cd, data_source_nm, room_nights, room_revenue_local_amt, room_revenue_usd_amt, stly_room_nights, stly_room_revenue_local_amt, stly_room_revenue_usd_amt, ly_room_nights_amt, ly_room_revenue_local_amt, ly_room_revenue_usd_amt, food_revenue_local_amt, food_revenue_usd_amt, stly_food_revenue_local_amt, stly_food_revenue_usd_amt, ly_food_revenue_local_amt, ly_food_revenue_usd_amt, bev_revenue_local_amt, bev_revenue_usd_amt, stly_bev_revenue_local_amt, stly_bev_revenue_usd_amt, ly_bev_revenue_local_amt, ly_bev_revenue_usd_amt, rm_rental_revenue_local_amt, rm_rental_revenue_usd_amt, stly_rm_rental_revenue_local_amt, stly_rm_rental_revenue_usd_amt, ly_room_rental_revenue_local_amt, ly_room_rental_revenue_usd_amt, resource_revenue_local_amt, resource_revenue_usd_amt, stly_resource_revenue_local_amt, stly_resource_revenue_usd_amt, ly_resource_revenue_local_amt, ly_resource_revenue_usd_amt, other_revenue_local_amt, other_revenue_usd_amt, stly_other_revenue_local_amt, stly_other_revenue_usd_amt, ly_other_revenue_local_amt, ly_other_revenue_usd_amt FROM aw_stg_bus_dbo.tmp_temp ) by odbc ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_AW_PACE_UPLOAD.sas
 CREATE TABLE prop_master AS  (  SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER A  ) ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Combine_MadAboutMktShare_Data3-OtherBrnds.sas
" CREATE TABLE perdiem_by_zip AS select SUBSTRING( zip,1,5) AS zip, max( PD&YR.&Mon. ) AS PD&YR.&Mon. FROM perdiem_by_zip_orig GROUP BY calculated zip;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Combine_MadAboutMktShare_Data3-OtherBrnds.sas
" CREATE TABLE ecomm1_2 AS ( SELECT  *  , ' ' AS ota_prtcpt_num  FROM ecomm1  WHERE marsha<>'');",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Combine_MadAboutMktShare_Data3-OtherBrnds.sas
" CREATE TABLE ecomm2_2 AS ( SELECT  *  , ' ' AS ota_prtcpt_num  FROM ecomm2 );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Combine_MadAboutMktShare_Data3-OtherBrnds.sas
" CREATE TABLE strrank AS  (  SELECT MARSHA, RANK_REVPAR_NUM, RANK_REVPAR_DEN FROM AW_TGT_BUS_DBO.STR_60MONTH WHERE yrmnth=&STRMo AND TIMEF='MONTH' AND asof_yrmo=&STRMo  ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Combine_MadAboutMktShare_Data3-OtherBrnds.sas
" CREATE TABLE strrank3 AS ( SELECT  *  , compress( CAST( RANK_REVPAR_NUM,best12. ))||"" of ""||compress( CAST( RANK_REVPAR_DEN,best12. ) ) AS FW_STR_MNLY_RevPARRank_MN  FROM strrank );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Combine_MadAboutMktShare_Data3-OtherBrnds.sas
SELECT DISTINCT * FROM strrank3 ORDER BY marsha;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Combine_MadAboutMktShare_Data3-OtherBrnds.sas
" CREATE TABLE sellout_data AS select marsha , SUM( Actl_Sellouts) AS Actl_Sellouts , SUM( Psbl_Sellouts) AS Psbl_Sellouts , calculated Actl_Sellouts/ calculated Psbl_Sellouts AS sellout_efficiency FROM taneka.sellout_data WHERE L3<>'( no filter)' GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Combine_MadAboutMktShare_Data3-OtherBrnds.sas
" CREATE TABLE MAMS_Data AS select a.marsha , a.brnd , a.hCLASS , a.mf , a.owner , f.WD_ADR_MN , f.WD_ADR_chg_MN , f.WD_ADR_L3 , f.WD_ADR_chg_L3 , f.WD_NQ_Mix_L3 , f.WD_NQ_ADR_chg_L3 , f.WD_NQ_RN_chg_L3 , f.WD_NQ_ADR_chg_MN , f.WD_NQ_RN_chg_MN , j.WD_GR_RN_1MO_OTB , j.WD_GR_RN_Chg_1MO_OTB , f.WD_GR_RN_chg_MN , f.WD_GR_RN_chg_L3 , f.WD_TR_Mix_chg_MN , f.WD_TR_Mix_chg_L3 , f.WD_GR_Mix_MN , f.WD_Occ_chg_MN , f.WE_NQ_ADR_chg_MN , f.WE_NQ_RN_chg_MN , f.WE_NQ_ADR_chg_L3 , f.WE_NQ_RN_chg_L3 , f.WE_GR_RN_chg_MN , f.WE_GR_RN_chg_L3 , f.we_TR_Mix_chg_MN , f.we_TR_Mix_chg_L3 , f.WE_GR_Mix_L3 , f.WE_GR_Mix_MN , CASE WHEN a.mf='F' OR a.country not IN ( 'United States' 'Canada') THEN j.FW_GR_RN_Chg_1MO_OTB when a.mf='M' THEN ( h.fw_gr_rn_1MO+-fw_gr_rn_LY_1MO) / fw_gr_rn_LY_1MO ELSE . END AS gr_rn_chg_1MO , CASE WHEN a.mf='F' OR a.country not IN ( 'United States' 'Canada') THEN j.FW_GR_RN_Chg_3MO_OTB when a.mf='M' THEN ( h.fw_gr_rn_3MO+-FW_GR_rn_LY_3MO) / FW_GR_rn_LY_3MO ELSE . END AS gr_rn_chg_3MO , a.hotel_name AS hotname , f.WD_SC_ADR_chg_L3 , f.WD_SC_RN_chg_MN , f.WD_SC_RN_chg_L3 , g.STR_MNLY_ADRIndexChg_MN AS FW_STR_MNLY_ADRIndexChg_MN , g.STR_MNLY_ADRIndexChg_L3 AS FW_STR_MNLY_ADRIndexChg_L3 , g.STR_MNLY_OccIndexChg_MN AS FW_STR_MNLY_OccIndexChg_MN , g.STR_MNLY_OccIndexChg_L3 AS FW_STR_MNLY_OccIndexChg_L3 , g.STR_MNLY_RevPARIndexChg_MN AS FW_STR_MNLY_RevPARIndexChg_MN , g.STR_MNLY_RevPARIndexChg_L3 AS FW_STR_MNLY_RevPARIndexChg_L3 , j.WD_TR_RN_Chg_1MO_OTB , j.WD_TR_RN_Chg_3MO_OTB , j.WD_TR_RN_1MO_OTB - ( j.WD_TR_RN_1MO_OTB / ( 1+j.WD_TR_RN_Chg_1MO_OTB) ) AS WD_TR_RN_PACE_RNDIFF_1MO , f.WD_TRE_L3 , CASE WHEN d.STR_MNLY_OccIndex_MN = . THEN g.STR_MNLY_OccIndex_MN ELSE d.STR_MNLY_OccIndex_MN END AS WD_STR_MNLY_OccIndex_MN , CASE WHEN d.STR_MNLY_OccIndex_MN = . THEN g.STR_MNLY_OccIndex_L3 ELSE d.STR_MNLY_OccIndex_L3 END AS WD_STR_MNLY_OccIndex_L3 , CASE WHEN d.STR_MNLY_OccIndex_MN = . THEN g.STR_MNLY_OccIndexChg_MN ELSE d.STR_MNLY_OccIndexChg_MN END AS WD_STR_MNLY_OccIndexChg_MN , CASE WHEN d.STR_MNLY_OccIndex_MN = . THEN g.STR_MNLY_OccIndexChg_L3 ELSE d.STR_MNLY_OccIndexChg_L3 END AS WD_STR_MNLY_OccIndexChg_L3 , CASE WHEN a.mf='F' OR a.country not IN ( 'United States' 'Canada') THEN j2.WD_OY_FCST_Occ_3MO when a.mf='M' THEN wd_rn_3MO/wd_cap_3MO ELSE . END AS WD_Occ_3MO_RP , CASE WHEN e.STR_MNLY_OccIndex_MN = . THEN g.STR_MNLY_OccIndex_MN ELSE e.STR_MNLY_OccIndex_MN END AS WE_STR_MNLY_OccIndex_MN , CASE WHEN e.STR_MNLY_OccIndex_L3 = . THEN g.STR_MNLY_OccIndex_L3 ELSE e.STR_MNLY_OccIndex_L3 END AS WE_STR_MNLY_OccIndex_L3 , CASE WHEN e.STR_MNLY_OccIndexChg_MN = . THEN g.STR_MNLY_OccIndexChg_MN ELSE e.STR_MNLY_OccIndexChg_MN END AS WE_STR_MNLY_OccIndexChg_MN , CASE WHEN e.STR_MNLY_OccIndexChg_L3 = . THEN g.STR_MNLY_OccIndexChg_L3 ELSE e.STR_MNLY_OccIndexChg_L3 END AS WE_STR_MNLY_OccIndexChg_L3 , CASE WHEN e.STR_MNLY_ADRIndexChg_MN = . THEN g.STR_MNLY_ADRIndexChg_MN ELSE e.STR_MNLY_ADRIndexChg_MN END AS WE_STR_MNLY_ADRIndexChg_MN , CASE WHEN e.STR_MNLY_ADRIndexChg_L3 = . THEN g.STR_MNLY_ADRIndexChg_L3 ELSE e.STR_MNLY_ADRIndexChg_L3 END AS WE_STR_MNLY_ADRIndexChg_L3 , CASE WHEN e.STR_MNLY_RevPARIndexChg_MN = . THEN g.STR_MNLY_RevPARIndexChg_MN ELSE e.STR_MNLY_RevPARIndexChg_MN END AS WE_STR_MNLY_RevPARIndexChg_MN , CASE WHEN e.STR_MNLY_RevPARIndexChg_L3 = . THEN g.STR_MNLY_RevPARIndexChg_L3 ELSE e.STR_MNLY_RevPARIndexChg_L3 END AS WE_STR_MNLY_RevPARIndexChg_L3 , CASE WHEN a.mf='F' OR a.country not IN ( 'United States' 'Canada') THEN j2.WE_OY_FCST_Occ_3MO when a.mf='M' THEN we_rn_3MO/we_cap_3MO ELSE . END AS WE_Occ_3MO_RP , i.rn_rwd/i.rn_tot AS MRW_Guests_L3 , i.brnd_rn_rwd/i.brnd_rn_tot AS Average_pct_Rewards , i.rn_plat/i.rn_tot AS MRW_Plat_Guests_L3 , i.brnd_rn_plat/i.brnd_rn_tot AS MRW_Plat_Guests_BrndAvg_L3 , CASE WHEN 1=1 THEN 'NA' when w._____Sessions_Natural_Search__YT = . THEN '' when w._____Sessions_Natural_Search__YT/100 ge .02 THEN 'GREEN' when w._____Sessions_Natural_Search__YT/100 gt -.02 THEN 'YELLOW' when w._____Sessions_Natural_Search__YT/100 le -.02 THEN 'RED' END AS Natural_Search_Red_Pct_1PA , CASE WHEN 1=1 THEN 'NA' when x._____Sessions_Natural_Search__YT = . THEN '' when x._____Sessions_Natural_Search__YT/100 ge .02 THEN 'GREEN' when x._____Sessions_Natural_Search__YT/100 gt -.02 THEN 'YELLOW' when x._____Sessions_Natural_Search__YT/100 le -.02 THEN 'RED' END AS Natural_Search_Red_Pct_2PA , CASE WHEN 1=1 THEN 'NA' when y._____Sessions_Natural_Search__YT = . THEN '' when y._____Sessions_Natural_Search__YT/100 ge .02 THEN 'GREEN' when y._____Sessions_Natural_Search__YT/100 gt -.02 THEN 'YELLOW' when y._____Sessions_Natural_Search__YT/100 le -.02 THEN 'RED' END AS Natural_Search_Red_Pct_3PA , l.avg_level AS High_Value_Ratio_ACT , w.ota_prtcpt_num AS OTA_Participation_Num , f.FW_GR_RN_chg_rn_L3 , f.FW_GR_RN_chg_rn_MN , CASE WHEN a.mf='F' OR a.country not IN ( 'United States' 'Canada') THEN j2.Wed_Occ_3MO when a.mf='M' THEN j2.Wed_Occ_3MO ELSE . END AS Wed_Occ_3MO_RP , i.rn_sc_rwd/i.rn_sc AS WD_SC_MRWMemb_L3 , . AS ROM_L3 , FUNCTION_SPACE , f.WD_Gr_Mix_L3 , j.FW_GR_RN_Chg_1MO_OTB AS FW_GR_RN_Pace_Chg_1MO , f.WD_GR_RN_Var_L3 , f.WE_Occ_L3 , f.WD_SC_Mix_L3 AS WD_SC_Mix_L3 , g.STR_MNLY_Revenue_L3 AS FW_STR_RV_L3 , g.STR_MNLY_RevPARIndex_L3 AS FW_STR_RevPARIndex_L3 , g.STR_MNLY_ADR_L3 AS FW_STR_ADR_L3 , g.STR_MNLY_Revenue_MN AS FW_STR_RV_MN , g.STR_MNLY_RevPARIndex_MN AS FW_STR_RevPARIndex_MN , g.STR_MNLY_ADR_MN AS FW_STR_ADR_MN , g.STR_MNLY_RevPARIndex_YTD AS FW_STR_RevPARIndex_YTD , g.STR_MNLY_RevPARIndexChg_YTD AS FW_STR_MNLY_RevPARIndexChg_YTD , f.WE_GR_RN_VAR_L3 , j.WE_GR_RN_Var_1MO_OTB AS WE_GR_RN_PaceVAR_1MO , j.WE_GR_RN_Chg_1MO_OTB AS WE_GR_RN_PaceChg_1MO , g.STR_MNLY_OccIndex_L3 AS FW_OccIndex_L3 , CASE WHEN d.STR_MNLY_OccIndex_MN = . THEN 'FW' ELSE 'WD_WE' END AS WD_v_FW_STR_Flag , CASE WHEN SFO_ORG='' THEN 'N' ELSE 'Y' END AS SFO_Ind , a.opendate , a.division , a.region , a.rd , a.avp , f.WE_GR_RN_Var_MN , f.WD_GR_RN_Var_MN , g.STR_MNLY_Occ_L3 AS FW_Occ_L3 , j.WE_GR_RN_Chg_3MO_OTB AS WE_GR_RN_PaceChg_3MO , j.WD_GR_RN_Chg_3MO_OTB AS WD_GR_RN_PaceChg_3MO , j.WE_GR_RN_Var_3MO_OTB AS WE_GR_RN_PaceVar_3MO , j.WD_GR_RN_Var_3MO_OTB AS WD_GR_RN_PaceVar_3MO , CASE WHEN d.STR_MNLY_OccIndexChg_MN = . THEN g.STR_MNLY_OccIndexChg_MN ELSE d.STR_MNLY_OccIndexChg_MN END AS WD_STR_MNLY_ADRIndexChg_MN , CASE WHEN d.STR_MNLY_OccIndexChg_L3 = . THEN g.STR_MNLY_OccIndexChg_L3 ELSE d.STR_MNLY_OccIndexChg_L3 END AS WD_STR_MNLY_ADRIndexChg_L3 , CASE WHEN d.STR_MNLY_RevPARIndexChg_MN = . THEN g.STR_MNLY_RevPARIndexChg_MN ELSE d.STR_MNLY_RevPARIndexChg_MN END AS WD_STR_MNLY_RevPARIndexChg_MN , CASE WHEN d.STR_MNLY_RevPARIndexChg_L3 = . THEN g.STR_MNLY_RevPARIndexChg_L3 ELSE d.STR_MNLY_RevPARIndexChg_L3 END AS WD_STR_MNLY_RevPARIndexChg_L3 , g.STR_MNLY_Rev_MN AS FW_STR_MNLY_RevPAR_MN , g.STR_MNLY_Rev_L3 AS FW_STR_MNLY_RevPAR_L3 , g.STR_MNLY_CompRev_MN AS FW_STR_MNLY_COMP_RevPAR_MN , g.STR_MNLY_CompRev_L3 AS FW_STR_MNLY_COMP_RevPAR_L3 , a.hcap AS hotel_capacity , o.FW_STR_MNLY_RevPARRank_MN , CASE WHEN a.brnd='CY' THEN 'CYRB' when a.sub_brand = 'FFI&S' THEN 'FIS' when a.brnd='FI' THEN 'FFI' ELSE 'N' END AS brand_VARiable , a.manager , u.Elite_Appreciation AS GSS_Elite , v.Elite_Rewards_Member_Appreciatio AS GSS_Elite_Average , u.Intent_to_RecommEND AS GSS_Intent_to_Recommend , v.Intent_to_Recommend_Property AS GSS_Intent_to_Recommend_Average , f.FW_Group_RN_PctChg_L3 , f.WD_TR_RNPCTChg_MN , f.WD_TR_RNPCTChg_L3 , f.WD_GR_ADR_L3 , f.WE_GR_ADR_L3 , f.FW_GR_ADR_L3 , s.WD_CR_Indx_MN AS WD_CompRate_Index_MN , s.WD_CR_Indx_Chg_MN AS WD_CompRate_Index_Chg_MN , s.WE_CR_Indx_MN AS WE_CompRate_Index_MN , s.WE_CR_Indx_Chg_MN AS WE_CompRate_Index_Chg_MN , CASE WHEN t.Quickgroup_with_Sleeping_Rooms = 'Not participating IN QuickGroup with Sleeping Rooms' THEN 'N' when t.Quickgroup_with_Sleeping_Rooms = 'Not participating IN QuickGroup-eRFP only' THEN 'N' when SUBSTRING( t.Quickgroup_with_Sleeping_Rooms,1,17) = 'Not participating' THEN 'N' when t.Quickgroup_with_Sleeping_Rooms = '' THEN '' ELSE 'Y' END AS Quickgroup_with_Sleeping_Rooms , CASE WHEN t.QuickGroup_with_Event_Space = 'Not participating IN QuickGroup with Event Space' THEN 'N' when t.QuickGroup_with_Event_Space = 'Not Participating ( one meeting room)' THEN 'N/A' when t.QuickGroup_with_Event_Space = 'N/A No Meeting Space' THEN 'N/A' when SUBSTRING( t.QuickGroup_with_Event_Space,1,17) = 'Not participating' THEN 'N' when SUBSTRING( t.QuickGroup_with_Event_Space,1,13) = 'Not Signed Up' THEN 'N' when t.QuickGroup_with_Event_Space = '' THEN '' ELSE 'Y' END AS QuickGroup_with_Event_Space , t.Total_number_of_meeting_rooms , CASE WHEN t4.MonthlyHotSpecific='Y' THEN 'Y' when t4.MonthlyHotSpecific<>'' THEN t4.MonthlyHotSpecific ELSE 'N' END AS MonthlyHotSpecific , f.FW_RevPAR_YTD , f.FW_RevPAR_Chg_YTD , a.country , CASE WHEN a.brnd<>'CY' THEN '' when t3.Adv_Purch_Avail='N' THEN 'N' ELSE 'Y' END AS Adv_Purch_Avail , f.WD_GV_Mix_L3 , f.WD_MC12_ADR_MN , CASE WHEN a.region = 'S_' OR a.country='Canada' OR a.state IN ( 'HI', 'AK') THEN . when pd.PD&YR.&Mon.=. THEN 83 ELSE pd.PD&YR.&Mon. END AS GV_PerDiem_MN , CASE WHEN GRMRS_Hotel='Y' THEN 'Y' ELSE 'N' END AS RMRS_Hotel , f.WD_Occ_L3 , eet.EET_Trigger , u.OSAT AS OSAT , CASE WHEN u.OSAT=. THEN """" when u.OSAT ge 68 THEN 'Green' when u.OSAT ge 54 THEN 'Clear' when u.OSAT ge 51 THEN 'Yellow' ELSE 'Red' END AS OSAT_Color , rpo.pct_high_priority_dates_wd AS rpo_pct_high_days_wd , rpo.pct_moves_up_wd AS rpo_hot_under_pct_wd, rpo.pct_moves_down_wd AS rpo_hot_over_pct_wd , rpo.pct_high_priority_dates_we AS rpo_pct_high_days_we , rpo.pct_moves_up_we AS rpo_hot_under_pct_we, rpo.pct_moves_down_wd AS rpo_hot_over_pct_we , '' AS rpo_tot_pricing_moves , '' AS pct_moves_in_rpodirection, '' AS rpo_logins , r24.__of_Alerts_Responded_in_48_Hrs AS Response_in_24Hrs , lnf.LNF_Claims_L3 , mc.mcom_rn_chg_MN , mc.mcom_rn_chg_L3 , mc.mcom_rn_share_chg_MN , mc.mcom_rn_share_chg_L3 , ge.STR_MNLY_RevPARIndexChg_L3 AS FW_RevPARIndex_Chg_L3_5MO_LY , so.sellout_efficiency , CASE WHEN t4_2.MonthlyHotSpecific='Y' THEN 'Y' when t4_2.MonthlyHotSpecific<>'' THEN t4_2.MonthlyHotSpecific ELSE 'N' END AS MonthlyHotSpecific2 , CASE WHEN mf='F' OR country not IN ( 'United States' 'Canada') THEN j2.Wed_Occ_1MO when mf='M' THEN j2.Wed_Occ_1MO ELSE . END AS Wed_Occ_1MO_RP , CASE WHEN mf='F' OR country not IN ( 'United States' 'Canada') THEN j2.Wed_Occ_2MO when mf='M' THEN j2.Wed_Occ_2MO ELSE . END AS Wed_Occ_2MO_RP , sys.io_flag , sys.fa_flag AS fcst_acc_flag , sys.rpo_flag , CASE WHEN mf='F' OR country not IN ( 'United States' 'Canada') THEN j2.FW_OY_FCST_Occ_1MO when mf='M' THEN fw_rn_1MO/fw_cap_1MO ELSE . END AS FW_Occ_1MO_RP , CASE WHEN mf='F' OR country not IN ( 'United States' 'Canada') THEN j2.FW_OY_FCST_Occ_2MO when mf='M' THEN fw_rn_2MO/fw_cap_2MO ELSE . END AS FW_Occ_2MO_RP , CASE WHEN mf='F' OR country not IN ( 'United States' 'Canada') THEN j2.FW_OY_FCST_Occ_3MO when mf='M' THEN fw_rn_3MO/fw_cap_3MO ELSE . END AS FW_Occ_3MO_RP , . AS M_Com_RN_Mix_YTD , mb._____RNs_from_Brand_com__YTD__Be AS M_Com_RN_Mix_Bench , CAST( mb._____RNs_from_Brand_com__YTD__Va,best12. )/100 AS M_Com_RN_Mix_Var_to_Bench , j2.midweek_occ_ge80_num , f.WD_GR_Mix_Chg_L3 , f.WD_GR_Mix_Chg_MN , f.WE_GR_Mix_Chg_L3 , f.WE_GR_Mix_Chg_MN , j2.Sat_Occ_2MO , j2.Sat_Occ_3MO , CASE WHEN country IN ( 'United States', 'USA', 'Mexico') THEN 'Y' when country='Canada' AND state not IN ( 'PQ', 'QC') THEN 'Y' ELSE 'N' END AS Flag_US_CAN_MEX_NoQC , &tmstmp. - a.opendate AS days_open , &tmstmp. AS Datestamp format date9. ,EXTRACT(MONTH FROM &tmstmp. ) AS Timestamp_Month FROM prop_master AS a LEFT JOIN mams.mams_mrdw AS f ON a.marsha=f.marsha LEFT JOIN mams.STR_FW_MONTHLY_&STR_FLDR. AS g ON a.marsha=g.marsha LEFT JOIN mams.STR_WD_MONTHLY_&STR_FLDR. AS d ON a.marsha=d.marsha LEFT JOIN mams.STR_WE_MONTHLY_&STR_FLDR. AS e ON a.marsha=e.marsha LEFT JOIN mams.allrpdata AS h ON a.marsha=h.marsha LEFT JOIN mams.all_rwd_mamm_&yrmo AS i ON a.marsha=i.marsha LEFT JOIN mams.Esf_otb AS j ON a.marsha=j.marsha LEFT JOIN mams.Mams_oy_forecast AS j2 ON a.marsha=j2.marsha LEFT JOIN mams.actdata AS l ON a.marsha=l.marsha LEFT JOIN strrank3 AS o ON a.marsha=o.marsha LEFT JOIN mams.intl_tra_crdata_pd AS s ON a.marsha=s.marsha LEFT JOIN quickgroup AS t ON a.marsha=t.marsha_code LEFT JOIN gss_hot AS u ON a.marsha=u.marsha LEFT JOIN gss_brnd AS v ON a.brnd=v.brand LEFT JOIN ecomm1_2 AS w ON a.marsha=w.marsha LEFT JOIN ecomm2_2 AS x ON a.marsha=x.marsha LEFT JOIN ecomm3 AS y ON a.marsha=y.marsha LEFT JOIN advPurch AS t3 ON a.marsha=t3.marsha LEFT JOIN MonthlyHotSpecific AS t4 ON a.marsha=t4.marsha LEFT JOIN MonthlyHotSpecific2 AS t4_2 ON a.marsha=t4_2.marsha LEFT JOIN perdiem_by_zip AS pd ON CAST( SUBSTRING( a.zip,1,5),best12. )=CAST( SUBSTRING( pd.zip,1,5),best12. ) LEFT JOIN eet_trigger AS eet ON a.marsha=eet.marsha LEFT JOIN rpo.Rpo_recom_dir_&mon.&yr. AS rpo ON a.marsha=rpo.marsha LEFT JOIN Resp_24hr AS r24 ON a.marsha=r24.marsha LEFT JOIN Lnf_violations AS lnf ON a.marsha=lnf.marsha LEFT JOIN mams.mcom_data AS mc ON a.marsha=mc.marsha LEFT JOIN mamsftr.STR_FW_MONTHLY_&ftrSTR. AS ge ON a.marsha=ge.marsha LEFT JOIN sellout_data AS so ON a.marsha=so.marsha LEFT JOIN rpo.&io_fle. AS sys ON a.marsha=sys.marsha LEFT JOIN mcom_bench AS mb ON a.marsha=mb.marsha WHERE ( a.brnd IN ( 'CY', 'SH', 'FI', 'AR', 'OX', 'FP', 'AL') AND a.openflag='Y' AND ( a.division IN ( 'AM') OR a.marsha IN ( 'MUCCY', 'AKLFP'))) ORDER BY a.marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Combine_MadAboutMktShare_Data3-OtherBrnds.sas
CREATE TABLE MAMS_DUP AS (SELECT DISTINCT * FROM MAMS_Data ORDER BY marsha);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Combine_MadAboutMktShare_Data3-OtherBrnds.sas
"CREATE TABLE ""G:\RM EAnlys\Shared_Data\Projects\Mad About Market Share\&outfldr\MAMS_Rawdata-&outfldr.-AC.xls"" AS ( SELECT *  FROM MAMS_Data WHERE  brnd='AR' ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Combine_MadAboutMktShare_Data3-OtherBrnds.sas
"CREATE TABLE ""G:\RM EAnlys\Shared_Data\Projects\Mad About Market Share\&outfldr\MAMS_Rawdata-&outfldr.-OX.xls"" AS ( SELECT *  FROM MAMS_Data WHERE  brnd='OX' ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Combine_MadAboutMktShare_Data3-OtherBrnds.sas
"CREATE TABLE ""G:\RM EAnlys\Shared_Data\Projects\Mad About Market Share\&outfldr\MAMS_Rawdata-&outfldr.-SH.xls"" AS ( SELECT *  FROM MAMS_Data WHERE  brnd='SH' ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Combine_MadAboutMktShare_Data3-OtherBrnds.sas
"CREATE TABLE ""G:\RM EAnlys\Shared_Data\Projects\Mad About Market Share\&outfldr\MAMS_Rawdata-&outfldr.-FI.xls"" AS ( SELECT *  FROM MAMS_Data WHERE  brnd='FI' ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Combine_MadAboutMktShare_Data3-OtherBrnds.sas
"CREATE TABLE ""G:\RM EAnlys\Shared_Data\Projects\Mad About Market Share\&outfldr\MAMS_Rawdata-&outfldr.-CY.xls"" AS ( SELECT *  FROM MAMS_Data WHERE  brnd='CY' ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Combine_MadAboutMktShare_Data3-OtherBrnds.sas
"CREATE TABLE ""G:\RM EAnlys\Shared_Data\Projects\Mad About Market Share\&outfldr\MAMS_Rawdata-&outfldr.-FP.xls"" AS ( SELECT *  FROM MAMS_Data WHERE  brnd='FP' ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Combine_MadAboutMktShare_Data3-OtherBrnds.sas
"CREATE TABLE ""G:\RM EAnlys\Shared_Data\Projects\Mad About Market Share\&outfldr\MAMS_Rawdata-&outfldr.-AL.xls"" AS ( SELECT *  FROM MAMS_Data WHERE  brnd='AL' ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Combine_MadAboutMktShare_Data3-OtherBrnds.sas
 CREATE TABLE mams.mams_&yrmo._AR AS ( SELECT  *  FROM MAMS_Data  WHERE brnd='AR');,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Combine_MadAboutMktShare_Data3-OtherBrnds.sas
 CREATE TABLE mams.AR_hotel_UPDATE_data AS ( SELECT  *  FROM mams.mams_&yrmo._AR );,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Combine_MadAboutMktShare_Data3-OtherBrnds.sas
 CREATE TABLE mams.mams_&yrmo._OX AS ( SELECT  *  FROM MAMS_Data  WHERE brnd='OX');,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Combine_MadAboutMktShare_Data3-OtherBrnds.sas
 CREATE TABLE mams.ox_hotel_UPDATE_data AS ( SELECT  *  FROM mams.mams_&yrmo._OX );,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Combine_MadAboutMktShare_Data3-OtherBrnds.sas
 CREATE TABLE mams.mams_&yrmo._FI AS ( SELECT  *  FROM MAMS_Data  WHERE brnd='FI');,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Combine_MadAboutMktShare_Data3-OtherBrnds.sas
 CREATE TABLE mams.fi_hotel_UPDATE_data AS ( SELECT  *  FROM mams.mams_&yrmo._FI );,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Combine_MadAboutMktShare_Data3-OtherBrnds.sas
 CREATE TABLE mams.mams_&yrmo._SH AS ( SELECT  *  FROM MAMS_Data  WHERE brnd='SH');,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Combine_MadAboutMktShare_Data3-OtherBrnds.sas
 CREATE TABLE mams.sh_hotel_UPDATE_data AS ( SELECT  *  FROM mams.mams_&yrmo._SH );,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Combine_MadAboutMktShare_Data3-OtherBrnds.sas
 CREATE TABLE mams.mams_&yrmo._CY AS ( SELECT  *  FROM MAMS_Data  WHERE brnd='CY');,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Combine_MadAboutMktShare_Data3-OtherBrnds.sas
 CREATE TABLE mams.cy_hotel_UPDATE_data AS ( SELECT  *  FROM mams.mams_&yrmo._CY );,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Combine_MadAboutMktShare_Data3-OtherBrnds.sas
 CREATE TABLE mams.mams_&yrmo._FP AS ( SELECT  *  FROM MAMS_Data  WHERE brnd='FP');,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Combine_MadAboutMktShare_Data3-OtherBrnds.sas
 CREATE TABLE mams.fp_hotel_UPDATE_data AS ( SELECT  *  FROM mams.mams_&yrmo._FP );,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Combine_MadAboutMktShare_Data3-OtherBrnds.sas
 CREATE TABLE mams.mams_&yrmo._AL AS ( SELECT  *  FROM MAMS_Data  WHERE brnd='AL') CREATE TABLE mams.mams_&yrmo._AL;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Combine_MadAboutMktShare_Data3-OtherBrnds.sas
 CREATE TABLE prop_misw AS  (  SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER_HIST A WHERE asof_yrmo = &yearmn.  ) ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Demand_Strategy_Data_Pullv4.sas
" CREATE TABLE mrdwdata AS  (  select CASE WHEN a.property_cd='SJUDB' THEN 'SJUDO' ELSE a.property_cd END AS property_cd , a.year_cal_id, a.month_cal_id, a.market_prefix_cd , CASE WHEN b.ab_day_of_week_cd IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' END AS wdwe , SUM( a.roomnights_qty) AS rn, SUM( a.net_rev_local_amt) AS rv , SUM( net_rev_usd_sub_amt) AS rv_usd FROM mrdw_fact_agg_dr_rev_analysis a, mrdw_dim_date b WHERE a.date_stay_dt=b.date_dt AND a.year_cal_id IN ( &yr. , &yr.-1 , &yr.-2) AND a.brand_cd IN ( 'FS', 'ER', 'BR', 'CC', 'RZ', 'AK', 'BG', 'EB', 'AR', 'CY', 'RI', 'SH', 'TS', 'FI', 'GE', 'DE', 'OX', 'PR', 'LC', 'WI', 'SI', 'FP', 'XR', 'MD', 'GX','WH','AL', 'TX', 'EL') GROUP BY property_cd, a.year_cal_id, a.month_cal_id, a.market_prefix_cd, wdwe ORDER BY property_cd, a.year_cal_id, a.month_cal_id, a.market_prefix_cd, wdwe  )  ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Demand_Strategy_Data_Pullv4.sas
" CREATE TABLE mrdwdata2 AS select coalesce( a.property_cd, b.property_cd) AS marsha ,coalesce( a.month_cal_id, b.month_cal_id) AS MN ,coalesce( a.market_prefix_cd, b.market_prefix_cd) AS mcpref ,coalesce( a.wdwe, b.wdwe) AS wdwe ,coalesce( a.year_cal_id, b.year_cal_id + 1) AS YR ,a.rn ,a.rv ,a.rv_usd ,b.rn AS rn_ly ,b.rv AS rv_ly ,b.rv_usd AS rv_usd_ly FROM mrdwdata a full JOIN mrdwdata b ON a.property_cd = b.property_cd AND a.month_cal_id = b.month_cal_id AND a.market_prefix_cd = b.market_prefix_cd AND a.wdwe = b.wdwe AND a.year_cal_id = b.year_cal_id + 1 WHERE ( 100 * coalesce( a.year_cal_id , b.year_cal_id + 1) + coalesce( a.month_cal_id, b.month_cal_id) <= 100 * &yr. + &MN.  ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Demand_Strategy_Data_Pullv4.sas
" CREATE TABLE trn_otb_ty AS select snapshot_dt AS asof_week, property_cd, stay_dt , CASE WHEN weekday( stay_dt) IN ( 6,7) THEN 'WE' ELSE 'WD' END AS wdwe , SEG_CD AS market_segment, SUM( ROOM_NIGHTS) AS rn, SUM( REVENUE) AS rev FROM AWPROD2.MRDW_FACT_SEG10_DETAILS a, prop_misw prop WHERE a.property_cd = prop.marsha AND prop.region IN ( 'E_', 'W_', 'C_') AND snapshot_dt = &otbAsOfDate AND partition_snapshot_dt = &otbAsOfDate AND a.stay_dt >= &OTBstrTY AND a.stay_dt <= &OTBendTY GROUP BY snapshot_dt, property_cd, stay_dt, seg_cd, calculated wdwe ORDER BY snapshot_dt, property_cd, stay_dt, seg_cd, calculated wdwe;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Demand_Strategy_Data_Pullv4.sas
" CREATE TABLE trn_otb_date AS select snapshot_dt +365 AS asof_week, property_cd, stay_dt+365 AS stay_dt format date9. , CASE WHEN weekday( stay_dt) IN ( 6,7) THEN 'WE' ELSE 'WD' END AS wdwe , SEG_CD AS market_segment, SUM( ROOM_NIGHTS) AS rn, SUM( REVENUE) AS rv FROM AWPROD2.MRDW_FACT_SEG10_DETAILS a, prop_misw prop WHERE a.property_cd = prop.marsha AND prop.region IN ( 'E_', 'W_', 'C_') AND snapshot_dt = &otbAsOfDate -365 AND a.stay_dt >= &OTBstrTY -365 AND a.stay_dt <= &OTBendTY -365 GROUP BY snapshot_dt, property_cd, stay_dt, seg_cd, calculated wdwe ORDER BY snapshot_dt, property_cd, stay_dt, seg_cd, calculated wdwe;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Demand_Strategy_Data_Pullv4.sas
" CREATE TABLE stella3_trn_otb AS select coalesce( a.property_cd,b.property_cd) AS marsha ,coalesce( a.stay_dt, b.stay_dt) AS stay_date ,coalesce( a.market_segment,b.market_segment) AS mcpref ,coalesce( a.wdwe,b.wdwe) AS wdwe ,a.rn AS rn ,a.rev AS rv ,b.rn AS rn_ly ,b.rv AS rv_ly FROM trn_otb_ty AS a full JOIN trn_otb_date AS b ON a.property_cd = b.property_cd AND a.stay_dt=b.stay_dt AND a.market_segment = b.market_segment AND a.wdwe = b.wdwe ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Demand_Strategy_Data_Pullv4.sas
" CREATE TABLE allotb AS select marsha,EXTRACT(YEAR FROM stay_date) AS yr,EXTRACT(MONTH FROM stay_date) AS mn, mcpref, wdwe, SUM( rn) AS rn, SUM( rv) AS rv, SUM( rv) AS rv_usd, SUM( rn_ly) AS rn_ly, SUM( rv_ly) AS rv_ly, SUM( rv_ly) AS rv_usd_ly FROM stella3_trn_otb WHERE 100 * calculated yr + calculated mn IN ( &FutureMN2., &FutureMN3., &FutureMN4. ) GROUP BY marsha, yr, mn, mcpref, wdwe;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Demand_Strategy_Data_Pullv4.sas
" CREATE TABLE demand AS  (  select CASE WHEN c.property_cd='SJUDB' THEN 'SJUDO' ELSE c.property_cd END AS marsha , b.year_cal, b.month_cal_id, a.cd_market_segment AS mcpref ,CASE WHEN b.ab_day_of_week_cd IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' END AS wdwe , SUM( a.qy_addl_demand_adjstd) AS demand FROM mrdw_fact_ddm_stat_unconstrain a JOIN mrdw_dim_date b ON a.id_date_stay=b.date_key JOIN mrdw_dim_property AS c ON a.id_property=c.property_id WHERE b.year_cal IN ( &yr. , &yr.-1 , &yr.-2) GROUP BY marsha, b.year_cal, b.month_cal_id, mcpref, wdwe  )  ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Demand_Strategy_Data_Pullv4.sas
" CREATE TABLE demand2 AS select coalesce( a.marsha, b.marsha) AS marsha ,coalesce( a.month_cal_id, b.month_cal_id) AS MN ,coalesce( a.mcpref, b.mcpref) AS mcpref ,coalesce( a.wdwe, b.wdwe) AS wdwe ,coalesce( a.year_cal, b.year_cal + 1) AS YR ,a.demand AS demand ,b.demand AS demand_ly FROM demand a full JOIN demand b ON a.marsha = b.marsha AND a.month_cal_id = b.month_cal_id AND a.mcpref = b.mcpref AND a.wdwe = b.wdwe AND a.year_cal = b.year_cal + 1 WHERE ( 100 * coalesce( a.year_cal , b.year_cal + 1) + coalesce( a.month_cal_id, b.month_cal_id) <= 100 * &yr. + &MN.  ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Demand_Strategy_Data_Pullv4.sas
 CREATE TABLE mrdwdata3 AS ( SELECT  *  FROM mrdwdata2 UNION ALL SELECT  *  FROM allotb);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Demand_Strategy_Data_Pullv4.sas
" CREATE TABLE mrdwdata4 AS select a.marsha, a.yr, a.MN, a.mcpref, a.wdwe, a.rn, a.rn_ly , CASE WHEN b.curr='USD' AND b.brnd NOT IN ( 'RZ','BG','EB') THEN a.rv_usd ELSE a.rv END AS rv , CASE WHEN b.curr='USD' AND b.brnd NOT IN ( 'RZ','BG','EB') THEN a.rv_usd_ly ELSE a.rv_ly END AS rv_ly , CASE WHEN ( b.curr='USD' OR a.rv_usd=a.rv) AND b.brnd NOT IN ( 'RZ','BG','EB') THEN a.rv_usd ELSE a.rv/c.fx END AS rv_usd , CASE WHEN ( b.curr='USD' OR a.rv_usd_ly=a.rv_ly) AND b.brnd NOT IN ( 'RZ','BG','EB') THEN a.rv_usd_ly ELSE a.rv_ly/c.fx END AS rv_usd_ly FROM mrdwdata3 AS a INNER JOIN prop_misw AS b ON a.marsha=b.marsha LEFT JOIN fx.fxrates AS c ON b.curr=c.code AND a.mn=c.mn ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Demand_Strategy_Data_Pullv4.sas
" CREATE TABLE mrdw_dem_currency AS select coalesce( a.marsha , b.marsha) AS marsha ,coalesce( a.mn, b.mn) AS MN ,CASE WHEN SUBSTRING( coalesce( a.mcpref , b.mcpref),1,1)='6' THEN '62' when b.mcpref = 'CMP' THEN '62' when SUBSTRING( coalesce( a.mcpref , b.mcpref),1,1)='5' THEN 'CN' when b.mcpref = 'CTC' THEN 'CN' when b.mcpref = 'GRP' THEN 'GR' when b.mcpref = 'PRG' THEN '10' when b.mcpref= 'BEN' THEN '12' when b.mcpref = 'ECH' THEN '30' when b.mcpref = 'SPC' THEN '17' when b.mcpref = 'WHS' THEN '26' when b.mcpref = 'GOV' THEN '16' when b.mcpref = 'WES' THEN '23' when b.mcpref = 'AAA' THEN '42' when b.mcpref = 'PKG' THEN '21' when b.mcpref = 'ADV' THEN '35' when b.mcpref = 'SRD' THEN '43' when b.mcpref = 'MAR' THEN '28' when b.mcpref = 'RWD' THEN '25' when b.mcpref = 'ODS' THEN 'OT' when b.mcpref='' THEN 'OT' when c.mcpref='' THEN 'OT' ELSE c.mcpref END AS mcpref ,CASE WHEN SUBSTRING( coalesce( a.mcpref , b.mcpref),1,1)='6' THEN '62 Complimentary' when b.mcpref = 'CMP' THEN '62 Complimentary' when SUBSTRING( coalesce( a.mcpref , b.mcpref),1,1)='5' THEN 'Contract' when b.mcpref = 'CTC' THEN 'Contract' when b.mcpref = 'GRP' THEN 'GR' when b.mcpref = 'PRG' THEN '10 Premium Retail' when b.mcpref= 'BEN' THEN '12 Standard Retail' when b.mcpref = 'ECH' THEN '30 Echannel Premium Retail' when b.mcpref = 'SPC' THEN '17 Special Corporate' when b.mcpref = 'WHS' THEN '26 Wholesale FIT/Bundled Travel' when b.mcpref = 'GOV' THEN '16 Government' when b.mcpref = 'WES' THEN '23 Weekend Hotel Breakfast Pkg Premium' when b.mcpref = 'AAA' THEN '42 Auto Assn of America ( AAA)' when b.mcpref = 'PKG' THEN '21 Hotel Value Add Package' when b.mcpref = 'ADV' THEN '35 Advance Purchase' when b.mcpref = 'SRD' THEN '43 Senior Discount' when b.mcpref = 'MAR' THEN '28 Associate Leisure' when b.mcpref = 'RWD' THEN '25 Rewards Redem & Upgrades' when b.mcpref = 'ODS' THEN 'Other Transient' when b.mcpref='' THEN 'Other Transient' when c.mcpref='' THEN 'Other Transient' ELSE c.market_segment END AS market_segment ,coalesce( a.wdwe , b.wdwe) AS wdwe ,coalesce( a.yr , b.yr) AS YR ,a.demand ,a.demand_ly ,b.rn ,b.rv ,b.rv_usd ,b.rn_ly ,b.rv_ly ,b.rv_usd_ly FROM demand2 a full JOIN mrdwdata4 b ON a.marsha = b.marsha AND a.yr = b.yr AND a.mn = b.mn AND a.mcpref = b.mcpref AND a.wdwe = b.wdwe full JOIN segment_names AS c ON coalesce( a.mcpref , b.mcpref)=c.mcpref;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Demand_Strategy_Data_Pullv4.sas
" CREATE TABLE mrdw_dem_ytd AS select a.marsha, a.mcpref, a.market_segment, a.wdwe, 'YTD' AS timeframe ,SUM( rn) AS rn ,SUM( rn_ly) AS rn_ly ,SUM( rv) AS rv ,SUM( rv_ly) AS rv_ly ,SUM( rv_usd) AS rv_usd ,SUM( rv_usd_ly) AS rv_usd_ly ,SUM( demand) AS demand ,SUM( demand_ly) AS demand_ly FROM mrdw_dem_currency a WHERE 100 * yr + mn le &yr. * 100 + &MN. AND yr = &yr. GROUP BY a.marsha, a.mcpref, a.market_segment, a.wdwe;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Demand_Strategy_Data_Pullv4.sas
" CREATE TABLE mrdw_dem_mn AS select a.marsha, a.mcpref, a.market_segment, a.wdwe, 'MN' AS timeframe ,SUM( rn) AS rn ,SUM( rn_ly) AS rn_ly ,SUM( rv) AS rv ,SUM( rv_ly) AS rv_ly ,SUM( rv_usd) AS rv_usd ,SUM( rv_usd_ly) AS rv_usd_ly ,SUM( demand) AS demand ,SUM( demand_ly) AS demand_ly FROM mrdw_dem_currency a WHERE yr = &yr. AND mn = &MN. GROUP BY a.marsha, a.mcpref, a.market_segment, a.wdwe;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Demand_Strategy_Data_Pullv4.sas
" CREATE TABLE mrdw_dem_L3 AS select a.marsha, a.mcpref, a.market_segment, a.wdwe, 'L3' AS timeframe ,SUM( rn) AS rn ,SUM( rn_ly) AS rn_ly ,SUM( rv) AS rv ,SUM( rv_ly) AS rv_ly ,SUM( rv_usd) AS rv_usd ,SUM( rv_usd_ly) AS rv_usd_ly ,SUM( demand) AS demand ,SUM( demand_ly) AS demand_ly FROM mrdw_dem_currency a WHERE ( 100 * yr + mn IN ( &PriorMN., &PriorMN2. )) OR ( 100 * yr + mn = 100 * &yr. + &MN. ) GROUP BY a.marsha, a.mcpref, a.market_segment, a.wdwe;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Demand_Strategy_Data_Pullv4.sas
" CREATE TABLE mrdw_dem_L12 AS select a.marsha, a.mcpref, a.market_segment, a.wdwe, 'L12' AS timeframe ,SUM( rn) AS rn ,SUM( rn_ly) AS rn_ly ,SUM( rv) AS rv ,SUM( rv_ly) AS rv_ly ,SUM( rv_usd) AS rv_usd ,SUM( rv_usd_ly) AS rv_usd_ly ,SUM( demand) AS demand ,SUM( demand_ly) AS demand_ly FROM mrdw_dem_currency a WHERE 100 * yr + mn ge 100 * ( &yr.-1) + &MN. + 1 AND 100 * yr + mn le 100 * &yr. + &MN. GROUP BY a.marsha, a.mcpref, a.market_segment, a.wdwe;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Demand_Strategy_Data_Pullv4.sas
" CREATE TABLE mrdw_dem_F1 AS select a.marsha, a.mcpref, a.market_segment, a.wdwe, 'F1' AS timeframe ,SUM( rn) AS rn ,SUM( rn_ly) AS rn_ly ,SUM( rv) AS rv ,SUM( rv_ly) AS rv_ly ,SUM( rv_usd) AS rv_usd ,SUM( rv_usd_ly) AS rv_usd_ly ,SUM( demand) AS demand ,SUM( demand_ly) AS demand_ly FROM mrdw_dem_currency a WHERE 100 * yr + mn IN ( &FutureMN2. ) GROUP BY a.marsha, a.mcpref, a.market_segment, a.wdwe;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Demand_Strategy_Data_Pullv4.sas
" CREATE TABLE mrdw_dem_F3 AS select a.marsha, a.mcpref, a.market_segment, a.wdwe, 'F3' AS timeframe ,SUM( rn) AS rn ,SUM( rn_ly) AS rn_ly ,SUM( rv) AS rv ,SUM( rv_ly) AS rv_ly ,SUM( rv_usd) AS rv_usd ,SUM( rv_usd_ly) AS rv_usd_ly ,SUM( demand) AS demand ,SUM( demand_ly) AS demand_ly FROM mrdw_dem_currency a WHERE 100 * yr + mn IN ( &FutureMN2., &FutureMN3., &FutureMN4. ) GROUP BY a.marsha, a.mcpref, a.market_segment, a.wdwe;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Demand_Strategy_Data_Pullv4.sas
" CREATE TABLE mrdw_dem_OTB1 AS select a.marsha, a.mcpref, a.market_segment, a.wdwe, 'O1' AS timeframe ,SUM( rn) AS rn ,SUM( rn_ly) AS rn_ly ,SUM( rv) AS rv ,SUM( rv_ly) AS rv_ly ,SUM( rv_usd) AS rv_usd ,SUM( rv_usd_ly) AS rv_usd_ly ,SUM( demand) AS demand ,SUM( demand_ly) AS demand_ly FROM mrdw_dem_currency a WHERE 100 * yr + mn IN ( &FutureMN2. ) GROUP BY a.marsha, a.mcpref, a.market_segment, a.wdwe;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Demand_Strategy_Data_Pullv4.sas
" CREATE TABLE mrdw_dem_OTB2 AS select a.marsha, a.mcpref, a.market_segment, a.wdwe, 'O2' AS timeframe ,SUM( rn) AS rn ,SUM( rn_ly) AS rn_ly ,SUM( rv) AS rv ,SUM( rv_ly) AS rv_ly ,SUM( rv_usd) AS rv_usd ,SUM( rv_usd_ly) AS rv_usd_ly ,SUM( demand) AS demand ,SUM( demand_ly) AS demand_ly FROM mrdw_dem_currency a WHERE 100 * yr + mn IN ( &FutureMN3. ) GROUP BY a.marsha, a.mcpref, a.market_segment, a.wdwe;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Demand_Strategy_Data_Pullv4.sas
" CREATE TABLE mrdw_dem_OTB3 AS select a.marsha, a.mcpref, a.market_segment, a.wdwe, 'O3' AS timeframe ,SUM( rn) AS rn ,SUM( rn_ly) AS rn_ly ,SUM( rv) AS rv ,SUM( rv_ly) AS rv_ly ,SUM( rv_usd) AS rv_usd ,SUM( rv_usd_ly) AS rv_usd_ly ,SUM( demand) AS demand ,SUM( demand_ly) AS demand_ly FROM mrdw_dem_currency a WHERE 100 * yr + mn IN ( &FutureMN4. ) GROUP BY a.marsha, a.mcpref, a.market_segment, a.wdwe;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Demand_Strategy_Data_Pullv4.sas
 CREATE TABLE final_combined1 AS ( SELECT  *  FROM mrdw_dem_ytd UNION ALL SELECT  *  FROM mrdw_dem_mn UNION ALL SELECT  *  FROM mrdw_dem_L3 UNION ALL SELECT  *  FROM mrdw_dem_L12 UNION ALL SELECT  *  FROM mrdw_dem_F1 UNION ALL SELECT  *  FROM mrdw_dem_F3 UNION ALL SELECT  *  FROM mrdw_dem_OTB1 UNION ALL SELECT  *  FROM mrdw_dem_OTB2 UNION ALL SELECT  *  FROM mrdw_dem_OTB3);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Demand_Strategy_Data_Pullv4.sas
 CREATE TABLE marsha AS select distinct marsha FROM final_combined1;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Demand_Strategy_Data_Pullv4.sas
" CREATE TABLE mcpref AS select distinct mcpref, market_segment FROM final_combined1;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Demand_Strategy_Data_Pullv4.sas
" CREATE TABLE wdwe AS select distinct wdwe, timeframe FROM final_combined1;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Demand_Strategy_Data_Pullv4.sas
" CREATE TABLE spacing2 AS select a.marsha, b.mcpref, b.market_segment, c.wdwe, c.timeframe FROM marsha AS a, mcpref AS b, wdwe AS c;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Demand_Strategy_Data_Pullv4.sas
" CREATE TABLE final_combined2 AS select a.*, b.rn, b.rv, b.rn_ly, b.rv_ly, b.rv_usd, b.rv_usd_ly, b.demand, b.demand_ly FROM spacing2 AS a LEFT JOIN final_combined1 AS b ON a.marsha=b.marsha AND a.wdwe=b.wdwe AND a.mcpref=b.mcpref AND a.timeframe=b.timeframe;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Demand_Strategy_Data_Pullv4.sas
" CREATE TABLE days AS select a.* , CASE WHEN a.timeframe IN ( 'YTD') AND a.wdwe IN ( 'WD') THEN ( DATEDIFF(  'week.1', &d3., &d1. )+DATEDIFF(  'week.2', &d3., &d1. )+DATEDIFF(  'week.3', &d3., &d1. )+DATEDIFF(  'week.4', &d3., &d1. )+DATEDIFF(  'week.5', &d3., &d1. )) when a.timeframe IN ( 'YTD') AND a.wdwe IN ( 'WE') THEN ( DATEDIFF( 'week.6', &d3., &d1. )+DATEDIFF(  'week.7', &d3., &d1. )) when a.timeframe IN ( 'MN') AND a.wdwe IN ( 'WD') THEN ( DATEDIFF(  'week.1', &d0., &d1. )+DATEDIFF(  'week.2', &d0., &d1. )+DATEDIFF(  'week.3', &d0., &d1. )+DATEDIFF(  'week.4', &d0., &d1. )+DATEDIFF(  'week.5', &d0., &d1. )) when a.timeframe IN ( 'MN') AND a.wdwe IN ( 'WE') THEN ( DATEDIFF( 'week.6', &d0., &d1. )+DATEDIFF(  'week.7', &d0., &d1. )) when a.timeframe IN ( 'L3') AND a.wdwe IN ( 'WD') THEN ( DATEDIFF(  'week.1', &d2., &d1. )+DATEDIFF(  'week.2', &d2., &d1. )+DATEDIFF(  'week.3', &d2., &d1. )+DATEDIFF(  'week.4', &d2., &d1. )+DATEDIFF(  'week.5', &d2., &d1. )) when a.timeframe IN ( 'L3') AND a.wdwe IN ( 'WE') THEN ( DATEDIFF( 'week.6', &d2., &d1. )+DATEDIFF(  'week.7', &d2., &d1. )) when a.timeframe IN ( 'L12') AND a.wdwe IN ( 'WD') THEN ( DATEDIFF(  'week.1', &d12., &d1. )+DATEDIFF(  'week.2', &d12., &d1. )+DATEDIFF(  'week.3', &d12., &d1. )+DATEDIFF(  'week.4', &d12., &d1. )+DATEDIFF(  'week.5', &d12., &d1. )) when a.timeframe IN ( 'L12') AND a.wdwe IN ( 'WE') THEN ( DATEDIFF( 'week.6', &d12., &d1. )+DATEDIFF(  'week.7', &d12., &d1. )) when a.timeframe IN ( 'F1') AND a.wdwe IN ( 'WD') THEN ( DATEDIFF(  'week.1', &d1., &f1. )+DATEDIFF(  'week.2', &d1., &f1. )+DATEDIFF(  'week.3', &d1., &f1. )+DATEDIFF(  'week.4', &d1., &f1. )+DATEDIFF(  'week.5', &d1., &f1. )) when a.timeframe IN ( 'F1') AND a.wdwe IN ( 'WE') THEN ( DATEDIFF( 'week.6', &d1., &f1. )+DATEDIFF(  'week.7', &d1., &f1. )) when a.timeframe IN ( 'F3') AND a.wdwe IN ( 'WD') THEN ( DATEDIFF(  'week.1', &d1., &f3. )+DATEDIFF(  'week.2', &d1., &f3. )+DATEDIFF(  'week.3', &d1., &f3. )+DATEDIFF(  'week.4', &d1., &f3. )+DATEDIFF(  'week.5', &d1., &f3. )) when a.timeframe IN ( 'F3') AND a.wdwe IN ( 'WE') THEN ( DATEDIFF( 'week.6', &d1., &f3. )+DATEDIFF(  'week.7', &d1., &f3. )) when a.timeframe IN ( 'O1') AND a.wdwe IN ( 'WD') THEN ( DATEDIFF(  'week.1', &d1., &f1. )+DATEDIFF(  'week.2', &d1., &f1. )+DATEDIFF(  'week.3', &d1., &f1. )+DATEDIFF(  'week.4', &d1., &f1. )+DATEDIFF(  'week.5', &d1., &f1. )) when a.timeframe IN ( 'O1') AND a.wdwe IN ( 'WE') THEN ( DATEDIFF( 'week.6', &d1., &f1. )+DATEDIFF(  'week.7', &d1., &f1. )) when a.timeframe IN ( 'O2') AND a.wdwe IN ( 'WD') THEN ( DATEDIFF(  'week.1', &f1., &f2. )+DATEDIFF(  'week.2', &f1., &f2. )+DATEDIFF(  'week.3', &f1., &f2. )+DATEDIFF(  'week.4', &f1., &f2. )+DATEDIFF(  'week.5', &f1., &f2. )) when a.timeframe IN ( 'O2') AND a.wdwe IN ( 'WE') THEN ( DATEDIFF( 'week.6', &f1., &f2. )+DATEDIFF(  'week.7', &f1., &f2. )) when a.timeframe IN ( 'O3') AND a.wdwe IN ( 'WD') THEN ( DATEDIFF(  'week.1', &f2., &f3. )+DATEDIFF(  'week.2', &f2., &f3. )+DATEDIFF(  'week.3', &f2., &f3. )+DATEDIFF(  'week.4', &f2., &f3. )+DATEDIFF(  'week.5', &f2., &f3. )) when a.timeframe IN ( 'O3') AND a.wdwe IN ( 'WE') THEN ( DATEDIFF( 'week.6', &f2., &f3. )+DATEDIFF(  'week.7', &f2., &f3. )) END AS no_days , CASE WHEN a.timeframe IN ( 'YTD') AND a.wdwe IN ( 'WD') THEN ( DATEDIFF(  'week.1', &d3_ly., &d1_ly. )+DATEDIFF(  'week.2', &d3_ly., &d1_ly. )+DATEDIFF(  'week.3', &d3_ly., &d1_ly. )+DATEDIFF(  'week.4', &d3_ly., &d1_ly. )+DATEDIFF(  'week.5', &d3_ly., &d1_ly. )) when a.timeframe IN ( 'YTD') AND a.wdwe IN ( 'WE') THEN ( DATEDIFF( 'week.6', &d3_ly., &d1_ly. )+DATEDIFF(  'week.7', &d3_ly., &d1_ly. )) when a.timeframe IN ( 'MN') AND a.wdwe IN ( 'WD') THEN ( DATEDIFF(  'week.1', &d0_ly., &d1_ly. )+DATEDIFF(  'week.2', &d0_ly., &d1_ly. )+DATEDIFF(  'week.3', &d0_ly., &d1_ly. )+DATEDIFF(  'week.4', &d0_ly., &d1_ly. )+DATEDIFF(  'week.5', &d0_ly., &d1_ly. )) when a.timeframe IN ( 'MN') AND a.wdwe IN ( 'WE') THEN ( DATEDIFF( 'week.6', &d0_ly., &d1_ly. )+DATEDIFF(  'week.7', &d0_ly., &d1_ly. )) when a.timeframe IN ( 'L3') AND a.wdwe IN ( 'WD') THEN ( DATEDIFF(  'week.1', &d2_ly., &d1_ly. )+DATEDIFF(  'week.2', &d2_ly., &d1_ly. )+DATEDIFF(  'week.3', &d2_ly., &d1_ly. )+DATEDIFF(  'week.4', &d2_ly., &d1_ly. )+DATEDIFF(  'week.5', &d2_ly., &d1_ly. )) when a.timeframe IN ( 'L3') AND a.wdwe IN ( 'WE') THEN ( DATEDIFF( 'week.6', &d2_ly., &d1_ly. )+DATEDIFF(  'week.7', &d2_ly., &d1_ly. )) when a.timeframe IN ( 'L12') AND a.wdwe IN ( 'WD') THEN ( DATEDIFF(  'week.1', &d12_ly., &d1_ly. )+DATEDIFF(  'week.2', &d12_ly., &d1_ly. )+DATEDIFF(  'week.3', &d12_ly., &d1_ly. )+DATEDIFF(  'week.4', &d12_ly., &d1_ly. )+DATEDIFF(  'week.5', &d12_ly., &d1_ly. )) when a.timeframe IN ( 'L12') AND a.wdwe IN ( 'WE') THEN ( DATEDIFF( 'week.6', &d12_ly., &d1_ly. )+DATEDIFF(  'week.7', &d12_ly., &d1_ly. )) when a.timeframe IN ( 'F1') AND a.wdwe IN ( 'WD') THEN ( DATEDIFF(  'week.1', &d1_ly., &f1_ly. )+DATEDIFF(  'week.2', &d1_ly., &f1_ly. )+DATEDIFF(  'week.3', &d1_ly., &f1_ly. )+DATEDIFF(  'week.4', &d1_ly., &f1_ly. )+DATEDIFF(  'week.5', &d1_ly., &f1_ly. )) when a.timeframe IN ( 'F1') AND a.wdwe IN ( 'WE') THEN ( DATEDIFF( 'week.6', &d1_ly., &f1_ly. )+DATEDIFF(  'week.7', &d1_ly., &f1_ly. )) when a.timeframe IN ( 'F3') AND a.wdwe IN ( 'WD') THEN ( DATEDIFF(  'week.1', &d1_ly., &f3_ly. )+DATEDIFF(  'week.2', &d1_ly., &f3_ly. )+DATEDIFF(  'week.3', &d1_ly., &f3_ly. )+DATEDIFF(  'week.4', &d1_ly., &f3_ly. )+DATEDIFF(  'week.5', &d1_ly., &f3_ly. )) when a.timeframe IN ( 'F3') AND a.wdwe IN ( 'WE') THEN ( DATEDIFF( 'week.6', &d1_ly., &f3_ly. )+DATEDIFF(  'week.7', &d1_ly., &f3_ly. )) when a.timeframe IN ( 'O1') AND a.wdwe IN ( 'WD') THEN ( DATEDIFF(  'week.1', &d1_ly., &f1_ly. )+DATEDIFF(  'week.2', &d1_ly., &f1_ly. )+DATEDIFF(  'week.3', &d1_ly., &f1_ly. )+DATEDIFF(  'week.4', &d1_ly., &f1_ly. )+DATEDIFF(  'week.5', &d1_ly., &f1_ly. )) when a.timeframe IN ( 'O1') AND a.wdwe IN ( 'WE') THEN ( DATEDIFF( 'week.6', &d1_ly., &f1_ly. )+DATEDIFF(  'week.7', &d1_ly., &f1_ly. )) when a.timeframe IN ( 'O2') AND a.wdwe IN ( 'WD') THEN ( DATEDIFF(  'week.1', &f1_ly., &f2_ly. )+DATEDIFF(  'week.2', &f1_ly., &f2_ly. )+DATEDIFF(  'week.3', &f1_ly., &f2_ly. )+DATEDIFF(  'week.4', &f1_ly., &f2_ly. )+DATEDIFF(  'week.5', &f1_ly., &f2_ly. )) when a.timeframe IN ( 'O2') AND a.wdwe IN ( 'WE') THEN ( DATEDIFF( 'week.6', &f1_ly., &f2_ly. )+DATEDIFF(  'week.7', &f1_ly., &f2_ly. )) when a.timeframe IN ( 'O3') AND a.wdwe IN ( 'WD') THEN ( DATEDIFF(  'week.1', &f2_ly., &f3_ly. )+DATEDIFF(  'week.2', &f2_ly., &f3_ly. )+DATEDIFF(  'week.3', &f2_ly., &f3_ly. )+DATEDIFF(  'week.4', &f2_ly., &f3_ly. )+DATEDIFF(  'week.5', &f2_ly., &f3_ly. )) when a.timeframe IN ( 'O3') AND a.wdwe IN ( 'WE') THEN ( DATEDIFF( 'week.6', &f2_ly., &f3_ly. )+DATEDIFF(  'week.7', &f2_ly., &f3_ly. )) END AS no_days_ly FROM final_combined2 a;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Demand_Strategy_Data_Pullv4.sas
" CREATE TABLE demand_mrdw_combined2 AS select a.marsha, a.mcpref, a.market_segment, a.wdwe, a.timeframe, a.no_days, a.rn, a.rv, a.rn_ly, a.rv_ly, a.rv_usd, a.rv_usd_ly , a.demand, a.demand_ly, a.no_days_ly , b.brnd , CASE WHEN b.brnd IN ( 'FS','BR','GE','DE') THEN 'FS' when b.brnd IN ( 'CY','FI','SH','AR','OX') THEN 'SS' when b.brnd IN ( 'RI','TS') THEN 'ES' ELSE b.brnd END AS agg_brnd , b.mf, b.acomp, b.market_name, b.country, b.division, b.region, b.interface , b.domint, b.rd, b.HCLASS2, b.hcap*no_days AS hcap, &yr. * 100 + &MN. AS CurYRMN, b.GRMRS_RevMgr, b.GRMRS_TmLdr , b.hcap*no_days_ly AS hcap_ly , b.owner, b.state, b.manager, b.ADRM, b.Market_Leader, b.Revenue_Analyst, b.SFO_Market, b.SFO_Area, b.Host_Comp AS HostComp , b.AVP, b.rd AS AD, b.sotb, b.misw_flag FROM days AS a INNER JOIN prop_misw AS b ON a.marsha = b.marsha WHERE b.marsha not IN ( 'LONRT' 'MADRT' 'WHRLH') AND b.openflag = 'Y' ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Demand_Strategy_Data_Pullv4.sas
" CREATE TABLE demand_mrdw_combined3 AS ( SELECT  *  , FORMAT(segment, VARCHAR(25)) AS segment , FORMAT(majorseg, VARCHAR(25)) AS majorseg , RTRIM( segment)||'-'||RTRIM( market_segment ) AS seg_label , CASE WHEN  mcpref IN ( '10' '12' '30' '34' '37' '20' '23' '24' '21', '22') AND wdwe='WD'  THEN '1 NQ-WD' WHEN   mcpref IN ( '10' '12' '30' '37' '34' '20' '23' '24' '21', '22') AND wdwe='WE'  THEN '2 NQ-WE' WHEN   mcpref IN ( '15' '17' '18')  THEN '3 SpCorp' WHEN   mcpref='16'  THEN '4 Govt' WHEN   mcpref IN ( '36' '39')  THEN '5 Echan Opaque/Package' WHEN   mcpref='GR'  THEN '7 Group' WHEN   mcpref='CN'  THEN '8 Contract' WHEN   SUBSTRING( mcpref,1,1) = '5'  THEN '8 Contract' WHEN   mcpref='62'  THEN '9 Comp' ELSE '6 Other Tran' END AS segment, CASE WHEN  interface<>2  THEN 'N' END AS acomp, CASE WHEN  mcpref='GR'  THEN 'Group' WHEN   SUBSTRING( mcpref,1,1) = '5'  THEN 'Contract' WHEN   mcpref='CN'  THEN 'Contract' WHEN   mcpref='62'  THEN 'Comp' ELSE 'Transient' END AS majorseg FROM demand_mrdw_combined2 );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Demand_Strategy_Data_Pullv4.sas
 CREATE TABLE DemSOB.DemStrat AS ( SELECT  *  FROM demand_mrdw_combined3 );,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Demand_Strategy_Data_Pullv4.sas
"CREATE TABLE ""DemStrat"" AS ( SELECT *  FROM DemSOB.DemStrat WHERE  division IN  'AM' AND timeframe not IN  'O1', 'O2', 'O3', 'L12') ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Demand_Strategy_Data_Pullv4.sas
" CREATE TABLE Trans_rooms AS SELECT a.PROPERTY_CD , a.MARKET_CATEGORY_NM , a.confo_create_dt , COUNT( distinct( catt( DATEPART( CONFO_CREATE_DT),CONFO_NUM_ORIG_ID))) AS res_count , SUM( a.ROOMS_QTY) AS rn , SUM( a.room_rev_cusd_sub_amt) AS rev FROM awprod.Mrdw_bi_fact_gross_nos AS A WHERE a.confo_create_dt >= '20MAR2018'D AND a.confo_create_dt <= '31OCT2019'D AND a.MARKET_CATEGORY_NM = 'TRANSIENT/RENTALS' AND stay_year IN ( 2018 2019) AND ( CHANNEL_AGGREGATE_CD ='Marriott.com' OR Rate_PGM_CD='XDRZ') GROUP BY a.PROPERTY_CD , a.MARKET_CATEGORY_NM , a.confo_create_dt;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ERS_Datapullv2.sas
" CREATE TABLE adhoc.trans_rooms2 AS select a.marsha , b.market_category_nm , b.confo_create_dt AS Date , b.res_count , b.rn , b.rev FROM ers_plu AS a LEFT JOIN trans_rooms AS b ON a.marsha = b.property_cd;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ERS_Datapullv2.sas
" CREATE TABLE ERS_Data AS select property_cd AS marsha , TRIMCONCAT( CREATE_YEAR,CREATE_MONTH) AS yearmn , CREATE_MONTH AS mn , DATEPART( CREATE_DT) AS date FORMAT DATE9. , REV , NIGHTS AS RN , ACCESSIBLE_RV , BATHROOM_RV , BED_TYPE_RV , BUILDING_RV , CONNECTING_ROOMS_RV , FLOOR_RV , HOSPITALITY_SERVICES_RV , LOUNGE_RV , OUTDOOR_SPACE_RV , PROXIMITY_RV , ROOM_FEATURE_RV , SMOKING_RV , VIEW_RV FROM AWPROD.ERS_XDRZ_ORG_PIX_SUMMARY WHERE PROPERTY_CD NOT IN ( 'AQAFP','RESPC') AND CREATE_DT >= '20MAR2018'D ORDER BY PROPERTY_CD , CALCULATED DATE;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ERS_Datapullv2.sas
" CREATE TABLE ERS_Data2 AS select a.* , b.owner , b.misw_flag , rev/c.fx AS rev_usd , ACCESSIBLE_RV/c.fx AS ACCESSIBLE , BATHROOM_RV/c.fx AS BATHROOM , BED_TYPE_RV/c.fx AS BED_TYPE , BUILDING_RV/c.fx AS BUILDING , CONNECTING_ROOMS_RV/c.fx AS CONNECTING_ROOMS , FLOOR_RV/c.fx AS FLOOR , HOSPITALITY_SERVICES_RV/c.fx AS HOSPITALITY_SERVICES , LOUNGE_RV/c.fx AS LOUNGE , OUTDOOR_SPACE_RV/c.fx AS OUTDOOR_SPACE , PROXIMITY_RV/c.fx AS PROXIMITY , ROOM_FEATURE_RV/c.fx AS ROOM_FEATURE , SMOKING_RV/c.fx AS SMOKING , VIEW_RV/c.fx AS VIEW FROM ERS_Data AS a LEFT JOIN awprod.property_master AS b ON a.marsha = b.marsha LEFT JOIN fx.fxrates AS c ON b.base_curr = c.code AND CAST( a.mn AS INT ) = c.mn ORDER BY MARSHA , a.DATE;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ERS_Datapullv2.sas
" CREATE TABLE ERS_Data3 AS select a.marsha , a.date , a.yearmn , a.mn , a.owner , a.misw_flag , a.rev_usd , a.ACCESSIBLE , a.BATHROOM , a.BED_TYPE , a.BUILDING , a.CONNECTING_ROOMS , a.FLOOR , a.HOSPITALITY_SERVICES , a.LOUNGE , a.OUTDOOR_SPACE , a.PROXIMITY , a.ROOM_FEATURE , a.SMOKING , a.VIEW , CASE WHEN b.accessible = 'Incremental' THEN a.ACCESSIBLE ELSE 0 END AS ACCESSIBLE_INC , CASE WHEN b.bathroom = 'Incremental' THEN a.BATHROOM ELSE 0 END AS BATHROOM_INC , CASE WHEN b.bed_type = 'Incremental' THEN a.BED_TYPE ELSE 0 END AS BED_TYPE_INC , CASE WHEN b.building = 'Incremental' THEN a.BUILDING ELSE 0 END AS BUILDING_INC , CASE WHEN b.CONNECTING_ROOMS = 'Incremental' THEN a.CONNECTING_ROOMS ELSE 0 END AS CONNECTING_ROOMS_INC , CASE WHEN a.misw_flag = 'SW' THEN 0 ELSE a.HOSPITALITY_SERVICES END AS HOSPITALITY_SERVICES_INC , CASE WHEN b.FLOOR = 'Incremental' THEN a.FLOOR ELSE 0 END AS FLOOR_INC , CASE WHEN b.LOUNGE = 'Incremental' THEN a.LOUNGE ELSE 0 END AS LOUNGE_INC , CASE WHEN b.OUTDOOR_SPACE = 'Incremental' THEN a.OUTDOOR_SPACE ELSE 0 END AS OUTDOOR_SPACE_INC , CASE WHEN b.PROXIMITY = 'Incremental' THEN a.PROXIMITY ELSE 0 END AS PROXIMITY_INC , CASE WHEN b.ROOM_FEATURE = 'Incremental' THEN a.ROOM_FEATURE ELSE 0 END AS ROOM_FEATURE_INC , CASE WHEN b.SMOKING = 'Incremental' THEN a.SMOKING ELSE 0 END AS SMOKING_INC , CASE WHEN b.VIEW = 'Incremental' THEN a.VIEW ELSE 0 END AS VIEW_INC FROM ERS_Data2 AS a LEFT JOIN ERS_PLU AS b ON a.marsha = b.marsha ORDER BY MARSHA , a.DATE;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ERS_Datapullv2.sas
" CREATE TABLE ERS_Datacomb AS select a.marsha , a.date , a.yearmn , a.owner , a.misw_flag , b.res_count , b.rn AS trans_rn , b.rev AS trans_rev , a.rev_usd , ACCESSIBLE , BATHROOM , BED_TYPE , BUILDING , CONNECTING_ROOMS , FLOOR , HOSPITALITY_SERVICES , LOUNGE , OUTDOOR_SPACE , PROXIMITY , ROOM_FEATURE , SMOKING , VIEW , ACCESSIBLE_INC , BATHROOM_INC , BED_TYPE_INC , BUILDING_INC , CONNECTING_ROOMS_INC , FLOOR_INC , HOSPITALITY_SERVICES_INC , LOUNGE_INC , OUTDOOR_SPACE_INC , PROXIMITY_INC , ROOM_FEATURE_INC , SMOKING_INC , VIEW_INC FROM ers_data3 AS a LEFT JOIN adhoc.trans_rooms2 AS b ON a.marsha = b.marsha AND a.date = b.date;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ERS_Datapullv2.sas
" CREATE TABLE ERS_Data_YOY AS select coalesce( a.marsha, b.marsha) AS marsha , coalesce( a.date, b.date + 364) AS date format date9. , b.date + 364 format date9. AS dately , a.yearmn , a.owner , a.misw_flag , a.res_count , a.rev_usd , b.rev_usd AS rev_usd_ly , a.ACCESSIBLE , a.BATHROOM , a.BED_TYPE , a.BUILDING , a.CONNECTING_ROOMS , a.FLOOR , a.HOSPITALITY_SERVICES , a.LOUNGE , a.OUTDOOR_SPACE , a.PROXIMITY , a.ROOM_FEATURE , a.SMOKING , a.VIEW , a.ACCESSIBLE_INC , a.BATHROOM_INC , a.BED_TYPE_INC , a.BUILDING_INC , a.CONNECTING_ROOMS_INC , a.FLOOR_INC , a.HOSPITALITY_SERVICES_INC , a.LOUNGE_INC , a.OUTDOOR_SPACE_INC , a.PROXIMITY_INC , a.ROOM_FEATURE_INC , a.SMOKING_INC , a.VIEW_INC , b.ACCESSIBLE AS ACCESSIBLE_LY , b.BATHROOM AS BATHROOM_LY , b.BED_TYPE AS BED_TYPE_LY , b.BUILDING AS BUILDING_ly , b.CONNECTING_ROOMS AS CONNECTING_ROOMS_LY , b.FLOOR AS FLOOR_LY , b.HOSPITALITY_SERVICES AS HOSPITALITY_SERVICES_LY , b.LOUNGE AS LOUNGE_LY , b.OUTDOOR_SPACE AS OUTDOOR_SPACE_LY , b.PROXIMITY AS PROXIMITY_LY , b.ROOM_FEATURE AS ROOM_FEATURE_LY , b.SMOKING AS SMOKING_LY , b.VIEW AS VIEW_LY , b.ACCESSIBLE_INC AS ACCESSIBLE_INC_LY , b.BATHROOM_INC AS BATHROOM_INC_LY , b.BED_TYPE_INC AS BED_TYPE_INC_LY , b.BUILDING_INC AS BUILDING_INC_LY , b.CONNECTING_ROOMS_INC AS CONNECTING_ROOMS_INC_LY , b.FLOOR_INC AS FLOOR_INC_LY , b.HOSPITALITY_SERVICES_INC AS HOSPITALITY_SERVICES_INC_LY , b.LOUNGE_INC AS LOUNGE_INC_LY , b.OUTDOOR_SPACE_INC AS OUTDOOR_SPACE_INC_LY , b.PROXIMITY_INC AS PROXIMITY_INC_LY , b.ROOM_FEATURE_INC AS ROOM_FEATURE_INC_LY , b.SMOKING_INC AS SMOKING_INC_LY , b.VIEW_INC AS VIEW_INC_LY FROM ERS_Datacomb AS a full JOIN ERS_Datacomb AS b ON a.marsha = b.marsha AND a.date = b.date +364 WHERE a.date >= '01MAR2019'D AND a.owner = 'Host Hotels & Resorts, Inc.';",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ERS_Datapullv2.sas
" CREATE TABLE ERS_Data_YOYv2 AS select coalesce( a.marsha, b.marsha) AS marsha , coalesce( a.date, b.date + 364) AS date format date9. , b.date + 364 format date9. AS dately , a.yearmn , a.owner , a.misw_flag , a.res_count , a.rev_usd , b.rev_usd AS rev_usd_ly FROM ERS_Datacomb AS a full JOIN ERS_Datacomb AS b ON a.marsha = b.marsha AND a.date = b.date +364 WHERE a.date >= '01MAR2019'D AND a.owner = 'Host Hotels & Resorts, Inc.';",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ERS_Datapullv2.sas
"CREATE TABLE ""G:\RM EAnlys\Mohamed\ERS\ERSData through August 2019.xlsx"" AS ( SELECT * FROM ERS_Datacomb) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ERS_Datapullv2.sas
"CREATE TABLE ""G:\RM EAnlys\Mohamed\ERS\ERSData through August 2019V2.xlsx"" AS ( SELECT * FROM ERS_Data_YOY) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ERS_Datapullv2.sas
" CREATE TABLE rnbylos AS  (  select a.property_cd, res_los_qty , CASE WHEN market_segment_cd IN ( '50', '51', '52', '53', '54', '55', '56', '57', '58', '59') THEN 'CT' when market_segment_cd = 'GR' THEN 'GR' ELSE 'TR' END AS major_seg , COUNT( a.property_cd) AS rn , SUM( trip_purpose_bus_model_prob_qty) AS bus_rn FROM mrdw_fact_rev7_analysis_extract a, mrdw_dim_date b WHERE (  ( a.arrival_dt <= b.date_dt AND a.departure_dt > b.date_dt) OR ( a.arrival_dt = b.date_dt AND a.departure_dt = b.date_dt) ) AND 100*b.year_cal+b.month_cal_id >= &l6_mo. AND 100*b.year_cal+b.month_cal_id <= &curr_mo. AND a.accom_status_cd='A' GROUP BY a.property_cd, res_los_qty, major_seg ORDER BY a.property_cd, res_los_qty, major_seg  )  ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-3_and_4_LOS_Mix.sas
" CREATE TABLE rnbylos2 AS select property_cd, res_los_qty, SUM( rn) AS rn FROM rnbylos GROUP BY property_cd, res_los_qty;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-3_and_4_LOS_Mix.sas
" CREATE TABLE totes AS select property_cd AS marsha, SUM( rn) AS rn_tot FROM rnbylos2 GROUP BY property_cd;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-3_and_4_LOS_Mix.sas
 CREATE TABLE es4 AS ( SELECT  *  FROM rnbylos2  WHERE res_los_qty=4);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-3_and_4_LOS_Mix.sas
 CREATE TABLE es5 AS ( SELECT  *  FROM rnbylos2  WHERE res_los_qty=5);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-3_and_4_LOS_Mix.sas
" CREATE TABLE esf.mixbylos AS select a.marsha, b.rn/a.rn_tot AS _4_night_stay_mix, c.rn/a.rn_tot AS _5_night_stay_mix FROM totes AS a LEFT JOIN es4 AS b ON a.marsha=b.property_cd LEFT JOIN es5 AS c ON a.marsha=c.property_cd;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-3_and_4_LOS_Mix.sas
 CREATE TABLE prop_master AS  (  SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER A  ) ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-Business_Mix.sas
" CREATE TABLE busleis AS  (  select a.property_cd , CASE WHEN b.date_dt <= &dt_2mo. THEN 'Next 2 Months' ELSE 'Other' END AS timeframe , SUM( a.rooms_qty) AS rn , SUM( trip_purpose_bus_model_prob_qty*A.rooms_qty) AS bus_rn FROM mrdw_fact_rev7_analysis_extract a, mrdw_dim_date b WHERE (  ( a.arrival_dt <= b.date_dt AND a.departure_dt > b.date_dt) OR ( a.arrival_dt = b.date_dt AND a.departure_dt = b.date_dt) ) AND b.date_dt >= &lydt. AND b.date_dt <= &currdt. AND a.accom_status_cd='A' AND res_los_qty <= 11 AND market_segment_cd not IN ( '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', 'GR', 'CN', 'CT') GROUP BY a.property_cd, timeframe ORDER BY a.property_cd, timeframe  )  ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-Business_Mix.sas
" CREATE TABLE marsha_bus_tot AS select property_cd AS marsha, SUM( bus_rn) AS bus_rn, SUM( rn) AS rn FROM busleis GROUP BY property_cd;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-Business_Mix.sas
" CREATE TABLE marsha_bus_n2m AS select property_cd AS marsha, SUM( bus_rn) AS bus_rn_n2m, SUM( rn) AS rn_n2m FROM busleis WHERE timeframe='Next 2 Months' GROUP BY property_cd;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-Business_Mix.sas
" CREATE TABLE esf.businessmix AS select p.marsha AS marsha , m.bus_rn/m.rn AS business_mix , n2m.bus_rn_n2m/n2m.rn_n2m AS business_mix_next2mo FROM prop_master AS p LEFT JOIN marsha_bus_tot AS m ON p.marsha=m.marsha LEFT JOIN marsha_bus_n2m AS n2m ON p.marsha=n2m.marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-Business_Mix.sas
 CREATE TABLE prop_master AS  (  SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER A  ) ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-Combine_Data.sas
" CREATE TABLE perdiem_by_zip AS select SUBSTRING( zip,1,5) AS zip, max( PD&YR.&Mon. ) AS PD&YR.&Mon. FROM perdiem_by_zip_orig GROUP BY calculated zip;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-Combine_Data.sas
" CREATE TABLE ecomm1_2 AS ( SELECT  *  , ' ' AS ota_prtcpt_num  FROM ecomm1  WHERE marsha<>'');",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-Combine_Data.sas
" CREATE TABLE ecomm2_2 AS ( SELECT  *  , ' ' AS ota_prtcpt_num  FROM ecomm2 );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-Combine_Data.sas
" CREATE TABLE strrank AS  (  SELECT MARSHA, RANK_REVPAR_NUM, RANK_REVPAR_DEN FROM AW_TGT_BUS_DBO.STR_60MONTH WHERE yrmnth=&STRMo AND TIMEF='MONTH' AND asof_yrmo=&STRMo  ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-Combine_Data.sas
" CREATE TABLE strrank3 AS ( SELECT  *  , compress( CAST( RANK_REVPAR_NUM,best12. ))||"" of ""||compress( CAST( RANK_REVPAR_DEN,best12. ) ) AS FW_STR_MNLY_RevPARRank_MN  FROM strrank );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-Combine_Data.sas
SELECT DISTINCT * FROM strrank3 ORDER BY marsha;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-Combine_Data.sas
" CREATE TABLE sellout_data AS select marsha , SUM( Actl_Sellouts) AS Actl_Sellouts , SUM( Psbl_Sellouts) AS Psbl_Sellouts , calculated Actl_Sellouts/ calculated Psbl_Sellouts AS sellout_efficiency FROM taneka.sellout_data WHERE L3<>'( no filter)' GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-Combine_Data.sas
" CREATE TABLE esf.esf_combined AS select a.MARSHA, a.Hotel_Name , a.rd AS Area_Director, a.avp AS AVP, a.manager AS Management_Company , a.owner , a.MF, a.hcap AS HOTEL_CAPACITY , a.Function_Space, a.opendate , e.FW_RevPARIndex_Chg_L3 , e.FW_STR_OccIndex_Chg_L3 , e.FW_STR_OccIndex_Chg_MN , e.FW_STR_OccIndex_L3 , e.FW_STR_OccIndex_MN , e.FW_STR_RevPARIndex_L3 , e.FW_STR_RevPARIndex_YTD , e.FW_STR_MNLY_RevPARIndexChg_YTD , CASE WHEN WD_STR_ADRIndex_Chg_L3=. THEN e.FW_STR_ADRIndex_Chg_L3 ELSE WD_STR_ADRIndex_Chg_L3 END AS WD_STR_ADRIndex_Chg_L3 , CASE WHEN WD_STR_OccIndex_Chg_L3=. THEN e.FW_STR_OccIndex_Chg_L3 ELSE WD_STR_OccIndex_Chg_L3 END AS WD_STR_OccIndex_Chg_L3 , CASE WHEN WD_STR_OccIndex_Chg_MN=. THEN e.FW_STR_OccIndex_Chg_MN ELSE WD_STR_OccIndex_Chg_MN END AS WD_STR_OccIndex_Chg_MN , CASE WHEN WD_STR_OccIndex_L3=. THEN e.FW_STR_OccIndex_L3 ELSE WD_STR_OccIndex_L3 END AS WD_STR_OccIndex_L3 , CASE WHEN WD_STR_OccIndex_MN=. THEN e.FW_STR_OccIndex_MN ELSE WD_STR_OccIndex_MN END AS WD_STR_OccIndex_MN , CASE WHEN WE_STR_ADRIndex_chg_L3=. THEN e.FW_STR_ADRIndex_chg_L3 ELSE WE_STR_ADRIndex_chg_L3 END AS WE_STR_ADRIndex_chg_L3 , CASE WHEN WE_STR_ADRIndex_L3=. THEN e.FW_STR_ADRIndex_L3 ELSE WE_STR_ADRIndex_L3 END AS WE_STR_ADRIndex_L3 , CASE WHEN WE_STR_OccIndex_chg_L3=. THEN e.FW_STR_OccIndex_chg_L3 ELSE WE_STR_OccIndex_chg_L3 END AS WE_STR_OccIndex_chg_L3 , CASE WHEN WE_STR_OccIndex_Chg_MN=. THEN e.FW_STR_OccIndex_Chg_MN ELSE WE_STR_OccIndex_Chg_MN END AS WE_STR_OccIndex_Chg_MN , CASE WHEN WE_STR_OccIndex_L3=. THEN e.FW_STR_OccIndex_L3 ELSE WE_STR_OccIndex_L3 END AS WE_STR_OccIndex_L3 , CASE WHEN WE_STR_OccIndex_MN=. THEN e.FW_STR_OccIndex_MN ELSE WE_STR_OccIndex_MN END AS WE_STR_OccIndex_MN , CASE WHEN WE_STR_RevPARIndex_Chg_L3=. THEN e.FW_RevPARIndex_Chg_L3 ELSE WE_STR_RevPARIndex_Chg_L3 END AS WE_STR_RevPARIndex_Chg_L3 , CASE WHEN WE_STR_RevPARIndex_L3=. THEN e.FW_STR_RevPARIndex_L3 ELSE WE_STR_RevPARIndex_L3 END AS WE_STR_RevPARIndex_L3 , CASE WHEN WE_STR_RevPARIndex_MN=. THEN e.FW_STR_RevPARIndex_MN ELSE WE_STR_RevPARIndex_MN END AS WE_STR_RevPARIndex_MN , CASE WHEN WE_STR_RevPARIndex_Chg_MN=. THEN e.FW_STR_RevPARIndex_Chg_MN ELSE WE_STR_RevPARIndex_Chg_MN END AS WE_STR_RevPARIndex_Chg_MN , CASE WHEN RN_Es_Pace_Var_2MNOut<>. THEN RN_Es_Pace_Var_2MNOut ELSE 0 END AS RN_Es_Pace_Var_2MNOut , RN_Es_Pace_2MNOut , RN_Es_Pace_3MNOut , CASE WHEN WE_RN_Es_Pace_Var_2MNOut<>. THEN WE_RN_Es_Pace_Var_2MNOut ELSE 0 END AS WE_RN_Es_Pace_Var_2MNOut , WE_RN_Es_Pace_2MNOut , WE_RN_Es_Pace_3MNOut , CASE WHEN WE_RN_Pace_Var_2MNOut<>. THEN WE_RN_Pace_Var_2MNOut ELSE 0 END AS WE_RN_Pace_Var_2MNOut , WE_RN_Pace_2MNOut , WE_RN_Pace_3MNOut , CASE WHEN FW_GR_RN_Pace_Var_2MNOut<>. THEN FW_GR_RN_Pace_Var_2MNOut ELSE 0 END AS FW_GR_RN_Pace_Var_2MNOut , FW_GR_RN_Pace_2MNOut , CASE WHEN FW_GR_RN_Pace_Var_3MNOut<>. THEN FW_GR_RN_Pace_Var_3MNOut ELSE 0 END AS FW_GR_RN_Pace_Var_3MNOut , FW_GR_RN_Pace_3MNOut , CASE WHEN WE_GR_RN_Pace_Var_2MNOut<>. THEN WE_GR_RN_Pace_Var_2MNOut ELSE 0 END AS WE_GR_RN_Pace_Var_2MNOut , WE_GR_RN_Pace_2MNOut , WE_GR_RN_Pace_3MNOut , RN_Pace_2MNOut , RN_Pace_3MNOut , FW_ES_GR_RN_Pace_Var_2MNOut , d.FW_OY_FCST_Occ_1MO AS Occ_1MNOut , d.Wed_Occ_1MO AS Wed_Occ_1MNOut , h.brnd_rn_rwd/h.brnd_rn_tot AS MRW_Guests_Avg_L3 , h.rn_rwd/h.rn_tot AS MRW_Guests_L3 , h.brnd_rn_plat/h.brnd_rn_tot AS MRW_Plat_Guests_BrndAvg_L3 , h.rn_plat/h.rn_tot AS MRW_Plat_Guests_L3 , Es_GR_RN_Chg_L3 , Es_GR_RN_Chg_MN , Es_GR_RN_Mix_L3 , Es_RN_Chg_L3 , Es_RN_Chg_MN , Es_RN_Mix_Chg_L3 , Es_RN_Mix_L3 , EsADR_MN , EsADR_Chg_MN , EsADR_L3 , EsADR_Chg_L3 , EsOcc_MN , EsOcc_Chg_MN , EsOcc_L3 , EsOcc_Chg_L3 , Especialcorp_RN_Chg_L3 , Especialcorp_RN_L3 , Especialcorp_RN_L3/EsRN_L3 AS Especialcorp_MixofES_L3 , EsRevPAR_MN , EsRevPAR_chg_MN , EsRevPAR_L3 , EsRevPAR_Chg_L3 , EsRN_L3 , FW_GR_RN_Chg_L3 , FW_GR_RN_Mix_L3 , FW_Specialcorp_Mix_L3 , CASE WHEN MC29_RN_L12 gt 0 THEN MC29_RN_L12 ELSE 0 END AS MC29_RN_L12 , Occ_L3 AS FW_Occ_L3 , Occ_MN AS FW_Occ_MN , PremiumRoomPool_Mix_L3 , RevPAR_MN , SpecCorp_Es_Mix_L3 , T1_LM_NQ_ADR_Chg , T1_NQ_Mix_L3 , T1_NQ_Mix_L3_Chg , T1_Prem_2BD_vs_Studio_L3 , T1_TransRateEff_L3 , T1_TransRateEff_Chg_L3 , T1_WD_NQ_Mix_L3 , T1_WE_GR_Mix_L3 , T1_WE_NQ_Mix_L3 , T1_WE_TRE_Chg_L3 , T1_WE_TRE_MN , T2_LM_NQ_ADR_Chg , T3_LM_NQ_ADR_Chg , T4_LM_NQ_ADR_Chg , Studio_TotDem_L3 , TotDem_L3 , Studio_TotDem_L3/TotDem_L3 AS Studio_Demand_Mix_l3 , WD_Gr_RN_Chg_L3 , WD_Occ_L3 , WE_Gr_RN_Chg_L3 , WE_GR_RN_Chg_MN , WE_Gr_RN_Var_L3 , WE_Gr_RN_Var_MN , WE_Occ_L3 , WE_Occ_MN , ES_Add_Demand_Chg_MN , ES_Add_Demand_Chg_L3 , i._4_night_stay_mix , i._5_night_stay_mix , j.business_mix , j.business_mix_next2mo , k.Elite_Appreciation AS GSS_Elite , l.Elite_Rewards_Member_Appreciatio AS GSS_Elite_Average , k.Intent_to_RecommEND AS GSS_Intent_to_Rec , l.Intent_to_Recommend_Property AS GSS_Intent_to_Rec_Avg , gds.Channel_Mix__RNs__GDS_This_Year AS GDS_Mix_TY , . AS Natural_Search_Var_1MN , . AS Natural_Search_Var_2MN , . AS Natural_Search_Var_3MN , . AS OTA_Optimization , CASE WHEN m.ota_prtcpt_num = . THEN n.ota_prtcpt_num ELSE m.ota_prtcpt_num END AS OTA_Participation_Num , '' AS OTA_Optimization_Color , CASE WHEN t.Quickgroup_with_Sleeping_Rooms = 'Not participating IN QuickGroup with Sleeping Rooms' THEN 'N' when t.Quickgroup_with_Sleeping_Rooms = 'Not participating IN QuickGroup-eRFP only' THEN 'N' when SUBSTRING( t.Quickgroup_with_Sleeping_Rooms,1,17) = 'Not participating' THEN 'N' when t.Quickgroup_with_Sleeping_Rooms = '' THEN '' ELSE 'Y' END AS Quickgroup_with_Sleeping_Rooms , CASE WHEN t.QuickGroup_with_Event_Space = 'Not participating IN QuickGroup with Event Space' THEN 'N' when t.QuickGroup_with_Event_Space = 'Not Participating ( one meeting room)' THEN 'N/A' when t.QuickGroup_with_Event_Space = 'N/A No Meeting Space' THEN 'N/A' when SUBSTRING( t.QuickGroup_with_Event_Space,1,17) = 'Not participating' THEN 'N' when SUBSTRING( t.QuickGroup_with_Event_Space,1,13) = 'Not Signed Up' THEN 'N' when t.QuickGroup_with_Event_Space = '' THEN '' ELSE 'Y' END AS QuickGroup_with_Event_Space , t.Total_number_of_meeting_rooms , b.EsOcc_YTD, b.EsOcc_chg_YTD , b.EsADR_YTD, b.EsADR_chg_YTD , b.EsRevPAR_YTD, b.EsRevPAR_chg_YTD , u.FW_STR_MNLY_RevPARRank_MN , '' AS RevMgr_Certified , t1.Budget_in_RevPlanning , CASE WHEN t2.MonthlyHotSpecific='Y' THEN 'Y' when t2.MonthlyHotSpecific<>'' THEN t2.MonthlyHotSpecific ELSE 'N' END AS MonthlyHotSpecific , CASE WHEN f.WD_STR_RevPARIndex_Chg_L3=. THEN e.FW_RevPARIndex_Chg_L3 ELSE f.WD_STR_RevPARIndex_Chg_L3 END AS WD_STR_RevPARIndex_Chg_L3 , CASE WHEN f.WD_STR_RevPARIndex_L3=. THEN e.FW_STR_RevPARIndex_L3 ELSE f.WD_STR_RevPARIndex_L3 END AS WD_STR_RevPARIndex_L3 , CASE WHEN f.WD_STR_RevPARIndex_MN=. THEN e.FW_STR_RevPARIndex_MN ELSE f.WD_STR_RevPARIndex_MN END AS WD_STR_RevPARIndex_MN , CASE WHEN f.WD_STR_RevPARIndex_Chg_MN=. THEN e.FW_STR_RevPARIndex_Chg_MN ELSE f.WD_STR_RevPARIndex_Chg_MN END AS WD_STR_RevPARIndex_Chg_MN , b.T2_GR_ADR_MN , b.T3_GR_ADR_MN , b.T4_GR_ADR_MN , b.T2_GR_ADR_Chg_MN , b.T3_GR_ADR_Chg_MN , b.T4_GR_ADR_Chg_MN , b.T2_12_ADR_MN , b.T3_12_ADR_MN , b.T4_12_ADR_MN , b.T2_12_ADR_Chg_MN , b.T3_12_ADR_Chg_MN , b.T4_12_ADR_Chg_MN , b.T1_WD_NQ_Mix_L3_Chg , e.FW_STR_ADRIndex_MN , e.FW_STR_ADRIndex_Chg_MN , e.FW_STR_ADRIndex_L3 , e.FW_STR_ADRIndex_Chg_L3 , a.country , a.region , b.T1_WD_GV_MIX_L3 , b.ES_FW_GV_MIX_L3 , b.T1_WD_MC12_ADR_MN , b.ES_FW_MC12_ADR_MN , CASE WHEN a.region = 'S_' OR a.country='Canada' OR a.state IN ( 'HI', 'AK') THEN . when pd.PD&YR.&Mon.=. THEN 83 ELSE pd.PD&YR.&Mon. END AS GV_PerDiem_MN , CASE WHEN GRMRS_Hotel='Y' THEN 'Y' ELSE 'N' END AS RMRS_Hotel , eet.EET_Trigger , k.OSAT AS OSAT , CASE WHEN k.OSAT=. THEN """" when k.OSAT ge 68 THEN 'Green' when k.OSAT ge 54 THEN 'Clear' when k.OSAT ge 51 THEN 'Yellow' ELSE 'Red' END AS OSAT_Color , rpo.pct_high_priority_dates_wd AS rpo_pct_high_days_wd , rpo.pct_moves_up_wd AS rpo_hot_under_pct_wd, rpo.pct_moves_down_wd AS rpo_hot_over_pct_wd , rpo.pct_high_priority_dates_we AS rpo_pct_high_days_we , rpo.pct_moves_up_we AS rpo_hot_under_pct_we, rpo.pct_moves_down_wd AS rpo_hot_over_pct_we , '' AS rpo_tot_pricing_moves , '' AS pct_moves_in_rpodirection, '' AS rpo_logins , r24.__of_Alerts_Responded_in_48_Hrs AS Response_in_24Hrs , d.FW_OY_FCST_Occ_2MO AS Occ_2MNOut , d.Wed_Occ_2MO AS Wed_Occ_2MNOut , d.FW_OY_FCST_Occ_3MO AS Occ_3MNOut , d.Wed_Occ_3MO AS Wed_Occ_3MNOut , b.WE_T1_GR_RN_Chg_MN , b.WE_T1_GR_RN_Var_MN , b.WE_T1_GR_RN_Chg_L3 , b.WE_T1_GR_RN_Var_L3 , lnf.LNF_Claims_L3 , mc.mcom_rn_chg_MN , mc.mcom_rn_chg_L3 , mc.mcom_rn_share_chg_MN , mc.mcom_rn_share_chg_L3 , fe.FW_RevPARIndex_Chg_L3 AS FW_RevPARIndex_Chg_L3_5MO_LY , so.sellout_efficiency , CASE WHEN t2_2.MonthlyHotSpecific='Y' THEN 'Y' when t2_2.MonthlyHotSpecific<>'' THEN t2_2.MonthlyHotSpecific ELSE 'N' END AS MonthlyHotSpecific2 , sys.io_flag , sys.fa_flag AS fcst_acc_flag , sys.rpo_flag , . AS M_Com_RN_Mix_YTD , mb._____RNs_from_Brand_com__YTD__Be AS M_Com_RN_Mix_Bench , CAST( mb._____RNs_from_Brand_com__YTD__Va,best12. )/100 AS M_Com_RN_Mix_Var_to_Bench , e.FW_STR_ADR_L3 , e.FW_STR_MNLY_COMP_REVPAR_L3 , e.FW_STR_MNLY_REVPAR_L3 , e.FW_STR_RV_L3 , e.FW_STR_MNLY_REVPARINDEXCHG_L3 , d.midweek_occ_ge80_num , &tmstmp. AS Timestamp format date9. ,EXTRACT(MONTH FROM &tmstmp. ) AS Timestamp_Month FROM prop_master AS a LEFT JOIN esf.esf_mrdw AS b ON a.marsha=b.marsha LEFT JOIN esf.esf_otb AS c ON a.marsha=c.marsha LEFT JOIN esf.esf_oy_forecast AS d ON a.marsha=d.marsha LEFT JOIN esf.str_fw_monthly_&STR_FLDR. AS e ON a.marsha=e.marsha LEFT JOIN esf.str_wd_monthly_&STR_FLDR. AS f ON a.marsha=f.marsha LEFT JOIN esf.str_we_monthly_&STR_FLDR. AS g ON a.marsha=g.marsha LEFT JOIN esf.All_rwd_mamm_&currmo. AS h ON a.marsha=h.marsha LEFT JOIN esf.mixbylos AS i ON a.marsha=i.marsha LEFT JOIN esf.businessmix AS j ON a.marsha=j.marsha LEFT JOIN gss_hot AS k ON a.marsha=k.marsha LEFT JOIN gss_brnd AS l ON a.brnd=l.brand LEFT JOIN ecomm1_2 AS m ON a.marsha=m.marsha LEFT JOIN ecomm2_2 AS n ON a.marsha=n.marsha LEFT JOIN ecomm3 AS o ON a.marsha=o.marsha LEFT JOIN quickgroup AS t ON a.marsha=t.marsha_code LEFT JOIN strrank3 AS u ON a.marsha=u.marsha LEFT JOIN revmgr_cert AS v ON a.marsha=v.marsha LEFT JOIN BudInRP AS t1 ON a.marsha=t1.marsha LEFT JOIN MonthlyHotSpecific AS t2 ON a.marsha=t2.marsha LEFT JOIN MonthlyHotSpecific2 AS t2_2 ON a.marsha=t2_2.marsha LEFT JOIN perdiem_by_zip AS pd ON CAST( SUBSTRING( a.zip,1,5),best12. )=CAST( SUBSTRING( pd.zip,1,5),best12. ) LEFT JOIN EET_Trigger AS eet ON a.marsha=eet.EET_Trigger LEFT JOIN gds_mix AS gds ON a.marsha=gds.marsha LEFT JOIN rpo.Rpo_recom_dir_&mon.&yr. AS rpo ON a.marsha=rpo.marsha LEFT JOIN Resp_24hr AS r24 ON a.marsha=r24.marsha LEFT JOIN Lnf_violations AS lnf ON a.marsha=lnf.marsha LEFT JOIN esf.mcom_data AS mc ON a.marsha=mc.marsha LEFT JOIN esfftr.str_fw_monthly_&ftrSTR. AS fe ON a.marsha=fe.marsha LEFT JOIN sellout_data AS so ON a.marsha=so.marsha LEFT JOIN rpo.&io_fle. AS sys ON a.marsha=sys.marsha LEFT JOIN mcom_bench AS mb ON a.marsha=mb.marsha WHERE openflag='Y' AND a.brnd IN ( 'RI', 'TS', 'ER', 'EL') ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-Combine_Data.sas
CREATE TABLE esf_dupe AS (SELECT DISTINCT * FROM esf.esf_combined ORDER BY marsha);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-Combine_Data.sas
 CREATE TABLE esf.ri_hotel_UPDATE AS select a.* FROM esf.Esf_combined AS a INNER JOIN prop_master AS b ON a.marsha=b.marsha WHERE b.brnd IN ( 'RI') AND b.opendate le timestamp AND ( b.division='AM' OR a.marsha='EDIRI' ) ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-Combine_Data.sas
 CREATE TABLE esf.ts_hotel_UPDATE AS select a.* FROM esf.Esf_combined AS a INNER JOIN prop_master AS b ON a.marsha=b.marsha WHERE b.brnd='TS' AND b.opendate le timestamp AND b.division='AM';,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-Combine_Data.sas
 CREATE TABLE esf.el_hotel_UPDATE AS select a.* FROM esf.Esf_combined AS a INNER JOIN prop_master AS b ON a.marsha=b.marsha WHERE b.brnd='EL' AND b.opendate le timestamp AND ( b.division='AM' OR a.marsha='AMSEL' ) ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-Combine_Data.sas
 CREATE TABLE esf.er_hotel_UPDATE AS select a.* FROM esf.Esf_combined AS a INNER JOIN prop_master AS b ON a.marsha=b.marsha WHERE b.brnd='ER' AND b.opendate le timestamp;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-Combine_Data.sas
"CREATE TABLE ""\\Hdqmdm1fpcl4v1\lodg-revmgmt\RM EAnlys\Shared_Data\Projects\ESFactor\&outfldr\RI_ESFactor_Rawdata-&outfldr..xls"" AS ( SELECT * FROM esf.ri_hotel_UPDATE) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-Combine_Data.sas
"CREATE TABLE ""\\Hdqmdm1fpcl4v1\lodg-revmgmt\RM EAnlys\Shared_Data\Projects\ESFactor\&outfldr\TPS_ESFactor_Rawdata-&outfldr..xls"" AS ( SELECT * FROM esf.ts_hotel_UPDATE) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-Combine_Data.sas
"CREATE TABLE ""\\Hdqmdm1fpcl4v1\lodg-revmgmt\RM EAnlys\Shared_Data\Projects\ESFactor\&outfldr\MEA_ESFactor_Rawdata-&outfldr..xls"" AS ( SELECT * FROM esf.er_hotel_UPDATE) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-Combine_Data.sas
"CREATE TABLE ""\\Hdqmdm1fpcl4v1\lodg-revmgmt\RM EAnlys\Shared_Data\Projects\ESFactor\&outfldr\EL_ESFactor_Rawdata-&outfldr..xls"" AS ( SELECT * FROM esf.el_hotel_UPDATE) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-Combine_Data.sas
 CREATE TABLE prop_master AS  (  SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER A  ) ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-Hotel_Level_Comp_Rates_Index_Final_RPO.sas
 CREATE TABLE rpo AS  (  SELECT * FROM AW_REV_DBO.compsets_data A  ) ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-Hotel_Level_Comp_Rates_Index_Final_RPO.sas
"SELECT * FROM rpo ORDER BY prop_code ,we_ind ,cmptn_id ,cmptn_nm ,season_id;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-Hotel_Level_Comp_Rates_Index_Final_RPO.sas
"CREATE TABLE rpo_srt AS (SELECT DISTINCT * FROM rpo ORDER BY prop_code ,we_ind ,cmptn_id ,cmptn_nm);",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-Hotel_Level_Comp_Rates_Index_Final_RPO.sas
" CREATE TABLE rpo2 AS select prop_code AS marsha, cmptn_id AS RUBICON_PROP_ID, cmptn_nm AS Competitor_Name, own_ind , CASE WHEN we_ind='N' THEN 'WD' when we_ind='Y' THEN 'WE' ELSE '' END AS wdwe , usr_weight AS weight , 'C' AS control FROM rpo_srt;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-Hotel_Level_Comp_Rates_Index_Final_RPO.sas
" CREATE TABLE rpo3 AS select a.marsha, a.RUBICON_PROP_ID, a.competitor_name, a.own_ind , a.weight AS wd_weight, b.weight AS we_weight, a.control FROM rpo2 AS a full JOIN rpo2 AS b ON a.marsha=b.marsha AND a.RUBICON_PROP_ID=b.RUBICON_PROP_ID AND a.competitor_name=b.competitor_name WHERE a.wdwe='WD' AND b.wdwe='WE';",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-Hotel_Level_Comp_Rates_Index_Final_RPO.sas
" CREATE TABLE ownhot_tc AS  (  select distinct prop_cd AS marsha, prop_rub_id AS RUBICON_PROP_ID, 'Own Hotel' AS competitor_name , 1 AS wd_weight, 1 AS we_weight, 'H' AS control FROM mrdw_fact_competitor_rates_active a WHERE arv_dt >= &strt_ly AND prop_rub_id=comp_rub_id  )  ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-Hotel_Level_Comp_Rates_Index_Final_RPO.sas
" CREATE TABLE ownhot_rpo AS select marsha, RUBICON_PROP_ID, competitor_name, own_ind, 1 AS wd_weight, 1 AS we_weight, 'H' AS control FROM rpo3 WHERE own_ind='Y';",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-Hotel_Level_Comp_Rates_Index_Final_RPO.sas
 CREATE TABLE ownhot AS ( SELECT  *  FROM ownhot_tc UNION ALL SELECT  *  FROM ownhot_rpo);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-Hotel_Level_Comp_Rates_Index_Final_RPO.sas
SELECT DISTINCT * FROM ownhot ORDER BY marsha;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-Hotel_Level_Comp_Rates_Index_Final_RPO.sas
 CREATE TABLE rpo_weights AS ( SELECT  *  FROM rpo3 UNION ALL SELECT  *  FROM ownhot);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-Hotel_Level_Comp_Rates_Index_Final_RPO.sas
" CREATE TABLE crdata_NX AS  (  select arv_dt, los_cnt, comp_rub_id , CASE WHEN days_left_cnt < 7 THEN '1' when days_left_cnt < 14 THEN '2' when days_left_cnt < 21 THEN '3' when days_left_cnt < 28 THEN '4' ELSE '5+' END AS wks_out , currency_iso_cd AS curr , SUM( req_rate_amt)/COUNT( req_rate_amt) AS avg_rate FROM mrdw_fact_competitor_rates_active a, mrdw_dim_property b, mrdw_dim_date c WHERE a.prop_cd=b.property_cd AND a.arv_dt=c.date_dt and( los_cnt = 1 OR los_cnt = 2) AND guest_cnt =1 AND data_source_cd = 'GDS' AND comp_prod_id = 20 AND ( note_txt='' OR note_txt='X') AND req_rate_amt > 0 AND (  ( arv_dt >= &strt_ty AND arv_dt <= &end_ty) OR ( arv_dt >= &strt_ly AND arv_dt <= &end_ly) ) GROUP BY arv_dt, los_cnt, comp_rub_id, wks_out, curr ORDER BY arv_dt, los_cnt, comp_rub_id, wks_out, curr  )  ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-Hotel_Level_Comp_Rates_Index_Final_RPO.sas
" CREATE TABLE crdata_X AS  (  select arv_dt, los_cnt, comp_rub_id , CASE WHEN days_left_cnt < 7 THEN '1' when days_left_cnt < 14 THEN '2' when days_left_cnt < 21 THEN '3' when days_left_cnt < 28 THEN '4' ELSE '5+' END AS wks_out , currency_cd AS curr , SUM( rt_amt)/COUNT( rt_amt) AS avg_rate FROM mrdw_fact_competitor_rates_active a, mrdw_dim_date c WHERE a.arv_dt=c.date_dt AND ( los_cnt = 1 OR los_cnt = 2) AND guest_cnt =1 AND data_source_cd = 'GDS' AND comp_prod_id = 20 AND note_txt='X' AND rt_amt > 0 AND (  ( arv_dt >= &strt_ty AND arv_dt <= &end_ty) OR ( arv_dt >= &strt_ly AND arv_dt <= &end_ly) ) GROUP BY arv_dt, los_cnt, comp_rub_id, wks_out, curr ORDER BY arv_dt, los_cnt, comp_rub_id, wks_out, curr  )  ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-Hotel_Level_Comp_Rates_Index_Final_RPO.sas
 CREATE TABLE crdata AS ( SELECT  *  FROM crdata_nx UNION ALL SELECT  *  FROM crdata_x);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-Hotel_Level_Comp_Rates_Index_Final_RPO.sas
" CREATE TABLE crdata2 AS select arv_dt, los_cnt, comp_rub_id, wks_out, curr, AVG( avg_rate) AS avg_rate FROM crdata GROUP BY arv_dt, los_cnt, comp_rub_id, wks_out, curr;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-Hotel_Level_Comp_Rates_Index_Final_RPO.sas
" CREATE TABLE crdata3 AS select a.arv_dt, a.los_cnt, a.comp_rub_id, a.wks_out, a.curr , a.avg_rate, b.avg_rate AS avg_rate_ly FROM crdata2 AS a INNER JOIN crdata2 AS b ON a.arv_dt=b.arv_dt+364 AND a.los_cnt=b.los_cnt AND a.comp_rub_id=b.comp_rub_id AND a.wks_out=b.wks_out AND a.curr=b.curr;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-Hotel_Level_Comp_Rates_Index_Final_RPO.sas
" CREATE TABLE hotsum1 AS select arv_dt, comp_rub_id, curr, wks_out , AVG( avg_rate) AS avg_rate, AVG( avg_rate_ly) AS avg_rate_ly FROM crdata3 GROUP BY arv_dt, comp_rub_id, curr, wks_out;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-Hotel_Level_Comp_Rates_Index_Final_RPO.sas
" CREATE TABLE hotsum2 AS select arv_dt, comp_rub_id, curr , AVG( avg_rate) AS avg_rate, AVG( avg_rate_ly) AS avg_rate_ly FROM hotsum1 GROUP BY arv_dt, comp_rub_id, curr;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-Hotel_Level_Comp_Rates_Index_Final_RPO.sas
" CREATE TABLE hotsum3 AS select comp_rub_id, curr, weekday( arv_dt) AS dow , AVG( avg_rate) AS avg_rate, AVG( avg_rate_ly) AS avg_rate_ly FROM hotsum2 GROUP BY comp_rub_id, curr, calculated dow;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-Hotel_Level_Comp_Rates_Index_Final_RPO.sas
" CREATE TABLE alldata2 AS select b.marsha, c.brnd AS brand, c.region, c.hCLASS, b.control , b.competitor_name, comp_rub_id, dow, avg_rate, avg_rate_ly, b.wd_weight, b.we_weight , CASE WHEN a.dow le 5 AND c.region<>'M_' AND c.hCLASS<>'RESORT' THEN 'WD' when a.dow le 4 AND c.region<>'M_' AND c.hCLASS = 'RESORT' THEN 'WD' when a.dow le 4 AND c.region = 'M_' AND c.hCLASS<>'RESORT' THEN 'WD' when a.dow le 3 AND c.region = 'M_' AND c.hCLASS = 'RESORT' THEN 'WD' when a.dow = 5 AND c.region<>'M_' AND c.hCLASS = 'RESORT' THEN 'DE' when a.dow = 4 AND c.region = 'M_' AND c.hCLASS = 'RESORT' THEN 'DE' when a.dow = 7 AND c.region = 'M_' THEN 'WD' ELSE 'WE' END AS wdwe , CASE WHEN calculated wdwe='WE' THEN we_weight ELSE wd_weight END AS weight FROM hotsum3 AS a INNER JOIN rpo_weights AS b ON a.comp_rub_id = b.RUBICON_PROP_ID INNER JOIN prop_master AS c ON b.marsha=c.marsha AND a.curr=c.curr;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-Hotel_Level_Comp_Rates_Index_Final_RPO.sas
" CREATE TABLE dow_rate3 AS select a.marsha, a.control , wdwe , SUM( weight*avg_rate)/SUM( weight) AS rate , SUM( weight*avg_rate_ly)/SUM( weight) AS rate_ly FROM alldata2 AS a GROUP BY a.marsha, a.control, wdwe;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-Hotel_Level_Comp_Rates_Index_Final_RPO.sas
"SELECT * FROM dow_rate3 ORDER BY marsha ,control ,wdwe;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-Hotel_Level_Comp_Rates_Index_Final_RPO.sas
" CREATE TABLE tran_rate2 AS ( SELECT  *  , compress( control||wdwe||_name_||""&Cur_MN"" ) AS idVAR  FROM tran_rate );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-Hotel_Level_Comp_Rates_Index_Final_RPO.sas
SELECT * FROM tran_rate2 ORDER BY marsha;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-Hotel_Level_Comp_Rates_Index_Final_RPO.sas
" CREATE TABLE esf.intl_tra_crdata_PD AS select marsha , HWDrate&Cur_MN AS WD_MARCR_MN , ( HWDrate&Cur_MN - HWDrate_ly&Cur_MN. ) / HWDrate_ly&Cur_MN. AS WD_MARCR_chg_MN , CWDrate&Cur_MN AS WD_CMPCR_MN , ( CWDrate&Cur_MN - CWDrate_ly&Cur_MN. ) / CWDrate_ly&Cur_MN. AS WD_CMPCR_chg_MN , HWDrate&Cur_MN./CWDrate&Cur_MN. AS WD_CR_Indx_MN , ( ( HWDrate&Cur_MN./CWDrate&Cur_MN. ) - ( HWDrate_ly&Cur_MN./CWDrate_ly&Cur_MN. )) / ( HWDrate_ly&Cur_MN./CWDrate_ly&Cur_MN. ) AS WD_CR_Indx_Chg_MN , HWErate&Cur_MN AS WE_MARCR_MN , ( HWErate&Cur_MN - HWErate_ly&Cur_MN. ) / HWErate_ly&Cur_MN. AS WE_MARCR_chg_MN , CWErate&Cur_MN AS WE_CMPCR_MN , ( CWErate&Cur_MN - CWErate_ly&Cur_MN. ) / CWErate_ly&Cur_MN. AS WE_CMPCR_chg_MN , HWErate&Cur_MN./CWErate&Cur_MN. AS WE_CR_Indx_MN , ( ( HWErate&Cur_MN./CWErate&Cur_MN. ) - ( HWErate_ly&Cur_MN./CWErate_ly&Cur_MN. )) / ( HWErate_ly&Cur_MN./CWErate_ly&Cur_MN. ) AS WE_CR_Indx_Chg_MN FROM tran2_rate;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-Hotel_Level_Comp_Rates_Index_Final_RPO.sas
 CREATE TABLE mams.intl_tra_crdata_PD AS ( SELECT  *  FROM esf.intl_tra_crdata_PD );,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-Hotel_Level_Comp_Rates_Index_Final_RPO.sas
" CREATE TABLE Mcom_DATA AS  (  select property_cd AS Marsha_Code, channel_aggregate_cd, year_cal, month_cal_id , CASE WHEN market_segment_cd IN ( '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', 'CN', 'CT') THEN 'Contract' when market_segment_cd IN ( '60', '61', '62', '63', '64', '65', '66', '67', '68', '69') THEN 'Comp' when market_segment_cd ='GR' THEN 'Group' ELSE 'Transient' END AS segment , SUM( days_stay_qty) AS rn FROM mrdw_fact_rev7_analysis_extract a, mrdw_dim_date b WHERE (  ( a.arrival_dt <= b.date_dt AND a.departure_dt > b.date_dt) OR ( a.arrival_dt = b.date_dt AND a.departure_dt = b.date_dt) ) AND accom_status_cd='A' AND 100*b.year_cal+b.month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo, &curr_mo-100, &l2_mo-100, &l3_mo-100) GROUP BY property_cd, channel_aggregate_cd, segment, year_cal, month_cal_id ORDER BY property_cd, channel_aggregate_cd, segment, year_cal, month_cal_id  )  ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-M.com_Volume_Growth.sas
" CREATE TABLE mcom_data2 AS select coalesce( a.marsha_code,b.marsha_code) AS marsha , coalesce( a.channel_aggregate_cd,b.channel_aggregate_cd) AS channel_aggregate_cd , coalesce( a.year_cal,b.year_cal+1) AS year, coalesce( a.month_cal_id,b.month_cal_id) AS mn , coalesce( a.segment,b.segment) AS segment , a.rn, b.rn AS rnly FROM mcom_data AS a full JOIN mcom_data AS b ON a.marsha_code=b.marsha_code AND a.channel_aggregate_cd=b.channel_aggregate_cd AND a.year_cal=b.year_cal+1 AND a.month_cal_id=b.month_cal_id AND a.segment=b.segment;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-M.com_Volume_Growth.sas
" CREATE TABLE mcom_mn AS ( SELECT  *  , 'MN' AS timeframe  FROM mcom_data2  WHERE 100*year+mn = &curr_mo);",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-M.com_Volume_Growth.sas
" CREATE TABLE mcom_l3 AS select marsha, channel_aggregate_cd, segment, 'L3' AS timeframe, SUM( rn) AS rn, SUM( rnly) AS rnly FROM mcom_data2 WHERE 100*year+mn IN ( &curr_mo, &l2_mo, &l3_mo) GROUP BY marsha, channel_aggregate_cd, segment;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-M.com_Volume_Growth.sas
" CREATE TABLE comb_mcom AS select coalesce( a.marsha,b.marsha) AS marsha , coalesce( a.channel_aggregate_cd,b.channel_aggregate_cd) AS channel_aggregate_cd , coalesce( a.segment,b.segment) AS segment , a.rn AS rn_mn, a.rnly AS rnly_mn , b.rn AS rn_l3, b.rnly AS rnly_l3 FROM mcom_mn AS a full JOIN mcom_l3 AS b ON a.marsha=b.marsha AND a.channel_aggregate_cd=b.channel_aggregate_cd AND a.segment=b.segment;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-M.com_Volume_Growth.sas
" CREATE TABLE mcom_only AS select marsha, SUM( rn_mn) AS rn_mn, SUM( rnly_mn) AS rnly_mn , SUM( rn_l3) AS rn_l3, SUM( rnly_l3) AS rnly_l3 FROM comb_mcom WHERE channel_aggregate_cd='Marriott.com' GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-M.com_Volume_Growth.sas
" CREATE TABLE tran_tot AS select marsha, SUM( rn_mn) AS rn_mn, SUM( rnly_mn) AS rnly_mn , SUM( rn_l3) AS rn_l3, SUM( rnly_l3) AS rnly_l3 FROM comb_mcom WHERE segment='Transient' GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-M.com_Volume_Growth.sas
 CREATE TABLE mcom_tran AS ( SELECT  *  FROM comb_mcom  WHERE segment='Transient' AND channel_aggregate_cd='Marriott.com');,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-M.com_Volume_Growth.sas
" CREATE TABLE mcom_share AS select a.marsha, b.rn_mn AS rn_mcom_tr_mn, b.rnly_mn AS rnly_mcom_tr_mn , b.rn_l3 AS rn_mcom_tr_l3, b.rnly_l3 AS rnly_mcom_tr_l3 , a.rn_mn AS rn_tot_tr_mn, a.rnly_mn AS rnly_tot_tr_mn , a.rn_l3 AS rn_tot_tr_l3, a.rnly_l3 AS rnly_tot_tr_l3 FROM tran_tot AS a LEFT JOIN mcom_tran AS b ON a.marsha=b.marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-M.com_Volume_Growth.sas
" CREATE TABLE esf.mcom_data AS select a.marsha , a.rn_mn AS rn_mcom_mn, a.rnly_mn AS rnly_mcom_mn , a.rn_l3 AS rn_mcom_l3, a.rnly_l3 AS rnly_mcom_l3 , ( a.rn_mn/a.rnly_mn) - 1 AS mcom_rn_chg_MN , ( a.rn_l3/a.rnly_l3) - 1 AS mcom_rn_chg_L3 , b.rn_mcom_tr_mn, b.rnly_mcom_tr_mn , b.rn_mcom_tr_l3, b.rnly_mcom_tr_l3 , b.rn_tot_tr_mn, b.rnly_tot_tr_mn , b.rn_tot_tr_l3, b.rnly_tot_tr_l3 , b.rn_mcom_tr_mn/b.rn_tot_tr_mn AS mcom_rn_share_MN , b.rnly_mcom_tr_mn/b.rnly_tot_tr_mn AS mcom_rn_share_LY_MN , b.rn_mcom_tr_l3/b.rn_tot_tr_l3 AS mcom_rn_share_L3 , b.rnly_mcom_tr_l3/b.rnly_tot_tr_l3 AS mcom_rn_share_LY_l3 , calculated mcom_rn_share_MN - calculated mcom_rn_share_LY_MN AS mcom_rn_share_chg_MN , calculated mcom_rn_share_L3 - calculated mcom_rn_share_LY_L3 AS mcom_rn_share_chg_L3 FROM mcom_only AS a LEFT JOIN mcom_share AS b ON a.marsha=b.marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-M.com_Volume_Growth.sas
 CREATE TABLE mams.mcom_data AS ( SELECT  *  FROM esf.mcom_data );,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-M.com_Volume_Growth.sas
" CREATE TABLE MN_STR_DATA AS  (  SELECT marsha, time_type, data_category, data_type, currency_type, asof_yrmo, yrmnth , MARAVAIL, MARSOLD, MARREV, MARAVAILLY, MARSOLDLY, MARREVLY , MKTAVAIL, MKTSOLD, MKTREV, MKTAVAILLY, MKTSOLDLY, MKTREVLY FROM AW_CMP_DBO.STR_MONTHLY_DATA A WHERE asof_yrmo= &STARMNTH. AND yrmnth=&STARMNTH. AND TIME_TYPE IN ( 'MONTH', 'LAST3', 'YTD') AND DATA_CATEGORY IN ( 'Rooms', 'WDWE_Rooms') AND currency_type='Local' order BY MARSHA, time_type, data_category, data_type, currency_type, asof_yrmo, yrmnth  ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-STR_Monthly_(FW_WD_and_WE)_-_AW.sas
"CREATE TABLE Cal_pd AS ( SELECT  *  , MARSOLD/MARAVAIL AS STR_MNLY_Occ_MN , MKTSOLD/MKTAVAIL AS STR_MNLY_CompOcc_MN , ( STR_MNLY_Occ_MN -( MARSOLDLY /MARAVAILLY ))/( MARSOLDLY /MARAVAILLY  ) AS STR_MNLY_OccChg_MN , ( STR_MNLY_CompOcc_MN -( MKTSOLDLY /MKTAVAILLY ))/( MKTSOLDLY /MKTAVAILLY  ) AS STR_MNLY_CompOccChg_MN , MARREV /MARSOLD AS STR_MNLY_ADR_MN , MKTREV /MKTSOLD AS STR_MNLY_CompADR_MN , ( STR_MNLY_ADR_MN-MARREVLY /MARSOLDLY )/( MARREVLY/MARSOLDLY  ) AS STR_MNLY_ADRChg_MN , ( STR_MNLY_CompADR_MN-MKTREVLY /MKTSOLDLY )/( MKTREVLY/MKTSOLDLY  ) AS STR_MNLY_CompADRChg_MN , MARREV /MARAVAIL AS STR_MNLY_Rev_MN , MKTREV /MKTAVAIL AS STR_MNLY_CompRev_MN , ( STR_MNLY_Rev_MN-( MARREVLY/MARAVAILLY))/( MARREVLY/MARAVAILLY ) AS STR_MNLY_RevChg_MN , ( STR_MNLY_CompRev_MN-( MKTREVLY/MKTAVAILLY))/( MKTREVLY/MKTAVAILLY ) AS STR_MNLY_CompRevChg_MN , 100*( STR_MNLY_Occ_MN /STR_MNLY_CompOcc_MN  ) AS STR_MNLY_OccIndex_MN , 100*(  ( MARSOLDLY /MARAVAILLY )/ ( MKTSOLDLY/MKTAVAILLY)  ) AS STR_MNLY_OccIndexLY_MN , ( STR_MNLY_OccIndex_MN -STR_MNLY_OccIndexLY_MN )/STR_MNLY_OccIndexLY_MN AS STR_MNLY_OccIndexChg_MN , 100*( STR_MNLY_ADR_MN /STR_MNLY_CompADR_MN  ) AS STR_MNLY_ADRIndex_MN , 100*(  ( MARREVLY/MARSOLDLY)/ ( MKTREVLY/MKTSOLDLY) ) AS STR_MNLY_ADRIndexLY_MN , ( STR_MNLY_ADRIndex_MN -STR_MNLY_ADRIndexLY_MN )/STR_MNLY_ADRIndexLY_MN AS STR_MNLY_ADRIndexChg_MN , 100*( STR_MNLY_Rev_MN/STR_MNLY_CompRev_MN ) AS STR_MNLY_RevPARIndex_MN , 100*( MARREVLY /MARAVAILLY )/( MKTREVLY /MKTAVAILLY  ) AS STR_MNLY_RevPARIndexLY_MN , ( STR_MNLY_RevPARIndex_MN -STR_MNLY_RevPARIndexLY_MN )/STR_MNLY_RevPARIndexLY_MN AS STR_MNLY_RevPARIndexChg_MN , MARREV AS STR_MNLY_Revenue_MN  FROM MN_STR_DATA  WHERE TIME_TYPE='MONTH' AND DATA_CATEGORY='Rooms');",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-STR_Monthly_(FW_WD_and_WE)_-_AW.sas
"ALTER TABLE Cal_pd DROP COLUMN MARAVAIL ,  MARSOLD ,  MARREV ,  MARAVAILLY ,  MARSOLDLY ,  MARREVLY ,  MKTAVAIL ,  MKTSOLD ,  MKTREV ,  MKTAVAILLY ,  MKTSOLDLY ,  MKTREVLY ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-STR_Monthly_(FW_WD_and_WE)_-_AW.sas
SELECT * FROM Cal_pd ORDER BY MARSHA;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-STR_Monthly_(FW_WD_and_WE)_-_AW.sas
"CREATE TABLE Cal_l3 AS ( SELECT  *  , MARSOLD/MARAVAIL AS STR_MNLY_Occ_L3 , MKTSOLD/MKTAVAIL AS STR_MNLY_CompOcc_L3 , ( STR_MNLY_Occ_L3 -( MARSOLDLY /MARAVAILLY ))/( MARSOLDLY /MARAVAILLY  ) AS STR_MNLY_OccChg_L3 , ( STR_MNLY_CompOcc_L3 -( MKTSOLDLY /MKTAVAILLY ))/( MKTSOLDLY /MKTAVAILLY  ) AS STR_MNLY_CompOccChg_L3 , MARREV /MARSOLD AS STR_MNLY_ADR_L3 , MKTREV /MKTSOLD AS STR_MNLY_CompADR_L3 , ( STR_MNLY_ADR_L3-MARREVLY /MARSOLDLY )/( MARREVLY/MARSOLDLY  ) AS STR_MNLY_ADRChg_L3 , ( STR_MNLY_CompADR_L3-MKTREVLY /MKTSOLDLY )/( MKTREVLY/MKTSOLDLY  ) AS STR_MNLY_CompADRChg_L3 , MARREV /MARAVAIL AS STR_MNLY_Rev_L3 , MKTREV /MKTAVAIL AS STR_MNLY_CompRev_L3 , ( STR_MNLY_Rev_L3-( MARREVLY/MARAVAILLY))/( MARREVLY/MARAVAILLY ) AS STR_MNLY_RevChg_L3 , ( STR_MNLY_Rev_L3-( MKTREVLY/MKTAVAILLY))/( MKTREVLY/MKTAVAILLY ) AS STR_MNLY_CompRevChg_L3 , 100*( STR_MNLY_Occ_L3 /STR_MNLY_CompOcc_L3  ) AS STR_MNLY_OccIndex_L3 , 100*(  ( MARSOLDLY /MARAVAILLY )/ ( MKTSOLDLY/MKTAVAILLY)  ) AS STR_MNLY_OccIndexLY_L3 , ( STR_MNLY_OccIndex_L3 -STR_MNLY_OccIndexLY_L3 )/STR_MNLY_OccIndexLY_L3 AS STR_MNLY_OccIndexChg_L3 , 100*( STR_MNLY_ADR_L3 /STR_MNLY_CompADR_L3  ) AS STR_MNLY_ADRIndex_L3 , 100*(  ( MARREVLY/MARSOLDLY)/ ( MKTREVLY/MKTSOLDLY) ) AS STR_MNLY_ADRIndexLY_L3 , ( STR_MNLY_ADRIndex_L3 -STR_MNLY_ADRIndexLY_L3 )/STR_MNLY_ADRIndexLY_L3 AS STR_MNLY_ADRIndexChg_L3 , 100*( STR_MNLY_Rev_L3/STR_MNLY_CompRev_L3 ) AS STR_MNLY_RevPARIndex_L3 , 100*( MARREVLY /MARAVAILLY )/( MKTREVLY /MKTAVAILLY  ) AS STR_MNLY_RevPARIndexLY_L3 , ( STR_MNLY_RevPARIndex_L3 -STR_MNLY_RevPARIndexLY_L3 )/STR_MNLY_RevPARIndexLY_L3 AS STR_MNLY_RevPARIndexChg_L3 , MARREV AS STR_MNLY_Revenue_L3  FROM MN_STR_DATA  WHERE TIME_TYPE='LAST3' AND DATA_CATEGORY='Rooms');",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-STR_Monthly_(FW_WD_and_WE)_-_AW.sas
"ALTER TABLE Cal_l3 DROP COLUMN MARAVAIL ,  MARSOLD ,  MARREV ,  MARAVAILLY ,  MARSOLDLY ,  MARREVLY ,  MKTAVAIL ,  MKTSOLD ,  MKTREV ,  MKTAVAILLY ,  MKTSOLDLY ,  MKTREVLY ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-STR_Monthly_(FW_WD_and_WE)_-_AW.sas
SELECT * FROM Cal_l3 ORDER BY MARSHA;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-STR_Monthly_(FW_WD_and_WE)_-_AW.sas
"CREATE TABLE Cal_YTD AS ( SELECT  *  , MARSOLD/MARAVAIL AS STR_MNLY_Occ_YTD , MKTSOLD/MKTAVAIL AS STR_MNLY_CompOcc_YTD , ( STR_MNLY_Occ_YTD -( MARSOLDLY /MARAVAILLY ))/( MARSOLDLY /MARAVAILLY  ) AS STR_MNLY_OccChg_YTD , ( STR_MNLY_CompOcc_YTD -( MKTSOLDLY /MKTAVAILLY ))/( MKTSOLDLY /MKTAVAILLY  ) AS STR_MNLY_CompOccChg_YTD , MARREV /MARSOLD AS STR_MNLY_ADR_YTD , MKTREV /MKTSOLD AS STR_MNLY_CompADR_YTD , ( STR_MNLY_ADR_YTD-MARREVLY /MARSOLDLY )/( MARREVLY/MARSOLDLY  ) AS STR_MNLY_ADRChg_YTD , ( STR_MNLY_CompADR_YTD-MKTREVLY /MKTSOLDLY )/( MKTREVLY/MKTSOLDLY  ) AS STR_MNLY_CompADRChg_YTD , MARREV /MARAVAIL AS STR_MNLY_Rev_YTD , MKTREV /MKTAVAIL AS STR_MNLY_CompRev_YTD , ( STR_MNLY_Rev_YTD-( MARREVLY/MARAVAILLY))/( MARREVLY/MARAVAILLY ) AS STR_MNLY_RevChg_YTD , ( STR_MNLY_Rev_YTD-( MKTREVLY/MKTAVAILLY))/( MKTREVLY/MKTAVAILLY ) AS STR_MNLY_CompRevChg_YTD , 100*( STR_MNLY_Occ_YTD /STR_MNLY_CompOcc_YTD  ) AS STR_MNLY_OccIndex_YTD , 100*(  ( MARSOLDLY /MARAVAILLY )/ ( MKTSOLDLY/MKTAVAILLY)  ) AS STR_MNLY_OccIndexLY_YTD , ( STR_MNLY_OccIndex_YTD -STR_MNLY_OccIndexLY_YTD )/STR_MNLY_OccIndexLY_YTD AS STR_MNLY_OccIndexChg_YTD , 100*( STR_MNLY_ADR_YTD /STR_MNLY_CompADR_YTD  ) AS STR_MNLY_ADRIndex_YTD , 100*(  ( MARREVLY/MARSOLDLY)/ ( MKTREVLY/MKTSOLDLY) ) AS STR_MNLY_ADRIndexLY_YTD , ( STR_MNLY_ADRIndex_YTD -STR_MNLY_ADRIndexLY_YTD )/STR_MNLY_ADRIndexLY_YTD AS STR_MNLY_ADRIndexChg_YTD , 100*( STR_MNLY_Rev_YTD/STR_MNLY_CompRev_YTD ) AS STR_MNLY_RevPARIndex_YTD , 100*( MARREVLY /MARAVAILLY )/( MKTREVLY /MKTAVAILLY  ) AS STR_MNLY_RevPARIndexLY_YTD , ( STR_MNLY_RevPARIndex_YTD -STR_MNLY_RevPARIndexLY_YTD )/STR_MNLY_RevPARIndexLY_YTD AS STR_MNLY_RevPARIndexChg_YTD , MARREV AS STR_MNLY_Revenue_YTD  FROM MN_STR_DATA  WHERE TIME_TYPE='YTD' AND DATA_CATEGORY='Rooms');",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-STR_Monthly_(FW_WD_and_WE)_-_AW.sas
"ALTER TABLE Cal_YTD DROP COLUMN MARAVAIL ,  MARSOLD ,  MARREV ,  MARAVAILLY ,  MARSOLDLY ,  MARREVLY ,  MKTAVAIL ,  MKTSOLD ,  MKTREV ,  MKTAVAILLY ,  MKTSOLDLY ,  MKTREVLY ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-STR_Monthly_(FW_WD_and_WE)_-_AW.sas
SELECT * FROM Cal_YTD ORDER BY MARSHA;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-STR_Monthly_(FW_WD_and_WE)_-_AW.sas
" CREATE TABLE esf.STR_FW_MONTHLY_&STR_FLDR. AS select coalesce( a.marsha,b.marsha,c.marsha) AS marsha , a.STR_MNLY_RevPARIndexChg_MN AS FW_STR_RevPARIndex_Chg_MN , b.STR_MNLY_RevPARIndexChg_L3 AS FW_RevPARIndex_Chg_L3 , b.STR_MNLY_OccIndexChg_L3 AS FW_STR_OccIndex_Chg_L3 , a.STR_MNLY_OccIndexChg_MN AS FW_STR_OccIndex_Chg_MN , b.STR_MNLY_OccIndex_L3 AS FW_STR_OccIndex_L3 , a.STR_MNLY_OccIndex_MN AS FW_STR_OccIndex_MN , a.STR_MNLY_RevPARIndex_MN AS FW_STR_RevPARIndex_MN , b.STR_MNLY_RevPARIndex_L3 AS FW_STR_RevPARIndex_L3 , c.STR_MNLY_RevPARIndex_YTD AS FW_STR_RevPARIndex_YTD , c.STR_MNLY_RevPARIndexChg_YTD AS FW_STR_MNLY_RevPARIndexChg_YTD , b.STR_MNLY_ADRIndexChg_L3 AS FW_STR_ADRIndex_Chg_L3 , b.STR_MNLY_ADRIndex_L3 AS FW_STR_ADRIndex_L3 , a.STR_MNLY_ADRIndexChg_MN AS FW_STR_ADRIndex_Chg_MN , a.STR_MNLY_ADRIndex_MN AS FW_STR_ADRIndex_MN , b.STR_MNLY_ADR_L3 AS FW_STR_ADR_L3 , b.STR_MNLY_CompRev_L3 AS FW_STR_MNLY_COMP_REVPAR_L3 , b.STR_MNLY_Rev_L3 AS FW_STR_MNLY_REVPAR_L3 , b.STR_MNLY_Revenue_L3 AS FW_STR_RV_L3 , b.STR_MNLY_RevPARIndexChg_L3 AS FW_STR_MNLY_REVPARINDEXCHG_L3 FROM Cal_pd AS a full JOIN Cal_l3 AS b ON a.marsha=b.marsha full JOIN Cal_YTD AS c ON coalesce( a.marsha,b.marsha)=c.marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-STR_Monthly_(FW_WD_and_WE)_-_AW.sas
" CREATE TABLE WD_MONTH2 AS ( SELECT MARSHA , MARSOLD/MARAVAIL AS STR_MNLY_Occ_MN , MKTSOLD/MKTAVAIL AS STR_MNLY_CompOcc_MN , MARSOLDLY/MARAVAILLY AS Occ_pd_LY , MKTSOLDLY/MKTAVAILLY AS CompOcc_pd_LY , STR_MNLY_Occ_MN-Occ_pd_LY AS STR_MNLY_OccChg_MN , STR_MNLY_CompOcc_MN-CompOcc_pd_LY AS STR_MNLY_CompOccChg_MN , MARREV/MARSOLD AS STR_MNLY_ADR_MN , MKTREV/MKTSOLD AS STR_MNLY_CompADR_MN , MARREVLY/MARSOLDLY AS ADR_pd_LY , MKTREVLY/MKTSOLDLY AS CompADR_pd_LY , ( STR_MNLY_ADR_MN-ADR_pd_LY)/ADR_pd_LY AS STR_MNLY_ADRChg_MN , ( STR_MNLY_CompADR_MN-CompADR_pd_LY)/CompADR_pd_LY AS STR_MNLY_CompADRChg_MN , MARREV/MARAVAIL AS STR_MNLY_Rev_MN , MKTREV/MKTAVAIL AS STR_MNLY_CompRev_MN , MARREVLY/MARAVAILLY AS RevPAR_pd_LY , MKTREVLY/MKTAVAILLY AS CompRevPAR_pd_LY , ( STR_MNLY_Rev_MN-RevPAR_pd_LY)/RevPAR_pd_LY AS STR_MNLY_RevChg_MN , ( STR_MNLY_CompRev_MN-CompRevPAR_pd_LY)/CompRevPAR_pd_LY AS STR_MNLY_CompRevChg_MN , 100*STR_MNLY_Occ_MN/STR_MNLY_CompOcc_MN AS STR_MNLY_OccIndex_MN , 100*Occ_pd_LY/CompOcc_pd_LY AS STR_MNLY_OccIndexLY_MN , ( STR_MNLY_OccIndex_MN-STR_MNLY_OccIndexLY_MN)/STR_MNLY_OccIndexLY_MN AS STR_MNLY_OccIndexChg_MN , 100*STR_MNLY_ADR_MN/STR_MNLY_CompADR_MN AS STR_MNLY_ADRIndex_MN , 100*ADR_pd_LY/CompADR_pd_LY AS STR_MNLY_ADRIndexLY_MN , ( STR_MNLY_ADRIndex_MN-STR_MNLY_ADRIndexLY_MN)/STR_MNLY_ADRIndexLY_MN AS STR_MNLY_ADRIndexChg_MN , 100*STR_MNLY_Rev_MN/STR_MNLY_CompRev_MN AS STR_MNLY_RevPARIndex_MN , 100*RevPAR_pd_LY/CompRevPAR_pd_LY AS STR_MNLY_RevPARIndexLY_MN , ( STR_MNLY_RevPARIndex_MN-STR_MNLY_RevPARIndexLY_MN)/STR_MNLY_RevPARIndexLY_MN AS STR_MNLY_RevPARIndexChg_MN  FROM MN_STR_DATA  WHERE TIME_TYPE='MONTH' AND DATA_CATEGORY='WDWE_Rooms' AND DATA_TYPE='WD');",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-STR_Monthly_(FW_WD_and_WE)_-_AW.sas
" CREATE TABLE WD_LAST32 AS ( SELECT MARSHA , MARSOLD/MARAVAIL AS STR_MNLY_Occ_L3 , MKTSOLD/MKTAVAIL AS STR_MNLY_CompOcc_L3 , MARSOLDLY/MARAVAILLY AS Occ_l3_LY , MKTSOLDLY/MKTAVAILLY AS CompOcc_l3_LY , STR_MNLY_Occ_L3-Occ_l3_LY AS STR_MNLY_OccChg_L3 , STR_MNLY_CompOcc_L3-CompOcc_l3_LY AS STR_MNLY_CompOccChg_L3 , MARREV/MARSOLD AS STR_MNLY_ADR_L3 , MKTREV/MKTSOLD AS STR_MNLY_CompADR_L3 , MARREVLY/MARSOLDLY AS ADR_l3_LY , MKTREVLY/MKTSOLDLY AS CompADR_l3_LY , ( STR_MNLY_ADR_L3-ADR_l3_LY)/ADR_l3_LY AS STR_MNLY_ADRChg_L3 , ( STR_MNLY_CompADR_L3-CompADR_l3_LY)/CompADR_l3_LY AS STR_MNLY_CompADRChg_L3 , MARREV/MARAVAIL AS STR_MNLY_Rev_L3 , MKTREV/MKTAVAIL AS STR_MNLY_CompRev_L3 , MARREVLY/MARAVAILLY AS RevPAR_l3_LY , MKTREVLY/MKTAVAILLY AS CompRevPAR_l3_LY , ( STR_MNLY_Rev_L3-RevPAR_l3_LY)/RevPAR_l3_LY AS STR_MNLY_RevChg_L3 , ( STR_MNLY_CompRev_L3-CompRevPAR_l3_LY)/CompRevPAR_l3_LY AS STR_MNLY_CompRevChg_L3 , 100*STR_MNLY_Occ_L3/STR_MNLY_CompOcc_L3 AS STR_MNLY_OccIndex_L3 , 100*Occ_l3_LY/CompOcc_l3_LY AS STR_MNLY_OccIndexLY_L3 , ( STR_MNLY_OccIndex_L3-STR_MNLY_OccIndexLY_L3)/STR_MNLY_OccIndexLY_L3 AS STR_MNLY_OccIndexChg_L3 , 100*STR_MNLY_ADR_L3/STR_MNLY_CompADR_L3 AS STR_MNLY_ADRIndex_L3 , 100*ADR_l3_LY/CompADR_l3_LY AS STR_MNLY_ADRIndexLY_L3 , ( STR_MNLY_ADRIndex_L3-STR_MNLY_ADRIndexLY_L3)/STR_MNLY_ADRIndexLY_L3 AS STR_MNLY_ADRIndexChg_L3 , 100*STR_MNLY_Rev_L3/STR_MNLY_CompRev_L3 AS STR_MNLY_RevPARIndex_L3 , 100*RevPAR_l3_LY/CompRevPAR_l3_LY AS STR_MNLY_RevPARIndexLY_L3 , ( STR_MNLY_RevPARIndex_L3-STR_MNLY_RevPARIndexLY_L3)/STR_MNLY_RevPARIndexLY_L3 AS STR_MNLY_RevPARIndexChg_L3  FROM MN_STR_DATA  WHERE TIME_TYPE='LAST3' AND DATA_CATEGORY='WDWE_Rooms' AND DATA_TYPE='WD');",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-STR_Monthly_(FW_WD_and_WE)_-_AW.sas
" CREATE TABLE esf.STR_WD_MONTHLY_&STR_FLDR. AS select coalesce( a.marsha,b.marsha) AS marsha , b.STR_MNLY_ADRIndexChg_L3 AS WD_STR_ADRIndex_Chg_L3 , b.STR_MNLY_OccIndexChg_L3 AS WD_STR_OccIndex_Chg_L3 , a.STR_MNLY_OccIndexChg_MN AS WD_STR_OccIndex_Chg_MN , b.STR_MNLY_OccIndex_L3 AS WD_STR_OccIndex_L3 , a.STR_MNLY_OccIndex_MN AS WD_STR_OccIndex_MN , a.STR_MNLY_RevPARIndexChg_MN AS WD_STR_RevPARIndex_Chg_MN , a.STR_MNLY_RevPARIndex_MN AS WD_STR_RevPARIndex_MN , b.STR_MNLY_RevPARIndexChg_L3 AS WD_STR_RevPARIndex_Chg_L3 , a.STR_MNLY_RevPARIndex_MN AS WD_STR_RevPARIndex_L3 FROM WD_MONTH2 AS a full JOIN WD_LAST32 AS b ON a.marsha=b.marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-STR_Monthly_(FW_WD_and_WE)_-_AW.sas
" CREATE TABLE WE_MONTH2 AS ( SELECT MARSHA , MARSOLD/MARAVAIL AS STR_MNLY_Occ_MN , MKTSOLD/MKTAVAIL AS STR_MNLY_CompOcc_MN , MARSOLDLY/MARAVAILLY AS Occ_pd_LY , MKTSOLDLY/MKTAVAILLY AS CompOcc_pd_LY , STR_MNLY_Occ_MN-Occ_pd_LY AS STR_MNLY_OccChg_MN , STR_MNLY_CompOcc_MN-CompOcc_pd_LY AS STR_MNLY_CompOccChg_MN , MARREV/MARSOLD AS STR_MNLY_ADR_MN , MKTREV/MKTSOLD AS STR_MNLY_CompADR_MN , MARREVLY/MARSOLDLY AS ADR_pd_LY , MKTREVLY/MKTSOLDLY AS CompADR_pd_LY , ( STR_MNLY_ADR_MN-ADR_pd_LY)/ADR_pd_LY AS STR_MNLY_ADRChg_MN , ( STR_MNLY_CompADR_MN-CompADR_pd_LY)/CompADR_pd_LY AS STR_MNLY_CompADRChg_MN , MARREV/MARAVAIL AS STR_MNLY_Rev_MN , MKTREV/MKTAVAIL AS STR_MNLY_CompRev_MN , MARREVLY/MARAVAILLY AS RevPAR_pd_LY , MKTREVLY/MKTAVAILLY AS CompRevPAR_pd_LY , ( STR_MNLY_Rev_MN-RevPAR_pd_LY)/RevPAR_pd_LY AS STR_MNLY_RevChg_MN , ( STR_MNLY_CompRev_MN-CompRevPAR_pd_LY)/CompRevPAR_pd_LY AS STR_MNLY_CompRevChg_MN , 100*STR_MNLY_Occ_MN/STR_MNLY_CompOcc_MN AS STR_MNLY_OccIndex_MN , 100*Occ_pd_LY/CompOcc_pd_LY AS STR_MNLY_OccIndexLY_MN , ( STR_MNLY_OccIndex_MN-STR_MNLY_OccIndexLY_MN)/STR_MNLY_OccIndexLY_MN AS STR_MNLY_OccIndexChg_MN , 100*STR_MNLY_ADR_MN/STR_MNLY_CompADR_MN AS STR_MNLY_ADRIndex_MN , 100*ADR_pd_LY/CompADR_pd_LY AS STR_MNLY_ADRIndexLY_MN , ( STR_MNLY_ADRIndex_MN-STR_MNLY_ADRIndexLY_MN)/STR_MNLY_ADRIndexLY_MN AS STR_MNLY_ADRIndexChg_MN , 100*STR_MNLY_Rev_MN/STR_MNLY_CompRev_MN AS STR_MNLY_RevPARIndex_MN , 100*RevPAR_pd_LY/CompRevPAR_pd_LY AS STR_MNLY_RevPARIndexLY_MN , ( STR_MNLY_RevPARIndex_MN-STR_MNLY_RevPARIndexLY_MN)/STR_MNLY_RevPARIndexLY_MN AS STR_MNLY_RevPARIndexChg_MN  FROM MN_STR_DATA  WHERE TIME_TYPE='MONTH' AND DATA_CATEGORY='WDWE_Rooms' AND DATA_TYPE='WE');",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-STR_Monthly_(FW_WD_and_WE)_-_AW.sas
" CREATE TABLE WE_LAST32 AS ( SELECT MARSHA , MARSOLD/MARAVAIL AS STR_MNLY_Occ_L3 , MKTSOLD/MKTAVAIL AS STR_MNLY_CompOcc_L3 , MARSOLDLY/MARAVAILLY AS Occ_l3_LY , MKTSOLDLY/MKTAVAILLY AS CompOcc_l3_LY , STR_MNLY_Occ_L3-Occ_l3_LY AS STR_MNLY_OccChg_L3 , STR_MNLY_CompOcc_L3-CompOcc_l3_LY AS STR_MNLY_CompOccChg_L3 , MARREV/MARSOLD AS STR_MNLY_ADR_L3 , MKTREV/MKTSOLD AS STR_MNLY_CompADR_L3 , MARREVLY/MARSOLDLY AS ADR_l3_LY , MKTREVLY/MKTSOLDLY AS CompADR_l3_LY , ( STR_MNLY_ADR_L3-ADR_l3_LY)/ADR_l3_LY AS STR_MNLY_ADRChg_L3 , ( STR_MNLY_CompADR_L3-CompADR_l3_LY)/CompADR_l3_LY AS STR_MNLY_CompADRChg_L3 , MARREV/MARAVAIL AS STR_MNLY_Rev_L3 , MKTREV/MKTAVAIL AS STR_MNLY_CompRev_L3 , MARREVLY/MARAVAILLY AS RevPAR_l3_LY , MKTREVLY/MKTAVAILLY AS CompRevPAR_l3_LY , ( STR_MNLY_Rev_L3-RevPAR_l3_LY)/RevPAR_l3_LY AS STR_MNLY_RevChg_L3 , ( STR_MNLY_CompRev_L3-CompRevPAR_l3_LY)/CompRevPAR_l3_LY AS STR_MNLY_CompRevChg_L3 , 100*STR_MNLY_Occ_L3/STR_MNLY_CompOcc_L3 AS STR_MNLY_OccIndex_L3 , 100*Occ_l3_LY/CompOcc_l3_LY AS STR_MNLY_OccIndexLY_L3 , ( STR_MNLY_OccIndex_L3-STR_MNLY_OccIndexLY_L3)/STR_MNLY_OccIndexLY_L3 AS STR_MNLY_OccIndexChg_L3 , 100*STR_MNLY_ADR_L3/STR_MNLY_CompADR_L3 AS STR_MNLY_ADRIndex_L3 , 100*ADR_l3_LY/CompADR_l3_LY AS STR_MNLY_ADRIndexLY_L3 , ( STR_MNLY_ADRIndex_L3-STR_MNLY_ADRIndexLY_L3)/STR_MNLY_ADRIndexLY_L3 AS STR_MNLY_ADRIndexChg_L3 , 100*STR_MNLY_Rev_L3/STR_MNLY_CompRev_L3 AS STR_MNLY_RevPARIndex_L3 , 100*RevPAR_l3_LY/CompRevPAR_l3_LY AS STR_MNLY_RevPARIndexLY_L3 , ( STR_MNLY_RevPARIndex_L3-STR_MNLY_RevPARIndexLY_L3)/STR_MNLY_RevPARIndexLY_L3 AS STR_MNLY_RevPARIndexChg_L3  FROM MN_STR_DATA  WHERE TIME_TYPE='LAST3' AND DATA_CATEGORY='WDWE_Rooms' AND DATA_TYPE='WE');",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-STR_Monthly_(FW_WD_and_WE)_-_AW.sas
" CREATE TABLE esf.STR_WE_MONTHLY_&STR_FLDR. AS select coalesce( a.marsha,b.marsha) AS marsha , b.STR_MNLY_ADRIndexChg_L3 AS WE_STR_ADRIndex_chg_L3 , b.STR_MNLY_ADRIndex_L3 AS WE_STR_ADRIndex_L3 , b.STR_MNLY_OccIndexChg_L3 AS WE_STR_OccIndex_chg_L3 , a.STR_MNLY_OccIndexChg_MN AS WE_STR_OccIndex_Chg_MN , b.STR_MNLY_OccIndex_L3 AS WE_STR_OccIndex_L3 , a.STR_MNLY_OccIndex_MN AS WE_STR_OccIndex_MN , b.STR_MNLY_RevPARIndexChg_L3 AS WE_STR_RevPARIndex_Chg_L3 , STR_MNLY_RevPARIndex_L3 AS WE_STR_RevPARIndex_L3 , a.STR_MNLY_RevPARIndex_MN AS WE_STR_RevPARIndex_MN , a.STR_MNLY_RevPARIndexChg_MN AS WE_STR_RevPARIndex_Chg_MN FROM WE_MONTH2 AS a full JOIN WE_LAST32 AS b ON a.marsha=b.marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF-STR_Monthly_(FW_WD_and_WE)_-_AW.sas
" CREATE TABLE otbty AS  (  select stay_date, property_cd, segment , tier_los_ind , CASE WHEN b.ab_day_of_week_cd IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' END AS wdwe , SUM( room_nights) AS rn, SUM( rev_net) AS rev_net, SUM( rev_net_us) AS rev_net_us FROM Mrdw_fact_otb_seg_extract_pd a, mrdw_dim_date b WHERE a.stay_date=b.date_dt AND acctg_yr=&cur_yr AND acctg_pd=&cur_pd AND acctg_wk=&cur_wk GROUP BY stay_date, property_cd, segment , tier_los_ind, wdwe ORDER BY stay_date, property_cd, segment , tier_los_ind, wdwe  )  ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESFactor_-_OTB_Data_Pull.sas
" CREATE TABLE otbly AS  (  select stay_date, property_cd, segment , tier_los_ind , CASE WHEN b.ab_day_of_week_cd IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' END AS wdwe , SUM( room_nights) AS rn, SUM( rev_net) AS rev_net, SUM( rev_net_us) AS rev_net_us FROM Mrdw_fact_otb_seg_extract_pd a, mrdw_dim_date b WHERE a.stay_date=b.date_dt AND acctg_yr=&last_yr AND acctg_pd=&cur_pdly AND acctg_wk=&cur_wkly GROUP BY stay_date, property_cd, segment , tier_los_ind, wdwe ORDER BY stay_date, property_cd, segment , tier_los_ind, wdwe  )  ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESFactor_-_OTB_Data_Pull.sas
" CREATE TABLE allotb AS select coalesce( a.property_cd,b.property_cd) AS marsha , coalesce( a.stay_date,b.stay_date+364) AS stay_date format date9. , coalesce( a.segment,b.segment) AS segment , coalesce( a.tier_los_ind,b.tier_los_ind) AS tier_los_ind , coalesce( a.wdwe,b.wdwe) AS wdwe , a.rn, a.rev_net, a.rev_net_us, b.rn AS rn_ly, b.rev_net AS rev_net_ly, b.rev_net_us AS rev_net_us_ly FROM otbty AS a full JOIN otbly AS b ON a.property_cd=b.property_cd AND a.stay_date=b.stay_date+364 AND a.segment=b.segment AND a.tier_los_ind=b.tier_los_ind AND a.wdwe=b.wdwe;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESFactor_-_OTB_Data_Pull.sas
" CREATE TABLE allotb2 AS select marsha, segment, tier_los_ind, wdwe , CASE WHEN 100*year( stay_date)+month( stay_date) = &mo_out2 THEN '_2MNOut' when 100*year( stay_date)+month( stay_date) = &mo_out3 THEN '_3MNOut' END AS timeframe , SUM( ( rn+0)) AS rn, SUM( ( rev_net+0)) AS rv, SUM( ( rn_ly+0)) AS rn_ly, SUM( ( rev_net_ly+0)) AS rv_ly FROM allotb GROUP BY marsha, segment, tier_los_ind, wdwe, calculated timeframe;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESFactor_-_OTB_Data_Pull.sas
" CREATE TABLE allotb3 AS ( SELECT  * , CASE WHEN  tier_los_ind ge 2 AND timeframe = '_2MNOut'  THEN rn END AS RN_Es_Pace_2MNOut_rn, CASE WHEN  tier_los_ind ge 2 AND timeframe = '_2MNOut'  THEN rn_ly END AS RN_Es_Pace_2MNOut_rn_ly, CASE WHEN  tier_los_ind ge 2 AND timeframe = '_3MNOut'  THEN rn END AS RN_Es_Pace_3MNOut_rn, CASE WHEN  tier_los_ind ge 2 AND timeframe = '_3MNOut'  THEN rn_ly END AS RN_Es_Pace_3MNOut_rn_ly, CASE WHEN  timeframe='_2MNOut' AND wdwe='WE'  THEN rn END AS WE_RN_Pace_2MNOut_rn, CASE WHEN  timeframe='_2MNOut' AND wdwe='WE'  THEN rn_ly END AS WE_RN_Pace_2MNOut_rn_ly, CASE WHEN  timeframe='_3MNOut' AND wdwe='WE'  THEN rn END AS WE_RN_Pace_3MNOut_rn, CASE WHEN  timeframe='_3MNOut' AND wdwe='WE'  THEN rn_ly END AS WE_RN_Pace_3MNOut_rn_ly, CASE WHEN  timeframe='_2MNOut' AND segment='GRP'  THEN rn END AS FW_GR_RN_Pace_2MNOut_rn, CASE WHEN  timeframe='_2MNOut' AND segment='GRP'  THEN rn_ly END AS FW_GR_RN_Pace_2MNOut_rn_ly, CASE WHEN  timeframe='_3MNOut' AND segment='GRP'  THEN rn END AS FW_GR_RN_Pace_3MNOut_rn, CASE WHEN  timeframe='_3MNOut' AND segment='GRP'  THEN rn_ly END AS FW_GR_RN_Pace_3MNOut_rn_ly, CASE WHEN  timeframe='_2MNOut' AND segment='GRP' AND wdwe='WE'  THEN rn END AS WE_GR_RN_Pace_2MNOut_rn, CASE WHEN  timeframe='_2MNOut' AND segment='GRP' AND wdwe='WE'  THEN rn_ly END AS WE_GR_RN_Pace_2MNOut_rn_ly, CASE WHEN  timeframe='_3MNOut' AND segment='GRP' AND wdwe='WE'  THEN rn END AS WE_GR_RN_Pace_3MNOut_rn, CASE WHEN  timeframe='_3MNOut' AND segment='GRP' AND wdwe='WE'  THEN rn_ly END AS WE_GR_RN_Pace_3MNOut_rn_ly, CASE WHEN  tier_los_ind ge 2 AND timeframe='_2MNOut' AND wdwe='WE'  THEN rn END AS WE_RN_Es_Pace_2MNOut_rn, CASE WHEN  tier_los_ind ge 2 AND timeframe='_2MNOut' AND wdwe='WE'  THEN rn_ly END AS WE_RN_Es_Pace_2MNOut_rn_ly, CASE WHEN  tier_los_ind ge 2 AND timeframe='_3MNOut' AND wdwe='WE'  THEN rn END AS WE_RN_Es_Pace_3MNOut_rn, CASE WHEN  tier_los_ind ge 2 AND timeframe='_3MNOut' AND wdwe='WE'  THEN rn_ly END AS WE_RN_Es_Pace_3MNOut_rn_ly, CASE WHEN  tier_los_ind ge 2 AND timeframe='_2MNOut' AND segment='GRP'  THEN rn END AS FW_ES_GR_RN_Pace_2MNOut_rn, CASE WHEN  tier_los_ind ge 2 AND timeframe='_2MNOut' AND segment='GRP'  THEN rn_ly END AS FW_ES_GR_RN_Pace_2MNOut_rn_ly, CASE WHEN  timeframe='_2MNOut'  THEN rn END AS RN_Pace_2MNOut_rn, CASE WHEN  timeframe='_2MNOut'  THEN rn_ly END AS RN_Pace_2MNOut_rn_ly, CASE WHEN  timeframe='_3MNOut'  THEN rn END AS RN_Pace_3MNOut_rn, CASE WHEN  timeframe='_3MNOut'  THEN rn_ly END AS RN_Pace_3MNOut_rn_ly FROM allotb2 );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESFactor_-_OTB_Data_Pull.sas
" CREATE TABLE esf.esf_otb AS select marsha , SUM( ( RN_Es_Pace_2MNOut_rn+-RN_Es_Pace_2MNOut_rn_ly)) AS RN_Es_Pace_Var_2MNOut , SUM( RN_Es_Pace_2MNOut_rn)/SUM( RN_Es_Pace_2MNOut_rn_ly) - 1 AS RN_Es_Pace_2MNOut , SUM( RN_Es_Pace_3MNOut_rn)/SUM( RN_Es_Pace_3MNOut_rn_ly) - 1 AS RN_Es_Pace_3MNOut , SUM( ( WE_RN_Pace_2MNOut_rn+-WE_RN_Pace_2MNOut_rn_ly)) AS WE_RN_Pace_Var_2MNOut , SUM( WE_RN_Pace_2MNOut_rn)/SUM( WE_RN_Pace_2MNOut_rn_ly) - 1 AS WE_RN_Pace_2MNOut , SUM( WE_RN_Pace_3MNOut_rn)/SUM( WE_RN_Pace_3MNOut_rn_ly) - 1 AS WE_RN_Pace_3MNOut , SUM( ( FW_GR_RN_Pace_2MNOut_rn+-FW_GR_RN_Pace_2MNOut_rn_ly)) AS FW_GR_RN_Pace_Var_2MNOut , SUM( FW_GR_RN_Pace_2MNOut_rn)/SUM( FW_GR_RN_Pace_2MNOut_rn_ly) - 1 AS FW_GR_RN_Pace_2MNOut , SUM( ( FW_GR_RN_Pace_3MNOut_rn+FW_GR_RN_Pace_3MNOut_rn_ly)) AS FW_GR_RN_Pace_Var_3MNOut , SUM( FW_GR_RN_Pace_3MNOut_rn)/SUM( FW_GR_RN_Pace_3MNOut_rn_ly) - 1 AS FW_GR_RN_Pace_3MNOut , SUM( ( WE_GR_RN_Pace_2MNOut_rn+-WE_GR_RN_Pace_2MNOut_rn_ly)) AS WE_GR_RN_Pace_Var_2MNOut , SUM( WE_GR_RN_Pace_2MNOut_rn)/SUM( WE_GR_RN_Pace_2MNOut_rn_ly) - 1 AS WE_GR_RN_Pace_2MNOut , SUM( WE_GR_RN_Pace_3MNOut_rn)/SUM( WE_GR_RN_Pace_3MNOut_rn_ly) - 1 AS WE_GR_RN_Pace_3MNOut , SUM( ( WE_RN_Es_Pace_2MNOut_rn+-WE_RN_Es_Pace_2MNOut_rn_ly)) AS WE_RN_Es_Pace_Var_2MNOut , SUM( WE_RN_Es_Pace_2MNOut_rn)/SUM( WE_RN_Es_Pace_2MNOut_rn_ly) - 1 AS WE_RN_Es_Pace_2MNOut , SUM( WE_RN_Es_Pace_3MNOut_rn)/SUM( WE_RN_Es_Pace_3MNOut_rn_ly) - 1 AS WE_RN_Es_Pace_3MNOut , SUM( ( FW_ES_GR_RN_Pace_2MNOut_rn+-FW_ES_GR_RN_Pace_2MNOut_rn_ly)) AS FW_ES_GR_RN_Pace_Var_2MNOut , SUM( RN_Pace_2MNOut_rn)/SUM( RN_Pace_2MNOut_rn_ly) - 1 AS RN_Pace_2MNOut , SUM( RN_Pace_3MNOut_rn)/SUM( RN_Pace_3MNOut_rn_ly) - 1 AS RN_Pace_3MNOut FROM allotb3 GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESFactor_-_OTB_Data_Pull.sas
 CREATE TABLE prop_master AS  (  SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER A  ) ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESFactor_MRDW_Data_Pull.sas
 CREATE TABLE junk AS  (  select b.* FROM mrdw_dim_date b LIMIT 500  )  ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE daysinmo AS  (  select b.year_cal, b.month_cal_id , CASE WHEN b.ab_day_of_week_cd IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' END AS wdwe , COUNT( b.date_dt) AS days FROM mrdw_dim_date b WHERE 100*b.year_cal+b.month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo, &curr_mo-100, &l2_mo-100, &l3_mo-100) GROUP BY b.year_cal, b.month_cal_id, wdwe ORDER BY b.year_cal, b.month_cal_id, wdwe  )  ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE daysinmo2 AS ( SELECT  * , CASE WHEN  100*year_cal+month_cal_id = &curr_mo  THEN days END AS MN_days, CASE WHEN  100*year_cal+month_cal_id = &curr_mo-100  THEN days END AS MN_days_ly, CASE WHEN  100*year_cal+month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo)  THEN days END AS L3_days, CASE WHEN  100*year_cal+month_cal_id+100 IN ( &curr_mo, &l2_mo, &l3_mo)  THEN days END AS L3_days_ly, CASE WHEN  wdwe='WD' AND 100*year_cal+month_cal_id = &curr_mo  THEN days END AS MN_WD_days, CASE WHEN  wdwe='WD' AND 100*year_cal+month_cal_id = &curr_mo-100  THEN days END AS MN_WD_days_ly, CASE WHEN  wdwe='WD' AND 100*year_cal+month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo)  THEN days END AS L3_WD_days, CASE WHEN  wdwe='WD' AND 100*year_cal+month_cal_id+100 IN ( &curr_mo, &l2_mo, &l3_mo)  THEN days END AS L3_WD_days_ly, CASE WHEN  wdwe='WE' AND 100*year_cal+month_cal_id = &curr_mo  THEN days END AS MN_WE_days, CASE WHEN  wdwe='WE' AND 100*year_cal+month_cal_id = &curr_mo-100  THEN days END AS MN_WE_days_ly, CASE WHEN  wdwe='WE' AND 100*year_cal+month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo)  THEN days END AS L3_WE_days, CASE WHEN  wdwe='WE' AND 100*year_cal+month_cal_id+100 IN ( &curr_mo, &l2_mo, &l3_mo)  THEN days END AS L3_WE_days_ly FROM daysinmo );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE daysinmonth AS select &curr_mo AS yrmo, SUM( MN_days) AS MN_days, SUM( MN_days_ly) AS MN_days_ly , SUM( L3_days) AS L3_days, SUM( L3_days_ly) AS L3_days_ly , SUM( MN_WD_days) AS MN_WD_days, SUM( MN_WD_days_ly) AS MN_WD_days_ly , SUM( L3_WD_days) AS L3_WD_days, SUM( L3_WD_days_ly) AS L3_WD_days_ly , SUM( MN_WE_days) AS MN_WE_days, SUM( MN_WE_days_ly) AS MN_WE_days_ly , SUM( L3_WE_days) AS L3_WE_days, SUM( L3_WE_days_ly) AS L3_WE_days_ly FROM daysinmo2;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE AdtlDemand AS  (  select a14.property_cd AS MARSHA, a13.year_cal, a13.month_cal_id , CASE WHEN qy_stay_nights <= 4 THEN 'T1' ELSE 'ES' END AS esflag , CASE WHEN a12.cd_room_pool like 'T%' THEN 'TBD' when a12.cd_room_pool like 'O%' THEN 'TBD' when a12.cd_room_pool like 'S%' THEN 'STD' when a12.cd_room_pool like 'G%' THEN 'STD' ELSE 'TBD' END AS rmpool , SUM( a12.qy_addl_demand_adjstd) AS DEMAND FROM mrdw_fact_ddm_stat_unconstrain AS a12 JOIN mrdw_dim_date AS a13 ON ( a12.id_date_stay = a13.date_key) JOIN mrdw_dim_property AS a14 ON ( a12.id_property = a14.property_id) WHERE 100*a13.year_cal+a13.month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo, &curr_mo-100, &l2_mo-100, &l3_mo-100) GROUP BY a14.property_cd, a13.year_cal, a13.month_cal_id, esflag, rmpool ORDER BY a14.property_cd, a13.year_cal, a13.month_cal_id, esflag, rmpool )  ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE adem_mn AS select marsha , CASE WHEN 100*a.year_cal+a.month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo) THEN &curryr ELSE &curryr-1 END AS yr , 'MN' AS timeframe, esflag, rmpool , DEMAND FROM AdtlDemand AS a WHERE 100*a.year_cal+a.month_cal_id = &curr_mo OR 100*a.year_cal+a.month_cal_id = &curr_mo-100;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE adem_l3 AS select marsha , CASE WHEN 100*a.year_cal+a.month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo) THEN &curryr ELSE &curryr-1 END AS yr , 'L3' AS timeframe, esflag, rmpool , SUM( Demand) AS demand FROM AdtlDemand AS a GROUP BY marsha, calculated yr, timeframe, esflag, rmpool;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE ademall AS ( SELECT  *  , compress( timeframe||'_'||esflag||'_'||rmpool||'_Dem_'||yr_lbl ) AS idVAR , CASE WHEN  yr=&curryr  THEN 'TY' WHEN  yr=&curryr-1  THEN 'LY' END AS yr_lbl FROM adem_mn UNION ALL SELECT  *  , compress( timeframe||'_'||esflag||'_'||rmpool||'_Dem_'||yr_lbl ) AS idVAR , CASE WHEN  yr=&curryr  THEN 'TY' WHEN  yr=&curryr-1  THEN 'LY' END AS yr_lbl FROM adem_l3);",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESFactor_MRDW_Data_Pull.sas
SELECT * FROM ademall ORDER BY marsha;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE MC29_RN_L12 AS  (  select a.property_cd , SUM( a.roomnights_qty) AS MC29_RN_L12 FROM mrdw_fact_agg_dr_rev_analysis a, mrdw_dim_date b WHERE a.date_stay_dt=b.date_dt AND a.brand_cd IN ( 'RI', 'TS', 'ER', 'EL') AND a.market_prefix_cd = '29' AND 100*b.year_cal+b.month_cal_id > &curr_mo - 100 AND 100*b.year_cal+b.month_cal_id <= &curr_mo GROUP BY a.property_cd ORDER BY a.property_cd  )  ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE daysytd_ty AS  (  select b.year_cal , COUNT( b.date_dt) AS days_ytd_ty FROM mrdw_dim_date b WHERE 100*b.year_cal+b.month_cal_id <= &curr_mo AND 100*b.year_cal+b.month_cal_id >= &curr_mo-12 GROUP BY b.year_cal ORDER BY b.year_cal  )  ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE daysytd_ly AS  (  select b.year_cal , COUNT( b.date_dt) AS days_ytd_ly FROM mrdw_dim_date b WHERE 100*b.year_cal+b.month_cal_id <= &curr_mo-100 AND 100*b.year_cal+b.month_cal_id >= &curr_mo-112 GROUP BY b.year_cal ORDER BY b.year_cal  )  ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE esytddata_ty AS  (  select a.property_cd, b.year_cal , SUM( a.roomnights_qty) AS rn, SUM( a.net_rev_local_amt) AS rv , SUM( net_rev_usd_sub_amt) AS rv_usd FROM mrdw_fact_agg_dr_rev_analysis a, mrdw_dim_date b WHERE a.date_stay_dt=b.date_dt AND a.brand_cd IN ( 'RI', 'TS', 'ER', 'EL') AND a.ab_tier_los_txt <> 'LOS:1-4' AND 100*b.year_cal+b.month_cal_id <= &curr_mo AND 100*b.year_cal+b.month_cal_id >= &curr_mo-12 GROUP BY a.property_cd, b.year_cal ORDER BY a.property_cd, b.year_cal  )  ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE esytddata_ly AS  (  select a.property_cd, b.year_cal , SUM( a.roomnights_qty) AS rn, SUM( a.net_rev_local_amt) AS rv , SUM( net_rev_usd_sub_amt) AS rv_usd FROM mrdw_fact_agg_dr_rev_analysis a, mrdw_dim_date b WHERE a.date_stay_dt=b.date_dt AND a.brand_cd IN ( 'RI', 'TS', 'ER', 'EL') AND a.ab_tier_los_txt <> 'LOS:1-4' AND 100*b.year_cal+b.month_cal_id <= &curr_mo-100 AND 100*b.year_cal+b.month_cal_id >= &curr_mo-112 GROUP BY a.property_cd, b.year_cal ORDER BY a.property_cd, b.year_cal  )  ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE esytddata AS select a.marsha AS marsha, a.hcap, d.days_ytd_ty, e.days_ytd_ly, b.rn AS esrn_ty , CASE WHEN a.curr='USD' THEN b.rv_usd ELSE b.rv END AS esrv_ty , c.rn AS esrn_ly , CASE WHEN a.curr='USD' THEN c.rv_usd ELSE c.rv END AS esrv_ly , b.rn/( a.hcap*d.days_ytd_ty) AS EsOcc_YTD , c.rn/( a.hcap*e.days_ytd_ly) AS EsOcc_ly_YTD , ( calculated EsOcc_YTD+- calculated EsOcc_ly_YTD) AS ESOcc_chg_YTD , calculated esrv_ty/( a.hcap*d.days_ytd_ty) AS EsRevPAR_YTD , calculated esrv_ly/( a.hcap*e.days_ytd_ly) AS EsRevPAR_ly_YTD , ( calculated EsRevPAR_YTD/calculated EsRevPAR_ly_YTD) - 1 AS EsRevPAR_chg_YTD , calculated esrv_ty/b.rn AS EsADR_YTD , calculated esrv_ly/c.rn AS EsADR_ly_YTD , ( calculated EsADR_YTD/calculated EsADR_ly_YTD) - 1 AS EsADR_chg_YTD FROM prop_master AS a LEFT JOIN esytddata_ty AS b ON a.marsha=b.property_cd LEFT JOIN esytddata_ly AS c ON a.marsha=c.property_cd LEFT JOIN daysytd_ty AS d ON b.year_cal=d.year_cal LEFT JOIN daysytd_ly AS e ON c.year_cal=e.year_cal WHERE a.openflag='Y' AND a.brnd IN ( 'RI', 'TS', 'ER', 'EL' ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE mrdwdata AS  (  select a.property_cd, b.year_cal, b.month_cal_id, a.ab_tier_los_txt , CASE WHEN a.market_prefix_cd IN ( '10', '12', '30', '34', '37', '20', '23', '24', '21') THEN 'NQ' when a.market_prefix_cd IN ( '17', '18') THEN 'SC' when a.market_prefix_cd = '16' THEN 'GV' when a.market_prefix_cd IN ( 'GR', 'CN', 'CT') THEN a.market_prefix_cd ELSE 'OT' END AS segment , CASE WHEN b.ab_day_of_week_cd IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' END AS wdwe , CASE WHEN a.ab_tier_los_txt = 'LOS:1-4' THEN 'T1' ELSE 'ES' END AS es_flag , CASE WHEN a.room_pool_cd like 'O%' THEN 'STD' when a.room_pool_cd like 'S%' THEN 'STD' when a.room_pool_cd like 'G%' THEN 'STD' ELSE 'TBD' END AS rmpool , CASE WHEN a.market_prefix_cd IN ( '10', '12') THEN a.market_prefix_cd ELSE 'OT' END AS bnch , SUM( a.roomnights_qty) AS rn, SUM( a.net_rev_local_amt) AS rv , SUM( net_rev_usd_sub_amt) AS rv_usd FROM mrdw_fact_agg_dr_rev_analysis a, mrdw_dim_date b WHERE a.date_stay_dt=b.date_dt AND a.brand_cd IN ( 'RI', 'TS', 'ER', 'EL') AND 100*b.year_cal+b.month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo, &curr_mo-100, &l2_mo-100, &l3_mo-100) GROUP BY a.property_cd, b.year_cal, b.month_cal_id, a.ab_tier_los_txt, segment, wdwe, es_flag, rmpool, bnch ORDER BY a.property_cd, b.year_cal, b.month_cal_id, a.ab_tier_los_txt, segment, wdwe, es_flag, rmpool, bnch  )  ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE mndata AS select property_cd , CASE WHEN 100*a.year_cal+a.month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo) THEN &curryr ELSE &curryr-1 END AS yr , 'MN' AS timeframe, ab_tier_los_txt, segment, wdwe, es_flag, rmpool, bnch , rn, rv, rv_usd FROM mrdwdata AS a WHERE 100*a.year_cal+a.month_cal_id = &curr_mo OR 100*a.year_cal+a.month_cal_id = &curr_mo-100;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE l3data AS select property_cd , CASE WHEN 100*a.year_cal+a.month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo) THEN &curryr ELSE &curryr-1 END AS yr , 'L3' AS timeframe, ab_tier_los_txt, segment, wdwe, es_flag, rmpool, bnch , SUM( rn) AS rn, SUM( rv) AS rv, SUM( rv_usd) AS rv_usd FROM mrdwdata AS a GROUP BY property_cd, calculated yr, ab_tier_los_txt, segment, wdwe, es_flag, rmpool, bnch;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESFactor_MRDW_Data_Pull.sas
 CREATE TABLE mrdwdata2 AS ( SELECT  *  FROM l3data UNION ALL SELECT  *  FROM mndata);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE mrdwdata3 AS select coalesce( a.property_cd,b.property_cd) AS marsha, coalesce( a.timeframe,b.timeframe) AS timeframe , CASE WHEN coalesce( a.ab_tier_los_txt,b.ab_tier_los_txt) = 'LOS:1-4' THEN 'T1' when coalesce( a.ab_tier_los_txt,b.ab_tier_los_txt) = 'LOS:5-11' THEN 'T2' when coalesce( a.ab_tier_los_txt,b.ab_tier_los_txt) = 'LOS:12-29' THEN 'T3' when coalesce( a.ab_tier_los_txt,b.ab_tier_los_txt) = 'LOS:30+' THEN 'T4' END AS tier , coalesce( a.segment,b.segment) AS segment, coalesce( a.wdwe,b.wdwe) AS wdwe , coalesce( a.es_flag,b.es_flag) AS esflag, coalesce( a.rmpool,b.rmpool) AS rmpool , coalesce( a.bnch,b.bnch) AS bnch , a.rn AS rn, a.rv_usd AS rv, b.rn AS rn_ly, b.rv_usd AS rv_ly FROM mrdwdata2 AS a full JOIN mrdwdata2 AS b ON a.property_cd=b.property_cd AND a.yr=b.yr+1 AND a.timeframe=b.timeframe AND a.ab_tier_los_txt=b.ab_tier_los_txt AND a.segment=b.segment AND a.wdwe=b.wdwe AND a.es_flag=b.es_flag AND a.rmpool=b.rmpool AND a.bnch=b.bnch WHERE coalesce( a.yr,b.yr+1)=&curryr;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESFactor_MRDW_Data_Pull.sas
"SELECT * FROM mrdwdata3 ORDER BY marsha ,timeframe ,tier ,segment ,wdwe ,esflag ,rmpool ,bnch;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE tranmrdw2 AS ( SELECT  *  , compress( timeframe||'_'||tier||'_'||segment||'_'||wdwe||'_'||_name_ ) AS idVAR  FROM tranmrdw );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE tr_sum1 AS select marsha, compress( timeframe||'_'||esflag||'_'||segment||'_'||'FW'||'_'||_name_) AS idVAR, SUM( col1) AS col1 FROM tranmrdw GROUP BY marsha, calculated idVAR;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE tr_sum2 AS select marsha, compress( timeframe||'_'||esflag||'_'||'TO'||'_'||wdwe||'_'||_name_) AS idVAR, SUM( col1) AS col1 FROM tranmrdw GROUP BY marsha, calculated idVAR;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE tr_sum3 AS select marsha, compress( timeframe||'_'||tier||'_'||segment||'_'||wdwe||'_'||_name_) AS idVAR, SUM( col1) AS col1 FROM tranmrdw GROUP BY marsha, calculated idVAR;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE tr_sum4 AS select marsha, compress( timeframe||'_'||esflag||'_'||'TO'||'_'||'FW'||'_'||_name_) AS idVAR, SUM( col1) AS col1 FROM tranmrdw GROUP BY marsha, calculated idVAR;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE tr_sum5 AS select marsha, compress( timeframe||'_'||esflag||'_'||segment||'_'||wdwe||'_'||rmpool||'_'||_name_) AS idVAR, SUM( col1) AS col1 FROM tranmrdw GROUP BY marsha, calculated idVAR;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE tr_sum6 AS select marsha, compress( timeframe||'_'||esflag||'_'||bnch||'_'||wdwe||'_'||_name_) AS idVAR, SUM( col1) AS col1 FROM tranmrdw WHERE bnch<>'OT' GROUP BY marsha, calculated idVAR;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE tr_sum7 AS select marsha, compress( timeframe||'_'||tier||'_'||bnch||'_'||'FW'||'_'||_name_) AS idVAR, SUM( col1) AS col1 FROM tranmrdw WHERE bnch = '12' GROUP BY marsha, calculated idVAR;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE tr_sum8 AS select marsha, compress( timeframe||'_'||tier||'_'||segment||'_'||'FW'||'_'||_name_) AS idVAR, SUM( col1) AS col1 FROM tranmrdw WHERE segment='GR' AND tier<>'T1' GROUP BY marsha, calculated idVAR;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE tr_sumall AS ( SELECT  *  , &curr_mo AS yrmo  FROM tr_sum5 UNION ALL SELECT  *  , &curr_mo AS yrmo  FROM tr_sum1 UNION ALL SELECT  *  , &curr_mo AS yrmo  FROM tr_sum2 UNION ALL SELECT  *  , &curr_mo AS yrmo  FROM tr_sum3 UNION ALL SELECT  *  , &curr_mo AS yrmo  FROM tr_sum4 UNION ALL SELECT  *  , &curr_mo AS yrmo  FROM tr_sum6 UNION ALL SELECT  *  , &curr_mo AS yrmo  FROM tr_sum7 UNION ALL SELECT  *  , &curr_mo AS yrmo  FROM tr_sum8);",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESFactor_MRDW_Data_Pull.sas
"SELECT * FROM tr_sumall ORDER BY marsha ,idVAR;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE esf.esf_mrdw AS select a.marsha, ( L3_ES_GR_FW_rn/L3_ES_GR_FW_rn_ly) - 1 AS Es_GR_RN_Chg_L3 , ( MN_ES_GR_FW_rn/MN_ES_GR_FW_rn_ly) - 1 AS Es_GR_RN_Chg_MN , L3_ES_GR_FW_rn / ( L3_ES_TO_WD_rn+L3_ES_TO_WE_rn) AS Es_GR_RN_Mix_L3 , ( L3_ES_TO_FW_rn/L3_ES_TO_FW_rn_ly) - 1 AS Es_RN_Chg_L3 , ( MN_ES_TO_FW_rn/MN_ES_TO_FW_rn_ly) - 1 AS Es_RN_Chg_MN , L3_ES_TO_FW_rn/( L3_ES_TO_FW_rn+L3_T1_TO_FW_rn) - L3_ES_TO_FW_rn_ly/( L3_ES_TO_FW_rn_ly+L3_T1_TO_FW_rn_ly) AS Es_RN_Mix_Chg_L3 , L3_ES_TO_FW_rn/( L3_ES_TO_FW_rn+L3_T1_TO_FW_rn) AS Es_RN_Mix_L3 , ( L3_ES_TO_FW_rv/L3_ES_TO_FW_rn) AS EsADR_L3 , ( L3_ES_TO_FW_rv/L3_ES_TO_FW_rn)/( L3_ES_TO_FW_rv_ly/L3_ES_TO_FW_rn_ly) - 1 AS EsADR_Chg_L3 , L3_ES_TO_FW_rn/( c.hcap*L3_days) AS ESOcc_L3 , L3_ES_TO_FW_rn/( c.hcap*L3_days) - L3_ES_TO_FW_rn_ly/( c.hcap*L3_days_ly) AS EsOcc_Chg_L3 , MN_ES_TO_FW_rn/( c.hcap*MN_days) AS ESOcc_MN , MN_ES_TO_FW_rn/( c.hcap*MN_days) - MN_ES_TO_FW_rn_ly/( c.hcap*MN_days_ly) AS EsOcc_Chg_MN , L3_ES_SC_FW_rn/L3_ES_SC_FW_rn_ly - 1 AS Especialcorp_RN_Chg_L3 , L3_ES_SC_FW_rn AS Especialcorp_RN_L3 , ( L3_ES_TO_FW_rv/( c.hcap*L3_days)) / ( L3_ES_TO_FW_rv_ly/( c.hcap*L3_days_ly)) - 1 AS EsRevPAR_Chg_L3 , ( L3_ES_TO_FW_rv/( c.hcap*L3_days)) AS EsRevPAR_L3 , ( MN_ES_TO_FW_rv/MN_ES_TO_FW_rn) AS EsADR_MN , ( MN_ES_TO_FW_rv/MN_ES_TO_FW_rn)/( MN_ES_TO_FW_rv_ly/MN_ES_TO_FW_rn_ly) - 1 AS EsADR_chg_MN , ( MN_ES_TO_FW_rv/( c.hcap*MN_days)) AS EsRevPAR_MN , ( MN_ES_TO_FW_rv/( c.hcap*MN_days))/( MN_ES_TO_FW_rv_ly/( c.hcap*MN_days_ly)) - 1 AS EsRevPAR_chg_MN , L3_ES_TO_FW_rn AS EsRN_L3 , ( L3_ES_GR_FW_rn+L3_T1_GR_FW_rn)/( L3_ES_GR_FW_rn_ly+L3_T1_GR_FW_rn_ly) - 1 AS FW_GR_RN_Chg_L3 , ( L3_ES_GR_FW_rn+L3_T1_GR_FW_rn)/( L3_ES_TO_FW_rn+L3_T1_TO_FW_rn) AS FW_GR_RN_Mix_L3 , ( L3_ES_SC_FW_rn+L3_T1_SC_FW_rn)/( L3_ES_TO_FW_rn+L3_T1_TO_FW_rn) AS FW_Specialcorp_Mix_L3 , ( L3_ES_TO_FW_rn+L3_T1_TO_FW_rn)/( c.hcap*L3_days) AS Occ_L3 , ( MN_ES_TO_FW_rn+MN_T1_TO_FW_rn)/( c.hcap*MN_days) AS Occ_MN , ( ( MN_ES_TO_FW_rv+MN_T1_TO_FW_rv)/( c.hcap*MN_days)) AS RevPAR_MN , L3_ES_SC_FW_rn/( L3_ES_TO_FW_rn+L3_T1_TO_FW_rn) AS SpecCorp_Es_Mix_L3 , ( MN_T1_NQ_FW_rv/MN_T1_NQ_FW_rn)/( MN_T1_NQ_FW_rv_ly/MN_T1_NQ_FW_rn_ly) - 1 AS T1_LM_NQ_ADR_Chg , L3_T1_NQ_FW_rn/L3_T1_TO_FW_rn AS T1_NQ_Mix_L3 , L3_T1_NQ_FW_rn/L3_T1_TO_FW_rn - L3_T1_NQ_FW_rn_ly/L3_T1_TO_FW_rn_ly AS T1_NQ_Mix_L3_Chg , L3_T1_NQ_WD_rn/L3_T1_TO_WD_rn AS T1_WD_NQ_Mix_L3 , L3_T1_NQ_WD_rn/L3_T1_TO_WD_rn - L3_T1_NQ_WD_rn_ly/L3_T1_TO_WD_rn_ly AS T1_WD_NQ_Mix_L3_Chg , ( ( L3_T1_10_WD_rv+L3_T1_10_WE_rv)/( L3_T1_10_WD_rn+L3_T1_10_WE_rn)) / ( ( L3_T1_12_WD_rv+L3_T1_12_WE_rv)/( L3_T1_12_WD_rn+L3_T1_12_WE_rn)) - 1 AS T1_Prem_2BD_vs_Studio_L3 , ( L3_T1_NQ_WD_STD_rv+L3_T1_SC_WD_STD_rv+L3_T1_GV_WD_STD_rv+L3_T1_OT_WD_STD_rv)/( L3_T1_NQ_WD_STD_rn+L3_T1_SC_WD_STD_rn+L3_T1_GV_WD_STD_rn+L3_T1_OT_WD_STD_rn) / ( L3_T1_NQ_WD_STD_rv/L3_T1_NQ_WD_STD_rn) AS T1_TransRateEff_L3 , ( L3_T1_NQ_WD_STD_rv+L3_T1_SC_WD_STD_rv+L3_T1_GV_WD_STD_rv+L3_T1_OT_WD_STD_rv)/( L3_T1_NQ_WD_STD_rn+L3_T1_SC_WD_STD_rn+L3_T1_GV_WD_STD_rn+L3_T1_OT_WD_STD_rn) / ( L3_T1_NQ_WD_STD_rv/L3_T1_NQ_WD_STD_rn) - ( L3_T1_NQ_WD_STD_rv_ly+L3_T1_SC_WD_STD_rv_ly+L3_T1_GV_WD_STD_rv_ly+L3_T1_OT_WD_STD_rv_ly)/( L3_T1_NQ_WD_STD_rn_ly+L3_T1_SC_WD_STD_rn_ly+L3_T1_GV_WD_STD_rn_ly+L3_T1_OT_WD_STD_rn_ly) / ( L3_T1_NQ_WD_STD_rv_ly/L3_T1_NQ_WD_STD_rn_ly) AS T1_TransRateEff_Chg_L3 , L3_T1_NQ_WD_rn/L3_T1_TO_WD_rn AS T1_WD_NQ_Mix_L3 , L3_T1_GR_WE_rn/L3_T1_TO_WE_rn AS T1_WE_GR_Mix_L3 , L3_T1_NQ_WE_rn/L3_T1_TO_WE_rn AS T1_WE_NQ_Mix_L3 , ( L3_T1_NQ_WE_STD_rv+L3_T1_SC_WE_STD_rv+L3_T1_GV_WE_STD_rv+L3_T1_OT_WE_STD_rv)/( L3_T1_NQ_WE_STD_rn+L3_T1_SC_WE_STD_rn+L3_T1_GV_WE_STD_rn+L3_T1_OT_WE_STD_rn) / ( L3_T1_NQ_WE_STD_rv/L3_T1_NQ_WE_STD_rn) - ( L3_T1_NQ_WE_STD_rv_ly+L3_T1_SC_WE_STD_rv_ly+L3_T1_GV_WE_STD_rv_ly+L3_T1_OT_WE_STD_rv_ly)/( L3_T1_NQ_WE_STD_rn_ly+L3_T1_SC_WE_STD_rn_ly+L3_T1_GV_WE_STD_rn_ly+L3_T1_OT_WE_STD_rn_ly) / ( L3_T1_NQ_WE_STD_rv_ly/L3_T1_NQ_WE_STD_rn_ly) AS T1_WE_TRE_Chg_L3 , ( MN_T1_NQ_WE_STD_rv+MN_T1_SC_WE_STD_rv+MN_T1_GV_WE_STD_rv+MN_T1_OT_WE_STD_rv)/( MN_T1_NQ_WE_STD_rn+MN_T1_SC_WE_STD_rn+MN_T1_GV_WE_STD_rn+MN_T1_OT_WE_STD_rn) / ( MN_T1_NQ_WE_STD_rv/MN_T1_NQ_WE_STD_rn) AS T1_WE_TRE_MN , ( ( MN_T2_NQ_WD_rv+MN_T2_NQ_WD_rv)/( MN_T2_NQ_WD_rn+MN_T2_NQ_WD_rn)) / ( ( MN_T2_NQ_WD_rv_ly+MN_T2_NQ_WD_rv_ly)/( MN_T2_NQ_WD_rn_ly+MN_T2_NQ_WD_rn_ly)) - 1 AS T2_LM_NQ_ADR_Chg , ( ( MN_T3_NQ_WD_rv+MN_T3_NQ_WD_rv)/( MN_T3_NQ_WD_rn+MN_T3_NQ_WD_rn)) / ( ( MN_T3_NQ_WD_rv_ly+MN_T3_NQ_WD_rv_ly)/( MN_T3_NQ_WD_rn_ly+MN_T3_NQ_WD_rn_ly)) - 1 AS T3_LM_NQ_ADR_Chg , ( ( MN_T4_NQ_WD_rv+MN_T4_NQ_WD_rv)/( MN_T4_NQ_WD_rn+MN_T4_NQ_WD_rn)) / ( ( MN_T4_NQ_WD_rv_ly+MN_T4_NQ_WD_rv_ly)/( MN_T4_NQ_WD_rn_ly+MN_T4_NQ_WD_rn_ly)) - 1 AS T4_LM_NQ_ADR_Chg , ( L3_T1_GR_WD_rn+L3_T2_GR_WD_rn+L3_T3_GR_WD_rn+L3_T4_GR_WD_rn)/( L3_T1_GR_WD_rn_ly+L3_T2_GR_WD_rn_ly+L3_T3_GR_WD_rn_ly+L3_T4_GR_WD_rn_ly) - 1 AS WD_Gr_RN_Chg_L3 , ( L3_T1_TO_WD_rn+L3_ES_TO_WD_rn)/( c.hcap*L3_WD_days) AS WD_Occ_L3 , ( L3_T1_GR_WE_rn+L3_T2_GR_WE_rn+L3_T3_GR_WE_rn+L3_T4_GR_WE_rn)/( L3_T1_GR_WE_rn_ly+L3_T2_GR_WE_rn_ly+L3_T3_GR_WE_rn_ly+L3_T4_GR_WE_rn_ly) - 1 AS WE_Gr_RN_Chg_L3 , ( MN_T1_GR_WE_rn+MN_T2_GR_WE_rn+MN_T3_GR_WE_rn+MN_T4_GR_WE_rn)/( MN_T1_GR_WE_rn_ly+MN_T2_GR_WE_rn_ly+MN_T3_GR_WE_rn_ly+MN_T4_GR_WE_rn_ly) - 1 AS WE_GR_RN_Chg_MN , SUM( ( L3_T1_GR_WE_rn+L3_T2_GR_WE_rn+L3_T3_GR_WE_rn+L3_T4_GR_WE_rn),-( L3_T1_GR_WE_rn_ly+L3_T2_GR_WE_rn_ly+L3_T3_GR_WE_rn_ly+L3_T4_GR_WE_rn_ly)) AS WE_Gr_RN_Var_L3 , SUM( ( MN_T1_GR_WE_rn+MN_T2_GR_WE_rn+MN_T3_GR_WE_rn+MN_T4_GR_WE_rn),-( MN_T1_GR_WE_rn_ly+MN_T2_GR_WE_rn_ly+MN_T3_GR_WE_rn_ly+MN_T4_GR_WE_rn_ly)) AS WE_Gr_RN_Var_MN , ( MN_T1_GR_WE_rn/MN_T1_GR_WE_rn_ly) - 1 AS WE_T1_Gr_RN_Chg_MN , ( MN_T1_GR_WE_rn+-MN_T1_GR_WE_rn_ly) AS WE_T1_Gr_RN_Var_MN , ( L3_T1_GR_WE_rn/L3_T1_GR_WE_rn_ly) - 1 AS WE_T1_Gr_RN_Chg_L3 , ( L3_T1_GR_WE_rn+-L3_T1_GR_WE_rn_ly) AS WE_T1_Gr_RN_Var_L3 , ( L3_T1_TO_WE_rn+L3_ES_TO_WE_rn)/( c.hcap*L3_WE_days) AS WE_Occ_L3 , ( MN_T1_TO_WE_rn+MN_ES_TO_WE_rn)/( c.hcap*MN_WE_days) AS WE_Occ_MN , ( L3_ES_NQ_WD_STD_rn+L3_ES_SC_WD_STD_rn+L3_ES_OT_WD_STD_rn+L3_ES_GR_WD_STD_rn+L3_ES_CN_WD_STD_rn +L3_ES_NQ_WE_STD_rn+L3_ES_SC_WE_STD_rn+L3_ES_OT_WE_STD_rn+L3_ES_GR_WE_STD_rn+L3_ES_CN_WE_STD_rn) AS L3_STD_RN , ( L3_ES_TO_FW_rn+L3_T1_TO_FW_rn) AS L3_TOT_RN , 1 - calculated L3_STD_RN / calculated L3_TOT_RN AS PremiumRoomPool_Mix_L3 , d.MC29_RN_L12 , ( calculated L3_STD_RN+L3_ES_STD_Dem_TY+L3_T1_STD_Dem_TY) AS Studio_TotDem_L3 , ( calculated L3_TOT_RN+L3_ES_STD_Dem_TY+L3_T1_STD_Dem_TY+L3_ES_TBD_Dem_TY+L3_T1_TBD_Dem_TY) AS TotDem_L3 , ( MN_ES_STD_Dem_TY+MN_T1_STD_Dem_TY+MN_ES_TBD_Dem_TY+MN_T1_TBD_Dem_TY) / ( MN_ES_STD_Dem_LY+MN_T1_STD_Dem_LY+MN_ES_TBD_Dem_LY+MN_T1_TBD_Dem_LY) - 1 AS ES_Add_Demand_Chg_MN , ( L3_ES_STD_Dem_TY+L3_T1_STD_Dem_TY+L3_ES_TBD_Dem_TY+L3_T1_TBD_Dem_TY) / ( L3_ES_STD_Dem_LY+L3_T1_STD_Dem_LY+L3_ES_TBD_Dem_LY+L3_T1_TBD_Dem_LY) - 1 AS ES_Add_Demand_Chg_L3 , ( MN_T2_GR_FW_rv/MN_T2_GR_FW_rn) AS T2_GR_ADR_MN , ( MN_T3_GR_FW_rv/MN_T3_GR_FW_rn) AS T3_GR_ADR_MN , ( MN_T4_GR_FW_rv/MN_T4_GR_FW_rn) AS T4_GR_ADR_MN , ( MN_T2_GR_FW_rv_ly/MN_T2_GR_FW_rn_ly) AS T2_GR_ADR_LY_MN , ( MN_T3_GR_FW_rv_ly/MN_T3_GR_FW_rn_ly) AS T3_GR_ADR_LY_MN , ( MN_T4_GR_FW_rv_ly/MN_T4_GR_FW_rn_ly) AS T4_GR_ADR_LY_MN , ( calculated T2_GR_ADR_MN / calculated T2_GR_ADR_LY_MN) - 1 AS T2_GR_ADR_Chg_MN , ( calculated T3_GR_ADR_MN / calculated T3_GR_ADR_LY_MN) - 1 AS T3_GR_ADR_Chg_MN , ( calculated T4_GR_ADR_MN / calculated T4_GR_ADR_LY_MN) - 1 AS T4_GR_ADR_Chg_MN , ( MN_T2_12_FW_rv/MN_T2_12_FW_rn) AS T2_12_ADR_MN , ( MN_T3_12_FW_rv/MN_T3_12_FW_rn) AS T3_12_ADR_MN , ( MN_T4_12_FW_rv/MN_T4_12_FW_rn) AS T4_12_ADR_MN , ( MN_T2_12_FW_rv_ly/MN_T2_12_FW_rn_ly) AS T2_12_ADR_LY_MN , ( MN_T3_12_FW_rv_ly/MN_T3_12_FW_rn_ly) AS T3_12_ADR_LY_MN , ( MN_T4_12_FW_rv_ly/MN_T4_12_FW_rn_ly) AS T4_12_ADR_LY_MN , ( calculated T2_12_ADR_MN / calculated T2_12_ADR_LY_MN) - 1 AS T2_12_ADR_Chg_MN , ( calculated T3_12_ADR_MN / calculated T3_12_ADR_LY_MN) - 1 AS T3_12_ADR_Chg_MN , ( calculated T4_12_ADR_MN / calculated T4_12_ADR_LY_MN) - 1 AS T4_12_ADR_Chg_MN , f.EsOcc_YTD, f.EsOcc_chg_YTD , f.EsADR_YTD, f.EsADR_chg_YTD , f.EsRevPAR_YTD, f.EsRevPAR_chg_YTD , L3_T1_GV_WD_rn/L3_T1_TO_WD_rn AS T1_WD_GV_MIX_L3 , L3_ES_GV_FW_rn/L3_ES_TO_FW_rn AS ES_FW_GV_MIX_L3 , MN_T1_12_WD_rv/MN_T1_12_WD_rn AS T1_WD_MC12_ADR_MN , ( MN_T2_12_FW_rv+MN_T3_12_FW_rv+MN_T4_12_FW_rv)/( MN_T2_12_FW_rn+MN_T3_12_FW_rn+MN_T4_12_FW_rn) AS ES_FW_MC12_ADR_MN FROM tran2_mrdw AS a INNER JOIN daysinmonth AS b ON a.yrmo=b.yrmo INNER JOIN prop_master AS c ON a.marsha=c.marsha LEFT JOIN MC29_RN_L12 AS d ON a.marsha=d.property_cd LEFT JOIN tran_adem AS e ON a.marsha=e.marsha LEFT JOIN esytddata AS f ON a.marsha=f.marsha ORDER BY a.marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESFactor_MRDW_Data_Pull.sas
" CREATE TABLE all_rpo AS  (  select prop_code, stydt,FCST_OCC_CURR,STYDOW FROM aw_TGT_PROXY_DBO.IT_CACHE_PW_OUTPUT_TGT WHERE EXECUTION_DT = &dte  )  ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF_-_OY_Forecast.sas
" CREATE TABLE fw_fcst AS select PROP_CODE, 100*year( STYDT)+month( STYDT) AS yrmo, AVG( FCST_OCC_CURR)/100 AS FW_OY_FCST FROM all_rpo GROUP BY PROP_CODE, calculated yrmo;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF_-_OY_Forecast.sas
" CREATE TABLE WD_fcst AS select PROP_CODE, 100*year( STYDT)+month( STYDT) AS yrmo, AVG( FCST_OCC_CURR)/100 AS WD_OY_FCST FROM all_rpo WHERE STYDOW not IN ( 'FRI', 'SAT') GROUP BY PROP_CODE, calculated yrmo;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF_-_OY_Forecast.sas
" CREATE TABLE WE_fcst AS select PROP_CODE, 100*year( STYDT)+month( STYDT) AS yrmo, AVG( FCST_OCC_CURR)/100 AS WE_OY_FCST FROM all_rpo WHERE STYDOW IN ( 'FRI', 'SAT') GROUP BY PROP_CODE, calculated yrmo;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF_-_OY_Forecast.sas
" CREATE TABLE WED_fcst AS select PROP_CODE, 100*year( STYDT)+month( STYDT) AS yrmo, AVG( FCST_OCC_CURR)/100 AS WED_OY_FCST FROM all_rpo WHERE STYDOW ='WED' GROUP BY PROP_CODE, calculated yrmo;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF_-_OY_Forecast.sas
" CREATE TABLE TUEWED_fcst AS select PROP_CODE, COUNT( PROP_CODE) AS midweek_occ_ge80_num FROM all_rpo WHERE STYDOW ='WED' AND 100*year( STYDT)+month( STYDT) IN ( &mo_out1, &mo_out2, &mo_out3) AND FCST_OCC_CURR/100>=.8 GROUP BY PROP_CODE;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF_-_OY_Forecast.sas
" CREATE TABLE Sat_fcst AS select PROP_CODE, 100*year( STYDT)+month( STYDT) AS yrmo, AVG( FCST_OCC_CURR/100) AS SAT_OY_FCST FROM all_rpo WHERE STYDOW ='SAT' GROUP BY PROP_CODE, calculated yrmo;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF_-_OY_Forecast.sas
" CREATE TABLE all_fcst AS select a.PROP_CODE, a.yrmo, a.FW_OY_FCST, b.WD_OY_FCST, c.WE_OY_FCST, d.WED_OY_FCST, e.SAT_OY_FCST FROM fw_fcst AS a LEFT JOIN wd_fcst AS b ON a.PROP_CODE=b.PROP_CODE AND a.yrmo=b.yrmo LEFT JOIN we_fcst AS c ON a.PROP_CODE=c.PROP_CODE AND a.yrmo=c.yrmo LEFT JOIN wed_fcst AS d ON a.PROP_CODE=d.PROP_CODE AND a.yrmo=d.yrmo LEFT JOIN sat_fcst AS e ON a.PROP_CODE=e.PROP_CODE AND a.yrmo=e.yrmo;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF_-_OY_Forecast.sas
 CREATE TABLE fcst_1mo AS ( SELECT  *  FROM all_fcst  WHERE yrmo=&mo_out1);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF_-_OY_Forecast.sas
 CREATE TABLE fcst_2mo AS ( SELECT  *  FROM all_fcst  WHERE yrmo=&mo_out2);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF_-_OY_Forecast.sas
 CREATE TABLE fcst_3mo AS ( SELECT  *  FROM all_fcst  WHERE yrmo=&mo_out3);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF_-_OY_Forecast.sas
" CREATE TABLE ESF.esf_oy_forecast AS select coalesce( a.PROP_CODE,b.PROP_CODE,c.PROP_CODE) AS MARSHA , a.FW_OY_FCST AS FW_OY_FCST_Occ_1MO, a.WD_OY_FCST AS WD_OY_FCST_Occ_1MO , a.WE_OY_FCST AS WE_OY_FCST_Occ_1MO, a.WED_OY_FCST AS Wed_Occ_1MO , a.SAT_OY_FCST AS Sat_Occ_1MO , b.FW_OY_FCST AS FW_OY_FCST_Occ_2MO, b.WD_OY_FCST AS WD_OY_FCST_Occ_2PO , b.WE_OY_FCST AS WE_OY_FCST_Occ_2PO, b.WED_OY_FCST AS Wed_Occ_2MO , b.SAT_OY_FCST AS Sat_Occ_2MO , c.FW_OY_FCST AS FW_OY_FCST_Occ_3MO, c.WD_OY_FCST AS WD_OY_FCST_Occ_3MO , c.WE_OY_FCST AS WE_OY_FCST_Occ_3MO, c.WED_OY_FCST AS Wed_Occ_3MO , d.midweek_occ_ge80_num FROM fcst_1mo AS a full JOIN fcst_2mo AS b ON a.PROP_CODE=b.PROP_CODE full JOIN fcst_3mo AS c ON coalesce( a.PROP_CODE,b.PROP_CODE)=c.PROP_CODE LEFT JOIN TUEWED_fcst AS d ON coalesce( a.PROP_CODE,b.PROP_CODE,c.PROP_CODE)=d.PROP_CODE;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_ESF_-_OY_Forecast.sas
" CREATE TABLE hotel_data AS select a.MARSHA, b.MARSHA_NEW , CASE WHEN b.BRND IN ( 'FS', 'JW') THEN 'Marriott Hotels' ELSE b.BRND_NAME END AS BRND_NAME , e.BRAND_VERSION , e.Comp_Status_per_YE17_Tree_Node AS FRAN_COMP , COUNT( a.YRMNTH) AS PROP_COUNT , SUM( MARAVAIL) AS MARAVAIL, SUM( MARSOLD) AS MARSOLD, SUM( MARREV) AS MARREV , SUM( MKTAVAIL) AS MKTAVAIL, SUM( MKTSOLD) AS MKTSOLD, SUM( MKTREV) AS MKTREV , SUM( MARSOLD) / SUM( MARAVAIL) AS OCCUPANCY , SUM( MARREV) / SUM( MARSOLD) AS ADR , SUM( MARREV) /SUM( MARAVAIL) AS REVPAR , SUM( MARREV) / SUM( MARAVAIL) / ( SUM( MKTREV) / SUM( MKTAVAIL)) * 100 AS REVPAR_INDEX FROM CMP.STR_MONTHLY_DATA a LEFT JOIN TGT_BUS.PROPERTY_MASTER_MISW_HIST AS b ON a.MARSHA = b.MARSHA AND a.ASOF_YRMO = b.ASOF_YRMO LEFT JOIN FDD_Comp AS e ON b.MARSHA_NEW = e.MARSHA WHERE a.TIMEF ='MONTH' AND a.DATA_CATEGORY = 'Rooms' AND a.CURRENCY_TYPE = 'Constant USD' AND a.ASOF_YRMO = &YRMNTH. AND a.YRMNTH > &YRMNTH. - 100 AND b.COUNTRY IN ( 'United States', 'Canada') AND a.MARAVAIL * a.MARREV * a.MKTAVAIL * a.MKTREV > 0 AND e.Comp_Status_per_YE17_Tree_Node <> """" AND e.Brand_Acro not IN ( 'IND-SW', 'IND') GROUP BY a.MARSHA, b.MARSHA_NEW, calculated BRND_NAME, e.BRAND_VERSION, e.Comp_Status_per_YE17_Tree_Node;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_FDD_incl_Hotel_Detail_Converted_to_AW.sas
CREATE TABLE hotel_detail AS ( SELECT  *  FROM hotel_data );,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_FDD_incl_Hotel_Detail_Converted_to_AW.sas
"ALTER TABLE hotel_detail DROP COLUMN MARAVAIL ,  MARSOLD ,  MARREV ,  MKTAVAIL ,  MKTSOLD ,  MKTREV ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_FDD_incl_Hotel_Detail_Converted_to_AW.sas
"CREATE TABLE ""&OUTPUT.\FDD Backup &Run_Date..xlsb"" AS ( SELECT * FROM hotel_detail) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_FDD_incl_Hotel_Detail_Converted_to_AW.sas
" CREATE TABLE incomplete_data AS select e.MARSHA AS MARSHA_NEW, ""Incomplete STAR Data"" AS REASON FROM FDD_Comp AS e LEFT JOIN hotel_data AS h ON e.MARSHA = h.MARSHA_NEW WHERE h.MARSHA_NEW = """" AND e.MARSHA <> """" AND e.MARSHA <> ""."" ORDER BY e.MARSHA;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_FDD_incl_Hotel_Detail_Converted_to_AW.sas
"CREATE TABLE ""&OUTPUT.\FDD Backup &Run_Date..xlsb"" AS ( SELECT * FROM incomplete_data) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_FDD_incl_Hotel_Detail_Converted_to_AW.sas
" CREATE TABLE brand_data AS select a.BRND_NAME, a.FRAN_COMP , COUNT( a.MARSHA) AS PROP_COUNT , SUM( MARAVAIL) AS MARAVAIL, SUM( MARSOLD) AS MARSOLD, SUM( MARREV) AS MARREV , SUM( MKTAVAIL) AS MKTAVAIL, SUM( MKTSOLD) AS MKTSOLD, SUM( MKTREV) AS MKTREV , max( OCCUPANCY) AS MAX_OCC, min( OCCUPANCY) AS MIN_OCC , max( ADR) AS MAX_ADR, min( ADR) AS MIN_ADR , max( REVPAR) AS MAX_REVPAR, min( REVPAR) AS MIN_REVPAR , max( REVPAR_INDEX) AS MAX_REVPAR_INDEX, min( REVPAR_INDEX) AS MIN_REVPAR_INDEX FROM hotel_data a WHERE a.FRAN_COMP = ""LY_COMP"" GROUP BY a.BRND_NAME, a.FRAN_COMP;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_FDD_incl_Hotel_Detail_Converted_to_AW.sas
" CREATE TABLE avg_calcs AS select a.BRND_NAME, a.PROP_COUNT , MAX_OCC, MIN_OCC, MAX_ADR, MIN_ADR, MAX_REVPAR, MIN_REVPAR, MAX_REVPAR_INDEX, MIN_REVPAR_INDEX , a.MARSOLD / a.MARAVAIL AS AVG_OCC , a.MARREV / a.MARSOLD AS AVG_ADR , a.MARREV / a.MARAVAIL AS AVG_REVPAR , a.MARREV / a.MARAVAIL / ( a.MKTREV / MKTAVAIL) * 100 AS AVG_REVPAR_INDEX FROM brand_data a;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_FDD_incl_Hotel_Detail_Converted_to_AW.sas
" CREATE TABLE count_higher AS select a.MARSHA_NEW, b.BRND_NAME , CASE WHEN a.OCCUPANCY > AVG_OCC THEN 1 END AS ABOVE_AVG_OCC , CASE WHEN a.ADR > AVG_ADR THEN 1 END AS ABOVE_AVG_ADR , CASE WHEN a.REVPAR > AVG_REVPAR THEN 1 END AS ABOVE_AVG_REVPAR , CASE WHEN a.REVPAR_INDEX > AVG_REVPAR_INDEX THEN 1 END AS ABOVE_AVG_REVPAR_INDEX FROM hotel_data a LEFT JOIN avg_calcs AS b ON a.BRND_NAME = b.BRND_NAME ORDER BY a.MARSHA_NEW;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_FDD_incl_Hotel_Detail_Converted_to_AW.sas
" CREATE TABLE all_brand_data AS select a.BRND_NAME, b.PROP_COUNT , b.MAX_OCC, b.MIN_OCC, b.MAX_ADR, b.MIN_ADR , b.MAX_REVPAR, b.MIN_REVPAR, b.MAX_REVPAR_INDEX, b.MIN_REVPAR_INDEX , b.AVG_OCC, b.AVG_ADR, b.AVG_REVPAR, b.AVG_REVPAR_INDEX , SUM( a.ABOVE_AVG_OCC) AS ABOVE_AVG_OCC , SUM( a.ABOVE_AVG_ADR) AS ABOVE_AVG_ADR , SUM( a.ABOVE_AVG_REVPAR) AS ABOVE_AVG_REVPAR , SUM( a.ABOVE_AVG_REVPAR_INDEX) AS ABOVE_AVG_REVPAR_INDEX , SUM( a.ABOVE_AVG_OCC) / b.PROP_COUNT AS PCT_ABOVE_AVG_OCC , SUM( a.ABOVE_AVG_ADR) / b.PROP_COUNT AS PCT_ABOVE_AVG_ADR , SUM( a.ABOVE_AVG_REVPAR) / b.PROP_COUNT AS PCT_ABOVE_AVG_REVPAR , SUM( a.ABOVE_AVG_REVPAR_INDEX) / b.PROP_COUNT AS PCT_ABOVE_AVG_REVPAR_INDEX , c.median_Occ, c.median_ADR, c.median_REVPAR, c.median_RPI FROM count_higher a LEFT JOIN avg_calcs AS b ON a.BRND_NAME = b.BRND_NAME LEFT JOIN Medians AS c ON a.BRND_NAME = c.BRND_NAME GROUP BY a.BRND_NAME, b.PROP_COUNT , b.MAX_OCC, b.MIN_OCC, b.MAX_ADR, b.MIN_ADR , b.MAX_REVPAR, b.MIN_REVPAR, b.MAX_REVPAR_INDEX, b.MIN_REVPAR_INDEX , b.AVG_OCC, b.AVG_ADR, b.AVG_REVPAR, b.AVG_REVPAR_INDEX , c.median_Occ, c.median_ADR, c.median_REVPAR, c.median_RPI;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_FDD_incl_Hotel_Detail_Converted_to_AW.sas
"CREATE TABLE ""&OUTPUT.\FDD Backup &Run_Date..xlsb"" AS ( SELECT * FROM all_brand_data) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_FDD_incl_Hotel_Detail_Converted_to_AW.sas
"CREATE TABLE gen_hotel_detail AS ( SELECT  *  FROM hotel_data  WHERE BRND_NAME = ""SpringHill Suites"" AND BRAND_VERSION IN ( ""Gen 4' '0"", ""Gen 4' '0+"", ""Gen 4' '5"" ) );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_FDD_incl_Hotel_Detail_Converted_to_AW.sas
"ALTER TABLE gen_hotel_detail DROP COLUMN MARAVAIL ,  MARSOLD ,  MARREV ,  MKTAVAIL ,  MKTSOLD ,  MKTREV ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_FDD_incl_Hotel_Detail_Converted_to_AW.sas
"CREATE TABLE ""&OUTPUT.\FDD Backup &Run_Date..xlsb"" AS ( SELECT * FROM gen_hotel_detail) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_FDD_incl_Hotel_Detail_Converted_to_AW.sas
" CREATE TABLE gen_data AS select a.BRND_NAME, a.FRAN_COMP, CASE WHEN a.BRAND_VERSION <> """" THEN ""Y"" ELSE ""N"" END AS GENERATION , COUNT( a.MARSHA) AS PROP_COUNT , SUM( MARAVAIL) AS MARAVAIL, SUM( MARSOLD) AS MARSOLD, SUM( MARREV) AS MARREV , SUM( MKTAVAIL) AS MKTAVAIL, SUM( MKTSOLD) AS MKTSOLD, SUM( MKTREV) AS MKTREV , max( OCCUPANCY) AS MAX_OCC, min( OCCUPANCY) AS MIN_OCC , max( ADR) AS MAX_ADR, min( ADR) AS MIN_ADR , max( REVPAR) AS MAX_REVPAR, min( REVPAR) AS MIN_REVPAR , max( REVPAR_INDEX) AS MAX_REVPAR_INDEX, min( REVPAR_INDEX) AS MIN_REVPAR_INDEX FROM hotel_data a WHERE a.BRND_NAME = ""SpringHill Suites"" AND a.BRAND_VERSION IN ( ""Gen 4.0"", ""Gen 4.0+"", ""Gen 4.5"") GROUP BY a.BRND_NAME, a.FRAN_COMP, calculated GENERATION;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_FDD_incl_Hotel_Detail_Converted_to_AW.sas
" CREATE TABLE gen_avg_calcs AS select a.BRND_NAME, a.GENERATION, a.PROP_COUNT , MAX_OCC, MIN_OCC, MAX_ADR, MIN_ADR, MAX_REVPAR, MIN_REVPAR, MAX_REVPAR_INDEX, MIN_REVPAR_INDEX , a.MARSOLD / a.MARAVAIL AS AVG_OCC , a.MARREV / a.MARSOLD AS AVG_ADR , a.MARREV / a.MARAVAIL AS AVG_REVPAR , a.MARREV / a.MARAVAIL / ( a.MKTREV / MKTAVAIL) * 100 AS AVG_REVPAR_INDEX FROM gen_data a;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_FDD_incl_Hotel_Detail_Converted_to_AW.sas
" CREATE TABLE gen_count_higher AS select a.MARSHA_NEW, b.BRND_NAME , CASE WHEN a.OCCUPANCY > AVG_OCC THEN 1 END AS ABOVE_AVG_OCC , CASE WHEN a.ADR > AVG_ADR THEN 1 END AS ABOVE_AVG_ADR , CASE WHEN a.REVPAR > AVG_REVPAR THEN 1 END AS ABOVE_AVG_REVPAR , CASE WHEN a.REVPAR_INDEX > AVG_REVPAR_INDEX THEN 1 END AS ABOVE_AVG_REVPAR_INDEX FROM hotel_data a LEFT JOIN gen_avg_calcs AS b ON a.BRND_NAME = b.BRND_NAME WHERE a.BRND_NAME = ""SpringHill Suites"" AND a.BRAND_VERSION IN ( ""Gen 4.0"", ""Gen 4.0+"", ""Gen 4.5"") ORDER BY a.MARSHA_NEW;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_FDD_incl_Hotel_Detail_Converted_to_AW.sas
" CREATE TABLE all_gen_data AS select a.BRND_NAME, b.GENERATION, b.PROP_COUNT , b.MAX_OCC, b.MIN_OCC, b.MAX_ADR, b.MIN_ADR , b.MAX_REVPAR, b.MIN_REVPAR, b.MAX_REVPAR_INDEX, b.MIN_REVPAR_INDEX , b.AVG_OCC, b.AVG_ADR, b.AVG_REVPAR, b.AVG_REVPAR_INDEX , SUM( a.ABOVE_AVG_OCC) AS ABOVE_AVG_OCC , SUM( a.ABOVE_AVG_ADR) AS ABOVE_AVG_ADR , SUM( a.ABOVE_AVG_REVPAR) AS ABOVE_AVG_REVPAR , SUM( a.ABOVE_AVG_REVPAR_INDEX) AS ABOVE_AVG_REVPAR_INDEX , SUM( a.ABOVE_AVG_OCC) / b.PROP_COUNT AS PCT_ABOVE_AVG_OCC , SUM( a.ABOVE_AVG_ADR) / b.PROP_COUNT AS PCT_ABOVE_AVG_ADR , SUM( a.ABOVE_AVG_REVPAR) / b.PROP_COUNT AS PCT_ABOVE_AVG_REVPAR , SUM( a.ABOVE_AVG_REVPAR_INDEX) / b.PROP_COUNT AS PCT_ABOVE_AVG_REVPAR_INDEX , c.median_Occ, c.median_ADR, c.median_REVPAR, c.median_RPI FROM gen_count_higher a LEFT JOIN gen_avg_calcs AS b ON a.BRND_NAME = b.BRND_NAME LEFT JOIN gen_medians AS c ON a.BRND_NAME = c.BRND_NAME GROUP BY a.BRND_NAME, b.GENERATION, b.PROP_COUNT , b.MAX_OCC, b.MIN_OCC, b.MAX_ADR, b.MIN_ADR , b.MAX_REVPAR, b.MIN_REVPAR, b.MAX_REVPAR_INDEX, b.MIN_REVPAR_INDEX , b.AVG_OCC, b.AVG_ADR, b.AVG_REVPAR, b.AVG_REVPAR_INDEX , c.median_Occ, c.median_ADR, c.median_REVPAR, c.median_RPI;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_FDD_incl_Hotel_Detail_Converted_to_AW.sas
"CREATE TABLE ""&OUTPUT.\FDD Backup &Run_Date..xlsb"" AS ( SELECT * FROM all_gen_data) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_FDD_incl_Hotel_Detail_Converted_to_AW.sas
" CREATE TABLE one_plus_2_hotel_data AS select a.MARSHA, b.MARSHA_NEW, b.BRND_NAME , ""Y"" AS FRAN_COMP , COUNT( a.YRMNTH) AS PROP_COUNT , SUM( MARAVAIL) AS MARAVAIL, SUM( MARSOLD) AS MARSOLD, SUM( MARREV) AS MARREV , SUM( MKTAVAIL) AS MKTAVAIL, SUM( MKTSOLD) AS MKTSOLD, SUM( MKTREV) AS MKTREV , SUM( MARSOLD) / SUM( MARAVAIL) AS OCCUPANCY , SUM( MARREV) / SUM( MARSOLD) AS ADR , SUM( MARREV) /SUM( MARAVAIL) AS REVPAR , SUM( MARREV) / SUM( MARAVAIL) / ( SUM( MKTREV) / SUM( MKTAVAIL)) * 100 AS REVPAR_INDEX FROM CMP.STR_MONTHLY_DATA a LEFT JOIN TGT_BUS.PROPERTY_MASTER_MISW_HIST AS b ON a.MARSHA = b.MARSHA AND a.ASOF_YRMO = b.ASOF_YRMO LEFT JOIN FDD_Comp AS e ON b.MARSHA_NEW = e.MARSHA LEFT JOIN Open_One_Year_FDD_Comp AS g ON b.MARSHA_NEW = g.MARSHA WHERE a.TIMEF ='MONTH' AND a.DATA_CATEGORY = 'Rooms' AND a.CURRENCY_TYPE = 'Constant USD' AND a.ASOF_YRMO = &YRMNTH. AND a.YRMNTH > &YRMNTH. - 100 AND b.COUNTRY IN ( 'United States', 'Canada') AND a.MARAVAIL * a.MARREV * a.MKTAVAIL * a.MKTREV > 0 AND ( g.MARSHA <> """" OR e.Comp_Status_per_YE17_Tree_Node <> """") AND e.Brand_Acro not IN ( 'IND-SW', 'IND') GROUP BY a.MARSHA, b.MARSHA_NEW, b.BRND_NAME;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_FDD_incl_Hotel_Detail_Converted_to_AW.sas
CREATE TABLE one_plus_2_detail AS ( SELECT  *  FROM one_plus_2_hotel_data  WHERE PROP_COUNT = 12);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_FDD_incl_Hotel_Detail_Converted_to_AW.sas
"ALTER TABLE one_plus_2_detail DROP COLUMN MARAVAIL ,  MARSOLD ,  MARREV ,  MKTAVAIL ,  MKTSOLD ,  MKTREV ,  PROP_COUNT ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_FDD_incl_Hotel_Detail_Converted_to_AW.sas
"CREATE TABLE ""&OUTPUT.\FDD Backup &Run_Date..xlsb"" AS ( SELECT * FROM one_plus_2_detail) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_FDD_incl_Hotel_Detail_Converted_to_AW.sas
" CREATE TABLE one_plus_2_data AS select a.BRND_NAME , COUNT( a.MARSHA) AS PROP_COUNT , SUM( MARAVAIL) AS MARAVAIL, SUM( MARSOLD) AS MARSOLD, SUM( MARREV) AS MARREV , SUM( MKTAVAIL) AS MKTAVAIL, SUM( MKTSOLD) AS MKTSOLD, SUM( MKTREV) AS MKTREV , max( OCCUPANCY) AS MAX_OCC, min( OCCUPANCY) AS MIN_OCC , max( ADR) AS MAX_ADR, min( ADR) AS MIN_ADR , max( REVPAR) AS MAX_REVPAR, min( REVPAR) AS MIN_REVPAR , max( REVPAR_INDEX) AS MAX_REVPAR_INDEX, min( REVPAR_INDEX) AS MIN_REVPAR_INDEX FROM one_plus_2_hotel_data a WHERE a.PROP_COUNT = 12 GROUP BY a.BRND_NAME;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_FDD_incl_Hotel_Detail_Converted_to_AW.sas
" CREATE TABLE one_plus_2_avg_calcs AS select a.BRND_NAME, a.PROP_COUNT , MAX_OCC, MIN_OCC, MAX_ADR, MIN_ADR, MAX_REVPAR, MIN_REVPAR, MAX_REVPAR_INDEX, MIN_REVPAR_INDEX , a.MARSOLD / a.MARAVAIL AS AVG_OCC , a.MARREV / a.MARSOLD AS AVG_ADR , a.MARREV / a.MARAVAIL AS AVG_REVPAR , a.MARREV / a.MARAVAIL / ( a.MKTREV / MKTAVAIL) * 100 AS AVG_REVPAR_INDEX FROM one_plus_2_data a;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_FDD_incl_Hotel_Detail_Converted_to_AW.sas
" CREATE TABLE one_plus_2_count_higher AS select a.MARSHA_NEW, b.BRND_NAME , CASE WHEN a.OCCUPANCY > AVG_OCC THEN 1 END AS ABOVE_AVG_OCC , CASE WHEN a.ADR > AVG_ADR THEN 1 END AS ABOVE_AVG_ADR , CASE WHEN a.REVPAR > AVG_REVPAR THEN 1 END AS ABOVE_AVG_REVPAR , CASE WHEN a.REVPAR_INDEX > AVG_REVPAR_INDEX THEN 1 END AS ABOVE_AVG_REVPAR_INDEX FROM one_plus_2_hotel_data a LEFT JOIN one_plus_2_avg_calcs AS b ON a.BRND_NAME = b.BRND_NAME WHERE a.PROP_COUNT = 12 ORDER BY a.MARSHA_NEW;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_FDD_incl_Hotel_Detail_Converted_to_AW.sas
" CREATE TABLE all_one_plus_2_data AS select a.BRND_NAME, b.PROP_COUNT , b.MAX_OCC, b.MIN_OCC, b.MAX_ADR, b.MIN_ADR , b.MAX_REVPAR, b.MIN_REVPAR, b.MAX_REVPAR_INDEX, b.MIN_REVPAR_INDEX , b.AVG_OCC, b.AVG_ADR, b.AVG_REVPAR, b.AVG_REVPAR_INDEX , SUM( a.ABOVE_AVG_OCC) AS ABOVE_AVG_OCC , SUM( a.ABOVE_AVG_ADR) AS ABOVE_AVG_ADR , SUM( a.ABOVE_AVG_REVPAR) AS ABOVE_AVG_REVPAR , SUM( a.ABOVE_AVG_REVPAR_INDEX) AS ABOVE_AVG_REVPAR_INDEX , SUM( a.ABOVE_AVG_OCC) / b.PROP_COUNT AS PCT_ABOVE_AVG_OCC , SUM( a.ABOVE_AVG_ADR) / b.PROP_COUNT AS PCT_ABOVE_AVG_ADR , SUM( a.ABOVE_AVG_REVPAR) / b.PROP_COUNT AS PCT_ABOVE_AVG_REVPAR , SUM( a.ABOVE_AVG_REVPAR_INDEX) / b.PROP_COUNT AS PCT_ABOVE_AVG_REVPAR_INDEX FROM one_plus_2_count_higher a LEFT JOIN one_plus_2_avg_calcs AS b ON a.BRND_NAME = b.BRND_NAME GROUP BY a.BRND_NAME, b.PROP_COUNT , b.MAX_OCC, b.MIN_OCC, b.MAX_ADR, b.MIN_ADR , b.MAX_REVPAR, b.MIN_REVPAR, b.MAX_REVPAR_INDEX, b.MIN_REVPAR_INDEX , b.AVG_OCC, b.AVG_ADR, b.AVG_REVPAR, b.AVG_REVPAR_INDEX;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_FDD_incl_Hotel_Detail_Converted_to_AW.sas
"CREATE TABLE ""&OUTPUT.\FDD Backup &Run_Date..xlsb"" AS ( SELECT * FROM all_one_plus_2_data) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_FDD_incl_Hotel_Detail_Converted_to_AW.sas
" CREATE TABLE one_year_hotel_data AS select a.MARSHA, b.MARSHA_NEW, b.BRND_NAME , ""Y"" AS FRAN_COMP , COUNT( a.YRMNTH) AS PROP_COUNT , SUM( MARAVAIL) AS MARAVAIL, SUM( MARSOLD) AS MARSOLD, SUM( MARREV) AS MARREV , SUM( MKTAVAIL) AS MKTAVAIL, SUM( MKTSOLD) AS MKTSOLD, SUM( MKTREV) AS MKTREV , SUM( MARSOLD) / SUM( MARAVAIL) AS OCCUPANCY , SUM( MARREV) / SUM( MARSOLD) AS ADR , SUM( MARREV) /SUM( MARAVAIL) AS REVPAR , SUM( MARREV) / SUM( MARAVAIL) / ( SUM( MKTREV) / SUM( MKTAVAIL)) * 100 AS REVPAR_INDEX FROM CMP.STR_MONTHLY_DATA a LEFT JOIN TGT_BUS.PROPERTY_MASTER_MISW_HIST AS b ON a.MARSHA = b.MARSHA AND a.ASOF_YRMO = b.ASOF_YRMO LEFT JOIN Open_One_Year_FDD_Comp AS g ON b.MARSHA_NEW = g.MARSHA WHERE a.TIMEF ='MONTH' AND a.DATA_CATEGORY = 'Rooms' AND a.CURRENCY_TYPE = 'Constant USD' AND a.ASOF_YRMO = &YRMNTH. AND a.YRMNTH > &YRMNTH. - 100 AND b.COUNTRY IN ( 'United States', 'Canada') AND a.MARAVAIL * a.MARREV * a.MKTAVAIL * a.MKTREV > 0 AND g.MARSHA <> """" AND g.Brand_Acro not IN ( 'IND-SW', 'IND') GROUP BY a.MARSHA, b.MARSHA_NEW, b.BRND_NAME;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_FDD_incl_Hotel_Detail_Converted_to_AW.sas
CREATE TABLE one_year_detail AS ( SELECT  *  FROM one_year_hotel_data  WHERE PROP_COUNT = 12);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_FDD_incl_Hotel_Detail_Converted_to_AW.sas
"ALTER TABLE one_year_detail DROP COLUMN MARAVAIL ,  MARSOLD ,  MARREV ,  MKTAVAIL ,  MKTSOLD ,  MKTREV ,  PROP_COUNT ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_FDD_incl_Hotel_Detail_Converted_to_AW.sas
"CREATE TABLE ""&OUTPUT.\FDD Backup &Run_Date..xlsb"" AS ( SELECT * FROM one_year_detail) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_FDD_incl_Hotel_Detail_Converted_to_AW.sas
" CREATE TABLE one_year_data AS select a.BRND_NAME , COUNT( a.MARSHA) AS PROP_COUNT , SUM( MARAVAIL) AS MARAVAIL, SUM( MARSOLD) AS MARSOLD, SUM( MARREV) AS MARREV , SUM( MKTAVAIL) AS MKTAVAIL, SUM( MKTSOLD) AS MKTSOLD, SUM( MKTREV) AS MKTREV , max( OCCUPANCY) AS MAX_OCC, min( OCCUPANCY) AS MIN_OCC , max( ADR) AS MAX_ADR, min( ADR) AS MIN_ADR , max( REVPAR) AS MAX_REVPAR, min( REVPAR) AS MIN_REVPAR , max( REVPAR_INDEX) AS MAX_REVPAR_INDEX, min( REVPAR_INDEX) AS MIN_REVPAR_INDEX FROM one_year_hotel_data a WHERE a.PROP_COUNT = 12 GROUP BY a.BRND_NAME;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_FDD_incl_Hotel_Detail_Converted_to_AW.sas
" CREATE TABLE one_year_avg_calcs AS select a.BRND_NAME, a.PROP_COUNT , MAX_OCC, MIN_OCC, MAX_ADR, MIN_ADR, MAX_REVPAR, MIN_REVPAR, MAX_REVPAR_INDEX, MIN_REVPAR_INDEX , a.MARSOLD / a.MARAVAIL AS AVG_OCC , a.MARREV / a.MARSOLD AS AVG_ADR , a.MARREV / a.MARAVAIL AS AVG_REVPAR , a.MARREV / a.MARAVAIL / ( a.MKTREV / MKTAVAIL) * 100 AS AVG_REVPAR_INDEX FROM one_year_data a;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_FDD_incl_Hotel_Detail_Converted_to_AW.sas
" CREATE TABLE one_year_count_higher AS select a.MARSHA_NEW, b.BRND_NAME , CASE WHEN a.OCCUPANCY > AVG_OCC THEN 1 END AS ABOVE_AVG_OCC , CASE WHEN a.ADR > AVG_ADR THEN 1 END AS ABOVE_AVG_ADR , CASE WHEN a.REVPAR > AVG_REVPAR THEN 1 END AS ABOVE_AVG_REVPAR , CASE WHEN a.REVPAR_INDEX > AVG_REVPAR_INDEX THEN 1 END AS ABOVE_AVG_REVPAR_INDEX FROM one_year_hotel_data a LEFT JOIN one_year_avg_calcs AS b ON a.BRND_NAME = b.BRND_NAME WHERE a.PROP_COUNT = 12 ORDER BY a.MARSHA_NEW;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_FDD_incl_Hotel_Detail_Converted_to_AW.sas
" CREATE TABLE all_one_year_data AS select a.BRND_NAME, b.PROP_COUNT , b.MAX_OCC, b.MIN_OCC, b.MAX_ADR, b.MIN_ADR , b.MAX_REVPAR, b.MIN_REVPAR, b.MAX_REVPAR_INDEX, b.MIN_REVPAR_INDEX , b.AVG_OCC, b.AVG_ADR, b.AVG_REVPAR, b.AVG_REVPAR_INDEX , SUM( a.ABOVE_AVG_OCC) AS ABOVE_AVG_OCC , SUM( a.ABOVE_AVG_ADR) AS ABOVE_AVG_ADR , SUM( a.ABOVE_AVG_REVPAR) AS ABOVE_AVG_REVPAR , SUM( a.ABOVE_AVG_REVPAR_INDEX) AS ABOVE_AVG_REVPAR_INDEX , SUM( a.ABOVE_AVG_OCC) / b.PROP_COUNT AS PCT_ABOVE_AVG_OCC , SUM( a.ABOVE_AVG_ADR) / b.PROP_COUNT AS PCT_ABOVE_AVG_ADR , SUM( a.ABOVE_AVG_REVPAR) / b.PROP_COUNT AS PCT_ABOVE_AVG_REVPAR , SUM( a.ABOVE_AVG_REVPAR_INDEX) / b.PROP_COUNT AS PCT_ABOVE_AVG_REVPAR_INDEX FROM one_year_count_higher a LEFT JOIN one_year_avg_calcs AS b ON a.BRND_NAME = b.BRND_NAME GROUP BY a.BRND_NAME, b.PROP_COUNT , b.MAX_OCC, b.MIN_OCC, b.MAX_ADR, b.MIN_ADR , b.MAX_REVPAR, b.MIN_REVPAR, b.MAX_REVPAR_INDEX, b.MIN_REVPAR_INDEX , b.AVG_OCC, b.AVG_ADR, b.AVG_REVPAR, b.AVG_REVPAR_INDEX;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_FDD_incl_Hotel_Detail_Converted_to_AW.sas
"CREATE TABLE ""&OUTPUT.\FDD Backup &Run_Date..xlsb"" AS ( SELECT * FROM all_one_year_data) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_FDD_incl_Hotel_Detail_Converted_to_AW.sas
" CREATE TABLE CAD_hotel_data AS select a.MARSHA, b.MARSHA_NEW , CASE WHEN b.BRND IN ( 'FS', 'JW') THEN 'Marriott Hotels' ELSE b.BRND_NAME END AS BRND_NAME , e.BRAND_VERSION , e.Comp_Status_per_YE17_Tree_Node AS FRAN_COMP , COUNT( a.YRMNTH) AS PROP_COUNT , SUM( MARAVAIL) AS MARAVAIL, SUM( MARSOLD) AS MARSOLD, SUM( MARREV) AS MARREV , SUM( MKTAVAIL) AS MKTAVAIL, SUM( MKTSOLD) AS MKTSOLD, SUM( MKTREV) AS MKTREV , SUM( MARSOLD) / SUM( MARAVAIL) AS OCCUPANCY , SUM( MARREV) / SUM( MARSOLD) AS ADR , SUM( MARREV) /SUM( MARAVAIL) AS REVPAR , SUM( MARREV) / SUM( MARAVAIL) / ( SUM( MKTREV) / SUM( MKTAVAIL)) * 100 AS REVPAR_INDEX FROM CMP.STR_MONTHLY_DATA a LEFT JOIN TGT_BUS.PROPERTY_MASTER_MISW_HIST AS b ON a.MARSHA = b.MARSHA AND a.ASOF_YRMO = b.ASOF_YRMO LEFT JOIN Canada_FDD_Comp AS e ON b.MARSHA_NEW = e.MARSHA WHERE a.TIMEF ='MONTH' AND a.DATA_CATEGORY = 'Rooms' AND a.CURRENCY_TYPE = 'Local' AND a.ASOF_YRMO = &YRMNTH. AND a.YRMNTH > &YRMNTH. - 100 AND b.COUNTRY IN ( 'Canada') AND a.MARAVAIL * a.MARREV * a.MKTAVAIL * a.MKTREV > 0 AND e.Comp_Status_per_YE17_Tree_Node <> """" AND e.Brand_Acro not IN ( 'IND-SW', 'IND') GROUP BY a.MARSHA, b.MARSHA_NEW, calculated BRND_NAME, e.BRAND_VERSION, e.Comp_Status_per_YE17_Tree_Node;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_FDD_incl_Hotel_Detail_Converted_to_AW.sas
CREATE TABLE CAD_hotel_detail AS ( SELECT  *  FROM CAD_hotel_data );,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_FDD_incl_Hotel_Detail_Converted_to_AW.sas
"ALTER TABLE CAD_hotel_detail DROP COLUMN MARAVAIL ,  MARSOLD ,  MARREV ,  MKTAVAIL ,  MKTSOLD ,  MKTREV ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_FDD_incl_Hotel_Detail_Converted_to_AW.sas
"CREATE TABLE ""&OUTPUT.\FDD Backup &Run_Date..xlsb"" AS ( SELECT * FROM CAD_hotel_detail) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_FDD_incl_Hotel_Detail_Converted_to_AW.sas
" CREATE TABLE CAD_brand_data AS select a.BRND_NAME, a.FRAN_COMP , COUNT( a.MARSHA) AS PROP_COUNT , SUM( MARAVAIL) AS MARAVAIL, SUM( MARSOLD) AS MARSOLD, SUM( MARREV) AS MARREV , SUM( MKTAVAIL) AS MKTAVAIL, SUM( MKTSOLD) AS MKTSOLD, SUM( MKTREV) AS MKTREV , max( OCCUPANCY) AS MAX_OCC, min( OCCUPANCY) AS MIN_OCC , max( ADR) AS MAX_ADR, min( ADR) AS MIN_ADR , max( REVPAR) AS MAX_REVPAR, min( REVPAR) AS MIN_REVPAR , max( REVPAR_INDEX) AS MAX_REVPAR_INDEX, min( REVPAR_INDEX) AS MIN_REVPAR_INDEX FROM CAD_hotel_data a WHERE a.FRAN_COMP = ""LY_COMP"" GROUP BY a.BRND_NAME, a.FRAN_COMP;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_FDD_incl_Hotel_Detail_Converted_to_AW.sas
" CREATE TABLE CAD_avg_calcs AS select a.BRND_NAME, a.PROP_COUNT , MAX_OCC, MIN_OCC, MAX_ADR, MIN_ADR, MAX_REVPAR, MIN_REVPAR, MAX_REVPAR_INDEX, MIN_REVPAR_INDEX , a.MARSOLD / a.MARAVAIL AS AVG_OCC , a.MARREV / a.MARSOLD AS AVG_ADR , a.MARREV / a.MARAVAIL AS AVG_REVPAR , a.MARREV / a.MARAVAIL / ( a.MKTREV / MKTAVAIL) * 100 AS AVG_REVPAR_INDEX FROM CAD_brand_data a;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_FDD_incl_Hotel_Detail_Converted_to_AW.sas
" CREATE TABLE CAD_count_higher AS select a.MARSHA_NEW, b.BRND_NAME , CASE WHEN a.OCCUPANCY > AVG_OCC THEN 1 END AS ABOVE_AVG_OCC , CASE WHEN a.ADR > AVG_ADR THEN 1 END AS ABOVE_AVG_ADR , CASE WHEN a.REVPAR > AVG_REVPAR THEN 1 END AS ABOVE_AVG_REVPAR , CASE WHEN a.REVPAR_INDEX > AVG_REVPAR_INDEX THEN 1 END AS ABOVE_AVG_REVPAR_INDEX FROM CAD_hotel_data a LEFT JOIN CAD_avg_calcs AS b ON a.BRND_NAME = b.BRND_NAME ORDER BY a.MARSHA_NEW;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_FDD_incl_Hotel_Detail_Converted_to_AW.sas
" CREATE TABLE CAD_all_brand_data AS select a.BRND_NAME, b.PROP_COUNT , b.MAX_OCC, b.MIN_OCC, b.MAX_ADR, b.MIN_ADR , b.MAX_REVPAR, b.MIN_REVPAR, b.MAX_REVPAR_INDEX, b.MIN_REVPAR_INDEX , b.AVG_OCC, b.AVG_ADR, b.AVG_REVPAR, b.AVG_REVPAR_INDEX , SUM( a.ABOVE_AVG_OCC) AS ABOVE_AVG_OCC , SUM( a.ABOVE_AVG_ADR) AS ABOVE_AVG_ADR , SUM( a.ABOVE_AVG_REVPAR) AS ABOVE_AVG_REVPAR , SUM( a.ABOVE_AVG_REVPAR_INDEX) AS ABOVE_AVG_REVPAR_INDEX , SUM( a.ABOVE_AVG_OCC) / b.PROP_COUNT AS PCT_ABOVE_AVG_OCC , SUM( a.ABOVE_AVG_ADR) / b.PROP_COUNT AS PCT_ABOVE_AVG_ADR , SUM( a.ABOVE_AVG_REVPAR) / b.PROP_COUNT AS PCT_ABOVE_AVG_REVPAR , SUM( a.ABOVE_AVG_REVPAR_INDEX) / b.PROP_COUNT AS PCT_ABOVE_AVG_REVPAR_INDEX , c.median_Occ, c.median_ADR, c.median_REVPAR, c.median_RPI FROM CAD_count_higher a LEFT JOIN CAD_avg_calcs AS b ON a.BRND_NAME = b.BRND_NAME LEFT JOIN CAD_Medians AS c ON a.BRND_NAME = c.BRND_NAME GROUP BY a.BRND_NAME, b.PROP_COUNT , b.MAX_OCC, b.MIN_OCC, b.MAX_ADR, b.MIN_ADR , b.MAX_REVPAR, b.MIN_REVPAR, b.MAX_REVPAR_INDEX, b.MIN_REVPAR_INDEX , b.AVG_OCC, b.AVG_ADR, b.AVG_REVPAR, b.AVG_REVPAR_INDEX , c.median_Occ, c.median_ADR, c.median_REVPAR, c.median_RPI;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_FDD_incl_Hotel_Detail_Converted_to_AW.sas
"CREATE TABLE ""&OUTPUT.\FDD Backup &Run_Date..xlsb"" AS ( SELECT * FROM CAD_all_brand_data) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_FDD_incl_Hotel_Detail_Converted_to_AW.sas
" select CAST( max( CAST( snapshot_date,mmddyy10. )),date9. ) into :max_ssdate FROM gd.wss;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_GroupBookings_WklyReport.sas
" CREATE TABLE sgds_fcst_snap AS select ""&ssdate."" AS snapshot_date,b.hotel_cd,p.hCLASS, p.mf,p.domint,p.brnd,p.region,p.market_name,b.book_key, b.book_stat,b.def_stat_dt AS definite_dt,b.arr_dt,b.dep_dt,r.blk_dt, SUM( r.proj_rms) AS proj_rms,SUM( r.proj_rms_rev) AS proj_rev FROM share.plu p, bkdata b, rmblk r WHERE b.book_stat IN ( 'A','D','1','C') AND r.rm_blk_stat_cd IN ( 'A','D','1','C') AND p.marsha=b.hotel_cd AND p.marsha=r.hotel_cd AND p.openflag='Y' andEXTRACT(YEAR FROM r.blk_dt) >= &last_yr. AND b.hotel_cd=r.hotel_cd AND b.book_key=r.book_key GROUP BY b.hotel_cd,p.hCLASS,p.mf,p.domint,p.brnd,p.region,p.market_name, b.book_key,b.book_stat,b.def_stat_dt,b.arr_dt,b.dep_dt,r.blk_dt;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_GroupBookings_WklyReport.sas
" CREATE TABLE gd.sgds_bkgs AS ( SELECT  *  FROM sgds_fcst_snap UNION ALL SELECT  *  FROM gd.sgds_bkgs WHERE snapshot_date<>""&ssdate."");",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_GroupBookings_WklyReport.sas
" delete FROM gd.wss WHERE snapshot_date=""&ssdate."" INSERT INTO gd.wss( snapshot_date) values ( ""&ssdate."" ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_GroupBookings_WklyReport.sas
" CREATE TABLE gd.grp_actuals AS select b.hotel_cd,b.book_key,b.bk_typ,r.blk_dt, SUM( ( r.act_rms+r.act_suites+r.act_comp)) AS act_rms, SUM( ( r.act_rev+r.act_suite_rev)) AS act_rev FROM share.bkdata2006 b, share.rmblk2006 r, share.plu p WHERE b.book_stat IN ( 'A') AND r.rm_blk_stat_cd IN ( 'A') AND p.openflag='Y' andEXTRACT(YEAR FROM blk_dt) IN ( &last_yr.,&this_yr. ) AND p.marsha=b.hotel_cd AND p.marsha=r.hotel_cd AND b.hotel_cd=r.hotel_cd AND b.book_key=r.book_key GROUP BY b.hotel_cd,b.book_key,b.bk_typ,r.blk_dt;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_GroupBookings_WklyReport.sas
" CREATE TABLE gd.grp_otb AS ( SELECT  *  , DATEDIFF( 'weeks',CAST( snapshot_date,mmddyy10. ),blk_dt ) AS weeks_out  FROM gd.sgds_bkgs  whereblk_dt >= ""&start_date""d AND blk_dt <= ""&end_date""d AND weeks_out <= 52);",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_GroupBookings_WklyReport.sas
" CREATE TABLE gd.otb AS select a.*,b.bk_typ,b.act_rms,b.act_rev,p.owner,p.manager,p.hcap FROM gd.grp_otb AS a LEFT JOIN gd.grp_actuals AS b ON a.hotel_cd=b.hotel_cd AND a.book_key=b.book_key AND a.blk_dt=b.blk_dt LEFT JOIN gpo.property_master AS p ON a.hotel_cd=p.marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_GroupBookings_WklyReport.sas
"SELECT * FROM rmblk_past ORDER BY hotel_cd ,book_key ,blk_dt ,rm_blk_stat_cd;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Intl_Pace_All.sas
"SELECT * FROM rmblk_future ORDER BY hotel_cd ,book_key ,blk_dt ,rm_blk_stat_cd;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Intl_Pace_All.sas
"CREATE TABLE rmblk_future_dups AS (SELECT DISTINCT * FROM rmblk_future ORDER BY hotel_cd ,book_key ,blk_dt);",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Intl_Pace_All.sas
 CREATE TABLE rmblk_past2 AS ( SELECT  *  FROM rmblk_past  WHERE blk_dt<&TY_Fut.);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Intl_Pace_All.sas
" CREATE TABLE rmblk_snap&aoTYsnap. AS ( SELECT  *  , FORMAT(blk_dt, date7.) AS blk_dt , FORMAT(arr_date, date7.) AS arr_date , FORMAT(dep_date, date7.) AS dep_date  FROM rmblk_past2 A JOIN rmblk_future B ON  A.hotel_cd =  B.hotel_cd AND  A.book_key =  B.book_key AND  A.blk_dt =  B.blk_dt AND  A.rm_blk_stat_cd =  B.rm_blk_stat_cd);",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Intl_Pace_All.sas
"SELECT * FROM bkdata_past ORDER BY hotel_cd ,book_key;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Intl_Pace_All.sas
"SELECT * FROM bkdata_future ORDER BY hotel_cd ,book_key;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Intl_Pace_All.sas
" CREATE TABLE bkdata_snap&aoTYsnap. AS ( SELECT  *  , FORMAT(bk_stat_dt, datetime.) AS bk_stat_dt , FORMAT(arr_dt, datetime.) AS arr_dt , FORMAT(dep_dt, datetime.) AS dep_dt , FORMAT(date7., datetime.) AS date7. , FORMAT(create_dt, datetime.) AS create_dt , FORMAT(updt_dt, datetime.) AS updt_dt  FROM bkdata_past A JOIN bkdata_future B ON  A.hotel_cd =  B.hotel_cd AND  A.book_key =  B.book_key);",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Intl_Pace_All.sas
"CREATE TABLE bkdata_dup_1 AS (SELECT DISTINCT * FROM bkdata_snap&aoTYsnap. ORDER BY hotel_cd ,book_key);",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Intl_Pace_All.sas
" CREATE TABLE bkdata_snap&aoTYsnap. AS ( SELECT  *  FROM bkdata_snap&aoTYsnap.  WHERE hotel_cd not IN ( 'SJUPR','STTFR' ));",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Intl_Pace_All.sas
" CREATE TABLE rmblk_snap&aoTYsnap. AS ( SELECT  *  FROM rmblk_snap&aoTYsnap.  WHERE hotel_cd not in( 'SJUPR','STTFR' ));",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Intl_Pace_All.sas
DROP TABLE AWPROD.rmblk_snap_hist;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Intl_Pace_All.sas
DROP TABLE AWPROD.bkdata_snap_hist;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Intl_Pace_All.sas
   ALTER TABLE aw_rev_dbo.rmblk_snap rename to rmblk_snap_hist ) by odbc ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Intl_Pace_All.sas
   ALTER TABLE aw_rev_dbo.bkdata_snap rename to bkdata_snap_hist ) by odbc ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Intl_Pace_All.sas
 CREATE TABLE rmblk_snap2 AS ( SELECT  *  FROM rmblk_snap&aoTYsnap. );,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Intl_Pace_All.sas
CREATE TABLE bkdata_snap2 AS ( SELECT  *  FROM bkdata_snap&aoTYsnap. );,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Intl_Pace_All.sas
ALTER TABLE bkdata_snap2 DROP COLUMN bk_name ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Intl_Pace_All.sas
" CREATE TABLE group_pace_lux AS select b.marsha, b.brnd, b.mf, b.acomp, b.future_comp, b.LY_Comp, b.region, b.hotel_name, a.* FROM aw_tgt.grp_bookingpace a LEFT JOIN aw_tgt.property_master b ON a.prop_master_id=b.marsha WHERE b.brnd IN ( 'XR' 'WH' 'LC' 'JW' 'RZ' 'EB' 'BG') AND snapshot_date= '30Nov19'D;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Lux_Group_Pace.sas
 CREATE TABLE prop_master AS  (  SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER A  ) ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS-STR_Monthly_(FW_WD_and_WE)_-_AW.sas
" CREATE TABLE MN_STR_DATA AS  (  SELECT marsha, time_type, data_category, data_type, currency_type, asof_yrmo, yrmnth , MARAVAIL, MARSOLD, MARREV, MARAVAILLY, MARSOLDLY, MARREVLY , MKTAVAIL, MKTSOLD, MKTREV, MKTAVAILLY, MKTSOLDLY, MKTREVLY FROM AW_CMP_DBO.STR_MONTHLY_DATA A WHERE asof_yrmo= &STARMNTH. AND yrmnth=&STARMNTH. AND TIME_TYPE IN ( 'MONTH', 'LAST3', 'YTD') AND DATA_CATEGORY IN ( 'Rooms', 'WDWE_Rooms') AND currency_type='Local' order BY MARSHA, time_type, data_category, data_type, currency_type, asof_yrmo, yrmnth  ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS-STR_Monthly_(FW_WD_and_WE)_-_AW.sas
"CREATE TABLE Cal_pd AS ( SELECT  *  , MARSOLD/MARAVAIL AS STR_MNLY_Occ_MN , MKTSOLD/MKTAVAIL AS STR_MNLY_CompOcc_MN , ( STR_MNLY_Occ_MN -( MARSOLDLY /MARAVAILLY ))/( MARSOLDLY /MARAVAILLY  ) AS STR_MNLY_OccChg_MN , ( STR_MNLY_CompOcc_MN -( MKTSOLDLY /MKTAVAILLY ))/( MKTSOLDLY /MKTAVAILLY  ) AS STR_MNLY_CompOccChg_MN , MARREV /MARSOLD AS STR_MNLY_ADR_MN , MKTREV /MKTSOLD AS STR_MNLY_CompADR_MN , ( STR_MNLY_ADR_MN-MARREVLY /MARSOLDLY )/( MARREVLY/MARSOLDLY  ) AS STR_MNLY_ADRChg_MN , ( STR_MNLY_CompADR_MN-MKTREVLY /MKTSOLDLY )/( MKTREVLY/MKTSOLDLY  ) AS STR_MNLY_CompADRChg_MN , MARREV /MARAVAIL AS STR_MNLY_Rev_MN , MKTREV /MKTAVAIL AS STR_MNLY_CompRev_MN , ( STR_MNLY_Rev_MN-( MARREVLY/MARAVAILLY))/( MARREVLY/MARAVAILLY ) AS STR_MNLY_RevChg_MN , ( STR_MNLY_CompRev_MN-( MKTREVLY/MKTAVAILLY))/( MKTREVLY/MKTAVAILLY ) AS STR_MNLY_CompRevChg_MN , 100*( STR_MNLY_Occ_MN /STR_MNLY_CompOcc_MN  ) AS STR_MNLY_OccIndex_MN , 100*(  ( MARSOLDLY /MARAVAILLY )/ ( MKTSOLDLY/MKTAVAILLY)  ) AS STR_MNLY_OccIndexLY_MN , ( STR_MNLY_OccIndex_MN -STR_MNLY_OccIndexLY_MN )/STR_MNLY_OccIndexLY_MN AS STR_MNLY_OccIndexChg_MN , 100*( STR_MNLY_ADR_MN /STR_MNLY_CompADR_MN  ) AS STR_MNLY_ADRIndex_MN , 100*(  ( MARREVLY/MARSOLDLY)/ ( MKTREVLY/MKTSOLDLY) ) AS STR_MNLY_ADRIndexLY_MN , ( STR_MNLY_ADRIndex_MN -STR_MNLY_ADRIndexLY_MN )/STR_MNLY_ADRIndexLY_MN AS STR_MNLY_ADRIndexChg_MN , 100*( STR_MNLY_Rev_MN/STR_MNLY_CompRev_MN ) AS STR_MNLY_RevPARIndex_MN , 100*( MARREVLY /MARAVAILLY )/( MKTREVLY /MKTAVAILLY  ) AS STR_MNLY_RevPARIndexLY_MN , ( STR_MNLY_RevPARIndex_MN -STR_MNLY_RevPARIndexLY_MN )/STR_MNLY_RevPARIndexLY_MN AS STR_MNLY_RevPARIndexChg_MN , MARREV AS STR_MNLY_Revenue_MN  FROM MN_STR_DATA  WHERE TIME_TYPE='MONTH' AND DATA_CATEGORY='Rooms');",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS-STR_Monthly_(FW_WD_and_WE)_-_AW.sas
"ALTER TABLE Cal_pd DROP COLUMN MARAVAIL ,  MARSOLD ,  MARREV ,  MARAVAILLY ,  MARSOLDLY ,  MARREVLY ,  MKTAVAIL ,  MKTSOLD ,  MKTREV ,  MKTAVAILLY ,  MKTSOLDLY ,  MKTREVLY ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS-STR_Monthly_(FW_WD_and_WE)_-_AW.sas
SELECT * FROM Cal_pd ORDER BY MARSHA;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS-STR_Monthly_(FW_WD_and_WE)_-_AW.sas
"CREATE TABLE Cal_l3 AS ( SELECT  *  , MARSOLD/MARAVAIL AS STR_MNLY_Occ_L3 , MKTSOLD/MKTAVAIL AS STR_MNLY_CompOcc_L3 , ( STR_MNLY_Occ_L3 -( MARSOLDLY /MARAVAILLY ))/( MARSOLDLY /MARAVAILLY  ) AS STR_MNLY_OccChg_L3 , ( STR_MNLY_CompOcc_L3 -( MKTSOLDLY /MKTAVAILLY ))/( MKTSOLDLY /MKTAVAILLY  ) AS STR_MNLY_CompOccChg_L3 , MARREV /MARSOLD AS STR_MNLY_ADR_L3 , MKTREV /MKTSOLD AS STR_MNLY_CompADR_L3 , ( STR_MNLY_ADR_L3-MARREVLY /MARSOLDLY )/( MARREVLY/MARSOLDLY  ) AS STR_MNLY_ADRChg_L3 , ( STR_MNLY_CompADR_L3-MKTREVLY /MKTSOLDLY )/( MKTREVLY/MKTSOLDLY  ) AS STR_MNLY_CompADRChg_L3 , MARREV /MARAVAIL AS STR_MNLY_Rev_L3 , MKTREV /MKTAVAIL AS STR_MNLY_CompRev_L3 , ( STR_MNLY_Rev_L3-( MARREVLY/MARAVAILLY))/( MARREVLY/MARAVAILLY ) AS STR_MNLY_RevChg_L3 , ( STR_MNLY_Rev_L3-( MKTREVLY/MKTAVAILLY))/( MKTREVLY/MKTAVAILLY ) AS STR_MNLY_CompRevChg_L3 , 100*( STR_MNLY_Occ_L3 /STR_MNLY_CompOcc_L3  ) AS STR_MNLY_OccIndex_L3 , 100*(  ( MARSOLDLY /MARAVAILLY )/ ( MKTSOLDLY/MKTAVAILLY)  ) AS STR_MNLY_OccIndexLY_L3 , ( STR_MNLY_OccIndex_L3 -STR_MNLY_OccIndexLY_L3 )/STR_MNLY_OccIndexLY_L3 AS STR_MNLY_OccIndexChg_L3 , 100*( STR_MNLY_ADR_L3 /STR_MNLY_CompADR_L3  ) AS STR_MNLY_ADRIndex_L3 , 100*(  ( MARREVLY/MARSOLDLY)/ ( MKTREVLY/MKTSOLDLY) ) AS STR_MNLY_ADRIndexLY_L3 , ( STR_MNLY_ADRIndex_L3 -STR_MNLY_ADRIndexLY_L3 )/STR_MNLY_ADRIndexLY_L3 AS STR_MNLY_ADRIndexChg_L3 , 100*( STR_MNLY_Rev_L3/STR_MNLY_CompRev_L3 ) AS STR_MNLY_RevPARIndex_L3 , 100*( MARREVLY /MARAVAILLY )/( MKTREVLY /MKTAVAILLY  ) AS STR_MNLY_RevPARIndexLY_L3 , ( STR_MNLY_RevPARIndex_L3 -STR_MNLY_RevPARIndexLY_L3 )/STR_MNLY_RevPARIndexLY_L3 AS STR_MNLY_RevPARIndexChg_L3 , MARREV AS STR_MNLY_Revenue_L3  FROM MN_STR_DATA  WHERE TIME_TYPE='LAST3' AND DATA_CATEGORY='Rooms');",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS-STR_Monthly_(FW_WD_and_WE)_-_AW.sas
"ALTER TABLE Cal_l3 DROP COLUMN MARAVAIL ,  MARSOLD ,  MARREV ,  MARAVAILLY ,  MARSOLDLY ,  MARREVLY ,  MKTAVAIL ,  MKTSOLD ,  MKTREV ,  MKTAVAILLY ,  MKTSOLDLY ,  MKTREVLY ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS-STR_Monthly_(FW_WD_and_WE)_-_AW.sas
SELECT * FROM Cal_l3 ORDER BY MARSHA;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS-STR_Monthly_(FW_WD_and_WE)_-_AW.sas
"CREATE TABLE Cal_YTD AS ( SELECT  *  , MARSOLD/MARAVAIL AS STR_MNLY_Occ_YTD , MKTSOLD/MKTAVAIL AS STR_MNLY_CompOcc_YTD , ( STR_MNLY_Occ_YTD -( MARSOLDLY /MARAVAILLY ))/( MARSOLDLY /MARAVAILLY  ) AS STR_MNLY_OccChg_YTD , ( STR_MNLY_CompOcc_YTD -( MKTSOLDLY /MKTAVAILLY ))/( MKTSOLDLY /MKTAVAILLY  ) AS STR_MNLY_CompOccChg_YTD , MARREV /MARSOLD AS STR_MNLY_ADR_YTD , MKTREV /MKTSOLD AS STR_MNLY_CompADR_YTD , ( STR_MNLY_ADR_YTD-MARREVLY /MARSOLDLY )/( MARREVLY/MARSOLDLY  ) AS STR_MNLY_ADRChg_YTD , ( STR_MNLY_CompADR_YTD-MKTREVLY /MKTSOLDLY )/( MKTREVLY/MKTSOLDLY  ) AS STR_MNLY_CompADRChg_YTD , MARREV /MARAVAIL AS STR_MNLY_Rev_YTD , MKTREV /MKTAVAIL AS STR_MNLY_CompRev_YTD , ( STR_MNLY_Rev_YTD-( MARREVLY/MARAVAILLY))/( MARREVLY/MARAVAILLY ) AS STR_MNLY_RevChg_YTD , ( STR_MNLY_Rev_YTD-( MKTREVLY/MKTAVAILLY))/( MKTREVLY/MKTAVAILLY ) AS STR_MNLY_CompRevChg_YTD , 100*( STR_MNLY_Occ_YTD /STR_MNLY_CompOcc_YTD  ) AS STR_MNLY_OccIndex_YTD , 100*(  ( MARSOLDLY /MARAVAILLY )/ ( MKTSOLDLY/MKTAVAILLY)  ) AS STR_MNLY_OccIndexLY_YTD , ( STR_MNLY_OccIndex_YTD -STR_MNLY_OccIndexLY_YTD )/STR_MNLY_OccIndexLY_YTD AS STR_MNLY_OccIndexChg_YTD , 100*( STR_MNLY_ADR_YTD /STR_MNLY_CompADR_YTD  ) AS STR_MNLY_ADRIndex_YTD , 100*(  ( MARREVLY/MARSOLDLY)/ ( MKTREVLY/MKTSOLDLY) ) AS STR_MNLY_ADRIndexLY_YTD , ( STR_MNLY_ADRIndex_YTD -STR_MNLY_ADRIndexLY_YTD )/STR_MNLY_ADRIndexLY_YTD AS STR_MNLY_ADRIndexChg_YTD , 100*( STR_MNLY_Rev_YTD/STR_MNLY_CompRev_YTD ) AS STR_MNLY_RevPARIndex_YTD , 100*( MARREVLY /MARAVAILLY )/( MKTREVLY /MKTAVAILLY  ) AS STR_MNLY_RevPARIndexLY_YTD , ( STR_MNLY_RevPARIndex_YTD -STR_MNLY_RevPARIndexLY_YTD )/STR_MNLY_RevPARIndexLY_YTD AS STR_MNLY_RevPARIndexChg_YTD , MARREV AS STR_MNLY_Revenue_YTD  FROM MN_STR_DATA  WHERE TIME_TYPE='YTD' AND DATA_CATEGORY='Rooms');",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS-STR_Monthly_(FW_WD_and_WE)_-_AW.sas
"ALTER TABLE Cal_YTD DROP COLUMN MARAVAIL ,  MARSOLD ,  MARREV ,  MARAVAILLY ,  MARSOLDLY ,  MARREVLY ,  MKTAVAIL ,  MKTSOLD ,  MKTREV ,  MKTAVAILLY ,  MKTSOLDLY ,  MKTREVLY ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS-STR_Monthly_(FW_WD_and_WE)_-_AW.sas
SELECT * FROM Cal_YTD ORDER BY MARSHA;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS-STR_Monthly_(FW_WD_and_WE)_-_AW.sas
CREATE TABLE STR_FW_MONTHLY_&STR_FLDR. AS ( SELECT  *  FROM Cal_pd A JOIN Cal_l3 B ON  A.MARSHA =  B.MARSHA);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS-STR_Monthly_(FW_WD_and_WE)_-_AW.sas
ALTER TABLE STR_FW_MONTHLY_&STR_FLDR. DROP COLUMN TIMEF ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS-STR_Monthly_(FW_WD_and_WE)_-_AW.sas
"CREATE TABLE mams.STR_FW_MONTHLY_&STR_FLDR. AS ( SELECT  *  , 'FW' AS MNLY_WDFW  FROM STR_FW_MONTHLY_&STR_FLDR. A JOIN Cal_YTD B ON  A.MARSHA =  B.MARSHA);",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS-STR_Monthly_(FW_WD_and_WE)_-_AW.sas
ALTER TABLE mams.STR_FW_MONTHLY_&STR_FLDR. DROP COLUMN TIMEF ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS-STR_Monthly_(FW_WD_and_WE)_-_AW.sas
" CREATE TABLE WD_MONTH2 AS ( SELECT MARSHA , MARSOLD/MARAVAIL AS STR_MNLY_Occ_MN , MKTSOLD/MKTAVAIL AS STR_MNLY_CompOcc_MN , MARSOLDLY/MARAVAILLY AS Occ_pd_LY , MKTSOLDLY/MKTAVAILLY AS CompOcc_pd_LY , STR_MNLY_Occ_MN-Occ_pd_LY AS STR_MNLY_OccChg_MN , STR_MNLY_CompOcc_MN-CompOcc_pd_LY AS STR_MNLY_CompOccChg_MN , MARREV/MARSOLD AS STR_MNLY_ADR_MN , MKTREV/MKTSOLD AS STR_MNLY_CompADR_MN , MARREVLY/MARSOLDLY AS ADR_pd_LY , MKTREVLY/MKTSOLDLY AS CompADR_pd_LY , ( STR_MNLY_ADR_MN-ADR_pd_LY)/ADR_pd_LY AS STR_MNLY_ADRChg_MN , ( STR_MNLY_CompADR_MN-CompADR_pd_LY)/CompADR_pd_LY AS STR_MNLY_CompADRChg_MN , MARREV/MARAVAIL AS STR_MNLY_Rev_MN , MKTREV/MKTAVAIL AS STR_MNLY_CompRev_MN , MARREVLY/MARAVAILLY AS RevPAR_pd_LY , MKTREVLY/MKTAVAILLY AS CompRevPAR_pd_LY , ( STR_MNLY_Rev_MN-RevPAR_pd_LY)/RevPAR_pd_LY AS STR_MNLY_RevChg_MN , ( STR_MNLY_CompRev_MN-CompRevPAR_pd_LY)/CompRevPAR_pd_LY AS STR_MNLY_CompRevChg_MN , 100*STR_MNLY_Occ_MN/STR_MNLY_CompOcc_MN AS STR_MNLY_OccIndex_MN , 100*Occ_pd_LY/CompOcc_pd_LY AS STR_MNLY_OccIndexLY_MN , ( STR_MNLY_OccIndex_MN-STR_MNLY_OccIndexLY_MN)/STR_MNLY_OccIndexLY_MN AS STR_MNLY_OccIndexChg_MN , 100*STR_MNLY_ADR_MN/STR_MNLY_CompADR_MN AS STR_MNLY_ADRIndex_MN , 100*ADR_pd_LY/CompADR_pd_LY AS STR_MNLY_ADRIndexLY_MN , ( STR_MNLY_ADRIndex_MN-STR_MNLY_ADRIndexLY_MN)/STR_MNLY_ADRIndexLY_MN AS STR_MNLY_ADRIndexChg_MN , 100*STR_MNLY_Rev_MN/STR_MNLY_CompRev_MN AS STR_MNLY_RevPARIndex_MN , 100*RevPAR_pd_LY/CompRevPAR_pd_LY AS STR_MNLY_RevPARIndexLY_MN , ( STR_MNLY_RevPARIndex_MN-STR_MNLY_RevPARIndexLY_MN)/STR_MNLY_RevPARIndexLY_MN AS STR_MNLY_RevPARIndexChg_MN  FROM MN_STR_DATA  WHERE TIME_TYPE='MONTH' AND DATA_CATEGORY='WDWE_Rooms' AND DATA_TYPE='WD');",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS-STR_Monthly_(FW_WD_and_WE)_-_AW.sas
" CREATE TABLE WD_LAST32 AS ( SELECT MARSHA , MARSOLD/MARAVAIL AS STR_MNLY_Occ_L3 , MKTSOLD/MKTAVAIL AS STR_MNLY_CompOcc_L3 , MARSOLDLY/MARAVAILLY AS Occ_l3_LY , MKTSOLDLY/MKTAVAILLY AS CompOcc_l3_LY , STR_MNLY_Occ_L3-Occ_l3_LY AS STR_MNLY_OccChg_L3 , STR_MNLY_CompOcc_L3-CompOcc_l3_LY AS STR_MNLY_CompOccChg_L3 , MARREV/MARSOLD AS STR_MNLY_ADR_L3 , MKTREV/MKTSOLD AS STR_MNLY_CompADR_L3 , MARREVLY/MARSOLDLY AS ADR_l3_LY , MKTREVLY/MKTSOLDLY AS CompADR_l3_LY , ( STR_MNLY_ADR_L3-ADR_l3_LY)/ADR_l3_LY AS STR_MNLY_ADRChg_L3 , ( STR_MNLY_CompADR_L3-CompADR_l3_LY)/CompADR_l3_LY AS STR_MNLY_CompADRChg_L3 , MARREV/MARAVAIL AS STR_MNLY_Rev_L3 , MKTREV/MKTAVAIL AS STR_MNLY_CompRev_L3 , MARREVLY/MARAVAILLY AS RevPAR_l3_LY , MKTREVLY/MKTAVAILLY AS CompRevPAR_l3_LY , ( STR_MNLY_Rev_L3-RevPAR_l3_LY)/RevPAR_l3_LY AS STR_MNLY_RevChg_L3 , ( STR_MNLY_CompRev_L3-CompRevPAR_l3_LY)/CompRevPAR_l3_LY AS STR_MNLY_CompRevChg_L3 , 100*STR_MNLY_Occ_L3/STR_MNLY_CompOcc_L3 AS STR_MNLY_OccIndex_L3 , 100*Occ_l3_LY/CompOcc_l3_LY AS STR_MNLY_OccIndexLY_L3 , ( STR_MNLY_OccIndex_L3-STR_MNLY_OccIndexLY_L3)/STR_MNLY_OccIndexLY_L3 AS STR_MNLY_OccIndexChg_L3 , 100*STR_MNLY_ADR_L3/STR_MNLY_CompADR_L3 AS STR_MNLY_ADRIndex_L3 , 100*ADR_l3_LY/CompADR_l3_LY AS STR_MNLY_ADRIndexLY_L3 , ( STR_MNLY_ADRIndex_L3-STR_MNLY_ADRIndexLY_L3)/STR_MNLY_ADRIndexLY_L3 AS STR_MNLY_ADRIndexChg_L3 , 100*STR_MNLY_Rev_L3/STR_MNLY_CompRev_L3 AS STR_MNLY_RevPARIndex_L3 , 100*RevPAR_l3_LY/CompRevPAR_l3_LY AS STR_MNLY_RevPARIndexLY_L3 , ( STR_MNLY_RevPARIndex_L3-STR_MNLY_RevPARIndexLY_L3)/STR_MNLY_RevPARIndexLY_L3 AS STR_MNLY_RevPARIndexChg_L3  FROM MN_STR_DATA  WHERE TIME_TYPE='LAST3' AND DATA_CATEGORY='WDWE_Rooms' AND DATA_TYPE='WD');",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS-STR_Monthly_(FW_WD_and_WE)_-_AW.sas
SELECT * FROM WD_MONTH2 ORDER BY marsha;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS-STR_Monthly_(FW_WD_and_WE)_-_AW.sas
SELECT * FROM WD_LAST32 ORDER BY marsha;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS-STR_Monthly_(FW_WD_and_WE)_-_AW.sas
" CREATE TABLE mams.STR_WD_MONTHLY_&STR_FLDR. AS ( SELECT  *  , 'WD' AS MNLY_WDFW  FROM WD_MONTH2 A JOIN WD_LAST32 B ON  A.MARSHA =  B.MARSHA);",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS-STR_Monthly_(FW_WD_and_WE)_-_AW.sas
" CREATE TABLE WE_MONTH2 AS ( SELECT MARSHA , MARSOLD/MARAVAIL AS STR_MNLY_Occ_MN , MKTSOLD/MKTAVAIL AS STR_MNLY_CompOcc_MN , MARSOLDLY/MARAVAILLY AS Occ_pd_LY , MKTSOLDLY/MKTAVAILLY AS CompOcc_pd_LY , STR_MNLY_Occ_MN-Occ_pd_LY AS STR_MNLY_OccChg_MN , STR_MNLY_CompOcc_MN-CompOcc_pd_LY AS STR_MNLY_CompOccChg_MN , MARREV/MARSOLD AS STR_MNLY_ADR_MN , MKTREV/MKTSOLD AS STR_MNLY_CompADR_MN , MARREVLY/MARSOLDLY AS ADR_pd_LY , MKTREVLY/MKTSOLDLY AS CompADR_pd_LY , ( STR_MNLY_ADR_MN-ADR_pd_LY)/ADR_pd_LY AS STR_MNLY_ADRChg_MN , ( STR_MNLY_CompADR_MN-CompADR_pd_LY)/CompADR_pd_LY AS STR_MNLY_CompADRChg_MN , MARREV/MARAVAIL AS STR_MNLY_Rev_MN , MKTREV/MKTAVAIL AS STR_MNLY_CompRev_MN , MARREVLY/MARAVAILLY AS RevPAR_pd_LY , MKTREVLY/MKTAVAILLY AS CompRevPAR_pd_LY , ( STR_MNLY_Rev_MN-RevPAR_pd_LY)/RevPAR_pd_LY AS STR_MNLY_RevChg_MN , ( STR_MNLY_CompRev_MN-CompRevPAR_pd_LY)/CompRevPAR_pd_LY AS STR_MNLY_CompRevChg_MN , 100*STR_MNLY_Occ_MN/STR_MNLY_CompOcc_MN AS STR_MNLY_OccIndex_MN , 100*Occ_pd_LY/CompOcc_pd_LY AS STR_MNLY_OccIndexLY_MN , ( STR_MNLY_OccIndex_MN-STR_MNLY_OccIndexLY_MN)/STR_MNLY_OccIndexLY_MN AS STR_MNLY_OccIndexChg_MN , 100*STR_MNLY_ADR_MN/STR_MNLY_CompADR_MN AS STR_MNLY_ADRIndex_MN , 100*ADR_pd_LY/CompADR_pd_LY AS STR_MNLY_ADRIndexLY_MN , ( STR_MNLY_ADRIndex_MN-STR_MNLY_ADRIndexLY_MN)/STR_MNLY_ADRIndexLY_MN AS STR_MNLY_ADRIndexChg_MN , 100*STR_MNLY_Rev_MN/STR_MNLY_CompRev_MN AS STR_MNLY_RevPARIndex_MN , 100*RevPAR_pd_LY/CompRevPAR_pd_LY AS STR_MNLY_RevPARIndexLY_MN , ( STR_MNLY_RevPARIndex_MN-STR_MNLY_RevPARIndexLY_MN)/STR_MNLY_RevPARIndexLY_MN AS STR_MNLY_RevPARIndexChg_MN  FROM MN_STR_DATA  WHERE TIME_TYPE='MONTH' AND DATA_CATEGORY='WDWE_Rooms' AND DATA_TYPE='WE');",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS-STR_Monthly_(FW_WD_and_WE)_-_AW.sas
" CREATE TABLE WE_LAST32 AS ( SELECT MARSHA , MARSOLD/MARAVAIL AS STR_MNLY_Occ_L3 , MKTSOLD/MKTAVAIL AS STR_MNLY_CompOcc_L3 , MARSOLDLY/MARAVAILLY AS Occ_l3_LY , MKTSOLDLY/MKTAVAILLY AS CompOcc_l3_LY , STR_MNLY_Occ_L3-Occ_l3_LY AS STR_MNLY_OccChg_L3 , STR_MNLY_CompOcc_L3-CompOcc_l3_LY AS STR_MNLY_CompOccChg_L3 , MARREV/MARSOLD AS STR_MNLY_ADR_L3 , MKTREV/MKTSOLD AS STR_MNLY_CompADR_L3 , MARREVLY/MARSOLDLY AS ADR_l3_LY , MKTREVLY/MKTSOLDLY AS CompADR_l3_LY , ( STR_MNLY_ADR_L3-ADR_l3_LY)/ADR_l3_LY AS STR_MNLY_ADRChg_L3 , ( STR_MNLY_CompADR_L3-CompADR_l3_LY)/CompADR_l3_LY AS STR_MNLY_CompADRChg_L3 , MARREV/MARAVAIL AS STR_MNLY_Rev_L3 , MKTREV/MKTAVAIL AS STR_MNLY_CompRev_L3 , MARREVLY/MARAVAILLY AS RevPAR_l3_LY , MKTREVLY/MKTAVAILLY AS CompRevPAR_l3_LY , ( STR_MNLY_Rev_L3-RevPAR_l3_LY)/RevPAR_l3_LY AS STR_MNLY_RevChg_L3 , ( STR_MNLY_CompRev_L3-CompRevPAR_l3_LY)/CompRevPAR_l3_LY AS STR_MNLY_CompRevChg_L3 , 100*STR_MNLY_Occ_L3/STR_MNLY_CompOcc_L3 AS STR_MNLY_OccIndex_L3 , 100*Occ_l3_LY/CompOcc_l3_LY AS STR_MNLY_OccIndexLY_L3 , ( STR_MNLY_OccIndex_L3-STR_MNLY_OccIndexLY_L3)/STR_MNLY_OccIndexLY_L3 AS STR_MNLY_OccIndexChg_L3 , 100*STR_MNLY_ADR_L3/STR_MNLY_CompADR_L3 AS STR_MNLY_ADRIndex_L3 , 100*ADR_l3_LY/CompADR_l3_LY AS STR_MNLY_ADRIndexLY_L3 , ( STR_MNLY_ADRIndex_L3-STR_MNLY_ADRIndexLY_L3)/STR_MNLY_ADRIndexLY_L3 AS STR_MNLY_ADRIndexChg_L3 , 100*STR_MNLY_Rev_L3/STR_MNLY_CompRev_L3 AS STR_MNLY_RevPARIndex_L3 , 100*RevPAR_l3_LY/CompRevPAR_l3_LY AS STR_MNLY_RevPARIndexLY_L3 , ( STR_MNLY_RevPARIndex_L3-STR_MNLY_RevPARIndexLY_L3)/STR_MNLY_RevPARIndexLY_L3 AS STR_MNLY_RevPARIndexChg_L3  FROM MN_STR_DATA  WHERE TIME_TYPE='LAST3' AND DATA_CATEGORY='WDWE_Rooms' AND DATA_TYPE='WE');",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS-STR_Monthly_(FW_WD_and_WE)_-_AW.sas
SELECT * FROM WE_MONTH2 ORDER BY marsha;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS-STR_Monthly_(FW_WD_and_WE)_-_AW.sas
SELECT * FROM WE_LAST32 ORDER BY marsha;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS-STR_Monthly_(FW_WD_and_WE)_-_AW.sas
" CREATE TABLE mams.STR_WE_MONTHLY_&STR_FLDR. AS ( SELECT  *  , 'WE' AS MNLY_WDFW  FROM WE_MONTH2 A JOIN WE_LAST32 B ON  A.MARSHA =  B.MARSHA);",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS-STR_Monthly_(FW_WD_and_WE)_-_AW.sas
" CREATE TABLE otbty AS  (  select stay_date, property_cd, segment , CASE WHEN b.ab_day_of_week_cd IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' END AS wdwe , SUM( room_nights) AS rn, SUM( rev_net) AS rev_net, SUM( rev_net_us) AS rev_net_us FROM Mrdw_fact_otb_seg_extract_pd a, mrdw_dim_date b WHERE a.stay_date=b.date_dt AND acctg_yr=&cur_yr AND acctg_pd=&cur_pd AND acctg_wk=&cur_wk GROUP BY stay_date, property_cd, segment , tier_los_ind, wdwe ORDER BY stay_date, property_cd, segment, wdwe  )  ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS_-_OTB_Data_Pull.sas
" CREATE TABLE otbly AS  (  select stay_date, property_cd, segment , CASE WHEN b.ab_day_of_week_cd IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' END AS wdwe , SUM( room_nights) AS rn, SUM( rev_net) AS rev_net, SUM( rev_net_us) AS rev_net_us FROM Mrdw_fact_otb_seg_extract_pd a, mrdw_dim_date b WHERE a.stay_date=b.date_dt AND acctg_yr=&last_yr AND acctg_pd=&cur_pdly AND acctg_wk=&cur_wkly GROUP BY stay_date, property_cd, segment , tier_los_ind, wdwe ORDER BY stay_date, property_cd, segment, wdwe  )  ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS_-_OTB_Data_Pull.sas
" CREATE TABLE allotb AS select coalesce( a.property_cd,b.property_cd) AS marsha , coalesce( a.stay_date,b.stay_date+364) AS stay_date format date9. , coalesce( a.segment,b.segment) AS segment , coalesce( a.wdwe,b.wdwe) AS wdwe , a.rn, a.rev_net, a.rev_net_us, b.rn AS rn_ly, b.rev_net AS rev_net_ly, b.rev_net_us AS rev_net_us_ly FROM otbty AS a full JOIN otbly AS b ON a.property_cd=b.property_cd AND a.stay_date=b.stay_date+364 AND a.segment=b.segment AND a.wdwe=b.wdwe;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS_-_OTB_Data_Pull.sas
" CREATE TABLE allotb2 AS select marsha, segment, wdwe , CASE WHEN 100*year( stay_date)+month( stay_date) = &mo_out1 THEN '_1MNOut' when 100*year( stay_date)+month( stay_date) = &mo_out2 THEN '_2MNOut' when 100*year( stay_date)+month( stay_date) = &mo_out3 THEN '_3MNOut' END AS timeframe , SUM( ( rn+0)) AS rn, SUM( ( rev_net+0)) AS rv, SUM( ( rn_ly+0)) AS rn_ly, SUM( ( rev_net_ly+0)) AS rv_ly FROM allotb GROUP BY marsha, segment, wdwe, calculated timeframe;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS_-_OTB_Data_Pull.sas
" CREATE TABLE allotb3 AS ( SELECT  * , CASE WHEN  timeframe='_1MNOut' AND wdwe='WD' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rn END AS WD_TR_RN_1MO_OTB, CASE WHEN  timeframe='_1MNOut' AND wdwe='WD' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rn_ly END AS WD_TR_RN_1MO_OTB_LY, CASE WHEN  timeframe='_1MNOut' AND wdwe='WD' AND segment = 'GRP'  THEN rn END AS WD_GR_RN_1MO_OTB, CASE WHEN  timeframe='_1MNOut' AND wdwe='WD' AND segment = 'GRP'  THEN rn_ly END AS WD_GR_RN_1MO_OTB_LY, CASE WHEN  timeframe='_1MNOut' AND wdwe='WD' AND segment<>'CMP'  THEN rn END AS WD_TOT_RN_1MO_OTB, CASE WHEN  timeframe='_1MNOut' AND wdwe='WD' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rv END AS WD_TR_RV_1MO_OTB, CASE WHEN  timeframe='_1MNOut' AND wdwe='WD' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rv_ly END AS WD_TR_RV_1MO_OTB_LY, CASE WHEN  timeframe='_1MNOut' AND wdwe='WD' AND segment = 'GRP'  THEN rv END AS WD_GR_RV_1MO_OTB, CASE WHEN  timeframe='_1MNOut' AND wdwe='WD' AND segment = 'GRP'  THEN rv_ly END AS WD_GR_RV_1MO_OTB_LY, CASE WHEN  timeframe='_2MNOut' AND wdwe='WD' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rn END AS WD_TR_RN_2MO_OTB, CASE WHEN  timeframe='_2MNOut' AND wdwe='WD' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rn_ly END AS WD_TR_RN_2MO_OTB_LY, CASE WHEN  timeframe='_2MNOut' AND wdwe='WD' AND segment = 'GRP'  THEN rn END AS WD_GR_RN_2MO_OTB, CASE WHEN  timeframe='_2MNOut' AND wdwe='WD' AND segment = 'GRP'  THEN rn_ly END AS WD_GR_RN_2MO_OTB_LY, CASE WHEN  timeframe='_2MNOut' AND wdwe='WD' AND segment<>'CMP'  THEN rn END AS WD_TOT_RN_2MO_OTB, CASE WHEN  timeframe='_2MNOut' AND wdwe='WD' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rv END AS WD_TR_RV_2MO_OTB, CASE WHEN  timeframe='_2MNOut' AND wdwe='WD' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rv_ly END AS WD_TR_RV_2MO_OTB_LY, CASE WHEN  timeframe='_2MNOut' AND wdwe='WD' AND segment = 'GRP'  THEN rv END AS WD_GR_RV_2MO_OTB, CASE WHEN  timeframe='_2MNOut' AND wdwe='WD' AND segment = 'GRP'  THEN rv_ly END AS WD_GR_RV_2MO_OTB_LY, CASE WHEN  timeframe='_3MNOut' AND wdwe='WD' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rn END AS WD_TR_RN_3MO_OTB, CASE WHEN  timeframe='_3MNOut' AND wdwe='WD' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rn_ly END AS WD_TR_RN_3MO_OTB_LY, CASE WHEN  timeframe='_3MNOut' AND wdwe='WD' AND segment = 'GRP'  THEN rn END AS WD_GR_RN_3MO_OTB, CASE WHEN  timeframe='_3MNOut' AND wdwe='WD' AND segment = 'GRP'  THEN rn_ly END AS WD_GR_RN_3MO_OTB_LY, CASE WHEN  timeframe='_3MNOut' AND wdwe='WD' AND segment<>'CMP'  THEN rn END AS WD_TOT_RN_3MO_OTB, CASE WHEN  timeframe='_3MNOut' AND wdwe='WD' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rv END AS WD_TR_RV_3MO_OTB, CASE WHEN  timeframe='_3MNOut' AND wdwe='WD' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rv_ly END AS WD_TR_RV_3MO_OTB_LY, CASE WHEN  timeframe='_3MNOut' AND wdwe='WD' AND segment = 'GRP'  THEN rv END AS WD_GR_RV_3MO_OTB, CASE WHEN  timeframe='_3MNOut' AND wdwe='WD' AND segment = 'GRP'  THEN rv_ly END AS WD_GR_RV_3MO_OTB_LY, CASE WHEN  timeframe='_1MNOut' AND wdwe='WE' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rn END AS WE_TR_RN_1MO_OTB, CASE WHEN  timeframe='_1MNOut' AND wdwe='WE' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rn_ly END AS WE_TR_RN_1MO_OTB_LY, CASE WHEN  timeframe='_1MNOut' AND wdwe='WE' AND segment = 'GRP'  THEN rn END AS WE_GR_RN_1MO_OTB, CASE WHEN  timeframe='_1MNOut' AND wdwe='WE' AND segment = 'GRP'  THEN rn_ly END AS WE_GR_RN_1MO_OTB_LY, CASE WHEN  timeframe='_1MNOut' AND wdwe='WE' AND segment<>'CMP'  THEN rn END AS WE_TOT_RN_1MO_OTB, CASE WHEN  timeframe='_1MNOut' AND wdwe='WE' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rv END AS WE_TR_RV_1MO_OTB, CASE WHEN  timeframe='_1MNOut' AND wdwe='WE' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rv_ly END AS WE_TR_RV_1MO_OTB_LY, CASE WHEN  timeframe='_1MNOut' AND wdwe='WE' AND segment = 'GRP'  THEN rv END AS WE_GR_RV_1MO_OTB, CASE WHEN  timeframe='_1MNOut' AND wdwe='WE' AND segment = 'GRP'  THEN rv_ly END AS WE_GR_RV_1MO_OTB_LY, CASE WHEN  timeframe='_2MNOut' AND wdwe='WE' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rn END AS WE_TR_RN_2MO_OTB, CASE WHEN  timeframe='_2MNOut' AND wdwe='WE' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rn_ly END AS WE_TR_RN_2MO_OTB_LY, CASE WHEN  timeframe='_2MNOut' AND wdwe='WE' AND segment = 'GRP'  THEN rn END AS WE_GR_RN_2MO_OTB, CASE WHEN  timeframe='_2MNOut' AND wdwe='WE' AND segment = 'GRP'  THEN rn_ly END AS WE_GR_RN_2MO_OTB_LY, CASE WHEN  timeframe='_2MNOut' AND wdwe='WE' AND segment<>'CMP'  THEN rn END AS WE_TOT_RN_2MO_OTB, CASE WHEN  timeframe='_2MNOut' AND wdwe='WE' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rv END AS WE_TR_RV_2MO_OTB, CASE WHEN  timeframe='_2MNOut' AND wdwe='WE' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rv_ly END AS WE_TR_RV_2MO_OTB_LY, CASE WHEN  timeframe='_2MNOut' AND wdwe='WE' AND segment = 'GRP'  THEN rv END AS WE_GR_RV_2MO_OTB, CASE WHEN  timeframe='_2MNOut' AND wdwe='WE' AND segment = 'GRP'  THEN rv_ly END AS WE_GR_RV_2MO_OTB_LY, CASE WHEN  timeframe='_3MNOut' AND wdwe='WE' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rn END AS WE_TR_RN_3MO_OTB, CASE WHEN  timeframe='_3MNOut' AND wdwe='WE' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rn_ly END AS WE_TR_RN_3MO_OTB_LY, CASE WHEN  timeframe='_3MNOut' AND wdwe='WE' AND segment = 'GRP'  THEN rn END AS WE_GR_RN_3MO_OTB, CASE WHEN  timeframe='_3MNOut' AND wdwe='WE' AND segment = 'GRP'  THEN rn_ly END AS WE_GR_RN_3MO_OTB_LY, CASE WHEN  timeframe='_3MNOut' AND wdwe='WE' AND segment<>'CMP'  THEN rn END AS WE_TOT_RN_3MO_OTB, CASE WHEN  timeframe='_3MNOut' AND wdwe='WE' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rv END AS WE_TR_RV_3MO_OTB, CASE WHEN  timeframe='_3MNOut' AND wdwe='WE' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rv_ly END AS WE_TR_RV_3MO_OTB_LY, CASE WHEN  timeframe='_3MNOut' AND wdwe='WE' AND segment = 'GRP'  THEN rv END AS WE_GR_RV_3MO_OTB, CASE WHEN  timeframe='_3MNOut' AND wdwe='WE' AND segment = 'GRP'  THEN rv_ly END AS WE_GR_RV_3MO_OTB_LY, CASE WHEN  timeframe='_1MNOut' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rn END AS FW_TR_RN_1MO_OTB, CASE WHEN  timeframe='_1MNOut' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rn_ly END AS FW_TR_RN_1MO_OTB_LY, CASE WHEN  timeframe='_1MNOut' AND segment = 'GRP'  THEN rn END AS FW_GR_RN_1MO_OTB, CASE WHEN  timeframe='_1MNOut' AND segment = 'GRP'  THEN rn_ly END AS FW_GR_RN_1MO_OTB_LY, CASE WHEN  timeframe='_1MNOut' AND segment<>'CMP'  THEN rn END AS FW_TOT_RN_1MO_OTB, CASE WHEN  timeframe='_1MNOut' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rv END AS FW_TR_RV_1MO_OTB, CASE WHEN  timeframe='_1MNOut' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rv_ly END AS FW_TR_RV_1MO_OTB_LY, CASE WHEN  timeframe='_1MNOut' AND segment = 'GRP'  THEN rv END AS FW_GR_RV_1MO_OTB, CASE WHEN  timeframe='_1MNOut' AND segment = 'GRP'  THEN rv_ly END AS FW_GR_RV_1MO_OTB_LY, CASE WHEN  timeframe='_2MNOut' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rn END AS FW_TR_RN_2MO_OTB, CASE WHEN  timeframe='_2MNOut' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rn_ly END AS FW_TR_RN_2MO_OTB_LY, CASE WHEN  timeframe='_2MNOut' AND segment = 'GRP'  THEN rn END AS FW_GR_RN_2MO_OTB, CASE WHEN  timeframe='_2MNOut' AND segment = 'GRP'  THEN rn_ly END AS FW_GR_RN_2MO_OTB_LY, CASE WHEN  timeframe='_2MNOut' AND segment<>'CMP'  THEN rn END AS FW_TOT_RN_2MO_OTB, CASE WHEN  timeframe='_2MNOut' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rv END AS FW_TR_RV_2MO_OTB, CASE WHEN  timeframe='_2MNOut' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rv_ly END AS FW_TR_RV_2MO_OTB_LY, CASE WHEN  timeframe='_2MNOut' AND segment = 'GRP'  THEN rv END AS FW_GR_RV_2MO_OTB, CASE WHEN  timeframe='_2MNOut' AND segment = 'GRP'  THEN rv_ly END AS FW_GR_RV_2MO_OTB_LY, CASE WHEN  timeframe='_3MNOut' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rn END AS FW_TR_RN_3MO_OTB, CASE WHEN  timeframe='_3MNOut' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rn_ly END AS FW_TR_RN_3MO_OTB_LY, CASE WHEN  timeframe='_3MNOut' AND segment = 'GRP'  THEN rn END AS FW_GR_RN_3MO_OTB, CASE WHEN  timeframe='_3MNOut' AND segment = 'GRP'  THEN rn_ly END AS FW_GR_RN_3MO_OTB_LY, CASE WHEN  timeframe='_3MNOut' AND segment<>'CMP'  THEN rn END AS FW_TOT_RN_3MO_OTB, CASE WHEN  timeframe='_3MNOut' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rv END AS FW_TR_RV_3MO_OTB, CASE WHEN  timeframe='_3MNOut' AND segment not IN ( 'CMP', 'CTC', 'GRP')  THEN rv_ly END AS FW_TR_RV_3MO_OTB_LY, CASE WHEN  timeframe='_3MNOut' AND segment = 'GRP'  THEN rv END AS FW_GR_RV_3MO_OTB, CASE WHEN  timeframe='_3MNOut' AND segment = 'GRP'  THEN rv_ly END AS FW_GR_RV_3MO_OTB_LY FROM allotb2 );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS_-_OTB_Data_Pull.sas
" CREATE TABLE mams.esf_otb AS select marsha , SUM( WD_TR_RN_1MO_OTB) AS WD_TR_RN_1MO_OTB , SUM( WD_TR_RN_1MO_OTB)/SUM( WD_TR_RN_1MO_OTB_ly) -1 AS  WD_TR_RN_Chg_1MO_OTB , SUM( WD_TR_RN_1MO_OTB)/SUM( WD_TOT_RN_1MO_OTB) AS WD_TR_Mix_1MO_OTB , SUM( WD_GR_RN_1MO_OTB) AS WD_GR_RN_1MO_OTB , SUM( WD_GR_RN_1MO_OTB)/SUM( WD_GR_RN_1MO_OTB_ly) -1 AS  WD_GR_RN_Chg_1MO_OTB , SUM( WD_GR_RN_1MO_OTB)/SUM( WD_TOT_RN_1MO_OTB) AS WD_GR_Mix_1MO_OTB , ( SUM( WD_GR_RV_1MO_OTB) / SUM( WD_GR_RN_1MO_OTB)) / ( SUM( WD_GR_RV_1MO_OTB_ly) / SUM( WD_GR_RN_1MO_OTB_ly)) AS WD_GR_ADR_Chg_1MO_OTB , SUM( WD_TR_RN_2MO_OTB) AS WD_TR_RN_2PO_OTB , SUM( WD_TR_RN_2MO_OTB)/SUM( WD_TR_RN_2MO_OTB_ly) -1 AS  WD_TR_RN_Chg_2PO_OTB , SUM( WD_TR_RN_2MO_OTB)/SUM( WD_TOT_RN_2MO_OTB) AS WD_TR_Mix_2PO_OTB , SUM( WD_GR_RN_2MO_OTB) AS WD_GR_RN_2PO_OTB , SUM( WD_GR_RN_2MO_OTB)/SUM( WD_GR_RN_2MO_OTB_ly) -1 AS  WD_GR_RN_Chg_2PO_OTB , SUM( WD_GR_RN_2MO_OTB)/SUM( WD_TOT_RN_2MO_OTB) AS WD_GR_Mix_2PO_OTB , ( SUM( WD_GR_RV_2MO_OTB) / SUM( WD_GR_RN_2MO_OTB)) / ( SUM( WD_GR_RV_2MO_OTB_ly) / SUM( WD_GR_RN_2MO_OTB_ly)) AS WD_GR_ADR_Chg_2PO_OTB , SUM( WD_TR_RN_3MO_OTB) AS WD_TR_RN_3MO_OTB , SUM( WD_TR_RN_3MO_OTB)/SUM( WD_TR_RN_3MO_OTB_ly) -1 AS  WD_TR_RN_Chg_3MO_OTB , SUM( WD_TR_RN_3MO_OTB)/SUM( WD_TOT_RN_3MO_OTB) AS WD_TR_Mix_3MO_OTB , SUM( WD_GR_RN_3MO_OTB) AS WD_GR_RN_3MO_OTB , SUM( WD_GR_RN_3MO_OTB)/SUM( WD_GR_RN_3MO_OTB_ly) -1 AS  WD_GR_RN_Chg_3MO_OTB , SUM( WD_GR_RN_3MO_OTB)/SUM( WD_TOT_RN_3MO_OTB) AS WD_GR_Mix_3MO_OTB , ( SUM( WD_GR_RV_3MO_OTB) / SUM( WD_GR_RN_3MO_OTB)) / ( SUM( WD_GR_RV_3MO_OTB_ly) / SUM( WD_GR_RN_3MO_OTB_ly)) AS WD_GR_ADR_Chg_3MO_OTB , SUM( WE_TR_RN_1MO_OTB) AS WE_TR_RN_1MO_OTB , SUM( WE_TR_RN_1MO_OTB)/SUM( WE_TR_RN_1MO_OTB_ly) -1 AS  WE_TR_RN_Chg_1MO_OTB , SUM( WE_TR_RN_1MO_OTB)/SUM( WE_TOT_RN_1MO_OTB) AS WE_TR_Mix_1MO_OTB , SUM( WE_GR_RN_1MO_OTB) AS WE_GR_RN_1MO_OTB , SUM( WE_GR_RN_1MO_OTB)/SUM( WE_GR_RN_1MO_OTB_ly) -1 AS  WE_GR_RN_Chg_1MO_OTB , SUM( WE_GR_RN_1MO_OTB)/SUM( WE_TOT_RN_1MO_OTB) AS WE_GR_Mix_1MO_OTB , ( SUM( WE_GR_RV_1MO_OTB) / SUM( WE_GR_RN_1MO_OTB)) / ( SUM( WE_GR_RV_1MO_OTB_ly) / SUM( WE_GR_RN_1MO_OTB_ly)) AS WE_GR_ADR_Chg_1MO_OTB , SUM( WE_TR_RN_2MO_OTB) AS WE_TR_RN_2PO_OTB , SUM( WE_TR_RN_2MO_OTB)/SUM( WE_TR_RN_2MO_OTB_ly) -1 AS  WE_TR_RN_Chg_2PO_OTB , SUM( WE_TR_RN_2MO_OTB)/SUM( WE_TOT_RN_2MO_OTB) AS WE_TR_Mix_2PO_OTB , SUM( WE_GR_RN_2MO_OTB) AS WE_GR_RN_2PO_OTB , SUM( WE_GR_RN_2MO_OTB)/SUM( WE_GR_RN_2MO_OTB_ly) -1 AS  WE_GR_RN_Chg_2PO_OTB , SUM( WE_GR_RN_2MO_OTB)/SUM( WE_TOT_RN_2MO_OTB) AS WE_GR_Mix_2PO_OTB , ( SUM( WE_GR_RV_2MO_OTB) / SUM( WE_GR_RN_2MO_OTB)) / ( SUM( WE_GR_RV_2MO_OTB_ly) / SUM( WE_GR_RN_2MO_OTB_ly)) AS WE_GR_ADR_Chg_2PO_OTB , SUM( WE_TR_RN_3MO_OTB) AS WE_TR_RN_3MO_OTB , SUM( WE_TR_RN_3MO_OTB)/SUM( WE_TR_RN_3MO_OTB_ly) -1 AS  WE_TR_RN_Chg_3MO_OTB , SUM( WE_TR_RN_3MO_OTB)/SUM( WE_TOT_RN_3MO_OTB) AS WE_TR_Mix_3MO_OTB , SUM( WE_GR_RN_3MO_OTB) AS WE_GR_RN_3MO_OTB , SUM( WE_GR_RN_3MO_OTB)/SUM( WE_GR_RN_3MO_OTB_ly) -1 AS  WE_GR_RN_Chg_3MO_OTB , SUM( WE_GR_RN_3MO_OTB)/SUM( WE_TOT_RN_3MO_OTB) AS WE_GR_Mix_3MO_OTB , ( SUM( WE_GR_RV_3MO_OTB) / SUM( WE_GR_RN_3MO_OTB)) / ( SUM( WE_GR_RV_3MO_OTB_ly) / SUM( WE_GR_RN_3MO_OTB_ly)) AS WE_GR_ADR_Chg_3MO_OTB , SUM( FW_TR_RN_1MO_OTB) AS FW_TR_RN_1MO_OTB , SUM( FW_TR_RN_1MO_OTB)/SUM( FW_TR_RN_1MO_OTB_ly) -1 AS  FW_TR_RN_Chg_1MO_OTB , SUM( FW_TR_RN_1MO_OTB)/SUM( FW_TOT_RN_1MO_OTB) AS FW_TR_Mix_1MO_OTB , SUM( FW_GR_RN_1MO_OTB) AS FW_GR_RN_OTB_TY_1MO , SUM( FW_GR_RN_1MO_OTB_LY) AS FW_GR_RN_OTB_LY_1MO , SUM( FW_GR_RN_1MO_OTB)/SUM( FW_GR_RN_1MO_OTB_ly) -1 AS  FW_GR_RN_Chg_1MO_OTB , SUM( FW_GR_RN_1MO_OTB)/SUM( FW_TOT_RN_1MO_OTB) AS FW_GR_Mix_1MO_OTB , ( SUM( FW_GR_RV_1MO_OTB) / SUM( FW_GR_RN_1MO_OTB)) / ( SUM( FW_GR_RV_1MO_OTB_ly) / SUM( FW_GR_RN_1MO_OTB_ly)) AS FW_GR_ADR_Chg_1MO_OTB , SUM( FW_TR_RN_2MO_OTB) AS FW_TR_RN_2PO_OTB , SUM( FW_TR_RN_2MO_OTB)/SUM( FW_TR_RN_2MO_OTB_ly) -1 AS  FW_TR_RN_Chg_2PO_OTB , SUM( FW_TR_RN_2MO_OTB)/SUM( FW_TOT_RN_2MO_OTB) AS FW_TR_Mix_2PO_OTB , SUM( FW_GR_RN_2MO_OTB) AS FW_GR_RN_2PO_OTB , SUM( FW_GR_RN_2MO_OTB)/SUM( FW_GR_RN_2MO_OTB_ly) -1 AS  FW_GR_RN_Chg_2PO_OTB , SUM( FW_GR_RN_2MO_OTB)/SUM( FW_TOT_RN_2MO_OTB) AS FW_GR_Mix_2PO_OTB , ( SUM( FW_GR_RV_2MO_OTB) / SUM( FW_GR_RN_2MO_OTB)) / ( SUM( FW_GR_RV_2MO_OTB_ly) / SUM( FW_GR_RN_2MO_OTB_ly)) AS FW_GR_ADR_Chg_2PO_OTB , SUM( FW_TR_RN_3MO_OTB) AS FW_TR_RN_3MO_OTB , SUM( FW_TR_RN_3MO_OTB)/SUM( FW_TR_RN_3MO_OTB_ly) -1 AS  FW_TR_RN_Chg_3MO_OTB , SUM( FW_TR_RN_3MO_OTB)/SUM( FW_TOT_RN_3MO_OTB) AS FW_TR_Mix_3MO_OTB , SUM( FW_GR_RN_3MO_OTB) AS FW_GR_RN_OTB_TY_3MO , SUM( FW_GR_RN_3MO_OTB_LY) AS FW_GR_RN_OTB_LY_3MO , SUM( FW_GR_RN_3MO_OTB)/SUM( FW_GR_RN_3MO_OTB_ly) -1 AS  FW_GR_RN_Chg_3MO_OTB , SUM( FW_GR_RN_3MO_OTB)/SUM( FW_TOT_RN_3MO_OTB) AS FW_GR_Mix_3MO_OTB , ( SUM( FW_GR_RV_3MO_OTB) / SUM( FW_GR_RN_3MO_OTB)) / ( SUM( FW_GR_RV_3MO_OTB_ly) / SUM( FW_GR_RN_3MO_OTB_ly)) AS FW_GR_ADR_Chg_3MO_OTB , SUM( SUM( WD_GR_RN_3MO_OTB),-SUM( WD_GR_RN_3MO_OTB_ly)) AS WD_GR_RN_Var_3MO_OTB , SUM( SUM( WE_GR_RN_1MO_OTB),-SUM( WE_GR_RN_1MO_OTB_ly)) AS WE_GR_RN_Var_1MO_OTB , SUM( SUM( WE_GR_RN_3MO_OTB),-SUM( WE_GR_RN_3MO_OTB_ly)) AS WE_GR_RN_Var_3MO_OTB FROM allotb3 GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS_-_OTB_Data_Pull.sas
" CREATE TABLE all_rpo AS  (  select prop_code, stydt,FCST_OCC_CURR,STYDOW FROM aw_TGT_PROXY_DBO.IT_CACHE_PW_OUTPUT_TGT WHERE EXECUTION_DT = &dte  )  ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS_-_OY_Forecast.sas
" CREATE TABLE fw_fcst AS select PROP_CODE, 100*year( STYDT)+month( STYDT) AS yrmo, AVG( FCST_OCC_CURR/100) AS FW_OY_FCST FROM all_rpo GROUP BY PROP_CODE, calculated yrmo;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS_-_OY_Forecast.sas
" CREATE TABLE WD_fcst AS select PROP_CODE, 100*year( STYDT)+month( STYDT) AS yrmo, AVG( FCST_OCC_CURR/100) AS WD_OY_FCST FROM all_rpo WHERE STYDOW not IN ( 'FRI', 'SAT') GROUP BY PROP_CODE, calculated yrmo;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS_-_OY_Forecast.sas
" CREATE TABLE WE_fcst AS select PROP_CODE, 100*year( STYDT)+month( STYDT) AS yrmo, AVG( FCST_OCC_CURR/100) AS WE_OY_FCST FROM all_rpo WHERE STYDOW IN ( 'FRI', 'SAT') GROUP BY PROP_CODE, calculated yrmo;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS_-_OY_Forecast.sas
" CREATE TABLE WED_fcst AS select PROP_CODE, 100*year( STYDT)+month( STYDT) AS yrmo, AVG( FCST_OCC_CURR/100) AS WED_OY_FCST FROM all_rpo WHERE STYDOW ='WED' GROUP BY PROP_CODE, calculated yrmo;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS_-_OY_Forecast.sas
" CREATE TABLE TUEWED_fcst AS select PROP_CODE, COUNT( PROP_CODE) AS midweek_occ_ge80_num FROM all_rpo WHERE STYDOW ='WED' AND 100*year( STYDT)+month( STYDT) IN ( &mo_out1, &mo_out2, &mo_out3) AND FCST_OCC_CURR/100>=.8 GROUP BY PROP_CODE;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS_-_OY_Forecast.sas
" CREATE TABLE Sat_fcst AS select PROP_CODE, 100*year( STYDT)+month( STYDT) AS yrmo, AVG( FCST_OCC_CURR/100) AS SAT_OY_FCST FROM all_rpo WHERE STYDOW ='SAT' GROUP BY PROP_CODE, calculated yrmo;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS_-_OY_Forecast.sas
" CREATE TABLE all_fcst AS select a.PROP_CODE, a.yrmo, a.FW_OY_FCST, b.WD_OY_FCST, c.WE_OY_FCST, d.WED_OY_FCST, e.SAT_OY_FCST FROM fw_fcst AS a LEFT JOIN wd_fcst AS b ON a.PROP_CODE=b.PROP_CODE AND a.yrmo=b.yrmo LEFT JOIN we_fcst AS c ON a.PROP_CODE=c.PROP_CODE AND a.yrmo=c.yrmo LEFT JOIN wed_fcst AS d ON a.PROP_CODE=d.PROP_CODE AND a.yrmo=d.yrmo LEFT JOIN sat_fcst AS e ON a.PROP_CODE=e.PROP_CODE AND a.yrmo=e.yrmo;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS_-_OY_Forecast.sas
 CREATE TABLE fcst_1mo AS ( SELECT  *  FROM all_fcst  WHERE yrmo=&mo_out1);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS_-_OY_Forecast.sas
 CREATE TABLE fcst_2mo AS ( SELECT  *  FROM all_fcst  WHERE yrmo=&mo_out2);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS_-_OY_Forecast.sas
 CREATE TABLE fcst_3mo AS ( SELECT  *  FROM all_fcst  WHERE yrmo=&mo_out3);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS_-_OY_Forecast.sas
" CREATE TABLE mams.mams_oy_forecast AS select coalesce( a.PROP_CODE,b.PROP_CODE,c.PROP_CODE) AS MARSHA , a.FW_OY_FCST AS FW_OY_FCST_Occ_1MO, a.WD_OY_FCST AS WD_OY_FCST_Occ_1MO , a.WE_OY_FCST AS WE_OY_FCST_Occ_1MO, a.WED_OY_FCST AS Wed_Occ_1MO , a.SAT_OY_FCST AS Sat_Occ_1MO , b.FW_OY_FCST AS FW_OY_FCST_Occ_2MO, b.WD_OY_FCST AS WD_OY_FCST_Occ_2PO , b.WE_OY_FCST AS WE_OY_FCST_Occ_2PO, b.WED_OY_FCST AS Wed_Occ_2MO , b.SAT_OY_FCST AS Sat_Occ_2MO , c.FW_OY_FCST AS FW_OY_FCST_Occ_3MO, c.WD_OY_FCST AS WD_OY_FCST_Occ_3MO , c.WE_OY_FCST AS WE_OY_FCST_Occ_3MO, c.WED_OY_FCST AS Wed_Occ_3MO , c.SAT_OY_FCST AS Sat_Occ_3MO , d.midweek_occ_ge80_num FROM fcst_1mo AS a full JOIN fcst_2mo AS b ON a.PROP_CODE=b.PROP_CODE full JOIN fcst_3mo AS c ON coalesce( a.PROP_CODE,b.PROP_CODE)=c.PROP_CODE LEFT JOIN TUEWED_fcst AS d ON coalesce( a.PROP_CODE,b.PROP_CODE,c.PROP_CODE)=d.PROP_CODE;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS_-_OY_Forecast.sas
 CREATE TABLE prop_master AS  (  SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER A  ) ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS_MRDW_Data_Pull_-_Monthly_New.sas
" CREATE TABLE daysytd_ty AS  (  select b.year_cal , COUNT( b.date_dt) AS days_ytd_ty FROM mrdw_dim_date b WHERE 100*b.year_cal+b.month_cal_id <= &curr_mo AND 100*b.year_cal+b.month_cal_id >= &curr_mo-12 GROUP BY b.year_cal ORDER BY b.year_cal  )  ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS_MRDW_Data_Pull_-_Monthly_New.sas
" CREATE TABLE daysytd_ly AS  (  select b.year_cal , COUNT( b.date_dt) AS days_ytd_ly FROM mrdw_dim_date b WHERE 100*b.year_cal+b.month_cal_id <= &curr_mo-100 AND 100*b.year_cal+b.month_cal_id >= &curr_mo-112 GROUP BY b.year_cal ORDER BY b.year_cal  )  ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS_MRDW_Data_Pull_-_Monthly_New.sas
" CREATE TABLE ytddata AS  (  select a.property_cd, b.year_cal , SUM( a.roomnights_qty) AS rn, SUM( a.net_rev_local_amt) AS rv , SUM( net_rev_usd_sub_amt) AS rv_usd FROM mrdw_fact_agg_dr_rev_analysis a, mrdw_dim_date b WHERE a.date_stay_dt=b.date_dt AND a.brand_cd IN ( 'CY', 'SH', 'FI', 'AR', 'OX', 'AL', 'FP') AND 100*b.year_cal+b.month_cal_id <= &curr_mo AND 100*b.year_cal+b.month_cal_id >= &curr_mo-12 GROUP BY a.property_cd, b.year_cal ORDER BY a.property_cd, b.year_cal  )  ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS_MRDW_Data_Pull_-_Monthly_New.sas
" CREATE TABLE ytddataly AS  (  select a.property_cd, b.year_cal , SUM( a.roomnights_qty) AS rn, SUM( a.net_rev_local_amt) AS rv , SUM( net_rev_usd_sub_amt) AS rv_usd FROM mrdw_fact_agg_dr_rev_analysis a, mrdw_dim_date b WHERE a.date_stay_dt=b.date_dt AND a.brand_cd IN ( 'CY', 'SH', 'FI', 'AR', 'OX', 'AL', 'FP') AND 100*b.year_cal+b.month_cal_id <= &curr_mo-100 AND 100*b.year_cal+b.month_cal_id >= &curr_mo-112 GROUP BY a.property_cd, b.year_cal ORDER BY a.property_cd, b.year_cal  )  ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS_MRDW_Data_Pull_-_Monthly_New.sas
" CREATE TABLE RevPAR_YTD AS select plu.marsha, coalesce( a.year_Cal,b.year_cal+1) AS year , a.rv, a.rv_usd, b.rv AS rv_ly, b.rv_usd AS rv_usd_ly , c.days_ytd_ty*plu.hcap AS capacity_ty , d.days_ytd_ly*plu.hcap AS capacity_ly , CASE WHEN plu.curr='USD' THEN a.rv_usd/calculated capacity_ty ELSE a.rv_usd/calculated capacity_ty END AS RevPAR_YTD_TY , CASE WHEN plu.curr='USD' THEN b.rv_usd/calculated capacity_ly ELSE b.rv_usd/calculated capacity_ly END AS RevPAR_YTD_LY , ( calculated RevPAR_YTD_TY/calculated RevPAR_YTD_LY) - 1 AS RevPAR_YTD_Chg FROM prop_master AS plu full JOIN ytddata AS a ON plu.marsha=a.property_cd full JOIN ytddataly AS b ON plu.marsha=b.property_cd AND a.year_cal=b.year_cal+1 LEFT JOIN daysytd_ty AS c ON coalesce( a.year_Cal,b.year_cal+1)=c.year_cal LEFT JOIN daysytd_ly AS d ON coalesce( a.year_Cal-1,b.year_cal)=d.year_cal;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS_MRDW_Data_Pull_-_Monthly_New.sas
 CREATE TABLE junk AS  (  select b.* FROM mrdw_dim_date b LIMIT 500  )  ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS_MRDW_Data_Pull_-_Monthly_New.sas
" CREATE TABLE daysinmo AS  (  select b.year_cal, b.month_cal_id , CASE WHEN b.ab_day_of_week_cd IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' END AS wdwe , COUNT( b.date_dt) AS days FROM mrdw_dim_date b WHERE 100*b.year_cal+b.month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo, &curr_mo-100, &l2_mo-100, &l3_mo-100) GROUP BY b.year_cal, b.month_cal_id, wdwe ORDER BY b.year_cal, b.month_cal_id, wdwe  )  ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS_MRDW_Data_Pull_-_Monthly_New.sas
" CREATE TABLE daysinmo2 AS ( SELECT  * , CASE WHEN  100*year_cal+month_cal_id = &curr_mo  THEN days END AS MN_days, CASE WHEN  100*year_cal+month_cal_id = &curr_mo-100  THEN days END AS MN_days_ly, CASE WHEN  100*year_cal+month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo)  THEN days END AS L3_days, CASE WHEN  100*year_cal+month_cal_id+100 IN ( &curr_mo, &l2_mo, &l3_mo)  THEN days END AS L3_days_ly, CASE WHEN  wdwe='WD' AND 100*year_cal+month_cal_id = &curr_mo  THEN days END AS MN_WD_days, CASE WHEN  wdwe='WD' AND 100*year_cal+month_cal_id = &curr_mo-100  THEN days END AS MN_WD_days_ly, CASE WHEN  wdwe='WD' AND 100*year_cal+month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo)  THEN days END AS L3_WD_days, CASE WHEN  wdwe='WD' AND 100*year_cal+month_cal_id+100 IN ( &curr_mo, &l2_mo, &l3_mo)  THEN days END AS L3_WD_days_ly, CASE WHEN  wdwe='WE' AND 100*year_cal+month_cal_id = &curr_mo  THEN days END AS MN_WE_days, CASE WHEN  wdwe='WE' AND 100*year_cal+month_cal_id = &curr_mo-100  THEN days END AS MN_WE_days_ly, CASE WHEN  wdwe='WE' AND 100*year_cal+month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo)  THEN days END AS L3_WE_days, CASE WHEN  wdwe='WE' AND 100*year_cal+month_cal_id+100 IN ( &curr_mo, &l2_mo, &l3_mo)  THEN days END AS L3_WE_days_ly FROM daysinmo );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS_MRDW_Data_Pull_-_Monthly_New.sas
" CREATE TABLE daysinmonth AS select &curr_mo AS yrmo, SUM( MN_days) AS MN_days, SUM( MN_days_ly) AS MN_days_ly , SUM( L3_days) AS L3_days, SUM( L3_days_ly) AS L3_days_ly , SUM( MN_WD_days) AS MN_WD_days, SUM( MN_WD_days_ly) AS MN_WD_days_ly , SUM( L3_WD_days) AS L3_WD_days, SUM( L3_WD_days_ly) AS L3_WD_days_ly , SUM( MN_WE_days) AS MN_WE_days, SUM( MN_WE_days_ly) AS MN_WE_days_ly , SUM( L3_WE_days) AS L3_WE_days, SUM( L3_WE_days_ly) AS L3_WE_days_ly FROM daysinmo2;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS_MRDW_Data_Pull_-_Monthly_New.sas
" CREATE TABLE mrdwdata AS  (  select a.property_cd, b.year_cal, b.month_cal_id , CASE WHEN a.market_prefix_cd IN ( '10', '12', '30', '34', '37', '20', '23', '24', '21') THEN 'NQ' when a.market_prefix_cd IN ( '17', '18') THEN 'SC' when a.market_prefix_cd = '16' THEN 'GV' when a.market_prefix_cd IN ( 'GR', 'CN', 'CT') THEN a.market_prefix_cd ELSE 'OT' END AS segment , CASE WHEN b.ab_day_of_week_cd IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' END AS wdwe , CASE WHEN a.market_prefix_cd IN ( '10', '12') THEN a.market_prefix_cd ELSE 'OT' END AS bnch , SUM( a.roomnights_qty) AS rn, SUM( a.net_rev_local_amt) AS rv , SUM( net_rev_usd_sub_amt) AS rv_usd FROM mrdw_fact_agg_dr_rev_analysis a, mrdw_dim_date b WHERE a.date_stay_dt=b.date_dt AND a.brand_cd IN ( 'CY', 'SH', 'FI', 'AR', 'OX', 'AL', 'FP') AND a.market_prefix_cd not IN ( '60', '61', '62', '63', '64', '65', '66', '67', '68', '69') AND 100*b.year_cal+b.month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo, &curr_mo-100, &l2_mo-100, &l3_mo-100) GROUP BY a.property_cd, b.year_cal, b.month_cal_id, segment, wdwe, bnch ORDER BY a.property_cd, b.year_cal, b.month_cal_id, segment, wdwe, bnch  )  ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS_MRDW_Data_Pull_-_Monthly_New.sas
" CREATE TABLE mndata AS select property_cd , CASE WHEN 100*a.year_cal+a.month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo) THEN &curryr ELSE &curryr-1 END AS yr , 'MN' AS timeframe, segment, wdwe, bnch , rn, rv, rv_usd FROM mrdwdata AS a WHERE 100*a.year_cal+a.month_cal_id = &curr_mo OR 100*a.year_cal+a.month_cal_id = &curr_mo-100;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS_MRDW_Data_Pull_-_Monthly_New.sas
" CREATE TABLE l3data AS select property_cd , CASE WHEN 100*a.year_cal+a.month_cal_id IN ( &curr_mo, &l2_mo, &l3_mo) THEN &curryr ELSE &curryr-1 END AS yr , 'L3' AS timeframe, segment, wdwe, bnch , SUM( rn) AS rn, SUM( rv) AS rv, SUM( rv_usd) AS rv_usd FROM mrdwdata AS a GROUP BY property_cd, calculated yr, segment, wdwe, bnch;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS_MRDW_Data_Pull_-_Monthly_New.sas
 CREATE TABLE mrdwdata2 AS ( SELECT  *  FROM l3data UNION ALL SELECT  *  FROM mndata);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS_MRDW_Data_Pull_-_Monthly_New.sas
" CREATE TABLE mrdwdata3 AS select coalesce( a.property_cd,b.property_cd) AS marsha, coalesce( a.timeframe,b.timeframe) AS timeframe , coalesce( a.segment,b.segment) AS segment, coalesce( a.wdwe,b.wdwe) AS wdwe , coalesce( a.bnch,b.bnch) AS bnch , a.rn AS rn, a.rv_usd AS rv, b.rn AS rn_ly, b.rv_usd AS rv_ly FROM mrdwdata2 AS a full JOIN mrdwdata2 AS b ON a.property_cd=b.property_cd AND a.yr=b.yr+1 AND a.timeframe=b.timeframe AND a.segment=b.segment AND a.wdwe=b.wdwe AND a.bnch=b.bnch WHERE coalesce( a.yr,b.yr+1)=&curryr;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS_MRDW_Data_Pull_-_Monthly_New.sas
"SELECT * FROM mrdwdata3 ORDER BY marsha ,timeframe ,segment ,wdwe ,bnch;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS_MRDW_Data_Pull_-_Monthly_New.sas
" CREATE TABLE tranmrdw2 AS ( SELECT  *  , compress( timeframe||'_'||segment||'_'||wdwe||'_'||_name_ ) AS idVAR  FROM tranmrdw );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS_MRDW_Data_Pull_-_Monthly_New.sas
" CREATE TABLE tr_sum1 AS select marsha, compress( timeframe||'_'||segment||'_'||'FW'||'_'||_name_) AS idVAR, SUM( col1) AS col1 FROM tranmrdw GROUP BY marsha, calculated idVAR;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS_MRDW_Data_Pull_-_Monthly_New.sas
" CREATE TABLE tr_sum2 AS select marsha, compress( timeframe||'_'||'TO'||'_'||wdwe||'_'||_name_) AS idVAR, SUM( col1) AS col1 FROM tranmrdw GROUP BY marsha, calculated idVAR;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS_MRDW_Data_Pull_-_Monthly_New.sas
" CREATE TABLE tr_sum3 AS select marsha, compress( timeframe||'_'||segment||'_'||wdwe||'_'||_name_) AS idVAR, SUM( col1) AS col1 FROM tranmrdw GROUP BY marsha, calculated idVAR;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS_MRDW_Data_Pull_-_Monthly_New.sas
" CREATE TABLE tr_sum4 AS select marsha, compress( timeframe||'_'||'TO'||'_'||'FW'||'_'||_name_) AS idVAR, SUM( col1) AS col1 FROM tranmrdw GROUP BY marsha, calculated idVAR;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS_MRDW_Data_Pull_-_Monthly_New.sas
" CREATE TABLE tr_sum5 AS select marsha, compress( timeframe||'_'||bnch||'_'||wdwe||'_'||_name_) AS idVAR, SUM( col1) AS col1 FROM tranmrdw WHERE bnch<>'OT' GROUP BY marsha, calculated idVAR;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS_MRDW_Data_Pull_-_Monthly_New.sas
" CREATE TABLE tr_sumall AS ( SELECT  *  , &curr_mo AS yrmo  FROM tr_sum3 UNION ALL SELECT  *  , &curr_mo AS yrmo  FROM tr_sum1 UNION ALL SELECT  *  , &curr_mo AS yrmo  FROM tr_sum2 UNION ALL SELECT  *  , &curr_mo AS yrmo  FROM tr_sum4 UNION ALL SELECT  *  , &curr_mo AS yrmo  FROM tr_sum5);",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS_MRDW_Data_Pull_-_Monthly_New.sas
"SELECT * FROM tr_sumall ORDER BY marsha ,idVAR;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS_MRDW_Data_Pull_-_Monthly_New.sas
" CREATE TABLE mams.mams_mrdw AS select a.marsha , MN_TO_WD_rv/MN_TO_WD_rn AS WD_ADR_MN , L3_TO_WD_rv/L3_TO_WD_rn AS WD_ADR_L3 , ( MN_TO_WD_rv/L3_TO_WD_rn) / ( MN_TO_WD_rv_ly/MN_TO_WD_rn_ly) - 1 AS WD_ADR_chg_MN , ( L3_TO_WD_rv/L3_TO_WD_rn) / ( L3_TO_WD_rv_ly/L3_TO_WD_rn_ly) - 1 AS WD_ADR_chg_L3 , L3_NQ_WD_rn / ( L3_NQ_WD_rn+L3_SC_WD_rn+L3_OT_WD_rn) AS WD_NQ_Mix_L3 , ( L3_NQ_WD_rv/L3_NQ_WD_rn) / ( L3_NQ_WD_rv_ly/L3_NQ_WD_rn_ly) - 1 AS WD_NQ_ADR_chg_L3 , ( MN_NQ_WD_rv/MN_NQ_WD_rn) / ( MN_NQ_WD_rv_ly/MN_NQ_WD_rn_ly) - 1 AS WD_NQ_ADR_chg_MN , ( L3_NQ_WD_rn/L3_NQ_WD_rn_ly) - 1 AS WD_NQ_RN_chg_L3 , ( MN_NQ_WD_rn/MN_NQ_WD_rn_ly) - 1 AS WD_NQ_RN_chg_MN , ( MN_GR_WD_rn/MN_GR_WD_rn_ly) - 1 AS WD_GR_RN_chg_MN , ( L3_GR_WD_rn/L3_GR_WD_rn_ly) - 1 AS WD_GR_RN_chg_L3 , ( L3_SC_WD_rv/L3_SC_WD_rn) / ( L3_SC_WD_rv_ly/L3_SC_WD_rn_ly) - 1 AS WD_SC_ADR_chg_L3 , ( MN_SC_WD_rn/MN_SC_WD_rn_ly) - 1 AS WD_SC_RN_chg_MN , ( L3_SC_WD_rn/L3_SC_WD_rn_ly) - 1 AS WD_SC_RN_chg_L3 , ( L3_NQ_WD_rv+L3_SC_WD_rv+L3_GV_WD_rv+L3_OT_WD_rv)/( L3_NQ_WD_rn+L3_SC_WD_rn+L3_GV_WD_rn+L3_OT_WD_rn) / ( L3_NQ_WD_rv/L3_NQ_WD_rn) AS WD_TRE_L3 , ( L3_GR_FW_rn+-L3_GR_FW_rn_ly) AS FW_GR_RN_chg_rn_L3 , ( MN_GR_FW_rn+-MN_GR_FW_rn_ly) AS FW_GR_RN_chg_rn_MN , L3_GR_WD_rn / L3_TO_WD_rn AS WD_Gr_Mix_L3 , SUM( L3_GR_WD_rn / L3_TO_WD_rn, -L3_GR_WD_rn_ly / L3_TO_WD_rn_ly) AS WD_Gr_Mix_chg_L3 , MN_GR_WD_rn / MN_TO_WD_rn AS WD_Gr_Mix_MN , SUM( MN_GR_WD_rn / MN_TO_WD_rn, -MN_GR_WD_rn_ly / MN_TO_WD_rn_ly) AS WD_Gr_Mix_Chg_MN , ( L3_GR_WD_rv/L3_GR_WD_rn) AS WD_GR_ADR_L3 , ( L3_GR_WE_rv/L3_GR_WE_rn) AS WE_GR_ADR_L3 , ( L3_GR_FW_rv/L3_GR_FW_rn) AS FW_GR_ADR_L3 , L3_TO_WE_rn/( hcap*L3_WE_days) AS WE_Occ_L3 , MN_TO_WD_rn/( hcap*MN_WD_days) AS WD_Occ_MN , L3_TO_WD_rn/( hcap*L3_WD_days) AS WD_Occ_L3 , MN_TO_WD_rn_ly/( hcap*MN_WD_days_ly) AS WD_Occ_MN_LY , calculated WD_Occ_MN - calculated WD_Occ_MN_LY AS WD_Occ_chg_MN , L3_SC_WD_rn / ( L3_NQ_WD_rn+L3_SC_WD_rn+L3_OT_WD_rn) AS WD_SC_Mix_L3 , ( L3_NQ_WE_rv/L3_NQ_WE_rn) / ( L3_NQ_WE_rv_ly/L3_NQ_WE_rn_ly) - 1 AS WE_NQ_ADR_chg_L3 , ( MN_NQ_WE_rv/MN_NQ_WE_rn) / ( MN_NQ_WE_rv_ly/MN_NQ_WE_rn_ly) - 1 AS WE_NQ_ADR_chg_MN , ( L3_NQ_WE_rn/L3_NQ_WE_rn_ly) - 1 AS WE_NQ_RN_chg_L3 , ( MN_NQ_WE_rn/MN_NQ_WE_rn_ly) - 1 AS WE_NQ_RN_chg_MN , ( MN_GR_WE_rn+-MN_GR_WE_rn_ly)/MN_GR_WE_rn_ly AS WE_GR_RN_chg_MN , ( L3_GR_WE_rn+-L3_GR_WE_rn_ly)/L3_GR_WE_rn_ly AS WE_GR_RN_chg_L3 , ( MN_GR_WE_rn+-MN_GR_WE_rn_ly) AS WE_GR_RN_Var_MN , ( L3_GR_WE_rn+-L3_GR_WE_rn_ly) AS WE_GR_RN_Var_L3 , ( MN_GR_WD_rn+-MN_GR_WD_rn_ly) AS WD_GR_RN_Var_MN , ( L3_GR_WD_rn+-L3_GR_WD_rn_ly) AS WD_GR_RN_Var_L3 , ( L3_GR_FW_rn+-L3_GR_FW_rn_ly) / L3_GR_FW_rn_ly AS FW_Group_RN_PctChg_L3 , ( ( MN_NQ_WD_rn+MN_SC_WD_rn+MN_GV_WD_rn+MN_OT_WD_rn)-( MN_NQ_WD_rn_ly+MN_SC_WD_rn_ly+MN_GV_WD_rn_ly+MN_OT_WD_rn_ly)) / ( MN_NQ_WD_rn_ly+MN_SC_WD_rn_ly+MN_GV_WD_rn_ly+MN_OT_WD_rn_ly) AS WD_TR_RNPCTChg_MN , ( ( L3_NQ_WD_rn+L3_SC_WD_rn+L3_GV_WD_rn+L3_OT_WD_rn)-( L3_NQ_WD_rn_ly+L3_SC_WD_rn_ly+L3_GV_WD_rn_ly+L3_OT_WD_rn_ly)) / ( L3_NQ_WD_rn_ly+L3_SC_WD_rn_ly+L3_GV_WD_rn_ly+L3_OT_WD_rn_ly) AS WD_TR_RNPCTChg_L3 , L3_GR_WE_rn / L3_TO_WE_rn AS WE_GR_Mix_L3 , SUM( L3_GR_WE_rn / L3_TO_WE_rn,-L3_GR_WE_rn_ly / L3_TO_WE_rn_ly) AS WE_GR_Mix_chg_L3 , MN_GR_WE_rn / MN_TO_WE_rn AS WE_GR_Mix_MN , SUM( MN_GR_WE_rn / MN_TO_WE_rn, -MN_GR_WE_rn_ly / MN_TO_WE_rn_ly) AS WE_GR_Mix_chg_MN , ( L3_NQ_WD_rn+L3_SC_WD_rn+L3_GV_WD_rn+L3_OT_WD_rn) / L3_TO_WD_rn AS WD_TR_Mix_L3 , ( L3_NQ_WD_rn_ly+L3_SC_WD_rn_ly+L3_GV_WD_rn_ly+L3_OT_WD_rn_ly) / L3_TO_WD_rn_ly AS WD_TR_Mix_LY_L3 , calculated WD_TR_Mix_L3 - calculated WD_TR_Mix_LY_L3 AS WD_TR_Mix_chg_L3 , ( MN_NQ_WD_rn+MN_SC_WD_rn+MN_GV_WD_rn+MN_OT_WD_rn) / MN_TO_WD_rn AS WD_TR_Mix_MN , ( MN_NQ_WD_rn_ly+MN_SC_WD_rn_ly+MN_GV_WD_rn_ly+MN_OT_WD_rn_ly) / MN_TO_WD_rn_ly AS WD_TR_Mix_LY_MN , calculated WD_TR_Mix_MN - calculated WD_TR_Mix_LY_MN AS WD_TR_Mix_chg_MN , ( L3_NQ_WE_rn+L3_SC_WE_rn+L3_GV_WE_rn+L3_OT_WE_rn) / L3_TO_WE_rn AS WE_TR_Mix_L3 , ( L3_NQ_WE_rn_ly+L3_SC_WE_rn_ly+L3_GV_WE_rn_ly+L3_OT_WE_rn_ly) / L3_TO_WE_rn_ly AS WE_TR_Mix_LY_L3 , calculated WE_TR_Mix_L3 - calculated WE_TR_Mix_LY_L3 AS WE_TR_Mix_chg_L3 , ( MN_NQ_WE_rn+MN_SC_WE_rn+MN_GV_WE_rn+MN_OT_WE_rn) / MN_TO_WE_rn AS WE_TR_Mix_MN , ( MN_NQ_WE_rn_ly+MN_SC_WE_rn_ly+MN_GV_WE_rn_ly+MN_OT_WE_rn_ly) / MN_TO_WE_rn_ly AS WE_TR_Mix_LY_MN , calculated WE_TR_Mix_MN - calculated WE_TR_Mix_LY_MN AS WE_TR_Mix_chg_MN , d.RevPAR_YTD_TY AS FW_RevPAR_YTD , d.RevPAR_YTD_Chg AS FW_RevPAR_Chg_YTD , L3_GV_WD_rn / L3_TO_WD_rn AS WD_GV_Mix_L3 , MN_12_WD_RV/MN_12_WD_RN AS WD_MC12_ADR_MN FROM tran2_mrdw AS a INNER JOIN daysinmonth AS b ON a.yrmo=b.yrmo INNER JOIN prop_master AS c ON a.marsha=c.marsha LEFT JOIN RevPAR_YTD AS d ON a.marsha=d.marsha ORDER BY a.marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS_MRDW_Data_Pull_-_Monthly_New.sas
" CREATE TABLE tobe120 AS  (  select PROP_CODE, SUM( AU_GRP_RMS_TOBE) AS GRP_TOBE_RM120 FROM AW_REV_DBO.WEEKLY_PROJ WHERE STAYDATE >= &startdt AND STAYDATE <= &enddt GROUP BY PROP_CODE  ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS_zeroTOBEs120.sas
"CREATE TABLE mams.tobe120_0 AS ( SELECT  *  , 'YES' AS GRP_TOBE_No120flg  FROM tobe120  WHERE GRP_TOBE_RM120=0);",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS_zeroTOBEs120.sas
ALTER TABLE mams.tobe120_0 DROP COLUMN GRP_TOBE_RM120 ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS_zeroTOBEs120.sas
 CREATE TABLE esf.tobe120_0 AS ( SELECT  *  FROM mams.tobe120_0 );,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MAMS_zeroTOBEs120.sas
" CREATE TABLE WEST2 AS ( SELECT F1, RevPAR_Index___Change FROM WEST  WHERE F1 <> """");",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Mid_Year_Field_Bonus_Report.sas
" CREATE TABLE EAST2 AS ( SELECT F1, RevPAR_Index___Change FROM EAST  WHERE F1 <> """");",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Mid_Year_Field_Bonus_Report.sas
" CREATE TABLE CANADA2 AS ( SELECT F1, RevPAR_Index___Change FROM CANADA  WHERE F1 <> """");",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Mid_Year_Field_Bonus_Report.sas
" CREATE TABLE CALA2 AS ( SELECT F1 , CAST( _018_Scomp_Status_in_Column_J, percent20.  ) AS RevPAR_Index___Change  FROM CALA  WHERE F1 <> """");",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Mid_Year_Field_Bonus_Report.sas
"CREATE TABLE AMERICAS_GOALS AS ( SELECT  *  , F1 AS MARSHA  FROM WEST2 UNION ALL SELECT  *  , F1 AS MARSHA  FROM EAST2 UNION ALL SELECT  *  , F1 AS MARSHA  FROM CANADA2 UNION ALL SELECT  *  , F1 AS MARSHA  FROM CALA2);",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Mid_Year_Field_Bonus_Report.sas
ALTER TABLE AMERICAS_GOALS DROP COLUMN F1 ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Mid_Year_Field_Bonus_Report.sas
" CREATE TABLE Full_Service_Property_Level AS select a.MARSHA, b.MARSHA_NEW, b.HOTEL_NAME, b.REGION, b.AVP, b.BRND, a.SCOMP , CASE WHEN a.SCOMP = 'Y' THEN 1 ELSE 0 END AS SCOMP_NUM , ROUND( ( ( a.MARREV/ a.MARAVAIL)/( a.MKTREV/a.MKTAVAIL))*100,.00001) AS RPI_TY , ROUND( ( ( a.MARREVLY/ a.MARAVAILLY)/( a.MKTREVLY/a.MKTAVAILLY))*100,.00001) AS RPI_LY , ROUND( (  ( ( a.MARREV/ a.MARAVAIL)/( a.MKTREV/a.MKTAVAIL))/100 , ( ( a.MARREVLY/ a.MARAVAILLY)/( a.MKTREVLY/a.MKTAVAILLY))*100 )-1,.00001) AS RPI_PCT_CHG , c.RevPAR_Index___Change AS RPI_GOAL_PCT_CHG FROM CMP.STR_MONTHLY_DATA AS a LEFT JOIN TGT_BUS.PROPERTY_MASTER_MISW_HIST AS b ON a.MARSHA = b.MARSHA AND a.asof_yrmo = b.asof_yrmo INNER JOIN AMERICAS_GOALS AS c ON a.MARSHA = c.MARSHA WHERE a.TIMEF ='YTD' AND a.DATA_CATEGORY = 'Rooms' AND a.CURRENCY_TYPE = 'Constant USD' AND a.YRMNTH = &YRMNTH. AND a.asof_yrmo = &YRMNTH. AND b.MF = 'M' AND b.DIVISION = 'AM' AND b.REGION<>'C_' AND b.BRND not IN ( 'RZ', 'EB') AND a.MARSHA not IN ( 'MCOJW', 'MCORZ') AND c.RevPAR_Index___Change <> . ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Mid_Year_Field_Bonus_Report.sas
" CREATE TABLE Canadian_Local AS select a.MARSHA, b.MARSHA_NEW, b.HOTEL_NAME, b.REGION, b.AVP, b.BRND, a.SCOMP , CASE WHEN a.SCOMP = 'Y' THEN 1 ELSE 0 END AS SCOMP_NUM , ROUND( ( ( a.MARREV/ a.MARAVAIL)/( a.MKTREV/a.MKTAVAIL))*100,.00001) AS RPI_TY , ROUND( ( ( a.MARREVLY/ a.MARAVAILLY)/( a.MKTREVLY/a.MKTAVAILLY))*100,.00001) AS RPI_LY , ROUND( (  ( ( a.MARREV/ a.MARAVAIL)/( a.MKTREV/a.MKTAVAIL))/100 , ( ( a.MARREVLY/ a.MARAVAILLY)/( a.MKTREVLY/a.MKTAVAILLY))*100 )-1,.00001) AS RPI_PCT_CHG , c.RevPAR_Index___Change AS RPI_GOAL_PCT_CHG FROM CMP.STR_MONTHLY_DATA AS a LEFT JOIN TGT_BUS.PROPERTY_MASTER_MISW_HIST AS b ON a.MARSHA = b.MARSHA AND a.asof_yrmo = b.asof_yrmo INNER JOIN AMERICAS_GOALS AS c ON a.MARSHA = c.MARSHA WHERE a.TIMEF ='LAST12' AND a.DATA_CATEGORY = 'Rooms' AND a.CURRENCY_TYPE = 'Local' AND a.YRMNTH = &YRMNTH. AND b.REGION = 'C_' AND b.MF = 'M' AND b.BRND not IN ( ""CY"", ""FI"", ""RI"", ""SH"", ""TS"", ""AR"", ""OX"", ""4P"", ""AL"", ""EL"") AND b.BRND not IN ( 'RZ', 'EB') AND a.MARSHA not IN ( 'MCOJW', 'MCORZ' ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Mid_Year_Field_Bonus_Report.sas
" CREATE TABLE FS_consolidated_1 AS select a.MARSHA, CASE WHEN a.SCOMP = 'Y' THEN 1 ELSE 0 END AS SCOMP_COUNT , a.MARREV, a.MARAVAIL, a.MKTREV, a.MKTAVAIL, a.MARREVLY, a.MARAVAILLY, a.MKTREVLY, a.MKTAVAILLY , c.RevPAR_Index___Change , a.MARREVLY/a.MARAVAILLY / ( a.MKTREVLY/a.MKTAVAILLY)*100 * ( 1 + c.RevPAR_Index___Change) / 100 * a.MKTREV AS MARREV_GOAL FROM CMP.STR_MONTHLY_DATA AS a INNER JOIN AMERICAS_GOALS AS c ON a.MARSHA = c.MARSHA WHERE a.TIMEF ='YTD' AND a.DATA_CATEGORY = 'Rooms' AND a.CURRENCY_TYPE = 'Constant USD' AND a.YRMNTH = &YRMNTH. AND a.asof_yrmo = &YRMNTH. AND a.MARSHA IN ( 'MCOJW', 'MCORZ' ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Mid_Year_Field_Bonus_Report.sas
" CREATE TABLE FS_consolidated_2 AS select '33GLR' AS MARSHA, '33GLR' AS MARSHA_NEW , SUM ( SCOMP_COUNT) AS SCOMP_COUNT , SUM( MARREV) AS MARREV, SUM( MARAVAIL) AS MARAVAIL, SUM( MKTREV) AS MKTREV, SUM( MKTAVAIL) AS MKTAVAIL , SUM( MARREVLY) AS MARREVLY, SUM( MARAVAILLY) AS MARAVAILLY, SUM( MKTREVLY) AS MKTREVLY, SUM( MKTAVAILLY) AS MKTAVAILLY , SUM( MARREV_GOAL) AS MARREV_GOAL FROM FS_consolidated_1 a GROUP BY calculated MARSHA, calculated MARSHA_NEW;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Mid_Year_Field_Bonus_Report.sas
" CREATE TABLE FS_consolidated_3 AS select a.MARSHA, a.MARSHA_NEW, 'Combined MCOJW AND MCORZ for bonus purposes' AS HOTEL_NAME, 'E_' AS REGION, '' AS AVP, '' AS BRND , CASE WHEN SCOMP_COUNT = 2 THEN 'Y' ELSE 'N' END AS SCOMP , CASE WHEN SCOMP_COUNT = 2 THEN 1 ELSE 0 END AS SCOMP_NUM , ROUND( ( a.MARREV/ a.MKTREV)*100,.000001) AS RPI_TY , ROUND( ( a.MARREVLY/a.MKTREVLY)*100,.000001)AS RPI_LY , ROUND( ( a.MARREV_GOAL/ a.MARAVAIL)/( a.MKTREV/ a.MKTAVAIL)*100 / ( ( a.MARREVLY/ a.MARAVAILLY)/( a.MKTREVLY/ a.MKTAVAILLY)*100) - 1, .000001) AS RPI_GOAL_PCT_CHG , ROUND( (  ( ( a.MARREV/ a.MARAVAIL)/( a.MKTREV/a.MKTAVAIL))/100 , ( ( a.MARREVLY/ a.MARAVAILLY)/( a.MKTREVLY/a.MKTAVAILLY))*100 )-1,.00001) AS RPI_PCT_CHG FROM FS_consolidated_2 a;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Mid_Year_Field_Bonus_Report.sas
 CREATE TABLE FIELD_BONUS_REPORT AS ( SELECT  *  FROM Full_Service_Property_Level UNION ALL SELECT  *  FROM FS_consolidated_3 UNION ALL SELECT  *  FROM Canadian_Local);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Mid_Year_Field_Bonus_Report.sas
"CREATE TABLE ""&OUTPUT./FIELD_BONUS_REPORT_&CURDATE..xlsx"" AS ( SELECT * FROM FIELD_BONUS_REPORT) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Mid_Year_Field_Bonus_Report.sas
" CREATE TABLE aaadata AS  (  select CASE WHEN a.property_cd='SJUDB' THEN 'SJUDO' when a.property_cd='WASSH' THEN 'WASAK' when a.property_cd='STLDT' THEN 'STLMG' ELSE a.property_cd END AS marsha, a.date_stay_dt , SUM( a.roomnights_qty) AS rn, SUM( a.net_rev_local_amt) AS rv , SUM( a.net_rev_usd_sub_amt) AS rv_usd , SUM( net_rev_local_amt)/SUM( roomnights_qty) AS adr_lcl , SUM( net_rev_usd_sub_amt)/SUM( roomnights_qty) AS adr_usd FROM mrdw_fact_agg_dr_rev_analysis a WHERE a.brand_cd IN AND market_prefix_cd = ( '42') AND a.date_stay_dt >= '2018-05-01' AND a.date_stay_dt < '2019-05-01' GROUP BY marsha, a.date_stay_dt ORDER BY marsha, a.date_stay_dt  )  ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Min_and_Max_AAA_Rate_-_12_Months_Ending_August_2015.sas
" CREATE TABLE aaadata2 AS select a.marsha, b.brnd, b.hotel_name, b.country, b.curr, a.date_stay_dt, a.rn, a.rv_usd, adr_usd , CASE WHEN b.curr='USD' THEN a.rv_usd ELSE rv END AS rv_lcl , CASE WHEN b.curr='USD' THEN a.rv_usd/a.rn ELSE rv/a.rn END AS adr_lcl FROM aaadata AS a INNER JOIN awprod.property_master AS b ON a.marsha=b.marsha ORDER BY a.marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Min_and_Max_AAA_Rate_-_12_Months_Ending_August_2015.sas
" CREATE TABLE aaadata3 AS select marsha, brnd, hotel_name, country, curr, min( adr_usd) AS min_usd_rate, min( adr_lcl) AS min_local_rate , max( adr_usd) AS max_usd_rate, max( adr_lcl) AS max_local_rate FROM aaadata2 GROUP BY marsha, brnd, hotel_name, country, curr;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Min_and_Max_AAA_Rate_-_12_Months_Ending_August_2015.sas
" CREATE TABLE rpg1 AS select distinct ACCOUNT_ID , CASE WHEN SUBSTRING( segment,1,3)='GSO' THEN 'GSO' ELSE 'US Sales' END AS rate_type, RATE_PROG1 AS rtprog FROM acct_dir WHERE RATE_PROG1<>'';",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MI_vs_SPG_WS_Gross_Booking_YOY_2019.sas
" CREATE TABLE rpg2 AS select distinct ACCOUNT_ID , CASE WHEN SUBSTRING( segment,1,3)='GSO' THEN 'GSO' ELSE 'US Sales' END AS rate_type, RATE_PROG2 AS rtprog FROM acct_dir WHERE RATE_PROG2<>'';",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MI_vs_SPG_WS_Gross_Booking_YOY_2019.sas
" CREATE TABLE rpg3 AS select distinct ACCOUNT_ID , CASE WHEN SUBSTRING( segment,1,3)='GSO' THEN 'GSO' ELSE 'US Sales' END AS rate_type, RATE_PROG3 AS rtprog FROM acct_dir WHERE RATE_PROG3<>'';",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MI_vs_SPG_WS_Gross_Booking_YOY_2019.sas
" CREATE TABLE gpprpg1 AS select distinct ACCOUNT_ID, 'GPP' AS rate_type, GPP_RATE_PROG1 AS rtprog FROM acct_dir WHERE GPP_RATE_PROG1<>'';",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MI_vs_SPG_WS_Gross_Booking_YOY_2019.sas
" CREATE TABLE gpprpg2 AS select distinct ACCOUNT_ID, 'GPP' AS rate_type, GPP_RATE_PROG2 AS rtprog FROM acct_dir WHERE GPP_RATE_PROG2<>'';",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MI_vs_SPG_WS_Gross_Booking_YOY_2019.sas
 CREATE TABLE rtprog AS ( SELECT  *  FROM rpg1 UNION ALL SELECT  *  FROM rpg2 UNION ALL SELECT  *  FROM rpg3 UNION ALL SELECT  *  FROM gpprpg1 UNION ALL SELECT  *  FROM gpprpg2);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MI_vs_SPG_WS_Gross_Booking_YOY_2019.sas
" CREATE TABLE ratedata AS  (  select distinct MRPGM.RPGM, MRO.RATEOFFERNAME FROM mrdw_hppdbo_masterrorerpgm_usm MRPGM INNER JOIN mrdw_hppdbo_masterrorateentity_usm MRE ON MRPGM.MASTERRORATEENTITYID = MRE.MASTERRORATEENTITYID INNER JOIN mrdw_hppdbo_masterrateoffer_usm MRO ON MRE.MASTERRATEOFFERSYSTEMID = MRO.MASTERRATEOFFERSYSTEMID WHERE MRO.completionlevel='P' AND MRO.MASTERRATEOFFERSYSTEMID= ( SELECT MAX( MROM.MASTERRATEOFFERSYSTEMID) FROM mrdw_hppdbo_masterrateoffer_usm MROM WHERE MROM.RATEOFFERID = MRO.RATEOFFERID)  )  ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MI_vs_SPG_WS_Gross_Booking_YOY_2019.sas
" CREATE TABLE rate_type_data AS select distinct rateoffername, rate_type FROM ratedata AS a INNER JOIN rtprog AS b ON a.rpgm=b.rtprog;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MI_vs_SPG_WS_Gross_Booking_YOY_2019.sas
" CREATE TABLE ratedata2 AS select a.*, b.rate_type FROM ratedata AS a LEFT JOIN rate_type_data AS b ON a.rateoffername=b.rateoffername;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MI_vs_SPG_WS_Gross_Booking_YOY_2019.sas
 CREATE TABLE prop_misw AS  (  SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER_MISW A  ) ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MI_vs_SPG_WS_Gross_Booking_YOY_2019.sas
 CREATE TABLE cutover AS  (  SELECT * FROM AW_TGT_METADATA_DBO.PROPERTY_PRIMING_SCHEDULE A  ) ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MI_vs_SPG_WS_Gross_Booking_YOY_2019.sas
" CREATE TABLE gross_res AS  (  SELECT CONFO_CREATE_DT, PROPERTY_CD , CASE WHEN MARKET_PREFIX_CD IN ( '26') THEN 'Wholesale' ELSE MARKET_CATEGORY_NM END AS segment , CHANNEL_AGGREGATE_CD, CHANNEL_DETAIL_CD, ECHANNEL_PARTNER_CD , CASE WHEN MARKET_PREFIX_CD IN ( '17', '18') THEN RATE_PGM_CD ELSE '' END AS RATE_PGM_CD , CASE WHEN MARKET_PREFIX_CD IN ( '17', '18') THEN rate_pgm_txt ELSE '' END AS rate_pgm_txt , ROOM_POOL_CD , SUM( ROOMS_QTY) AS rn, SUM( ROOM_REV_LOCAL_AMT) AS rv, SUM( ROOM_REV_USD_AMT) AS rv_usd FROM AW_TGT_BUS_DBO.MRDW_BI_FACT_GROSS_NOS A WHERE CONFO_CREATE_DT >= '2019-01-01' AND stay_year >= 2019 AND MARKET_PREFIX_CD ='26' GROUP BY CONFO_CREATE_DT, PROPERTY_CD , CASE WHEN MARKET_PREFIX_CD IN ( '26') THEN 'Wholesale' ELSE MARKET_CATEGORY_NM end , CHANNEL_AGGREGATE_CD, CHANNEL_DETAIL_CD, ECHANNEL_PARTNER_CD , CASE WHEN MARKET_PREFIX_CD IN ( '17', '18') THEN RATE_PGM_CD ELSE '' end , CASE WHEN MARKET_PREFIX_CD IN ( '17', '18') THEN rate_pgm_txt ELSE '' end , ROOM_POOL_CD  ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MI_vs_SPG_WS_Gross_Booking_YOY_2019.sas
" CREATE TABLE gross_res_ly AS  (  SELECT add_days( CONFO_CREATE_DT,364) AS confo_create_dt, property_cd , CASE WHEN MARKET_PREFIX_CD IN ( '26') THEN 'Wholesale' ELSE MARKET_CATEGORY_NM END AS segment , CHANNEL_AGGREGATE_CD, CHANNEL_DETAIL_CD, ECHANNEL_PARTNER_CD , CASE WHEN MARKET_PREFIX_CD IN ( '17', '18') THEN RATE_PGM_CD ELSE '' END AS RATE_PGM_CD , CASE WHEN MARKET_PREFIX_CD IN ( '17', '18') THEN rate_pgm_txt ELSE '' END AS rate_pgm_txt , ROOM_POOL_CD , SUM( ROOMS_QTY) AS rn_ly, SUM( ROOM_REV_LOCAL_AMT) AS rv_ly, SUM( ROOM_REV_USD_AMT) AS rv_usd_ly FROM AW_TGT_BUS_DBO.MRDW_BI_FACT_GROSS_NOS A WHERE CONFO_CREATE_DT >= '2018-01-02' AND CONFO_CREATE_DT <= '2018-12-31' AND stay_year >= 2018 AND MARKET_PREFIX_CD ='26' GROUP BY CONFO_CREATE_DT, PROPERTY_CD , CASE WHEN MARKET_PREFIX_CD IN ( '26') THEN 'Wholesale' ELSE MARKET_CATEGORY_NM end , CHANNEL_AGGREGATE_CD, CHANNEL_DETAIL_CD, ECHANNEL_PARTNER_CD , CASE WHEN MARKET_PREFIX_CD IN ( '17', '18') THEN RATE_PGM_CD ELSE '' end , CASE WHEN MARKET_PREFIX_CD IN ( '17', '18') THEN rate_pgm_txt ELSE '' end , ROOM_POOL_CD  ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MI_vs_SPG_WS_Gross_Booking_YOY_2019.sas
"SELECT * FROM gross_res ORDER BY PROPERTY_CD ,SEGMENT ,CHANNEL_AGGREGATE_CD ,CHANNEL_DETAIL_CD ,ECHANNEL_PARTNER_CD ,RATE_PGM_CD ,RATE_PGM_TXT ,ROOM_POOL_CD ,confo_create_dt;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MI_vs_SPG_WS_Gross_Booking_YOY_2019.sas
"SELECT * FROM gross_res_ly ORDER BY PROPERTY_CD ,SEGMENT ,CHANNEL_AGGREGATE_CD ,CHANNEL_DETAIL_CD ,ECHANNEL_PARTNER_CD ,RATE_PGM_CD ,RATE_PGM_TXT ,ROOM_POOL_CD ,confo_create_dt;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MI_vs_SPG_WS_Gross_Booking_YOY_2019.sas
CREATE TABLE gross_res_comb AS ( SELECT  *  FROM gross_res A JOIN gross_res_ly B ON  A.PROPERTY_CD =  B.PROPERTY_CD AND  A.SEGMENT =  B.SEGMENT AND  A.CHANNEL_AGGREGATE_CD =  B.CHANNEL_AGGREGATE_CD AND  A.CHANNEL_DETAIL_CD =  B.CHANNEL_DETAIL_CD AND  A.ECHANNEL_PARTNER_CD =  B.ECHANNEL_PARTNER_CD AND  A.RATE_PGM_CD =  B.RATE_PGM_CD AND  A.RATE_PGM_TXT =  B.RATE_PGM_TXT AND  A.ROOM_POOL_CD =  B.ROOM_POOL_CD AND  A.confo_create_dt =  B.confo_create_dt);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MI_vs_SPG_WS_Gross_Booking_YOY_2019.sas
"ALTER TABLE gross_res_comb DROP COLUMN RATE_PGM_CD ,  RATE_PGM_TXT ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MI_vs_SPG_WS_Gross_Booking_YOY_2019.sas
CREATE TABLE gross_res_comb_ly AS ( SELECT  *  FROM gross_res_ly A JOIN gross_res_ly_2 B ON  A.PROPERTY_CD =  B.PROPERTY_CD AND  A.SEGMENT =  B.SEGMENT AND  A.CHANNEL_AGGREGATE_CD =  B.CHANNEL_AGGREGATE_CD AND  A.CHANNEL_DETAIL_CD =  B.CHANNEL_DETAIL_CD AND  A.ECHANNEL_PARTNER_CD =  B.ECHANNEL_PARTNER_CD AND  A.RATE_PGM_CD =  B.RATE_PGM_CD AND  A.RATE_PGM_TXT =  B.RATE_PGM_TXT AND  A.ROOM_POOL_CD =  B.ROOM_POOL_CD AND  A.confo_create_dt =  B.confo_create_dt);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MI_vs_SPG_WS_Gross_Booking_YOY_2019.sas
"ALTER TABLE gross_res_comb_ly DROP COLUMN RATE_PGM_CD ,  RATE_PGM_TXT ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MI_vs_SPG_WS_Gross_Booking_YOY_2019.sas
" CREATE TABLE gross_res_comb2 AS SELECT CONFO_CREATE_DT, PROPERTY_CD, segment , CHANNEL_AGGREGATE_CD, CHANNEL_DETAIL_CD, ECHANNEL_PARTNER_CD, ROOM_POOL_CD , SUM( rn) AS rn, SUM( rv_usd) AS rv_usd , SUM( rn_ly) AS rn_ly, SUM( rv_usd_ly) AS rv_usd_ly FROM gross_res_comb A GROUP BY CONFO_CREATE_DT, PROPERTY_CD, segment , CHANNEL_AGGREGATE_CD, CHANNEL_DETAIL_CD, ECHANNEL_PARTNER_CD, ROOM_POOL_CD;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MI_vs_SPG_WS_Gross_Booking_YOY_2019.sas
" CREATE TABLE temp1 AS ( SELECT  *  , 100*year( CONFO_CREATE_DT)+week( CONFO_CREATE_DT ) AS yrmnwk  FROM gross_res_comb2  WHERE yrmnwk in( 201852 ));",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MI_vs_SPG_WS_Gross_Booking_YOY_2019.sas
" CREATE TABLE junk AS select min( confo_create_dt) AS min_date format date9., max( confo_create_dt) AS max_date format date9. FROM gross_res_comb2 WHERE rn > 0 ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MI_vs_SPG_WS_Gross_Booking_YOY_2019.sas
" CREATE TABLE junk2 AS ( SELECT  *  , 100*year( max_date)+week( max_date ) AS yrmnwk  FROM junk );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MI_vs_SPG_WS_Gross_Booking_YOY_2019.sas
" CREATE TABLE gross_res_comb3 AS select PROPERTY_CD, segment , CHANNEL_AGGREGATE_CD , CASE WHEN CHANNEL_AGGREGATE_CD IN ( 'GDS') THEN CHANNEL_DETAIL_CD when CHANNEL_AGGREGATE_CD IN ( 'eChannel') AND (  index( LOWER( Channel_detail_cd),'ebookers')>0 OR index( LOWER( Channel_detail_cd),'exp -')>0 OR index( LOWER( Channel_detail_cd),'exp aff -')>0 OR index( LOWER( Channel_detail_cd),'expedia') >0 OR index( LOWER( Channel_detail_cd),'hotelclub')>0 OR index( LOWER( Channel_detail_cd),'hotels.com')>0 OR index( LOWER( Channel_detail_cd),'hotwire')>0 OR index( LOWER( Channel_detail_cd),'lodging.com')>0 OR index( LOWER( Channel_detail_cd),'neat travel')>0 OR index( LOWER( Channel_detail_cd),'orbitz')>0 OR index( LOWER( Channel_detail_cd),'site 59.com')>0 OR index( LOWER( Channel_detail_cd),'travelnow.com')>0 OR index( LOWER( Channel_detail_cd),'tbiz travel')>0 OR index( LOWER( Channel_detail_cd),'travelocity')>0 OR index( LOWER( Channel_detail_cd),'venere')>0 OR index( LOWER( Channel_detail_cd),'wotif')>0) THEN 'Expedia Group' when CHANNEL_AGGREGATE_CD IN ( 'eChannel') AND (  index( LOWER( Channel_detail_cd),'ebookers')>0 OR index( LOWER( Channel_detail_cd),'exp -')>0 OR index( LOWER( Channel_detail_cd),'exp aff -')>0 OR index( LOWER( Channel_detail_cd),'expedia') >0 OR index( LOWER( Channel_detail_cd),'hotelclub')>0 OR index( LOWER( Channel_detail_cd),'hotels.com')>0 OR index( LOWER( Channel_detail_cd),'hotwire')>0 OR index( LOWER( Channel_detail_cd),'lodging.com')>0 OR index( LOWER( Channel_detail_cd),'neat travel')>0 OR index( LOWER( Channel_detail_cd),'orbitz')>0 OR index( LOWER( Channel_detail_cd),'site 59.com')>0 OR index( LOWER( Channel_detail_cd),'travelnow.com')>0 OR index( LOWER( Channel_detail_cd),'tbiz travel')>0 OR index( LOWER( Channel_detail_cd),'travelocity')>0 OR index( LOWER( Channel_detail_cd),'venere')>0 OR index( LOWER( Channel_detail_cd),'wotif')>0) THEN 'Expedia Group' when CHANNEL_AGGREGATE_CD IN ( 'eChannel') AND (  index( LOWER( Channel_detail_cd),'agoda direct connect')>0 OR index( LOWER( Channel_detail_cd),'booking.com')>0 OR index( LOWER( Channel_detail_cd),'booking.com direct connect')>0 OR index( LOWER( Channel_detail_cd),'agoda.com')>0 OR index( LOWER( Channel_detail_cd),'priceline')>0 OR index( LOWER( Channel_detail_cd),'priceline - DC')>0 OR index( LOWER( Channel_detail_cd),'priceline.com')>0 OR index( LOWER( Channel_detail_cd),'travelweb')>0) THEN 'Booking Holdings' when CHANNEL_AGGREGATE_CD IN ( 'eChannel') THEN 'Other OTA' ELSE CHANNEL_AGGREGATE_CD END AS channel_detail , d.ACTUAL_CUTOVER_DATE , CASE WHEN d.ACTUAL_CUTOVER_DATE = '18sep2018'd AND CONFO_CREATE_DT-364 >= '22jul2018'd AND CONFO_CREATE_DT-364 <='15sep2018'd THEN '8 Weeks Before' when d.ACTUAL_CUTOVER_DATE = '18sep2018'd AND CONFO_CREATE_DT-364 >= '16sep2018'd AND CONFO_CREATE_DT-364 <='22sep2018'd THEN 'RD1 Week' when d.ACTUAL_CUTOVER_DATE = '18sep2018'd AND CONFO_CREATE_DT-364 >= '23sep2018'd AND CONFO_CREATE_DT-364 <='17nov2018'd THEN '8 Weeks After' when d.ACTUAL_CUTOVER_DATE = '10oct2018'd AND CONFO_CREATE_DT-364 >= '12aug2018'd AND CONFO_CREATE_DT-364 <='06oct018'd THEN '8 Weeks Before' when d.ACTUAL_CUTOVER_DATE = '10oct2018'd AND CONFO_CREATE_DT-364 >= '07oct2018'd AND CONFO_CREATE_DT-364 <='13dec2018'd THEN 'RD1 Week' when d.ACTUAL_CUTOVER_DATE = '10oct2018'd AND CONFO_CREATE_DT-364 >= '14oct2018'd AND CONFO_CREATE_DT-364 <='08dec2018'd THEN '8 Weeks After' when d.ACTUAL_CUTOVER_DATE = '30oct2018'd AND CONFO_CREATE_DT-364 >= '02sep2018'd AND CONFO_CREATE_DT-364 <='27oct2018'd THEN '8 Weeks Before' when d.ACTUAL_CUTOVER_DATE = '30oct2018'd AND CONFO_CREATE_DT-364 >= '28oct2018'd AND CONFO_CREATE_DT-364 <='03nov2018'd THEN 'RD1 Week' when d.ACTUAL_CUTOVER_DATE = '30oct2018'd AND CONFO_CREATE_DT-364 >= '04nov2018'd AND CONFO_CREATE_DT-364 <='29dec2018'd THEN '8 Weeks After' when d.ACTUAL_CUTOVER_DATE = '27nov2018'd AND CONFO_CREATE_DT-364 >= '30sep2018'd AND CONFO_CREATE_DT-364 <='24nov2018'd THEN '8 Weeks Before' when d.ACTUAL_CUTOVER_DATE = '27nov2018'd AND CONFO_CREATE_DT-364 >= '25nov2018'd AND CONFO_CREATE_DT-364 <='01dec2019'd THEN 'RD1 Week' when d.ACTUAL_CUTOVER_DATE = '27nov2018'd AND CONFO_CREATE_DT-364 >= '02dec2018'd AND CONFO_CREATE_DT-364 <='26jan2019'd THEN '8 Weeks After' when d.ACTUAL_CUTOVER_DATE = '11dec2018'd AND CONFO_CREATE_DT-364 >= '14oct2018'd AND CONFO_CREATE_DT-364 <='08dec2018'd THEN '8 Weeks Before' when d.ACTUAL_CUTOVER_DATE = '11dec2018'd AND CONFO_CREATE_DT-364 >= '09dec2018'd AND CONFO_CREATE_DT-364 <='15dec2019'd THEN 'RD1 Week' when d.ACTUAL_CUTOVER_DATE = '11dec2018'd AND CONFO_CREATE_DT-364 >= '16dec2018'd AND CONFO_CREATE_DT-364 <='09feb2019'd THEN '8 Weeks After' when misw_flag = 'MI' AND CONFO_CREATE_DT-364 >= '02sep2018'd AND CONFO_CREATE_DT-364 <='27oct2018'd THEN '8 Weeks Before' when misw_flag = 'MI' AND CONFO_CREATE_DT-364 >= '28oct2018'd AND CONFO_CREATE_DT-364 <='03nov2018'd THEN 'RD1 Week' when misw_flag = 'MI' AND CONFO_CREATE_DT-364 >= '04nov2018'd AND CONFO_CREATE_DT-364 <='29dec2018'd THEN '8 Weeks After' END AS week_group , 100*year( CONFO_CREATE_DT)+week( CONFO_CREATE_DT) AS yrmnwk , SUM( a.rn) AS rn, SUM( rv_usd) AS rv_usd , SUM( rn_ly) AS rn_ly, SUM( rv_usd_ly) AS rv_usd_ly FROM gross_res_comb2 AS a LEFT JOIN cutover AS d ON a.property_cd=d.MARSHA_CODE INNER JOIN prop_misw AS e ON a.property_cd=e.marsha_new GROUP BY PROPERTY_CD, segment , CHANNEL_AGGREGATE_CD, calculated channel_detail , a.ROOM_POOL_CD , d.ACTUAL_CUTOVER_DATE, calculated week_group, calculated yrmnwk;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MI_vs_SPG_WS_Gross_Booking_YOY_2019.sas
" CREATE TABLE gross_res_comb4 AS select PROPERTY_CD, segment , CHANNEL_AGGREGATE_CD , channel_detail , ACTUAL_CUTOVER_DATE , week_group , yrmnwk , SUM( a.rn) AS rn, SUM( rv_usd) AS rv_usd , SUM( rn_ly) AS rn_ly, SUM( rv_usd_ly) AS rv_usd_ly FROM gross_res_comb3 AS a WHERE yrmnwk <=201908 GROUP BY PROPERTY_CD, segment , CHANNEL_AGGREGATE_CD, channel_detail , ACTUAL_CUTOVER_DATE, week_group, yrmnwk;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MI_vs_SPG_WS_Gross_Booking_YOY_2019.sas
 CREATE TABLE NYCMQ AS ( SELECT  *  FROM gross_res_comb4  WHERE property_cd='NYCMQ');,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MI_vs_SPG_WS_Gross_Booking_YOY_2019.sas
 CREATE TABLE ota AS ( SELECT  *  FROM gross_res_comb4  WHERE channel_aggregate_cd='eChannel' AND ACTUAL_CUTOVER_DATE<>' ');,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MI_vs_SPG_WS_Gross_Booking_YOY_2019.sas
 CREATE TABLE PROPERTY_MASTER AS  (  SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER  ) ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MI_vs_SPG_WS_Gross_Booking_YOY_2019.sas
" CREATE TABLE hotel_ws AS select b.marsha, b.hotel_name, b.brnd_name, b.acomp, b.mf, b.region, b.region_name, b.division_name, b.country, b.misw_flag, segment, CHANNEL_AGGREGATE_CD, channel_detail, week_group, ACTUAL_CUTOVER_DATE, yrmnwk , SUM( rn) AS rn, SUM( rn_ly) AS rn_ly , SUM( rv_usd) AS rv_usd, SUM( rv_usd_ly) AS rv_usd_ly FROM gross_res_comb4 AS a LEFT JOIN PROPERTY_MASTER AS b ON a.property_cd=b.marsha WHERE b.acomp='Y' GROUP BY b.marsha, b.hotel_name, b.brnd_name, b.acomp, b.mf, b.region, b.region_name, b.division_name, b.country, b.misw_flag, segment, CHANNEL_AGGREGATE_CD, channel_detail, week_group, ACTUAL_CUTOVER_DATE, yrmnwk;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MI_vs_SPG_WS_Gross_Booking_YOY_2019.sas
" CREATE TABLE hotel_ws AS ( SELECT  * , CASE WHEN  region IN ( 'E_', 'W_', 'C_')  THEN 'US/Canada' WHEN   region='S_'  THEN region_name ELSE division_name END AS region2 FROM hotel_ws );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MI_vs_SPG_WS_Gross_Booking_YOY_2019.sas
 CREATE TABLE ws.hotel_ws2019 AS ( SELECT  *  FROM hotel_ws );,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MI_vs_SPG_WS_Gross_Booking_YOY_2019.sas
" CREATE TABLE ws.hotel_ws2019_18 AS ( SELECT  * , CASE WHEN  yrmnwk=201900  THEN 201852 END AS yrmnwk FROM ws.hotel_ws2019 UNION ALL SELECT  * , CASE WHEN  yrmnwk=201900  THEN 201852 END AS yrmnwk FROM ws.hotel_ws2018 WHERE yrmnwk<>201800);",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MI_vs_SPG_WS_Gross_Booking_YOY_2019.sas
"SELECT * FROM ws.hotel_ws2019_18 ORDER BY MARSHA ,region2 ,yrmnwk;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MI_vs_SPG_WS_Gross_Booking_YOY_2019.sas
 CREATE TABLE NYCMQ2 AS ( SELECT  *  FROM ws.hotel_ws2019_18  WHERE marsha='NYCMQ');,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MI_vs_SPG_WS_Gross_Booking_YOY_2019.sas
"CREATE TABLE ""\\Hdqmdm1fpcl4v1\lodg-revmgmt\RM EAnlys\MikeS\Wholesaler\ws.hotel_ws2019_18.TXT"" AS ( SELECT * FROM ws.hotel_ws2019_18) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_MI_vs_SPG_WS_Gross_Booking_YOY_2019.sas
" CREATE TABLE Strike_Annual AS select c.MARSHA , b.MARSHA_NEW, b.BRND, b.STR_ID, b.PEOPLESOFT_ID, b.MF, b.AVP , 'MONTH' AS TIMEF , CASE WHEN a.MARSHA IN ( &NONCOMP. ) THEN ""N"" ELSE a.SCOMP END AS SCOMP , SUM( a.COMPLETE_DATA) AS COMPLETE_DATA , b.HOTEL_NAME, b.REGION, b.DOMINT , CASE WHEN b.BRND IN ( ""CY"", ""FI"", ""RI"", ""SH"", ""TS"", ""AR"", ""OX"", ""FP"", ""AL"", ""EL"") THEN ""MSB"" ELSE ""FS"" end AS TYPE , SUM( a.MARAVAIL) AS MARAVAIL, SUM( a.MARREV) AS MARREV, SUM( a.MKTAVAIL) AS MKTAVAIL, SUM( a.MKTREV) AS MKTREV , SUM( a.MARAVAILLY) AS MARAVAILLY, SUM( a.MARREVLY) AS MARREVLY, SUM( a.MKTAVAILLY) AS MKTAVAILLY, SUM( a.MKTREVLY) AS MKTREVLY , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( (  ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))/100 , ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100 )-1,.00001) AS RPI_PCT_CHG , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100 ,.00001) AS RPI_PNT_CHG , ""Y"" AS Strike_Hotel FROM CMP.STR_MONTHLY_DATA AS a LEFT JOIN TGT_BUS.PROPERTY_MASTER_MISW_HIST AS b ON a.MARSHA = b.MARSHA_NEW AND a.asof_yrmo = b.asof_yrmo LEFT JOIN STRIKE AS c ON a.MARSHA = c.MARSHA WHERE a.TIMEF ='MONTH' AND a.DATA_CATEGORY = 'Rooms' AND a.CURRENCY_TYPE = 'Constant USD' AND a.asof_yrmo = &YRMNTH. AND a.YRMNTH >= 201801 AND c.MARSHA <> """" AND ( a.YRMNTH <= c.YTD_Data_to_Pull OR a.YRMNTH >= c.Post_Strike_Pull) GROUP BY c.MARSHA , b.MARSHA_NEW, b.BRND, b.STR_ID, b.PEOPLESOFT_ID, b.MF, b.AVP , calculated TIMEF , calculated SCOMP, b.HOTEL_NAME, b.REGION, b.DOMINT, calculated TYPE, calculated Strike_Hotel ORDER BY c.MARSHA;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
"CREATE TABLE ""&OUTPUT.\Strike Hotels.xlsx"" AS ( SELECT * FROM Strike_Annual) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE WEST2 AS ( SELECT F1, RevPAR_Index___Change, _018_RevPAR_Index_Goal FROM WEST  WHERE F1 <> """");",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE EAST2 AS ( SELECT F1, RevPAR_Index___Change, _018_RevPAR_Index_Goal FROM EAST  WHERE F1 <> """");",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE CANADA2 AS ( SELECT F1, RevPAR_Index___Change, _018_RevPAR_Index_Goal FROM CANADA  WHERE F1 <> """");",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE CALA2 AS ( SELECT F1 , CAST( _018_Scomp_Status_in_Column_J, percent20.  ) AS RevPAR_Index___Change , F32 AS _018_RevPAR_Index_Goal  FROM CALA  WHERE F1 <> """");",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
"CREATE TABLE AMERICAS_GOALS_1 AS ( SELECT  *  , F1 AS MARSHA , _018_RevPAR_Index_Goal AS RC_GOAL  FROM WEST2 UNION ALL SELECT  *  , F1 AS MARSHA , _018_RevPAR_Index_Goal AS RC_GOAL  FROM EAST2 UNION ALL SELECT  *  , F1 AS MARSHA , _018_RevPAR_Index_Goal AS RC_GOAL  FROM CANADA2 UNION ALL SELECT  *  , F1 AS MARSHA , _018_RevPAR_Index_Goal AS RC_GOAL  FROM CALA2);",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
"ALTER TABLE AMERICAS_GOALS_1 DROP COLUMN F1 ,  _018_RevPAR_Index_Goal ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE AMERICAS_GOALS AS select b.MARSHA_NEW AS MARSHA, a.RevPAR_Index___Change, a.RC_GOAL FROM AMERICAS_GOALS_1 a LEFT JOIN ( select * FROM TGT_BUS.PROPERTY_MASTER_MISW_HIST WHERE asof_yrmo = &YRMNTH. ) AS b ON ( a.MARSHA=b.marsha OR a.MARSHA=b.MARSHA_NEW);",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE Annual AS select a.MARSHA, b.MARSHA_NEW, b.BRND, b.STR_ID, b.PEOPLESOFT_ID, b.MF, b.AVP , a.TIMEF , CASE WHEN a.MARSHA IN ( &NONCOMP. ) THEN ""N"" ELSE a.SCOMP END AS SCOMP , a.COMPLETE_DATA, b.HOTEL_NAME, b.REGION, b.DOMINT , CASE WHEN b.BRND IN ( ""CY"", ""FI"", ""RI"", ""SH"", ""TS"", ""AR"", ""OX"", ""FP"", ""AL"", ""EL"") THEN ""MSB"" ELSE ""FS"" end AS TYPE , MARAVAIL, MARREV, MKTAVAIL, MKTREV, MARAVAILLY, MARREVLY, MKTAVAILLY, MKTREVLY , ROUND( ( ( a.MARREV/ a.MARAVAIL)/( a.MKTREV/a.MKTAVAIL))*100,.00001) AS RPI_TY , ROUND( ( ( a.MARREVLY/ a.MARAVAILLY)/( a.MKTREVLY/a.MKTAVAILLY))*100,.00001) AS RPI_LY , ROUND( (  ( ( a.MARREV/ a.MARAVAIL)/( a.MKTREV/a.MKTAVAIL))/100 , ( ( a.MARREVLY/ a.MARAVAILLY)/( a.MKTREVLY/a.MKTAVAILLY))*100 )-1,.00001) AS RPI_PCT_CHG , ROUND( ( ( a.MARREV/ a.MARAVAIL)/( a.MKTREV/a.MKTAVAIL))*100 - ( ( a.MARREVLY/ a.MARAVAILLY)/( a.MKTREVLY/a.MKTAVAILLY))*100 ,.00001) AS RPI_PNT_CHG FROM CMP.STR_MONTHLY_DATA AS a LEFT JOIN TGT_BUS.PROPERTY_MASTER_MISW_HIST AS b ON a.MARSHA = b.MARSHA_NEW AND a.asof_yrmo = b.asof_yrmo WHERE a.TIMEF ='LAST12' AND a.DATA_CATEGORY = 'Rooms' AND a.CURRENCY_TYPE = 'Constant USD' AND a.YRMNTH = &YRMNTH. AND a.asof_yrmo = &YRMNTH.;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE annual_check AS select a.MARSHA, CASE WHEN a.RPI_PCT_CHG < b.RPI_PCT_CHG THEN 'Skip_Months' ELSE 'Full_Period' END AS Strike_Hotel_Check FROM annual a LEFT JOIN Strike_Annual AS b ON a.MARSHA = b.MARSHA;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
 CREATE TABLE annual_full AS select a.* FROM annual a LEFT JOIN annual_check AS b ON a.MARSHA = b.MARSHA WHERE b.Strike_Hotel_Check = 'Full_Period';,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
 CREATE TABLE annual_skip AS select a.* FROM Strike_annual a LEFT JOIN annual_check AS b ON a.MARSHA = b.MARSHA WHERE b.Strike_Hotel_Check = 'Skip_Months';,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
 CREATE TABLE annual AS ( SELECT  *  FROM annual_skip UNION ALL SELECT  *  FROM annual_full);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE AMERICAS_SYSTEMWIDE_SCOMP AS select a.MARSHA, a.MARSHA_NEW, a.HOTEL_NAME, a.REGION, a.BRND, a.TYPE, a.SCOMP , CASE WHEN a.SCOMP = 'Y' THEN 1 ELSE 0 END AS SCOMP_NUM , RPI_TY, RPI_LY, a.RPI_PCT_CHG FROM ANNUAL AS a ORDER BY a.TYPE, a.MARSHA;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE Full_Service_Property_Level AS select a.MARSHA, a.MARSHA_NEW, a.HOTEL_NAME, a.REGION, a.AVP, a.BRND, a.SCOMP , CASE WHEN a.SCOMP = 'Y' THEN 1 ELSE 0 END AS SCOMP_NUM , RPI_TY, RPI_LY, a.RPI_PCT_CHG , b.RevPAR_Index___Change AS RPI_GOAL_PCT_CHG FROM ANNUAL AS a INNER JOIN AMERICAS_GOALS AS b ON a.MARSHA = b.MARSHA WHERE a.MF = 'M' AND ( a.TYPE = 'FS' OR a.REGION = 'S_') AND a.REGION<>'C_' AND a.MARSHA not IN ( 'MCOJW', 'MCORZ' ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE Canadian_Local AS select a.MARSHA, b.MARSHA_NEW, b.HOTEL_NAME, b.REGION, b.AVP, b.BRND, a.SCOMP , b.STR_ID, b.PEOPLESOFT_ID, b.MF, b.DOMINT, a.COMPLETE_DATA, a.TIMEF , CASE WHEN a.SCOMP = 'Y' THEN 1 ELSE 0 END AS SCOMP_NUM , CASE WHEN b.BRND IN ( ""CY"", ""FI"", ""RI"", ""SH"", ""TS"", ""AR"", ""OX"", ""FP"", ""AL"", ""EL"") THEN ""MSB"" ELSE ""FS"" end AS TYPE , MARAVAIL, MARREV, MKTAVAIL, MKTREV, MARAVAILLY, MARREVLY, MKTAVAILLY, MKTREVLY , ROUND( ( ( a.MARREV/ a.MARAVAIL)/( a.MKTREV/a.MKTAVAIL))*100,.00001) AS RPI_TY , ROUND( ( ( a.MARREVLY/ a.MARAVAILLY)/( a.MKTREVLY/a.MKTAVAILLY))*100,.00001) AS RPI_LY , ROUND( (  ( ( a.MARREV/ a.MARAVAIL)/( a.MKTREV/a.MKTAVAIL))/100 , ( ( a.MARREVLY/ a.MARAVAILLY)/( a.MKTREVLY/a.MKTAVAILLY))*100 )-1,.00001) AS RPI_PCT_CHG , c.RevPAR_Index___Change AS RPI_GOAL_PCT_CHG FROM CMP.STR_MONTHLY_DATA AS a LEFT JOIN TGT_BUS.PROPERTY_MASTER_MISW_HIST AS b ON a.MARSHA = b.MARSHA_NEW AND a.asof_yrmo = b.asof_yrmo INNER JOIN AMERICAS_GOALS AS c ON a.MARSHA = c.MARSHA WHERE a.TIMEF ='LAST12' AND a.DATA_CATEGORY = 'Rooms' AND a.CURRENCY_TYPE = 'Local' AND a.YRMNTH = &YRMNTH. AND b.REGION = 'C_' AND b.MF = 'M' AND a.MARSHA not IN ( 'MCOJW', 'MCORZ' ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
 CREATE TABLE Canadian_Local_FS AS ( SELECT  *  FROM Canadian_Local  WHERE Type = 'FS');,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE FS_consolidated_1 AS select a.MARSHA, a.MARSHA_NEW, CASE WHEN a.SCOMP = 'Y' THEN 1 ELSE 0 END AS SCOMP_COUNT , a.MARREV, a.MARAVAIL, a.MKTREV, a.MKTAVAIL, a.MARREVLY, a.MARAVAILLY, a.MKTREVLY, a.MKTAVAILLY , b.RevPAR_Index___Change , a.MARREVLY/a.MARAVAILLY / ( a.MKTREVLY/a.MKTAVAILLY)*100 * ( 1 + b.RevPAR_Index___Change) / 100 * a.MKTREV AS MARREV_GOAL FROM ANNUAL AS a INNER JOIN AMERICAS_GOALS AS b ON a.MARSHA=b.MARSHA WHERE a.MARSHA IN ( 'MCOJW', 'MCORZ', 'MCOSI', 'MCODW' ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE FS_consolidated_2 AS select CASE WHEN MARSHA_NEW IN ( 'MCOJW', 'MCORZ') THEN '33GLR' when MARSHA_NEW IN ( 'MCOSI', 'MCODW')then 'WDW' END AS MARSHA , CASE WHEN MARSHA_NEW IN ( 'MCOJW', 'MCORZ') THEN '33GLR' when MARSHA_NEW IN ( 'MCOSI', 'MCODW')then 'WDW' END AS MARSHA_NEW , SUM ( SCOMP_COUNT) AS SCOMP_COUNT , SUM( MARREV) AS MARREV, SUM( MARAVAIL) AS MARAVAIL, SUM( MKTREV) AS MKTREV, SUM( MKTAVAIL) AS MKTAVAIL , SUM( MARREVLY) AS MARREVLY, SUM( MARAVAILLY) AS MARAVAILLY, SUM( MKTREVLY) AS MKTREVLY, SUM( MKTAVAILLY) AS MKTAVAILLY , SUM( MARREV_GOAL) AS MARREV_GOAL FROM FS_consolidated_1 a GROUP BY calculated MARSHA, calculated MARSHA_NEW;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE FS_consolidated_3 AS select a.MARSHA, a.MARSHA_NEW , CASE WHEN MARSHA = '33GLR' THEN 'Combined MCOJW AND MCORZ for bonus purposes' when MARSHA = 'WDW' THEN 'Combined MCOSI AND MCODW for bonus purposes' END AS HOTEL_NAME , 'E_' AS REGION, '' AS AVP, '' AS BRND , CASE WHEN SCOMP_COUNT = 2 THEN 'Y' ELSE 'N' END AS SCOMP , CASE WHEN SCOMP_COUNT = 2 THEN 1 ELSE 0 END AS SCOMP_NUM , ROUND( ( a.MARREV/ a.MKTREV)*100,.000001) AS RPI_TY , ROUND( ( a.MARREVLY/a.MKTREVLY)*100,.000001)AS RPI_LY , ROUND( ( a.MARREV_GOAL/ a.MARAVAIL)/( a.MKTREV/ a.MKTAVAIL)*100 / ( ( a.MARREVLY/ a.MARAVAILLY)/( a.MKTREVLY/ a.MKTAVAILLY)*100) - 1, .000001) AS RPI_GOAL_PCT_CHG , ROUND( (  ( ( a.MARREV/ a.MARAVAIL)/( a.MKTREV/a.MKTAVAIL))/100 , ( ( a.MARREVLY/ a.MARAVAILLY)/( a.MKTREVLY/a.MKTAVAILLY))*100 )-1,.00001) AS RPI_PCT_CHG FROM FS_consolidated_2 a;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
 CREATE TABLE FIELD_BONUS_REPORT AS ( SELECT  *  FROM Full_Service_Property_Level UNION ALL SELECT  *  FROM FS_consolidated_3 UNION ALL SELECT  *  FROM Canadian_Local_FS);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE MSB_hotels AS select a.MARSHA, a.MARSHA_NEW, a.HOTEL_NAME, a.REGION, a.BRND, a.MF, a.SCOMP , CASE WHEN a.SCOMP = 'Y' THEN 1 ELSE 0 END AS SCOMP_NUM , a.RPI_TY, a.RPI_LY, a.RPI_PCT_CHG FROM ANNUAL a WHERE a.TYPE = 'MSB' AND a.MF = 'M' AND a.REGION IN ( 'E_', 'W_', 'C_') AND a.SCOMP = 'Y';",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE MSB_Consolidated_1 AS select '31LLB' AS MARSHA, '33LLB' AS MARSHA_NEW, ""Consolidated Little Lake Bryan"" AS HOTEL_NAME, 'E_' AS REGION , '' AS BRND, 'M' AS MF , SUM ( CASE WHEN a.SCOMP = 'Y' THEN 1 ELSE 0 end ) AS SCOMP_COUNT , SUM( MARAVAIL) AS MARAVAIL, SUM( MARREV) AS MARREV, SUM( MKTAVAIL) AS MKTAVAIL, SUM( MKTREV) AS MKTREV , SUM( MARAVAILLY) AS MARAVAILLY, SUM( MARREVLY) AS MARREVLY, SUM( MKTAVAILLY) AS MKTAVAILLY, SUM( MKTREVLY) AS MKTREVLY FROM ANNUAL a WHERE a.MARSHA IN ( 'MCOLX', 'MCOLY', 'MCOLZ' ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE MSB_Consolidated_2 AS select a.MARSHA, a.MARSHA_NEW, a.HOTEL_NAME, a.REGION, a.BRND, a.MF , CASE WHEN SCOMP_COUNT = 3 THEN 'Y' ELSE 'N' END AS SCOMP , CASE WHEN SCOMP_COUNT = 3 THEN 1 ELSE 0 END AS SCOMP_NUM , ROUND( ( ( a.MARREV/ a.MARAVAIL)/( a.MKTREV/a.MKTAVAIL))*100,.00001) AS RPI_TY , ROUND( ( ( a.MARREVLY/ a.MARAVAILLY)/( a.MKTREVLY/a.MKTAVAILLY))*100,.00001) AS RPI_LY , ROUND( (  ( ( a.MARREV/ a.MARAVAIL)/( a.MKTREV/a.MKTAVAIL))/100 , ( ( a.MARREVLY/ a.MARAVAILLY)/( a.MKTREVLY/a.MKTAVAILLY))*100 )-1,.00001) AS RPI_PCT_CHG FROM MSB_Consolidated_1 a;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
 CREATE TABLE MSB_Property_Level AS ( SELECT  *  FROM MSB_hotels UNION ALL SELECT  *  FROM MSB_consolidated_2);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE Ritz_Property_Level AS select a.MARSHA, a.HOTEL_NAME, a.REGION, a.BRND, a.MF, a.SCOMP , CASE WHEN a.SCOMP = 'Y' THEN 1 ELSE 0 END AS SCOMP_NUM , a.RPI_TY , b.RC_GOAL FROM ANNUAL a LEFT JOIN AMERICAS_GOALS AS b ON a.MARSHA=b.MARSHA WHERE a.BRND IN ( 'RZ', 'EB') AND a.REGION IN ( 'E_', 'W_' ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE MSB_NONCOMP AS select a.MARSHA, a.MARSHA_NEW, a.HOTEL_NAME, a.REGION, a.BRND, a.MF , 'N' AS SCOMP, 0 AS SCOMP_NUM FROM TGT_BUS.PROPERTY_MASTER_MISW_HIST a LEFT JOIN MSB_hotels AS b ON a.MARSHA = b.MARSHA WHERE a.asof_yrmo = &yrmnth. AND b.SCOMP <> 'Y' AND a.BRND IN ( ""CY"", ""FI"", ""RI"", ""SH"", ""TS"", ""AR"", ""OX"", ""FP"", ""AL"", ""EL"") AND a.MF = 'M' AND a.REGION IN ( 'E_', 'W_', 'C_') ORDER BY a.MARSHA;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
"CREATE TABLE ""&OUTPUT.\Property AND Plan Tabs &CURDATE..xlsx"" AS ( SELECT * FROM AMERICAS_SYSTEMWIDE_SCOMP) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
"CREATE TABLE ""&OUTPUT.\Property AND Plan Tabs &CURDATE..xlsx"" AS ( SELECT * FROM MSB_Property_Level) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
"CREATE TABLE ""&OUTPUT.\Property AND Plan Tabs &CURDATE..xlsx"" AS ( SELECT * FROM FIELD_BONUS_REPORT) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
"CREATE TABLE ""&OUTPUT.\Property AND Plan Tabs &CURDATE..xlsx"" AS ( SELECT * FROM RITZ_Property_Level) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
"CREATE TABLE ""&OUTPUT.\Property AND Plan Tabs &CURDATE..xlsx"" AS ( SELECT * FROM MSB_NONCOMP) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE Global AS select 'Global' AS DESCRIPTION, COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a WHERE a.SCOMP = 'Y' GROUP BY calculated DESCRIPTION;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE Americas_MGD AS select 'Americas_MGD' AS DESCRIPTION, COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a WHERE a.SCOMP = 'Y' AND a.REGION IN ( 'E_', 'W_', 'C_', 'S_') AND a.MF = 'M' GROUP BY calculated DESCRIPTION;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE Americas_SYSTEM AS select 'Americas_SYSTEMWIDE' AS DESCRIPTION, COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a WHERE a.SCOMP = 'Y' AND a.REGION IN ( 'E_', 'W_', 'C_', 'S_') GROUP BY calculated DESCRIPTION;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE Americas_MSB_MGD AS select 'Americas_MSB_MGD' AS DESCRIPTION, COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a WHERE a.SCOMP = 'Y' AND a.TYPE = 'MSB' AND a.REGION IN ( 'E_', 'W_', 'C_', 'S_') AND a.MF = 'M' GROUP BY calculated DESCRIPTION;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE CALA_MGD AS select 'CALA_MGD' AS DESCRIPTION, COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a WHERE a.SCOMP = 'Y' AND a.REGION = 'S_' AND a.MF = 'M' GROUP BY calculated DESCRIPTION;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE Amer_MSB_System_FS_Fran AS select 'Americas_MSB_Systemwide_FS_Franchised' AS DESCRIPTION, COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a WHERE a.SCOMP = 'Y' AND a.REGION IN ( 'E_', 'W_', 'C_', 'S_') AND ( a.TYPE = 'MSB' OR a.MF = 'F') GROUP BY calculated DESCRIPTION;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE Edition AS select 'Edition' AS DESCRIPTION, COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a WHERE a.SCOMP = 'Y' AND a.BRND = 'EB' GROUP BY calculated DESCRIPTION;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE RH AS select 'Renaissance' AS DESCRIPTION, COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a WHERE a.SCOMP = 'Y' AND a.BRND IN ( 'BR') AND a.REGION IN ( 'E_', 'W_', 'C_') GROUP BY calculated DESCRIPTION;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE E_W_GATEKEEPER_MGD AS select CASE WHEN a.REGION = 'W_' THEN 'West Managed Region' when a.REGION = 'E_' THEN 'East Managed Region' END AS DESCRIPTION, COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a WHERE a.SCOMP = 'Y' AND a.REGION IN ( 'E_', 'W_') AND a.MF = 'M' GROUP BY calculated DESCRIPTION;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
 CREATE TABLE PLAN_TAB AS ( SELECT  *  FROM Amer_MSB_System_FS_Fran UNION ALL SELECT  *  FROM Global UNION ALL SELECT  *  FROM Americas_MGD UNION ALL SELECT  *  FROM Americas_SYSTEM UNION ALL SELECT  *  FROM Americas_MSB_MGD UNION ALL SELECT  *  FROM CALA_MGD UNION ALL SELECT  *  FROM Edition UNION ALL SELECT  *  FROM RH UNION ALL SELECT  *  FROM E_W_GATEKEEPER_MGD);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
"CREATE TABLE ""&OUTPUT.\Property AND Plan Tabs &CURDATE..xlsx"" AS ( SELECT * FROM PLAN_TAB) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE Region_All_Brands AS select CASE WHEN a.REGION = 'W_' THEN 'West Managed Region' when a.REGION = 'E_' THEN 'East Managed Region' when a.REGION = 'S_' THEN 'CALA Managed Region' when a.REGION = 'C_' THEN 'Canada Managed Region' END AS DESCRIPTION, COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a WHERE a.SCOMP = 'Y' AND a.REGION IN ( 'E_', 'W_', 'S_') AND a.MF = 'M' GROUP BY calculated DESCRIPTION;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE Region_MSB AS select CASE WHEN a.REGION = 'W_' THEN 'MSB West Managed Region' when a.REGION = 'E_' THEN 'MSB East Managed Region' when a.REGION = 'S_' THEN 'MSB CALA Managed Region' when a.REGION = 'C_' THEN 'MSB Canada Managed Region' END AS DESCRIPTION, COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a WHERE a.SCOMP = 'Y' AND a.REGION IN ( 'E_', 'W_', 'S_') AND a.MF = 'M' AND a.TYPE = 'MSB' GROUP BY calculated DESCRIPTION;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE Canada_All_Brands AS select CASE WHEN a.REGION = 'C_' THEN 'Canada Managed Region' END AS DESCRIPTION, COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM Canadian_Local a WHERE a.SCOMP = 'Y' AND a.REGION IN ( 'C_') AND a.MF = 'M' GROUP BY calculated DESCRIPTION;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE Canada_MSB AS select CASE WHEN a.REGION = 'C_' THEN 'MSB Canada Managed Region' END AS DESCRIPTION, COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM Canadian_Local a WHERE a.SCOMP = 'Y' AND a.REGION IN ( 'C_') AND a.MF = 'M' AND a.TYPE = 'MSB' GROUP BY calculated DESCRIPTION;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
 CREATE TABLE Region AS ( SELECT  *  FROM Region_MSB UNION ALL SELECT  *  FROM Region_All_Brands UNION ALL SELECT  *  FROM Canada_MSB UNION ALL SELECT  *  FROM Canada_All_Brands);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
"CREATE TABLE ""&OUTPUT.\Region Tab &CURDATE..xlsx"" AS ( SELECT * FROM Region) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE unique_BMD_3399 AS ( SELECT marsha, Peoplesoft_EEID, PEOPLESOFT_NAME FROM BMD_3399 );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
"SELECT DISTINCT * FROM unique_BMD_3399 ORDER BY marsha ,Peoplesoft_EEID ,PEOPLESOFT_NAME;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE BMD_3399_ROLLUPS AS select b.Peoplesoft_EEID, b.PEOPLESOFT_NAME, ""3399"" AS Plan_ID , COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a LEFT JOIN unique_BMD_3399 AS b ON a.MARSHA_NEW = b.MARSHA WHERE a.SCOMP = 'Y' AND b.MARSHA <> '' GROUP BY b.Peoplesoft_EEID, b.PEOPLESOFT_NAME, Plan_ID;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE unique_BMD_3400 AS ( SELECT marsha, Peoplesoft_EEID, PEOPLESOFT_NAME FROM BMD_3400 );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
"SELECT DISTINCT * FROM unique_BMD_3400 ORDER BY marsha ,Peoplesoft_EEID ,PEOPLESOFT_NAME;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE BMD_3400_ROLLUPS AS select b.Peoplesoft_EEID, b.PEOPLESOFT_NAME, ""3400"" AS Plan_ID , COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a LEFT JOIN unique_BMD_3400 AS b ON a.MARSHA_NEW = b.MARSHA WHERE a.SCOMP = 'Y' AND b.MARSHA <> '' GROUP BY b.Peoplesoft_EEID, b.PEOPLESOFT_NAME, Plan_ID;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE unique_Column_4364 AS ( SELECT marshacode, Unit, Property_Name FROM Column_4364 );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
"SELECT DISTINCT * FROM unique_Column_4364 ORDER BY marshacode ,Unit ,Property_Name;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE Column_4364_ROLLUPS AS select ""Column_4364"" AS Plan_ID , COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a LEFT JOIN unique_Column_4364 AS b ON a.MARSHA_NEW = b.marshacode WHERE a.SCOMP = 'Y' AND b.marshacode <> '' GROUP BY Plan_ID;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
 CREATE TABLE BMD_ROLLUPS AS ( SELECT  *  FROM Column_4364_ROLLUPS UNION ALL SELECT  *  FROM BMD_3400_ROLLUPS UNION ALL SELECT  *  FROM BMD_3399_ROLLUPS);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE unique__EE AS ( SELECT MARSHA_Code, EMPL_ID, EMPLOYEE, PLID FROM _EE );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
"SELECT DISTINCT * FROM unique__EE ORDER BY MARSHA_Code ,EMPL_ID ,EMPLOYEE ,PLID;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE MISSIMG_EE_ROLLUPS AS select b.EMPL_ID, b.EMPLOYEE, b.PLID , COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a INNER JOIN unique_MISSING_EE AS b ON a.MARSHA_NEW = b.MARSHA_Code WHERE a.SCOMP = 'Y' AND b.MARSHA_Code <> '' GROUP BY b.EMPL_ID, b.EMPLOYEE, b.PLID;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE unique_B_SORENSON AS ( SELECT MARSHA, EEID, EMPLOYEE_NAME FROM B_SORENSON );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
"SELECT DISTINCT * FROM unique_B_SORENSON ORDER BY MARSHA ,EEID ,EMPLOYEE_NAME;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE B_SORENSON_ROLLUPS AS select b.EEID, b.EMPLOYEE_NAME , COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a INNER JOIN unique_B_SORENSON AS b ON a.MARSHA_NEW = b.MARSHA WHERE a.SCOMP = 'Y' AND b.MARSHA <> '' GROUP BY b.EEID, b.EMPLOYEE_NAME;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE unique_HYDE AS ( SELECT MARSHA_CODE, EMPL_ID, EMPLOYEE FROM HYDE );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
"SELECT DISTINCT * FROM unique_HYDE ORDER BY MARSHA_CODE ,EMPL_ID ,EMPLOYEE;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE HYDE_ROLLUPS AS select b.EMPL_ID, b.EMPLOYEE , COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a INNER JOIN unique_HYDE AS b ON a.MARSHA_NEW = b.MARSHA_CODE WHERE a.SCOMP = 'Y' AND b.MARSHA_CODE <> '' GROUP BY b.EMPL_ID, b.EMPLOYEE;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE unique_area_list AS ( SELECT MARSHA_Code, EMPL_ID, EMPLOYEE, PLID FROM area_list );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
"SELECT DISTINCT * FROM unique_area_list ORDER BY MARSHA_Code ,EMPL_ID ,EMPLOYEE ,PLID;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE AREA_ROLLUPS AS select b.EMPL_ID, b.EMPLOYEE, b.PLID , COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a INNER JOIN UNIQUE_AREA_LIST AS b ON a.MARSHA_NEW = b.MARSHA_Code WHERE a.SCOMP = 'Y' AND b.MARSHA_Code <> '' GROUP BY b.EMPL_ID, b.EMPLOYEE, b.PLID;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE unique_sales_list AS ( SELECT MARSHACode, EEID, PLID FROM sales_list );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
"SELECT DISTINCT * FROM unique_sales_list ORDER BY MARSHACode ,EEID ,PLID;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE SALES_ROLLUPS AS select b.EEID, b.PLID , COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( (  ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))/100 , ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100 )-1,.00001) AS RPI_PCT_CHG FROM ANNUAL a INNER JOIN UNIQUE_SALES_LIST AS b ON a.MARSHA_NEW = b.MARSHACode WHERE a.SCOMP = 'Y' AND b.MARSHACode <> '' GROUP BY b.EEID, b.PLID;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
"CREATE TABLE ""&OUTPUT.\Employee Tab &CURDATE..xlsx"" AS ( SELECT * FROM BMD_ROLLUPS) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
"CREATE TABLE ""&OUTPUT.\Employee Tab &CURDATE..xlsx"" AS ( SELECT * FROM AREA_ROLLUPS) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
"CREATE TABLE ""&OUTPUT.\Employee Tab &CURDATE..xlsx"" AS ( SELECT * FROM SALES_ROLLUPS) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
"CREATE TABLE ""&OUTPUT.\Employee Tab &CURDATE..xlsx"" AS ( SELECT * FROM MISSIMG_EE_ROLLUPS) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
"CREATE TABLE ""&OUTPUT.\Employee Tab &CURDATE..xlsx"" AS ( SELECT * FROM B_SORENSON_ROLLUPS) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
"CREATE TABLE ""&OUTPUT.\Employee Tab &CURDATE..xlsx"" AS ( SELECT * FROM HYDE_ROLLUPS) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_NEW_ROLLUPS_Annual_Bonus_Reporting_2018_Converted_to_AW.sas
" CREATE TABLE nonref.nonrefrts AS  (  SELECT H.MARSHACODE AS MARSHA , mro.rateoffername , hre.hotelrorateentitysystemid , hre.marketcode , hre.rpgm , htc.cancelfeeapplies , htc.cancelfeeis , htc.defaultseason FROM mrdw_hppdbo_hotelrateoffer_usm HRO INNER JOIN ( select hotelid, rateofferid, max( hotelrateoffersystemid) AS max_hrosysid FROM mrdw_hppdbo_hotelrateoffer_usm WHERE completionlevel='P' AND ratetypeid not IN ( 1,4) GROUP BY hotelid, rateofferid) lro ON lro.hotelid=hro.hotelid AND lro.rateofferid=hro.rateofferid AND lro.max_hrosysid=hro.HOTELRATEOFFERSYSTEMID INNER JOIN mrdw_hppdbo_masterrateoffer_usm mro ON mro.masterrateoffersystemid = hro.masterrateoffersystemid inner JOIN mrdw_hppdbo_hotelrorateentity_usm HRE ON HRO.HOTELRATEOFFERSYSTEMID = HRE.HOTELRATEOFFERSYSTEMID LEFT JOIN mrdw_hppdbo_hotelroretermsconditions_usm htc ON htc.hotelrorateentitysystemid = hre.hotelrorateentitysystemid INNER JOIN mrdw_hppdbo_hotel_usm H ON HRO.HOTELID = H.HOTELID WHERE hro.completionlevel = 'P' AND htc.defaultseason = 'Y' AND htc.cancelfeeis='1'  )  ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_nonrefundable_rpgs.sas
 CREATE TABLE nonref.prop_master AS  (  SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER  ) ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_nonrefundable_rpgs.sas
" CREATE TABLE nonref.Gross_NOS AS  (  SELECT property_cd AS marsha, RATE_PGM_CD AS rpgm, CHANNEL_AGGREGATE_CD AS chanagg, CHANNEL_DETAIL_CD AS chandet, ECHANNEL_TYPE_CD AS echantype, ECHANNEL_SITE_CD AS echansite , COUNT( distinct( CONFO_CREATE_DT||CONFO_NUM_ORIG_ID||CONFO_NUM_CURR_ID)) AS reservations , SUM( ROOMS_QTY) AS rn, SUM( ROOM_REV_CUSD_SUB_AMT) AS room_rv , SUM( TOT_REV_CUSD_SUB_AMT) AS tot_rv FROM AW_TGT_BUS_DBO.MRDW_BI_FACT_Gross_NOS A WHERE CONFO_CREATE_YEAR >= 2018 AND CONFO_CREATE_DT >= &begdt. AND CONFO_CREATE_DT <= &enddt. GROUP BY property_cd, RATE_PGM_CD, CHANNEL_AGGREGATE_CD, CHANNEL_DETAIL_CD, ECHANNEL_TYPE_CD, ECHANNEL_SITE_CD  ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_nonrefundable_rpgs.sas
" CREATE TABLE nonref.STAYED_PAID_NOS AS  (  SELECT property_cd AS marsha, CURR_RATE_PGM_CD AS rpgm, CHANNEL_AGGREGATE_CD AS chanagg , COUNT( distinct( CONFO_CREATE_DT||CONFO_NUM_ORIG_ID||CONFO_NUM_CURR_ID)) AS reservations , SUM( CURR_ROOMS_QTY) AS rn, SUM( CURR_ROOM_REV_CUSD_SUB_AMT) AS room_rv , SUM( CURR_TOT_REV_CUSD_SUB_AMT) AS tot_rv FROM AW_TGT_BUS_DBO.MRDW_BI_FACT_STAYED_PAID_NOS A WHERE stay_year >= 2018 AND STAY_DT >= &begdt. AND STAY_DT <= &enddt. AND nos_status_cd = 'A' GROUP BY property_cd, CURR_RATE_PGM_CD, CHANNEL_AGGREGATE_CD  ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_nonrefundable_rpgs.sas
"SELECT * FROM nonref.Gross_NOS ORDER BY marsha ,rpgm;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_nonrefundable_rpgs.sas
"SELECT * FROM nonref.STAYED_PAID_NOS ORDER BY marsha ,rpgm;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_nonrefundable_rpgs.sas
"SELECT DISTINCT * FROM nonref.nonrefrts ORDER BY marsha ,rpgm;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_nonrefundable_rpgs.sas
" CREATE TABLE nonref.Gross_comb AS ( SELECT  *  , room_rv AS noref_room_rv , tot_rv AS noref_rtot_rv , reservations AS noref_res  FROM nonref.Gross_NOS A LEFT JOIN nonref.nonrefrts B ON  A.marsha =  B.marsha AND  A.rpgm =  B.rpgm WHERE a AND b);",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_nonrefundable_rpgs.sas
"CREATE TABLE nonref.Gross_cmb_ch_ec_sum AS (SELECT MARSHA, CHANAGG, rateoffername, chandet, echantype, echansite, SUM(reservations) AS reservations, SUM(rn) AS rn, SUM(room_rv) AS room_rv, SUM(tot_rv) AS tot_rv, SUM(noref_res) AS noref_res, SUM(noref_rn) AS noref_rn, SUM(noref_room_rv) AS noref_room_rv, SUM(noref_rtot_rv) AS noref_rtot_rv FROM nonref.Gross_comb GROUP BY MARSHA, CHANAGG, rateoffername, chandet, echantype, echansite );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_nonrefundable_rpgs.sas
"SELECT * FROM nonref.Gross_comb ORDER BY CHANNEL_AGGREGATE_CD,CHANNEL_DETAIL_CD,ECHANNEL_TYPE_CD,ECHANNEL_SITE_CD;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_nonrefundable_rpgs.sas
"CREATE TABLE nonref.Gross_abvprp_ch_ec_sum AS (SELECT CHANNEL_AGGREGATE_CD, CHANNEL_DETAIL_CD, ECHANNEL_TYPE_CD, ECHANNEL_SITE_CD, SUM(reservations) AS reservations, SUM(rn) AS rn, SUM(room_rv) AS room_rv, SUM(tot_rv) AS tot_rv, SUM(noref_res) AS noref_res, SUM(noref_rn) AS noref_rn, SUM(noref_room_rv) AS noref_room_rv, SUM(noref_rtot_rv) AS noref_rtot_rv FROM nonref.Gross_comb GROUP BY CHANNEL_AGGREGATE_CD, CHANNEL_DETAIL_CD, ECHANNEL_TYPE_CD, ECHANNEL_SITE_CD );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_nonrefundable_rpgs.sas
 CREATE TABLE Gross_cmb_ch_ec_sum_T3 AS ( SELECT  *  FROM nonref.Gross_cmb_ch_ec_sum  WHERE _TYPE_=3);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_nonrefundable_rpgs.sas
 CREATE TABLE Gross_cmb_ch_ec_sum_T4 AS ( SELECT  *  FROM nonref.Gross_cmb_ch_ec_sum  WHERE _TYPE_=4);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_nonrefundable_rpgs.sas
 CREATE TABLE Gross_cmb_ch_ec_sum_T4 AS ( SELECT  *  FROM nonref.Gross_cmb_ch_ec_sum  WHERE _TYPE_=4);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_nonrefundable_rpgs.sas
 CREATE TABLE Gross_cmb_ch_ec_sum_T62 AS ( SELECT  *  FROM nonref.Gross_cmb_ch_ec_sum  WHERE _TYPE_=62);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_nonrefundable_rpgs.sas
" CREATE TABLE nonref.STAYED_PAID_comb AS ( SELECT  *  , room_rv AS noref_room_rv , tot_rv AS noref_rtot_rv , reservations AS noref_res  FROM nonref.STAYED_PAID_NOS A LEFT JOIN nonref.nonrefrts B ON  A.marsha =  B.marsha AND  A.rpgm =  B.rpgm WHERE a AND b);",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_nonrefundable_rpgs.sas
"CREATE TABLE ""\\Hdqmdm1fpcl4v1\lodg-revmgmt\RM EAnlys\MikeS\Nonref\Gross_comb_sum.TXT"" AS ( SELECT * FROM nonref.Gross_comb_ch_sum) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_nonrefundable_rpgs.sas
"CREATE TABLE ""\\Hdqmdm1fpcl4v1\lodg-revmgmt\RM EAnlys\MikeS\Nonref\Gross_comb_rprm_det.TXT"" AS ( SELECT * FROM nonref.Gross_comb) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_nonrefundable_rpgs.sas
"CREATE TABLE nonref.STAYED_PAID_comb_sum AS (SELECT MARSHA, SUM(reservations) AS reservations, SUM(rn) AS rn, SUM(room_rv) AS room_rv, SUM(tot_rv) AS tot_rv, SUM(noref_res) AS noref_res, SUM(noref_rn) AS noref_rn, SUM(noref_room_rv) AS noref_room_rv, SUM(noref_rtot_rv) AS noref_rtot_rv FROM nonref.STAYED_PAID_comb GROUP BY MARSHA );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_nonrefundable_rpgs.sas
"CREATE TABLE ""\\Hdqmdm1fpcl4v1\lodg-revmgmt\RM EAnlys\MikeS\Nonref\STAYED_PAID_comb_sum.TXT"" AS ( SELECT * FROM nonref.STAYED_PAID_comb_sum) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_nonrefundable_rpgs.sas
"CREATE TABLE ""\\Hdqmdm1fpcl4v1\lodg-revmgmt\RM EAnlys\MikeS\Nonref\STAYED_PAID_comb_rprm_det.TXT"" AS ( SELECT * FROM nonref.STAYED_PAID_comb) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_nonrefundable_rpgs.sas
" CREATE TABLE STR_DATA AS select a.MARSHA, a.YRMNTH, a.TIMEF, a.SCOMP , a.MARAVAIL, a.MARSOLD, a.MARREV , a.MARAVAILLY, a.MARSOLDLY, a.MARREVLY , a.MKTAVAIL, a.MKTSOLD, a.MKTREV , a.MKTAVAILLY, a.MKTSOLDLY, a.MKTREVLY , a.MKTAVAIL_UNW, a.MKTSOLD_UNW, a.MKTREV_UNW , a.MKTAVAIL_UNWLY, a.MKTSOLD_UNWLY, a.MKTREV_UNWLY FROM CMP.STR_MONTHLY_DATA a WHERE a.asof_yrmo = &yrmnth. AND a.data_category = 'Rooms' AND a.currency_type = 'Constant USD' AND a.yrmnth = &yrmnth.;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Remove_Sisters_from_Comp_Set_201911_(WS).sas
" CREATE TABLE COMP_SET_DATA AS select a.MARSHA, c.YRMNTH, c.TIMEF , SUM( c.MARAVAIL) AS MARAVAIL, SUM( c.MARSOLD) AS MARSOLD, SUM( c.MARREV) AS MARREV , SUM( c.MARAVAILLY) AS MARAVAILLY, SUM( c.MARSOLDLY) AS MARSOLDLY, SUM( c.MARREVLY) AS MARREVLY FROM CMP.STR_COMPETE a LEFT JOIN TGT_BUS.PROPERTY_MASTER AS b ON CAST( a.COMP_HOTEL, 6. ) = b.STR_ID LEFT JOIN STR_DATA AS c ON b.MARSHA = c.MARSHA WHERE a.control = 'C' GROUP BY a.MARSHA, c.YRMNTH, c.TIMEF;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Remove_Sisters_from_Comp_Set_201911_(WS).sas
" CREATE TABLE COMP_SET_DATA AS ( SELECT  * , CASE WHEN  change=' '  THEN 0 END AS change FROM COMP_SET_DATA );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Remove_Sisters_from_Comp_Set_201911_(WS).sas
" CREATE TABLE SUBTRACTION AS select a.MARSHA, a.YRMNTH, a.TIMEF, a.SCOMP , a.MARAVAIL, a.MARSOLD, a.MARREV , a.MARAVAILLY, a.MARSOLDLY, a.MARREVLY , a.MKTAVAIL, a.MKTSOLD, a.MKTREV , a.MKTAVAILLY, a.MKTSOLDLY, a.MKTREVLY , ( a.MKTAVAIL_UNW+ - b.MARAVAIL) AS MKTAVAIL_UNW , ( a.MKTSOLD_UNW+ - b.MARSOLD) AS MKTSOLD_UNW , ( a.MKTREV_UNW+ - b.MARREV) AS MKTREV_UNW , ( a.MKTAVAIL_UNWLY+ - b.MARAVAILLY) AS MKTAVAIL_UNWLY , ( a.MKTSOLD_UNWLY+ - b.MARSOLDLY) AS MKTSOLD_UNWLY , ( a.MKTREV_UNWLY+ - b.MARREVLY) AS MKTREV_UNWLY FROM STR_DATA a LEFT JOIN COMP_SET_DATA AS b ON a.MARSHA = b.MARSHA AND a.YRMNTH = b.YRMNTH AND a.TIMEF = b.TIMEF;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Remove_Sisters_from_Comp_Set_201911_(WS).sas
" CREATE TABLE PORTFOLIO_WEIGHT AS select a.MARSHA, a.YRMNTH, a.TIMEF, a.SCOMP , a.MARAVAIL, a.MARSOLD, a.MARREV , a.MARAVAILLY, a.MARSOLDLY, a.MARREVLY , a.MKTAVAIL, a.MKTSOLD, a.MKTREV , a.MKTAVAILLY, a.MKTSOLDLY, a.MKTREVLY , a.MARAVAIL AS MKTAVAIL_ADJ, a.MARAVAIL / a.MKTAVAIL_UNW * MKTSOLD_UNW AS MKTSOLD_ADJ, a.MARAVAIL / MKTAVAIL_UNW * MKTREV_UNW AS MKTREV_ADJ , a.MARAVAILLY AS MKTAVAILLY_ADJ, a.MARAVAILLY / a.MKTAVAIL_UNWLY * MKTSOLD_UNWLY AS MKTSOLDLY_ADJ, a.MARAVAILLY / MKTAVAIL_UNWLY * MKTREV_UNWLY AS MKTREVLY_ADJ FROM SUBTRACTION a;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Remove_Sisters_from_Comp_Set_201911_(WS).sas
" CREATE TABLE ADD_PLU_FIELDS AS select a.* , b.MF, b.BRND_NAME, b.DIVISION_NAME, b.REGION_NAME, b.STR_MARKET , b.HOTEL_NAME, b.COUNTRY, b.OWNER, b.HCLASS2, b.MISW_FLAG FROM PORTFOLIO_WEIGHT a LEFT JOIN TGT_BUS.PROPERTY_MASTER AS b ON a.MARSHA = b.MARSHA;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Remove_Sisters_from_Comp_Set_201911_(WS).sas
"CREATE TABLE ""\\hdqmdm1fpcl3v2\lodg-smps\Reporting Analysis\Sales Comp Analysis\Kathryn\Ad Hoc\RPI Excl Sister Properties &yrmnth..xlsb"" AS ( SELECT * FROM ADD_PLU_FIELDS) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Remove_Sisters_from_Comp_Set_201911_(WS).sas
 CREATE TABLE mams.PLU&plutimef AS  (  SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER_HIST Where asof_yrmo=&plutimef  )  ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo.sas
" CREATE TABLE data1_wd AS select b.MARSHA, b.brnd, month, year , SUM( ( AU_GR_DEF_RV + AU_GR_Ten_RV + AU_GR_Tobe_RV)) AS WD_GR_RV , SUM( AU_TR_RV) AS WD_TR_RV, SUM( AU_CT_RV) AS WD_CT_RV , SUM( ( AU_GR_DEF_RN + AU_GR_Ten_RN + AU_GR_Tobe_RN)) AS WD_GR_RN , SUM( AU_TR_RN) AS WD_TR_RN, SUM( AU_CT_RN) AS WD_CT_RN , SUM( capacity) AS WD_cap FROM Proj.Extractsum_mo AS a INNER JOIN all5.prop AS b ON a.prop_code=b.marsha WHERE ( 100*year)+month IN ( &TY_1MO , &TY_2MO , &TY_3MO , &LY_1MO , &LY_2MO , &LY_3MO) AND b.mf='M' AND b.region IN ( 'E_' 'S_' 'W_' 'C_') AND country IN ( 'United States' 'Canada') AND WDWE ='WD' GROUP BY b.marsha, b.brnd, month, year;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo.sas
" CREATE TABLE data1_we AS select b.MARSHA, b.brnd, month, year , SUM( ( AU_GR_DEF_RV + AU_GR_Ten_RV + AU_GR_Tobe_RV)) AS WE_GR_RV , SUM( AU_TR_RV) AS WE_TR_RV, SUM( AU_CT_RV) AS WE_CT_RV , SUM( ( AU_GR_DEF_RN + AU_GR_Ten_RN + AU_GR_Tobe_RN)) AS WE_GR_RN , SUM( AU_TR_RN) AS WE_TR_RN, SUM( AU_CT_RN) AS WE_CT_RN , SUM( capacity) AS WE_cap FROM Proj.Extractsum_mo AS a INNER JOIN all5.prop AS b ON a.prop_code=b.marsha WHERE ( 100*year)+month IN ( &TY_1MO , &TY_2MO , &TY_3MO , &LY_1MO , &LY_2MO , &LY_3MO) AND b.mf='M' AND b.region IN ( 'E_' 'S_' 'W_' 'C_') AND country IN ( 'United States' 'Canada') AND WDWE ='WE' GROUP BY b.marsha, b.brnd, month, year;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo.sas
" CREATE TABLE data1_fw AS select b.MARSHA, b.brnd, month, year , SUM( ( AU_GR_DEF_RV + AU_GR_Ten_RV + AU_GR_Tobe_RV)) AS FW_GR_RV , SUM( AU_TR_RV) AS FW_TR_RV, SUM( AU_CT_RV) AS FW_CT_RV , SUM( ( AU_GR_DEF_RN + AU_GR_Ten_RN + AU_GR_Tobe_RN)) AS FW_GR_RN , SUM( AU_TR_RN) AS FW_TR_RN, SUM( AU_CT_RN) AS FW_CT_RN , SUM( capacity) AS FW_cap FROM Proj.Extractsum_mo AS a INNER JOIN all5.prop AS b ON a.prop_code=b.marsha WHERE ( 100*year)+month IN ( &TY_1MO , &TY_2MO , &TY_3MO , &LY_1MO , &LY_2MO , &LY_3MO) AND b.mf='M' AND b.region IN ( 'E_' 'S_' 'W_' 'C_') AND country IN ( 'United States' 'Canada') GROUP BY b.marsha, b.brnd, month, year;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo.sas
" CREATE TABLE fw_1mo AS select marsha, SUM( fw_gr_rn) AS fw_gr_rn_1MO FROM data1_fw WHERE ( 100*year)+month = &TY_1MO GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo.sas
" CREATE TABLE fw_1mo_ly AS select marsha, SUM( fw_gr_rn) AS fw_gr_rn_LY_1MO FROM data1_fw WHERE ( 100*year)+month = &LY_1MO GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo.sas
" CREATE TABLE fw_2mo AS select marsha, SUM( fw_gr_rn) AS fw_gr_rn_2MO FROM data1_fw WHERE ( 100*year)+month = &TY_2MO GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo.sas
" CREATE TABLE fw_2mo_ly AS select marsha, SUM( fw_gr_rn) AS fw_gr_rn_LY_2MO FROM data1_fw WHERE ( 100*year)+month = &LY_2MO GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo.sas
" CREATE TABLE fw_3mo AS select marsha, SUM( fw_gr_rn) AS fw_gr_rn_3MO FROM data1_fw WHERE ( 100*year)+month = &TY_3MO GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo.sas
" CREATE TABLE fw_3mo_ly AS select marsha, SUM( fw_gr_rn) AS fw_gr_rn_LY_3MO FROM data1_fw WHERE ( 100*year)+month = &LY_3MO GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo.sas
" CREATE TABLE wd_occ_1mo AS select marsha, SUM( ( WD_TR_RN+WD_GR_RN+WD_CT_RN)) AS wd_rn_1MO, SUM( wd_cap) AS wd_cap_1MO FROM data1_wd WHERE ( 100*year)+month = &TY_1MO GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo.sas
" CREATE TABLE we_occ_1mo AS select marsha, SUM( ( WE_TR_RN+WE_GR_RN+WE_CT_RN)) AS we_rn_1MO, SUM( we_cap) AS we_cap_1MO FROM data1_we WHERE ( 100*year)+month = &TY_1MO GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo.sas
" CREATE TABLE fw_occ_1mo AS select marsha, SUM( ( FW_TR_RN+FW_GR_RN+FW_CT_RN)) AS fw_rn_1MO, SUM( fw_cap) AS fw_cap_1MO FROM data1_fw WHERE ( 100*year)+month = &TY_1MO GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo.sas
" CREATE TABLE wd_occ_2mo AS select marsha, SUM( ( WD_TR_RN+WD_GR_RN+WD_CT_RN)) AS wd_rn_2MO, SUM( wd_cap) AS wd_cap_2MO FROM data1_wd WHERE ( 100*year)+month = &TY_2MO GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo.sas
" CREATE TABLE we_occ_2mo AS select marsha, SUM( ( WE_TR_RN+WE_GR_RN+WE_CT_RN)) AS we_rn_2MO, SUM( we_cap) AS we_cap_2MO FROM data1_we WHERE ( 100*year)+month = &TY_2MO GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo.sas
" CREATE TABLE fw_occ_2mo AS select marsha, SUM( ( FW_TR_RN+FW_GR_RN+FW_CT_RN)) AS fw_rn_2MO, SUM( fw_cap) AS fw_cap_2MO FROM data1_fw WHERE ( 100*year)+month = &TY_2MO GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo.sas
" CREATE TABLE wd_occ_3mo AS select marsha, SUM( ( WD_TR_RN+WD_GR_RN+WD_CT_RN)) AS wd_rn_3MO, SUM( wd_cap) AS wd_cap_3MO FROM data1_wd WHERE ( 100*year)+month = &TY_3MO GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo.sas
" CREATE TABLE we_occ_3mo AS select marsha, SUM( ( WE_TR_RN+WE_GR_RN+WE_CT_RN)) AS we_rn_3MO, SUM( we_cap) AS we_cap_3MO FROM data1_we WHERE ( 100*year)+month = &TY_3MO GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo.sas
" CREATE TABLE fw_occ_3mo AS select marsha, SUM( ( FW_TR_RN+FW_GR_RN+FW_CT_RN)) AS fw_rn_3MO, SUM( fw_cap) AS fw_cap_3MO FROM data1_fw WHERE ( 100*year)+month = &TY_3MO GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo.sas
" CREATE TABLE wd_occ_1mo_ly AS select marsha, SUM( ( WD_TR_RN+WD_GR_RN+WD_CT_RN)) AS wd_rn_1MO_ly, SUM( wd_cap) AS wd_cap_1MO_ly FROM data1_wd WHERE ( 100*year)+month = &LY_1MO GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo.sas
" CREATE TABLE we_occ_1mo_ly AS select marsha, SUM( ( WE_TR_RN+WE_GR_RN+WE_CT_RN)) AS we_rn_1MO_ly, SUM( we_cap) AS we_cap_1MO_ly FROM data1_we WHERE ( 100*year)+month = &LY_1MO GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo.sas
" CREATE TABLE fw_occ_1mo_ly AS select marsha, SUM( ( FW_TR_RN+FW_GR_RN+FW_CT_RN)) AS fw_rn_1MO_ly, SUM( fw_cap) AS fw_cap_1MO_ly FROM data1_fw WHERE ( 100*year)+month = &LY_1MO GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo.sas
" CREATE TABLE wd_occ_2mo_ly AS select marsha, SUM( ( WD_TR_RN+WD_GR_RN+WD_CT_RN)) AS wd_rn_2MO_ly, SUM( wd_cap) AS wd_cap_2MO_ly FROM data1_wd WHERE ( 100*year)+month = &LY_2MO GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo.sas
" CREATE TABLE we_occ_2mo_ly AS select marsha, SUM( ( WE_TR_RN+WE_GR_RN+WE_CT_RN)) AS we_rn_2MO_ly, SUM( we_cap) AS we_cap_2MO_ly FROM data1_we WHERE ( 100*year)+month = &LY_2MO GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo.sas
" CREATE TABLE fw_occ_2mo_ly AS select marsha, SUM( ( FW_TR_RN+FW_GR_RN+FW_CT_RN)) AS fw_rn_2MO_ly, SUM( fw_cap) AS fw_cap_2MO_ly FROM data1_fw WHERE ( 100*year)+month = &LY_2MO GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo.sas
" CREATE TABLE wd_occ_3mo_ly AS select marsha, SUM( ( WD_TR_RN+WD_GR_RN+WD_CT_RN)) AS wd_rn_3MO_ly, SUM( wd_cap) AS wd_cap_3MO_ly FROM data1_wd WHERE ( 100*year)+month = &LY_3MO GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo.sas
" CREATE TABLE we_occ_3mo_ly AS select marsha, SUM( ( WE_TR_RN+WE_GR_RN+WE_CT_RN)) AS we_rn_3MO_ly, SUM( we_cap) AS we_cap_3MO_ly FROM data1_we WHERE ( 100*year)+month = &LY_3MO GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo.sas
" CREATE TABLE fw_occ_3mo_ly AS select marsha, SUM( ( FW_TR_RN+FW_GR_RN+FW_CT_RN)) AS fw_rn_3MO_ly, SUM( fw_cap) AS fw_cap_3MO_ly FROM data1_fw WHERE ( 100*year)+month = &LY_3MO GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo.sas
 CREATE TABLE hotels AS select distinct marsha FROM data1_fw;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo.sas
" CREATE TABLE mams.allrpdata AS select a.*, b.*, c.*, b2.*, c2.*, d.*, e.*, wd1.*, we1.*, fw1.*, wd2.*, we2.*, fw2.*, wd3.*, we3.*, fw3.* , wd1_ly.*, we1_ly.*, fw1_ly.*, wd2_ly.*, we2_ly.*, fw2_ly.*, wd3_ly.*, we3_ly.*, fw3_ly.* FROM hotels AS a LEFT JOIN fw_1mo AS b ON a.marsha=b.marsha LEFT JOIN fw_1mo_ly AS c ON a.marsha=c.marsha LEFT JOIN fw_2mo AS b2 ON a.marsha=b2.marsha LEFT JOIN fw_2mo_ly AS c2 ON a.marsha=c2.marsha LEFT JOIN fw_3mo AS d ON a.marsha=d.marsha LEFT JOIN fw_3mo_ly AS e ON a.marsha=e.marsha LEFT JOIN wd_occ_1mo AS wd1 ON a.marsha=wd1.marsha LEFT JOIN we_occ_1mo AS we1 ON a.marsha=we1.marsha LEFT JOIN fw_occ_1mo AS fw1 ON a.marsha=fw1.marsha LEFT JOIN wd_occ_2mo AS wd2 ON a.marsha=wd2.marsha LEFT JOIN we_occ_2mo AS we2 ON a.marsha=we2.marsha LEFT JOIN fw_occ_2mo AS fw2 ON a.marsha=fw2.marsha LEFT JOIN wd_occ_3mo AS wd3 ON a.marsha=wd3.marsha LEFT JOIN we_occ_3mo AS we3 ON a.marsha=we3.marsha LEFT JOIN fw_occ_3mo AS fw3 ON a.marsha=fw3.marsha LEFT JOIN wd_occ_1mo_ly AS wd1_ly ON a.marsha=wd1_ly.marsha LEFT JOIN we_occ_1mo_ly AS we1_ly ON a.marsha=we1_ly.marsha LEFT JOIN fw_occ_1mo_ly AS fw1_ly ON a.marsha=fw1_ly.marsha LEFT JOIN wd_occ_2mo_ly AS wd2_ly ON a.marsha=wd2_ly.marsha LEFT JOIN we_occ_2mo_ly AS we2_ly ON a.marsha=we2_ly.marsha LEFT JOIN fw_occ_2mo_ly AS fw2_ly ON a.marsha=fw2_ly.marsha LEFT JOIN wd_occ_3mo_ly AS wd3_ly ON a.marsha=wd3_ly.marsha LEFT JOIN we_occ_3mo_ly AS we3_ly ON a.marsha=we3_ly.marsha LEFT JOIN fw_occ_3mo_ly AS fw3_ly ON a.marsha=fw3_ly.marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo.sas
 CREATE TABLE mams.PLU&plutimef AS  (  SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER_HIST Where asof_yrmo=&plutimef  )  ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo_new.sas
" CREATE TABLE data1_wd AS select b.MARSHA, b.brnd, month, year , SUM( ( AU_GR_DEF_RV + AU_GR_Ten_RV + AU_GR_Tobe_RV)) AS WD_GR_RV , SUM( AU_TR_RV) AS WD_TR_RV, SUM( AU_CT_RV) AS WD_CT_RV , SUM( ( AU_GR_DEF_RN + AU_GR_Ten_RN + AU_GR_Tobe_RN)) AS WD_GR_RN , SUM( AU_TR_RN) AS WD_TR_RN, SUM( AU_CT_RN) AS WD_CT_RN , SUM( capacity) AS WD_cap FROM Proj.Extractsum_mo AS a INNER JOIN mams.PLU&plutimef AS b ON a.prop_code=b.marsha WHERE ( 100*year)+month IN ( &TY_1MO , &TY_2MO , &TY_3MO , &LY_1MO , &LY_2MO , &LY_3MO) AND b.mf='M' AND b.region IN ( 'E_' 'S_' 'W_' 'C_') AND country IN ( 'United States' 'Canada') AND WDWE ='WD' GROUP BY b.marsha, b.brnd, month, year;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo_new.sas
" CREATE TABLE data1_we AS select b.MARSHA, b.brnd, month, year , SUM( ( AU_GR_DEF_RV + AU_GR_Ten_RV + AU_GR_Tobe_RV)) AS WE_GR_RV , SUM( AU_TR_RV) AS WE_TR_RV, SUM( AU_CT_RV) AS WE_CT_RV , SUM( ( AU_GR_DEF_RN + AU_GR_Ten_RN + AU_GR_Tobe_RN)) AS WE_GR_RN , SUM( AU_TR_RN) AS WE_TR_RN, SUM( AU_CT_RN) AS WE_CT_RN , SUM( capacity) AS WE_cap FROM Proj.Extractsum_mo AS a INNER JOIN mams.PLU&plutimef AS b ON a.prop_code=b.marsha WHERE ( 100*year)+month IN ( &TY_1MO , &TY_2MO , &TY_3MO , &LY_1MO , &LY_2MO , &LY_3MO) AND b.mf='M' AND b.region IN ( 'E_' 'S_' 'W_' 'C_') AND country IN ( 'United States' 'Canada') AND WDWE ='WE' GROUP BY b.marsha, b.brnd, month, year;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo_new.sas
" CREATE TABLE data1_fw AS select b.MARSHA, b.brnd, month, year , SUM( ( AU_GR_DEF_RV + AU_GR_Ten_RV + AU_GR_Tobe_RV)) AS FW_GR_RV , SUM( AU_TR_RV) AS FW_TR_RV, SUM( AU_CT_RV) AS FW_CT_RV , SUM( ( AU_GR_DEF_RN + AU_GR_Ten_RN + AU_GR_Tobe_RN)) AS FW_GR_RN , SUM( AU_TR_RN) AS FW_TR_RN, SUM( AU_CT_RN) AS FW_CT_RN , SUM( capacity) AS FW_cap FROM Proj.Extractsum_mo AS a INNER JOIN mams.PLU&plutimef AS b ON a.prop_code=b.marsha WHERE ( 100*year)+month IN ( &TY_1MO , &TY_2MO , &TY_3MO , &LY_1MO , &LY_2MO , &LY_3MO) AND b.mf='M' AND b.region IN ( 'E_' 'S_' 'W_' 'C_') AND country IN ( 'United States' 'Canada') GROUP BY b.marsha, b.brnd, month, year;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo_new.sas
" CREATE TABLE fw_1mo AS select marsha, SUM( fw_gr_rn) AS fw_gr_rn_1MO FROM data1_fw WHERE ( 100*year)+month = &TY_1MO GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo_new.sas
" CREATE TABLE fw_1mo_ly AS select marsha, SUM( fw_gr_rn) AS fw_gr_rn_LY_1MO FROM data1_fw WHERE ( 100*year)+month = &LY_1MO GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo_new.sas
" CREATE TABLE fw_2mo AS select marsha, SUM( fw_gr_rn) AS fw_gr_rn_2MO FROM data1_fw WHERE ( 100*year)+month = &TY_2MO GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo_new.sas
" CREATE TABLE fw_2mo_ly AS select marsha, SUM( fw_gr_rn) AS fw_gr_rn_LY_2MO FROM data1_fw WHERE ( 100*year)+month = &LY_2MO GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo_new.sas
" CREATE TABLE fw_3mo AS select marsha, SUM( fw_gr_rn) AS fw_gr_rn_3MO FROM data1_fw WHERE ( 100*year)+month = &TY_3MO GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo_new.sas
" CREATE TABLE fw_3mo_ly AS select marsha, SUM( fw_gr_rn) AS fw_gr_rn_LY_3MO FROM data1_fw WHERE ( 100*year)+month = &LY_3MO GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo_new.sas
" CREATE TABLE wd_occ_1mo AS select marsha, SUM( ( WD_TR_RN+WD_GR_RN+WD_CT_RN)) AS wd_rn_1MO, SUM( wd_cap) AS wd_cap_1MO FROM data1_wd WHERE ( 100*year)+month = &TY_1MO GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo_new.sas
" CREATE TABLE we_occ_1mo AS select marsha, SUM( ( WE_TR_RN+WE_GR_RN+WE_CT_RN)) AS we_rn_1MO, SUM( we_cap) AS we_cap_1MO FROM data1_we WHERE ( 100*year)+month = &TY_1MO GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo_new.sas
" CREATE TABLE fw_occ_1mo AS select marsha, SUM( ( FW_TR_RN+FW_GR_RN+FW_CT_RN)) AS fw_rn_1MO, SUM( fw_cap) AS fw_cap_1MO FROM data1_fw WHERE ( 100*year)+month = &TY_1MO GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo_new.sas
" CREATE TABLE wd_occ_2mo AS select marsha, SUM( ( WD_TR_RN+WD_GR_RN+WD_CT_RN)) AS wd_rn_2MO, SUM( wd_cap) AS wd_cap_2MO FROM data1_wd WHERE ( 100*year)+month = &TY_2MO GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo_new.sas
" CREATE TABLE we_occ_2mo AS select marsha, SUM( ( WE_TR_RN+WE_GR_RN+WE_CT_RN)) AS we_rn_2MO, SUM( we_cap) AS we_cap_2MO FROM data1_we WHERE ( 100*year)+month = &TY_2MO GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo_new.sas
" CREATE TABLE fw_occ_2mo AS select marsha, SUM( ( FW_TR_RN+FW_GR_RN+FW_CT_RN)) AS fw_rn_2MO, SUM( fw_cap) AS fw_cap_2MO FROM data1_fw WHERE ( 100*year)+month = &TY_2MO GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo_new.sas
" CREATE TABLE wd_occ_3mo AS select marsha, SUM( ( WD_TR_RN+WD_GR_RN+WD_CT_RN)) AS wd_rn_3MO, SUM( wd_cap) AS wd_cap_3MO FROM data1_wd WHERE ( 100*year)+month = &TY_3MO GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo_new.sas
" CREATE TABLE we_occ_3mo AS select marsha, SUM( ( WE_TR_RN+WE_GR_RN+WE_CT_RN)) AS we_rn_3MO, SUM( we_cap) AS we_cap_3MO FROM data1_we WHERE ( 100*year)+month = &TY_3MO GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo_new.sas
" CREATE TABLE fw_occ_3mo AS select marsha, SUM( ( FW_TR_RN+FW_GR_RN+FW_CT_RN)) AS fw_rn_3MO, SUM( fw_cap) AS fw_cap_3MO FROM data1_fw WHERE ( 100*year)+month = &TY_3MO GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo_new.sas
" CREATE TABLE wd_occ_1mo_ly AS select marsha, SUM( ( WD_TR_RN+WD_GR_RN+WD_CT_RN)) AS wd_rn_1MO_ly, SUM( wd_cap) AS wd_cap_1MO_ly FROM data1_wd WHERE ( 100*year)+month = &LY_1MO GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo_new.sas
" CREATE TABLE we_occ_1mo_ly AS select marsha, SUM( ( WE_TR_RN+WE_GR_RN+WE_CT_RN)) AS we_rn_1MO_ly, SUM( we_cap) AS we_cap_1MO_ly FROM data1_we WHERE ( 100*year)+month = &LY_1MO GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo_new.sas
" CREATE TABLE fw_occ_1mo_ly AS select marsha, SUM( ( FW_TR_RN+FW_GR_RN+FW_CT_RN)) AS fw_rn_1MO_ly, SUM( fw_cap) AS fw_cap_1MO_ly FROM data1_fw WHERE ( 100*year)+month = &LY_1MO GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo_new.sas
" CREATE TABLE wd_occ_2mo_ly AS select marsha, SUM( ( WD_TR_RN+WD_GR_RN+WD_CT_RN)) AS wd_rn_2MO_ly, SUM( wd_cap) AS wd_cap_2MO_ly FROM data1_wd WHERE ( 100*year)+month = &LY_2MO GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo_new.sas
" CREATE TABLE we_occ_2mo_ly AS select marsha, SUM( ( WE_TR_RN+WE_GR_RN+WE_CT_RN)) AS we_rn_2MO_ly, SUM( we_cap) AS we_cap_2MO_ly FROM data1_we WHERE ( 100*year)+month = &LY_2MO GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo_new.sas
" CREATE TABLE fw_occ_2mo_ly AS select marsha, SUM( ( FW_TR_RN+FW_GR_RN+FW_CT_RN)) AS fw_rn_2MO_ly, SUM( fw_cap) AS fw_cap_2MO_ly FROM data1_fw WHERE ( 100*year)+month = &LY_2MO GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo_new.sas
" CREATE TABLE wd_occ_3mo_ly AS select marsha, SUM( ( WD_TR_RN+WD_GR_RN+WD_CT_RN)) AS wd_rn_3MO_ly, SUM( wd_cap) AS wd_cap_3MO_ly FROM data1_wd WHERE ( 100*year)+month = &LY_3MO GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo_new.sas
" CREATE TABLE we_occ_3mo_ly AS select marsha, SUM( ( WE_TR_RN+WE_GR_RN+WE_CT_RN)) AS we_rn_3MO_ly, SUM( we_cap) AS we_cap_3MO_ly FROM data1_we WHERE ( 100*year)+month = &LY_3MO GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo_new.sas
" CREATE TABLE fw_occ_3mo_ly AS select marsha, SUM( ( FW_TR_RN+FW_GR_RN+FW_CT_RN)) AS fw_rn_3MO_ly, SUM( fw_cap) AS fw_cap_3MO_ly FROM data1_fw WHERE ( 100*year)+month = &LY_3MO GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo_new.sas
 CREATE TABLE hotels AS select distinct marsha FROM data1_fw;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo_new.sas
" CREATE TABLE mams.allrpdata AS select a.*, b.*, c.*, b2.*, c2.*, d.*, e.*, wd1.*, we1.*, fw1.*, wd2.*, we2.*, fw2.*, wd3.*, we3.*, fw3.* , wd1_ly.*, we1_ly.*, fw1_ly.*, wd2_ly.*, we2_ly.*, fw2_ly.*, wd3_ly.*, we3_ly.*, fw3_ly.* FROM hotels AS a LEFT JOIN fw_1mo AS b ON a.marsha=b.marsha LEFT JOIN fw_1mo_ly AS c ON a.marsha=c.marsha LEFT JOIN fw_2mo AS b2 ON a.marsha=b2.marsha LEFT JOIN fw_2mo_ly AS c2 ON a.marsha=c2.marsha LEFT JOIN fw_3mo AS d ON a.marsha=d.marsha LEFT JOIN fw_3mo_ly AS e ON a.marsha=e.marsha LEFT JOIN wd_occ_1mo AS wd1 ON a.marsha=wd1.marsha LEFT JOIN we_occ_1mo AS we1 ON a.marsha=we1.marsha LEFT JOIN fw_occ_1mo AS fw1 ON a.marsha=fw1.marsha LEFT JOIN wd_occ_2mo AS wd2 ON a.marsha=wd2.marsha LEFT JOIN we_occ_2mo AS we2 ON a.marsha=we2.marsha LEFT JOIN fw_occ_2mo AS fw2 ON a.marsha=fw2.marsha LEFT JOIN wd_occ_3mo AS wd3 ON a.marsha=wd3.marsha LEFT JOIN we_occ_3mo AS we3 ON a.marsha=we3.marsha LEFT JOIN fw_occ_3mo AS fw3 ON a.marsha=fw3.marsha LEFT JOIN wd_occ_1mo_ly AS wd1_ly ON a.marsha=wd1_ly.marsha LEFT JOIN we_occ_1mo_ly AS we1_ly ON a.marsha=we1_ly.marsha LEFT JOIN fw_occ_1mo_ly AS fw1_ly ON a.marsha=fw1_ly.marsha LEFT JOIN wd_occ_2mo_ly AS wd2_ly ON a.marsha=wd2_ly.marsha LEFT JOIN we_occ_2mo_ly AS we2_ly ON a.marsha=we2_ly.marsha LEFT JOIN fw_occ_2mo_ly AS fw2_ly ON a.marsha=fw2_ly.marsha LEFT JOIN wd_occ_3mo_ly AS wd3_ly ON a.marsha=wd3_ly.marsha LEFT JOIN we_occ_3mo_ly AS we3_ly ON a.marsha=we3_ly.marsha LEFT JOIN fw_occ_3mo_ly AS fw3_ly ON a.marsha=fw3_ly.marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_RevPlanningData_mo_new.sas
 CREATE TABLE prop_master AS  (  SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER A  ) ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Rewards_Percentages-AW.sas
" CREATE TABLE RWDDATA AS  (  SELECT property_cd AS Marsha_Code, CURR_MARKET_PREFIX_CD AS Market_Code_Prefix , STAY_RWDS_MEMBER_LEVEL_TXT AS Freq_Program_Level , SUM( CURR_ROOMS_QTY) AS rn, COUNT( property_cd) AS ty_stays , SUM( CURR_ROOM_REV_Local_SUB_AMT) AS rv_Local FROM AW_TGT_BUS_DBO.MRDW_BI_FACT_STAYED_PAID_NOS WHERE stay_year >= 2018 AND NOS_STATUS_CD='A' AND stay_dt >= '2019-09-01' AND stay_dt <= '2019-11-30' GROUP BY property_cd, CURR_MARKET_PREFIX_CD, STAY_RWDS_MEMBER_LEVEL_TXT  ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Rewards_Percentages-AW.sas
" CREATE TABLE tothotel AS select marsha_code AS marsha, SUM( rn) AS rn_tot FROM rwddata GROUP BY marsha_code;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Rewards_Percentages-AW.sas
" CREATE TABLE totrwd AS select marsha_code AS marsha, SUM( rn) AS rn_rwd FROM rwddata WHERE Freq_Program_Level<>'Non-member' GROUP BY marsha_code;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Rewards_Percentages-AW.sas
" CREATE TABLE totplat AS select marsha_code AS marsha, SUM( rn) AS rn_plat FROM rwddata WHERE Freq_Program_Level = 'Platinum' GROUP BY marsha_code;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Rewards_Percentages-AW.sas
" CREATE TABLE totsc AS select marsha_code AS marsha, SUM( rn) AS rn_sc FROM rwddata WHERE Market_Code_Prefix='17' GROUP BY marsha_code;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Rewards_Percentages-AW.sas
" CREATE TABLE scrwd AS select marsha_code AS marsha, SUM( rn) AS rn_sc_rwd FROM rwddata WHERE Market_Code_Prefix IN ( '17', '18') AND Freq_Program_Level<>'Non-member' GROUP BY marsha_code;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Rewards_Percentages-AW.sas
" CREATE TABLE hot_tots AS select a.*, b.*, c.*, d.*, e.*, f.brnd FROM tothotel AS a LEFT JOIN totrwd AS b ON a.marsha=b.marsha LEFT JOIN totplat AS c ON a.marsha=c.marsha LEFT JOIN totsc AS d ON a.marsha=d.marsha LEFT JOIN scrwd AS e ON a.marsha=e.marsha INNER JOIN prop_master AS f ON a.marsha=f.marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Rewards_Percentages-AW.sas
" CREATE TABLE brndtots AS select brnd, SUM( rn_tot) AS brnd_rn_tot, SUM( rn_rwd) AS brnd_rn_rwd , SUM( rn_plat) AS brnd_rn_plat, SUM( rn_sc) AS brnd_rn_sc , SUM( rn_sc_rwd) AS brnd_rn_sc_rwd FROM hot_tots GROUP BY brnd CREATE TABLE mams.all_rwd_mamm_&yrmo. AS select a.*, b.* FROM hot_tots AS a LEFT JOIN brndtots AS b ON a.brnd=b.brnd;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Rewards_Percentages-AW.sas
 CREATE TABLE esf.all_rwd_mamm_&yrmo. AS ( SELECT  *  FROM mams.all_rwd_mamm_&yrmo. );,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Rewards_Percentages-AW.sas
 CREATE TABLE SFB.prop_master_ye2018 AS  (  SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER_HIST WHERE ASOF_YRMO=201812  ) ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
" CREATE TABLE SFB.prop_master_201812_CYNACmp AS ( SELECT MARSHA, MF, ACOMP, HCAP, REGION_NAME, STR_MARKET, HTYPE, GEN, HOTNAME, MARKET_NAME, MISW_FLAG, region2, CASE WHEN  region IN ( 'E_', 'W_', 'C_')  THEN 'US/Canada' WHEN   region='S_'  THEN region_name ELSE division_name END AS region2 FROM SFB.prop_master_ye2018  WHERE brnd='CY' AND ACOMP='Y' AND region2='US/Canada');",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
" CREATE TABLE SFB.SFBstpd_res_all AS  (  SELECT PROPERTY_CD AS MARSHA, CURR_MARKET_PREFIX_CD, CURR_MARKET_PREFIX_NM, CURR_RATE_PGM_CD, CURR_RATE_PGM_TXT , CASE WHEN stay_dow IN ( 'FRI','SAT') THEN 'WE' ELSE 'WD' END AS WDWE ,COUNT( *) AS cnt, SUM( CURR_ROOMS_QTY) AS rn, SUM( CURR_ROOM_REV_CUSD_SUB_AMT) AS rv_cusd FROM AW_TGT_BUS_DBO.MRDW_BI_FACT_STAYED_PAID_NOS A WHERE stay_year = 2018 AND CURR_MARKET_PREFIX_CD in( '21','23','24','26','30','34') GROUP BY PROPERTY_CD, CURR_MARKET_PREFIX_CD, CURR_MARKET_PREFIX_NM, CURR_RATE_PGM_CD, CURR_RATE_PGM_TXT , CASE WHEN stay_dow IN ( 'FRI','SAT') THEN 'WE' ELSE 'WD' end   ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
" CREATE TABLE SFB.SFBstpd_resly_all AS  (  SELECT PROPERTY_CD AS MARSHA, CURR_MARKET_PREFIX_CD, CURR_MARKET_PREFIX_NM, CURR_RATE_PGM_CD, CURR_RATE_PGM_TXT , CASE WHEN stay_dow IN ( 'FRI','SAT') THEN 'WE' ELSE 'WD' END AS WDWE ,COUNT( *) AS cntly,SUM( CURR_ROOMS_QTY) AS rnly, SUM( CURR_ROOM_REV_CUSD_SUB_AMT) AS rv_cusdly FROM AW_TGT_BUS_DBO.MRDW_BI_FACT_STAYED_PAID_NOS A WHERE stay_year IN ( 2017,2018) AND stay_dt >= '2017-01-02' AND stay_dt <= '2018-01-01' AND CURR_MARKET_PREFIX_CD in( '21','23','24','26','30','34') GROUP BY PROPERTY_CD, CURR_MARKET_PREFIX_CD, CURR_MARKET_PREFIX_NM, CURR_RATE_PGM_CD, CURR_RATE_PGM_TXT , CASE WHEN stay_dow IN ( 'FRI','SAT') THEN 'WE' ELSE 'WD' end   ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
"SELECT * FROM SFB.SFBstpd_res_all ORDER BY MARSHA ,CURR_MARKET_PREFIX_CD ,CURR_MARKET_PREFIX_NM ,CURR_RATE_PGM_CD ,CURR_RATE_PGM_TXT ,WDWE;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
"SELECT * FROM SFB.SFBstpd_resly_all ORDER BY MARSHA ,CURR_MARKET_PREFIX_CD ,CURR_MARKET_PREFIX_NM ,CURR_RATE_PGM_CD ,CURR_RATE_PGM_TXT ,WDWE;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
 CREATE TABLE SFB.SFBstpd_res_comb_all AS ( SELECT  *  FROM SFB.SFBstpd_res_all A JOIN SFB.SFBstpd_resly_all B ON  A.MARSHA =  B.MARSHA AND  A.CURR_MARKET_PREFIX_CD =  B.CURR_MARKET_PREFIX_CD AND  A.CURR_MARKET_PREFIX_NM =  B.CURR_MARKET_PREFIX_NM AND  A.CURR_RATE_PGM_CD =  B.CURR_RATE_PGM_CD AND  A.CURR_RATE_PGM_TXT =  B.CURR_RATE_PGM_TXT AND  A.WDWE =  B.WDWE);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
SELECT * FROM SFB.SFBstpd_res_comb_all ORDER BY MARSHA;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
SELECT * FROM SFB.prop_master_201812_CYNACmp ORDER BY MARSHA;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
 CREATE TABLE SFB.SFBstpd_res_comb_CYNACmp AS ( SELECT  *  FROM SFB.SFBstpd_res_comb_all A INNER JOIN SFB.prop_master_201812_CYNACmp B ON  A.MARSHA =  B.MARSHA);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
" CREATE TABLE SFB.SFBstpd_res_comb_CYNACmp AS ( SELECT  *, CURR_RATE_PGM_CD AS rpgm, CURR_MARKET_PREFIX_CD AS MARKET_CODE AS None FROM SFB.SFBstpd_res_comb_CYNACmp );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
"SELECT * FROM SFB.SFBstpd_res_comb_CYNACmp ORDER BY MARKET_CODE ,rpgm;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
" CREATE TABLE SFB.SFB_reg AS ( SELECT  *  , 'SFB' AS Tab  FROM SFB_reg );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
" CREATE TABLE SFB.SFB_KidsEatFree AS ( SELECT  *  , 'SFB_KidsEatFree' AS Tab  FROM SFB_KidsEatFree );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
" CREATE TABLE SFB.MbrsOthPkginclBKFST AS ( SELECT  *  , 'MbrsOthPkginclBKFST' AS Tab  FROM MbrsOthPkginclBKFST );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
" CREATE TABLE SFB.OTAValueAdd AS ( SELECT  *  , 'OTAValueAdd' AS Tab  FROM OTAValueAdd );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
" CREATE TABLE SFB.MembersSFB AS ( SELECT  *  , 'MembersSFB' AS Tab  FROM MembersSFB );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
" CREATE TABLE SFB.OtherPkgsw_Bkfst AS ( SELECT  *  , 'OtherPkgsw_Bkfst' AS Tab  FROM OtherPkgsw_Bkfst );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
" CREATE TABLE SFB.SFB_HPPFILE AS ( SELECT Tab, MARSHA, MARKET_CODE, rpgm, Experiences, RATE_OFFER, child_pricing_rule, child_pricing_rule_amount, parent1_rate_offer FROM SFB.SFB_reg UNION ALL SELECT Tab, MARSHA, MARKET_CODE, rpgm, Experiences, RATE_OFFER, child_pricing_rule, child_pricing_rule_amount, parent1_rate_offer FROM SFB.SFB_KidsEatFree UNION ALL SELECT Tab, MARSHA, MARKET_CODE, rpgm, Experiences, RATE_OFFER, child_pricing_rule, child_pricing_rule_amount, parent1_rate_offer FROM SFB.MbrsOthPkginclBKFST UNION ALL SELECT Tab, MARSHA, MARKET_CODE, rpgm, Experiences, RATE_OFFER, child_pricing_rule, child_pricing_rule_amount, parent1_rate_offer FROM SFB.OTAValueAdd UNION ALL SELECT Tab, MARSHA, MARKET_CODE, rpgm, Experiences, RATE_OFFER, child_pricing_rule, child_pricing_rule_amount, parent1_rate_offer FROM SFB.MembersSFB UNION ALL SELECT Tab, MARSHA, MARKET_CODE, rpgm, Experiences, RATE_OFFER, child_pricing_rule, child_pricing_rule_amount, parent1_rate_offer FROM SFB.OtherPkgsw_Bkfst);",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
"CREATE TABLE ""\\Hdqmdm1fpcl4v1\lodg-revmgmt\RM EAnlys\MikeS\SFB_HPPFILE.TXT"" AS ( SELECT * FROM SFB.SFB_HPPFILE) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
"SELECT MARSHA, MARKET_CODE, rpgm, Experiences, RATE_OFFER, child_pricing_rule, child_pricing_rule_amount, parent1_rate_offer, Tab FROM SFB.SFB_HPPFILE ORDER BY MARSHA ,MARKET_CODE ,rpgm;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
"CREATE TABLE SFB.SFB_HPPFILE AS ( SELECT  *  , LTRIM( RTRIM( MARKET_CODE) ) AS MARKET_CODE1  FROM SFB.SFB_HPPFILE );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
ALTER TABLE SFB.SFB_HPPFILE DROP COLUMN MARKET_CODE ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
" CREATE TABLE SFB.SFB_HPPFILE AS ( SELECT  *, MARKET_CODE1 AS MARKET_CODE FROM SFB.SFB_HPPFILE );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
"SELECT * FROM SFB.SFB_HPPFILE ORDER BY MARSHA ,MARKET_CODE ,rpgm;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
"SELECT * FROM SFB.SFBstpd_res_comb_CYNACmp ORDER BY MARSHA ,MARKET_CODE ,rpgm;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
 CREATE TABLE SFB.MFECY_res_comb AS ( SELECT  *  FROM SFB.SFBstpd_res_comb_CYNACmp  WHERE marsha='MFECY');,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
 CREATE TABLE SFB.MFECY_SFB_HPPFILE AS ( SELECT  *  FROM SFB.SFB_HPPFILE  WHERE marsha='MFECY');,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
"SELECT DISTINCT * FROM SFB.SFB_reg_stpd_res ORDER BY MARSHA ,CURR_MARKET_PREFIX_NM ,rpgm ,CURR_RATE_PGM_TXT ,WDWE ,CNT ,RN ,RV_CUSD ,CNTLY ,RNLY ,RV_CUSDLY ,RATE_OFFER;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
"CREATE TABLE SFB.retadv AS ( SELECT  *  FROM SFB.SFBregstpdres_WE  WHERE child_pricing_rule<>'Fixed' AND parent1_rate_offer in( 'Retail Rate','Advance Purchase'));",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
"CREATE TABLE SFB.notret AS ( SELECT  *  FROM SFB.SFBregstpdres_WE  WHERE child_pricing_rule<>'Fixed' AND parent1_rate_offer not in( 'Retail Rate','Advance Purchase'));",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
" CREATE TABLE SFB.retadv AS ( SELECT  * , CASE WHEN  child_pricing_rule ='Equals'  THEN 0 WHEN  child_pricing_rule ='Amount Above'  THEN ( rn*child_pricing_rule_amount ) WHEN  child_pricing_rule ='Percent Above'  THEN ( rn*( ( RV_CUSD/RN)*child_pricing_rule_amount*0.01) ) WHEN  child_pricing_rule ='Amount Below'  THEN ( -1*rn*child_pricing_rule_amount ) WHEN  child_pricing_rule ='Percent Below'  THEN ( -1*rn*( ( RV_CUSD/RN)*child_pricing_rule_amount*0.01) ) END AS premium FROM SFB.retadv );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
"SELECT * FROM SFB.retadv ORDER BY Marsha ,RATE_OFFER ,parent1_rate_offer;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
"CREATE TABLE SFB.retadv_sum AS (SELECT MARSHA, RATE_OFFER, SUM(RN) AS RN, SUM(RV_CUSD) AS RV_CUSD, SUM(premium) AS premium FROM SFB.retadv GROUP BY MARSHA, RATE_OFFER );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
" CREATE TABLE SFB.retadv_sum AS ( SELECT  *  , FORMAT(( premium/RN ), percent11.1) AS premave , FORMAT(( RV_CUSD/RN ), percent11.1) AS adr , FORMAT(( RV_CUSD/RN )noprem, percent11.1) AS ( ( RV_CUSD-premium)/RN ) , FORMAT(dollar11.2, percent11.1) AS dollar11.2 , FORMAT(( premave/adrnoprem ), percent11.1) AS prempct , adrnoprem*rn AS retail  FROM SFB.retadv_sum );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
" CREATE TABLE SFB.retadv_sum_retmg AS ( SELECT marsha, adrnoprem, RATE_OFFER AS parent1_rate_offer, adr AS rtoff_adr FROM SFB.retadv_sum );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
" CREATE TABLE SFB.retadv_sum_retmg_sfbsub AS ( SELECT marsha, adrnoprem, if, parent1_rate_offer=Stay, For, Breakfast\, RATE_OFFER AS parent1_rate_offer, adr AS rtoff_adr_sfbsub, premave AS parROave_sub FROM SFB.retadv_sum  WHERE parent1_rate_offer='Stay For Breakfast');",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
"SELECT * FROM SFB.retadv_sum_retmg_sfbsub ORDER BY marsha ,parent1_rate_offer;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
" CREATE TABLE SFB.notret2 AS select a.*, b.premave AS parROave FROM SFB.notret AS a LEFT JOIN SFB.retadv_sum AS b ON a.marsha=b.marsha AND a.parent1_rate_offer=b.RATE_OFFER;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
"SELECT * FROM SFB.notret2 ORDER BY MARSHA ,parent1_rate_offer;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
"SELECT * FROM SFB.retadv_sum_retmg ORDER BY MARSHA ,parent1_rate_offer;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
 CREATE TABLE SFB.notret2a AS ( SELECT  *  FROM SFB.notret2 A LEFT JOIN SFB.retadv_sum_retmg B ON  A.MARSHA =  B.MARSHA AND  A.parent1_rate_offer =  B.parent1_rate_offer);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
" CREATE TABLE SFB.notret2b AS ( SELECT  *  , RV_CUSD/rn AS adr1 , adr1-parROave AS retrate , CASE WHEN  parROave in( 0,' ' )  THEN parROave_sub END AS parROave, CASE WHEN  rtoff_adr in( 0,' ' )  THEN rtoff_adr_sfbsub END AS rtoff_adr, CASE WHEN  adrnoprem in( 0,' ' )  THEN rtoff_adr_sfbsub-parROave_sub END AS adrnoprem FROM SFB.notret2a A LEFT JOIN SFB.retadv_sum_retmg_sfbsub B ON  A.MARSHA =  B.MARSHA);",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
" CREATE TABLE SFB.notret2c AS ( SELECT  *  , rn*premium_pn AS premium , rn*retrate AS retail , premium/retail AS prempct , CASE WHEN  child_pricing_rule ='Equals'  THEN parROave WHEN  child_pricing_rule ='Amount Above'  THEN ( child_pricing_rule_amount ) WHEN  child_pricing_rule ='Amount Below'  THEN ( -1*child_pricing_rule_amount ) WHEN  child_pricing_rule ='Percent Above'  THEN ( adr1*( child_pricing_rule_amount*.01) ) WHEN  child_pricing_rule ='Percent Below'  THEN ( adr1*( child_pricing_rule_amount*.01) ) END AS premium_pn FROM SFB.notret2b );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
"SELECT * FROM SFB.notret2c ORDER BY Marsha ,RATE_OFFER ,parent1_rate_offer;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
"CREATE TABLE SFB.notret2c_sum AS (SELECT MARSHA, RATE_OFFER, SUM(RN) AS RN, SUM(RV_CUSD) AS RV_CUSD, SUM(premium) AS premium, SUM(retail) AS retail FROM SFB.notret2c GROUP BY MARSHA, RATE_OFFER );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
" CREATE TABLE SFB.notret2c_sum AS ( SELECT  *  , FORMAT(( premium/RN ), percent11.1) AS premave , FORMAT(( RV_CUSD/RN ), percent11.1) AS adr , FORMAT(( RV_CUSD/RN )noprem, percent11.1) AS ( ( RV_CUSD-premium)/RN ) , FORMAT(dollar11.2, percent11.1) AS dollar11.2 , FORMAT(( premave/adrnoprem ), percent11.1) AS premium/retail , adrnoprem*rn AS retail  FROM SFB.notret2c_sum );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
" CREATE TABLE SFB.Marsha_RateOffers_fin1 AS ( SELECT  *  , premium/retail AS prempct  FROM SFB.retadv_sum UNION ALL SELECT  *  , premium/retail AS prempct  FROM SFB.notret2c_sum);",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
"SELECT * FROM SFB.Marsha_RateOffers_fin1 ORDER BY Marsha ,RATE_OFFER;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
"CREATE TABLE SFB.Marsha_RateOffers_fin1_sum AS (SELECT MARSHA, RATE_OFFER, SUM(RN) AS RN, SUM(RV_CUSD) AS RV_CUSD, SUM(premium) AS premium FROM SFB.Marsha_RateOffers_fin1 GROUP BY MARSHA, RATE_OFFER );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
" CREATE TABLE SFB.Marsha_RateOffers_fin1_sum AS ( SELECT  *  , FORMAT(( premium/RN ), percent11.1) AS premave , FORMAT(( RV_CUSD/RN ), percent11.1) AS adr , FORMAT(( RV_CUSD/RN )noprem, percent11.1) AS ( ( RV_CUSD-premium)/RN ) , FORMAT(dollar11.2, percent11.1) AS dollar11.2 , FORMAT(( premave/adrnoprem ), percent11.1) AS prempct  FROM SFB.Marsha_RateOffers_fin1_sum );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
"CREATE TABLE SFB.Marsha_RateOffers_fin1_psum AS (SELECT MARSHA, _freq_ AS ratecnt, SUM(RN) AS RN, SUM(RV_CUSD) AS RV_CUSD, SUM(premium) AS premium FROM SFB.Marsha_RateOffers_fin1 GROUP BY MARSHA );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
" CREATE TABLE SFB.Marsha_RateOffers_fin1_psum AS ( SELECT  *  , FORMAT(( premium/RN ), percent11.1) AS premave , FORMAT(( RV_CUSD/RN ), percent11.1) AS adr , FORMAT(( RV_CUSD/RN )noprem, percent11.1) AS ( ( RV_CUSD-premium)/RN ) , FORMAT(dollar11.2, percent11.1) AS dollar11.2 , FORMAT(( premave/adrnoprem ), percent11.1) AS prempct , ""Z Marsha Total"" AS RATE_OFFER , CASE WHEN  prempct <' '05  THEN '1 - Less Than 5%' WHEN   ' '05 <= prempct <' '10  THEN '2 - 5% to 10%' WHEN   ' '10 <= prempct  THEN '3 - Greater Than 10%' END AS prem_to_Ret_Cat FROM SFB.Marsha_RateOffers_fin1_psum );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
SELECT * FROM SFB.Marsha_RateOffers_fin1_psum ORDER BY prem_to_Ret_Cat;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
"CREATE TABLE SFB.RteOfr_fin1prp_premcat AS (SELECT prem_to_Ret_Cat, SUM(RN) AS RN, SUM(RV_CUSD) AS RV_CUSD, SUM(premium) AS premium FROM SFB.Marsha_RateOffers_fin1_psum GROUP BY prem_to_Ret_Cat );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
" CREATE TABLE SFB.RteOfr_fin1prp_premcat AS ( SELECT  *  , FORMAT(( premium/RN ), percent11.1) AS premave , FORMAT(( RV_CUSD/RN ), percent11.1) AS adr , FORMAT(( RV_CUSD/RN )noprem, percent11.1) AS ( ( RV_CUSD-premium)/RN ) , FORMAT(dollar11.2, percent11.1) AS dollar11.2 , FORMAT(( premave/adrnoprem ), percent11.1) AS prempct  FROM SFB.RteOfr_fin1prp_premcat );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
SELECT * FROM SFB.Marsha_RateOffers_fin1_psum ORDER BY ratecnt;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
"CREATE TABLE SFB.RteOfr_fin1prp_ratecnt AS (SELECT ratecnt, _freq_ AS propcnt, SUM(RN) AS RN, SUM(RV_CUSD) AS RV_CUSD, SUM(premium) AS premium FROM SFB.Marsha_RateOffers_fin1_psum GROUP BY ratecnt );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
" CREATE TABLE SFB.RteOfr_fin1prp_ratecnt AS ( SELECT  *  , FORMAT(( premium/RN ), percent11.1) AS premave , FORMAT(( RV_CUSD/RN ), percent11.1) AS adr , FORMAT(( RV_CUSD/RN )noprem, percent11.1) AS ( ( RV_CUSD-premium)/RN ) , FORMAT(dollar11.2, percent11.1) AS dollar11.2 , FORMAT(( premave/adrnoprem ), percent11.1) AS prempct  FROM SFB.RteOfr_fin1prp_ratecnt );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
SELECT * FROM SFB.Marsha_RateOffers_fin1_psum ORDER BY ratecnt;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
"CREATE TABLE SFB.RteOfr_fin1prp_ratecntall AS (SELECT _freq_ AS propcnt, SUM(RN) AS RN, SUM(RV_CUSD) AS RV_CUSD, SUM(premium) AS premium FROM SFB.Marsha_RateOffers_fin1_psum WHERE ratecnt > 1 );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
" CREATE TABLE SFB.RteOfr_fin1prp_ratecntall AS ( SELECT  *  , FORMAT(( premium/RN ), percent11.1) AS premave , FORMAT(( RV_CUSD/RN ), percent11.1) AS adr , FORMAT(( RV_CUSD/RN )noprem, percent11.1) AS ( ( RV_CUSD-premium)/RN ) , FORMAT(dollar11.2, percent11.1) AS dollar11.2 , FORMAT(( premave/adrnoprem ), percent11.1) AS prempct  FROM SFB.RteOfr_fin1prp_ratecntall );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
 CREATE TABLE SFB.Marsha_RateOffers_fin2_sum AS ( SELECT  *  FROM SFB.Marsha_RateOffers_fin1_psum UNION ALL SELECT  *  FROM SFB.Marsha_RateOffers_fin1_sum);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
"SELECT * FROM SFB.Marsha_RateOffers_fin2_sum ORDER BY Marsha ,RATE_OFFER;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
" CREATE TABLE SFB.ZZTMP1 AS ( SELECT  *  FROM SFB.Marsha_RateOffers_fin2_sum  WHERE marsha IN ( 'ABQCY','BWGCY','ABECY','YEGEW' ));",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
"CREATE TABLE ""\\Hdqmdm1fpcl4v1\lodg-revmgmt\RM EAnlys\MikeS\SFB\SFBV3\SFB_Marsha_RateOffers_fin2_sum.TXT"" AS ( SELECT * FROM SFB.Marsha_RateOffers_fin2_sum) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
"CREATE TABLE ""\\Hdqmdm1fpcl4v1\lodg-revmgmt\RM EAnlys\MikeS\SFB\SFBV3\SFBregstpdres_WE.TXT"" AS ( SELECT * FROM SFB.SFBregstpdres_WE) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
 CREATE TABLE SFB.aa_YEGEW_res AS ( SELECT  *  FROM SFB.SFB_reg_stpd_res  WHERE marsha='YEGEW' AND WDWE='WE');,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
"SELECT * FROM SFB.SFB_reg_stpd_res ORDER BY MARSHA ,WDWE;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
"CREATE TABLE SFB.SFB_reg_stpd_res_sum AS (SELECT MARSHA, WDWE, SUM(RN) AS RN, SUM(RV_CUSD) AS RV_CUSD, SUM(CNTLY) AS CNTLY, SUM(RNLY) AS RNLY, SUM(RV_CUSDLY) AS RV_CUSDLY FROM SFB.SFB_reg_stpd_res GROUP BY MARSHA, WDWE );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
 CREATE TABLE SFB.Rep_wdwe&YRMNTH._Data&asof_yrmo AS ( SELECT  *  FROM str.Rep_wdwe&YRMNTH._Data&asof_yrmo  WHERE TIMEF='LAST12_WE');,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
SELECT * FROM SFB.Marsha_RateOffers_fin1_psum ORDER BY MARSHA;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
SELECT * FROM SFB.Rep_wdwe&YRMNTH._Data&asof_yrmo ORDER BY MARSHA;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
" CREATE TABLE SFB.Marsha_RateOffers_fin1_psum_STR AS ( SELECT  *, rn AS sfb_rn, RV_CUSD AS SFB_RV_CUSD AS None, ( sfb_rn/MARSOLD ) AS SFBMIX , ( sfb_rn/MARAVAIL ) AS SFBOCC , CASE WHEN  a AND b  THEN 'both ' WHEN   a AND not b  THEN 'resonly' WHEN   b AND not a  THEN 'stronly' ELSE 'none' END AS flg, CASE WHEN  RPI < 90  THEN '1 - Less Than 90' WHEN   90 <= RPI < 100  THEN '2 - 90 to 100' WHEN   100 <= RPI < 110  THEN '3 - 100 to 110' WHEN   110 <= RPI  THEN '4 Greater than 110' END AS RPI_WE_CAT, CASE WHEN  SFBMIX < ' '01  THEN '1 - Less Than 1%' WHEN   ' '01 <= SFBMIX < ' '02  THEN '2 - 1% to 2%' WHEN   ' '02 <= SFBMIX < ' '03  THEN '3 - 2% to 3%' WHEN   ' '03 <= SFBMIX < ' '04  THEN '4 - 3% to 4%' WHEN   ' '04 <= SFBMIX < ' '05  THEN '5 - 4% to 5%' WHEN   ' '05 <= SFBMIX  THEN '6 - Greater Than 5%' END AS SFB_WE_MIX_CAT FROM SFB.Marsha_RateOffers_fin1_psum A JOIN SFB.Rep_wdwe&YRMNTH._Data&asof_yrmo B ON  A.MARSHA =  B.MARSHA WHERE flg='both');",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
SELECT * FROM SFB.Marsha_RateOffers_fin1_psum_STR ORDER BY SFB_WE_MIX_CAT;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
"CREATE TABLE SFB.SFB_WE_MIX_CAT_RteOfr_psum_STR AS (SELECT SFB_WE_MIX_CAT, _freq_ AS propcnt, SUM(sfb_rn) AS sfb_rn, SUM(SFB_RV_CUSD) AS SFB_RV_CUSD, SUM(premium) AS premium, SUM(RPI) AS RPI, SUM(OI) AS OI, SUM(AI) AS AI FROM SFB.Marsha_RateOffers_fin1_psum_STR GROUP BY SFB_WE_MIX_CAT );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
" CREATE TABLE SFB.SFB_WE_MIX_CAT_RteOfr_psum_STR AS ( SELECT  *  , FORMAT(( premium/sfb_rn ), percent11.1) AS premave , FORMAT(( SFB_RV_CUSD/sfb_rn ), percent11.1) AS adr , FORMAT(( SFB_RV_CUSD/sfb_rn )noprem, percent11.1) AS ( ( SFB_RV_CUSD-premium)/sfb_rn ) , FORMAT(dollar11.2, percent11.1) AS dollar11.2 , FORMAT(( premave/adrnoprem ), percent11.1) AS prempct , ( RPI/propcnt ) AS RPIavg , ( OI/propcnt ) AS OIavg , ( AI/propcnt ) AS AIavg , ( sfb_rn/propcnt ) AS sfb_rn_ave  FROM SFB.SFB_WE_MIX_CAT_RteOfr_psum_STR );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
SELECT * FROM SFB.Marsha_RateOffers_fin1_psum_STR ORDER BY RPI_WE_CAT;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
"CREATE TABLE SFB.RPI_WE_CAT_RteOfr_fin1_psum_STR AS (SELECT RPI_WE_CAT, _freq_ AS propcnt, SUM(sfb_rn) AS sfb_rn, SUM(SFB_RV_CUSD) AS SFB_RV_CUSD, SUM(premium) AS premium FROM SFB.Marsha_RateOffers_fin1_psum_STR GROUP BY RPI_WE_CAT );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
" CREATE TABLE SFB.RPI_WE_CAT_RteOfr_fin1_psum_STR AS ( SELECT  *  , FORMAT(( premium/sfb_rn ), percent11.1) AS premave , FORMAT(( SFB_RV_CUSD/sfb_rn ), percent11.1) AS adr , FORMAT(( SFB_RV_CUSD/sfb_rn )noprem, percent11.1) AS ( ( SFB_RV_CUSD-premium)/sfb_rn ) , FORMAT(dollar11.2, percent11.1) AS dollar11.2 , FORMAT(( premave/adrnoprem ), percent11.1) AS prempct , ( sfb_rn/propcnt ) AS sfb_rn_ave  FROM SFB.RPI_WE_CAT_RteOfr_fin1_psum_STR );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
CREATE TABLE SFB.TOP30 AS (SELECT * FROM SFB.Marsha_RateOffers_fin1_psum_STR ORDER BY SFBMIX desc);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
 CREATE TABLE SFB.TOP30 AS ( SELECT  *  FROM SFB.TOP30  WHERE RPI > 110 AND SFBMIX > ' '0295);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
" CREATE TABLE plu AS ( SELECT marsha, PHONE, GM FROM plu.Allprop_misw_201812 );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
SELECT * FROM plu ORDER BY marsha;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
SELECT * FROM SFB.TOP30 ORDER BY marsha;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
 CREATE TABLE SFB.TOP30 AS ( SELECT  *  FROM SFB.TOP30 A LEFT JOIN plu B ON  A.marsha =  B.marsha);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
SELECT * FROM SFB.SFB_reg_stpd_res_sum_STR_WE ORDER BY SFBMIX desc;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
 CREATE TABLE SFB.aa_YEGEW_SFB_reg_stpd_res_SUMSTR AS ( SELECT  *  FROM SFB.SFB_reg_stpd_res_sum_STR_WE  WHERE marsha='YEGEW');,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
"CREATE TABLE ""\\Hdqmdm1fpcl4v1\lodg-revmgmt\RM EAnlys\MikeS\SFB\SFBV3\SFB_reg_stpd_res_sum_STR_WE.TXT"" AS ( SELECT * FROM SFB.SFB_reg_stpd_res_sum_STR_WE) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
"SELECT * FROM SFB.stpd_res_comb_CYNACmp ORDER BY Marsha ,WDWE;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
"CREATE TABLE SFB.stpd_comb_sum AS (SELECT Marsha, WDWE, SUM(RN) AS RN, SUM(RV_CUSD) AS RV_CUSD, SUM(RNLY) AS RNLY, SUM(RV_CUSDLY) AS RV_CUSDLY FROM SFB.stpd_res_comb_CYNACmp GROUP BY Marsha, WDWE );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
" CREATE TABLE sfb.stpd_comb_sumwd AS ( SELECT  *, TOT_RN AS TOT_WD_RN, TOT_RVCUSD AS TOT_WD_RVCUSD, TOT_RNLY AS TOT_WD_RNLY, TOT_RVCUSDLY AS TOT_WD_RVCUSDLY FROM SFB.stpd_comb_sum  WHERE WDWE='WD');",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
" CREATE TABLE sfb.stpd_comb_sumwe AS ( SELECT  *, TOT_RN AS TOT_WE_RN, TOT_RVCUSD AS TOT_WE_RVCUSD, TOT_RNLY AS TOT_WE_RNLY, TOT_RVCUSDLY AS TOT_WE_RVCUSDLY FROM SFB.stpd_comb_sum  WHERE WDWE='WE');",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
" CREATE TABLE SFB.STR&YRMNTH._Data&asof_yrmo AS  (  select a.MARSHA, b.MARSHA_NEW AS MARSHA, b.BRND, b.MF, a.TIMEF, a.SCOMP , b.HOTEL_NAME, b.REGION, b.DIVISION_NAME, b.REGION_NAME, b.DOMINT, a.YRMNTH, a.asof_yrmo , MARAVAIL, MARSOLD, MARREV, MKTAVAIL, MKTSOLD, MKTREV, MARAVAILLY, MARSOLDLY, MARREVLY, MKTAVAILLY, MKTSOLDLY, MKTREVLY FROM AW_CMP_DBO.STR_MONTHLY_DATA AS a LEFT JOIN AW_TGT_BUS_DBO.PROPERTY_MASTER_MISW_HIST AS b ON a.MARSHA = b.MARSHA_NEW AND a.asof_yrmo = b.asof_yrmo WHERE a.TIMEF =&TIMEF AND a.DATA_CATEGORY = 'Rooms' AND a.CURRENCY_TYPE = 'Constant USD' AND a.YRMNTH = &YRMNTH AND a.asof_yrmo = &asof_yrmo  ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
SELECT * FROM SFB.STR&YRMNTH._Data&asof_yrmo ORDER BY MARSHA;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
SELECT * FROM SFB.prop_master_201812_CYNACmp ORDER BY MARSHA;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
"CREATE TABLE SFB.STR_CYNACmp AS ( SELECT  *  , ( MARSOLD/MARAVAIL ) AS OCC , ( MARREV/MARSOLD ) AS ADR , ( MARREV/MARAVAIL ) AS REVPAR , ( MKTSOLD/MKTAVAIL ) AS MOCC , ( MKTREV/MKTSOLD ) AS MADR , ( MKTREV/MKTAVAIL ) AS MREVPAR , ( REVPAR/MREVPAR)*100 AS RPI , ( ADR/MADR)*100 AS AI , ( OCC/MOCC)*100 AS OI , ( MARSOLDLY/MARAVAILLY ) AS OCCLY , ( MARREVLY/MARSOLDLY ) AS ADRLY , ( MARREVLY/MARAVAILLY ) AS REVPARLY , ( MKTSOLDLY/MKTAVAILLY ) AS MOCCLY , ( MKTREVLY/MKTSOLDLY ) AS MADRLY , ( MKTREVLY/MKTAVAILLY ) AS MREVPARLY , ( REVPARLY/MREVPARLY)*100 AS RPILY , ( ADRLY/MADRLY)*100 AS AILY , ( OCCLY/MOCCLY)*100 AS OILY , RPI-RPILY AS RPI_ptchg , RPI_ptchg/RPILY AS RPI_pctchg , AI-AILY AS AI_ptchg , AI_ptchg/AILY AS AI_pctchg , OI-OILY AS OI_ptchg , OI_ptchg/OILY AS OI_pctchg  FROM SFB.STR&YRMNTH._Data&asof_yrmo A INNER JOIN SFB.prop_master_201812_CYNACmp B ON  A.MARSHA =  B.MARSHA);",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
"ALTER TABLE SFB.STR_CYNACmp DROP COLUMN MARAVAIL ,  MARSOLD ,  MARREV ,  MKTAVAIL ,  MKTSOLD ,  MKTREV ,  MARAVAILLY ,  MARSOLDLY ,  MARREVLY ,  MKTAVAILLY ,  MKTSOLDLY ,  MKTREVLY ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
" CREATE TABLE SFB.STR&YRMNTH._Data&asof_yrmo._WE AS  (  select a.MARSHA, b.MARSHA_NEW AS MARSHA, b.BRND, b.MF, a.TIMEF, a.SCOMP , b.HOTEL_NAME, b.REGION, b.DIVISION_NAME, b.REGION_NAME, b.DOMINT, a.YRMNTH, a.asof_yrmo , MARAVAIL, MARSOLD, MARREV, MKTAVAIL, MKTSOLD, MKTREV, MARAVAILLY, MARSOLDLY, MARREVLY, MKTAVAILLY, MKTSOLDLY, MKTREVLY FROM AW_CMP_DBO.STR_MONTHLY_DATA AS a LEFT JOIN AW_TGT_BUS_DBO.PROPERTY_MASTER_MISW_HIST AS b ON a.MARSHA = b.MARSHA_NEW AND a.asof_yrmo = b.asof_yrmo WHERE a.TIMEF ='YTD_WE' AND a.DATA_CATEGORY = 'WDWE_Rooms' AND a.CURRENCY_TYPE = 'Constant USD' AND a.YRMNTH = &YRMNTH AND a.asof_yrmo = &asof_yrmo  ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
SELECT * FROM SFB.STR&YRMNTH._Data&asof_yrmo._WE ORDER BY MARSHA;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
SELECT * FROM SFB.prop_master_201812_CYNACmp ORDER BY MARSHA;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
"CREATE TABLE SFB.STR_CYNACmp_WE AS ( SELECT  *  , ( MARSOLD/MARAVAIL ) AS OCCWE , ( MARREV/MARSOLD ) AS ADRWE , ( MARREV/MARAVAIL ) AS REVPARWE , ( MKTSOLD/MKTAVAIL ) AS MOCCWE , ( MKTREV/MKTSOLD ) AS MADRWE , ( MKTREV/MKTAVAIL ) AS MREVPARWE , ( REVPARWE/MREVPARWE)*100 AS RPIWE , ( ADRWE/MADRWE)*100 AS AIWE , ( OCCWE/MOCCWE)*100 AS OIWE , ( MARSOLDLY/MARAVAILLY ) AS OCCLYWE , ( MARREVLY/MARSOLDLY ) AS ADRLYWE , ( MARREVLY/MARAVAILLY ) AS REVPARLYWE , ( MKTSOLDLY/MKTAVAILLY ) AS MOCCLYWE , ( MKTREVLY/MKTSOLDLY ) AS MADRLYWE , ( MKTREVLY/MKTAVAILLY ) AS MREVPARLYWE , ( REVPARLYWE/MREVPARLYWE)*100 AS RPILYWE , ( ADRLYWE/MADRLYWE)*100 AS AILYWE , ( OCCLYWE/MOCCLYWE)*100 AS OILYWE , RPIWE-RPILYWE AS RPIWE_ptchg , RPIWE_ptchg/RPILYWE AS RPIWE_pctchg , AIWE-AILYWE AS AIWE_ptchg , AIWE_ptchg/AILYWE AS AIWE_pctchg , OIWE-OILYWE AS OIWE_ptchg , OIWE_ptchg/OILYWE AS OIWE_pctchg  FROM SFB.STR&YRMNTH._Data&asof_yrmo._WE A INNER JOIN SFB.prop_master_201812_CYNACmp B ON  A.MARSHA =  B.MARSHA);",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
"ALTER TABLE SFB.STR_CYNACmp_WE DROP COLUMN MARAVAIL ,  MARSOLD ,  MARREV ,  MKTAVAIL ,  MKTSOLD ,  MKTREV ,  MARAVAILLY ,  MARSOLDLY ,  MARREVLY ,  MKTAVAILLY ,  MKTSOLDLY ,  MKTREVLY ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
CREATE TABLE sfb.SFB_ALL AS ( SELECT * FROM ['sfb.SFB_ALL']);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
ALTER TABLE sfb.SFB_ALL DROP COLUMN WDWE ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
"CREATE TABLE ""\\Hdqmdm1fpcl4v1\lodg-revmgmt\RM EAnlys\MikeS\SFB_ALL_WPLU_STRWE.TXT"" AS ( SELECT * FROM sfb.SFB_ALL) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
"CREATE TABLE ""\\Hdqmdm1fpcl4v1\lodg-revmgmt\RM EAnlys\MikeS\SFB.aa_YEGEW_res.TXT"" AS ( SELECT * FROM SFB.aa_YEGEW_res) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
" CREATE TABLE sfb.OTA2018_retail AS  (  select b.brnd, a.market_segment_nm, channel_aggregate_cd, SUM( room_nights_qty) AS rn FROM AW_TGT_BUS_DBO.RES_STAYEDPAID AS a INNER JOIN AW_TGT_BUS_DBO.PROPERTY_MASTER_MISW_HIST AS b ON a.MARSHA=b.marsha WHERE b.BRND='CY' AND b.REGION IN ( 'E_', 'W_', 'C_') AND a.MARKET_SEGMENT_NM='Retail' AND b.ACOMP='Y' AND stay_dt >= '2018-01-01' AND stay_dt <= '2018-12-31' AND b.ASOF_YRMO=201812 GROUP BY b.brnd, a.market_segment_nm, channel_aggregate_cd   ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_StaypaidNOS_YOY_SFB.sas
" CREATE TABLE str.Rep&YRMNTH._Data&asof_yrmo AS  (  select a.MARSHA, b.BRND, b.MF, a.TIMEF, a.SCOMP , b.HOTEL_NAME, b.REGION, b.DIVISION_NAME, b.REGION_NAME, b.DOMINT, a.YRMNTH, a.asof_yrmo , MARAVAIL, MARSOLD, MARREV, MKTAVAIL, MKTSOLD, MKTREV, MARAVAILLY, MARSOLDLY, MARREVLY, MKTAVAILLY, MKTSOLDLY, MKTREVLY FROM AW_CMP_DBO.STR_MONTHLY_DATA AS a LEFT JOIN AW_TGT_BUS_DBO.PROPERTY_MASTER_HIST AS b ON a.MARSHA = b.MARSHA AND a.asof_yrmo = b.asof_yrmo WHERE a.TIMEF =&TIMEF AND a.DATA_CATEGORY = 'Rooms' AND a.CURRENCY_TYPE = 'Constant USD' AND a.YRMNTH = &YRMNTH AND a.asof_yrmo = &asof_yrmo AND b.BRND in( 'WI','BR','MD') AND a.SCOMP='Y'  ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_STR_Adhoc_brand_Post_MISW.sas
" CREATE TABLE str.Rep&YRMNTH._Data&asof_yrmo AS ( SELECT  * , CASE WHEN  region IN ( 'E_', 'W_', 'C_')  THEN 'US/Canada' WHEN   region='S_'  THEN region_name ELSE division_name END AS region2, CASE WHEN  region2='US/Canada'  THEN '1' WHEN   region2='Asia Pacific'  THEN '2' WHEN   region2='Caribbean Latin America'  THEN '3' WHEN   region2='Europe'  THEN '4' WHEN   region2='Middle East Africa'  THEN '5' END AS regorder FROM str.Rep&YRMNTH._Data&asof_yrmo );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_STR_Adhoc_brand_Post_MISW.sas
"SELECT * FROM str.Rep&YRMNTH._Data&asof_yrmo ORDER BY BRND ,SCOMP ,TIMEF ,YRMNTH ,asof_yrmo;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_STR_Adhoc_brand_Post_MISW.sas
"CREATE TABLE str.Rep&YRMNTH._Data&asof_yrmo._sumBR AS (SELECT BRND, SCOMP, TIMEF, YRMNTH, asof_yrmo, _freq_ AS Hotcnt, SUM(MARAVAIL) AS MARAVAIL, SUM(MARSOLD) AS MARSOLD, SUM(MARREV) AS MARREV, SUM(MKTAVAIL) AS MKTAVAIL, SUM(MKTSOLD) AS MKTSOLD, SUM(MKTREV) AS MKTREV, SUM(MARAVAILLY) AS MARAVAILLY, SUM(MARSOLDLY) AS MARSOLDLY, SUM(MARREVLY) AS MARREVLY, SUM(MKTAVAILLY) AS MKTAVAILLY, SUM(MKTSOLDLY) AS MKTSOLDLY, SUM(MKTREVLY) AS MKTREVLY FROM str.Rep&YRMNTH._Data&asof_yrmo GROUP BY BRND, SCOMP, TIMEF, YRMNTH, asof_yrmo );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_STR_Adhoc_brand_Post_MISW.sas
" CREATE TABLE str.Rep&YRMNTH._Data&asof_yrmo._sumBR AS ( SELECT  *  , 'ALL' AS region2 , '0' AS regorder , ( MARSOLD/MARAVAIL ) AS OCC , ( MARREV/MARSOLD ) AS ADR , ( MARREV/MARAVAIL ) AS REVPAR , ( MKTSOLD/MKTAVAIL ) AS MOCC , ( MKTREV/MKTSOLD ) AS MADR , ( MKTREV/MKTAVAIL ) AS MREVPAR , ( REVPAR/MREVPAR)*100 AS RPI , ( ADR/MADR)*100 AS AI , ( OCC/MOCC)*100 AS OI , ( MARSOLDLY/MARAVAILLY ) AS OCCLY , ( MARREVLY/MARSOLDLY ) AS ADRLY , ( MARREVLY/MARAVAILLY ) AS REVPARLY , ( MKTSOLDLY/MKTAVAILLY ) AS MOCCLY , ( MKTREVLY/MKTSOLDLY ) AS MADRLY , ( MKTREVLY/MKTAVAILLY ) AS MREVPARLY , ( REVPARLY/MREVPARLY)*100 AS RPILY , ( ADRLY/MADRLY)*100 AS AILY , ( OCCLY/MOCCLY)*100 AS OILY , RPI-RPILY AS RPI_ptchg , RPI_ptchg/RPILY AS RPI_pctchg  FROM str.Rep&YRMNTH._Data&asof_yrmo._sumBR );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_STR_Adhoc_brand_Post_MISW.sas
"SELECT * FROM str.Rep&YRMNTH._Data&asof_yrmo ORDER BY BRND ,regorder ,region2 ,SCOMP ,TIMEF ,YRMNTH ,asof_yrmo;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_STR_Adhoc_brand_Post_MISW.sas
"CREATE TABLE str.Rep&YRMNTH._Data&asof_yrmo.sum_BRReg AS (SELECT BRND, regorder, region2, SCOMP, TIMEF, YRMNTH, asof_yrmo, _freq_ AS Hotcnt, SUM(MARAVAIL) AS MARAVAIL, SUM(MARSOLD) AS MARSOLD, SUM(MARREV) AS MARREV, SUM(MKTAVAIL) AS MKTAVAIL, SUM(MKTSOLD) AS MKTSOLD, SUM(MKTREV) AS MKTREV, SUM(MARAVAILLY) AS MARAVAILLY, SUM(MARSOLDLY) AS MARSOLDLY, SUM(MARREVLY) AS MARREVLY, SUM(MKTAVAILLY) AS MKTAVAILLY, SUM(MKTSOLDLY) AS MKTSOLDLY, SUM(MKTREVLY) AS MKTREVLY FROM str.Rep&YRMNTH._Data&asof_yrmo GROUP BY BRND, regorder, region2, SCOMP, TIMEF, YRMNTH, asof_yrmo );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_STR_Adhoc_brand_Post_MISW.sas
" CREATE TABLE str.Rep&YRMNTH._Data&asof_yrmo.sum_BRReg AS ( SELECT  *  , ( MARSOLD/MARAVAIL ) AS OCC , ( MARREV/MARSOLD ) AS ADR , ( MARREV/MARAVAIL ) AS REVPAR , ( MKTSOLD/MKTAVAIL ) AS MOCC , ( MKTREV/MKTSOLD ) AS MADR , ( MKTREV/MKTAVAIL ) AS MREVPAR , ( REVPAR/MREVPAR)*100 AS RPI , ( ADR/MADR)*100 AS AI , ( OCC/MOCC)*100 AS OI , ( MARSOLDLY/MARAVAILLY ) AS OCCLY , ( MARREVLY/MARSOLDLY ) AS ADRLY , ( MARREVLY/MARAVAILLY ) AS REVPARLY , ( MKTSOLDLY/MKTAVAILLY ) AS MOCCLY , ( MKTREVLY/MKTSOLDLY ) AS MADRLY , ( MKTREVLY/MKTAVAILLY ) AS MREVPARLY , ( REVPARLY/MREVPARLY)*100 AS RPILY , ( ADRLY/MADRLY)*100 AS AILY , ( OCCLY/MOCCLY)*100 AS OILY , RPI-RPILY AS RPI_ptchg , RPI_ptchg/RPILY AS RPI_pctchg  FROM str.Rep&YRMNTH._Data&asof_yrmo.sum_BRReg );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_STR_Adhoc_brand_Post_MISW.sas
 CREATE TABLE str.Rep&YRMNTH._Data&asof_yrmo._Final AS ( SELECT  *  FROM str.Rep&YRMNTH._Data&asof_yrmo._sumBR UNION ALL ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_STR_Adhoc_brand_Post_MISW.sas
"SELECT * FROM str.Rep&YRMNTH._Data&asof_yrmo._Final ORDER BY BRND ,regorder ,region2;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_STR_Adhoc_brand_Post_MISW.sas
"CREATE TABLE ""\\Hdqmdm1fpcl4v1\lodg-revmgmt\RM EAnlys\MikeS\Adhocoutput\str.Rep&YRMNTH._Data&asof_yrmo._Final.TXT"" AS ( SELECT * FROM str.Rep&YRMNTH._Data&asof_yrmo._Final) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_STR_Adhoc_brand_Post_MISW.sas
" CREATE TABLE str.Rep_wdwe&YRMNTH._Data&asof_yrmo AS  (  select a.MARSHA, b.BRND, b.MF, a.TIMEF, a.SCOMP , b.HOTEL_NAME, b.REGION, b.DIVISION_NAME, b.REGION_NAME, b.DOMINT, a.YRMNTH, a.asof_yrmo, a.DATA_CATEGORY, a.DATA_TYPE , MARAVAIL, MARSOLD, MARREV, MKTAVAIL, MKTSOLD, MKTREV, MARAVAILLY, MARSOLDLY, MARREVLY, MKTAVAILLY, MKTSOLDLY, MKTREVLY FROM AW_CMP_DBO.STR_MONTHLY_DATA AS a LEFT JOIN AW_TGT_BUS_DBO.PROPERTY_MASTER_HIST AS b ON a.MARSHA = b.MARSHA AND a.asof_yrmo = b.asof_yrmo WHERE a.TIMEF in( 'MONTH_WE') AND a.DATA_CATEGORY='WDWE_Rooms' AND b.BRND in( 'CY') AND a.CURRENCY_TYPE = 'Constant USD' AND a.YRMNTH = &YRMNTH AND a.asof_yrmo = &asof_yrmo  ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_STR_Adhoc_wdwe.sas
" CREATE TABLE str.Rep_wdwe&YRMNTH._Data&asof_yrmo AS ( SELECT  * , CASE WHEN  region IN ( 'E_', 'W_', 'C_')  THEN 'US/Canada' WHEN   region='S_'  THEN region_name ELSE division_name END AS region2, CASE WHEN  region2='US/Canada'  THEN '1' WHEN   region2='Asia Pacific'  THEN '2' WHEN   region2='Caribbean Latin America'  THEN '3' WHEN   region2='Europe'  THEN '4' WHEN   region2='Middle East Africa'  THEN '5' END AS regorder FROM str.Rep_wdwe&YRMNTH._Data&asof_yrmo  WHERE region IN ( 'E_', 'W_', 'C_' ));",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_STR_Adhoc_wdwe.sas
" CREATE TABLE str.Rep_wdwe&YRMNTH._Data&asof_yrmo AS ( SELECT  *  , ( MARSOLD/MARAVAIL ) AS OCC , ( MARREV/MARSOLD ) AS ADR , ( MARREV/MARAVAIL ) AS REVPAR , ( MKTSOLD/MKTAVAIL ) AS MOCC , ( MKTREV/MKTSOLD ) AS MADR , ( MKTREV/MKTAVAIL ) AS MREVPAR , ( REVPAR/MREVPAR)*100 AS RPI , ( ADR/MADR)*100 AS AI , ( OCC/MOCC)*100 AS OI , ( MARSOLDLY/MARAVAILLY ) AS OCCLY , ( MARREVLY/MARSOLDLY ) AS ADRLY , ( MARREVLY/MARAVAILLY ) AS REVPARLY , ( MKTSOLDLY/MKTAVAILLY ) AS MOCCLY , ( MKTREVLY/MKTSOLDLY ) AS MADRLY , ( MKTREVLY/MKTAVAILLY ) AS MREVPARLY , ( REVPARLY/MREVPARLY)*100 AS RPILY , ( ADRLY/MADRLY)*100 AS AILY , ( OCCLY/MOCCLY)*100 AS OILY , RPI-RPILY AS RPI_ptchg , RPI_ptchg/RPILY AS RPI_pctchg , CASE WHEN  TIMEF='LAST12_WE'  THEN 'WE' WHEN  TIMEF='YTD_WE'  THEN 'WE' WHEN  TIMEF='LAST12_WD'  THEN 'WD' WHEN  TIMEF='YTD_WD'  THEN 'WD' END AS WDWE FROM str.Rep_wdwe&YRMNTH._Data&asof_yrmo );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_STR_Adhoc_wdwe.sas
"SELECT * FROM str.Rep_wdwe&YRMNTH._Data&asof_yrmo ORDER BY BRND ,SCOMP ,TIMEF ,YRMNTH ,asof_yrmo;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_STR_Adhoc_wdwe.sas
"CREATE TABLE str.Rep_wdwe&YRMNTH._Data&asof_yrmo._sumBR AS (SELECT BRND, SCOMP, TIMEF, YRMNTH, asof_yrmo, _freq_ AS Hotcnt, SUM(MARAVAIL) AS MARAVAIL, SUM(MARSOLD) AS MARSOLD, SUM(MARREV) AS MARREV, SUM(MKTAVAIL) AS MKTAVAIL, SUM(MKTSOLD) AS MKTSOLD, SUM(MKTREV) AS MKTREV, SUM(MARAVAILLY) AS MARAVAILLY, SUM(MARSOLDLY) AS MARSOLDLY, SUM(MARREVLY) AS MARREVLY, SUM(MKTAVAILLY) AS MKTAVAILLY, SUM(MKTSOLDLY) AS MKTSOLDLY, SUM(MKTREVLY) AS MKTREVLY FROM str.Rep_wdwe&YRMNTH._Data&asof_yrmo GROUP BY BRND, SCOMP, TIMEF, YRMNTH, asof_yrmo );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_STR_Adhoc_wdwe.sas
" CREATE TABLE str.Rep_wdwe&YRMNTH._Data&asof_yrmo._sumBR AS ( SELECT  *  , 'ALL' AS region2 , '0' AS regorder , ( MARSOLD/MARAVAIL ) AS OCC , ( MARREV/MARSOLD ) AS ADR , ( MARREV/MARAVAIL ) AS REVPAR , ( MKTSOLD/MKTAVAIL ) AS MOCC , ( MKTREV/MKTSOLD ) AS MADR , ( MKTREV/MKTAVAIL ) AS MREVPAR , ( REVPAR/MREVPAR)*100 AS RPI , ( ADR/MADR)*100 AS AI , ( OCC/MOCC)*100 AS OI , ( MARSOLDLY/MARAVAILLY ) AS OCCLY , ( MARREVLY/MARSOLDLY ) AS ADRLY , ( MARREVLY/MARAVAILLY ) AS REVPARLY , ( MKTSOLDLY/MKTAVAILLY ) AS MOCCLY , ( MKTREVLY/MKTSOLDLY ) AS MADRLY , ( MKTREVLY/MKTAVAILLY ) AS MREVPARLY , ( REVPARLY/MREVPARLY)*100 AS RPILY , ( ADRLY/MADRLY)*100 AS AILY , ( OCCLY/MOCCLY)*100 AS OILY , RPI-RPILY AS RPI_ptchg , RPI_ptchg/RPILY AS RPI_pctchg  FROM str.Rep_wdwe&YRMNTH._Data&asof_yrmo._sumBR );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_STR_Adhoc_wdwe.sas
"SELECT * FROM str.Rep&YRMNTH._Data&asof_yrmo ORDER BY BRND ,regorder ,region2 ,SCOMP ,TIMEF ,YRMNTH ,asof_yrmo;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_STR_Adhoc_wdwe.sas
"CREATE TABLE str.Rep&YRMNTH._Data&asof_yrmo.sum_BRReg AS (SELECT BRND, regorder, region2, SCOMP, TIMEF, YRMNTH, asof_yrmo, _freq_ AS Hotcnt, SUM(MARAVAIL) AS MARAVAIL, SUM(MARSOLD) AS MARSOLD, SUM(MARREV) AS MARREV, SUM(MKTAVAIL) AS MKTAVAIL, SUM(MKTSOLD) AS MKTSOLD, SUM(MKTREV) AS MKTREV, SUM(MARAVAILLY) AS MARAVAILLY, SUM(MARSOLDLY) AS MARSOLDLY, SUM(MARREVLY) AS MARREVLY, SUM(MKTAVAILLY) AS MKTAVAILLY, SUM(MKTSOLDLY) AS MKTSOLDLY, SUM(MKTREVLY) AS MKTREVLY FROM str.Rep&YRMNTH._Data&asof_yrmo GROUP BY BRND, regorder, region2, SCOMP, TIMEF, YRMNTH, asof_yrmo );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_STR_Adhoc_wdwe.sas
" CREATE TABLE str.Rep&YRMNTH._Data&asof_yrmo.sum_BRReg AS ( SELECT  *  , ( MARSOLD/MARAVAIL ) AS OCC , ( MARREV/MARSOLD ) AS ADR , ( MARREV/MARAVAIL ) AS REVPAR , ( MKTSOLD/MKTAVAIL ) AS MOCC , ( MKTREV/MKTSOLD ) AS MADR , ( MKTREV/MKTAVAIL ) AS MREVPAR , ( REVPAR/MREVPAR)*100 AS RPI , ( ADR/MADR)*100 AS AI , ( OCC/MOCC)*100 AS OI , ( MARSOLDLY/MARAVAILLY ) AS OCCLY , ( MARREVLY/MARSOLDLY ) AS ADRLY , ( MARREVLY/MARAVAILLY ) AS REVPARLY , ( MKTSOLDLY/MKTAVAILLY ) AS MOCCLY , ( MKTREVLY/MKTSOLDLY ) AS MADRLY , ( MKTREVLY/MKTAVAILLY ) AS MREVPARLY , ( REVPARLY/MREVPARLY)*100 AS RPILY , ( ADRLY/MADRLY)*100 AS AILY , ( OCCLY/MOCCLY)*100 AS OILY , RPI-RPILY AS RPI_ptchg , RPI_ptchg/RPILY AS RPI_pctchg  FROM str.Rep&YRMNTH._Data&asof_yrmo.sum_BRReg );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_STR_Adhoc_wdwe.sas
 CREATE TABLE str.Rep&YRMNTH._Data&asof_yrmo._Final AS ( SELECT  *  FROM str.Rep&YRMNTH._Data&asof_yrmo._sumBR UNION ALL ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_STR_Adhoc_wdwe.sas
"SELECT * FROM str.Rep&YRMNTH._Data&asof_yrmo._Final ORDER BY BRND ,regorder ,region2;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_STR_Adhoc_wdwe.sas
"CREATE TABLE ""\\Hdqmdm1fpcl4v1\lodg-revmgmt\RM EAnlys\MikeS\Adhocoutput\str.Rep&YRMNTH._Data&asof_yrmo._Final.TXT"" AS ( SELECT * FROM str.Rep&YRMNTH._Data&asof_yrmo._Final) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_STR_Adhoc_wdwe.sas
 CREATE TABLE YRMNTH AS select max( ASOF_YRMO) AS YRMNTH FROM CMP.STR_GLOBAL_CENSUS;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Supply_Growth_AW_-_WS.sas
 CREATE TABLE combined_census_pipe AS ( SELECT  *  FROM CMP.STR_Combined_Census_Pipe  WHERE continent = 'Americas');,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Supply_Growth_AW_-_WS.sas
" CREATE TABLE identify_dupes AS select a.STR_NUM, COUNT( a.STR_NUM) AS prop_count FROM combined_census_pipe a GROUP BY a.STR_NUM;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Supply_Growth_AW_-_WS.sas
 CREATE TABLE deduped AS select a.* FROM combined_census_pipe a LEFT JOIN identify_dupes AS b ON a.STR_NUM = b.STR_NUM WHERE b.prop_count = 1 OR ( a.status = 'Existing' AND b.prop_count = 2 ) ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Supply_Growth_AW_-_WS.sas
" CREATE TABLE comp_coordinates AS ( SELECT  *  , CAST( latitude, 20. ) * constant( 'pi')/180 AS lat_comp_rad , CAST( longitude, 20. ) * constant( 'pi')/180 AS long_comp_rad  FROM deduped  WHERE ( latitude <> '' AND longitude <> '') OR ( status = 'Pipeline' AND Open_Date is NULL ) );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Supply_Growth_AW_-_WS.sas
" CREATE TABLE MI_coordinates AS ( SELECT marsha, STR_ID , latitude * constant( 'pi')/180 AS lat_MI_rad , longitude * constant( 'pi')/180 AS long_MI_rad  FROM TGT_BUS.property_master_hist  WHERE division = 'AM' AND openflag = 'Y' AND status = 'O' AND asof_yrmo = &yrmnth.);",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Supply_Growth_AW_-_WS.sas
" CREATE TABLE dist AS ( Select a.marsha, b.STR_NUM, b.chain_scale , long_comp_rad, long_MI_rad, lat_comp_rad, lat_MI_rad ,3956 * sqrt( ( long_comp_rad - long_MI_rad) * cos( ( lat_MI_rad + lat_comp_rad) / 2) + ( lat_comp_rad - lat_MI_rad) * ( lat_comp_rad - lat_MI_rad)) AS distance FROM MI_coordinates a, comp_coordinates b WHERE calculated distance < 20  ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Supply_Growth_AW_-_WS.sas
"SELECT * FROM dist ORDER BY marsha ,distance;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Supply_Growth_AW_-_WS.sas
" CREATE TABLE dist2 AS select b.marsha, b.brnd_name, b.mf, b.domint, b.hotname, b.rd, b.ADRM, b.region, b.sub_brand, b.gen, b.owner, b.market_name , a.chain_scale , e.STR_NUM, e.Status, e.Market, e.Tract, e.Affiliation , e.Parent_Company, e.open_date , e.hotel_name AS hotel_name2 , CASE WHEN b.brnd IN ( ""CY"", ""RI"", ""SH"", ""AR"", ""FP"", ""EL"", ""AL"") AND e.chain_scale_CLASS in( ""Upper Midscale Class"", ""Upscale Class"", ""Upper Upscale Class"") THEN ""Y"" when b.brnd IN ( ""FI"", ""TS"", ""OX"", ""PR"") AND e.chain_scale_CLASS IN ( ""Midscale Class"", ""Upper Midscale Class"", ""Upscale Class"") THEN ""Y"" when ( b.brnd IN ( ""FS"", ""BR"", ""GE"", ""AK"", ""DE"", ""CC"", ""ER"", ""SI"", ""MD"", ""WI"", ""TX"") AND b.sub_brand not IN ( ""JW"", ""JW/Resort"")) AND e.chain_scale_CLASS IN ( ""Upscale Class"", ""Upper Upscale Class"", ""Luxury Class"") THEN ""Y"" when ( b.brnd IN ( ""RZ"", ""EB"", ""BG"", ""JW"", ""WH"", ""XR"", ""LC"") OR b.sub_brand IN ( ""JW"", ""JW/Resort"")) AND e.chain_scale_CLASS IN ( ""Luxury Class"") THEN ""Y"" ELSE ""N"" END AS CLASS_match , CASE WHEN b.brnd IN ( ""CY"", ""RI"", ""SH"", ""AR"", ""FP"", ""EL"", ""AL"") AND e.chain_scale_CLASS = ""Upper Upscale Class"" THEN e.rooms*.7 ELSE e.rooms END AS rooms , a.distance FROM dist a LEFT JOIN TGT_BUS.property_master_hist AS b ON a.marsha = b.marsha LEFT JOIN comp_coordinates AS e ON a.STR_NUM = e.STR_NUM WHERE a.STR_NUM <> b.STR_ID AND b.asof_yrmo = &yrmnth. ORDER BY b.marsha, a.distance;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Supply_Growth_AW_-_WS.sas
" CREATE TABLE dist2 AS ( SELECT  *  FROM dist2  WHERE CLASS_match = ""Y"");",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Supply_Growth_AW_-_WS.sas
" CREATE TABLE dist3_1 AS ( SELECT  * , CASE WHEN  SUBSTRING( open_date,1,4) = ( &budget_yr. - 2)  THEN rooms END AS new_last_year_supply, CASE WHEN  SUBSTRING( open_date,1,4) = ( &budget_yr. - 1)  THEN rooms END AS new_current_year_supply, CASE WHEN  SUBSTRING( open_date,1,4) = &budget_yr.  THEN rooms END AS new_budget_year_supply, CASE WHEN  parent_company = ""Marriott International"" AND SUBSTRING( open_date,1,4) = ( &budget_yr. - 2)  THEN rooms END AS new_MI_last_year_supply, CASE WHEN  parent_company = ""Marriott International"" AND SUBSTRING( open_date,1,4) = ( &budget_yr. - 1)  THEN rooms END AS new_MI_current_year_supply, CASE WHEN  parent_company = ""Marriott International"" AND SUBSTRING( open_date,1,4) = &budget_yr.  THEN rooms END AS new_MI_budget_year_supply FROM dist2  WHERE CLASS_match = ""Y"");",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Supply_Growth_AW_-_WS.sas
"SELECT * FROM dist3_1 ORDER BY marsha ,distance ,hotname ,rooms;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Supply_Growth_AW_-_WS.sas
" CREATE TABLE work.distance_1 AS ( SELECT  * , CASE  ELSE rnk+1 END AS rnk FROM dist3_1) ORDER BY marsha ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Supply_Growth_AW_-_WS.sas
 CREATE TABLE distance2_1 AS ( SELECT  *  FROM distance_1  WHERE rnk<=15 OR distance <= 1);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Supply_Growth_AW_-_WS.sas
" CREATE TABLE hotel_list2 AS select a.MARSHA, a.HOTNAME, a.BRND_NAME, a.MF, a.DOMINT, a.REGION, a.MARKET_NAME , a.RD, a.ADRM, a.STR_NUM, a.HOTEL_NAME2, a.CHAIN_SCALE, a.AFFILIATION , a.PARENT_COMPANY, a.DISTANCE, a.ROOMS, a.OPEN_DATE , SUBSTRING( cat( OPEN_DATE),1,4) AS OPEN_YEAR , SUM( a.rooms) AS total_new_supply FROM distance2_1 a WHERE OPEN_DATE <= ( &budget_yr. * 100 + 12) AND OPEN_DATE >= ( &budget_yr. - 3) * 100 GROUP BY a.marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Supply_Growth_AW_-_WS.sas
"CREATE TABLE ""\\hdqmdm1fpcl3v2\LODG-SMPS\Reporting Analysis\Sales Comp Analysis\Kathryn\Supply Impact\Data Tab for Maria &UPDATE_date..xlsx"" AS ( SELECT * FROM hotel_list2) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Supply_Growth_AW_-_WS.sas
 CREATE TABLE missing_datapoints AS ( SELECT  *  FROM combined_census_pipe  WHERE ( status = 'Pipeline') AND ( latitude = '' OR longitude = '' OR Open_Date is NULL ) );,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Supply_Growth_AW_-_WS.sas
"CREATE TABLE ""\\hdqmdm1fpcl3v2\LODG-SMPS\Reporting Analysis\Sales Comp Analysis\Kathryn\Supply Impact\Data Tab for Maria &Update_Date..xlsx"" AS ( SELECT * FROM missing_datapoints) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Supply_Growth_AW_-_WS.sas
" CREATE TABLE max_distance AS select a.marsha, max( distance) AS max_distance FROM distance2_1 a GROUP BY a.marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Supply_Growth_AW_-_WS.sas
" CREATE TABLE independents AS select b.marsha, b.brnd, b.mf, b.domint, b.hotname, b.rd, b.region , b.sub_brand, b.gen, b.owner, b.market_name , a.chain_scale , f.STR_NUM, f.status, f.market, f.tract, f.AFFILIATION , f.Parent_Company, f.open_date, f.hotel_name , ""N"" AS CLASS_match, a.distance, f.rooms FROM dist a LEFT JOIN TGT_BUS.property_master_hist AS b ON a.marsha = b.marsha LEFT JOIN comp_coordinates AS f ON a.STR_NUM = f.STR_NUM LEFT JOIN max_distance AS e ON b.marsha = e.marsha WHERE a.chain_scale = ""Independents"" AND f.status = 'Pipeline' AND a.distance < e.max_distance AND f.OPEN_DATE <= ( &budget_yr. * 100 + 12) AND f.OPEN_DATE >= ( &budget_yr. - 3) * 100 AND b.asof_yrmo = &yrmnth. ORDER BY b.marsha, a.distance;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Supply_Growth_AW_-_WS.sas
"CREATE TABLE ""\\hdqmdm1fpcl3v2\LODG-SMPS\Reporting Analysis\Sales Comp Analysis\Kathryn\Supply Impact\Data Tab for Maria &UPDATE_date..xlsx"" AS ( SELECT * FROM independents) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Supply_Growth_AW_-_WS.sas
" CREATE TABLE market_summary AS select a.market, a.chain_scale, a.chain_scale_CLASS AS CLASS , CASE WHEN OPEN_DATE < ( &budget_yr. - 3) * 100 THEN 'existing' ELSE SUBSTRING( cat( a.OPEN_DATE),1,4) END AS OPEN_YEAR , SUM( a.rooms) AS supply FROM deduped a GROUP BY a.market, a.chain_scale, a.chain_scale_CLASS, calculated open_year;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Supply_Growth_AW_-_WS.sas
"CREATE TABLE ""\\hdqmdm1fpcl3v2\LODG-SMPS\Reporting Analysis\Sales Comp Analysis\Kathryn\Supply Impact\Data Tab for Maria &UPDATE_date..xlsx"" AS ( SELECT * FROM market_summary) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Supply_Growth_AW_-_WS.sas
" CREATE TABLE sum_by_open_year AS select a.marsha, a.brnd_name, a.mf, a.domint, a.hotname, a.rd, a.adrm , a.region, a.sub_brand, a.gen, a.owner, a.Market_Name , CASE WHEN OPEN_DATE < ( &budget_yr. - 3) * 100 THEN 'existing' ELSE SUBSTRING( cat( a.OPEN_DATE),1,4) END AS OPEN_YEAR , SUM( a.rooms) AS supply , COUNT( a.hotel_name2) AS num_competitors FROM distance2_1 a GROUP BY a.marsha, a.brnd_name, a.mf, a.domint, a.hotname, a.rd, a.adrm , a.region, a.sub_brand, a.gen, a.owner, a.Market_Name , calculated open_year;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Supply_Growth_AW_-_WS.sas
"CREATE TABLE ""\\hdqmdm1fpcl3v2\LODG-SMPS\Reporting Analysis\Sales Comp Analysis\Kathryn\Supply Impact\Data Tab for Maria &Update_Date..xlsx"" AS ( SELECT * FROM sum_by_open_year) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Supply_Growth_AW_-_WS.sas
" CREATE TABLE hotels_with_new_supply AS select a.MARSHA, SUM( a.TOTAL_NEW_SUPPLY) AS TOTAL_NEW_SUPPLY FROM hotel_list2 a WHERE a.Open_Date - 2 < &yrmnth. GROUP BY a.MARSHA;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Supply_Growth_AW_-_WS.sas
" CREATE TABLE RPI_DATA AS select a.MARSHA , b.MISW_Flag, b.MF, b.DOMINT, b.REGION, b.BRND, b.HCLASS2,EXTRACT(YEAR FROM b.OPENDATE) AS OPEN_YEAR , b.MARKET_NAME, b.OWNER , CASE WHEN b.BRND IN ( 'CY', 'PR', 'SH', 'FP', 'FI', 'RI', 'TS', 'AR', 'AL', 'OX', 'EL', 'AC') THEN 'Select' when b.BRND IN ( 'JW', 'XR', 'RZ', 'WH', 'LC', 'EB', 'BG') THEN 'Luxury' ELSE 'Premium' END AS Brand_Tier , a.SCOMP, a.TIMEF , a.MARAVAIL, a.MARSOLD, a.MARREV, a.MARAVAILLY, a.MARSOLDLY, a.MARREVLY , a.MKTAVAIL, a.MKTSOLD, a.MKTREV, a.MKTAVAILLY, a.MKTSOLDLY, a.MKTREVLY , CASE WHEN c.total_new_supply > 0 THEN ""Y"" ELSE ""N"" END AS Supply_Impacted FROM CMP.STR_MONTHLY_DATA a LEFT JOIN TGT_BUS.PROPERTY_MASTER_HIST AS b ON a.MARSHA = b.MARSHA LEFT JOIN hotels_with_new_supply AS c ON b.MARSHA = c.MARSHA WHERE b.asof_yrmo = &yrmnth. AND a.asof_yrmo = &yrmnth. AND a.yrmnth = &yrmnth. AND a.currency_type = 'Constant USD' AND a.data_category = 'Rooms' AND b.Division = 'AM' ORDER BY a.MARSHA;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Supply_Growth_AW_-_WS.sas
"CREATE TABLE ""\\hdqmdm1fpcl3v2\lodg-smps\Reporting Analysis\Sales Comp Analysis\Kathryn\Supply Impact\Data tabs for Mark &UPDATE_date..xlsb"" AS ( SELECT * FROM RPI_DATA) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Supply_Growth_AW_-_WS.sas
 CREATE TABLE hotel_list_MARK AS ( SELECT  *  FROM hotel_list2  WHERE Open_Date - 2 < &yrmnth.);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Supply_Growth_AW_-_WS.sas
"CREATE TABLE ""\\hdqmdm1fpcl3v2\lodg-smps\Reporting Analysis\Sales Comp Analysis\Kathryn\Supply Impact\Data tabs for Mark &UPDATE_date..xlsb"" AS ( SELECT * FROM hotel_list_MARK) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Supply_Growth_AW_-_WS.sas
 CREATE TABLE fx_rates AS ( SELECT  *  FROM fx.fxrates );,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Threat_Assessment_Codev4.sas
 CREATE TABLE prop_misw AS  (  SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER A  ) ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Threat_Assessment_Codev4.sas
" CREATE TABLE resdata_2019 AS  (  SELECT property_cd, CURR_MARKET_PREFIX_CD, c.SEGMENT_MISW, stay_dt , SUM( CURR_ROOMS_QTY) AS rn, SUM( CURR_ROOM_REV_USD_SUB_AMT) AS rv_usd , SUM( CURR_ROOM_REV_Local_SUB_AMT) AS rv_Local FROM AW_TGT_BUS_DBO.MRDW_BI_FACT_STAYED_PAID_NOS A INNER JOIN aw_rev_dbo.mi_mrdw_segment_map_sw C ON a.CURR_MARKET_PREFIX_CD=C.MARKET_PREFIX_CD WHERE stay_year IN ( 2019, 2018) AND NOS_STATUS_CD='A' AND stay_dt >= '2018-12-01' AND stay_dt <= '2019-11-30' AND INTERFACE_PMS_CD = '2' GROUP BY property_cd, CURR_MARKET_PREFIX_CD, c.SEGMENT_MISW, stay_dt  ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Threat_Assessment_Codev4.sas
" CREATE TABLE resdata_2018 AS  (  SELECT property_cd, CURR_MARKET_PREFIX_CD, c.SEGMENT_MISW, stay_dt , SUM( CURR_ROOMS_QTY) AS rn_ly, SUM( CURR_ROOM_REV_USD_SUB_AMT) AS rv_usd_ly , SUM( CURR_ROOM_REV_Local_SUB_AMT) AS rv_Local_ly FROM AW_TGT_BUS_DBO.MRDW_BI_FACT_STAYED_PAID_NOS A INNER JOIN aw_rev_dbo.mi_mrdw_segment_map_sw C ON a.CURR_MARKET_PREFIX_CD=C.MARKET_PREFIX_CD WHERE stay_year IN ( 2017, 2018) AND NOS_STATUS_CD='A' AND stay_dt >= '2017-12-02' AND stay_dt <= '2018-12-01' AND INTERFACE_PMS_CD = '2' GROUP BY property_cd, CURR_MARKET_PREFIX_CD, c.SEGMENT_MISW, stay_dt  ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Threat_Assessment_Codev4.sas
" CREATE TABLE resdata_comb AS select coalesce( a.property_cd, b.property_cd) AS marsha , coalesce ( a.curr_market_prefix_cd, b.curr_market_prefix_cd) AS curr_market_prefix_cd , coalesce ( a.segment_misw, b.segment_misw) AS segment_misw , coalesce ( a.stay_dt, b.stay_dt+364) AS date format date9. , rn ,rv_usd, rv_local, rn_ly, rv_usd_ly, rv_local_ly FROM resdata_2019 AS a full JOIN resdata_2018 AS b ON a.property_cd = b.property_cd AND a.curr_market_prefix_cd = b.curr_market_prefix_cd AND a.segment_misw = b.segment_misw AND a.stay_dt = b.stay_dt+364 ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Threat_Assessment_Codev4.sas
" CREATE TABLE demand AS  (  select CASE WHEN c.property_cd='SJUDB' THEN 'SJUDO' ELSE c.property_cd END AS marsha , b.date_dt AS date , SUM( a.qy_addl_demand_adjstd) AS demand FROM mrdw_fact_ddm_stat_unconstrain a JOIN mrdw_dim_date b ON a.id_date_stay=b.date_key JOIN mrdw_dim_property AS c ON a.id_property=c.property_id WHERE b.year_cal IN (  2019, 2018, 2017) GROUP BY marsha, b.date_dt  )  ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Threat_Assessment_Codev4.sas
" CREATE TABLE demand2 AS select coalesce( a.marsha, b.marsha) AS marsha ,coalesce( a.date, b.date+364) AS date ,a.demand AS demand ,b.demand AS demand_ly FROM demand a full JOIN demand b ON a.marsha = b.marsha AND a.date = b.date +364 WHERE a.date >= '01DEC2018'D AND a.date <= '30NOV2019'D;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Threat_Assessment_Codev4.sas
" CREATE TABLE resdata_comb_demand AS select marsha , date , SUM( rn)as rn , SUM( rn_ly) AS rn_ly FROM resdata_comb GROUP BY marsha, date;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Threat_Assessment_Codev4.sas
" CREATE TABLE demand3 AS select a.marsha , a.date , a.demand , a.demand_ly , ( a.demand+ b.rn) AS total_demand , ( a.demand_ly+ b.rn_ly) AS total_demand_ly FROM demand2 AS a LEFT JOIN resdata_comb_demand AS b ON a.marsha = b.marsha AND a.date = b.date;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Threat_Assessment_Codev4.sas
" CREATE TABLE demand4 AS select a.marsha , b.hcap * 365 AS cap , SUM( total_demand) AS total_demand , SUM( total_demand_ly) AS total_demand_ly , SUM( total_demand)/SUM( total_demand_ly)-1 AS demand_pct_chg , SUM( total_demand) - SUM( total_demand_ly)-1 AS demand_pt_chg FROM demand3 AS a LEFT JOIN prop_misw AS b ON a.marsha = b.marsha GROUP BY a.marsha, b.hcap;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Threat_Assessment_Codev4.sas
" CREATE TABLE demand5 AS select * , total_demand/cap AS demand_factor FROM demand4;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Threat_Assessment_Codev4.sas
" CREATE TABLE resdata_comb_demand_l3 AS select marsha , date , SUM( rn)as rn , SUM( rn_ly) AS rn_ly FROM resdata_comb WHERE date >= '01SEP2019'D GROUP BY marsha, date;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Threat_Assessment_Codev4.sas
" CREATE TABLE demand3_l3 AS select a.marsha , a.date format date9. , a.demand , a.demand_ly , ( a.demand+ b.rn) AS total_demand , ( a.demand_ly+ b.rn_ly) AS total_demand_ly FROM demand2 AS a LEFT JOIN resdata_comb_demand_l3 AS b ON a.marsha = b.marsha AND a.date = b.date WHERE a.date >= '01SEP2019'D;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Threat_Assessment_Codev4.sas
" CREATE TABLE demand4_l3 AS select a.marsha , b.hcap * 91 AS cap , SUM( total_demand) AS total_demand , SUM( total_demand_ly) AS total_demand_ly , SUM( total_demand)/SUM( total_demand_ly)-1 AS demand_pct_chg , SUM( total_demand) - SUM( total_demand_ly)-1 AS demand_pt_chg FROM demand3_l3 AS a LEFT JOIN prop_misw AS b ON a.marsha = b.marsha GROUP BY a.marsha, b.hcap;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Threat_Assessment_Codev4.sas
" CREATE TABLE demand5_l3 AS select * , total_demand/cap AS demand_factor FROM demand4_l3;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Threat_Assessment_Codev4.sas
" CREATE TABLE res_datal12 AS select a.marsha , a.date , b.hotel_name , b.brnd_name , b.str_chain_scale , b.mf , b.opendate , b.curr , b.cluster_name , CASE WHEN grmrs_hotel <> '' THEN 'Y' ELSE 'N' END AS RMAS , b.acomp , b.hcap , segment_misw , curr_market_prefix_cd , rn , rv_local/c.fx AS rv_usd , rv_local_ly/c.fx AS rv_usd_ly FROM resdata_comb AS a LEFT JOIN prop_misw AS b ON a.marsha = b.marsha LEFT JOIN fx_rates AS c ON b.curr = c.code andEXTRACT(MONTH FROM a.date) = c.mn WHERE b.region IN ( 'E_' 'W_' 'C_') AND b.openflag = 'Y';",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Threat_Assessment_Codev4.sas
" CREATE TABLE res_datal12v2 AS select marsha , hotel_name , brnd_name , str_chain_scale , mf , opendate , curr , cluster_name , RMAS , acomp , SUM( rn) AS rn , SUM( rv_usd) AS rv_usd , SUM( rv_usd_ly) AS rv_usd_ly , calculated rv_usd/calculated rv_usd_ly-1 AS rv_chg , calculated rv_usd - calculated rv_usd_ly AS rv_diff FROM res_datal12 AS a GROUP BY marsha , hotel_name , brnd_name , str_chain_scale , mf , opendate , curr , cluster_name , RMAS , acomp;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Threat_Assessment_Codev4.sas
" CREATE TABLE res_datal3 AS select a.marsha , a.date , b.hotel_name , b.brnd_name , b.str_chain_scale , b.mf , b.opendate , b.curr , b.cluster_name , CASE WHEN grmrs_hotel <> '' THEN 'Y' ELSE 'N' END AS RMAS , b.acomp , b.hcap , segment_misw , curr_market_prefix_cd , rn , rv_local/c.fx AS rv_usd , rv_local_ly/c.fx AS rv_usd_ly FROM resdata_comb AS a LEFT JOIN prop_misw AS b ON a.marsha = b.marsha LEFT JOIN fx_rates AS c ON b.curr = c.code andEXTRACT(MONTH FROM a.date) = c.mn WHERE b.region IN ( 'E_' 'W_' 'C_') AND b.openflag = 'Y' AND a.date >= '01SEP2019'D ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Threat_Assessment_Codev4.sas
" CREATE TABLE res_datal3v2 AS select marsha , hotel_name , brnd_name , str_chain_scale , mf , opendate , curr , cluster_name , RMAS , acomp , SUM( rn) AS rn , SUM( rv_usd) AS rv_usd , SUM( rv_usd_ly) AS rv_usd_ly , calculated rv_usd/calculated rv_usd_ly-1 AS rv_chg , calculated rv_usd - calculated rv_usd_ly AS rv_diff FROM res_datal3 AS a GROUP BY marsha , hotel_name , brnd_name , str_chain_scale , mf , opendate , curr , cluster_name , RMAS , acomp;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Threat_Assessment_Codev4.sas
" CREATE TABLE Rep&YRMNTH._Data&asof_yrmo AS  (  select a.MARSHA, b.BRND, b.MF, a.TIMEF, a.SCOMP , b.HOTEL_NAME, b.REGION, b.REGION_NAME, a.YRMNTH, a.asof_yrmo , MARSOLD/MKTSOLD AS OI, MARSOLDLY/MKTSOLDLY AS OI_LY, ( MARSOLD/MKTSOLD*100)-( MARSOLDLY/MKTSOLDLY*100) AS OI_PT_CHG , ( MARREV/MARSOLD)/( MKTREV/MKTSOLD) AS AI, ( MARREVLY/MARSOLDLY)/( MKTREVLY/MKTSOLDLY) AS AI_LY, ( ( MARREV/MARSOLD)/( MKTREV/MKTSOLD)*100)- ( ( MARREVLY/MARSOLDLY)/( MKTREVLY/MKTSOLDLY)*100) AS AI_PT_CHG , MARREV/MKTREV*100 AS RPI, MARREVLY/MKTREVLY*100 AS RPI_LY, ( MARREV/MKTREV*100)-( MARREVLY/MKTREVLY*100) AS RPI_PT_CHG FROM AW_CMP_DBO.STR_MONTHLY_DATA AS a LEFT JOIN AW_TGT_BUS_DBO.PROPERTY_MASTER_HIST AS b ON a.MARSHA = b.MARSHA AND a.asof_yrmo = b.asof_yrmo WHERE a.TIMEF =&TIMEF AND a.DATA_CATEGORY = 'Rooms' AND a.CURRENCY_TYPE = 'Constant USD' AND a.YRMNTH = &YRMNTH AND a.asof_yrmo = &asof_yrmo AND b.REGION in( 'E_','W_','C_') AND a.SCOMP='Y'  ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Threat_Assessment_Codev4.sas
" CREATE TABLE Rep&YRMNTH._Data&asof_yrmo.l3 AS  (  select a.MARSHA, b.BRND, b.MF, a.TIMEF, a.SCOMP , b.HOTEL_NAME, b.REGION, b.REGION_NAME, a.YRMNTH, a.asof_yrmo , MARSOLD/MKTSOLD AS OI, MARSOLDLY/MKTSOLDLY AS OI_LY, ( MARSOLD/MKTSOLD*100)-( MARSOLDLY/MKTSOLDLY*100) AS OI_PT_CHG , ( MARREV/MARSOLD)/( MKTREV/MKTSOLD) AS AI, ( MARREVLY/MARSOLDLY)/( MKTREVLY/MKTSOLDLY) AS AI_LY, ( ( MARREV/MARSOLD)/( MKTREV/MKTSOLD)*100)- ( ( MARREVLY/MARSOLDLY)/( MKTREVLY/MKTSOLDLY)*100) AS AI_PT_CHG , MARREV/MKTREV*100 AS RPI, MARREVLY/MKTREVLY*100 AS RPI_LY, ( MARREV/MKTREV*100)-( MARREVLY/MKTREVLY*100) AS RPI_PT_CHG FROM AW_CMP_DBO.STR_MONTHLY_DATA AS a LEFT JOIN AW_TGT_BUS_DBO.PROPERTY_MASTER_HIST AS b ON a.MARSHA = b.MARSHA AND a.asof_yrmo = b.asof_yrmo WHERE a.TIMEF =&TIMEF2 AND a.DATA_CATEGORY = 'Rooms' AND a.CURRENCY_TYPE = 'Constant USD' AND a.YRMNTH = &YRMNTH AND a.asof_yrmo = &asof_yrmo AND b.REGION in( 'E_','W_','C_') AND a.SCOMP='Y'  ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Threat_Assessment_Codev4.sas
" CREATE TABLE datacomb AS select a.marsha , a.hotel_name , a.brnd_name , a.str_chain_scale , a.mf , a.curr , a.rmas , a.acomp , c.demand_factor AS demand_factorl12 , d.demand_factor AS demand_factorl3 , a.rv_usd/a.rv_usd_ly - 1 AS revpar_chg_l12 , b.rv_usd/b.rv_usd_ly - 1 AS revpar_chg_l3 , e.RPI_PT_CHG AS RPI_PT_CHGl12 , f.RPI_PT_CHG AS RPI_PT_CHGl3 , g.transpace_revchg FROM res_datal12v2 AS a full JOIN res_datal3v2 AS b ON a.marsha = b.marsha LEFT JOIN demand5 AS c ON coalesce( a.marsha, b.marsha) = c.marsha LEFT JOIN demand5_l3 AS d ON coalesce( a.marsha, b.marsha) = d.marsha LEFT JOIN Rep&YRMNTH._Data&asof_yrmo AS e ON coalesce( a.marsha, b.marsha) = e.marsha LEFT JOIN Rep&YRMNTH._Data&asof_yrmo.l3 AS f ON coalesce( a.marsha, b.marsha) = f.marsha LEFT JOIN allotb2 AS g ON coalesce( a.marsha,b.marsha) = g.marsha WHERE a.brnd_name IN ( 'Courtyard' 'Fairfield Inn' 'SpringHill Suites' 'Residence Inn' 'TownePlace Suites' 'Sheraton' 'Element' 'AC Hotels by Marriott' 'Aloft' 'Four Points' 'Moxy Hotels' ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Threat_Assessment_Codev4.sas
" select ""'"" || CAST( yr AS VARCHAR(4) ) || ""'"", ""'"" || compress( CAST( pd AS VARCHAR(2) )) || ""'"", ""'"" || CAST( wk AS VARCHAR(1) ) || ""'"" into :TY_YR, :TY_PD, :TY_WK FROM share.periods WHERE sasdate = date( )-7 select ""'"" || CAST( yr AS VARCHAR(4) ) || ""'"", ""'"" || compress( CAST( pd AS VARCHAR(2) )) || ""'"", ""'"" || CAST( wk AS VARCHAR(1) ) || ""'"" into :LY_YR, :LY_PD, :LY_WK FROM share.periods WHERE sasdate = date( )-7-364;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_transientpace_wk_v7_aw_load_vAW.sas
" CREATE TABLE otb_ty AS select property_cd AS MARSHA, stay_date, CASE WHEN market_segment IN ( '10', '12', '30', '34', '37', '20', '23', '24', '21') THEN 'NQ' when market_segment IN ( '16') THEN 'Govt' when market_segment IN ( '17', '18', '15') THEN 'SpecCorp' when market_segment IN ( 'GR') THEN 'Group' when market_segment like '5%' THEN 'Contract' when market_segment IN ( '35','38') THEN 'Adv Purch' when market_segment IN ( '25') THEN 'MRewards' ELSE 'Other Trans' END AS Seg, SUM( room_nights) AS RNTY, SUM( rev_net) AS RVTY, SUM( rev_net_us) AS rv_usdTY FROM aw_prxy.Mrdw_fact_otb_seg_extract_pd WHERE acctg_yr=&TY_YR AND acctg_pd=&TY_PD AND acctg_wk=&TY_WK GROUP BY property_cd, stay_date, Seg;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_transientpace_wk_v7_aw_load_vAW.sas
" CREATE TABLE otb_ly AS select property_cd AS MARSHA, stay_date+364 AS stay_date, CASE WHEN market_segment IN ( '10', '12', '30', '34', '37', '20', '23', '24', '21') THEN 'NQ' when market_segment IN ( '16') THEN 'Govt' when market_segment IN ( '17', '18', '15') THEN 'SpecCorp' when market_segment IN ( 'GR') THEN 'Group' when market_segment like '5%' THEN 'Contract' when market_segment IN ( '35','38') THEN 'Adv Purch' when market_segment IN ( '25') THEN 'MRewards' ELSE 'Other Trans' END AS Seg, SUM( room_nights) AS RNLY, SUM( rev_net) AS RVLY , SUM( rev_net_us) AS rv_usdLY FROM aw_prxy.Mrdw_fact_otb_seg_extract_pd WHERE acctg_yr=&LY_YR AND acctg_pd=&LY_PD AND acctg_wk=&LY_WK GROUP BY property_cd, stay_date, seg;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_transientpace_wk_v7_aw_load_vAW.sas
" CREATE TABLE lw_ty AS select a.property_cd AS MARSHA, stay_dt AS stay_date, CASE WHEN CURR_MARKET_PREFIX_CD IN ( '10', '12', '30', '34', '37', '20', '23', '24', '21') THEN 'NQ' when CURR_MARKET_PREFIX_CD IN ( '16') THEN 'Govt' when CURR_MARKET_PREFIX_CD IN ( '17', '18', '15') THEN 'SpecCorp' when CURR_MARKET_CATEGORY_NM='GROUP' THEN 'Group' when CURR_MARKET_CATEGORY_NM='CONTRACT/OWNERS' THEN 'Contract' when CURR_MARKET_PREFIX_CD IN ( '35','38') THEN 'Adv Purch' when CURR_MARKET_PREFIX_CD IN ( '25') THEN 'MRewards' ELSE 'Other Trans' END AS Seg, SUM( CURR_ROOMS_QTY) AS rnTY, SUM( CURR_ROOM_REV_USD_SUB_AMT) AS rv_usdTY, SUM( CURR_ROOM_REV_Local_SUB_AMT) AS RVTY FROM AW_TGT_BUS_DBO.MRDW_BI_FACT_STAYED_PAID_NOS a WHERE stay_year=&ty_yr. AND NOS_STATUS_CD='A' AND stay_dt between &ty_lwbeg. AND &ty_lwend. GROUP BY a.property_cd, stay_dt, CASE WHEN CURR_MARKET_PREFIX_CD IN ( '10', '12', '30', '34', '37', '20', '23', '24', '21') THEN 'NQ' when CURR_MARKET_PREFIX_CD IN ( '16') THEN 'Govt' when CURR_MARKET_PREFIX_CD IN ( '17', '18', '15') THEN 'SpecCorp' when CURR_MARKET_CATEGORY_NM='GROUP' THEN 'Group' when CURR_MARKET_CATEGORY_NM='CONTRACT/OWNERS' THEN 'Contract' when CURR_MARKET_PREFIX_CD IN ( '35','38') THEN 'Adv Purch' when CURR_MARKET_PREFIX_CD IN ( '25') THEN 'MRewards' ELSE 'Other Trans' end;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_transientpace_wk_v7_aw_load_vAW.sas
" CREATE TABLE lw_ly AS select a.property_cd AS MARSHA, stay_dt+364 AS stay_date, CASE WHEN CURR_MARKET_PREFIX_CD IN ( '10', '12', '30', '34', '37', '20', '23', '24', '21') THEN 'NQ' when CURR_MARKET_PREFIX_CD IN ( '16') THEN 'Govt' when CURR_MARKET_PREFIX_CD IN ( '17', '18', '15') THEN 'SpecCorp' when CURR_MARKET_CATEGORY_NM='GROUP' THEN 'Group' when CURR_MARKET_CATEGORY_NM='CONTRACT/OWNERS' THEN 'Contract' when CURR_MARKET_PREFIX_CD IN ( '35','38') THEN 'Adv Purch' when CURR_MARKET_PREFIX_CD IN ( '25') THEN 'MRewards' ELSE 'Other Trans' END AS Seg, SUM( CURR_ROOMS_QTY) AS rnLY, SUM( CURR_ROOM_REV_Local_SUB_AMT) AS RVLY, SUM( CURR_ROOM_REV_USD_SUB_AMT) AS rv_usdLY FROM mrdw_fact_agg_dr_rev_analysis WHERE stay_year=&ly_yr. AND NOS_STATUS_CD='A' AND stay_dt between &ly_lwbeg. AND &ly_lwend. GROUP BY a.property_cd, stay_dt, CASE WHEN CURR_MARKET_PREFIX_CD IN ( '10', '12', '30', '34', '37', '20', '23', '24', '21') THEN 'NQ' when CURR_MARKET_PREFIX_CD IN ( '16') THEN 'Govt' when CURR_MARKET_PREFIX_CD IN ( '17', '18', '15') THEN 'SpecCorp' when CURR_MARKET_CATEGORY_NM='GROUP' THEN 'Group' when CURR_MARKET_CATEGORY_NM='CONTRACT/OWNERS' THEN 'Contract' when CURR_MARKET_PREFIX_CD IN ( '35','38') THEN 'Adv Purch' when CURR_MARKET_PREFIX_CD IN ( '25') THEN 'MRewards' ELSE 'Other Trans' end;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_transientpace_wk_v7_aw_load_vAW.sas
 CREATE TABLE ty AS ( SELECT  *  FROM lw_ty UNION ALL SELECT  *  FROM otb_ty);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_transientpace_wk_v7_aw_load_vAW.sas
 CREATE TABLE ly AS ( SELECT  *  FROM lw_ly UNION ALL SELECT  *  FROM otb_ly);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_transientpace_wk_v7_aw_load_vAW.sas
" CREATE TABLE fx  AS select marsha, SUM( rv_usdty)/SUM( rvty) AS FX_Sell_to_USD FROM ty GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_transientpace_wk_v7_aw_load_vAW.sas
CREATE INDEX marsha ON fx(marsha);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_transientpace_wk_v7_aw_load_vAW.sas
"SELECT * FROM ty ORDER BY marsha ,stay_date ,seg;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_transientpace_wk_v7_aw_load_vAW.sas
"SELECT * FROM ly ORDER BY marsha ,stay_date ,seg;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_transientpace_wk_v7_aw_load_vAW.sas
 select min( stay_date) into :firstDt FROM otb_ty;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_transientpace_wk_v7_aw_load_vAW.sas
" CREATE TABLE group_stly_wk AS select hotel_cd AS marsha, mdy( stay_mon,stay_day,stay_yr) AS stay_date, SUM( ty_rm) AS rnTY, SUM( ty_rev) AS rvty, SUM( ly_rm_dow) AS rnly, SUM( ly_rev_dow) AS rvly FROM tomc.euro_pace WHERE calculated stay_date >= &firstdt. GROUP BY marsha, stay_date ORDER BY marsha, stay_date;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_transientpace_wk_v7_aw_load_vAW.sas
 CREATE TABLE bbmarsha AS select distinct marsha FROM group_stly_wk;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_transientpace_wk_v7_aw_load_vAW.sas
" CREATE TABLE group_stly_wk2 AS select b.*, ""Group"" AS Seg, a.* FROM bbdates b LEFT JOIN group_stly_wk a ON b.marsha=a.marsha AND b.stay_date=a.stay_date;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_transientpace_wk_v7_aw_load_vAW.sas
CREATE TABLE plu AS ( SELECT  *  FROM share.plu );,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_transientpace_wk_v7_aw_load_vAW.sas
CREATE INDEX marsha ON plu(marsha);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_transientpace_wk_v7_aw_load_vAW.sas
"CREATE TABLE eupace.Total_Pace_&ExtractDt AS ( SELECT  *  , rvty * fx_sell_to_usd AS rv_usdty , rvly * fx_sell_to_usd AS rv_usdly , &ExtractDt AS snapshot_dt  FROM group_stly_wk2 A JOIN in=c) B ON  A.marsha =  B.marsha AND  A.stay_date =  B.stay_date AND  A.Seg =  B.Seg JOIN eupace.total_pace_&LastFile C ON  B.marsha =  C.marsha AND  B.stay_date =  C.stay_date AND  B.Seg =  C.Seg WHERE _iorc_=%sysrc( _dsenom)) AS ( SELECT marsha, mf, acomp, region , rvty * fx_sell_to_usd AS rv_usdty , rvly * fx_sell_to_usd AS rv_usdly , &ExtractDt AS snapshot_dt  FROM plu A JOIN key=marsha B ON  A.marsha =  B.marsha AND  A.stay_date =  B.stay_date AND  A.Seg =  B.Seg JOIN / C ON  B.marsha =  C.marsha AND  B.stay_date =  C.stay_date AND  B.Seg =  C.Seg JOIN unique D ON  C.marsha =  D.marsha AND  C.stay_date =  D.stay_date AND  C.Seg =  D.Seg WHERE _iorc_=%sysrc( _dsenom));",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_transientpace_wk_v7_aw_load_vAW.sas
ALTER TABLE eupace.Total_Pace_&ExtractDt DROP COLUMN fx_sell_to_usd ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_transientpace_wk_v7_aw_load_vAW.sas
DROP TABLE AWPROD.Weekly_Pace_Intl_STG;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_transientpace_wk_v7_aw_load_vAW.sas
 CREATE TABLE sourceData AS select * FROM eupace.Total_Pace_&ExtractDt whereEXTRACT(YEAR FROM stay_date)>2018;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_transientpace_wk_v7_aw_load_vAW.sas
" CREATE TABLE SASDSEXcon AS ( SELECT Name, vFormat, VARNUM , compress( LENGTH ) AS x , CASE WHEN  compress( FORMAT)=""$""  THEN compress( ""Varchar( ""||x||"")"" ) WHEN   type=2  THEN compress( ""Varchar( ""||x||"")"" ) WHEN   compress( FORMAT)=""DATE""  THEN ""Date"" ELSE ""Integer"" END AS vFormat FROM temp );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_transientpace_wk_v7_aw_load_vAW.sas
SELECT * FROM SASDSEXcon ORDER BY VARNUM;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_transientpace_wk_v7_aw_load_vAW.sas
   TRUNCATE table AW_REV_DBO.Weekly_Pace_Intl_EU ) by odbc ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_transientpace_wk_v7_aw_load_vAW.sas
    INSERT INTO AW_REV_DBO.Weekly_Pace_Intl_EU Select * FROM AW_REV_DBO.Weekly_Pace_Intl_STG WHERE region='R_' ) by odbc ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_transientpace_wk_v7_aw_load_vAW.sas
   TRUNCATE table AW_REV_DBO.Weekly_Pace_Intl_AP ) by odbc ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_transientpace_wk_v7_aw_load_vAW.sas
"    INSERT INTO AW_REV_DBO.Weekly_Pace_Intl_AP Select * FROM AW_REV_DBO.Weekly_Pace_Intl_STG WHERE region IN ( 'EC','GC' )  ) by odbc ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_transientpace_wk_v7_aw_load_vAW.sas
   TRUNCATE table AW_REV_DBO.Weekly_Pace_Intl_MEA ) by odbc ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_transientpace_wk_v7_aw_load_vAW.sas
"    INSERT INTO AW_REV_DBO.Weekly_Pace_Intl_MEA Select * FROM AW_REV_DBO.Weekly_Pace_Intl_STG WHERE region IN ( 'ML','AF' )  ) by odbc ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_transientpace_wk_v7_aw_load_vAW.sas
   TRUNCATE table AW_REV_DBO.Weekly_Pace_Intl_S ) by odbc ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_transientpace_wk_v7_aw_load_vAW.sas
    INSERT INTO AW_REV_DBO.Weekly_Pace_Intl_S Select * FROM AW_REV_DBO.Weekly_Pace_Intl_STG WHERE region IN ( 'S_' )  ) by odbc ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_transientpace_wk_v7_aw_load_vAW.sas
   TRUNCATE table AW_REV_DBO.Weekly_Pace_Intl_US ) by odbc ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_transientpace_wk_v7_aw_load_vAW.sas
"    INSERT INTO AW_REV_DBO.Weekly_Pace_Intl_US Select * FROM AW_REV_DBO.Weekly_Pace_Intl_STG WHERE region IN ( 'E_','W_','C_' )  ) by odbc ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_transientpace_wk_v7_aw_load_vAW.sas
    INSERT INTO AW_REV_DBO.WEEKLY_PACE_EUROPE_HIST Select * FROM AW_REV_DBO.Weekly_Pace_Intl_EU ) by odbc ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_transientpace_wk_v7_aw_load_vAW.sas
    INSERT INTO AW_REV_DBO.WEEKLY_PACE_AP_HIST Select * FROM AW_REV_DBO.Weekly_Pace_Intl_AP ) by odbc ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_transientpace_wk_v7_aw_load_vAW.sas
    INSERT INTO AW_REV_DBO.WEEKLY_PACE_MEA_HIST Select * FROM AW_REV_DBO.Weekly_Pace_Intl_MEA ) by odbc ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_transientpace_wk_v7_aw_load_vAW.sas
    INSERT INTO AW_REV_DBO.WEEKLY_PACE_CALA_HIST Select * FROM AW_REV_DBO.Weekly_Pace_Intl_S ) by odbc ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_transientpace_wk_v7_aw_load_vAW.sas
    INSERT INTO AW_REV_DBO.WEEKLY_PACE_US_CA_HIST Select * FROM AW_REV_DBO.Weekly_Pace_Intl_US ) by odbc ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_transientpace_wk_v7_aw_load_vAW.sas
 CREATE TABLE prop_misw AS  (  SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER A  ) ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Transient_Pace_for_Threat_Assessment.sas
" CREATE TABLE trn_otb_ty AS select snapshot_dt AS asof_week, property_cd, stay_dt , CASE WHEN weekday( stay_dt) IN ( 6,7) THEN 'WE' ELSE 'WD' END AS wdwe , SEG_CD AS market_segment, SUM( ROOM_NIGHTS) AS rn, SUM( REVENUE) AS rev FROM AWPROD2.MRDW_FACT_SEG10_DETAILS a, prop_misw prop WHERE a.property_cd = prop.marsha AND prop.region IN ( 'E_', 'W_', 'C_') AND snapshot_dt = &otbAsOfDate AND a.stay_dt >= &OTBstrTY AND a.stay_dt <= &OTBendTY GROUP BY snapshot_dt, property_cd, stay_dt, seg_cd, calculated wdwe ORDER BY snapshot_dt, property_cd, stay_dt, seg_cd, calculated wdwe;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Transient_Pace_for_Threat_Assessment.sas
" CREATE TABLE trn_otb_date AS select snapshot_dt +365 AS asof_week, property_cd, stay_dt+365 AS stay_dt format date9. , CASE WHEN weekday( stay_dt) IN ( 6,7) THEN 'WE' ELSE 'WD' END AS wdwe , SEG_CD AS market_segment, SUM( ROOM_NIGHTS) AS rn, SUM( REVENUE) AS rv FROM AWPROD2.MRDW_FACT_SEG10_DETAILS a, prop_misw prop WHERE a.property_cd = prop.marsha AND prop.region IN ( 'E_', 'W_', 'C_') AND snapshot_dt = &otbAsOfDate -365 AND a.stay_dt >= &OTBstrTY -365 AND a.stay_dt <= &OTBendTY -365 GROUP BY snapshot_dt, property_cd, stay_dt, seg_cd, calculated wdwe ORDER BY snapshot_dt, property_cd, stay_dt, seg_cd, calculated wdwe;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Transient_Pace_for_Threat_Assessment.sas
" CREATE TABLE stella3_trn_otb AS select coalesce( a.property_cd,b.property_cd) AS marsha ,coalesce( a.stay_dt, b.stay_dt) AS stay_date ,coalesce( a.market_segment,b.market_segment) AS mcpref ,coalesce( a.wdwe,b.wdwe) AS wdwe ,a.rn AS rn ,a.rev AS rv ,b.rn AS rn_ly ,b.rv AS rv_ly FROM trn_otb_ty AS a full JOIN trn_otb_date AS b ON a.property_cd = b.property_cd AND a.stay_dt=b.stay_dt AND a.market_segment = b.market_segment AND a.wdwe = b.wdwe ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Transient_Pace_for_Threat_Assessment.sas
" CREATE TABLE allotb AS select marsha,EXTRACT(YEAR FROM stay_date) AS yr,EXTRACT(MONTH FROM stay_date) AS mn, SUM( rn) AS rn, SUM( rv) AS rv, SUM( rn_ly) AS rn_ly, SUM( rv_ly) AS rv_ly FROM stella3_trn_otb WHERE 100 * calculated yr + calculated mn IN ( 201909, 201910, 201911) AND mcpref IN ( 'PRG', 'BEN', 'ECH', 'SPC', 'WHS', 'GOV', 'WES', 'AAA', 'PKG', 'ADV', 'SRD','MAR', 'RWD','ODS') GROUP BY marsha, yr, mn;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Transient_Pace_for_Threat_Assessment.sas
" CREATE TABLE allotb2 AS select marsha , SUM( rv) AS rv , SUM( rv_ly) AS rv_ly , calculated rv/calculated rv_ly - 1 AS transpace_revchg FROM allotb GROUP BY marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Transient_Pace_for_Threat_Assessment.sas
 CREATE TABLE prop_master AS  (  SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER  ) ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Gross_Tracking.sas
" CREATE TABLE rateoffer2 AS select distinct Property_Code, Rate_Program, Product_Code, Rate_Offer_Name FROM rateoffer;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Gross_Tracking.sas
"SELECT DISTINCT * FROM rateoffer2 ORDER BY property_code ,rate_program;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Gross_Tracking.sas
" CREATE TABLE weekender_loaded AS select distinct property_code, 'Yes' AS Weekender_Loaded FROM rateoffer2 WHERE Product_Code='P04747';",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Gross_Tracking.sas
 CREATE TABLE rawgross AS  (  SELECT * FROM AW_TGT_BUS_DBO.MRDW_BI_FACT_Gross_NOS WHERE stay_year = 2019 fetch first 1000 rows only  ) ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Gross_Tracking.sas
" CREATE TABLE grossdata_package AS  (  SELECT property_cd AS marsha, CONFO_CREATE_DT AS date_dt, RATE_PGM_CD , CASE WHEN STAY_DOW IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' END AS wdwe , SUM( ROOMS_QTY) AS rn, SUM( ROOM_REV_CUSD_SUB_AMT) AS room_rv , SUM( TOT_REV_CUSD_SUB_AMT) AS tot_rv FROM AW_TGT_BUS_DBO.MRDW_BI_FACT_Gross_NOS A WHERE stay_year >= 2018 AND CONFO_CREATE_DT >= '2018-01-01' AND CONFO_CREATE_DT <= &enddt. AND a.MARKET_PREFIX_CD IN ( '21', '23', '24') AND BRAND_CD='CY' AND DIVISION_TXT='AMERICAS' GROUP BY property_cd, CONFO_CREATE_DT, RATE_PGM_CD , CASE WHEN STAY_DOW IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' end  ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Gross_Tracking.sas
" CREATE TABLE grossdata_allpkg AS  (  SELECT property_cd AS marsha, CONFO_CREATE_DT AS date_dt , CASE WHEN STAY_DOW IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' END AS wdwe , SUM( ROOMS_QTY) AS pkg_rn, SUM( ROOM_REV_CUSD_SUB_AMT) AS pkg_rv FROM AW_TGT_BUS_DBO.MRDW_BI_FACT_Gross_NOS A WHERE stay_year >= 2018 AND CONFO_CREATE_DT >= '2018-01-01' AND CONFO_CREATE_DT <= &enddt. AND a.MARKET_PREFIX_CD IN ( '21', '23', '24') AND BRAND_CD='CY' AND DIVISION_TXT='AMERICAS' GROUP BY property_cd, CONFO_CREATE_DT , CASE WHEN STAY_DOW IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' end  ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Gross_Tracking.sas
" CREATE TABLE grossdata_NQ AS  (  SELECT property_cd AS marsha, CONFO_CREATE_DT AS date_dt , CASE WHEN STAY_DOW IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' END AS wdwe , SUM( ROOMS_QTY) AS nq_rn, SUM( ROOM_REV_CUSD_SUB_AMT) AS nq_rv FROM AW_TGT_BUS_DBO.MRDW_BI_FACT_Gross_NOS A WHERE stay_year >= 2018 AND CONFO_CREATE_DT >= '2018-01-01' AND CONFO_CREATE_DT <= &enddt. AND a.MARKET_PREFIX_CD IN ( '10', '12', '30', '34', '37', '20', '22', '23', '24', '21') AND BRAND_CD='CY' AND DIVISION_TXT='AMERICAS' GROUP BY property_cd, CONFO_CREATE_DT , CASE WHEN STAY_DOW IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' end  ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Gross_Tracking.sas
" CREATE TABLE grossdata_TR AS  (  SELECT property_cd AS marsha, CONFO_CREATE_DT AS date_dt , CASE WHEN STAY_DOW IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' END AS wdwe , SUM( ROOMS_QTY) AS tr_rn, SUM( ROOM_REV_CUSD_SUB_AMT) AS tr_rv FROM AW_TGT_BUS_DBO.MRDW_BI_FACT_Gross_NOS A WHERE stay_year >= 2018 AND CONFO_CREATE_DT >= '2018-01-01' AND CONFO_CREATE_DT <= &enddt. AND BRAND_CD='CY' AND DIVISION_TXT='AMERICAS' AND MARKET_CATEGORY_NM='TRANSIENT/RENTALS' GROUP BY property_cd, CONFO_CREATE_DT , CASE WHEN STAY_DOW IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' end  ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Gross_Tracking.sas
" CREATE TABLE grossdata_all AS  (  SELECT property_cd AS marsha, CONFO_CREATE_DT AS date_dt , CASE WHEN STAY_DOW IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' END AS wdwe , SUM( ROOMS_QTY) AS all_rn, SUM( ROOM_REV_CUSD_SUB_AMT) AS all_rv FROM AW_TGT_BUS_DBO.MRDW_BI_FACT_Gross_NOS A WHERE stay_year >= 2018 AND CONFO_CREATE_DT >= '2018-01-01' AND CONFO_CREATE_DT <= &enddt. AND BRAND_CD='CY' AND DIVISION_TXT='AMERICAS' GROUP BY property_cd, CONFO_CREATE_DT , CASE WHEN STAY_DOW IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' end  ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Gross_Tracking.sas
" CREATE TABLE weekender AS select a.marsha, a.date_dt, a.wdwe , SUM( rn) AS rn, SUM( room_rv) AS room_rv , SUM( tot_rv) AS tot_rv FROM grossdata_package AS a INNER JOIN rateoffer2 AS b ON a.marsha=b.property_code AND a.rate_pgm_cd=b.rate_program WHERE b.Product_Code='P04747' GROUP BY a.marsha, a.date_dt, a.wdwe;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Gross_Tracking.sas
" CREATE TABLE allgross AS select a.*, b.rn, b.room_rv, b.tot_rv , c.pkg_rn, c.pkg_rv , d.nq_rn, d.nq_rv , e.tr_rn, e.tr_rv FROM grossdata_all AS a LEFT JOIN weekender AS b ON a.marsha=b.marsha AND a.date_dt=b.date_dt AND a.wdwe=b.wdwe LEFT JOIN grossdata_allpkg AS c ON a.marsha=c.marsha AND a.date_dt=c.date_dt AND a.wdwe=c.wdwe LEFT JOIN grossdata_NQ AS d ON a.marsha=d.marsha AND a.date_dt=d.date_dt AND a.wdwe=d.wdwe LEFT JOIN grossdata_TR AS e ON a.marsha=e.marsha AND a.date_dt=e.date_dt AND a.wdwe=e.wdwe;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Gross_Tracking.sas
" CREATE TABLE allgross2 AS select coalesce( a.marsha,b.marsha) AS marsha , coalesce( a.date_dt,b.date_dt+364) AS book_date format date9. , coalesce( a.wdwe,b.wdwe) AS wdwe , a.all_rn, a.all_rv , a.rn, a.room_rv, a.tot_rv , a.pkg_rn, a.pkg_rv , a.nq_rn, a.nq_rv , a.tr_rn, a.tr_rv , b.all_rn AS all_rn_ly, b.all_rv AS all_rv_ly , b.rn AS rn_ly, b.room_rv AS room_rv_ly, b.tot_rv AS tot_rv_ly , b.pkg_rn AS pkg_rn_ly, b.pkg_rv AS pkg_rv_ly , b.nq_rn AS nq_rn_ly, b.nq_rv AS nq_rv_ly , b.tr_rn AS tr_rn_ly, b.tr_rv AS tr_rv_ly FROM allgross AS a full JOIN allgross AS b ON a.marsha=b.marsha AND a.date_dt=b.date_dt+364 AND a.wdwe=b.wdwe;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Gross_Tracking.sas
" CREATE TABLE allgross3 AS select marsha, wdwe , CASE WHEN book_date >= '01jan2019'd AND book_date <= '22jun2019'd THEN 'Jan 1 - Jun 22, 2019' when book_date >= '23jun2019'd AND book_date <= '03aug2019'd THEN 'Jun 23 - Aug 3, 2019' when book_date >= '04aug2019'd AND book_date <= '10aug2019'd THEN 'August 4 - 10, 2019' when book_date >= '11aug2019'd AND book_date <= &enddt2. THEN &dt_rng. END AS timeframe , SUM( all_rn) AS all_rn, SUM( all_rv) AS all_rv , SUM( rn) AS weekender_rn, SUM( room_rv) AS weekender_rm_rv , SUM( tot_rv) AS weekender_tot_rv , SUM( pkg_rn) AS pkg_rn, SUM( pkg_rv) AS pkg_rv , SUM( nq_rn) AS nq_rn, SUM( nq_rv) AS nq_rv , SUM( tr_rn) AS tr_rn, SUM( tr_rv) AS tr_rv , SUM( all_rn_ly) AS all_rn_ly, SUM( all_rv_ly) AS all_rv_ly , SUM( rn_ly) AS weekender_rn_ly, SUM( room_rv_ly) AS weekender_rm_rv_ly , SUM( tot_rv_ly) AS weekender_tot_rv_ly , SUM( pkg_rn_ly) AS pkg_rn_ly, SUM( pkg_rv_ly) AS pkg_rv_ly , SUM( nq_rn_ly) AS nq_rn_ly, SUM( nq_rv_ly) AS nq_rv_ly , SUM( tr_rn_ly) AS tr_rn_ly, SUM( tr_rv_ly) AS tr_rv_ly FROM allgross2 WHERE book_date>= '01jan2019'd AND book_date <= &enddt2. GROUP BY marsha, wdwe, calculated timeframe;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Gross_Tracking.sas
" CREATE TABLE allgross4 AS select b.marsha, b.brnd, b.region, b.division, b.country, b.str_market, b.hotel_name, b.hcap, b.acomp, b.mf, b.hCLASS , b.state, b.country, b.owner, b.manager, b.avp, b.rd, b.adrm, b.GRMRS_HOTEL, b.GRMRS_REVMGR, b.GRMRS_TMLDR , c.weekender_loaded , a.* FROM allgross3 AS a INNER JOIN prop_master AS b ON a.marsha=b.marsha LEFT JOIN weekender_loaded AS c ON a.marsha=c.property_code WHERE b.brnd='CY' AND b.region IN ( 'E_', 'W_', 'C_' ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Gross_Tracking.sas
" CREATE TABLE rn_tw AS select distinct marsha, 'Yes' AS This_Week_Production FROM allgross4 WHERE timeframe=&dt_rng. AND weekender_rn>0;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Gross_Tracking.sas
" CREATE TABLE allgross5 AS select a.*, b.this_week_production FROM allgross4 AS a LEFT JOIN rn_tw AS b ON a.marsha=b.marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Gross_Tracking.sas
 CREATE TABLE wkender.rn_tw AS ( SELECT  *  FROM rn_tw );,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Gross_Tracking.sas
 CREATE TABLE wkender.allgross4 AS ( SELECT  *  FROM allgross4 );,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Gross_Tracking.sas
 CREATE TABLE wkender.allgross3 AS ( SELECT  *  FROM allgross3 );,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Gross_Tracking.sas
 CREATE TABLE wkender.allgross2 AS ( SELECT  *  FROM allgross2 );,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Gross_Tracking.sas
 CREATE TABLE wkender.allgross AS ( SELECT  *  FROM allgross );,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Gross_Tracking.sas
 CREATE TABLE prop_master AS  (  SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER  ) ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Std_and_Pd.sas
" CREATE TABLE rateoffer2 AS select distinct Property_Code, Rate_Program, Product_Code, Rate_Offer_Name FROM rateoffer;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Std_and_Pd.sas
"SELECT DISTINCT * FROM rateoffer2 ORDER BY property_code ,rate_program;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Std_and_Pd.sas
" CREATE TABLE weekender_loaded AS select distinct property_code, 'Yes' AS Weekender_Loaded FROM rateoffer2 WHERE Product_Code='P04747';",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Std_and_Pd.sas
 CREATE TABLE rawstdpd AS  (  SELECT * FROM AW_TGT_BUS_DBO.MRDW_BI_FACT_STAYED_PAID_NOS WHERE stay_year = 2019 fetch first 1000 rows only  ) ;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Std_and_Pd.sas
" CREATE TABLE stdpddata_package AS  (  SELECT property_cd AS marsha, STAY_DT AS date_dt, CURR_RATE_PGM_CD , CASE WHEN STAY_DOW IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' END AS wdwe , SUM( CURR_ROOMS_QTY) AS rn, SUM( CURR_ROOM_REV_CUSD_SUB_AMT) AS room_rv , SUM( CURR_TOT_REV_CUSD_SUB_AMT) AS tot_rv FROM AW_TGT_BUS_DBO.MRDW_BI_FACT_STAYED_PAID_NOS A WHERE stay_year >= 2018 AND STAY_DT >= '2018-01-01' AND STAY_DT <= &enddt. AND a.CURR_MARKET_PREFIX_CD IN ( '21', '23', '24') AND BRAND_CD='CY' AND DIVISION_TXT='AMERICAS' AND nos_status_cd = 'A' GROUP BY property_cd, STAY_DT, CURR_RATE_PGM_CD , CASE WHEN STAY_DOW IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' end  ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Std_and_Pd.sas
" CREATE TABLE stdpddata_allpkg AS  (  SELECT property_cd AS marsha, STAY_DT AS date_dt , CASE WHEN STAY_DOW IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' END AS wdwe , SUM( CURR_ROOMS_QTY) AS pkg_rn, SUM( CURR_ROOM_REV_CUSD_SUB_AMT) AS pkg_rv FROM AW_TGT_BUS_DBO.MRDW_BI_FACT_STAYED_PAID_NOS A WHERE stay_year >= 2018 AND STAY_DT >= '2018-01-01' AND STAY_DT <= &enddt. AND a.CURR_MARKET_PREFIX_CD IN ( '37','21', '23', '24') AND BRAND_CD='CY' AND DIVISION_TXT='AMERICAS' AND nos_status_cd = 'A' GROUP BY property_cd, STAY_DT , CASE WHEN STAY_DOW IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' end  ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Std_and_Pd.sas
" CREATE TABLE stdpddata_NQ AS  (  SELECT property_cd AS marsha, STAY_DT AS date_dt , CASE WHEN STAY_DOW IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' END AS wdwe , SUM( CURR_ROOMS_QTY) AS nq_rn, SUM( CURR_ROOM_REV_CUSD_SUB_AMT) AS nq_rv FROM AW_TGT_BUS_DBO.MRDW_BI_FACT_STAYED_PAID_NOS A WHERE stay_year >= 2018 AND STAY_DT >= '2018-01-01' AND STAY_DT <= &enddt. AND a.CURR_MARKET_PREFIX_CD IN ( '10', '12', '30', '34', '37', '20', '22', '23', '24', '21') AND BRAND_CD='CY' AND DIVISION_TXT='AMERICAS' AND nos_status_cd = 'A' GROUP BY property_cd, STAY_DT , CASE WHEN STAY_DOW IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' end  ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Std_and_Pd.sas
" CREATE TABLE stdpddata_TR AS  (  SELECT property_cd AS marsha, STAY_DT AS date_dt , CASE WHEN STAY_DOW IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' END AS wdwe , SUM( CURR_ROOMS_QTY) AS tr_rn, SUM( CURR_ROOM_REV_CUSD_SUB_AMT) AS tr_rv FROM AW_TGT_BUS_DBO.MRDW_BI_FACT_STAYED_PAID_NOS A WHERE stay_year >= 2018 AND STAY_DT >= '2018-01-01' AND STAY_DT <= &enddt. AND BRAND_CD='CY' AND DIVISION_TXT='AMERICAS' AND CURR_MARKET_CATEGORY_NM='TRANSIENT/RENTALS' AND nos_status_cd = 'A' GROUP BY property_cd, STAY_DT , CASE WHEN STAY_DOW IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' end  ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Std_and_Pd.sas
" CREATE TABLE stdpddata_all AS  (  SELECT property_cd AS marsha, STAY_DT AS date_dt , CASE WHEN STAY_DOW IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' END AS wdwe , SUM( CURR_ROOMS_QTY) AS all_rn, SUM( CURR_ROOM_REV_CUSD_SUB_AMT) AS all_rv FROM AW_TGT_BUS_DBO.MRDW_BI_FACT_STAYED_PAID_NOS A WHERE stay_year >= 2018 AND STAY_DT >= '2018-01-01' AND STAY_DT <= &enddt. AND BRAND_CD='CY' AND DIVISION_TXT='AMERICAS' AND nos_status_cd = 'A' GROUP BY property_cd, STAY_DT , CASE WHEN STAY_DOW IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' end  ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Std_and_Pd.sas
" CREATE TABLE weekender AS select a.marsha, a.date_dt, a.wdwe , SUM( rn) AS we_rn, SUM( room_rv) AS we_room_rv , SUM( tot_rv) AS we_tot_rv FROM stdpddata_package AS a INNER JOIN rateoffer2 AS b ON a.marsha=b.property_code AND a.CURR_RATE_PGM_CD=b.rate_program WHERE b.Product_Code='P04747' GROUP BY a.marsha, a.date_dt, a.wdwe;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Std_and_Pd.sas
" CREATE TABLE stdpddata_2KED AS  (  SELECT property_cd AS marsha, STAY_DT AS date_dt , CASE WHEN STAY_DOW IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' END AS wdwe , SUM( CURR_ROOMS_QTY) AS TKED_rn, SUM( CURR_ROOM_REV_CUSD_SUB_AMT) AS TKED_rv , SUM( CURR_TOT_REV_CUSD_SUB_AMT) AS TKED_tot_rv FROM AW_TGT_BUS_DBO.MRDW_BI_FACT_STAYED_PAID_NOS A WHERE stay_year >= 2019 AND a.stay_month > 6 AND STAY_DT >= &C2k_beg. AND STAY_DT <= &enddt. AND a.curr_rate_pgm_cd IN ( 'UBUN','UBUP','UBUR','UBUS','UBUT','UBUX') AND BRAND_CD='CY' AND DIVISION_TXT='AMERICAS' AND nos_status_cd = 'A' GROUP BY property_cd, STAY_DT , CASE WHEN STAY_DOW IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' end  ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Std_and_Pd.sas
" CREATE TABLE allstdpd AS select a.*, b.we_rn, b.we_room_rv, b.we_tot_rv , c.pkg_rn, c.pkg_rv , d.nq_rn, d.nq_rv , e.tr_rn, e.tr_rv , f.TKED_RN, f.TKED_RV, f.TKED_TOT_RV FROM stdpddata_all AS a LEFT JOIN weekender AS b ON a.marsha=b.marsha AND a.date_dt=b.date_dt AND a.wdwe=b.wdwe LEFT JOIN stdpddata_allpkg AS c ON a.marsha=c.marsha AND a.date_dt=c.date_dt AND a.wdwe=c.wdwe LEFT JOIN stdpddata_NQ AS d ON a.marsha=d.marsha AND a.date_dt=d.date_dt AND a.wdwe=d.wdwe LEFT JOIN stdpddata_TR AS e ON a.marsha=e.marsha AND a.date_dt=e.date_dt AND a.wdwe=e.wdwe LEFT JOIN stdpddata_2KED AS f ON a.marsha=f.marsha AND a.date_dt=f.date_dt AND a.wdwe=f.wdwe ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Std_and_Pd.sas
" CREATE TABLE allstdpd2 AS select coalesce( a.marsha,b.marsha) AS marsha , coalesce( a.date_dt,b.date_dt+364) AS book_date format date9. , coalesce( a.wdwe,b.wdwe) AS wdwe , a.all_rn, a.all_rv , a.we_rn, a.we_room_rv, a.we_tot_rv , a.pkg_rn, a.pkg_rv , a.nq_rn, a.nq_rv , a.tr_rn, a.tr_rv , a.TKED_RN, a.TKED_RV, a.TKED_TOT_RV , b.all_rn AS all_rn_ly, b.all_rv AS all_rv_ly , b.pkg_rn AS pkg_rn_ly, b.pkg_rv AS pkg_rv_ly , b.nq_rn AS nq_rn_ly, b.nq_rv AS nq_rv_ly , b.tr_rn AS tr_rn_ly, b.tr_rv AS tr_rv_ly FROM allstdpd AS a full JOIN allstdpd AS b ON a.marsha=b.marsha AND a.date_dt=b.date_dt+364 AND a.wdwe=b.wdwe;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Std_and_Pd.sas
" CREATE TABLE allstdpd3 AS select marsha, wdwe , CASE WHEN book_date >= '01jan2019'd AND book_date <= '22jun2019'd THEN 'Jan 1 - Jun 22, 2019' when book_date >= '23jun2019'd AND book_date <= '03aug2019'd THEN 'Jun 23 - Aug 3, 2019' when book_date >= '04aug2019'd AND book_date <= '10aug2019'd THEN 'August 4 - 10, 2019' when book_date >= '11aug2019'd AND book_date <= &enddt2. THEN &dt_rng. END AS timeframe , SUM( all_rn) AS all_rn, SUM( all_rv) AS all_rv , SUM( we_rn) AS weekender_rn, SUM( we_room_rv) AS weekender_rm_rv , SUM( we_tot_rv) AS weekender_tot_rv , SUM( pkg_rn) AS pkg_rn, SUM( pkg_rv) AS pkg_rv , SUM( nq_rn) AS nq_rn, SUM( nq_rv) AS nq_rv , SUM( tr_rn) AS tr_rn, SUM( tr_rv) AS tr_rv , SUM( TKED_RN) AS TKED_rn, SUM( TKED_RV) AS TKED_rm_rv,SUM( TKED_TOT_RV) AS TKED_tot_rv , SUM( all_rn_ly) AS all_rn_ly, SUM( all_rv_ly) AS all_rv_ly , SUM( pkg_rn_ly) AS pkg_rn_ly, SUM( pkg_rv_ly) AS pkg_rv_ly , SUM( nq_rn_ly) AS nq_rn_ly, SUM( nq_rv_ly) AS nq_rv_ly , SUM( tr_rn_ly) AS tr_rn_ly, SUM( tr_rv_ly) AS tr_rv_ly FROM allstdpd2 WHERE book_date>= '01jan2019'd AND book_date <= &enddt2. GROUP BY marsha, wdwe, calculated timeframe;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Std_and_Pd.sas
" CREATE TABLE allstdpd4 AS select b.marsha, b.brnd, b.region, b.division, b.country, b.str_market, b.hotel_name, b.hcap, b.acomp, b.mf, b.hCLASS , b.state, b.country, b.owner, b.manager, b.avp, b.rd, b.adrm, b.GRMRS_HOTEL, b.GRMRS_REVMGR, b.GRMRS_TMLDR , c.weekender_loaded , a.* FROM allstdpd3 AS a INNER JOIN prop_master AS b ON a.marsha=b.marsha LEFT JOIN weekender_loaded AS c ON a.marsha=c.property_code WHERE b.brnd='CY' AND b.region IN ( 'E_', 'W_', 'C_' ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Std_and_Pd.sas
" CREATE TABLE rn_tw AS select distinct marsha, 'Yes' AS This_Week_Production FROM allstdpd4 WHERE timeframe=&dt_rng. AND weekender_rn>0;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Std_and_Pd.sas
" CREATE TABLE allstdpd5 AS select a.*, b.this_week_production FROM allstdpd4 AS a LEFT JOIN rn_tw AS b ON a.marsha=b.marsha;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Std_and_Pd.sas
 CREATE TABLE allstdpd6_twonly AS ( SELECT  *  FROM allstdpd5  WHERE This_Week_Production='Yes');,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Std_and_Pd.sas
"SELECT * FROM allstdpd6_twonly ORDER BY MARSHA ,BRND ,REGION ,DIVISION ,COUNTRY ,STR_MARKET ,HOTEL_NAME ,HCAP ,ACOMP ,MF ,HCLASS ,STATE ,OWNER ,MANAGER ,AVP ,RD ,ADRM ,GRMRS_HOTEL ,GRMRS_REVMGR ,GRMRS_TMLDR ,Weekender_Loaded ,wdwe ,timeframe ,This_Week_Production;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Std_and_Pd.sas
"CREATE TABLE wkender.allstdpd6_twonly_sum AS (SELECT STATE, OWNER, MANAGER, AVP, RD, ADRM, GRMRS_HOTEL, GRMRS_REVMGR, GRMRS_TMLDR, Weekender_Loaded, SUM(all_rn) AS all_rn, SUM(all_rv) AS all_rv, SUM(weekender_rn) AS weekender_rn, SUM(weekender_rm_rv) AS weekender_rm_rv, SUM(weekender_tot_rv) AS weekender_tot_rv, SUM(TKED_rn) AS TKED_rn, SUM(TKED_rm_rv) AS TKED_rm_rv, SUM(TKED_tot_rv) AS TKED_tot_rv, SUM(pkg_rn) AS pkg_rn, SUM(pkg_rv) AS pkg_rv, SUM(nq_rn) AS nq_rn, SUM(nq_rv) AS nq_rv, SUM(tr_rn) AS tr_rn, SUM(tr_rv) AS tr_rv, SUM(all_rn_ly) AS all_rn_ly, SUM(all_rv_ly) AS all_rv_ly, SUM(pkg_rn_ly) AS pkg_rn_ly, SUM(pkg_rv_ly) AS pkg_rv_ly, SUM(nq_rn_ly) AS nq_rn_ly, SUM(nq_rv_ly) AS nq_rv_ly, SUM(tr_rn_ly) AS tr_rn_ly, SUM(tr_rv_ly) AS tr_rv_ly FROM allstdpd6_twonly WHERE timeframe='Aug 11 - Dec 7, 2019' AND wdwe='WE' GROUP BY STATE, OWNER, MANAGER, AVP, RD, ADRM, GRMRS_HOTEL, GRMRS_REVMGR, GRMRS_TMLDR, Weekender_Loaded );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Std_and_Pd.sas
" CREATE TABLE wkender.allstdpd6_twonly_sum AS ( SELECT  * , CASE WHEN  all_rn=' '  THEN 0 END AS all_rn, CASE WHEN  all_rv=' '  THEN 0 END AS all_rv, CASE WHEN  weekender_rn=' '  THEN 0 END AS weekender_rn, CASE WHEN  weekender_rm_rv=' '  THEN 0 END AS weekender_rm_rv, CASE WHEN  weekender_tot_rv=' '  THEN 0 END AS weekender_tot_rv, CASE WHEN  TKED_rn=' '  THEN 0 END AS TKED_rn, CASE WHEN  TKED_rm_rv=' '  THEN 0 END AS TKED_rm_rv, CASE WHEN  TKED_tot_rv=' '  THEN 0 END AS TKED_tot_rv, CASE WHEN  pkg_rn=' '  THEN 0 END AS pkg_rn, CASE WHEN  pkg_rv=' '  THEN 0 END AS pkg_rv, CASE WHEN  nq_rn=' '  THEN 0 END AS nq_rn, CASE WHEN  nq_rv=' '  THEN 0 END AS nq_rv, CASE WHEN  tr_rn=' '  THEN 0 END AS tr_rn, CASE WHEN  tr_rv=' '  THEN 0 END AS tr_rv, CASE WHEN  all_rn_ly=' '  THEN 0 END AS all_rn_ly, CASE WHEN  all_rv_ly=' '  THEN 0 END AS all_rv_ly, CASE WHEN  pkg_rn_ly=' '  THEN 0 END AS pkg_rn_ly, CASE WHEN  pkg_rv_ly=' '  THEN 0 END AS pkg_rv_ly, CASE WHEN  nq_rn_ly=' '  THEN 0 END AS nq_rn_ly, CASE WHEN  nq_rv_ly=' '  THEN 0 END AS nq_rv_ly, CASE WHEN  tr_rn_ly=' '  THEN 0 END AS tr_rn_ly, CASE WHEN  tr_rv_ly=' '  THEN 0 END AS tr_rv_ly, CASE WHEN  all_rn_ly=0  THEN 0 ELSE ( all_rn-all_rn_ly)/all_rn_ly END AS all_rn_yoy, CASE WHEN  all_rv_ly=0  THEN 0 ELSE ( all_rv-all_rv_ly)/all_rv_ly END AS all_rv_yoy, CASE WHEN  pkg_rn_ly=0  THEN 0 ELSE ( pkg_rn-pkg_rn_ly)/pkg_rn_ly END AS pkg_rn_yoy, CASE WHEN  pkg_rv_ly=0  THEN 0 ELSE ( pkg_rv-pkg_rv_ly)/pkg_rv_ly END AS pkg_rev_yoy, CASE WHEN  nq_rn_ly=0  THEN 0 ELSE ( nq_rn-nq_rn_ly)/nq_rn_ly END AS nqrn_yoy, CASE WHEN  nq_rv_ly=0  THEN 0 ELSE ( nq_rv-nq_rv_ly)/nq_rv_ly END AS nqrv_yoy, CASE WHEN  tr_rn_ly=0  THEN 0 ELSE ( tr_rn-tr_rn_ly)/tr_rn_ly END AS trrn_yoy, CASE WHEN  tr_rv_ly=0  THEN 0 ELSE ( tr_rv-tr_rv_ly)/tr_rv_ly END AS trrv_yoy, CASE WHEN  tr_rn=0  THEN 0 ELSE ( weekender_rn/tr_rn ) END AS wkend_rn_trmix, CASE WHEN  tr_rn=0  THEN 0 ELSE ( TKED_rn/tr_rn ) END AS TKED_rn_trmix FROM wkender.allstdpd6_twonly_sum  WHERE acomp='Y');",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Std_and_Pd.sas
" CREATE TABLE wkender.RPI_MONTH_WE2019_0910 AS  (  select a.MARSHA, b.BRND, b.MF, a.TIMEF, a.SCOMP , b.HOTEL_NAME, b.REGION, b.DIVISION_NAME, b.REGION_NAME, b.DOMINT, a.YRMNTH, a.asof_yrmo, a.DATA_CATEGORY, a.DATA_TYPE , MARAVAIL, MARSOLD, MARREV, MKTAVAIL, MKTSOLD, MKTREV, MARAVAILLY, MARSOLDLY, MARREVLY, MKTAVAILLY, MKTSOLDLY, MKTREVLY FROM AW_CMP_DBO.STR_MONTHLY_DATA AS a LEFT JOIN AW_TGT_BUS_DBO.PROPERTY_MASTER_HIST AS b ON a.MARSHA = b.MARSHA AND a.asof_yrmo = b.asof_yrmo WHERE a.TIMEF in( 'MONTH_WE') AND a.DATA_CATEGORY='WDWE_Rooms' AND b.BRND in( 'CY') AND a.CURRENCY_TYPE = 'Constant USD' AND a.YRMNTH in( 201909,201910) AND a.asof_yrmo = 201910  ) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Std_and_Pd.sas
SELECT * FROM wkender.RPI_MONTH_WE2019_0910 ORDER BY MARSHA;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Std_and_Pd.sas
"CREATE TABLE wkender.RPI_MONTH_WE2019_0910_sum AS (SELECT MARSHA, SUM(MARAVAIL) AS MARAVAIL, SUM(MARSOLD) AS MARSOLD, SUM(MARREV) AS MARREV, SUM(MKTAVAIL) AS MKTAVAIL, SUM(MKTSOLD) AS MKTSOLD, SUM(MKTREV) AS MKTREV, SUM(MARAVAILLY) AS MARAVAILLY, SUM(MARSOLDLY) AS MARSOLDLY, SUM(MARREVLY) AS MARREVLY, SUM(MKTAVAILLY) AS MKTAVAILLY, SUM(MKTSOLDLY) AS MKTSOLDLY, SUM(MKTREVLY) AS MKTREVLY FROM wkender.RPI_MONTH_WE2019_0910 GROUP BY MARSHA );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Std_and_Pd.sas
" CREATE TABLE wkender.RPI_MONTH_WE2019_0910_sumst AS ( SELECT  *  , ( MARSOLD/MARAVAIL ) AS OCC , ( MARREV/MARSOLD ) AS ADR , ( MARREV/MARAVAIL ) AS REVPAR , ( MKTSOLD/MKTAVAIL ) AS MOCC , ( MKTREV/MKTSOLD ) AS MADR , ( MKTREV/MKTAVAIL ) AS MREVPAR , ( REVPAR/MREVPAR)*100 AS RPI , ( ADR/MADR)*100 AS AI , ( OCC/MOCC)*100 AS OI , ( MARSOLDLY/MARAVAILLY ) AS OCCLY , ( MARREVLY/MARSOLDLY ) AS ADRLY , ( MARREVLY/MARAVAILLY ) AS REVPARLY , ( MKTSOLDLY/MKTAVAILLY ) AS MOCCLY , ( MKTREVLY/MKTSOLDLY ) AS MADRLY , ( MKTREVLY/MKTAVAILLY ) AS MREVPARLY , ( REVPARLY/MREVPARLY)*100 AS RPILY , ( ADRLY/MADRLY)*100 AS AILY , ( OCCLY/MOCCLY)*100 AS OILY , RPI-RPILY AS RPI_ptchg , RPI_ptchg/RPILY AS RPI_pctchg , AI-AILY AS AI_ptchg , AI_ptchg/AILY AS AI_pctchg , OI-OILY AS OI_ptchg , OI_ptchg/OILY AS OI_pctchg  FROM wkender.RPI_MONTH_WE2019_0910_sum );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Std_and_Pd.sas
" CREATE TABLE wkender.RPI_MONTH_WE2019_0910_sumfin AS ( SELECT MARSHA, SCOMP, YRMNTH, DATA_TYPE, RPI, RPI_ptchg, RPI_pctchg, AI_pctchg, OI_pctchg FROM wkender.RPI_MONTH_WE2019_0910_sumst );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Std_and_Pd.sas
SELECT * FROM wkender.allstdpd6_twonly_sum ORDER BY marsha;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Std_and_Pd.sas
SELECT * FROM wkender.RPI_MONTH_WE2019_0910_sumfin ORDER BY marsha;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Std_and_Pd.sas
SELECT * FROM wkender.RPI_MONTH_WE2019_0910_sum ORDER BY marsha;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Std_and_Pd.sas
" CREATE TABLE wkender.final_marsha AS ( SELECT  * , CASE WHEN  b  THEN 'Y' ELSE 'N' END AS stdta FROM wkender.allstdpd6_twonly_sum A LEFT JOIN wkender.RPI_MONTH_WE2019_0910_sumfin B ON  A.marsha =  B.marsha whereacomp='Y' AND scomp='Y');",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Std_and_Pd.sas
"CREATE TABLE wkender.final_marsha_TKEDrnk AS SELECT * FROM ( SELECT *, RANK() OVER (  ORDER BY TKED_rn_trmix DESC  ) AS TKED_rn_trmixRank FROM wkender.final_marsha_TKEDrnk);",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Std_and_Pd.sas
" CREATE TABLE wkender.final_marsha_TKEDrnk AS ( SELECT marsha, TKED_rn_trmixRank FROM wkender.final_marsha_TKEDrnk1 );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Std_and_Pd.sas
"CREATE TABLE wkender.final_marsha_WErnk AS SELECT * FROM ( SELECT *, RANK() OVER (  ORDER BY wkend_rn_trmix DESC  ) AS wkend_rn_trmixRank FROM wkender.final_marsha_WErnk);",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Std_and_Pd.sas
SELECT DISTINCT * FROM wkender.final_marsha_TKEDrnk ORDER BY marsha;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Std_and_Pd.sas
SELECT DISTINCT * FROM wkender.final_marsha_WErnk ORDER BY marsha;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Std_and_Pd.sas
 CREATE TABLE wkender.final_marsha_WETKEDrnk AS ( SELECT  *  FROM wkender.final_marsha_WErnk A INNER JOIN wkender.final_marsha_TKEDrnk B ON  A.marsha =  B.marsha);,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Std_and_Pd.sas
"CREATE TABLE ""\\Hdqmdm1fpcl4v1\lodg-revmgmt\RM EAnlys\MikeS\Weekender\final_marsha_WETKEDrnk.TXT"" AS ( SELECT * FROM wkender.final_marsha_WETKEDrnk) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Std_and_Pd.sas
" CREATE TABLE wkender.final4agg AS ( SELECT  * , CASE WHEN  b  THEN 'Y' ELSE 'N' END AS stdta FROM wkender.final_marsha_WETKEDrnk A LEFT JOIN wkender.RPI_MONTH_WE2019_0910_sum B ON  A.marsha =  B.marsha);",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Std_and_Pd.sas
SELECT * FROM wkender.final4agg ORDER BY TKED_rn_trmixRank;,MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Std_and_Pd.sas
"CREATE TABLE wkender.TKED_rn_trmxRnksum AS (SELECT TKED_rn_trmixRank, _freq_ AS hotcnt, SUM(all_rn) AS all_rn, SUM(all_rv) AS all_rv, SUM(weekender_rn) AS weekender_rn, SUM(weekender_rm_rv) AS weekender_rm_rv, SUM(weekender_tot_rv) AS weekender_tot_rv, SUM(TKED_rn) AS TKED_rn, SUM(TKED_rm_rv) AS TKED_rm_rv, SUM(TKED_tot_rv) AS TKED_tot_rv, SUM(pkg_rn) AS pkg_rn, SUM(pkg_rv) AS pkg_rv, SUM(nq_rn) AS nq_rn, SUM(nq_rv) AS nq_rv, SUM(tr_rn) AS tr_rn, SUM(tr_rv) AS tr_rv, SUM(all_rn_ly) AS all_rn_ly, SUM(all_rv_ly) AS all_rv_ly, SUM(pkg_rn_ly) AS pkg_rn_ly, SUM(pkg_rv_ly) AS pkg_rv_ly, SUM(nq_rn_ly) AS nq_rn_ly, SUM(nq_rv_ly) AS nq_rv_ly, SUM(tr_rn_ly) AS tr_rn_ly, SUM(tr_rv_ly) AS tr_rv_ly, SUM(MARAVAIL) AS MARAVAIL, SUM(MARSOLD) AS MARSOLD, SUM(MARREV) AS MARREV, SUM(MKTAVAIL) AS MKTAVAIL, SUM(MKTSOLD) AS MKTSOLD, SUM(MKTREV) AS MKTREV, SUM(MARAVAILLY) AS MARAVAILLY, SUM(MARSOLDLY) AS MARSOLDLY, SUM(MARREVLY) AS MARREVLY, SUM(MKTAVAILLY) AS MKTAVAILLY, SUM(MKTSOLDLY) AS MKTSOLDLY, SUM(MKTREVLY) AS MKTREVLY FROM wkender.final4agg GROUP BY TKED_rn_trmixRank );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Std_and_Pd.sas
" CREATE TABLE wkender.TKED_rn_trmxRnksum AS ( SELECT  *  , ( MARSOLD/MARAVAIL ) AS OCC , ( MARREV/MARSOLD ) AS ADR , ( MARREV/MARAVAIL ) AS REVPAR , ( MKTSOLD/MKTAVAIL ) AS MOCC , ( MKTREV/MKTSOLD ) AS MADR , ( MKTREV/MKTAVAIL ) AS MREVPAR , ( REVPAR/MREVPAR)*100 AS RPI , ( ADR/MADR)*100 AS AI , ( OCC/MOCC)*100 AS OI , ( MARSOLDLY/MARAVAILLY ) AS OCCLY , ( MARREVLY/MARSOLDLY ) AS ADRLY , ( MARREVLY/MARAVAILLY ) AS REVPARLY , ( MKTSOLDLY/MKTAVAILLY ) AS MOCCLY , ( MKTREVLY/MKTSOLDLY ) AS MADRLY , ( MKTREVLY/MKTAVAILLY ) AS MREVPARLY , ( REVPARLY/MREVPARLY)*100 AS RPILY , ( ADRLY/MADRLY)*100 AS AILY , ( OCCLY/MOCCLY)*100 AS OILY , RPI-RPILY AS RPI_ptchg , RPI_ptchg/RPILY AS RPI_pctchg , AI-AILY AS AI_ptchg , AI_ptchg/AILY AS AI_pctchg , OI-OILY AS OI_ptchg , OI_ptchg/OILY AS OI_pctchg , CASE WHEN  tr_rn=0  THEN 0 ELSE ( weekender_rn/tr_rn ) WHEN  tr_rn=0  THEN 0 ELSE ( weekender_rn/tr_rn ) END AS wkend_rn_trmix, CASE WHEN  all_rn=' '  THEN 0 END AS all_rn, CASE WHEN  all_rv=' '  THEN 0 END AS all_rv, CASE WHEN  weekender_rn=' '  THEN 0 END AS weekender_rn, CASE WHEN  weekender_rm_rv=' '  THEN 0 END AS weekender_rm_rv, CASE WHEN  weekender_tot_rv=' '  THEN 0 END AS weekender_tot_rv, CASE WHEN  pkg_rn=' '  THEN 0 END AS pkg_rn, CASE WHEN  pkg_rv=' '  THEN 0 END AS pkg_rv, CASE WHEN  nq_rn=' '  THEN 0 END AS nq_rn, CASE WHEN  nq_rv=' '  THEN 0 END AS nq_rv, CASE WHEN  tr_rn=' '  THEN 0 END AS tr_rn, CASE WHEN  tr_rv=' '  THEN 0 END AS tr_rv, CASE WHEN  all_rn_ly=' '  THEN 0 END AS all_rn_ly, CASE WHEN  all_rv_ly=' '  THEN 0 END AS all_rv_ly, CASE WHEN  weekender_rn_ly=' '  THEN 0 END AS weekender_rn_ly, CASE WHEN  weekender_rm_rv_ly=' '  THEN 0 END AS weekender_rm_rv_ly, CASE WHEN  weekender_tot_rv_ly=' '  THEN 0 END AS weekender_tot_rv_ly, CASE WHEN  pkg_rn_ly=' '  THEN 0 END AS pkg_rn_ly, CASE WHEN  pkg_rv_ly=' '  THEN 0 END AS pkg_rv_ly, CASE WHEN  nq_rn_ly=' '  THEN 0 END AS nq_rn_ly, CASE WHEN  nq_rv_ly=' '  THEN 0 END AS nq_rv_ly, CASE WHEN  tr_rn_ly=' '  THEN 0 END AS tr_rn_ly, CASE WHEN  tr_rv_ly=' '  THEN 0 END AS tr_rv_ly, CASE WHEN  all_rn_ly=0  THEN 0 ELSE ( all_rn-all_rn_ly)/all_rn_ly END AS all_rn_yoy, CASE WHEN  all_rv_ly=0  THEN 0 ELSE ( all_rv-all_rv_ly)/all_rv_ly END AS all_rv_yoy, CASE WHEN  weekender_rn_ly=0  THEN 0 ELSE ( weekender_rn-weekender_rn_ly)/weekender_rn_ly END AS wkendrn_yoy, CASE WHEN  weekender_rm_rv_ly=0  THEN 0 ELSE ( weekender_rm_rv-weekender_rm_rv_ly)/weekender_rm_rv_ly END AS wkendrmrev_yoy, CASE WHEN  weekender_tot_rv_ly=0  THEN 0 ELSE ( weekender_tot_rv-weekender_tot_rv_ly)/weekender_tot_rv_ly END AS wkendtotrev_yoy, CASE WHEN  pkg_rn_ly=0  THEN 0 ELSE ( pkg_rn-pkg_rn_ly)/pkg_rn_ly END AS pkg_rn_yoy, CASE WHEN  pkg_rv_ly=0  THEN 0 ELSE ( pkg_rv-pkg_rv_ly)/pkg_rv_ly END AS pkg_rev_yoy, CASE WHEN  nq_rn_ly=0  THEN 0 ELSE ( nq_rn-nq_rn_ly)/nq_rn_ly END AS nqrn_yoy, CASE WHEN  nq_rv_ly=0  THEN 0 ELSE ( nq_rv-nq_rv_ly)/nq_rv_ly END AS nqrv_yoy, CASE WHEN  tr_rn_ly=0  THEN 0 ELSE ( tr_rn-tr_rn_ly)/tr_rn_ly END AS trrn_yoy, CASE WHEN  tr_rv_ly=0  THEN 0 ELSE ( tr_rv-tr_rv_ly)/tr_rv_ly END AS trrv_yoy FROM wkender.TKED_rn_trmxRnksum );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Std_and_Pd.sas
"CREATE TABLE ""\\Hdqmdm1fpcl4v1\lodg-revmgmt\RM EAnlys\MikeS\Weekender\final_trmix_rnksum..TXT"" AS ( SELECT * FROM wkender.final_trmix_rnksum) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Std_and_Pd.sas
"CREATE TABLE wkender.final_trmix_rnksum_subgrp AS (SELECT _freq_ AS hotcnt, SUM(all_rn) AS all_rn, SUM(all_rv) AS all_rv, SUM(weekender_rn) AS weekender_rn, SUM(weekender_rm_rv) AS weekender_rm_rv, SUM(weekender_tot_rv) AS weekender_tot_rv, SUM(TKED_rn) AS TKED_rn, SUM(TKED_rm_rv) AS TKED_rm_rv, SUM(TKED_tot_rv) AS TKED_tot_rv, SUM(pkg_rn) AS pkg_rn, SUM(pkg_rv) AS pkg_rv, SUM(nq_rn) AS nq_rn, SUM(nq_rv) AS nq_rv, SUM(tr_rn) AS tr_rn, SUM(tr_rv) AS tr_rv, SUM(all_rn_ly) AS all_rn_ly, SUM(all_rv_ly) AS all_rv_ly, SUM(pkg_rn_ly) AS pkg_rn_ly, SUM(pkg_rv_ly) AS pkg_rv_ly, SUM(nq_rn_ly) AS nq_rn_ly, SUM(nq_rv_ly) AS nq_rv_ly, SUM(tr_rn_ly) AS tr_rn_ly, SUM(tr_rv_ly) AS tr_rv_ly, SUM(MARAVAIL) AS MARAVAIL, SUM(MARSOLD) AS MARSOLD, SUM(MARREV) AS MARREV, SUM(MKTAVAIL) AS MKTAVAIL, SUM(MKTSOLD) AS MKTSOLD, SUM(MKTREV) AS MKTREV, SUM(MARAVAILLY) AS MARAVAILLY, SUM(MARSOLDLY) AS MARSOLDLY, SUM(MARREVLY) AS MARREVLY, SUM(MKTAVAILLY) AS MKTAVAILLY, SUM(MKTSOLDLY) AS MKTSOLDLY, SUM(MKTREVLY) AS MKTREVLY FROM wkender.final4agg WHERE wkend_rn_trmixRank in( 1,2,3,4 ) );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Std_and_Pd.sas
" CREATE TABLE wkender.final_trmix_rnksum_subgrp AS ( SELECT  *  , ( MARSOLD/MARAVAIL ) AS OCC , ( MARREV/MARSOLD ) AS ADR , ( MARREV/MARAVAIL ) AS REVPAR , ( MKTSOLD/MKTAVAIL ) AS MOCC , ( MKTREV/MKTSOLD ) AS MADR , ( MKTREV/MKTAVAIL ) AS MREVPAR , ( REVPAR/MREVPAR)*100 AS RPI , ( ADR/MADR)*100 AS AI , ( OCC/MOCC)*100 AS OI , ( MARSOLDLY/MARAVAILLY ) AS OCCLY , ( MARREVLY/MARSOLDLY ) AS ADRLY , ( MARREVLY/MARAVAILLY ) AS REVPARLY , ( MKTSOLDLY/MKTAVAILLY ) AS MOCCLY , ( MKTREVLY/MKTSOLDLY ) AS MADRLY , ( MKTREVLY/MKTAVAILLY ) AS MREVPARLY , ( REVPARLY/MREVPARLY)*100 AS RPILY , ( ADRLY/MADRLY)*100 AS AILY , ( OCCLY/MOCCLY)*100 AS OILY , RPI-RPILY AS RPI_ptchg , RPI_ptchg/RPILY AS RPI_pctchg , AI-AILY AS AI_ptchg , AI_ptchg/AILY AS AI_pctchg , OI-OILY AS OI_ptchg , OI_ptchg/OILY AS OI_pctchg , CASE WHEN  tr_rn=0  THEN 0 ELSE ( weekender_rn/tr_rn ) WHEN  tr_rn=0  THEN 0 ELSE ( weekender_rn/tr_rn ) END AS wkend_rn_trmix, CASE WHEN  all_rn=' '  THEN 0 END AS all_rn, CASE WHEN  all_rv=' '  THEN 0 END AS all_rv, CASE WHEN  weekender_rn=' '  THEN 0 END AS weekender_rn, CASE WHEN  weekender_rm_rv=' '  THEN 0 END AS weekender_rm_rv, CASE WHEN  weekender_tot_rv=' '  THEN 0 END AS weekender_tot_rv, CASE WHEN  pkg_rn=' '  THEN 0 END AS pkg_rn, CASE WHEN  pkg_rv=' '  THEN 0 END AS pkg_rv, CASE WHEN  nq_rn=' '  THEN 0 END AS nq_rn, CASE WHEN  nq_rv=' '  THEN 0 END AS nq_rv, CASE WHEN  tr_rn=' '  THEN 0 END AS tr_rn, CASE WHEN  tr_rv=' '  THEN 0 END AS tr_rv, CASE WHEN  all_rn_ly=' '  THEN 0 END AS all_rn_ly, CASE WHEN  all_rv_ly=' '  THEN 0 END AS all_rv_ly, CASE WHEN  weekender_rn_ly=' '  THEN 0 END AS weekender_rn_ly, CASE WHEN  weekender_rm_rv_ly=' '  THEN 0 END AS weekender_rm_rv_ly, CASE WHEN  weekender_tot_rv_ly=' '  THEN 0 END AS weekender_tot_rv_ly, CASE WHEN  pkg_rn_ly=' '  THEN 0 END AS pkg_rn_ly, CASE WHEN  pkg_rv_ly=' '  THEN 0 END AS pkg_rv_ly, CASE WHEN  nq_rn_ly=' '  THEN 0 END AS nq_rn_ly, CASE WHEN  nq_rv_ly=' '  THEN 0 END AS nq_rv_ly, CASE WHEN  tr_rn_ly=' '  THEN 0 END AS tr_rn_ly, CASE WHEN  tr_rv_ly=' '  THEN 0 END AS tr_rv_ly, CASE WHEN  all_rn_ly=0  THEN 0 ELSE ( all_rn-all_rn_ly)/all_rn_ly END AS all_rn_yoy, CASE WHEN  all_rv_ly=0  THEN 0 ELSE ( all_rv-all_rv_ly)/all_rv_ly END AS all_rv_yoy, CASE WHEN  weekender_rn_ly=0  THEN 0 ELSE ( weekender_rn-weekender_rn_ly)/weekender_rn_ly END AS wkendrn_yoy, CASE WHEN  weekender_rm_rv_ly=0  THEN 0 ELSE ( weekender_rm_rv-weekender_rm_rv_ly)/weekender_rm_rv_ly END AS wkendrmrev_yoy, CASE WHEN  weekender_tot_rv_ly=0  THEN 0 ELSE ( weekender_tot_rv-weekender_tot_rv_ly)/weekender_tot_rv_ly END AS wkendtotrev_yoy, CASE WHEN  pkg_rn_ly=0  THEN 0 ELSE ( pkg_rn-pkg_rn_ly)/pkg_rn_ly END AS pkg_rn_yoy, CASE WHEN  pkg_rv_ly=0  THEN 0 ELSE ( pkg_rv-pkg_rv_ly)/pkg_rv_ly END AS pkg_rev_yoy, CASE WHEN  nq_rn_ly=0  THEN 0 ELSE ( nq_rn-nq_rn_ly)/nq_rn_ly END AS nqrn_yoy, CASE WHEN  nq_rv_ly=0  THEN 0 ELSE ( nq_rv-nq_rv_ly)/nq_rv_ly END AS nqrv_yoy, CASE WHEN  tr_rn_ly=0  THEN 0 ELSE ( tr_rn-tr_rn_ly)/tr_rn_ly END AS trrn_yoy, CASE WHEN  tr_rv_ly=0  THEN 0 ELSE ( tr_rv-tr_rv_ly)/tr_rv_ly END AS trrv_yoy FROM wkender.final_trmix_rnksum_subgrp );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Std_and_Pd.sas
"CREATE TABLE ""\\Hdqmdm1fpcl4v1\lodg-revmgmt\RM EAnlys\MikeS\Weekender\final_trmix_rnksum_subgrp.TXT"" AS ( SELECT * FROM wkender.final_trmix_rnksum_subgrp) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Std_and_Pd.sas
"CREATE TABLE wkender.final_trmix_rnksum_subgrp2 AS (SELECT _freq_ AS hotcnt, SUM(all_rn) AS all_rn, SUM(all_rv) AS all_rv, SUM(weekender_rn) AS weekender_rn, SUM(weekender_rm_rv) AS weekender_rm_rv, SUM(weekender_tot_rv) AS weekender_tot_rv, SUM(TKED_rn) AS TKED_rn, SUM(TKED_rm_rv) AS TKED_rm_rv, SUM(TKED_tot_rv) AS TKED_tot_rv, SUM(pkg_rn) AS pkg_rn, SUM(pkg_rv) AS pkg_rv, SUM(nq_rn) AS nq_rn, SUM(nq_rv) AS nq_rv, SUM(tr_rn) AS tr_rn, SUM(tr_rv) AS tr_rv, SUM(all_rn_ly) AS all_rn_ly, SUM(all_rv_ly) AS all_rv_ly, SUM(pkg_rn_ly) AS pkg_rn_ly, SUM(pkg_rv_ly) AS pkg_rv_ly, SUM(nq_rn_ly) AS nq_rn_ly, SUM(nq_rv_ly) AS nq_rv_ly, SUM(tr_rn_ly) AS tr_rn_ly, SUM(tr_rv_ly) AS tr_rv_ly, SUM(MARAVAIL) AS MARAVAIL, SUM(MARSOLD) AS MARSOLD, SUM(MARREV) AS MARREV, SUM(MKTAVAIL) AS MKTAVAIL, SUM(MKTSOLD) AS MKTSOLD, SUM(MKTREV) AS MKTREV, SUM(MARAVAILLY) AS MARAVAILLY, SUM(MARSOLDLY) AS MARSOLDLY, SUM(MARREVLY) AS MARREVLY, SUM(MKTAVAILLY) AS MKTAVAILLY, SUM(MKTSOLDLY) AS MKTSOLDLY, SUM(MKTREVLY) AS MKTREVLY FROM wkender.final4agg WHERE wkend_rn_trmixRank in( 1,2 ) );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Std_and_Pd.sas
" CREATE TABLE wkender.final_trmix_rnksum_subgrp2 AS ( SELECT  *  , ( MARSOLD/MARAVAIL ) AS OCC , ( MARREV/MARSOLD ) AS ADR , ( MARREV/MARAVAIL ) AS REVPAR , ( MKTSOLD/MKTAVAIL ) AS MOCC , ( MKTREV/MKTSOLD ) AS MADR , ( MKTREV/MKTAVAIL ) AS MREVPAR , ( REVPAR/MREVPAR)*100 AS RPI , ( ADR/MADR)*100 AS AI , ( OCC/MOCC)*100 AS OI , ( MARSOLDLY/MARAVAILLY ) AS OCCLY , ( MARREVLY/MARSOLDLY ) AS ADRLY , ( MARREVLY/MARAVAILLY ) AS REVPARLY , ( MKTSOLDLY/MKTAVAILLY ) AS MOCCLY , ( MKTREVLY/MKTSOLDLY ) AS MADRLY , ( MKTREVLY/MKTAVAILLY ) AS MREVPARLY , ( REVPARLY/MREVPARLY)*100 AS RPILY , ( ADRLY/MADRLY)*100 AS AILY , ( OCCLY/MOCCLY)*100 AS OILY , RPI-RPILY AS RPI_ptchg , RPI_ptchg/RPILY AS RPI_pctchg , AI-AILY AS AI_ptchg , AI_ptchg/AILY AS AI_pctchg , OI-OILY AS OI_ptchg , OI_ptchg/OILY AS OI_pctchg , CASE WHEN  tr_rn=0  THEN 0 ELSE ( weekender_rn/tr_rn ) WHEN  tr_rn=0  THEN 0 ELSE ( weekender_rn/tr_rn ) END AS wkend_rn_trmix, CASE WHEN  all_rn=' '  THEN 0 END AS all_rn, CASE WHEN  all_rv=' '  THEN 0 END AS all_rv, CASE WHEN  weekender_rn=' '  THEN 0 END AS weekender_rn, CASE WHEN  weekender_rm_rv=' '  THEN 0 END AS weekender_rm_rv, CASE WHEN  weekender_tot_rv=' '  THEN 0 END AS weekender_tot_rv, CASE WHEN  pkg_rn=' '  THEN 0 END AS pkg_rn, CASE WHEN  pkg_rv=' '  THEN 0 END AS pkg_rv, CASE WHEN  nq_rn=' '  THEN 0 END AS nq_rn, CASE WHEN  nq_rv=' '  THEN 0 END AS nq_rv, CASE WHEN  tr_rn=' '  THEN 0 END AS tr_rn, CASE WHEN  tr_rv=' '  THEN 0 END AS tr_rv, CASE WHEN  all_rn_ly=' '  THEN 0 END AS all_rn_ly, CASE WHEN  all_rv_ly=' '  THEN 0 END AS all_rv_ly, CASE WHEN  weekender_rn_ly=' '  THEN 0 END AS weekender_rn_ly, CASE WHEN  weekender_rm_rv_ly=' '  THEN 0 END AS weekender_rm_rv_ly, CASE WHEN  weekender_tot_rv_ly=' '  THEN 0 END AS weekender_tot_rv_ly, CASE WHEN  pkg_rn_ly=' '  THEN 0 END AS pkg_rn_ly, CASE WHEN  pkg_rv_ly=' '  THEN 0 END AS pkg_rv_ly, CASE WHEN  nq_rn_ly=' '  THEN 0 END AS nq_rn_ly, CASE WHEN  nq_rv_ly=' '  THEN 0 END AS nq_rv_ly, CASE WHEN  tr_rn_ly=' '  THEN 0 END AS tr_rn_ly, CASE WHEN  tr_rv_ly=' '  THEN 0 END AS tr_rv_ly, CASE WHEN  all_rn_ly=0  THEN 0 ELSE ( all_rn-all_rn_ly)/all_rn_ly END AS all_rn_yoy, CASE WHEN  all_rv_ly=0  THEN 0 ELSE ( all_rv-all_rv_ly)/all_rv_ly END AS all_rv_yoy, CASE WHEN  weekender_rn_ly=0  THEN 0 ELSE ( weekender_rn-weekender_rn_ly)/weekender_rn_ly END AS wkendrn_yoy, CASE WHEN  weekender_rm_rv_ly=0  THEN 0 ELSE ( weekender_rm_rv-weekender_rm_rv_ly)/weekender_rm_rv_ly END AS wkendrmrev_yoy, CASE WHEN  weekender_tot_rv_ly=0  THEN 0 ELSE ( weekender_tot_rv-weekender_tot_rv_ly)/weekender_tot_rv_ly END AS wkendtotrev_yoy, CASE WHEN  pkg_rn_ly=0  THEN 0 ELSE ( pkg_rn-pkg_rn_ly)/pkg_rn_ly END AS pkg_rn_yoy, CASE WHEN  pkg_rv_ly=0  THEN 0 ELSE ( pkg_rv-pkg_rv_ly)/pkg_rv_ly END AS pkg_rev_yoy, CASE WHEN  nq_rn_ly=0  THEN 0 ELSE ( nq_rn-nq_rn_ly)/nq_rn_ly END AS nqrn_yoy, CASE WHEN  nq_rv_ly=0  THEN 0 ELSE ( nq_rv-nq_rv_ly)/nq_rv_ly END AS nqrv_yoy, CASE WHEN  tr_rn_ly=0  THEN 0 ELSE ( tr_rn-tr_rn_ly)/tr_rn_ly END AS trrn_yoy, CASE WHEN  tr_rv_ly=0  THEN 0 ELSE ( tr_rv-tr_rv_ly)/tr_rv_ly END AS trrv_yoy FROM wkender.final_trmix_rnksum_subgrp2 );",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Std_and_Pd.sas
"CREATE TABLE ""\\Hdqmdm1fpcl4v1\lodg-revmgmt\RM EAnlys\MikeS\Weekender\final_trmix_rnksum_subgrp.TXT"" AS ( SELECT * FROM wkender.final_trmix_rnksum_subgrp2) ;",MDP_Migration_AW_Code_1-10-2020_1709_RM_Topline_Analytics_Weekender_Std_and_Pd.sas
" CREATE TABLE rpg1 AS select distinct ACCOUNT_ID , CASE WHEN SUBSTRING( segment,1,3)='GSO' THEN 'GSO' ELSE 'US Sales' END AS rate_type, RATE_PROG1 AS rtprog FROM acct_dir WHERE RATE_PROG1<>'';",MI vs SPG WS Gross Booking YOY 2019.sas
" CREATE TABLE rpg2 AS select distinct ACCOUNT_ID , CASE WHEN SUBSTRING( segment,1,3)='GSO' THEN 'GSO' ELSE 'US Sales' END AS rate_type, RATE_PROG2 AS rtprog FROM acct_dir WHERE RATE_PROG2<>'';",MI vs SPG WS Gross Booking YOY 2019.sas
" CREATE TABLE rpg3 AS select distinct ACCOUNT_ID , CASE WHEN SUBSTRING( segment,1,3)='GSO' THEN 'GSO' ELSE 'US Sales' END AS rate_type, RATE_PROG3 AS rtprog FROM acct_dir WHERE RATE_PROG3<>'';",MI vs SPG WS Gross Booking YOY 2019.sas
" CREATE TABLE gpprpg1 AS select distinct ACCOUNT_ID, 'GPP' AS rate_type, GPP_RATE_PROG1 AS rtprog FROM acct_dir WHERE GPP_RATE_PROG1<>'';",MI vs SPG WS Gross Booking YOY 2019.sas
" CREATE TABLE gpprpg2 AS select distinct ACCOUNT_ID, 'GPP' AS rate_type, GPP_RATE_PROG2 AS rtprog FROM acct_dir WHERE GPP_RATE_PROG2<>'';",MI vs SPG WS Gross Booking YOY 2019.sas
 CREATE TABLE rtprog AS ( SELECT  *  FROM rpg1 UNION ALL SELECT  *  FROM rpg2 UNION ALL SELECT  *  FROM rpg3 UNION ALL SELECT  *  FROM gpprpg1 UNION ALL SELECT  *  FROM gpprpg2);,MI vs SPG WS Gross Booking YOY 2019.sas
" CREATE TABLE ratedata AS  (  select distinct MRPGM.RPGM, MRO.RATEOFFERNAME FROM mrdw_hppdbo_masterrorerpgm_usm MRPGM INNER JOIN mrdw_hppdbo_masterrorateentity_usm MRE ON MRPGM.MASTERRORATEENTITYID = MRE.MASTERRORATEENTITYID INNER JOIN mrdw_hppdbo_masterrateoffer_usm MRO ON MRE.MASTERRATEOFFERSYSTEMID = MRO.MASTERRATEOFFERSYSTEMID WHERE MRO.completionlevel='P' AND MRO.MASTERRATEOFFERSYSTEMID= ( SELECT MAX( MROM.MASTERRATEOFFERSYSTEMID) FROM mrdw_hppdbo_masterrateoffer_usm MROM WHERE MROM.RATEOFFERID = MRO.RATEOFFERID)  )  ;",MI vs SPG WS Gross Booking YOY 2019.sas
" CREATE TABLE rate_type_data AS select distinct rateoffername, rate_type FROM ratedata AS a INNER JOIN rtprog AS b ON a.rpgm=b.rtprog;",MI vs SPG WS Gross Booking YOY 2019.sas
" CREATE TABLE ratedata2 AS select a.*, b.rate_type FROM ratedata AS a LEFT JOIN rate_type_data AS b ON a.rateoffername=b.rateoffername;",MI vs SPG WS Gross Booking YOY 2019.sas
 CREATE TABLE prop_misw AS  (  SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER_MISW A  ) ;,MI vs SPG WS Gross Booking YOY 2019.sas
 CREATE TABLE cutover AS  (  SELECT * FROM AW_TGT_METADATA_DBO.PROPERTY_PRIMING_SCHEDULE A  ) ;,MI vs SPG WS Gross Booking YOY 2019.sas
" CREATE TABLE gross_res AS  (  SELECT CONFO_CREATE_DT, PROPERTY_CD , CASE WHEN MARKET_PREFIX_CD IN ( '26') THEN 'Wholesale' ELSE MARKET_CATEGORY_NM END AS segment , CHANNEL_AGGREGATE_CD, CHANNEL_DETAIL_CD, ECHANNEL_PARTNER_CD , CASE WHEN MARKET_PREFIX_CD IN ( '17', '18') THEN RATE_PGM_CD ELSE '' END AS RATE_PGM_CD , CASE WHEN MARKET_PREFIX_CD IN ( '17', '18') THEN rate_pgm_txt ELSE '' END AS rate_pgm_txt , ROOM_POOL_CD , SUM( ROOMS_QTY) AS rn, SUM( ROOM_REV_LOCAL_AMT) AS rv, SUM( ROOM_REV_USD_AMT) AS rv_usd FROM AW_TGT_BUS_DBO.MRDW_BI_FACT_GROSS_NOS A WHERE CONFO_CREATE_DT >= '2019-01-01' AND stay_year >= 2019 AND MARKET_PREFIX_CD ='26' GROUP BY CONFO_CREATE_DT, PROPERTY_CD , CASE WHEN MARKET_PREFIX_CD IN ( '26') THEN 'Wholesale' ELSE MARKET_CATEGORY_NM end , CHANNEL_AGGREGATE_CD, CHANNEL_DETAIL_CD, ECHANNEL_PARTNER_CD , CASE WHEN MARKET_PREFIX_CD IN ( '17', '18') THEN RATE_PGM_CD ELSE '' end , CASE WHEN MARKET_PREFIX_CD IN ( '17', '18') THEN rate_pgm_txt ELSE '' end , ROOM_POOL_CD  ) ;",MI vs SPG WS Gross Booking YOY 2019.sas
" CREATE TABLE gross_res_ly AS  (  SELECT add_days( CONFO_CREATE_DT,364) AS confo_create_dt, property_cd , CASE WHEN MARKET_PREFIX_CD IN ( '26') THEN 'Wholesale' ELSE MARKET_CATEGORY_NM END AS segment , CHANNEL_AGGREGATE_CD, CHANNEL_DETAIL_CD, ECHANNEL_PARTNER_CD , CASE WHEN MARKET_PREFIX_CD IN ( '17', '18') THEN RATE_PGM_CD ELSE '' END AS RATE_PGM_CD , CASE WHEN MARKET_PREFIX_CD IN ( '17', '18') THEN rate_pgm_txt ELSE '' END AS rate_pgm_txt , ROOM_POOL_CD , SUM( ROOMS_QTY) AS rn_ly, SUM( ROOM_REV_LOCAL_AMT) AS rv_ly, SUM( ROOM_REV_USD_AMT) AS rv_usd_ly FROM AW_TGT_BUS_DBO.MRDW_BI_FACT_GROSS_NOS A WHERE CONFO_CREATE_DT >= '2018-01-02' AND CONFO_CREATE_DT <= '2018-12-31' AND stay_year >= 2018 AND MARKET_PREFIX_CD ='26' GROUP BY CONFO_CREATE_DT, PROPERTY_CD , CASE WHEN MARKET_PREFIX_CD IN ( '26') THEN 'Wholesale' ELSE MARKET_CATEGORY_NM end , CHANNEL_AGGREGATE_CD, CHANNEL_DETAIL_CD, ECHANNEL_PARTNER_CD , CASE WHEN MARKET_PREFIX_CD IN ( '17', '18') THEN RATE_PGM_CD ELSE '' end , CASE WHEN MARKET_PREFIX_CD IN ( '17', '18') THEN rate_pgm_txt ELSE '' end , ROOM_POOL_CD  ) ;",MI vs SPG WS Gross Booking YOY 2019.sas
"SELECT * FROM gross_res ORDER BY PROPERTY_CD ,SEGMENT ,CHANNEL_AGGREGATE_CD ,CHANNEL_DETAIL_CD ,ECHANNEL_PARTNER_CD ,RATE_PGM_CD ,RATE_PGM_TXT ,ROOM_POOL_CD ,confo_create_dt;",MI vs SPG WS Gross Booking YOY 2019.sas
"SELECT * FROM gross_res_ly ORDER BY PROPERTY_CD ,SEGMENT ,CHANNEL_AGGREGATE_CD ,CHANNEL_DETAIL_CD ,ECHANNEL_PARTNER_CD ,RATE_PGM_CD ,RATE_PGM_TXT ,ROOM_POOL_CD ,confo_create_dt;",MI vs SPG WS Gross Booking YOY 2019.sas
CREATE TABLE gross_res_comb AS ( SELECT  *  FROM gross_res A JOIN gross_res_ly B ON  A.PROPERTY_CD =  B.PROPERTY_CD AND  A.SEGMENT =  B.SEGMENT AND  A.CHANNEL_AGGREGATE_CD =  B.CHANNEL_AGGREGATE_CD AND  A.CHANNEL_DETAIL_CD =  B.CHANNEL_DETAIL_CD AND  A.ECHANNEL_PARTNER_CD =  B.ECHANNEL_PARTNER_CD AND  A.RATE_PGM_CD =  B.RATE_PGM_CD AND  A.RATE_PGM_TXT =  B.RATE_PGM_TXT AND  A.ROOM_POOL_CD =  B.ROOM_POOL_CD AND  A.confo_create_dt =  B.confo_create_dt);,MI vs SPG WS Gross Booking YOY 2019.sas
"ALTER TABLE gross_res_comb DROP COLUMN RATE_PGM_CD ,  RATE_PGM_TXT ;",MI vs SPG WS Gross Booking YOY 2019.sas
CREATE TABLE gross_res_comb_ly AS ( SELECT  *  FROM gross_res_ly A JOIN gross_res_ly_2 B ON  A.PROPERTY_CD =  B.PROPERTY_CD AND  A.SEGMENT =  B.SEGMENT AND  A.CHANNEL_AGGREGATE_CD =  B.CHANNEL_AGGREGATE_CD AND  A.CHANNEL_DETAIL_CD =  B.CHANNEL_DETAIL_CD AND  A.ECHANNEL_PARTNER_CD =  B.ECHANNEL_PARTNER_CD AND  A.RATE_PGM_CD =  B.RATE_PGM_CD AND  A.RATE_PGM_TXT =  B.RATE_PGM_TXT AND  A.ROOM_POOL_CD =  B.ROOM_POOL_CD AND  A.confo_create_dt =  B.confo_create_dt);,MI vs SPG WS Gross Booking YOY 2019.sas
"ALTER TABLE gross_res_comb_ly DROP COLUMN RATE_PGM_CD ,  RATE_PGM_TXT ;",MI vs SPG WS Gross Booking YOY 2019.sas
" CREATE TABLE gross_res_comb2 AS SELECT CONFO_CREATE_DT, PROPERTY_CD, segment , CHANNEL_AGGREGATE_CD, CHANNEL_DETAIL_CD, ECHANNEL_PARTNER_CD, ROOM_POOL_CD , SUM( rn) AS rn, SUM( rv_usd) AS rv_usd , SUM( rn_ly) AS rn_ly, SUM( rv_usd_ly) AS rv_usd_ly FROM gross_res_comb A GROUP BY CONFO_CREATE_DT, PROPERTY_CD, segment , CHANNEL_AGGREGATE_CD, CHANNEL_DETAIL_CD, ECHANNEL_PARTNER_CD, ROOM_POOL_CD;",MI vs SPG WS Gross Booking YOY 2019.sas
" CREATE TABLE temp1 AS ( SELECT  *  , 100*year( CONFO_CREATE_DT)+week( CONFO_CREATE_DT ) AS yrmnwk  FROM gross_res_comb2  WHERE yrmnwk in( 201852 ));",MI vs SPG WS Gross Booking YOY 2019.sas
" CREATE TABLE junk AS select min( confo_create_dt) AS min_date format date9., max( confo_create_dt) AS max_date format date9. FROM gross_res_comb2 WHERE rn > 0 ;",MI vs SPG WS Gross Booking YOY 2019.sas
" CREATE TABLE junk2 AS ( SELECT  *  , 100*year( max_date)+week( max_date ) AS yrmnwk  FROM junk );",MI vs SPG WS Gross Booking YOY 2019.sas
" CREATE TABLE gross_res_comb3 AS select PROPERTY_CD, segment , CHANNEL_AGGREGATE_CD , CASE WHEN CHANNEL_AGGREGATE_CD IN ( 'GDS') THEN CHANNEL_DETAIL_CD when CHANNEL_AGGREGATE_CD IN ( 'eChannel') AND (  index( LOWER( Channel_detail_cd),'ebookers')>0 OR index( LOWER( Channel_detail_cd),'exp -')>0 OR index( LOWER( Channel_detail_cd),'exp aff -')>0 OR index( LOWER( Channel_detail_cd),'expedia') >0 OR index( LOWER( Channel_detail_cd),'hotelclub')>0 OR index( LOWER( Channel_detail_cd),'hotels.com')>0 OR index( LOWER( Channel_detail_cd),'hotwire')>0 OR index( LOWER( Channel_detail_cd),'lodging.com')>0 OR index( LOWER( Channel_detail_cd),'neat travel')>0 OR index( LOWER( Channel_detail_cd),'orbitz')>0 OR index( LOWER( Channel_detail_cd),'site 59.com')>0 OR index( LOWER( Channel_detail_cd),'travelnow.com')>0 OR index( LOWER( Channel_detail_cd),'tbiz travel')>0 OR index( LOWER( Channel_detail_cd),'travelocity')>0 OR index( LOWER( Channel_detail_cd),'venere')>0 OR index( LOWER( Channel_detail_cd),'wotif')>0) THEN 'Expedia Group' when CHANNEL_AGGREGATE_CD IN ( 'eChannel') AND (  index( LOWER( Channel_detail_cd),'ebookers')>0 OR index( LOWER( Channel_detail_cd),'exp -')>0 OR index( LOWER( Channel_detail_cd),'exp aff -')>0 OR index( LOWER( Channel_detail_cd),'expedia') >0 OR index( LOWER( Channel_detail_cd),'hotelclub')>0 OR index( LOWER( Channel_detail_cd),'hotels.com')>0 OR index( LOWER( Channel_detail_cd),'hotwire')>0 OR index( LOWER( Channel_detail_cd),'lodging.com')>0 OR index( LOWER( Channel_detail_cd),'neat travel')>0 OR index( LOWER( Channel_detail_cd),'orbitz')>0 OR index( LOWER( Channel_detail_cd),'site 59.com')>0 OR index( LOWER( Channel_detail_cd),'travelnow.com')>0 OR index( LOWER( Channel_detail_cd),'tbiz travel')>0 OR index( LOWER( Channel_detail_cd),'travelocity')>0 OR index( LOWER( Channel_detail_cd),'venere')>0 OR index( LOWER( Channel_detail_cd),'wotif')>0) THEN 'Expedia Group' when CHANNEL_AGGREGATE_CD IN ( 'eChannel') AND (  index( LOWER( Channel_detail_cd),'agoda direct connect')>0 OR index( LOWER( Channel_detail_cd),'booking.com')>0 OR index( LOWER( Channel_detail_cd),'booking.com direct connect')>0 OR index( LOWER( Channel_detail_cd),'agoda.com')>0 OR index( LOWER( Channel_detail_cd),'priceline')>0 OR index( LOWER( Channel_detail_cd),'priceline - DC')>0 OR index( LOWER( Channel_detail_cd),'priceline.com')>0 OR index( LOWER( Channel_detail_cd),'travelweb')>0) THEN 'Booking Holdings' when CHANNEL_AGGREGATE_CD IN ( 'eChannel') THEN 'Other OTA' ELSE CHANNEL_AGGREGATE_CD END AS channel_detail , d.ACTUAL_CUTOVER_DATE , CASE WHEN d.ACTUAL_CUTOVER_DATE = '18sep2018'd AND CONFO_CREATE_DT-364 >= '22jul2018'd AND CONFO_CREATE_DT-364 <='15sep2018'd THEN '8 Weeks Before' when d.ACTUAL_CUTOVER_DATE = '18sep2018'd AND CONFO_CREATE_DT-364 >= '16sep2018'd AND CONFO_CREATE_DT-364 <='22sep2018'd THEN 'RD1 Week' when d.ACTUAL_CUTOVER_DATE = '18sep2018'd AND CONFO_CREATE_DT-364 >= '23sep2018'd AND CONFO_CREATE_DT-364 <='17nov2018'd THEN '8 Weeks After' when d.ACTUAL_CUTOVER_DATE = '10oct2018'd AND CONFO_CREATE_DT-364 >= '12aug2018'd AND CONFO_CREATE_DT-364 <='06oct018'd THEN '8 Weeks Before' when d.ACTUAL_CUTOVER_DATE = '10oct2018'd AND CONFO_CREATE_DT-364 >= '07oct2018'd AND CONFO_CREATE_DT-364 <='13dec2018'd THEN 'RD1 Week' when d.ACTUAL_CUTOVER_DATE = '10oct2018'd AND CONFO_CREATE_DT-364 >= '14oct2018'd AND CONFO_CREATE_DT-364 <='08dec2018'd THEN '8 Weeks After' when d.ACTUAL_CUTOVER_DATE = '30oct2018'd AND CONFO_CREATE_DT-364 >= '02sep2018'd AND CONFO_CREATE_DT-364 <='27oct2018'd THEN '8 Weeks Before' when d.ACTUAL_CUTOVER_DATE = '30oct2018'd AND CONFO_CREATE_DT-364 >= '28oct2018'd AND CONFO_CREATE_DT-364 <='03nov2018'd THEN 'RD1 Week' when d.ACTUAL_CUTOVER_DATE = '30oct2018'd AND CONFO_CREATE_DT-364 >= '04nov2018'd AND CONFO_CREATE_DT-364 <='29dec2018'd THEN '8 Weeks After' when d.ACTUAL_CUTOVER_DATE = '27nov2018'd AND CONFO_CREATE_DT-364 >= '30sep2018'd AND CONFO_CREATE_DT-364 <='24nov2018'd THEN '8 Weeks Before' when d.ACTUAL_CUTOVER_DATE = '27nov2018'd AND CONFO_CREATE_DT-364 >= '25nov2018'd AND CONFO_CREATE_DT-364 <='01dec2019'd THEN 'RD1 Week' when d.ACTUAL_CUTOVER_DATE = '27nov2018'd AND CONFO_CREATE_DT-364 >= '02dec2018'd AND CONFO_CREATE_DT-364 <='26jan2019'd THEN '8 Weeks After' when d.ACTUAL_CUTOVER_DATE = '11dec2018'd AND CONFO_CREATE_DT-364 >= '14oct2018'd AND CONFO_CREATE_DT-364 <='08dec2018'd THEN '8 Weeks Before' when d.ACTUAL_CUTOVER_DATE = '11dec2018'd AND CONFO_CREATE_DT-364 >= '09dec2018'd AND CONFO_CREATE_DT-364 <='15dec2019'd THEN 'RD1 Week' when d.ACTUAL_CUTOVER_DATE = '11dec2018'd AND CONFO_CREATE_DT-364 >= '16dec2018'd AND CONFO_CREATE_DT-364 <='09feb2019'd THEN '8 Weeks After' when misw_flag = 'MI' AND CONFO_CREATE_DT-364 >= '02sep2018'd AND CONFO_CREATE_DT-364 <='27oct2018'd THEN '8 Weeks Before' when misw_flag = 'MI' AND CONFO_CREATE_DT-364 >= '28oct2018'd AND CONFO_CREATE_DT-364 <='03nov2018'd THEN 'RD1 Week' when misw_flag = 'MI' AND CONFO_CREATE_DT-364 >= '04nov2018'd AND CONFO_CREATE_DT-364 <='29dec2018'd THEN '8 Weeks After' END AS week_group , 100*year( CONFO_CREATE_DT)+week( CONFO_CREATE_DT) AS yrmnwk , SUM( a.rn) AS rn, SUM( rv_usd) AS rv_usd , SUM( rn_ly) AS rn_ly, SUM( rv_usd_ly) AS rv_usd_ly FROM gross_res_comb2 AS a LEFT JOIN cutover AS d ON a.property_cd=d.MARSHA_CODE INNER JOIN prop_misw AS e ON a.property_cd=e.marsha_new GROUP BY PROPERTY_CD, segment , CHANNEL_AGGREGATE_CD, calculated channel_detail , a.ROOM_POOL_CD , d.ACTUAL_CUTOVER_DATE, calculated week_group, calculated yrmnwk;",MI vs SPG WS Gross Booking YOY 2019.sas
" CREATE TABLE gross_res_comb4 AS select PROPERTY_CD, segment , CHANNEL_AGGREGATE_CD , channel_detail , ACTUAL_CUTOVER_DATE , week_group , yrmnwk , SUM( a.rn) AS rn, SUM( rv_usd) AS rv_usd , SUM( rn_ly) AS rn_ly, SUM( rv_usd_ly) AS rv_usd_ly FROM gross_res_comb3 AS a WHERE yrmnwk <=201908 GROUP BY PROPERTY_CD, segment , CHANNEL_AGGREGATE_CD, channel_detail , ACTUAL_CUTOVER_DATE, week_group, yrmnwk;",MI vs SPG WS Gross Booking YOY 2019.sas
 CREATE TABLE NYCMQ AS ( SELECT  *  FROM gross_res_comb4  WHERE property_cd='NYCMQ');,MI vs SPG WS Gross Booking YOY 2019.sas
 CREATE TABLE ota AS ( SELECT  *  FROM gross_res_comb4  WHERE channel_aggregate_cd='eChannel' AND ACTUAL_CUTOVER_DATE<>' ');,MI vs SPG WS Gross Booking YOY 2019.sas
 CREATE TABLE PROPERTY_MASTER AS  (  SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER  ) ;,MI vs SPG WS Gross Booking YOY 2019.sas
" CREATE TABLE hotel_ws AS select b.marsha, b.hotel_name, b.brnd_name, b.acomp, b.mf, b.region, b.region_name, b.division_name, b.country, b.misw_flag, segment, CHANNEL_AGGREGATE_CD, channel_detail, week_group, ACTUAL_CUTOVER_DATE, yrmnwk , SUM( rn) AS rn, SUM( rn_ly) AS rn_ly , SUM( rv_usd) AS rv_usd, SUM( rv_usd_ly) AS rv_usd_ly FROM gross_res_comb4 AS a LEFT JOIN PROPERTY_MASTER AS b ON a.property_cd=b.marsha WHERE b.acomp='Y' GROUP BY b.marsha, b.hotel_name, b.brnd_name, b.acomp, b.mf, b.region, b.region_name, b.division_name, b.country, b.misw_flag, segment, CHANNEL_AGGREGATE_CD, channel_detail, week_group, ACTUAL_CUTOVER_DATE, yrmnwk;",MI vs SPG WS Gross Booking YOY 2019.sas
" CREATE TABLE hotel_ws AS ( SELECT  * , CASE WHEN  region IN ( 'E_', 'W_', 'C_')  THEN 'US/Canada' WHEN   region='S_'  THEN region_name ELSE division_name END AS region2 FROM hotel_ws );",MI vs SPG WS Gross Booking YOY 2019.sas
 CREATE TABLE ws.hotel_ws2019 AS ( SELECT  *  FROM hotel_ws );,MI vs SPG WS Gross Booking YOY 2019.sas
" CREATE TABLE ws.hotel_ws2019_18 AS ( SELECT  * , CASE WHEN  yrmnwk=201900  THEN 201852 END AS yrmnwk FROM ws.hotel_ws2019 UNION ALL SELECT  * , CASE WHEN  yrmnwk=201900  THEN 201852 END AS yrmnwk FROM ws.hotel_ws2018 WHERE yrmnwk<>201800);",MI vs SPG WS Gross Booking YOY 2019.sas
"SELECT * FROM ws.hotel_ws2019_18 ORDER BY MARSHA ,region2 ,yrmnwk;",MI vs SPG WS Gross Booking YOY 2019.sas
 CREATE TABLE NYCMQ2 AS ( SELECT  *  FROM ws.hotel_ws2019_18  WHERE marsha='NYCMQ');,MI vs SPG WS Gross Booking YOY 2019.sas
"CREATE TABLE ""\\Hdqmdm1fpcl4v1\lodg-revmgmt\RM EAnlys\MikeS\Wholesaler\ws.hotel_ws2019_18.TXT"" AS ( SELECT * FROM ws.hotel_ws2019_18) ;",MI vs SPG WS Gross Booking YOY 2019.sas
" CREATE TABLE WEST2 AS ( SELECT F1, RevPAR_Index___Change FROM WEST  WHERE F1 <> """");",Mid Year Field Bonus Report.sas
" CREATE TABLE EAST2 AS ( SELECT F1, RevPAR_Index___Change FROM EAST  WHERE F1 <> """");",Mid Year Field Bonus Report.sas
" CREATE TABLE CANADA2 AS ( SELECT F1, RevPAR_Index___Change FROM CANADA  WHERE F1 <> """");",Mid Year Field Bonus Report.sas
" CREATE TABLE CALA2 AS ( SELECT F1 , CAST( _018_Scomp_Status_in_Column_J, percent20.  ) AS RevPAR_Index___Change  FROM CALA  WHERE F1 <> """");",Mid Year Field Bonus Report.sas
"CREATE TABLE AMERICAS_GOALS AS ( SELECT  *  , F1 AS MARSHA  FROM WEST2 UNION ALL SELECT  *  , F1 AS MARSHA  FROM EAST2 UNION ALL SELECT  *  , F1 AS MARSHA  FROM CANADA2 UNION ALL SELECT  *  , F1 AS MARSHA  FROM CALA2);",Mid Year Field Bonus Report.sas
ALTER TABLE AMERICAS_GOALS DROP COLUMN F1 ;,Mid Year Field Bonus Report.sas
" CREATE TABLE Full_Service_Property_Level AS select a.MARSHA, b.MARSHA_NEW, b.HOTEL_NAME, b.REGION, b.AVP, b.BRND, a.SCOMP , CASE WHEN a.SCOMP = 'Y' THEN 1 ELSE 0 END AS SCOMP_NUM , ROUND( ( ( a.MARREV/ a.MARAVAIL)/( a.MKTREV/a.MKTAVAIL))*100,.00001) AS RPI_TY , ROUND( ( ( a.MARREVLY/ a.MARAVAILLY)/( a.MKTREVLY/a.MKTAVAILLY))*100,.00001) AS RPI_LY , ROUND( (  ( ( a.MARREV/ a.MARAVAIL)/( a.MKTREV/a.MKTAVAIL))/100 , ( ( a.MARREVLY/ a.MARAVAILLY)/( a.MKTREVLY/a.MKTAVAILLY))*100 )-1,.00001) AS RPI_PCT_CHG , c.RevPAR_Index___Change AS RPI_GOAL_PCT_CHG FROM CMP.STR_MONTHLY_DATA AS a LEFT JOIN TGT_BUS.PROPERTY_MASTER_MISW_HIST AS b ON a.MARSHA = b.MARSHA AND a.asof_yrmo = b.asof_yrmo INNER JOIN AMERICAS_GOALS AS c ON a.MARSHA = c.MARSHA WHERE a.TIMEF ='YTD' AND a.DATA_CATEGORY = 'Rooms' AND a.CURRENCY_TYPE = 'Constant USD' AND a.YRMNTH = &YRMNTH. AND a.asof_yrmo = &YRMNTH. AND b.MF = 'M' AND b.DIVISION = 'AM' AND b.REGION<>'C_' AND b.BRND not IN ( 'RZ', 'EB') AND a.MARSHA not IN ( 'MCOJW', 'MCORZ') AND c.RevPAR_Index___Change <> . ;",Mid Year Field Bonus Report.sas
" CREATE TABLE Canadian_Local AS select a.MARSHA, b.MARSHA_NEW, b.HOTEL_NAME, b.REGION, b.AVP, b.BRND, a.SCOMP , CASE WHEN a.SCOMP = 'Y' THEN 1 ELSE 0 END AS SCOMP_NUM , ROUND( ( ( a.MARREV/ a.MARAVAIL)/( a.MKTREV/a.MKTAVAIL))*100,.00001) AS RPI_TY , ROUND( ( ( a.MARREVLY/ a.MARAVAILLY)/( a.MKTREVLY/a.MKTAVAILLY))*100,.00001) AS RPI_LY , ROUND( (  ( ( a.MARREV/ a.MARAVAIL)/( a.MKTREV/a.MKTAVAIL))/100 , ( ( a.MARREVLY/ a.MARAVAILLY)/( a.MKTREVLY/a.MKTAVAILLY))*100 )-1,.00001) AS RPI_PCT_CHG , c.RevPAR_Index___Change AS RPI_GOAL_PCT_CHG FROM CMP.STR_MONTHLY_DATA AS a LEFT JOIN TGT_BUS.PROPERTY_MASTER_MISW_HIST AS b ON a.MARSHA = b.MARSHA AND a.asof_yrmo = b.asof_yrmo INNER JOIN AMERICAS_GOALS AS c ON a.MARSHA = c.MARSHA WHERE a.TIMEF ='LAST12' AND a.DATA_CATEGORY = 'Rooms' AND a.CURRENCY_TYPE = 'Local' AND a.YRMNTH = &YRMNTH. AND b.REGION = 'C_' AND b.MF = 'M' AND b.BRND not IN ( ""CY"", ""FI"", ""RI"", ""SH"", ""TS"", ""AR"", ""OX"", ""4P"", ""AL"", ""EL"") AND b.BRND not IN ( 'RZ', 'EB') AND a.MARSHA not IN ( 'MCOJW', 'MCORZ' ) ;",Mid Year Field Bonus Report.sas
" CREATE TABLE FS_consolidated_1 AS select a.MARSHA, CASE WHEN a.SCOMP = 'Y' THEN 1 ELSE 0 END AS SCOMP_COUNT , a.MARREV, a.MARAVAIL, a.MKTREV, a.MKTAVAIL, a.MARREVLY, a.MARAVAILLY, a.MKTREVLY, a.MKTAVAILLY , c.RevPAR_Index___Change , a.MARREVLY/a.MARAVAILLY / ( a.MKTREVLY/a.MKTAVAILLY)*100 * ( 1 + c.RevPAR_Index___Change) / 100 * a.MKTREV AS MARREV_GOAL FROM CMP.STR_MONTHLY_DATA AS a INNER JOIN AMERICAS_GOALS AS c ON a.MARSHA = c.MARSHA WHERE a.TIMEF ='YTD' AND a.DATA_CATEGORY = 'Rooms' AND a.CURRENCY_TYPE = 'Constant USD' AND a.YRMNTH = &YRMNTH. AND a.asof_yrmo = &YRMNTH. AND a.MARSHA IN ( 'MCOJW', 'MCORZ' ) ;",Mid Year Field Bonus Report.sas
" CREATE TABLE FS_consolidated_2 AS select '33GLR' AS MARSHA, '33GLR' AS MARSHA_NEW , SUM ( SCOMP_COUNT) AS SCOMP_COUNT , SUM( MARREV) AS MARREV, SUM( MARAVAIL) AS MARAVAIL, SUM( MKTREV) AS MKTREV, SUM( MKTAVAIL) AS MKTAVAIL , SUM( MARREVLY) AS MARREVLY, SUM( MARAVAILLY) AS MARAVAILLY, SUM( MKTREVLY) AS MKTREVLY, SUM( MKTAVAILLY) AS MKTAVAILLY , SUM( MARREV_GOAL) AS MARREV_GOAL FROM FS_consolidated_1 a GROUP BY calculated MARSHA, calculated MARSHA_NEW;",Mid Year Field Bonus Report.sas
" CREATE TABLE FS_consolidated_3 AS select a.MARSHA, a.MARSHA_NEW, 'Combined MCOJW AND MCORZ for bonus purposes' AS HOTEL_NAME, 'E_' AS REGION, '' AS AVP, '' AS BRND , CASE WHEN SCOMP_COUNT = 2 THEN 'Y' ELSE 'N' END AS SCOMP , CASE WHEN SCOMP_COUNT = 2 THEN 1 ELSE 0 END AS SCOMP_NUM , ROUND( ( a.MARREV/ a.MKTREV)*100,.000001) AS RPI_TY , ROUND( ( a.MARREVLY/a.MKTREVLY)*100,.000001)AS RPI_LY , ROUND( ( a.MARREV_GOAL/ a.MARAVAIL)/( a.MKTREV/ a.MKTAVAIL)*100 / ( ( a.MARREVLY/ a.MARAVAILLY)/( a.MKTREVLY/ a.MKTAVAILLY)*100) - 1, .000001) AS RPI_GOAL_PCT_CHG , ROUND( (  ( ( a.MARREV/ a.MARAVAIL)/( a.MKTREV/a.MKTAVAIL))/100 , ( ( a.MARREVLY/ a.MARAVAILLY)/( a.MKTREVLY/a.MKTAVAILLY))*100 )-1,.00001) AS RPI_PCT_CHG FROM FS_consolidated_2 a;",Mid Year Field Bonus Report.sas
 CREATE TABLE FIELD_BONUS_REPORT AS ( SELECT  *  FROM Full_Service_Property_Level UNION ALL SELECT  *  FROM FS_consolidated_3 UNION ALL SELECT  *  FROM Canadian_Local);,Mid Year Field Bonus Report.sas
"CREATE TABLE ""&OUTPUT./FIELD_BONUS_REPORT_&CURDATE..xlsx"" AS ( SELECT * FROM FIELD_BONUS_REPORT) ;",Mid Year Field Bonus Report.sas
" CREATE TABLE aaadata AS  (  select CASE WHEN a.property_cd='SJUDB' THEN 'SJUDO' when a.property_cd='WASSH' THEN 'WASAK' when a.property_cd='STLDT' THEN 'STLMG' ELSE a.property_cd END AS marsha, a.date_stay_dt , SUM( a.roomnights_qty) AS rn, SUM( a.net_rev_local_amt) AS rv , SUM( a.net_rev_usd_sub_amt) AS rv_usd , SUM( net_rev_local_amt)/SUM( roomnights_qty) AS adr_lcl , SUM( net_rev_usd_sub_amt)/SUM( roomnights_qty) AS adr_usd FROM mrdw_fact_agg_dr_rev_analysis a WHERE a.brand_cd IN AND market_prefix_cd = ( '42') AND a.date_stay_dt >= '2018-05-01' AND a.date_stay_dt < '2019-05-01' GROUP BY marsha, a.date_stay_dt ORDER BY marsha, a.date_stay_dt  )  ;",Min and Max AAA Rate - 12 Months Ending August 2015.sas
" CREATE TABLE aaadata2 AS select a.marsha, b.brnd, b.hotel_name, b.country, b.curr, a.date_stay_dt, a.rn, a.rv_usd, adr_usd , CASE WHEN b.curr='USD' THEN a.rv_usd ELSE rv END AS rv_lcl , CASE WHEN b.curr='USD' THEN a.rv_usd/a.rn ELSE rv/a.rn END AS adr_lcl FROM aaadata AS a INNER JOIN awprod.property_master AS b ON a.marsha=b.marsha ORDER BY a.marsha;",Min and Max AAA Rate - 12 Months Ending August 2015.sas
" CREATE TABLE aaadata3 AS select marsha, brnd, hotel_name, country, curr, min( adr_usd) AS min_usd_rate, min( adr_lcl) AS min_local_rate , max( adr_usd) AS max_usd_rate, max( adr_lcl) AS max_local_rate FROM aaadata2 GROUP BY marsha, brnd, hotel_name, country, curr;",Min and Max AAA Rate - 12 Months Ending August 2015.sas
" CREATE TABLE Strike_Annual AS select c.MARSHA , b.MARSHA_NEW, b.BRND, b.STR_ID, b.PEOPLESOFT_ID, b.MF, b.AVP , 'MONTH' AS TIMEF , CASE WHEN a.MARSHA IN ( &NONCOMP. ) THEN ""N"" ELSE a.SCOMP END AS SCOMP , SUM( a.COMPLETE_DATA) AS COMPLETE_DATA , b.HOTEL_NAME, b.REGION, b.DOMINT , CASE WHEN b.BRND IN ( ""CY"", ""FI"", ""RI"", ""SH"", ""TS"", ""AR"", ""OX"", ""FP"", ""AL"", ""EL"") THEN ""MSB"" ELSE ""FS"" end AS TYPE , SUM( a.MARAVAIL) AS MARAVAIL, SUM( a.MARREV) AS MARREV, SUM( a.MKTAVAIL) AS MKTAVAIL, SUM( a.MKTREV) AS MKTREV , SUM( a.MARAVAILLY) AS MARAVAILLY, SUM( a.MARREVLY) AS MARREVLY, SUM( a.MKTAVAILLY) AS MKTAVAILLY, SUM( a.MKTREVLY) AS MKTREVLY , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( (  ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))/100 , ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100 )-1,.00001) AS RPI_PCT_CHG , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100 ,.00001) AS RPI_PNT_CHG , ""Y"" AS Strike_Hotel FROM CMP.STR_MONTHLY_DATA AS a LEFT JOIN TGT_BUS.PROPERTY_MASTER_MISW_HIST AS b ON a.MARSHA = b.MARSHA_NEW AND a.asof_yrmo = b.asof_yrmo LEFT JOIN STRIKE AS c ON a.MARSHA = c.MARSHA WHERE a.TIMEF ='MONTH' AND a.DATA_CATEGORY = 'Rooms' AND a.CURRENCY_TYPE = 'Constant USD' AND a.asof_yrmo = &YRMNTH. AND a.YRMNTH >= 201801 AND c.MARSHA <> """" AND ( a.YRMNTH <= c.YTD_Data_to_Pull OR a.YRMNTH >= c.Post_Strike_Pull) GROUP BY c.MARSHA , b.MARSHA_NEW, b.BRND, b.STR_ID, b.PEOPLESOFT_ID, b.MF, b.AVP , calculated TIMEF , calculated SCOMP, b.HOTEL_NAME, b.REGION, b.DOMINT, calculated TYPE, calculated Strike_Hotel ORDER BY c.MARSHA;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
"CREATE TABLE ""&OUTPUT.\Strike Hotels.xlsx"" AS ( SELECT * FROM Strike_Annual) ;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE WEST2 AS ( SELECT F1, RevPAR_Index___Change, _018_RevPAR_Index_Goal FROM WEST  WHERE F1 <> """");",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE EAST2 AS ( SELECT F1, RevPAR_Index___Change, _018_RevPAR_Index_Goal FROM EAST  WHERE F1 <> """");",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE CANADA2 AS ( SELECT F1, RevPAR_Index___Change, _018_RevPAR_Index_Goal FROM CANADA  WHERE F1 <> """");",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE CALA2 AS ( SELECT F1 , CAST( _018_Scomp_Status_in_Column_J, percent20.  ) AS RevPAR_Index___Change , F32 AS _018_RevPAR_Index_Goal  FROM CALA  WHERE F1 <> """");",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
"CREATE TABLE AMERICAS_GOALS_1 AS ( SELECT  *  , F1 AS MARSHA , _018_RevPAR_Index_Goal AS RC_GOAL  FROM WEST2 UNION ALL SELECT  *  , F1 AS MARSHA , _018_RevPAR_Index_Goal AS RC_GOAL  FROM EAST2 UNION ALL SELECT  *  , F1 AS MARSHA , _018_RevPAR_Index_Goal AS RC_GOAL  FROM CANADA2 UNION ALL SELECT  *  , F1 AS MARSHA , _018_RevPAR_Index_Goal AS RC_GOAL  FROM CALA2);",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
"ALTER TABLE AMERICAS_GOALS_1 DROP COLUMN F1 ,  _018_RevPAR_Index_Goal ;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE AMERICAS_GOALS AS select b.MARSHA_NEW AS MARSHA, a.RevPAR_Index___Change, a.RC_GOAL FROM AMERICAS_GOALS_1 a LEFT JOIN ( select * FROM TGT_BUS.PROPERTY_MASTER_MISW_HIST WHERE asof_yrmo = &YRMNTH. ) AS b ON ( a.MARSHA=b.marsha OR a.MARSHA=b.MARSHA_NEW);",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE Annual AS select a.MARSHA, b.MARSHA_NEW, b.BRND, b.STR_ID, b.PEOPLESOFT_ID, b.MF, b.AVP , a.TIMEF , CASE WHEN a.MARSHA IN ( &NONCOMP. ) THEN ""N"" ELSE a.SCOMP END AS SCOMP , a.COMPLETE_DATA, b.HOTEL_NAME, b.REGION, b.DOMINT , CASE WHEN b.BRND IN ( ""CY"", ""FI"", ""RI"", ""SH"", ""TS"", ""AR"", ""OX"", ""FP"", ""AL"", ""EL"") THEN ""MSB"" ELSE ""FS"" end AS TYPE , MARAVAIL, MARREV, MKTAVAIL, MKTREV, MARAVAILLY, MARREVLY, MKTAVAILLY, MKTREVLY , ROUND( ( ( a.MARREV/ a.MARAVAIL)/( a.MKTREV/a.MKTAVAIL))*100,.00001) AS RPI_TY , ROUND( ( ( a.MARREVLY/ a.MARAVAILLY)/( a.MKTREVLY/a.MKTAVAILLY))*100,.00001) AS RPI_LY , ROUND( (  ( ( a.MARREV/ a.MARAVAIL)/( a.MKTREV/a.MKTAVAIL))/100 , ( ( a.MARREVLY/ a.MARAVAILLY)/( a.MKTREVLY/a.MKTAVAILLY))*100 )-1,.00001) AS RPI_PCT_CHG , ROUND( ( ( a.MARREV/ a.MARAVAIL)/( a.MKTREV/a.MKTAVAIL))*100 - ( ( a.MARREVLY/ a.MARAVAILLY)/( a.MKTREVLY/a.MKTAVAILLY))*100 ,.00001) AS RPI_PNT_CHG FROM CMP.STR_MONTHLY_DATA AS a LEFT JOIN TGT_BUS.PROPERTY_MASTER_MISW_HIST AS b ON a.MARSHA = b.MARSHA_NEW AND a.asof_yrmo = b.asof_yrmo WHERE a.TIMEF ='LAST12' AND a.DATA_CATEGORY = 'Rooms' AND a.CURRENCY_TYPE = 'Constant USD' AND a.YRMNTH = &YRMNTH. AND a.asof_yrmo = &YRMNTH.;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE annual_check AS select a.MARSHA, CASE WHEN a.RPI_PCT_CHG < b.RPI_PCT_CHG THEN 'Skip_Months' ELSE 'Full_Period' END AS Strike_Hotel_Check FROM annual a LEFT JOIN Strike_Annual AS b ON a.MARSHA = b.MARSHA;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
 CREATE TABLE annual_full AS select a.* FROM annual a LEFT JOIN annual_check AS b ON a.MARSHA = b.MARSHA WHERE b.Strike_Hotel_Check = 'Full_Period';,NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
 CREATE TABLE annual_skip AS select a.* FROM Strike_annual a LEFT JOIN annual_check AS b ON a.MARSHA = b.MARSHA WHERE b.Strike_Hotel_Check = 'Skip_Months';,NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
 CREATE TABLE annual AS ( SELECT  *  FROM annual_skip UNION ALL SELECT  *  FROM annual_full);,NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE AMERICAS_SYSTEMWIDE_SCOMP AS select a.MARSHA, a.MARSHA_NEW, a.HOTEL_NAME, a.REGION, a.BRND, a.TYPE, a.SCOMP , CASE WHEN a.SCOMP = 'Y' THEN 1 ELSE 0 END AS SCOMP_NUM , RPI_TY, RPI_LY, a.RPI_PCT_CHG FROM ANNUAL AS a ORDER BY a.TYPE, a.MARSHA;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE Full_Service_Property_Level AS select a.MARSHA, a.MARSHA_NEW, a.HOTEL_NAME, a.REGION, a.AVP, a.BRND, a.SCOMP , CASE WHEN a.SCOMP = 'Y' THEN 1 ELSE 0 END AS SCOMP_NUM , RPI_TY, RPI_LY, a.RPI_PCT_CHG , b.RevPAR_Index___Change AS RPI_GOAL_PCT_CHG FROM ANNUAL AS a INNER JOIN AMERICAS_GOALS AS b ON a.MARSHA = b.MARSHA WHERE a.MF = 'M' AND ( a.TYPE = 'FS' OR a.REGION = 'S_') AND a.REGION<>'C_' AND a.MARSHA not IN ( 'MCOJW', 'MCORZ' ) ;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE Canadian_Local AS select a.MARSHA, b.MARSHA_NEW, b.HOTEL_NAME, b.REGION, b.AVP, b.BRND, a.SCOMP , b.STR_ID, b.PEOPLESOFT_ID, b.MF, b.DOMINT, a.COMPLETE_DATA, a.TIMEF , CASE WHEN a.SCOMP = 'Y' THEN 1 ELSE 0 END AS SCOMP_NUM , CASE WHEN b.BRND IN ( ""CY"", ""FI"", ""RI"", ""SH"", ""TS"", ""AR"", ""OX"", ""FP"", ""AL"", ""EL"") THEN ""MSB"" ELSE ""FS"" end AS TYPE , MARAVAIL, MARREV, MKTAVAIL, MKTREV, MARAVAILLY, MARREVLY, MKTAVAILLY, MKTREVLY , ROUND( ( ( a.MARREV/ a.MARAVAIL)/( a.MKTREV/a.MKTAVAIL))*100,.00001) AS RPI_TY , ROUND( ( ( a.MARREVLY/ a.MARAVAILLY)/( a.MKTREVLY/a.MKTAVAILLY))*100,.00001) AS RPI_LY , ROUND( (  ( ( a.MARREV/ a.MARAVAIL)/( a.MKTREV/a.MKTAVAIL))/100 , ( ( a.MARREVLY/ a.MARAVAILLY)/( a.MKTREVLY/a.MKTAVAILLY))*100 )-1,.00001) AS RPI_PCT_CHG , c.RevPAR_Index___Change AS RPI_GOAL_PCT_CHG FROM CMP.STR_MONTHLY_DATA AS a LEFT JOIN TGT_BUS.PROPERTY_MASTER_MISW_HIST AS b ON a.MARSHA = b.MARSHA_NEW AND a.asof_yrmo = b.asof_yrmo INNER JOIN AMERICAS_GOALS AS c ON a.MARSHA = c.MARSHA WHERE a.TIMEF ='LAST12' AND a.DATA_CATEGORY = 'Rooms' AND a.CURRENCY_TYPE = 'Local' AND a.YRMNTH = &YRMNTH. AND b.REGION = 'C_' AND b.MF = 'M' AND a.MARSHA not IN ( 'MCOJW', 'MCORZ' ) ;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
 CREATE TABLE Canadian_Local_FS AS ( SELECT  *  FROM Canadian_Local  WHERE Type = 'FS');,NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE FS_consolidated_1 AS select a.MARSHA, a.MARSHA_NEW, CASE WHEN a.SCOMP = 'Y' THEN 1 ELSE 0 END AS SCOMP_COUNT , a.MARREV, a.MARAVAIL, a.MKTREV, a.MKTAVAIL, a.MARREVLY, a.MARAVAILLY, a.MKTREVLY, a.MKTAVAILLY , b.RevPAR_Index___Change , a.MARREVLY/a.MARAVAILLY / ( a.MKTREVLY/a.MKTAVAILLY)*100 * ( 1 + b.RevPAR_Index___Change) / 100 * a.MKTREV AS MARREV_GOAL FROM ANNUAL AS a INNER JOIN AMERICAS_GOALS AS b ON a.MARSHA=b.MARSHA WHERE a.MARSHA IN ( 'MCOJW', 'MCORZ', 'MCOSI', 'MCODW' ) ;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE FS_consolidated_2 AS select CASE WHEN MARSHA_NEW IN ( 'MCOJW', 'MCORZ') THEN '33GLR' when MARSHA_NEW IN ( 'MCOSI', 'MCODW')then 'WDW' END AS MARSHA , CASE WHEN MARSHA_NEW IN ( 'MCOJW', 'MCORZ') THEN '33GLR' when MARSHA_NEW IN ( 'MCOSI', 'MCODW')then 'WDW' END AS MARSHA_NEW , SUM ( SCOMP_COUNT) AS SCOMP_COUNT , SUM( MARREV) AS MARREV, SUM( MARAVAIL) AS MARAVAIL, SUM( MKTREV) AS MKTREV, SUM( MKTAVAIL) AS MKTAVAIL , SUM( MARREVLY) AS MARREVLY, SUM( MARAVAILLY) AS MARAVAILLY, SUM( MKTREVLY) AS MKTREVLY, SUM( MKTAVAILLY) AS MKTAVAILLY , SUM( MARREV_GOAL) AS MARREV_GOAL FROM FS_consolidated_1 a GROUP BY calculated MARSHA, calculated MARSHA_NEW;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE FS_consolidated_3 AS select a.MARSHA, a.MARSHA_NEW , CASE WHEN MARSHA = '33GLR' THEN 'Combined MCOJW AND MCORZ for bonus purposes' when MARSHA = 'WDW' THEN 'Combined MCOSI AND MCODW for bonus purposes' END AS HOTEL_NAME , 'E_' AS REGION, '' AS AVP, '' AS BRND , CASE WHEN SCOMP_COUNT = 2 THEN 'Y' ELSE 'N' END AS SCOMP , CASE WHEN SCOMP_COUNT = 2 THEN 1 ELSE 0 END AS SCOMP_NUM , ROUND( ( a.MARREV/ a.MKTREV)*100,.000001) AS RPI_TY , ROUND( ( a.MARREVLY/a.MKTREVLY)*100,.000001)AS RPI_LY , ROUND( ( a.MARREV_GOAL/ a.MARAVAIL)/( a.MKTREV/ a.MKTAVAIL)*100 / ( ( a.MARREVLY/ a.MARAVAILLY)/( a.MKTREVLY/ a.MKTAVAILLY)*100) - 1, .000001) AS RPI_GOAL_PCT_CHG , ROUND( (  ( ( a.MARREV/ a.MARAVAIL)/( a.MKTREV/a.MKTAVAIL))/100 , ( ( a.MARREVLY/ a.MARAVAILLY)/( a.MKTREVLY/a.MKTAVAILLY))*100 )-1,.00001) AS RPI_PCT_CHG FROM FS_consolidated_2 a;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
 CREATE TABLE FIELD_BONUS_REPORT AS ( SELECT  *  FROM Full_Service_Property_Level UNION ALL SELECT  *  FROM FS_consolidated_3 UNION ALL SELECT  *  FROM Canadian_Local_FS);,NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE MSB_hotels AS select a.MARSHA, a.MARSHA_NEW, a.HOTEL_NAME, a.REGION, a.BRND, a.MF, a.SCOMP , CASE WHEN a.SCOMP = 'Y' THEN 1 ELSE 0 END AS SCOMP_NUM , a.RPI_TY, a.RPI_LY, a.RPI_PCT_CHG FROM ANNUAL a WHERE a.TYPE = 'MSB' AND a.MF = 'M' AND a.REGION IN ( 'E_', 'W_', 'C_') AND a.SCOMP = 'Y';",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE MSB_Consolidated_1 AS select '31LLB' AS MARSHA, '33LLB' AS MARSHA_NEW, ""Consolidated Little Lake Bryan"" AS HOTEL_NAME, 'E_' AS REGION , '' AS BRND, 'M' AS MF , SUM ( CASE WHEN a.SCOMP = 'Y' THEN 1 ELSE 0 end ) AS SCOMP_COUNT , SUM( MARAVAIL) AS MARAVAIL, SUM( MARREV) AS MARREV, SUM( MKTAVAIL) AS MKTAVAIL, SUM( MKTREV) AS MKTREV , SUM( MARAVAILLY) AS MARAVAILLY, SUM( MARREVLY) AS MARREVLY, SUM( MKTAVAILLY) AS MKTAVAILLY, SUM( MKTREVLY) AS MKTREVLY FROM ANNUAL a WHERE a.MARSHA IN ( 'MCOLX', 'MCOLY', 'MCOLZ' ) ;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE MSB_Consolidated_2 AS select a.MARSHA, a.MARSHA_NEW, a.HOTEL_NAME, a.REGION, a.BRND, a.MF , CASE WHEN SCOMP_COUNT = 3 THEN 'Y' ELSE 'N' END AS SCOMP , CASE WHEN SCOMP_COUNT = 3 THEN 1 ELSE 0 END AS SCOMP_NUM , ROUND( ( ( a.MARREV/ a.MARAVAIL)/( a.MKTREV/a.MKTAVAIL))*100,.00001) AS RPI_TY , ROUND( ( ( a.MARREVLY/ a.MARAVAILLY)/( a.MKTREVLY/a.MKTAVAILLY))*100,.00001) AS RPI_LY , ROUND( (  ( ( a.MARREV/ a.MARAVAIL)/( a.MKTREV/a.MKTAVAIL))/100 , ( ( a.MARREVLY/ a.MARAVAILLY)/( a.MKTREVLY/a.MKTAVAILLY))*100 )-1,.00001) AS RPI_PCT_CHG FROM MSB_Consolidated_1 a;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
 CREATE TABLE MSB_Property_Level AS ( SELECT  *  FROM MSB_hotels UNION ALL SELECT  *  FROM MSB_consolidated_2);,NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE Ritz_Property_Level AS select a.MARSHA, a.HOTEL_NAME, a.REGION, a.BRND, a.MF, a.SCOMP , CASE WHEN a.SCOMP = 'Y' THEN 1 ELSE 0 END AS SCOMP_NUM , a.RPI_TY , b.RC_GOAL FROM ANNUAL a LEFT JOIN AMERICAS_GOALS AS b ON a.MARSHA=b.MARSHA WHERE a.BRND IN ( 'RZ', 'EB') AND a.REGION IN ( 'E_', 'W_' ) ;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE MSB_NONCOMP AS select a.MARSHA, a.MARSHA_NEW, a.HOTEL_NAME, a.REGION, a.BRND, a.MF , 'N' AS SCOMP, 0 AS SCOMP_NUM FROM TGT_BUS.PROPERTY_MASTER_MISW_HIST a LEFT JOIN MSB_hotels AS b ON a.MARSHA = b.MARSHA WHERE a.asof_yrmo = &yrmnth. AND b.SCOMP <> 'Y' AND a.BRND IN ( ""CY"", ""FI"", ""RI"", ""SH"", ""TS"", ""AR"", ""OX"", ""FP"", ""AL"", ""EL"") AND a.MF = 'M' AND a.REGION IN ( 'E_', 'W_', 'C_') ORDER BY a.MARSHA;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
"CREATE TABLE ""&OUTPUT.\Property AND Plan Tabs &CURDATE..xlsx"" AS ( SELECT * FROM AMERICAS_SYSTEMWIDE_SCOMP) ;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
"CREATE TABLE ""&OUTPUT.\Property AND Plan Tabs &CURDATE..xlsx"" AS ( SELECT * FROM MSB_Property_Level) ;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
"CREATE TABLE ""&OUTPUT.\Property AND Plan Tabs &CURDATE..xlsx"" AS ( SELECT * FROM FIELD_BONUS_REPORT) ;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
"CREATE TABLE ""&OUTPUT.\Property AND Plan Tabs &CURDATE..xlsx"" AS ( SELECT * FROM RITZ_Property_Level) ;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
"CREATE TABLE ""&OUTPUT.\Property AND Plan Tabs &CURDATE..xlsx"" AS ( SELECT * FROM MSB_NONCOMP) ;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE Global AS select 'Global' AS DESCRIPTION, COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a WHERE a.SCOMP = 'Y' GROUP BY calculated DESCRIPTION;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE Americas_MGD AS select 'Americas_MGD' AS DESCRIPTION, COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a WHERE a.SCOMP = 'Y' AND a.REGION IN ( 'E_', 'W_', 'C_', 'S_') AND a.MF = 'M' GROUP BY calculated DESCRIPTION;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE Americas_SYSTEM AS select 'Americas_SYSTEMWIDE' AS DESCRIPTION, COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a WHERE a.SCOMP = 'Y' AND a.REGION IN ( 'E_', 'W_', 'C_', 'S_') GROUP BY calculated DESCRIPTION;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE Americas_MSB_MGD AS select 'Americas_MSB_MGD' AS DESCRIPTION, COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a WHERE a.SCOMP = 'Y' AND a.TYPE = 'MSB' AND a.REGION IN ( 'E_', 'W_', 'C_', 'S_') AND a.MF = 'M' GROUP BY calculated DESCRIPTION;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE CALA_MGD AS select 'CALA_MGD' AS DESCRIPTION, COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a WHERE a.SCOMP = 'Y' AND a.REGION = 'S_' AND a.MF = 'M' GROUP BY calculated DESCRIPTION;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE Amer_MSB_System_FS_Fran AS select 'Americas_MSB_Systemwide_FS_Franchised' AS DESCRIPTION, COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a WHERE a.SCOMP = 'Y' AND a.REGION IN ( 'E_', 'W_', 'C_', 'S_') AND ( a.TYPE = 'MSB' OR a.MF = 'F') GROUP BY calculated DESCRIPTION;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE Edition AS select 'Edition' AS DESCRIPTION, COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a WHERE a.SCOMP = 'Y' AND a.BRND = 'EB' GROUP BY calculated DESCRIPTION;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE RH AS select 'Renaissance' AS DESCRIPTION, COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a WHERE a.SCOMP = 'Y' AND a.BRND IN ( 'BR') AND a.REGION IN ( 'E_', 'W_', 'C_') GROUP BY calculated DESCRIPTION;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE E_W_GATEKEEPER_MGD AS select CASE WHEN a.REGION = 'W_' THEN 'West Managed Region' when a.REGION = 'E_' THEN 'East Managed Region' END AS DESCRIPTION, COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a WHERE a.SCOMP = 'Y' AND a.REGION IN ( 'E_', 'W_') AND a.MF = 'M' GROUP BY calculated DESCRIPTION;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
 CREATE TABLE PLAN_TAB AS ( SELECT  *  FROM Amer_MSB_System_FS_Fran UNION ALL SELECT  *  FROM Global UNION ALL SELECT  *  FROM Americas_MGD UNION ALL SELECT  *  FROM Americas_SYSTEM UNION ALL SELECT  *  FROM Americas_MSB_MGD UNION ALL SELECT  *  FROM CALA_MGD UNION ALL SELECT  *  FROM Edition UNION ALL SELECT  *  FROM RH UNION ALL SELECT  *  FROM E_W_GATEKEEPER_MGD);,NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
"CREATE TABLE ""&OUTPUT.\Property AND Plan Tabs &CURDATE..xlsx"" AS ( SELECT * FROM PLAN_TAB) ;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE Region_All_Brands AS select CASE WHEN a.REGION = 'W_' THEN 'West Managed Region' when a.REGION = 'E_' THEN 'East Managed Region' when a.REGION = 'S_' THEN 'CALA Managed Region' when a.REGION = 'C_' THEN 'Canada Managed Region' END AS DESCRIPTION, COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a WHERE a.SCOMP = 'Y' AND a.REGION IN ( 'E_', 'W_', 'S_') AND a.MF = 'M' GROUP BY calculated DESCRIPTION;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE Region_MSB AS select CASE WHEN a.REGION = 'W_' THEN 'MSB West Managed Region' when a.REGION = 'E_' THEN 'MSB East Managed Region' when a.REGION = 'S_' THEN 'MSB CALA Managed Region' when a.REGION = 'C_' THEN 'MSB Canada Managed Region' END AS DESCRIPTION, COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a WHERE a.SCOMP = 'Y' AND a.REGION IN ( 'E_', 'W_', 'S_') AND a.MF = 'M' AND a.TYPE = 'MSB' GROUP BY calculated DESCRIPTION;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE Canada_All_Brands AS select CASE WHEN a.REGION = 'C_' THEN 'Canada Managed Region' END AS DESCRIPTION, COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM Canadian_Local a WHERE a.SCOMP = 'Y' AND a.REGION IN ( 'C_') AND a.MF = 'M' GROUP BY calculated DESCRIPTION;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE Canada_MSB AS select CASE WHEN a.REGION = 'C_' THEN 'MSB Canada Managed Region' END AS DESCRIPTION, COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM Canadian_Local a WHERE a.SCOMP = 'Y' AND a.REGION IN ( 'C_') AND a.MF = 'M' AND a.TYPE = 'MSB' GROUP BY calculated DESCRIPTION;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
 CREATE TABLE Region AS ( SELECT  *  FROM Region_MSB UNION ALL SELECT  *  FROM Region_All_Brands UNION ALL SELECT  *  FROM Canada_MSB UNION ALL SELECT  *  FROM Canada_All_Brands);,NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
"CREATE TABLE ""&OUTPUT.\Region Tab &CURDATE..xlsx"" AS ( SELECT * FROM Region) ;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE unique_BMD_3399 AS ( SELECT marsha, Peoplesoft_EEID, PEOPLESOFT_NAME FROM BMD_3399 );",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
"SELECT DISTINCT * FROM unique_BMD_3399 ORDER BY marsha ,Peoplesoft_EEID ,PEOPLESOFT_NAME;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE BMD_3399_ROLLUPS AS select b.Peoplesoft_EEID, b.PEOPLESOFT_NAME, ""3399"" AS Plan_ID , COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a LEFT JOIN unique_BMD_3399 AS b ON a.MARSHA_NEW = b.MARSHA WHERE a.SCOMP = 'Y' AND b.MARSHA <> '' GROUP BY b.Peoplesoft_EEID, b.PEOPLESOFT_NAME, Plan_ID;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE unique_BMD_3400 AS ( SELECT marsha, Peoplesoft_EEID, PEOPLESOFT_NAME FROM BMD_3400 );",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
"SELECT DISTINCT * FROM unique_BMD_3400 ORDER BY marsha ,Peoplesoft_EEID ,PEOPLESOFT_NAME;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE BMD_3400_ROLLUPS AS select b.Peoplesoft_EEID, b.PEOPLESOFT_NAME, ""3400"" AS Plan_ID , COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a LEFT JOIN unique_BMD_3400 AS b ON a.MARSHA_NEW = b.MARSHA WHERE a.SCOMP = 'Y' AND b.MARSHA <> '' GROUP BY b.Peoplesoft_EEID, b.PEOPLESOFT_NAME, Plan_ID;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE unique_Column_4364 AS ( SELECT marshacode, Unit, Property_Name FROM Column_4364 );",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
"SELECT DISTINCT * FROM unique_Column_4364 ORDER BY marshacode ,Unit ,Property_Name;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE Column_4364_ROLLUPS AS select ""Column_4364"" AS Plan_ID , COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a LEFT JOIN unique_Column_4364 AS b ON a.MARSHA_NEW = b.marshacode WHERE a.SCOMP = 'Y' AND b.marshacode <> '' GROUP BY Plan_ID;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
 CREATE TABLE BMD_ROLLUPS AS ( SELECT  *  FROM Column_4364_ROLLUPS UNION ALL SELECT  *  FROM BMD_3400_ROLLUPS UNION ALL SELECT  *  FROM BMD_3399_ROLLUPS);,NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE unique__EE AS ( SELECT MARSHA_Code, EMPL_ID, EMPLOYEE, PLID FROM _EE );",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
"SELECT DISTINCT * FROM unique__EE ORDER BY MARSHA_Code ,EMPL_ID ,EMPLOYEE ,PLID;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE MISSIMG_EE_ROLLUPS AS select b.EMPL_ID, b.EMPLOYEE, b.PLID , COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a INNER JOIN unique_MISSING_EE AS b ON a.MARSHA_NEW = b.MARSHA_Code WHERE a.SCOMP = 'Y' AND b.MARSHA_Code <> '' GROUP BY b.EMPL_ID, b.EMPLOYEE, b.PLID;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE unique_B_SORENSON AS ( SELECT MARSHA, EEID, EMPLOYEE_NAME FROM B_SORENSON );",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
"SELECT DISTINCT * FROM unique_B_SORENSON ORDER BY MARSHA ,EEID ,EMPLOYEE_NAME;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE B_SORENSON_ROLLUPS AS select b.EEID, b.EMPLOYEE_NAME , COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a INNER JOIN unique_B_SORENSON AS b ON a.MARSHA_NEW = b.MARSHA WHERE a.SCOMP = 'Y' AND b.MARSHA <> '' GROUP BY b.EEID, b.EMPLOYEE_NAME;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE unique_HYDE AS ( SELECT MARSHA_CODE, EMPL_ID, EMPLOYEE FROM HYDE );",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
"SELECT DISTINCT * FROM unique_HYDE ORDER BY MARSHA_CODE ,EMPL_ID ,EMPLOYEE;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE HYDE_ROLLUPS AS select b.EMPL_ID, b.EMPLOYEE , COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a INNER JOIN unique_HYDE AS b ON a.MARSHA_NEW = b.MARSHA_CODE WHERE a.SCOMP = 'Y' AND b.MARSHA_CODE <> '' GROUP BY b.EMPL_ID, b.EMPLOYEE;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE unique_area_list AS ( SELECT MARSHA_Code, EMPL_ID, EMPLOYEE, PLID FROM area_list );",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
"SELECT DISTINCT * FROM unique_area_list ORDER BY MARSHA_Code ,EMPL_ID ,EMPLOYEE ,PLID;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE AREA_ROLLUPS AS select b.EMPL_ID, b.EMPLOYEE, b.PLID , COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( ( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100 - ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100)/100 ,.00001) AS RPI_PNT_CHG FROM ANNUAL a INNER JOIN UNIQUE_AREA_LIST AS b ON a.MARSHA_NEW = b.MARSHA_Code WHERE a.SCOMP = 'Y' AND b.MARSHA_Code <> '' GROUP BY b.EMPL_ID, b.EMPLOYEE, b.PLID;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE unique_sales_list AS ( SELECT MARSHACode, EEID, PLID FROM sales_list );",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
"SELECT DISTINCT * FROM unique_sales_list ORDER BY MARSHACode ,EEID ,PLID;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE SALES_ROLLUPS AS select b.EEID, b.PLID , COUNT( a.MARSHA) AS PROP_COUNT , ROUND( ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))*100,.00001) AS RPI_TY , ROUND( ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100,.00001) AS RPI_LY , ROUND( (  ( ( SUM( a.MARREV)/ SUM( a.MARAVAIL))/( SUM( a.MKTREV)/SUM( a.MKTAVAIL)))/100 , ( ( SUM( a.MARREVLY)/ SUM( a.MARAVAILLY))/( SUM( a.MKTREVLY)/SUM( a.MKTAVAILLY)))*100 )-1,.00001) AS RPI_PCT_CHG FROM ANNUAL a INNER JOIN UNIQUE_SALES_LIST AS b ON a.MARSHA_NEW = b.MARSHACode WHERE a.SCOMP = 'Y' AND b.MARSHACode <> '' GROUP BY b.EEID, b.PLID;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
"CREATE TABLE ""&OUTPUT.\Employee Tab &CURDATE..xlsx"" AS ( SELECT * FROM BMD_ROLLUPS) ;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
"CREATE TABLE ""&OUTPUT.\Employee Tab &CURDATE..xlsx"" AS ( SELECT * FROM AREA_ROLLUPS) ;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
"CREATE TABLE ""&OUTPUT.\Employee Tab &CURDATE..xlsx"" AS ( SELECT * FROM SALES_ROLLUPS) ;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
"CREATE TABLE ""&OUTPUT.\Employee Tab &CURDATE..xlsx"" AS ( SELECT * FROM MISSIMG_EE_ROLLUPS) ;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
"CREATE TABLE ""&OUTPUT.\Employee Tab &CURDATE..xlsx"" AS ( SELECT * FROM B_SORENSON_ROLLUPS) ;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
"CREATE TABLE ""&OUTPUT.\Employee Tab &CURDATE..xlsx"" AS ( SELECT * FROM HYDE_ROLLUPS) ;",NEW ROLLUPS Annual Bonus Reporting 2018 Converted to AW.sas
" CREATE TABLE nonref.nonrefrts AS  (  SELECT H.MARSHACODE AS MARSHA , mro.rateoffername , hre.hotelrorateentitysystemid , hre.marketcode , hre.rpgm , htc.cancelfeeapplies , htc.cancelfeeis , htc.defaultseason FROM mrdw_hppdbo_hotelrateoffer_usm HRO INNER JOIN ( select hotelid, rateofferid, max( hotelrateoffersystemid) AS max_hrosysid FROM mrdw_hppdbo_hotelrateoffer_usm WHERE completionlevel='P' AND ratetypeid not IN ( 1,4) GROUP BY hotelid, rateofferid) lro ON lro.hotelid=hro.hotelid AND lro.rateofferid=hro.rateofferid AND lro.max_hrosysid=hro.HOTELRATEOFFERSYSTEMID INNER JOIN mrdw_hppdbo_masterrateoffer_usm mro ON mro.masterrateoffersystemid = hro.masterrateoffersystemid inner JOIN mrdw_hppdbo_hotelrorateentity_usm HRE ON HRO.HOTELRATEOFFERSYSTEMID = HRE.HOTELRATEOFFERSYSTEMID LEFT JOIN mrdw_hppdbo_hotelroretermsconditions_usm htc ON htc.hotelrorateentitysystemid = hre.hotelrorateentitysystemid INNER JOIN mrdw_hppdbo_hotel_usm H ON HRO.HOTELID = H.HOTELID WHERE hro.completionlevel = 'P' AND htc.defaultseason = 'Y' AND htc.cancelfeeis='1'  )  ;",nonrefundable_rpgs.sas
 CREATE TABLE nonref.prop_master AS  (  SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER  ) ;,nonrefundable_rpgs.sas
" CREATE TABLE nonref.Gross_NOS AS  (  SELECT property_cd AS marsha, RATE_PGM_CD AS rpgm, CHANNEL_AGGREGATE_CD AS chanagg, CHANNEL_DETAIL_CD AS chandet, ECHANNEL_TYPE_CD AS echantype, ECHANNEL_SITE_CD AS echansite , COUNT( distinct( CONFO_CREATE_DT||CONFO_NUM_ORIG_ID||CONFO_NUM_CURR_ID)) AS reservations , SUM( ROOMS_QTY) AS rn, SUM( ROOM_REV_CUSD_SUB_AMT) AS room_rv , SUM( TOT_REV_CUSD_SUB_AMT) AS tot_rv FROM AW_TGT_BUS_DBO.MRDW_BI_FACT_Gross_NOS A WHERE CONFO_CREATE_YEAR >= 2018 AND CONFO_CREATE_DT >= &begdt. AND CONFO_CREATE_DT <= &enddt. GROUP BY property_cd, RATE_PGM_CD, CHANNEL_AGGREGATE_CD, CHANNEL_DETAIL_CD, ECHANNEL_TYPE_CD, ECHANNEL_SITE_CD  ) ;",nonrefundable_rpgs.sas
" CREATE TABLE nonref.STAYED_PAID_NOS AS  (  SELECT property_cd AS marsha, CURR_RATE_PGM_CD AS rpgm, CHANNEL_AGGREGATE_CD AS chanagg , COUNT( distinct( CONFO_CREATE_DT||CONFO_NUM_ORIG_ID||CONFO_NUM_CURR_ID)) AS reservations , SUM( CURR_ROOMS_QTY) AS rn, SUM( CURR_ROOM_REV_CUSD_SUB_AMT) AS room_rv , SUM( CURR_TOT_REV_CUSD_SUB_AMT) AS tot_rv FROM AW_TGT_BUS_DBO.MRDW_BI_FACT_STAYED_PAID_NOS A WHERE stay_year >= 2018 AND STAY_DT >= &begdt. AND STAY_DT <= &enddt. AND nos_status_cd = 'A' GROUP BY property_cd, CURR_RATE_PGM_CD, CHANNEL_AGGREGATE_CD  ) ;",nonrefundable_rpgs.sas
"SELECT * FROM nonref.Gross_NOS ORDER BY marsha ,rpgm;",nonrefundable_rpgs.sas
"SELECT * FROM nonref.STAYED_PAID_NOS ORDER BY marsha ,rpgm;",nonrefundable_rpgs.sas
"SELECT DISTINCT * FROM nonref.nonrefrts ORDER BY marsha ,rpgm;",nonrefundable_rpgs.sas
" CREATE TABLE nonref.Gross_comb AS ( SELECT  *  , room_rv AS noref_room_rv , tot_rv AS noref_rtot_rv , reservations AS noref_res  FROM nonref.Gross_NOS A LEFT JOIN nonref.nonrefrts B ON  A.marsha =  B.marsha AND  A.rpgm =  B.rpgm WHERE a AND b);",nonrefundable_rpgs.sas
"CREATE TABLE nonref.Gross_cmb_ch_ec_sum AS (SELECT MARSHA, CHANAGG, rateoffername, chandet, echantype, echansite, SUM(reservations) AS reservations, SUM(rn) AS rn, SUM(room_rv) AS room_rv, SUM(tot_rv) AS tot_rv, SUM(noref_res) AS noref_res, SUM(noref_rn) AS noref_rn, SUM(noref_room_rv) AS noref_room_rv, SUM(noref_rtot_rv) AS noref_rtot_rv FROM nonref.Gross_comb GROUP BY MARSHA, CHANAGG, rateoffername, chandet, echantype, echansite );",nonrefundable_rpgs.sas
"SELECT * FROM nonref.Gross_comb ORDER BY CHANNEL_AGGREGATE_CD,CHANNEL_DETAIL_CD,ECHANNEL_TYPE_CD,ECHANNEL_SITE_CD;",nonrefundable_rpgs.sas
"CREATE TABLE nonref.Gross_abvprp_ch_ec_sum AS (SELECT CHANNEL_AGGREGATE_CD, CHANNEL_DETAIL_CD, ECHANNEL_TYPE_CD, ECHANNEL_SITE_CD, SUM(reservations) AS reservations, SUM(rn) AS rn, SUM(room_rv) AS room_rv, SUM(tot_rv) AS tot_rv, SUM(noref_res) AS noref_res, SUM(noref_rn) AS noref_rn, SUM(noref_room_rv) AS noref_room_rv, SUM(noref_rtot_rv) AS noref_rtot_rv FROM nonref.Gross_comb GROUP BY CHANNEL_AGGREGATE_CD, CHANNEL_DETAIL_CD, ECHANNEL_TYPE_CD, ECHANNEL_SITE_CD );",nonrefundable_rpgs.sas
 CREATE TABLE Gross_cmb_ch_ec_sum_T3 AS ( SELECT  *  FROM nonref.Gross_cmb_ch_ec_sum  WHERE _TYPE_=3);,nonrefundable_rpgs.sas
 CREATE TABLE Gross_cmb_ch_ec_sum_T4 AS ( SELECT  *  FROM nonref.Gross_cmb_ch_ec_sum  WHERE _TYPE_=4);,nonrefundable_rpgs.sas
 CREATE TABLE Gross_cmb_ch_ec_sum_T4 AS ( SELECT  *  FROM nonref.Gross_cmb_ch_ec_sum  WHERE _TYPE_=4);,nonrefundable_rpgs.sas
 CREATE TABLE Gross_cmb_ch_ec_sum_T62 AS ( SELECT  *  FROM nonref.Gross_cmb_ch_ec_sum  WHERE _TYPE_=62);,nonrefundable_rpgs.sas
" CREATE TABLE nonref.STAYED_PAID_comb AS ( SELECT  *  , room_rv AS noref_room_rv , tot_rv AS noref_rtot_rv , reservations AS noref_res  FROM nonref.STAYED_PAID_NOS A LEFT JOIN nonref.nonrefrts B ON  A.marsha =  B.marsha AND  A.rpgm =  B.rpgm WHERE a AND b);",nonrefundable_rpgs.sas
"CREATE TABLE ""\\Hdqmdm1fpcl4v1\lodg-revmgmt\RM EAnlys\MikeS\Nonref\Gross_comb_sum.TXT"" AS ( SELECT * FROM nonref.Gross_comb_ch_sum) ;",nonrefundable_rpgs.sas
"CREATE TABLE ""\\Hdqmdm1fpcl4v1\lodg-revmgmt\RM EAnlys\MikeS\Nonref\Gross_comb_rprm_det.TXT"" AS ( SELECT * FROM nonref.Gross_comb) ;",nonrefundable_rpgs.sas
"CREATE TABLE nonref.STAYED_PAID_comb_sum AS (SELECT MARSHA, SUM(reservations) AS reservations, SUM(rn) AS rn, SUM(room_rv) AS room_rv, SUM(tot_rv) AS tot_rv, SUM(noref_res) AS noref_res, SUM(noref_rn) AS noref_rn, SUM(noref_room_rv) AS noref_room_rv, SUM(noref_rtot_rv) AS noref_rtot_rv FROM nonref.STAYED_PAID_comb GROUP BY MARSHA );",nonrefundable_rpgs.sas
"CREATE TABLE ""\\Hdqmdm1fpcl4v1\lodg-revmgmt\RM EAnlys\MikeS\Nonref\STAYED_PAID_comb_sum.TXT"" AS ( SELECT * FROM nonref.STAYED_PAID_comb_sum) ;",nonrefundable_rpgs.sas
"CREATE TABLE ""\\Hdqmdm1fpcl4v1\lodg-revmgmt\RM EAnlys\MikeS\Nonref\STAYED_PAID_comb_rprm_det.TXT"" AS ( SELECT * FROM nonref.STAYED_PAID_comb) ;",nonrefundable_rpgs.sas
" CREATE TABLE OutboundData AS  ( select a.report_year, a.report_pd_mo AS report_month, btrim( a.sm_channel) AS goal_mgr_channel, btrim( a.sm_curr_org_nm) AS org_name, btrim( a.sm_curr_market_nm) AS mrkt_name, btrim( a.sm_curr_area_nm) AS area_name, CASE WHEN a.sm_segment='Sales Executive' THEN 'Sales Executive' when a.sm_segment='Prospect' THEN 'Market Account Executive, Prospect' when a.sm_segment='Association' THEN 'Market Account Executive, Association' when a.sm_segment='EST' THEN 'Market Account Executive, EST' when a.sm_segment='Affinity' THEN 'Area Account Executive, Affinity' when a.sm_segment='Government' THEN 'Area Account Executive, Government' when a.sm_segment='Mid-Market' THEN 'Market Account Executive, Mid-Market' when a.sm_segment='Whsale/FIT/Tour & Travel' THEN 'Market Account Executive, Whsale/FIT/Tour & Travel' END AS sm_role_nm, a.sm_eid AS EID, a.sm_name AS goal_mgr_name, a.acct_comp_type AS act_comp, a.marsha_cd, SUM( a.net_rm_rev) AS pace_rm_rev, SUM( a.net_cat_rev) AS pace_tot_cat_rev, 'SGR_Data' AS data_source FROM sgr_fact_smry_quote_flt a WHERE a.report_year IN ( &curyr.-1,&curyr. ) AND a.acct_comp_type IN ( 'Assigned Account out of Organization','Non Assigned Account out of Organization') AND a.net_rm_rev <>0 AND a.sm_eid=a.orig_mgr_eid GROUP BY a.report_year, a.report_pd_mo, a.sm_channel, a.sm_curr_org_nm, a.sm_curr_market_nm, a.sm_curr_area_nm, a.sm_segment, a.sm_eid, a.sm_name, a.acct_comp_type, a.marsha_cd, data_source  ) ;",OutboundData.sas
" CREATE TABLE OTBND_ADJST AS ( SELECT SM_ROLE_NM, ACT_COMP, PACE_RM_REV, PACE_TOT_CAT_REV, RPT_YR AS REPORT_YEAR, RPT_PD_MO AS REPORT_MONTH, SLS_CHANNEL AS GOAL_MGR_CHANNEL, MARSHA AS MARSHA_CD, SM_ORG_NM AS ORG_NAME, SM_MKT_NM AS MRKT_NAME, SM_AREA_NM AS AREA_NAME, SM_EID AS EID, SM_NAME AS GOAL_MGR_NAME, 'Manual_Adds' AS DATA_SOURCE , CASE WHEN  RTRIM( PRP_ORG_NM) =""""  THEN 'Not Participating' ELSE PRP_ORG_NM END AS ORG_OF_PROPERTY, CASE WHEN  SM_ROLE_NM='Area Account Executive, Mid-Market'  THEN 'Market Account Executive, Mid-Market' END AS SM_ROLE_NM FROM MGR_ADJST  WHERE ACT_COMP IN ( 'Assigned Account out of Organization','Non Assigned Account out of Organization') AND UPPER( SM_EID)=UPPER( ORIG_MGR_EID ) );",OutboundData.sas
" CREATE TABLE Outbound AS ( SELECT  *  , FORMAT(DATA_SOURCE, VARCHAR(11)) AS DATA_SOURCE , CASE WHEN  MARSHA_CD='WASSH'  THEN 'WASAK' WHEN  MARSHA_CD='STLDT'  THEN 'STLMG' END AS MARSHA_CD FROM OutboundData UNION ALL SELECT  *  , FORMAT(DATA_SOURCE, VARCHAR(11)) AS DATA_SOURCE , CASE WHEN  MARSHA_CD='WASSH'  THEN 'WASAK' WHEN  MARSHA_CD='STLDT'  THEN 'STLMG' END AS MARSHA_CD FROM OTBND_ADJST);",OutboundData.sas
 CREATE TABLE PROPS_W_STARWOOD AS  ( SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER ORDER BY MARSHA  )  ;,OutboundData.sas
" CREATE TABLE Outbound2 AS select a.report_year, a.report_month, a.goal_mgr_channel, a.org_name, CASE WHEN a.goal_mgr_channel = 'Market Sales' THEN 'Market-Deployed' ELSE a.mrkt_name END AS mrkt_name, CASE WHEN a.goal_mgr_channel = 'Market Sales' THEN 'Market-Deployed' ELSE a.area_name END AS area_name, CASE WHEN b.org_name is null THEN 'Non-Participating' ELSE b.market_name END AS sfo_market, CASE WHEN b.org_name is null THEN 'Non-Participating' ELSE b.area_name END AS sfo_area, a.sm_role_nm, a.eid, a.goal_mgr_name, a.act_comp, CASE WHEN b.org_name is not null THEN b.org_name when b.org_name is null AND c.region_name IN ( 'Americas East','Americas West') AND c.state <> 'HI' THEN 'Non-Participating US' when b.org_name is null AND c.region_name IN ( 'Canada') THEN 'Non-Participating Canada' when b.org_name is null AND c.region_name IN ( 'Americas West') AND c.state = 'HI' THEN 'Non-Participating Hawaii' when b.org_name is null AND c.region_name IN ( 'Caribbean Latin America') THEN 'Non-Participating CALA' ELSE 'Non-Participating Other' END AS org_of_property, a.marsha_cd, a.pace_rm_rev, a.pace_tot_cat_rev, a.data_source, c.owner, c.hotel_name FROM Outbound a LEFT JOIN prp_snap.areasls_prop_&curyr._&period B ON a.marsha_cd=b.marsha_code LEFT JOIN props_w_starwood c ON a.marsha_cd=c.marsha ;",OutboundData.sas
"CREATE TABLE ""&DEST.\OTBNDProd.CSV"" AS ( SELECT * FROM Outbound2) ;",OutboundData.sas
"CREATE TABLE ""&DEST2.\OTBNDProd.CSV"" AS ( SELECT * FROM Outbound2) ;",OutboundData.sas
"CREATE TABLE WORK.STR_D  AS ( SELECT AFF , CENSUS , CHAINID , DATETY , DATELY , MARCAPTY , MAROCCTY , MARREVTY , MARCAPLY , MAROCCLY , MARREVLY , MKTCAPTY , MKTOCCTY , MKTREVTY , MKTCAPLY , MKTOCCLY , MKTREVLY , MASCCAPTY , MASCOCCTY , MASCREVTY , MASCCAPLY , MASCOCCLY , MASCREVLY , OCCRANKTY , ADRRANKTY , REVPARRANKTY , OCCPERCCHGRANKTY , ADRPERCCHGRANKTY , REVPARPERCCHGRANKTY , OCCRANKLY , ADRRANKLY , REVPARRANKLY , OCCPERCCHGRANKLY , ADRPERCCHGRANKLY , REVPARPERCCHGRANKLY , MARLocRevTY , MarLocRevLY , mktLocRevTY , mktLocRevLY , MASCLocRevTY , MASCLocRev FROM ""\\Hdqmdm1fpcl4v1\lodg-revmgmt\DSS\star_data\DaySTR_Raw_Data\ddMARR&DBEGL7..txt"" );",OY_DATA.sas
" CREATE TABLE MS2 AS ( SELECT MARSHA, STR_ID, STR_ID AS CENSUS FROM PLU  WHERE STR_ID<>' ');",OY_DATA.sas
SELECT * FROM MS2 ORDER BY CENSUS;,OY_DATA.sas
SELECT * FROM STR_D ORDER BY CENSUS;,OY_DATA.sas
 CREATE TABLE STR_D2 AS ( SELECT  *  FROM STR_D A JOIN MS2 B ON  A.CENSUS =  B.CENSUS);,OY_DATA.sas
 CREATE TABLE DATES AS SELECT UNIQUE DATETY AS DT FROM STR_D ORDER BY DT DESC;,OY_DATA.sas
 CREATE TABLE WK_DATES AS ( SELECT  *  FROM DATES );,OY_DATA.sas
SELECT * FROM WK_DATES ORDER BY DT;,OY_DATA.sas
 CREATE TABLE WK_STRT AS ( SELECT  *  FROM WK_DATES );,OY_DATA.sas
 SELECT DT INTO :WK_START FROM WK_STRT;,OY_DATA.sas
 CREATE TABLE LAST_DATE AS ( SELECT  *  FROM DATES );,OY_DATA.sas
 SELECT DT INTO :CURDATE FROM LAST_DATE;,OY_DATA.sas
 CREATE TABLE MTD_DATES AS ( SELECT  *  FROM DATES  WHERE DT BETWEEN &MTD_START AND &CURDATE);,OY_DATA.sas
"CREATE TABLE MTD_DATES_LY AS ( SELECT  *  , DT - 10000 AS DT_LY  FROM MTD_DATES );",OY_DATA.sas
ALTER TABLE MTD_DATES_LY DROP COLUMN DT ;,OY_DATA.sas
" CREATE TABLE WK_SUB AS ( SELECT  *  FROM STR_D2  WHERE DATETY IN ( %DO_OVER( DTS_WK, PHRASE=?) ));",OY_DATA.sas
" CREATE TABLE WK_SUB_incl_excep AS select census, a.marsha, datety, dately, marcapty, maroccty, marcaply, maroccly, mktcapty, mktoccty, mktcaply, mktoccly , CASE WHEN b.currency = ""USD"" THEN marrevty ELSE marlocrevty END AS marlocrevty , CASE WHEN b.currency = ""USD"" THEN marrevly ELSE marlocrevly END AS marlocrevly , CASE WHEN b.currency = ""USD"" THEN mktrevty ELSE mktlocrevty END AS mktlocrevty , CASE WHEN b.currency = ""USD"" THEN mktrevly ELSE mktlocrevly END AS mktlocrevly FROM WK_SUB a LEFT JOIN exceptions AS b ON a.marsha = b.marsha;",OY_DATA.sas
" CREATE TABLE WK_MAR AS SELECT a.MARSHA AS MARSHA, 'W' AS TIMEF, MIN( DATETY) AS START_DATE, MAX( DATETY) AS END_DATE, 'M' AS REC_TYPE, ( SUM( MAROCCTY)/SUM( MARCAPTY))*100 AS OCC_TY, ( SUM( MAROCCLY)/SUM( MARCAPLY))*100 AS OCCLY, ( CALCULATED OCC_TY - CALCULATED OCCLY/ CALCULATED OCCLY)*100 AS OCC_CHG, ( SUM( marlocrevty)/SUM( MAROCCTY)) AS ADR_TY, ( SUM( marlocrevly)/SUM( MAROCCLY)) AS ADRLY, ( CALCULATED ADR_TY - CALCULATED ADRLY/ CALCULATED ADRLY)*100 AS ADR_CHG, ( SUM( marlocrevty)/SUM( MARCAPTY)) AS REVPAR_TY, ( SUM( marlocrevly)/SUM( MARCAPLY)) AS REVPARLY, ( CALCULATED REVPAR_TY - CALCULATED REVPARLY/ CALCULATED REVPARLY)*100 AS REVPAR_CHG, '' AS DENOM, '' AS BLANK FROM WK_SUB_incl_excep a WHERE a.MARSHA<>'' GROUP BY a.MARSHA;",OY_DATA.sas
" CREATE TABLE WK_MKT AS SELECT a.MARSHA AS MARSHA, 'W' AS TIMEF, MIN( DATETY) AS START_DATE, MAX( DATETY) AS END_DATE, 'C' AS REC_TYPE, ( SUM( MKTOCCTY)/SUM( MKTCAPTY))*100 AS OCC_TY, ( SUM( MKTOCCLY)/SUM( MKTCAPLY))*100 AS OCCLY, ( CALCULATED OCC_TY - CALCULATED OCCLY/ CALCULATED OCCLY)*100 AS OCC_CHG, ( SUM( mktlocrevty)/SUM( MKTOCCTY)) AS ADR_TY, ( SUM( mktlocrevly)/SUM( MKTOCCLY)) AS ADRLY, ( CALCULATED ADR_TY - CALCULATED ADRLY/ CALCULATED ADRLY)*100 AS ADR_CHG, ( SUM( mktlocrevty)/SUM( MKTCAPTY)) AS REVPAR_TY, ( SUM( mktlocrevly)/SUM( MKTCAPLY)) AS REVPARLY, ( CALCULATED REVPAR_TY - CALCULATED REVPARLY/ CALCULATED REVPARLY)*100 AS REVPAR_CHG, '' AS DENOM, '' AS BLANK FROM WK_SUB_incl_excep a WHERE a.MARSHA<>'' GROUP BY a.MARSHA;",OY_DATA.sas
" CREATE TABLE WK_IND AS SELECT M.MARSHA, 'W' AS TIMEF, M.START_DATE, M.END_DATE, 'I' AS REC_TYPE, ( M.OCC_TY/K.OCC_TY)*100 AS OCC_TY, ( M.OCCLY/K.OCCLY)*100 AS OCCLY, ( CALCULATED OCC_TY - CALCULATED OCCLY/ CALCULATED OCCLY)*100 AS OCC_CHG, ( M.ADR_TY/K.ADR_TY)*100 AS ADR_TY, ( M.ADRLY/K.ADRLY)*100 AS ADRLY, ( CALCULATED ADR_TY - CALCULATED ADRLY/ CALCULATED ADRLY)*100 AS ADR_CHG, ( M.REVPAR_TY/K.REVPAR_TY)*100 AS REVPAR_TY, ( M.REVPARLY/K.REVPARLY)*100 AS REVPARLY, ( CALCULATED REVPAR_TY - CALCULATED REVPARLY/ CALCULATED REVPARLY)*100 AS REVPAR_CHG, '' AS DENOM, '' AS BLANK FROM WK_MAR M, WK_MKT K WHERE M.MARSHA = K.MARSHA;",OY_DATA.sas
" CREATE TABLE MTD_SUB_TY AS ( SELECT  *  FROM STR_D2  WHERE DATETY IN ( %DO_OVER( DTS_MTD, PHRASE=?) ));",OY_DATA.sas
" CREATE TABLE MTD_SUBLY AS ( SELECT  *  FROM STR_D2  WHERE DATELY IN ( %DO_OVER( DTS_MTD_LY, PHRASE=?) ));",OY_DATA.sas
" CREATE TABLE MTD_SUB_TY_incl_excep AS select census, a.marsha, datety, dately, marcapty, maroccty, marcaply, maroccly, mktcapty, mktoccty, mktcaply, mktoccly , CASE WHEN b.currency = ""USD"" THEN marrevty ELSE marlocrevty END AS marlocrevty , CASE WHEN b.currency = ""USD"" THEN marrevly ELSE marlocrevly END AS marlocrevly , CASE WHEN b.currency = ""USD"" THEN mktrevty ELSE mktlocrevty END AS mktlocrevty , CASE WHEN b.currency = ""USD"" THEN mktrevly ELSE mktlocrevly END AS mktlocrevly FROM MTD_SUB_TY a LEFT JOIN exceptions AS b ON a.marsha = b.marsha;",OY_DATA.sas
" CREATE TABLE MTD_SUB_LY_incl_excep AS select census, a.marsha, datety, dately, marcapty, maroccty, marcaply, maroccly, mktcapty, mktoccty, mktcaply, mktoccly , CASE WHEN b.currency = ""USD"" THEN marrevty ELSE marlocrevty END AS marlocrevty , CASE WHEN b.currency = ""USD"" THEN marrevly ELSE marlocrevly END AS marlocrevly , CASE WHEN b.currency = ""USD"" THEN mktrevty ELSE mktlocrevty END AS mktlocrevty , CASE WHEN b.currency = ""USD"" THEN mktrevly ELSE mktlocrevly END AS mktlocrevly FROM MTD_SUBLY a LEFT JOIN exceptions AS b ON a.marsha = b.marsha;",OY_DATA.sas
" CREATE TABLE MTD_MAR AS SELECT T.MARSHA AS MARSHA, 'M' AS TIMEF, MIN( T.DATETY) AS START_DATE, MAX( T.DATETY) AS END_DATE, 'M' AS REC_TYPE, ( SUM( T.MAROCCTY)/SUM( T.MARCAPTY))*100 AS OCC_TY, ( SUM( L.MAROCCLY)/SUM( L.MARCAPLY))*100 AS OCCLY, ( CALCULATED OCC_TY - CALCULATED OCCLY/ CALCULATED OCCLY)*100 AS OCC_CHG, ( SUM( T.marlocrevty)/SUM( T.MAROCCTY)) AS ADR_TY, ( SUM( L.marlocrevly)/SUM( L.MAROCCLY)) AS ADRLY, ( CALCULATED ADR_TY - CALCULATED ADRLY/ CALCULATED ADRLY)*100 AS ADR_CHG, ( SUM( T.marlocrevty)/SUM( T.MARCAPTY)) AS REVPAR_TY, ( SUM( L.marlocrevly)/SUM( L.MARCAPLY)) AS REVPARLY, ( CALCULATED REVPAR_TY - CALCULATED REVPARLY/ CALCULATED REVPARLY)*100 AS REVPAR_CHG, '' AS DENOM, '' AS BLANK FROM MTD_SUB_TY_incl_excep AS T INNER JOIN MTD_SUB_LY_incl_excep AS L ON T.MARSHA = L.MARSHA WHERE T.MARSHA<>'' GROUP BY T.MARSHA;",OY_DATA.sas
" CREATE TABLE MTD_MKT AS SELECT T.MARSHA AS MARSHA, 'M' AS TIMEF, MIN( T.DATETY) AS START_DATE, MAX( T.DATETY) AS END_DATE, 'C' AS REC_TYPE, ( SUM( T.MKTOCCTY)/SUM( T.MKTCAPTY))*100 AS OCC_TY, ( SUM( L.MKTOCCLY)/SUM( L.MKTCAPLY))*100 AS OCCLY, ( CALCULATED OCC_TY - CALCULATED OCCLY/ CALCULATED OCCLY)*100 AS OCC_CHG, ( SUM( T.mktlocrevty)/SUM( T.MKTOCCTY)) AS ADR_TY, ( SUM( L.mktlocrevly)/SUM( L.MKTOCCLY)) AS ADRLY, ( CALCULATED ADR_TY - CALCULATED ADRLY/ CALCULATED ADRLY)*100 AS ADR_CHG, ( SUM( T.mktlocrevty)/SUM( T.MKTCAPTY)) AS REVPAR_TY, ( SUM( L.mktlocrevly)/SUM( L.MKTCAPLY)) AS REVPARLY, ( CALCULATED REVPAR_TY - CALCULATED REVPARLY/ CALCULATED REVPARLY)*100 AS REVPAR_CHG, '' AS DENOM, '' AS BLANK FROM MTD_SUB_TY_incl_excep AS T INNER JOIN MTD_SUB_LY_incl_excep AS L ON T.MARSHA = L.MARSHA WHERE T.MARSHA<>'' GROUP BY T.MARSHA;",OY_DATA.sas
" CREATE TABLE MTD_IND AS SELECT M.MARSHA, 'M' AS TIMEF, M.START_DATE, M.END_DATE, 'I' AS REC_TYPE, ( M.OCC_TY/K.OCC_TY)*100 AS OCC_TY, ( M.OCCLY/K.OCCLY)*100 AS OCCLY, ( CALCULATED OCC_TY - CALCULATED OCCLY/ CALCULATED OCCLY)*100 AS OCC_CHG, ( M.ADR_TY/K.ADR_TY)*100 AS ADR_TY, ( M.ADRLY/K.ADRLY)*100 AS ADRLY, ( CALCULATED ADR_TY - CALCULATED ADRLY/ CALCULATED ADRLY)*100 AS ADR_CHG, ( M.REVPAR_TY/K.REVPAR_TY)*100 AS REVPAR_TY, ( M.REVPARLY/K.REVPARLY)*100 AS REVPARLY, ( CALCULATED REVPAR_TY - CALCULATED REVPARLY/ CALCULATED REVPARLY)*100 AS REVPAR_CHG, '' AS DENOM, '' AS BLANK FROM MTD_MAR AS M INNER JOIN MTD_MKT AS K ON M.MARSHA = K.MARSHA;",OY_DATA.sas
"CREATE TABLE MTD_RANK  AS ( SELECT CENSUS: , CHAINID: , HOT_NAME: , TIME_FR: , OCC_RANK: , ADR_RANK: , REVPAR_RANK: , OCC_CHG_RANK: , ADR_CHG_RANK: , REVPAR_CHG_RAN FROM ""\\Hdqmdm1fpcl4v1\lodg-revmgmt\DSS\star_data\DaySTR_Raw_Data\MTDRANK_&DBEGL7..TXT"" );",OY_DATA.sas
"ALTER TABLE MTD_RANK  DROP COLUMN CHAINID ,  HOT_NAME ;",OY_DATA.sas
" CREATE TABLE MTD_RANK_2 AS SELECT M.MARSHA, 'M' AS TIMEF, &MTD_START AS START_DATE, &CURDATE AS END_DATE, 'R' AS REC_TYPE, CAST( MTD.OCC_RANK, 2. ) AS OCC_TY, CAST( MTD.OCC_CHG_RANK, 2. ) AS OCC_CHG, CAST( MTD.ADR_RANK, 2. ) AS ADR_TY, CAST( MTD.ADR_CHG_RANK, 2. ) AS ADR_CHG, CAST( MTD.REVPAR_RANK, 2. ) AS REVPAR_TY, CAST( MTD.REVPAR_CHG_RANK, 2. ) AS REVPAR_CHG, MTD.DENOM, '' AS BLANK FROM MTD_CLEAN MTD LEFT JOIN MS2 M ON MTD.CENSUS = M.CENSUS WHERE MARSHA<>"""";",OY_DATA.sas
"CREATE TABLE WEEK_RANK AS ( SELECT CENSUS: , CHAINID: , HOT_NAME: , TIME_FR: , OCC_RANK: , ADR_RANK: , REVPAR_RANK: , OCC_CHG_RANK: , ADR_CHG_RANK: , REVPAR_CHG_RAN FROM ""\\Hdqmdm1fpcl4v1\lodg-revmgmt\DSS\star_data\DaySTR_Raw_Data\WEEKRANK_&DBEGL7..TXT"" );",OY_DATA.sas
"ALTER TABLE WEEK_RANK DROP COLUMN CHAINID ,  HOT_NAME ,  TIME_FR ;",OY_DATA.sas
" CREATE TABLE WEEK_RANK_2 AS SELECT M.MARSHA, 'W' AS TIMEF, &WK_START AS START_DATE, &CURDATE AS END_DATE, 'R' AS REC_TYPE, CAST( W.OCC_RANK, 2. ) AS OCC_TY, CAST( W.OCC_CHG_RANK, 2. ) AS OCC_CHG, CAST( W.ADR_RANK, 2. ) AS ADR_TY, CAST( W.ADR_CHG_RANK, 2. ) AS ADR_CHG, CAST( W.REVPAR_RANK, 2. ) AS REVPAR_TY, CAST( W.REVPAR_CHG_RANK, 2. ) AS REVPAR_CHG, W.DENOM, '' AS BLANK FROM WEEK_CLEAN W LEFT JOIN MS2 M ON W.CENSUS = M.CENSUS WHERE MARSHA<>"""";",OY_DATA.sas
 CREATE TABLE RANK AS ( SELECT  *  FROM MTD_RANK_2 UNION ALL SELECT  *  FROM WEEK_RANK_2);,OY_DATA.sas
"CREATE TABLE EXPORT AS ( SELECT  *  , FORMAT(ROUND( OCC_TY, 0.001 ), FLOAT(6, 1))  AS OCC_TY , FORMAT(ROUND( OCC_CHG, 0.0001 ), FLOAT(6, 1))  AS OCC_CHG , FORMAT(ROUND( ADR_TY, 0.00001 ), FLOAT(6, 2))  AS ADR_TY , FORMAT(ROUND( ADR_CHG, 0.0001 ), FLOAT(6, 1))  AS ADR_CHG , FORMAT(ROUND( REVPAR_TY, 0.0001 ), FLOAT(6, 2))  AS REVPAR_TY , FORMAT(ROUND( REVPAR_CHG, 0.0001 ), FLOAT(6, 1))  AS REVPAR_CHG  FROM WK_MAR UNION ALL SELECT  *  , FORMAT(ROUND( OCC_TY, 0.001 ), FLOAT(6, 1))  AS OCC_TY , FORMAT(ROUND( OCC_CHG, 0.0001 ), FLOAT(6, 1))  AS OCC_CHG , FORMAT(ROUND( ADR_TY, 0.00001 ), FLOAT(6, 2))  AS ADR_TY , FORMAT(ROUND( ADR_CHG, 0.0001 ), FLOAT(6, 1))  AS ADR_CHG , FORMAT(ROUND( REVPAR_TY, 0.0001 ), FLOAT(6, 2))  AS REVPAR_TY , FORMAT(ROUND( REVPAR_CHG, 0.0001 ), FLOAT(6, 1))  AS REVPAR_CHG  FROM WK_MKT UNION ALL SELECT  *  , FORMAT(ROUND( OCC_TY, 0.001 ), FLOAT(6, 1))  AS OCC_TY , FORMAT(ROUND( OCC_CHG, 0.0001 ), FLOAT(6, 1))  AS OCC_CHG , FORMAT(ROUND( ADR_TY, 0.00001 ), FLOAT(6, 2))  AS ADR_TY , FORMAT(ROUND( ADR_CHG, 0.0001 ), FLOAT(6, 1))  AS ADR_CHG , FORMAT(ROUND( REVPAR_TY, 0.0001 ), FLOAT(6, 2))  AS REVPAR_TY , FORMAT(ROUND( REVPAR_CHG, 0.0001 ), FLOAT(6, 1))  AS REVPAR_CHG  FROM WK_IND UNION ALL SELECT  *  , FORMAT(ROUND( OCC_TY, 0.001 ), FLOAT(6, 1))  AS OCC_TY , FORMAT(ROUND( OCC_CHG, 0.0001 ), FLOAT(6, 1))  AS OCC_CHG , FORMAT(ROUND( ADR_TY, 0.00001 ), FLOAT(6, 2))  AS ADR_TY , FORMAT(ROUND( ADR_CHG, 0.0001 ), FLOAT(6, 1))  AS ADR_CHG , FORMAT(ROUND( REVPAR_TY, 0.0001 ), FLOAT(6, 2))  AS REVPAR_TY , FORMAT(ROUND( REVPAR_CHG, 0.0001 ), FLOAT(6, 1))  AS REVPAR_CHG  FROM MTD_MAR UNION ALL SELECT  *  , FORMAT(ROUND( OCC_TY, 0.001 ), FLOAT(6, 1))  AS OCC_TY , FORMAT(ROUND( OCC_CHG, 0.0001 ), FLOAT(6, 1))  AS OCC_CHG , FORMAT(ROUND( ADR_TY, 0.00001 ), FLOAT(6, 2))  AS ADR_TY , FORMAT(ROUND( ADR_CHG, 0.0001 ), FLOAT(6, 1))  AS ADR_CHG , FORMAT(ROUND( REVPAR_TY, 0.0001 ), FLOAT(6, 2))  AS REVPAR_TY , FORMAT(ROUND( REVPAR_CHG, 0.0001 ), FLOAT(6, 1))  AS REVPAR_CHG  FROM MTD_MKT UNION ALL SELECT  *  , FORMAT(ROUND( OCC_TY, 0.001 ), FLOAT(6, 1))  AS OCC_TY , FORMAT(ROUND( OCC_CHG, 0.0001 ), FLOAT(6, 1))  AS OCC_CHG , FORMAT(ROUND( ADR_TY, 0.00001 ), FLOAT(6, 2))  AS ADR_TY , FORMAT(ROUND( ADR_CHG, 0.0001 ), FLOAT(6, 1))  AS ADR_CHG , FORMAT(ROUND( REVPAR_TY, 0.0001 ), FLOAT(6, 2))  AS REVPAR_TY , FORMAT(ROUND( REVPAR_CHG, 0.0001 ), FLOAT(6, 1))  AS REVPAR_CHG  FROM MTD_IND);",OY_DATA.sas
"ALTER TABLE EXPORT DROP COLUMN OCCLY ,  ADRLY ,  REVPARLY ;",OY_DATA.sas
INSERT INTO TABLE EXPORT SELECT * FROM RANK;,OY_DATA.sas
CREATE TABLE '\\Hdqmdm1fpcl4v1\lodg-star\CA_PROCESSING\WEEKLY_PROCESSING\2_SECONDARY_REPORTING\ONE_YIELD_DATA\OUTPUT\OY_MARKETSHARE.TXT' AS ( SELECT * FROM EXPORT) ;,OY_DATA.sas
" CREATE TABLE PACE_ADJUSTMENTS1 AS  ( select * FROM sgr_flat_manual_adjustments WHERE adj_year_id IN ( &lyyear,&curyr)  )  ;",Pace_ManAdjustments_Detail_AW.sas
"CREATE TABLE CLEANDATA AS ( SELECT  *, ORIG_SLS_MGR_LOGIN AS SLS_MGR_LOGIN FROM PACE_ADJUSTMENTS1  WHERE UPPER( ACCT_COMP_TYPE) not IN ( ""NON ASSIGNED ACCOUNT not IN ORGANIZATION"",""NON ASSIGNED ACCOUNT OUT OF ORGANIZATION"") AND SLS_MGR_ROLE IN ( ""Market Account Executive, Whsale/FIT/Tour & Travel"",""Sales Executive""));",Pace_ManAdjustments_Detail_AW.sas
ALTER TABLE CLEANDATA DROP COLUMN SLS_MGR_LOGIN ;,Pace_ManAdjustments_Detail_AW.sas
" CREATE TABLE CLEANDATA1 AS ( SELECT  * , CASE WHEN  MARSHA_CD=""WASSH""  THEN ""WASAK"" WHEN  MARSHA_CD=""STLDT""  THEN ""STLMG"" END AS MARSHA_CD FROM CLEANDATA );",Pace_ManAdjustments_Detail_AW.sas
SELECT * FROM CLEANDATA1 ORDER BY MARSHA_CD;,Pace_ManAdjustments_Detail_AW.sas
" CREATE TABLE SGR_PRP_NAMES1 AS SELECT RPT_PD_MO, PROP_CD AS MARSHA_CD, PROP_NM, PRP_ORG_ID, PRP_ORG_NM, PRP_MKT_ID, PRP_MKT_NM, PRP_AREA_ID, PRP_AREA_NM FROM NZPROD.sgr_fact_smry_prp_perf WHERE RPT_YR=&CURYR. AND CW_DUAL_TRK_FLG <> ""F"" ORDER BY PROP_CD, RPT_PD_MO DESC;",Pace_ManAdjustments_Detail_AW.sas
"CREATE TABLE SGR_PRP_NAMES AS ( SELECT   * , FIRST(MARSHA_CD) OVER ( PARTITION BY MARSHA_CD GROUP BY MARSHA_CD , DESC , RPT_PD_MO ORDER BY MARSHA_CD , DESC , RPT_PD_MO )  FROM SGR_PRP_NAMES1 );",Pace_ManAdjustments_Detail_AW.sas
ALTER TABLE SGR_PRP_NAMES DROP COLUMN RPT_PD_MO ;,Pace_ManAdjustments_Detail_AW.sas
 CREATE TABLE PROPS_W_STARWOOD AS  ( SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER ORDER BY MARSHA  )  ;,Pace_ManAdjustments_Detail_AW.sas
 CREATE TABLE CLEANDATA BAD_MARSHA AS ( SELECT  *  FROM CLEANDATA1 A JOIN PROPS_W_STARWOOD B ON  A.MARSHA_CD =  B.MARSHA_CD JOIN SGR_PRP_NAMES C ON  B.MARSHA_CD =  C.MARSHA_CD WHERE A AND B AND not C);,Pace_ManAdjustments_Detail_AW.sas
" CREATE TABLE PROP_ADJST AS ( SELECT  *, ADJ_YEAR_ID AS RPT_YR, ADJ_MONTH_ID AS RPT_PD_MO, MARSHA_CD AS PROP_CD, NET_RM_NGTS AS PACE_RM_NTS, NET_RM_REV AS PACE_RM_REV, NET_FUNC_REV AS PACE_TOT_CAT_REV, TOTAL_NET_REV AS PACE_TOT_REV_PRD, ACCT_COMP_TYPE AS ACT_COMP, 0 AS PACE_CUR_RM_NTS , 0 AS PACE_CUR_RM_REV , 0 AS PACE_CUR_GRP_CAT_REV , 0 AS PACE_CUR_LOC_CAT_REV , 0 AS PACE_CUR_TOT_CAT_REV , 0 AS PACE_FUT_RM_NTS , 0 AS PACE_FUT_RM_REV , 0 AS PACE_FUT_GRP_CAT_REV , 0 AS PACE_FUT_LOC_CAT_REV , 0 AS PACE_FUT_TOT_CAT_REV , 0 AS PACE_GRP_CAT_REV , 0 AS PACE_LOC_CAT_REV , 0 AS PACE_TOT_REV_GL , 0 AS AP_TRNS_RM_NTS , 0 AS AP_TRNS_RM_REV , 0 AS AP_CNTR_RM_NTS , 0 AS AP_CNTR_RM_REV , 0 AS AP_TOT_RM_REV_GL , 0 AS EXT_TRNS_RM_NTS , 0 AS EXT_TRNS_RM_REV , 0 AS EXT_CNTR_RM_NTS , 0 AS EXT_CNTR_RM_REV , 0 AS EXT_TOT_RM_NTS , 0 AS EXT_TOT_RM_REV , ""N"" AS CW_DUAL_TRK_FLG , 1 AS YR_LOCK_IND , ""Man_Adj"" AS DATA_SOURCE , CASE WHEN  AP_TOT_RM_NTS=' '  THEN 0 END AS AP_TOT_RM_NTS, CASE WHEN  AP_TOT_RM_REV_PRD=' '  THEN 0 END AS AP_TOT_RM_REV_PRD FROM CLEANDATA UNION ALL SELECT  *, ADJ_YEAR_ID AS RPT_YR, ADJ_MONTH_ID AS RPT_PD_MO, MARSHA_CD AS PROP_CD, NET_RM_NGTS AS PACE_RM_NTS, NET_RM_REV AS PACE_RM_REV, NET_FUNC_REV AS PACE_TOT_CAT_REV, TOTAL_NET_REV AS PACE_TOT_REV_PRD, ACCT_COMP_TYPE AS ACT_COMP, 0 AS PACE_CUR_RM_NTS , 0 AS PACE_CUR_RM_REV , 0 AS PACE_CUR_GRP_CAT_REV , 0 AS PACE_CUR_LOC_CAT_REV , 0 AS PACE_CUR_TOT_CAT_REV , 0 AS PACE_FUT_RM_NTS , 0 AS PACE_FUT_RM_REV , 0 AS PACE_FUT_GRP_CAT_REV , 0 AS PACE_FUT_LOC_CAT_REV , 0 AS PACE_FUT_TOT_CAT_REV , 0 AS PACE_GRP_CAT_REV , 0 AS PACE_LOC_CAT_REV , 0 AS PACE_TOT_REV_GL , 0 AS AP_TRNS_RM_NTS , 0 AS AP_TRNS_RM_REV , 0 AS AP_CNTR_RM_NTS , 0 AS AP_CNTR_RM_REV , 0 AS AP_TOT_RM_REV_GL , 0 AS EXT_TRNS_RM_NTS , 0 AS EXT_TRNS_RM_REV , 0 AS EXT_CNTR_RM_NTS , 0 AS EXT_CNTR_RM_REV , 0 AS EXT_TOT_RM_NTS , 0 AS EXT_TOT_RM_REV , ""N"" AS CW_DUAL_TRK_FLG , 1 AS YR_LOCK_IND , ""Man_Adj"" AS DATA_SOURCE , CASE WHEN  AP_TOT_RM_NTS=' '  THEN 0 END AS AP_TOT_RM_NTS, CASE WHEN  AP_TOT_RM_REV_PRD=' '  THEN 0 END AS AP_TOT_RM_REV_PRD FROM BAD_MARSHA);",Pace_ManAdjustments_Detail_AW.sas
"CREATE TABLE PROP_ADJ_SUM AS (SELECT RPT_YR, RPT_PD_MO, PROP_CD, PROP_NM, PRP_ORG_ID, PRP_ORG_NM, PRP_MKT_ID, PRP_MKT_NM, PRP_AREA_ID, PRP_AREA_NM, ACT_COMP, CW_DUAL_TRK_FLG, YR_LOCK_IND, DATA_SOURCE, SUM(PACE_CUR_RM_NTS) AS PACE_CUR_RM_NTS, SUM(PACE_CUR_RM_REV) AS PACE_CUR_RM_REV, SUM(PACE_CUR_GRP_CAT_REV) AS PACE_CUR_GRP_CAT_REV, SUM(PACE_CUR_LOC_CAT_REV) AS PACE_CUR_LOC_CAT_REV, SUM(PACE_CUR_TOT_CAT_REV) AS PACE_CUR_TOT_CAT_REV, SUM(PACE_FUT_RM_NTS) AS PACE_FUT_RM_NTS, SUM(PACE_FUT_RM_REV) AS PACE_FUT_RM_REV, SUM(PACE_FUT_GRP_CAT_REV) AS PACE_FUT_GRP_CAT_REV, SUM(PACE_FUT_LOC_CAT_REV) AS PACE_FUT_LOC_CAT_REV, SUM(PACE_FUT_TOT_CAT_REV) AS PACE_FUT_TOT_CAT_REV, SUM(PACE_RM_NTS) AS PACE_RM_NTS, SUM(PACE_RM_REV) AS PACE_RM_REV, SUM(PACE_GRP_CAT_REV) AS PACE_GRP_CAT_REV, SUM(PACE_LOC_CAT_REV) AS PACE_LOC_CAT_REV, SUM(PACE_TOT_CAT_REV) AS PACE_TOT_CAT_REV, SUM(PACE_TOT_REV_PRD) AS PACE_TOT_REV_PRD, SUM(PACE_TOT_REV_GL) AS PACE_TOT_REV_GL, SUM(AP_TRNS_RM_NTS) AS AP_TRNS_RM_NTS, SUM(AP_TRNS_RM_REV) AS AP_TRNS_RM_REV, SUM(AP_CNTR_RM_NTS) AS AP_CNTR_RM_NTS, SUM(AP_CNTR_RM_REV) AS AP_CNTR_RM_REV, SUM(AP_TOT_RM_NTS) AS AP_TOT_RM_NTS, SUM(AP_TOT_RM_REV_PRD) AS AP_TOT_RM_REV_PRD, SUM(AP_TOT_RM_REV_GL) AS AP_TOT_RM_REV_GL, SUM(EXT_TRNS_RM_NTS) AS EXT_TRNS_RM_NTS, SUM(EXT_TRNS_RM_REV) AS EXT_TRNS_RM_REV, SUM(EXT_CNTR_RM_NTS) AS EXT_CNTR_RM_NTS, SUM(EXT_CNTR_RM_REV) AS EXT_CNTR_RM_REV, SUM(EXT_TOT_RM_NTS) AS EXT_TOT_RM_NTS, SUM(EXT_TOT_RM_REV) AS EXT_TOT_RM_REV FROM PROP_ADJST GROUP BY RPT_YR, RPT_PD_MO, PROP_CD, PROP_NM, PRP_ORG_ID, PRP_ORG_NM, PRP_MKT_ID, PRP_MKT_NM, PRP_AREA_ID, PRP_AREA_NM, ACT_COMP, CW_DUAL_TRK_FLG, YR_LOCK_IND, DATA_SOURCE );",Pace_ManAdjustments_Detail_AW.sas
"CREATE TABLE MGR_ADJST AS ( SELECT  *, ADJ_YEAR_ID AS RPT_YR, ADJ_MONTH_ID AS RPT_PD_MO, MARSHA_CD AS PROP_CD, NET_RM_NGTS AS PACE_RM_NTS, NET_RM_REV AS PACE_RM_REV, NET_FUNC_REV AS PACE_TOT_CAT_REV, TOTAL_NET_REV AS PACE_TOT_REV_PRD, SLS_MGR_NM AS SM_NAME, SLS_MGR_LOGIN AS SM_EID, SLS_MGR_ROLE AS SM_ROLE_NM, ORG_NM AS SM_ORG_NM, ORG_NM AS SM_ORG_NM, ACCT_COMP_TYPE AS ACT_COMP, MARSHA_CD AS MARSHA, 0 AS PACE_GRP_CAT_REV , 0 AS PACE_LOC_CAT_REV , 0 AS PACE_TOT_REV_GL , 0 AS AP_TRNS_RM_NTS , 0 AS AP_TRNS_RM_REV , 0 AS AP_CNTR_RM_NTS , 0 AS AP_CNTR_RM_REV , 0 AS AP_TOT_RM_REV_GL , 0 AS EXT_TRNS_RM_NTS , 0 AS EXT_TRNS_RM_REV , 0 AS EXT_CNTR_RM_NTS , 0 AS EXT_CNTR_RM_REV , 0 AS EXT_TOT_RM_NTS , 0 AS EXT_TOT_RM_REV , ""N"" AS CW_DUAL_TRK_FLG , 1 AS YR_LOCK_IND , 0 AS TOTAL_PACE_ID , """" AS TOTAL_PACE_NM , ""ManAdj"" AS DATA_SOURCE , ""C"" AS ACCOUNT_FLG , RTRIM( SUBSTRING( SLS_MGR_ROLE,( INDEX( SLS_MGR_ROLE,"","")+1),RTRIM( LENGTH( SLS_MGR_ROLE))) ) AS SLS_SEGMENT , ORG_NUM AS SM_ORG_ID , MARKET_NUM AS SM_MKT_ID , AREA_NUM AS SM_AREA_ID , CAST( RTRIM( CLARITAS_ID) AS VARCHAR(15)  ) AS ACCOUNT_ID , CASE WHEN  AP_TOT_RM_NTS=' '  THEN 0 END AS AP_TOT_RM_NTS, CASE WHEN  AP_TOT_RM_REV_PRD=' '  THEN 0 END AS AP_TOT_RM_REV_PRD, CASE WHEN  SLS_MGR_ROLE =: ""Market Account""  THEN ""Market Sales"" ELSE ""Area Sales"" END AS SLS_CHANNEL, CASE WHEN  SLS_MGR_ROLE =: ""Market Account""  THEN ""Market-Deployed"" ELSE MARKET_NM END AS SM_MKT_NM, CASE WHEN  SLS_MGR_ROLE =: ""Market Account""  THEN ""Market-Deployed"" ELSE AREA_NM END AS SM_AREA_NM, CASE WHEN  SLS_SEGMENT='Travel Industry Sales'  THEN 'Whsale/FIT/Tour & Travel' ELSE SLS_SEGMENT END AS SLS_SEGMENT1 FROM CLEANDATA UNION ALL SELECT  *, ADJ_YEAR_ID AS RPT_YR, ADJ_MONTH_ID AS RPT_PD_MO, MARSHA_CD AS PROP_CD, NET_RM_NGTS AS PACE_RM_NTS, NET_RM_REV AS PACE_RM_REV, NET_FUNC_REV AS PACE_TOT_CAT_REV, TOTAL_NET_REV AS PACE_TOT_REV_PRD, SLS_MGR_NM AS SM_NAME, SLS_MGR_LOGIN AS SM_EID, SLS_MGR_ROLE AS SM_ROLE_NM, ORG_NM AS SM_ORG_NM, ORG_NM AS SM_ORG_NM, ACCT_COMP_TYPE AS ACT_COMP, MARSHA_CD AS MARSHA, 0 AS PACE_GRP_CAT_REV , 0 AS PACE_LOC_CAT_REV , 0 AS PACE_TOT_REV_GL , 0 AS AP_TRNS_RM_NTS , 0 AS AP_TRNS_RM_REV , 0 AS AP_CNTR_RM_NTS , 0 AS AP_CNTR_RM_REV , 0 AS AP_TOT_RM_REV_GL , 0 AS EXT_TRNS_RM_NTS , 0 AS EXT_TRNS_RM_REV , 0 AS EXT_CNTR_RM_NTS , 0 AS EXT_CNTR_RM_REV , 0 AS EXT_TOT_RM_NTS , 0 AS EXT_TOT_RM_REV , ""N"" AS CW_DUAL_TRK_FLG , 1 AS YR_LOCK_IND , 0 AS TOTAL_PACE_ID , """" AS TOTAL_PACE_NM , ""ManAdj"" AS DATA_SOURCE , ""C"" AS ACCOUNT_FLG , RTRIM( SUBSTRING( SLS_MGR_ROLE,( INDEX( SLS_MGR_ROLE,"","")+1),RTRIM( LENGTH( SLS_MGR_ROLE))) ) AS SLS_SEGMENT , ORG_NUM AS SM_ORG_ID , MARKET_NUM AS SM_MKT_ID , AREA_NUM AS SM_AREA_ID , CAST( RTRIM( CLARITAS_ID) AS VARCHAR(15)  ) AS ACCOUNT_ID , CASE WHEN  AP_TOT_RM_NTS=' '  THEN 0 END AS AP_TOT_RM_NTS, CASE WHEN  AP_TOT_RM_REV_PRD=' '  THEN 0 END AS AP_TOT_RM_REV_PRD, CASE WHEN  SLS_MGR_ROLE =: ""Market Account""  THEN ""Market Sales"" ELSE ""Area Sales"" END AS SLS_CHANNEL, CASE WHEN  SLS_MGR_ROLE =: ""Market Account""  THEN ""Market-Deployed"" ELSE MARKET_NM END AS SM_MKT_NM, CASE WHEN  SLS_MGR_ROLE =: ""Market Account""  THEN ""Market-Deployed"" ELSE AREA_NM END AS SM_AREA_NM, CASE WHEN  SLS_SEGMENT='Travel Industry Sales'  THEN 'Whsale/FIT/Tour & Travel' ELSE SLS_SEGMENT END AS SLS_SEGMENT1 FROM BAD_MARSHA WHERE SLS_MGR_ROLE<>""Citywide Sales Executive"");",Pace_ManAdjustments_Detail_AW.sas
ALTER TABLE MGR_ADJST DROP COLUMN SLS_SEGMENT ;,Pace_ManAdjustments_Detail_AW.sas
"CREATE INDEX SLS_MGR_ROLE,"","" ON MGR_ADJST(SLS_MGR_ROLE,"","");",Pace_ManAdjustments_Detail_AW.sas
" CREATE TABLE SlsMgr_Adjst1 AS ( SELECT  *  , FORMAT(sls_channel, VARCHAR(16)) AS sls_channel , sls_segment AS segment , CASE WHEN  sm_role_nm = 'Sales Executive'  THEN 'Sales Executive' END AS sls_channel FROM Mgr_Adjst  WHERE ACT_COMP<>""Non Assigned Account out of Organization"" AND sm_role_nm IN ( ""Sales Executive"",""Market Account Executive, Whsale/FIT/Tour & Travel""));",Pace_ManAdjustments_Detail_AW.sas
"CREATE TABLE SM_Prop_Adjst1 AS (SELECT rpt_yr, rpt_pd_mo, sm_eid, sm_name, orig_mgr_eid, sm_role_nm, sls_channel, sls_segment, sm_org_nm, sm_org_id, sm_mkt_nm, sm_mkt_id, sm_area_nm, sm_area_id, act_comp, segment, account_id, MARSHA, data_source,  SUM(pace_rm_nts) AS rn, SUM(pace_rm_rev) AS rv, SUM(pace_tot_cat_rev) AS cat_revenue, SUM(pace_tot_rev_prd) AS tot_rv FROM SlsMgr_Adjst1 GROUP BY rpt_yr, rpt_pd_mo, sm_eid, sm_name, orig_mgr_eid, sm_role_nm, sls_channel, sls_segment, sm_org_nm, sm_org_id, sm_mkt_nm, sm_mkt_id, sm_area_nm, sm_area_id, act_comp, segment, account_id, MARSHA, data_source );",Pace_ManAdjustments_Detail_AW.sas
"CREATE TABLE SlsMgr_Adjst AS (SELECT rpt_yr, rpt_pd_mo, sm_eid, sm_name, orig_mgr_eid, sm_role_nm, sls_channel, sls_segment, sm_org_nm, sm_org_id, sm_mkt_nm, sm_mkt_id, sm_area_nm, sm_area_id, act_comp, segment, data_source,  SUM(pace_rm_nts) AS rn, SUM(pace_rm_rev) AS rv, SUM(pace_tot_cat_rev) AS cat_revenue, SUM(pace_tot_rev_prd) AS tot_rv FROM SlsMgr_Adjst1 WHERE rpt_yr=&curyr. GROUP BY rpt_yr, rpt_pd_mo, sm_eid, sm_name, orig_mgr_eid, sm_role_nm, sls_channel, sls_segment, sm_org_nm, sm_org_id, sm_mkt_nm, sm_mkt_id, sm_area_nm, sm_area_id, act_comp, segment, data_source );",Pace_ManAdjustments_Detail_AW.sas
" CREATE TABLE PropProd_vGoal AS  ( select *, 'SGR_Data' AS Data_Source FROM sgr_fact_smry_prp_perf WHERE rpt_yr IN ( %bquote( ')&year.%bquote( '),%bquote( ')&LYYEAR.%bquote( ')) ORDER BY rpt_yr, prp_org_nm ) ;",Prop Prod v Goal.sas
CREATE TABLE PropProd_Final AS ( SELECT  *  FROM PropProd_vGoal UNION ALL SELECT  *  FROM prop_adj_sum);,Prop Prod v Goal.sas
"ALTER TABLE PropProd_Final DROP COLUMN prop_nm ,  prp_org_id ,  prp_org_nm ,  prp_mkt_id ,  prp_mkt_nm ,  prp_area_id ,  prp_area_nm ;",Prop Prod v Goal.sas
" CREATE TABLE Property_Information AS  ( select rpt_yr, rpt_pd_mo, prop_cd, prop_nm, prp_org_id, prp_org_nm, prp_mkt_id, prp_mkt_nm, prp_area_id, prp_area_nm FROM sgr_fact_smry_prp_perf ORDER BY PROP_CD, rpt_yr desc, rpt_pd_mo desc  ) ;",Prop Prod v Goal.sas
"CREATE TABLE RECENT_PRP_REC AS ( SELECT   * ,FIRST(PROP_CD) OVER ( PARTITION BY PROP_CD GROUP BY PROP_CD , DESC , RPT_YR , DESC , RPT_PD_MO ORDER BY PROP_CD , DESC , RPT_YR , DESC , RPT_PD_MO )  FROM PROPERTY_INFORMATION );",Prop Prod v Goal.sas
CREATE TABLE OTHER AS ( SELECT  *  FROM PROPERTY_INFORMATION );,Prop Prod v Goal.sas
 CREATE TABLE PROPS_W_STARWOOD AS  ( SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER ORDER BY MARSHA  )  ;,Prop Prod v Goal.sas
" CREATE TABLE PROPPROD_FINAL2 AS SELECT A.*, COALESCE( B.PROP_NM,C.HOTEL_NAME) AS PROP_NM, CASE WHEN B.PRP_ORG_ID IS NULL THEN 0 ELSE B.PRP_ORG_ID END AS PRP_ORG_ID, CASE WHEN B.PRP_ORG_NM IS NULL THEN '' ELSE B.PRP_ORG_NM END AS PRP_ORG_NM, CASE WHEN B.PRP_MKT_ID IS NULL THEN 0 ELSE B.PRP_MKT_ID END AS PRP_MKT_ID, CASE WHEN B.PRP_MKT_NM IS NULL THEN '' ELSE B.PRP_MKT_NM END AS PRP_MKT_NM, CASE WHEN B.PRP_AREA_ID IS NULL THEN 0 ELSE B.PRP_AREA_ID END AS PRP_AREA_ID, CASE WHEN B.PRP_AREA_NM IS NULL THEN '' ELSE B.PRP_AREA_NM END AS PRP_AREA_NM FROM PROPPROD_FINAL A LEFT JOIN RECENT_PRP_REC B ON A.PROP_CD=B.PROP_CD LEFT JOIN PROPS_W_STARWOOD C ON A.PROP_CD=C.MARSHA ;",Prop Prod v Goal.sas
 CREATE TABLE PROP_PROD_FINAL AS ( SELECT  *  FROM PROPPROD_FINAL2 );,Prop Prod v Goal.sas
"CREATE TABLE ""&DEST.\PropProd_vGoal.CSV"" AS ( SELECT * FROM PROP_PROD_FINAL) ;",Prop Prod v Goal.sas
"CREATE TABLE ""&DEST2.\PropProd_vGoal.CSV"" AS ( SELECT * FROM PROP_PROD_FINAL) ;",Prop Prod v Goal.sas
" CREATE TABLE Pace_Detail_M AS  ( select a.year AS report_year, a.month AS report_month, a.quotenumber AS quote_number, a.marshacode AS marsha_code, a.opportunityname AS quote_name, a.accountname AS CLARITAS_BUSINESS_NAME, a.propertystatus AS quote_status, a.claritasbusinessid AS CLARITAS_ID, a.revenueflag AS STATUS_CHANGE_TYPE, a.orig_source, a.arrivalyear AS stay_year, a.originatingmanagereid AS ORIGINATING_MANAGER_EID, a.statuschangedate, CASE WHEN a.businesstype='Group' THEN 'G' ELSE 'L' END AS business_type, a.asofdate, a.originaldefinitestatusshortdate, a.OpportunityCreatedShortDate AS QUOTE_CREATED_DATE, a.arrivaldate, a.DepartureDate, a.currencycode, SUM( a.paceroomnights) AS NET_ROOMNIGHTS, SUM( a.paceroomrev) AS NET_LOC_ROOM_REVENUE, SUM( a.paceroomrevusd) AS NET_USD_ROOM_REVENUE, SUM( a.pacecaterrev) AS NET_LOC_FUNCTION_REVENUE, SUM( a.pacecaterrevusd) AS NET_USD_FUNCTION_REVENUE, SUM( a.ttlrev) AS TOTAL_LOCAL_NET_REVENUE, SUM( a.paceroomrevusd+a.pacecaterrevusd) AS TOTAL_NET_USD_REVENUE FROM PdPaceOptyDetail_MISW a WHERE year>=&curyr.-3 andEXTRACT(YEAR FROM arrivaldate)>=&curyr.-3 AND claritasbusinessid IN ( %paceid) GROUP BY a.year, a.month, a.arrivalyear, a.quotenumber, a.marshacode, a.opportunityname, a.accountname, a.propertystatus, a.claritasbusinessid, a.originatingmanagereid, a.statuschangedate, a.asofdate, a.businesstype, a.OriginalDefiniteStatusShortDate, a.OpportunityCreatedShortDate, a.ArrivalDate, a.DepartureDate, a.revenueflag, a.currencycode, a.asofdate, a.orig_source HAVING ( SUM( a.paceroomnights) <> 0 OR SUM( a.paceroomrevusd+a.pacecaterrevusd) <> 0)  ) ;",QD.sas
"CREATE TABLE Pace_Detail2_M AS ( SELECT  *, QUOTE_CREATED_DATE1 AS QUOTE_CREATED_DATE, orig_def_date1 AS ORIGINAL_DEFINITE_DATE, asofdate1 AS asofdate, quote_status_date1 AS quote_status_date, arrival_date1 AS QUOTE_ARRIVAL_DATE, departure_date1 AS QUOTE_DEPARTURE_DATE, FORMAT(DATEPART( arrivaldate ), ""ddMMMyyyy"") AS arrival_date1 , FORMAT(DATEPART( asofdate ), ""ddMMMyyyy"") AS asofdate1 , FORMAT(DATEPART( statuschangedate ), ""ddMMMyyyy"") AS quote_status_date1 , FORMAT(DATEPART( originaldefinitestatusshortdate ), ""ddMMMyyyy"") AS orig_def_date1 , FORMAT(DATEPART( DepartureDate ), ""ddMMMyyyy"") AS departure_date1 , FORMAT(DATEPART( QUOTE_CREATED_DATE ), ""ddMMMyyyy"") AS QUOTE_CREATED_DATE1  FROM Pace_Detail_M );",QD.sas
"ALTER TABLE Pace_Detail2_M DROP COLUMN QUOTE_CREATED_DATE ,  DepartureDate ,  arrivaldate ,  statuschangedate ,  asofdate ,  originaldefinitestatusshortdate ;",QD.sas
CREATE TABLE total_pace_detail AS ( SELECT  *  FROM Pace_Detail2_M );,QD.sas
ALTER TABLE total_pace_detail DROP COLUMN isac_id ;,QD.sas
" CREATE TABLE total_pace_detail_manager AS select a.*,b.org_name AS area_sales_manager_org_name,b.role_title AS area_sales_manager_segment,b.executive_eid AS area_sales_manager_eid, b.executive_name AS area_sales_manager_name FROM total_pace_detail a LEFT JOIN ACCT_LIST_PACE b ON a.claritas_id=b.company_id;",QD.sas
" CREATE TABLE CAD_CONVERSION_TABLE AS  ( SELECT CURRENCY_EXCH_DT, EXTRACT( YEAR FROM CURRENCY_EXCH_DT) AS YEAR, EXTRACT( MONTH FROM CURRENCY_EXCH_DT) AS MONTH, CURRENCY_EXCH_RTE, FROM_CURRENCY_CD, TO_CURRENCY_CD FROM EDW_DIM_CURRENCY WHERE CURRENCY_EXCH_DT >= '01JAN2005' AND FROM_CURRENCY_CD = 'CAD' ORDER BY CURRENCY_EXCH_DT DESC, YEAR DESC, MONTH DESC  ) ;",QD.sas
" CREATE TABLE CAD_CONVERSION_LAST_REC AS ( SELECT   * , FIRST(MONTH) OVER ( PARTITION BY MONTH GROUP BY DESC , YEAR , DESC , MONTH ORDER BY DESC , YEAR , DESC , MONTH )  FROM CAD_CONVERSION_TABLE );",QD.sas
" CREATE TABLE curr_conv AS ( SELECT  *  , month( ORIGINAL_DEFINITE_DATE ) AS def_month , year( ORIGINAL_DEFINITE_DATE ) AS def_year , CASE WHEN  area_sales_manager_org_name IN ( 'Mid Atlantic','South Southeast','East Northeast','Florida', 'Northern Mid-America','West South Central', 'West Southwest','Western Mountain Pacific')  THEN NET_USD_ROOM_REVENUE WHEN  area_sales_manager_org_name IN ( 'Canada') AND currencycode='CAD'  THEN NET_LOC_ROOM_REVENUE WHEN  area_sales_manager_org_name IN ( 'Canada') AND currencycode not IN ( 'CAD')  THEN NET_USD_ROOM_REVENUE END AS NET_ROOM_REVENUE, CASE WHEN  area_sales_manager_org_name IN ( 'Mid Atlantic','South Southeast','East Northeast','Florida', 'Northern Mid-America','West South Central', 'West Southwest','Western Mountain Pacific')  THEN NET_USD_FUNCTION_REVENUE WHEN  area_sales_manager_org_name IN ( 'Canada') AND currencycode='CAD'  THEN NET_LOC_FUNCTION_REVENUE WHEN  area_sales_manager_org_name IN ( 'Canada') AND currencycode not IN ( 'CAD')  THEN NET_USD_FUNCTION_REVENUE END AS NET_FUNCTION_REVENUE, CASE WHEN  area_sales_manager_org_name IN ( 'Mid Atlantic','South Southeast','East Northeast','Florida', 'Northern Mid-America','West South Central', 'West Southwest','Western Mountain Pacific')  THEN TOTAL_NET_USD_REVENUE WHEN  area_sales_manager_org_name IN ( 'Canada') AND currencycode='CAD'  THEN TOTAL_LOCAL_NET_REVENUE WHEN  area_sales_manager_org_name IN ( 'Canada') AND currencycode not IN ( 'CAD')  THEN TOTAL_NET_USD_REVENUE END AS TOTAL_NET_REVENUE FROM total_pace_detail_manager );",QD.sas
" CREATE TABLE curr_conv_ca_rate AS select a.*, b.currency_exch_rte FROM curr_conv a LEFT JOIN CAD_CONVERSION_LAST_REC b ON a.def_month=b.month AND a.def_year=b.year;",QD.sas
"CREATE TABLE Currency_Conv_Final AS ( SELECT  * , CASE WHEN  area_sales_manager_org_name IN ( 'Canada') AND currencycode not IN ( 'CAD')  THEN NET_ROOM_REVENUE/currency_exch_rte END AS NET_ROOM_REVENUE, CASE WHEN  area_sales_manager_org_name IN ( 'Canada') AND currencycode not IN ( 'CAD')  THEN NET_FUNCTION_REVENUE/currency_exch_rte END AS NET_FUNCTION_REVENUE, CASE WHEN  area_sales_manager_org_name IN ( 'Canada') AND currencycode not IN ( 'CAD')  THEN TOTAL_NET_REVENUE/currency_exch_rte END AS TOTAL_NET_REVENUE FROM curr_conv_ca_rate );",QD.sas
"ALTER TABLE Currency_Conv_Final DROP COLUMN def_month ,  def_year ,  currencycode ,  currency_exch_rte ,  NET_LOC_ROOM_REVENUE ,  NET_USD_ROOM_REVENUE ,  NET_LOC_FUNCTION_REVENUE ,  NET_USD_FUNCTION_REVENUE ,  TOTAL_LOCAL_NET_REVENUE ,  TOTAL_NET_USD_REVENUE ;",QD.sas
" CREATE TABLE PLU AS  ( SELECT SFO_ORG, MARSHA, Hotel_name FROM AW_TGT_BUS_DBO.PROPERTY_MASTER  )  ;",QD.sas
" CREATE TABLE PART AS SELECT A.*, CASE WHEN B.SFO_ORG = 'SSE' THEN 'South Southeast' WHEN B.SFO_ORG = 'MA' THEN 'Mid Atlantic' WHEN B.SFO_ORG = 'ENE' THEN 'East Northeast' WHEN B.SFO_ORG = 'FL' THEN 'Florida' WHEN B.SFO_ORG = 'NMA' THEN 'Northern Mid-America' WHEN B.SFO_ORG = 'WSC' THEN 'West South Central' WHEN B.SFO_ORG = 'WSW' THEN 'West Southwest' WHEN B.SFO_ORG = 'WMP' THEN 'Western Mountain Pacific' WHEN B.SFO_ORG = 'CAN' THEN 'Canada' ELSE '' END AS SFO_ORG, B.Hotel_name AS property_name FROM Currency_Conv_Final A LEFT JOIN PLU B ON A.MARSHA_CODE=B.MARSHA;",QD.sas
" CREATE TABLE QD_Deployed AS SELECT *, CASE WHEN area_sales_manager_org_name=SFO_ORG THEN 'Inbound' ELSE 'Outbound' END AS Participation, CASE WHEN area_sales_manager_segment = 'Area Account Executive, Affinity' THEN 'Affinity' WHEN area_sales_manager_segment = 'Area Account Executive, Government' THEN 'Government' WHEN area_sales_manager_segment = 'Market Account Executive, Mid-Market' THEN 'Mid-Market' WHEN area_sales_manager_segment = 'Market Account Executive, Prospect' THEN 'Prospect' WHEN area_sales_manager_segment = 'Market Account Executive, EST' THEN 'EST' WHEN area_sales_manager_segment = 'Market Account Executive, Association' THEN 'Association' WHEN area_sales_manager_segment = 'Market Account Executive, Whsale/FIT/Tour & Travel' THEN 'Whsale/FIT/Tour & Travel' ELSE '' END AS area_sales_manager_segment_2 FROM PART;",QD.sas
"CREATE TABLE ACDASHQD.QD_Deployed AS ( SELECT  *, area_sales_manager_segment_2 AS area_sales_manager_segment FROM QD_Deployed );",QD.sas
"ALTER TABLE ACDASHQD.QD_Deployed DROP COLUMN area_sales_manager_segment ,  SFO_ORG ;",QD.sas
" CREATE TABLE whlsale_account_list AS ( SELECT executive_eid, org_name, role_title, company_name FROM Curr_acct_list  WHERE ROLE_TITLE IN ( 'Market Account Executive, Whsale/FIT/Tour & Travel'));",QD_Whlsale.sas
CREATE TABLE whlsale_acct_list AS (SELECT DISTINCT * FROM whlsale_account_list ORDER BY executive_eid);,QD_Whlsale.sas
" CREATE TABLE Pace_Detail_M_W AS  ( select a.year AS report_year, a.month AS report_month, a.quotenumber AS quote_number, a.marshacode AS marsha_code, a.opportunityname AS quote_name, a.accountname AS CLARITAS_BUSINESS_NAME, a.propertystatus AS quote_status, a.claritasbusinessid AS CLARITAS_ID, a.revenueflag AS STATUS_CHANGE_TYPE, a.orig_source, a.arrivalyear AS stay_year, a.originatingmanagereid AS ORIGINATING_MANAGER_EID, a.statuschangedate, CASE WHEN a.businesstype='Group' THEN 'G' ELSE 'L' END AS business_type, a.asofdate, a.originaldefinitestatusshortdate, a.OpportunityCreatedShortDate AS QUOTE_CREATED_DATE, a.arrivaldate, a.DepartureDate, a.currencycode, SUM( a.paceroomnights) AS NET_ROOMNIGHTS, SUM( a.paceroomrev) AS NET_LOC_ROOM_REVENUE, SUM( a.paceroomrevusd) AS NET_USD_ROOM_REVENUE, SUM( a.pacecaterrev) AS NET_LOC_FUNCTION_REVENUE, SUM( a.pacecaterrevusd) AS NET_USD_FUNCTION_REVENUE, SUM( a.ttlrev) AS TOTAL_LOCAL_NET_REVENUE, SUM( a.paceroomrevusd+a.pacecaterrevusd) AS TOTAL_NET_USD_REVENUE FROM PdPaceOptyDetail_MISW a WHERE year>=&curyr.-3 andEXTRACT(YEAR FROM arrivaldate)>=&curyr.-3 AND originatingmanagereid IN ( %miwhlsid) GROUP BY a.year, a.month, a.arrivalyear, a.quotenumber, a.marshacode, a.opportunityname, a.accountname, a.propertystatus, a.claritasbusinessid, a.originatingmanagereid, a.statuschangedate, a.asofdate, a.businesstype, a.OriginalDefiniteStatusShortDate, a.OpportunityCreatedShortDate, a.ArrivalDate, a.DepartureDate, a.revenueflag, a.currencycode, a.asofdate, a.orig_source HAVING ( SUM( a.paceroomnights) <> 0 OR SUM( a.paceroomrevusd+a.pacecaterrevusd) <> 0)  ) ;",QD_Whlsale.sas
"CREATE TABLE Pace_Detail2_M_W AS ( SELECT  *, QUOTE_CREATED_DATE1 AS QUOTE_CREATED_DATE, orig_def_date1 AS ORIGINAL_DEFINITE_DATE, asofdate1 AS asofdate, quote_status_date1 AS quote_status_date, arrival_date1 AS QUOTE_ARRIVAL_DATE, departure_date1 AS QUOTE_DEPARTURE_DATE, FORMAT(DATEPART( QUOTE_CREATED_DATE ), ""ddMMMyyyy"") AS QUOTE_CREATED_DATE1 , FORMAT(DATEPART( arrivaldate ), ""ddMMMyyyy"") AS arrival_date1 , FORMAT(DATEPART( asofdate ), ""ddMMMyyyy"") AS asofdate1 , FORMAT(DATEPART( statuschangedate ), ""ddMMMyyyy"") AS quote_status_date1 , FORMAT(DATEPART( originaldefinitestatusshortdate ), ""ddMMMyyyy"") AS orig_def_date1 , FORMAT(DATEPART( DepartureDate ), ""ddMMMyyyy"") AS departure_date1  FROM Pace_Detail_M_W );",QD_Whlsale.sas
"ALTER TABLE Pace_Detail2_M_W DROP COLUMN QUOTE_CREATED_DATE ,  DepartureDate ,  arrivaldate ,  statuschangedate ,  asofdate ,  originaldefinitestatusshortdate ;",QD_Whlsale.sas
 CREATE TABLE total_pace_detail_wh AS ( SELECT  *  FROM Pace_Detail2_M_W );,QD_Whlsale.sas
" CREATE TABLE total_pace_detail_manager_wh AS select a.*,b.org_name AS area_sales_manager_org_name,b.role_title AS area_sales_manager_segment,b.executive_eid AS area_sales_manager_eid, b.executive_name AS area_sales_manager_name FROM total_pace_detail_wh a LEFT JOIN ACCT_LIST_PACE b ON a.claritas_id=b.company_id;",QD_Whlsale.sas
 CREATE TABLE total_pace_detail_manager_wh2 AS SELECT * FROM total_pace_detail_manager_wh WHERE area_sales_manager_name IS NULL;,QD_Whlsale.sas
" CREATE TABLE MI_Whls AS ( SELECT EID FROM ACS_ROSTER1  whereORGANIZATION = 'Canada' AND ROLE='Market Account Executive, Whsale/FIT/Tour & Travel');",QD_Whlsale.sas
 CREATE TABLE CA_whls AS ( SELECT  *  FROM MI_whls );,QD_Whlsale.sas
" CREATE TABLE CAD_CONVERSION_TABLE AS  ( SELECT CURRENCY_EXCH_DT, EXTRACT( YEAR FROM CURRENCY_EXCH_DT) AS YEAR, EXTRACT( MONTH FROM CURRENCY_EXCH_DT) AS MONTH, CURRENCY_EXCH_RTE, FROM_CURRENCY_CD, TO_CURRENCY_CD FROM EDW_DIM_CURRENCY WHERE CURRENCY_EXCH_DT >= '01JAN2005' AND FROM_CURRENCY_CD = 'CAD' ORDER BY CURRENCY_EXCH_DT DESC, YEAR DESC, MONTH DESC  ) ;",QD_Whlsale.sas
" CREATE TABLE CAD_CONVERSION_LAST_REC AS ( SELECT   * , FIRST(MONTH) OVER ( PARTITION BY MONTH GROUP BY DESC , YEAR , DESC , MONTH ORDER BY DESC , YEAR , DESC , MONTH )  FROM CAD_CONVERSION_TABLE );",QD_Whlsale.sas
" CREATE TABLE curr_conv_WH AS ( SELECT  *  , month( ORIGINAL_DEFINITE_DATE ) AS def_month , year( ORIGINAL_DEFINITE_DATE ) AS def_year , CASE WHEN  UPPER( ORIGINATING_MANAGER_EID) not IN ( %CAWHLSID)  THEN NET_USD_ROOM_REVENUE WHEN  UPPER( ORIGINATING_MANAGER_EID) IN ( %CAWHLSID) AND currencycode='CAD'  THEN NET_LOC_ROOM_REVENUE WHEN  UPPER( ORIGINATING_MANAGER_EID) IN ( %CAWHLSID) AND currencycode not IN ( 'CAD')  THEN NET_USD_ROOM_REVENUE END AS NET_ROOM_REVENUE, CASE WHEN  UPPER( ORIGINATING_MANAGER_EID) not IN ( %CAWHLSID)  THEN NET_USD_FUNCTION_REVENUE WHEN  UPPER( ORIGINATING_MANAGER_EID) IN ( %CAWHLSID) AND currencycode='CAD'  THEN NET_LOC_FUNCTION_REVENUE WHEN  UPPER( ORIGINATING_MANAGER_EID) IN ( %CAWHLSID) AND currencycode not IN ( 'CAD')  THEN NET_USD_FUNCTION_REVENUE END AS NET_FUNCTION_REVENUE, CASE WHEN  UPPER( ORIGINATING_MANAGER_EID) not IN ( %CAWHLSID)  THEN TOTAL_NET_USD_REVENUE WHEN  UPPER( ORIGINATING_MANAGER_EID) IN ( %CAWHLSID) AND currencycode='CAD'  THEN TOTAL_LOCAL_NET_REVENUE WHEN  UPPER( ORIGINATING_MANAGER_EID) IN ( %CAWHLSID) AND currencycode not IN ( 'CAD')  THEN TOTAL_NET_USD_REVENUE END AS TOTAL_NET_REVENUE FROM total_pace_detail_manager_wh2 );",QD_Whlsale.sas
" CREATE TABLE curr_conv_ca_rate_wh AS select a.*, b.currency_exch_rte FROM curr_conv_WH a LEFT JOIN CAD_CONVERSION_LAST_REC b ON a.def_month=b.month AND a.def_year=b.year;",QD_Whlsale.sas
"CREATE TABLE Currency_Conv_Final_WH AS ( SELECT  * , CASE WHEN  UPPER( ORIGINATING_MANAGER_EID) IN ( %CAWHLSID) AND currencycode not IN ( 'CAD')  THEN NET_ROOM_REVENUE/currency_exch_rte END AS NET_ROOM_REVENUE, CASE WHEN  UPPER( ORIGINATING_MANAGER_EID) IN ( %CAWHLSID) AND currencycode not IN ( 'CAD')  THEN NET_FUNCTION_REVENUE/currency_exch_rte END AS NET_FUNCTION_REVENUE, CASE WHEN  UPPER( ORIGINATING_MANAGER_EID) IN ( %CAWHLSID) AND currencycode not IN ( 'CAD')  THEN TOTAL_NET_REVENUE/currency_exch_rte END AS TOTAL_NET_REVENUE FROM curr_conv_ca_rate_wh );",QD_Whlsale.sas
"ALTER TABLE Currency_Conv_Final_WH DROP COLUMN def_month ,  def_year ,  currencycode ,  currency_exch_rte ,  NET_LOC_ROOM_REVENUE ,  NET_USD_ROOM_REVENUE ,  NET_LOC_FUNCTION_REVENUE ,  NET_USD_FUNCTION_REVENUE ,  TOTAL_LOCAL_NET_REVENUE ,  TOTAL_NET_USD_REVENUE ;",QD_Whlsale.sas
" CREATE TABLE PLU AS  ( SELECT SFO_ORG, MARSHA, Hotel_name FROM AW_TGT_BUS_DBO.PROPERTY_MASTER  )  ;",QD_Whlsale.sas
" CREATE TABLE PART_WH AS SELECT A.*, C.ORG_NAME AS area_sales_manager_org_name_2, CASE WHEN B.SFO_ORG = 'SSE' THEN 'South Southeast' WHEN B.SFO_ORG = 'MA' THEN 'Mid Atlantic' WHEN B.SFO_ORG = 'ENE' THEN 'East Northeast' WHEN B.SFO_ORG = 'FL' THEN 'Florida' WHEN B.SFO_ORG = 'NMA' THEN 'Northern Mid-America' WHEN B.SFO_ORG = 'WSC' THEN 'West South Central' WHEN B.SFO_ORG = 'WSW' THEN 'West Southwest' WHEN B.SFO_ORG = 'WMP' THEN 'Western Mountain Pacific' WHEN B.SFO_ORG = 'CAN' THEN 'Canada' ELSE '' END AS SFO_ORG, B.Hotel_name AS property_name FROM Currency_Conv_Final_WH A LEFT JOIN PLU B ON A.MARSHA_CODE=B.MARSHA LEFT JOIN whlsale_account_list C ON UPPER( a.ORIGINATING_MANAGER_EID)=c.Executive_EID;",QD_Whlsale.sas
" CREATE TABLE QD_Deployed_Wholesale AS SELECT *, CASE WHEN area_sales_manager_org_name=SFO_ORG THEN 'Inbound' ELSE 'Outbound' END AS Participation, 'Whsale/FIT/Tour & Travel' AS area_sales_manager_segment_2 FROM PART_WH;",QD_Whlsale.sas
"CREATE TABLE ACDASHQD.QD_Whls AS ( SELECT  *, area_sales_manager_segment_2 AS area_sales_manager_segment FROM QD_Deployed_Wholesale );",QD_Whlsale.sas
"ALTER TABLE ACDASHQD.QD_Whls DROP COLUMN area_sales_manager_segment ,  SFO_ORG ;",QD_Whlsale.sas
" CREATE TABLE work.Qcrunch AS  (  SELECT plu.marsha, plu.brnd, plu.hotname, plu.mf, plu.domint, plu.rd , CASE WHEN SUM( str.complete_data) = RTRIM( ( SELECT Max( asof_yrmo) FROM aw_tgt_bus_dbo.property_master_hist), 2) AND plu.acomp = 'Y' THEN 'Y' ELSE 'N' END AS SCOMP, SUM( str.complete_data) AS comp_data_check , RTRIM( ( SELECT Max( asof_yrmo) FROM aw_tgt_bus_dbo.property_master_hist), 2) AS month_check, plu.acomp , 'Prelim June' AS MONTH, '' AS custom, 'YTD' AS timef, plu.region, SUM( str.maravail) AS MARAVAIL, SUM( str.marsold) AS MARSOLD, SUM( str.marrev) AS MARREV, SUM( str.maravailly) AS MARAVAILLY, SUM( str.marsoldly) AS MARSOLDLY, SUM( str.marrevly) AS MARREVLY, SUM( str.mktavail) AS MKTAVAIL, SUM( str.mktsold) AS MKTSOLDSCOMP, SUM( str.mktrev) AS MKTREV, SUM( str.mktavailly) AS MKTAVAILLY, SUM( str.mktsoldly) AS MKTSOLDLY, SUM( str.mktrevly) AS MKTREVLY, 1 AS Include, CASE WHEN (  SUM( str.maravail) <> 0 AND SUM( str.mktavail) <> 0 ) THEN SUM( str.marrev) / SUM( str.maravail) / (  SUM ( str.mktrev) / SUM( str.mktavail) ) 100 ELSE NULL END AS RevPAR_Index, CASE WHEN (  SUM( str.maravail) <> 0 AND SUM( str.mktavail) <> 0 AND SUM( str.maravailly) <> 0 AND SUM( str.mktavailly) <> 0 ) THEN SUM( str.marrev) / SUM( str.maravail) / (  SUM( str.mktrev) / SUM( str.mktavail) ) * 100 / (  SUM( str.marrevly) / SUM( str.maravailly) / (  SUM( str.mktrevly) / SUM( str.mktavailly) ) * 100 ) - 1 ELSE NULL END AS RPI_chg, CASE WHEN (  SUM( str.marsold) <> 0 AND SUM( str.mktsold) <> 0 ) THEN (  SUM( str.marsold) / SUM( str.mktsold) ) * 100 ELSE NULL END AS Occ_Index, CASE WHEN (  SUM( str.marsold) <> 0 AND SUM( str.mktsold) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.mktsoldly) <> 0 ) THEN (  (  SUM( str.marsold) / SUM( str.mktsold) ) * 100 ) / (  (  SUM( str.marsoldly) / SUM( str.mktsoldly) ) * 100 ) - 1 ELSE NULL END AS OI_chg, CASE WHEN (  SUM( str.marsold) <> 0 AND SUM( str.mktsold) <> 0 ) THEN SUM( str.marrev) / SUM( str.marsold) / (  SUM( str.mktrev) / SUM( str.mktsold) ) * 100 ELSE NULL END AS ADR_Index, CASE WHEN (  SUM( str.marsold) <> 0 AND SUM( str.mktsold) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.mktsoldly) <> 0 AND SUM( str.marrevly) <> 0 AND SUM( str.mktrev) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.mktrevly) <> 0 AND SUM( str.mktsoldly) <> 0 ) THEN SUM( str.marrev) / SUM( str.marsold) / (  SUM( str.mktrev) / SUM( str.mktsold) ) * 100 / (  SUM( str.marrevly) / SUM( str.marsoldly) / (  SUM( str.mktrevly) / SUM( str.mktsoldly) ) * 100 ) - 1 ELSE NULL END AS ADR_chg, '' AS blank1, '' AS blank2, '' AS blank3, '' AS blank4, '' AS blank5, '' AS blank6, '' AS blank7, '' AS blank8, '' AS blank9, CASE WHEN (  SUM( str.maravail) <> 0 AND SUM( str.mktavail) <> 0 AND SUM( str.maravailly) <> 0 AND SUM( str.mktavailly) <> 0 AND SUM( str.mktrev) <> 0 AND SUM( str.mktrevly) <> 0 AND SUM( str.marrev) <> 0 AND SUM( str.marrevly) <> 0 ) THEN CASE WHEN SUM( str.marrev) / SUM( str.maravail) / (  SUM( str.mktrev) / SUM( str.mktavail) ) * 100 / (  SUM( str.marrevly) / SUM( str.maravailly) / (  SUM( str.mktrevly) / SUM( str.mktavailly) ) * 100 ) - 1 >= 0 THEN 1 ELSE 0 END ELSE NULL END AS RPI_Up, CASE WHEN (  SUM( str.maravail) <> 0 AND SUM( str.mktavail) <> 0 AND SUM( str.maravailly) <> 0 AND SUM( str.mktavailly) <> 0 AND SUM( str.mktrev) <> 0 AND SUM( str.mktrevly) <> 0 AND SUM( str.marrev) <> 0 AND SUM( str.marrevly) <> 0 ) THEN CASE WHEN SUM( str.marrev) / SUM( str.maravail) / (  SUM( str.mktrev) / SUM( str.mktavail) ) * 100 / (  SUM( str.marrevly) / SUM( str.maravailly) / (  SUM( str.mktrevly) / SUM( str.mktavailly) ) * 100 ) - 1 >= 0 THEN 0 ELSE 1 END ELSE NULL END AS RPI_Down, CASE WHEN (  SUM( str.marsold) <> 0 AND SUM( str.mktsold) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.mktsoldly) <> 0 ) THEN CASE WHEN (  (  SUM( str.marsold) / SUM( str.mktsold) ) * 100 ) / (  (  SUM( str.marsoldly) / SUM( str.mktsoldly) ) * 100 ) - 1 > 0 THEN 1 ELSE 0 END ELSE NULL END AS OI_Up, CASE WHEN (  SUM( str.marsold) <> 0 AND SUM( str.mktsold) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.mktsoldly) <> 0 ) THEN CASE WHEN (  (  SUM( str.marsold) / SUM( str.mktsold) ) * 100 ) / (  (  SUM( str.marsoldly) / SUM( str.mktsoldly) ) * 100 ) - 1 > 0 THEN 0 ELSE 1 END ELSE NULL END AS OI_Down, CASE WHEN (  SUM( str.marsold) <> 0 AND SUM( str.mktsold) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.mktsoldly) <> 0 AND SUM( str.marrevly) <> 0 AND SUM( str.mktrev) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.mktrevly) <> 0 AND SUM( str.mktsoldly) <> 0 ) THEN CASE WHEN SUM( str.marrev) / SUM( str.marsold) / (  SUM( str.mktrev) / SUM( str.mktsold) ) * 100 / (  SUM( str.marrevly) / SUM( str.marsoldly) / (  SUM( str.mktrevly) / SUM( str.mktsoldly) ) * 100 ) - 1 > 0 THEN 1 ELSE 0 END ELSE NULL END AS ADR_UP, CASE WHEN (  SUM( str.marsold) <> 0 AND SUM( str.mktsold) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.mktsoldly) <> 0 AND SUM( str.marrevly) <> 0 AND SUM( str.mktrev) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.mktrevly) <> 0 AND SUM( str.mktsoldly) <> 0 ) THEN CASE WHEN SUM( str.marrev) / SUM( str.marsold) / (  SUM( str.mktrev) / SUM( str.mktsold) ) * 100 / (  SUM( str.marrevly) / SUM( str.marsoldly) / (  SUM( str.mktrevly) / SUM( str.mktsoldly) ) * 100 ) - 1 > 0 THEN 0 ELSE 1 END ELSE NULL END AS ADR_Down, plu.owner, plu.manager, plu.franchisee, plu.rd AS rd2, plu.str_market, plu.cluster_name, plu.opendate, '' AS high_impact, plu.mvp, '' AS redo_mn, '' AS redo_ytd, plu.gen, plu.sfo_area, '' AS sfo_leader, plu.sfo_market, '' AS sfogroup, plu.hCLASS, plu.avp, plu.sub_brand, plu.misw_flag, plu.division FROM (  SELECT b.marsha, b.asof_yrmo, b.yrmnth, b.timef, b.complete_data, b.maravail, b.marsold, b.marrev, b.mktavail, b.mktsold, b.mktrev, b.maravailly, b.marsoldly, b.marrevly, b.mktavailly, b.mktsoldly, b.mktrevly FROM aw_cmp_dbo.str_monthly_data b WHERE b.timef = 'MONTH' AND b.asof_yrmo = ( SELECT Max( asof_yrmo) FROM aw_cmp_dbo.str_monthly_data) AND b.currency_type = 'Constant USD' AND LTRIM( b.yrmnth, 4) = LTRIM( ( SELECT Max( asof_yrmo) FROM aw_cmp_dbo.str_monthly_data), 4) UNION SELECT b.marsha, b.asof_date AS asof_yrmo, b.yrmnth, b.timef, b.complete_data, b.maravail, b.marsold, b.marrev, b.mktavail, b.mktsold, b.mktrev, b.maravailly, b.marsoldly, b.marrevly, b.mktavailly, b.mktsoldly, b.mktrevly FROM aw_cmp_dbo.str_weekly_data_hist b WHERE b.timef = 'MTD' AND b.asof_date = ( SELECT Max( asof_date) FROM aw_cmp_dbo.str_weekly_data_hist) AND b.currency_type = 'Constant USD' AND b.yrmnth = ( SELECT Max( yrmnth) FROM aw_cmp_dbo.str_weekly_data_hist)) str LTRIM JOIN aw_tgt_bus_dbo.property_master_hist plu ON plu.marsha = str.marsha WHERE plu.asof_yrmo = ( SELECT Max( asof_yrmo) FROM aw_tgt_bus_dbo.property_master_hist) GROUP BY plu.marsha, plu.brnd, plu.hotname, plu.mf, plu.domint, plu.rd, plu.acomp, plu.region, plu.owner, plu.manager, plu.franchisee, plu.rd, plu.str_market, plu.cluster_name, plu.opendate, plu.mvp, plu.gen, plu.sfo_area, plu.sfo_market, plu.hCLASS, plu.avp, plu.sub_brand, plu.misw_flag, plu.division UNION SELECT plu.marsha, plu.brnd, plu.hotname, plu.mf, plu.domint, plu.rd , CASE WHEN SUM( str.complete_data) = RTRIM( ( SELECT Max( asof_yrmo) FROM aw_tgt_bus_dbo.property_master_hist), 2) - (  RTRIM( ( SELECT Max( asof_yrmo) FROM aw_tgt_bus_dbo.property_master_hist), 2) - 3 ) AND plu.acomp = 'Y' THEN 'Y' ELSE 'N' END AS SCOMP, SUM( str.complete_data) AS comp_data_check , RTRIM( ( SELECT Max( asof_yrmo) FROM aw_tgt_bus_dbo.property_master_hist), 2) AS month_check, plu.acomp , 'Prelim June' AS MONTH, '' AS custom, 'QTD' AS timef, plu.region, SUM( str.maravail) AS MARAVAIL, SUM( str.marsold) AS MARSOLD, SUM( str.marrev) AS MARREV, SUM( str.maravailly) AS MARAVAILLY, SUM( str.marsoldly) AS MARSOLDLY, SUM( str.marrevly) AS MARREVLY, SUM( str.mktavail) AS MKTAVAIL, SUM( str.mktsold) AS MKTSOLD, SUM( str.mktrev) AS MKTREV, SUM( str.mktavailly) AS MKTAVAILLY, SUM( str.mktsoldly) AS MKTSOLDLY, SUM( str.mktrevly) AS MKTREVLY, 1 AS Include, CASE WHEN (  SUM( str.maravail) <> 0 AND SUM( str.mktavail) <> 0 ) THEN SUM( str.marrev) / SUM( str.maravail) / (  SUM ( str.mktrev) / SUM( str.mktavail) ) 100 ELSE NULL END AS RevPAR_Index, CASE WHEN (  SUM( str.maravail) <> 0 AND SUM( str.mktavail) <> 0 AND SUM( str.maravailly) <> 0 AND SUM( str.mktavailly) <> 0 AND SUM( str.mktrev) <> 0 AND SUM( str.mktrevly) <> 0 AND SUM( str.marrev) <> 0 AND SUM( str.marrevly) <> 0 ) THEN SUM( str.marrev) / SUM( str.maravail) / (  SUM( str.mktrev) / SUM( str.mktavail) ) * 100 / (  SUM( str.marrevly) / SUM( str.maravailly) / (  SUM( str.mktrevly) / SUM( str.mktavailly) ) * 100 ) - 1 ELSE NULL END AS RPI_chg, CASE WHEN (  SUM( str.marsold) <> 0 AND SUM( str.mktsold) <> 0 ) THEN (  SUM( str.marsold) / SUM( str.mktsold) ) * 100 ELSE NULL END AS Occ_Index, CASE WHEN (  SUM( str.marsold) <> 0 AND SUM( str.mktsold) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.mktsoldly) <> 0 ) THEN (  (  SUM( str.marsold) / SUM( str.mktsold) ) * 100 ) / (  (  SUM( str.marsoldly) / SUM( str.mktsoldly) ) * 100 ) - 1 ELSE NULL END AS OI_chg, CASE WHEN (  SUM( str.marsold) <> 0 AND SUM( str.mktsold) <> 0 ) THEN SUM( str.marrev) / SUM( str.marsold) / (  SUM( str.mktrev) / SUM( str.mktsold) ) * 100 ELSE NULL END AS ADR_Index, CASE WHEN (  SUM( str.marsold) <> 0 AND SUM( str.mktsold) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.mktsoldly) <> 0 AND SUM( str.marrevly) <> 0 AND SUM( str.mktrev) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.mktrevly) <> 0 AND SUM( str.mktsoldly) <> 0 ) THEN SUM( str.marrev) / SUM( str.marsold) / (  SUM( str.mktrev) / SUM( str.mktsold) ) * 100 / (  SUM( str.marrevly) / SUM( str.marsoldly) / (  SUM( str.mktrevly) / SUM( str.mktsoldly) ) * 100 ) - 1 ELSE NULL END AS ADR_chg, '' AS blank1, '' AS blank2, '' AS blank3, '' AS blank4, '' AS blank5, '' AS blank6, '' AS blank7, '' AS blank8, '' AS blank9, CASE WHEN (  SUM( str.maravail) <> 0 AND SUM( str.mktavail) <> 0 AND SUM( str.maravailly) <> 0 AND SUM( str.mktavailly) <> 0 AND SUM( str.mktrev) <> 0 AND SUM( str.mktrevly) <> 0 AND SUM( str.marrev) <> 0 AND SUM( str.marrevly) <> 0 ) THEN CASE WHEN SUM( str.marrev) / SUM( str.maravail) / (  SUM( str.mktrev) / SUM( str.mktavail) ) * 100 / (  SUM( str.marrevly) / SUM( str.maravailly) / (  SUM( str.mktrevly) / SUM( str.mktavailly) ) * 100 ) - 1 >= 0 THEN 1 ELSE 0 END ELSE NULL END AS RPI_Up, CASE WHEN (  SUM( str.maravail) <> 0 AND SUM( str.mktavail) <> 0 AND SUM( str.maravailly) <> 0 AND SUM( str.mktavailly) <> 0 AND SUM( str.mktrev) <> 0 AND SUM( str.mktrevly) <> 0 AND SUM( str.marrev) <> 0 AND SUM( str.marrevly) <> 0 ) THEN CASE WHEN SUM( str.marrev) / SUM( str.maravail) / (  SUM( str.mktrev) / SUM( str.mktavail) ) * 100 / (  SUM( str.marrevly) / SUM( str.maravailly) / (  SUM( str.mktrevly) / SUM( str.mktavailly) ) * 100 ) - 1 >= 0 THEN 0 ELSE 1 END ELSE NULL END AS RPI_Down, CASE WHEN (  SUM( str.marsold) <> 0 AND SUM( str.mktsold) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.mktsoldly) <> 0 ) THEN CASE WHEN (  (  SUM( str.marsold) / SUM( str.mktsold) ) * 100 ) / (  (  SUM( str.marsoldly) / SUM( str.mktsoldly) ) * 100 ) - 1 > 0 THEN 1 ELSE 0 END ELSE NULL END AS OI_Up, CASE WHEN (  SUM( str.marsold) <> 0 AND SUM( str.mktsold) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.mktsoldly) <> 0 ) THEN CASE WHEN (  (  SUM( str.marsold) / SUM( str.mktsold) ) * 100 ) / (  (  SUM( str.marsoldly) / SUM( str.mktsoldly) ) * 100 ) - 1 > 0 THEN 0 ELSE 1 END ELSE NULL END AS OI_Down, CASE WHEN (  SUM( str.marsold) <> 0 AND SUM( str.mktsold) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.mktsoldly) <> 0 AND SUM( str.marrevly) <> 0 AND SUM( str.mktrev) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.mktrevly) <> 0 AND SUM( str.mktsoldly) <> 0 ) THEN CASE WHEN SUM( str.marrev) / SUM( str.marsold) / (  SUM( str.mktrev) / SUM( str.mktsold) ) * 100 / (  SUM( str.marrevly) / SUM( str.marsoldly) / (  SUM( str.mktrevly) / SUM( str.mktsoldly) ) * 100 ) - 1 > 0 THEN 1 ELSE 0 END ELSE NULL END AS ADR_UP, CASE WHEN (  SUM( str.marsold) <> 0 AND SUM( str.mktsold) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.mktsoldly) <> 0 AND SUM( str.marrevly) <> 0 AND SUM( str.mktrev) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.mktrevly) <> 0 AND SUM( str.mktsoldly) <> 0 ) THEN CASE WHEN SUM( str.marrev) / SUM( str.marsold) / (  SUM( str.mktrev) / SUM( str.mktsold) ) * 100 / (  SUM( str.marrevly) / SUM( str.marsoldly) / (  SUM( str.mktrevly) / SUM( str.mktsoldly) ) * 100 ) - 1 > 0 THEN 0 ELSE 1 END ELSE NULL END AS ADR_Down, plu.owner, plu.manager, plu.franchisee, plu.rd AS rd2, plu.str_market, plu.cluster_name, plu.opendate, '' AS high_impact, plu.mvp, '' AS redo_mn, '' AS redo_ytd, plu.gen, plu.sfo_area, '' AS sfo_leader, plu.sfo_market, '' AS sfogroup, plu.hCLASS, plu.avp, plu.sub_brand, plu.misw_flag, plu.division FROM (  SELECT b.marsha, b.asof_yrmo, b.yrmnth, b.timef, b.complete_data, b.maravail, b.marsold, b.marrev, b.mktavail, b.mktsold, b.mktrev, b.maravailly, b.marsoldly, b.marrevly, b.mktavailly, b.mktsoldly, b.mktrevly FROM aw_cmp_dbo.str_monthly_data b WHERE b.timef = 'MONTH' AND b.asof_yrmo = ( SELECT Max( asof_yrmo) FROM aw_cmp_dbo.str_monthly_data) AND b.currency_type = 'Constant USD' AND LTRIM( b.yrmnth, 4) = LTRIM( ( SELECT Max( asof_yrmo) FROM aw_cmp_dbo.str_monthly_data), 4) AND RTRIM( b.yrmnth, 2) >= RTRIM( ( SELECT Max( asof_yrmo) FROM aw_cmp_dbo.str_monthly_data), 2) - 1 UNION SELECT b.marsha, b.asof_date AS asof_yrmo, b.yrmnth, b.timef, b.complete_data, b.maravail, b.marsold, b.marrev, b.mktavail, b.mktsold, b.mktrev, b.maravailly, b.marsoldly, b.marrevly, b.mktavailly, b.mktsoldly, b.mktrevly FROM aw_cmp_dbo.str_weekly_data_hist b WHERE b.timef = 'MTD' AND b.asof_date = ( SELECT Max( asof_date) FROM aw_cmp_dbo.str_weekly_data_hist) AND b.currency_type = 'Constant USD' AND b.yrmnth = ( SELECT Max( yrmnth) FROM aw_cmp_dbo.str_weekly_data_hist)) str LTRIM JOIN aw_tgt_bus_dbo.property_master_hist plu ON plu.marsha = str.marsha WHERE plu.asof_yrmo = ( SELECT Max( asof_yrmo) FROM aw_tgt_bus_dbo.property_master_hist) GROUP BY plu.marsha, plu.brnd, plu.hotname, plu.mf, plu.domint, plu.rd, plu.acomp, plu.region, plu.owner, plu.manager, plu.franchisee, plu.rd, plu.str_market, plu.cluster_name, plu.opendate, plu.mvp, plu.gen, plu.sfo_area, plu.sfo_market, plu.hCLASS, plu.avp, plu.sub_brand, plu.misw_flag, plu.division ORDER BY MARSHA  ) ;",Quarterly_Crunch.sas
"CREATE TABLE ""\\Hdqmdm1fpcl4v1\lodg-STAR\Quarterly Crunch Raw Data\quarterly_crunch_&curyrpd._raw_data.csv"" AS ( SELECT * FROM QCRUNCH) ;",Quarterly_Crunch.sas
" CREATE TABLE CLEANDATA_&CURYR AS  ( select ADJ_MONTH_ID AS REPORT_MONTH, ADJ_YEAR_ID AS REPORT_YEAR, ORG_NM AS ORGANIZATION, SLS_MGR_LOGIN AS EID, SLS_MGR_ROLE AS ROLE, UPPER( ACCOUNT_NM) AS ACCOUNT_NAME, ACCT_COMP_TYPE AS ACCOUNT_COMPONENT, MARSHA_CD AS MARSHA, QUOTE_NUMBER AS QUOTE_NUM, NET_RM_NGTS AS RN, NET_RM_REV AS RR, NET_FUNC_REV AS CR, TOTAL_NET_REV AS TR FROM AW_SLS_PRD_AM.MANUAL_ADJUSTMENTS WHERE ADJ_YEAR_ID IN ( &LSTYR, &CURYR)  )  ;",Quote Detail with Manual Adds_AW.sas
" CREATE TABLE SGR_Quotes AS  ( select a.report_pd_mo AS report_month, a.report_year, btrim( a.sm_curr_org_nm) AS organization, a.sm_eid AS EID, CASE WHEN a.sm_role=3 THEN 'Market Account Executive, EST' when a.sm_role=9 THEN 'Area Account Executive, Affinity' when a.sm_role=10 THEN 'Market Account Executive, Mid-Market' when a.sm_role=4 THEN 'Market Account Executive, Association' when a.sm_role=11 THEN 'Area Account Executive, Government' when a.sm_role=15 THEN 'Market Account Executive, Prospect' when a.sm_role=13 THEN 'Market Account Executive, Whsale/FIT/Tour & Travel' when a.sm_role=21 THEN 'Sales Executive' END AS role, upper( a.acct_name) AS Account_Name, a.acct_comp_type AS Account_Component, a.marsha_cd AS MARSHA, a.quote_num, a.net_rm_nights AS RN, a.net_rm_rev AS RR, a.net_cat_rev CR, a.tot_net_rev AS TR FROM sgr_fact_smry_quote_flt a WHERE a.report_year IN ( &lstyr.,&curyr. )  ) ;",Quote Detail with Manual Adds_AW.sas
" CREATE TABLE CLEANDATA AS ( SELECT  * , CASE WHEN  ROLE='Area Account Executive, Mid-Market'  THEN 'Market Account Executive, Mid-Market' END AS ROLE FROM CLEANDATA_&CURYR UNION ALL SELECT  * , CASE WHEN  ROLE='Area Account Executive, Mid-Market'  THEN 'Market Account Executive, Mid-Market' END AS ROLE FROM SGR_QUOTES);",Quote Detail with Manual Adds_AW.sas
" CREATE TABLE Roster1 AS  ( select upper( team_member_eid) AS sm_eid, full_name AS Associate_Name, last_UPDATEd_date FROM VISIBILITY_HIERARCHY_VW WHERE status not IN ( 'Future') ORDER BY sm_eid, last_UPDATEd_date desc  ) ;",Quote Detail with Manual Adds_AW.sas
CREATE TABLE EID_Names AS (SELECT DISTINCT * FROM roster1 ORDER BY sm_eid);,Quote Detail with Manual Adds_AW.sas
" CREATE TABLE clean_data AS select a.*, CASE WHEN b.Associate_Name is null THEN 'House Account' ELSE b.Associate_Name END AS Associate_Name FROM CleanData a LEFT JOIN EID_Names b ON a.eid=b.sm_eid ;",Quote Detail with Manual Adds_AW.sas
SELECT * FROM clean_data ORDER BY MARSHA;,Quote Detail with Manual Adds_AW.sas
" CREATE TABLE SGR_PRP_NAMES AS SELECT DISTINCT PROP_CD AS MARSHA, PROP_NM, CASE WHEN PRP_ORG_NM IS NULL THEN 'Not Participating' ELSE PRP_ORG_NM END AS PROPERTY_ORGANIZATION FROM NZPROD.sgr_fact_smry_prp_perf WHERE RPT_YR=&CURYR. AND PROP_NM IS NOT NULL ORDER BY PROP_CD;",Quote Detail with Manual Adds_AW.sas
" CREATE TABLE MERGE_PROP_DATASETS AS  ( select MARSHA AS MARSHA, HOTEL_NAME FROM AW_TGT_BUS_DBO.PROPERTY_MASTER_HIST WHERE ASOF_YRMO = ( SELECT MAX( ASOF_YRMO) FROM AW_TGT_BUS_DBO.PROPERTY_MASTER_HIST) ORDER BY MARSHA  )  ;",Quote Detail with Manual Adds_AW.sas
CREATE TABLE ALL_PROPERTIES AS (SELECT DISTINCT * FROM MERGE_PROP_DATASETS ORDER BY MARSHA);,Quote Detail with Manual Adds_AW.sas
 CREATE TABLE QUOTEDETAIL AS ( SELECT  *  FROM QUOTE_DETAILS UNION ALL SELECT  *  FROM BAD_MARSHA);,Quote Detail with Manual Adds_AW.sas
"CREATE TABLE ""&DEST.\&curyr._QuoteDetail_for_Tableau.csv"" AS ( SELECT * FROM QuoteDetail) ;",Quote Detail with Manual Adds_AW.sas
"CREATE TABLE ""&DEST2.\&curyr._QuoteDetail_for_Tableau.csv"" AS ( SELECT * FROM QuoteDetail) ;",Quote Detail with Manual Adds_AW.sas
" CREATE TABLE STR_DATA AS select a.MARSHA, a.YRMNTH, a.TIMEF, a.SCOMP , a.MARAVAIL, a.MARSOLD, a.MARREV , a.MARAVAILLY, a.MARSOLDLY, a.MARREVLY , a.MKTAVAIL, a.MKTSOLD, a.MKTREV , a.MKTAVAILLY, a.MKTSOLDLY, a.MKTREVLY , a.MKTAVAIL_UNW, a.MKTSOLD_UNW, a.MKTREV_UNW , a.MKTAVAIL_UNWLY, a.MKTSOLD_UNWLY, a.MKTREV_UNWLY FROM CMP.STR_MONTHLY_DATA a WHERE a.asof_yrmo = &yrmnth. AND a.data_category = 'Rooms' AND a.currency_type = 'Constant USD' AND a.yrmnth = &yrmnth.;",Remove Sisters from Comp Set 201911 (WS).sas
" CREATE TABLE COMP_SET_DATA AS select a.MARSHA, c.YRMNTH, c.TIMEF , SUM( c.MARAVAIL) AS MARAVAIL, SUM( c.MARSOLD) AS MARSOLD, SUM( c.MARREV) AS MARREV , SUM( c.MARAVAILLY) AS MARAVAILLY, SUM( c.MARSOLDLY) AS MARSOLDLY, SUM( c.MARREVLY) AS MARREVLY FROM CMP.STR_COMPETE a LEFT JOIN TGT_BUS.PROPERTY_MASTER AS b ON CAST( a.COMP_HOTEL, 6. ) = b.STR_ID LEFT JOIN STR_DATA AS c ON b.MARSHA = c.MARSHA WHERE a.control = 'C' GROUP BY a.MARSHA, c.YRMNTH, c.TIMEF;",Remove Sisters from Comp Set 201911 (WS).sas
" CREATE TABLE COMP_SET_DATA AS ( SELECT  * , CASE WHEN  change=' '  THEN 0 END AS change FROM COMP_SET_DATA );",Remove Sisters from Comp Set 201911 (WS).sas
" CREATE TABLE SUBTRACTION AS select a.MARSHA, a.YRMNTH, a.TIMEF, a.SCOMP , a.MARAVAIL, a.MARSOLD, a.MARREV , a.MARAVAILLY, a.MARSOLDLY, a.MARREVLY , a.MKTAVAIL, a.MKTSOLD, a.MKTREV , a.MKTAVAILLY, a.MKTSOLDLY, a.MKTREVLY , ( a.MKTAVAIL_UNW+ - b.MARAVAIL) AS MKTAVAIL_UNW , ( a.MKTSOLD_UNW+ - b.MARSOLD) AS MKTSOLD_UNW , ( a.MKTREV_UNW+ - b.MARREV) AS MKTREV_UNW , ( a.MKTAVAIL_UNWLY+ - b.MARAVAILLY) AS MKTAVAIL_UNWLY , ( a.MKTSOLD_UNWLY+ - b.MARSOLDLY) AS MKTSOLD_UNWLY , ( a.MKTREV_UNWLY+ - b.MARREVLY) AS MKTREV_UNWLY FROM STR_DATA a LEFT JOIN COMP_SET_DATA AS b ON a.MARSHA = b.MARSHA AND a.YRMNTH = b.YRMNTH AND a.TIMEF = b.TIMEF;",Remove Sisters from Comp Set 201911 (WS).sas
" CREATE TABLE PORTFOLIO_WEIGHT AS select a.MARSHA, a.YRMNTH, a.TIMEF, a.SCOMP , a.MARAVAIL, a.MARSOLD, a.MARREV , a.MARAVAILLY, a.MARSOLDLY, a.MARREVLY , a.MKTAVAIL, a.MKTSOLD, a.MKTREV , a.MKTAVAILLY, a.MKTSOLDLY, a.MKTREVLY , a.MARAVAIL AS MKTAVAIL_ADJ, a.MARAVAIL / a.MKTAVAIL_UNW * MKTSOLD_UNW AS MKTSOLD_ADJ, a.MARAVAIL / MKTAVAIL_UNW * MKTREV_UNW AS MKTREV_ADJ , a.MARAVAILLY AS MKTAVAILLY_ADJ, a.MARAVAILLY / a.MKTAVAIL_UNWLY * MKTSOLD_UNWLY AS MKTSOLDLY_ADJ, a.MARAVAILLY / MKTAVAIL_UNWLY * MKTREV_UNWLY AS MKTREVLY_ADJ FROM SUBTRACTION a;",Remove Sisters from Comp Set 201911 (WS).sas
" CREATE TABLE ADD_PLU_FIELDS AS select a.* , b.MF, b.BRND_NAME, b.DIVISION_NAME, b.REGION_NAME, b.STR_MARKET , b.HOTEL_NAME, b.COUNTRY, b.OWNER, b.HCLASS2, b.MISW_FLAG FROM PORTFOLIO_WEIGHT a LEFT JOIN TGT_BUS.PROPERTY_MASTER AS b ON a.MARSHA = b.MARSHA;",Remove Sisters from Comp Set 201911 (WS).sas
"CREATE TABLE ""\\hdqmdm1fpcl3v2\lodg-smps\Reporting Analysis\Sales Comp Analysis\Kathryn\Ad Hoc\RPI Excl Sister Properties &yrmnth..xlsb"" AS ( SELECT * FROM ADD_PLU_FIELDS) ;",Remove Sisters from Comp Set 201911 (WS).sas
 CREATE TABLE mams.PLU&plutimef AS  (  SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER_HIST Where asof_yrmo=&plutimef  )  ;,RevPlanningData_mo.sas
" CREATE TABLE data1_wd AS select b.MARSHA, b.brnd, month, year , SUM( ( AU_GR_DEF_RV + AU_GR_Ten_RV + AU_GR_Tobe_RV)) AS WD_GR_RV , SUM( AU_TR_RV) AS WD_TR_RV, SUM( AU_CT_RV) AS WD_CT_RV , SUM( ( AU_GR_DEF_RN + AU_GR_Ten_RN + AU_GR_Tobe_RN)) AS WD_GR_RN , SUM( AU_TR_RN) AS WD_TR_RN, SUM( AU_CT_RN) AS WD_CT_RN , SUM( capacity) AS WD_cap FROM Proj.Extractsum_mo AS a INNER JOIN all5.prop AS b ON a.prop_code=b.marsha WHERE ( 100*year)+month IN ( &TY_1MO , &TY_2MO , &TY_3MO , &LY_1MO , &LY_2MO , &LY_3MO) AND b.mf='M' AND b.region IN ( 'E_' 'S_' 'W_' 'C_') AND country IN ( 'United States' 'Canada') AND WDWE ='WD' GROUP BY b.marsha, b.brnd, month, year;",RevPlanningData_mo.sas
" CREATE TABLE data1_we AS select b.MARSHA, b.brnd, month, year , SUM( ( AU_GR_DEF_RV + AU_GR_Ten_RV + AU_GR_Tobe_RV)) AS WE_GR_RV , SUM( AU_TR_RV) AS WE_TR_RV, SUM( AU_CT_RV) AS WE_CT_RV , SUM( ( AU_GR_DEF_RN + AU_GR_Ten_RN + AU_GR_Tobe_RN)) AS WE_GR_RN , SUM( AU_TR_RN) AS WE_TR_RN, SUM( AU_CT_RN) AS WE_CT_RN , SUM( capacity) AS WE_cap FROM Proj.Extractsum_mo AS a INNER JOIN all5.prop AS b ON a.prop_code=b.marsha WHERE ( 100*year)+month IN ( &TY_1MO , &TY_2MO , &TY_3MO , &LY_1MO , &LY_2MO , &LY_3MO) AND b.mf='M' AND b.region IN ( 'E_' 'S_' 'W_' 'C_') AND country IN ( 'United States' 'Canada') AND WDWE ='WE' GROUP BY b.marsha, b.brnd, month, year;",RevPlanningData_mo.sas
" CREATE TABLE data1_fw AS select b.MARSHA, b.brnd, month, year , SUM( ( AU_GR_DEF_RV + AU_GR_Ten_RV + AU_GR_Tobe_RV)) AS FW_GR_RV , SUM( AU_TR_RV) AS FW_TR_RV, SUM( AU_CT_RV) AS FW_CT_RV , SUM( ( AU_GR_DEF_RN + AU_GR_Ten_RN + AU_GR_Tobe_RN)) AS FW_GR_RN , SUM( AU_TR_RN) AS FW_TR_RN, SUM( AU_CT_RN) AS FW_CT_RN , SUM( capacity) AS FW_cap FROM Proj.Extractsum_mo AS a INNER JOIN all5.prop AS b ON a.prop_code=b.marsha WHERE ( 100*year)+month IN ( &TY_1MO , &TY_2MO , &TY_3MO , &LY_1MO , &LY_2MO , &LY_3MO) AND b.mf='M' AND b.region IN ( 'E_' 'S_' 'W_' 'C_') AND country IN ( 'United States' 'Canada') GROUP BY b.marsha, b.brnd, month, year;",RevPlanningData_mo.sas
" CREATE TABLE fw_1mo AS select marsha, SUM( fw_gr_rn) AS fw_gr_rn_1MO FROM data1_fw WHERE ( 100*year)+month = &TY_1MO GROUP BY marsha;",RevPlanningData_mo.sas
" CREATE TABLE fw_1mo_ly AS select marsha, SUM( fw_gr_rn) AS fw_gr_rn_LY_1MO FROM data1_fw WHERE ( 100*year)+month = &LY_1MO GROUP BY marsha;",RevPlanningData_mo.sas
" CREATE TABLE fw_2mo AS select marsha, SUM( fw_gr_rn) AS fw_gr_rn_2MO FROM data1_fw WHERE ( 100*year)+month = &TY_2MO GROUP BY marsha;",RevPlanningData_mo.sas
" CREATE TABLE fw_2mo_ly AS select marsha, SUM( fw_gr_rn) AS fw_gr_rn_LY_2MO FROM data1_fw WHERE ( 100*year)+month = &LY_2MO GROUP BY marsha;",RevPlanningData_mo.sas
" CREATE TABLE fw_3mo AS select marsha, SUM( fw_gr_rn) AS fw_gr_rn_3MO FROM data1_fw WHERE ( 100*year)+month = &TY_3MO GROUP BY marsha;",RevPlanningData_mo.sas
" CREATE TABLE fw_3mo_ly AS select marsha, SUM( fw_gr_rn) AS fw_gr_rn_LY_3MO FROM data1_fw WHERE ( 100*year)+month = &LY_3MO GROUP BY marsha;",RevPlanningData_mo.sas
" CREATE TABLE wd_occ_1mo AS select marsha, SUM( ( WD_TR_RN+WD_GR_RN+WD_CT_RN)) AS wd_rn_1MO, SUM( wd_cap) AS wd_cap_1MO FROM data1_wd WHERE ( 100*year)+month = &TY_1MO GROUP BY marsha;",RevPlanningData_mo.sas
" CREATE TABLE we_occ_1mo AS select marsha, SUM( ( WE_TR_RN+WE_GR_RN+WE_CT_RN)) AS we_rn_1MO, SUM( we_cap) AS we_cap_1MO FROM data1_we WHERE ( 100*year)+month = &TY_1MO GROUP BY marsha;",RevPlanningData_mo.sas
" CREATE TABLE fw_occ_1mo AS select marsha, SUM( ( FW_TR_RN+FW_GR_RN+FW_CT_RN)) AS fw_rn_1MO, SUM( fw_cap) AS fw_cap_1MO FROM data1_fw WHERE ( 100*year)+month = &TY_1MO GROUP BY marsha;",RevPlanningData_mo.sas
" CREATE TABLE wd_occ_2mo AS select marsha, SUM( ( WD_TR_RN+WD_GR_RN+WD_CT_RN)) AS wd_rn_2MO, SUM( wd_cap) AS wd_cap_2MO FROM data1_wd WHERE ( 100*year)+month = &TY_2MO GROUP BY marsha;",RevPlanningData_mo.sas
" CREATE TABLE we_occ_2mo AS select marsha, SUM( ( WE_TR_RN+WE_GR_RN+WE_CT_RN)) AS we_rn_2MO, SUM( we_cap) AS we_cap_2MO FROM data1_we WHERE ( 100*year)+month = &TY_2MO GROUP BY marsha;",RevPlanningData_mo.sas
" CREATE TABLE fw_occ_2mo AS select marsha, SUM( ( FW_TR_RN+FW_GR_RN+FW_CT_RN)) AS fw_rn_2MO, SUM( fw_cap) AS fw_cap_2MO FROM data1_fw WHERE ( 100*year)+month = &TY_2MO GROUP BY marsha;",RevPlanningData_mo.sas
" CREATE TABLE wd_occ_3mo AS select marsha, SUM( ( WD_TR_RN+WD_GR_RN+WD_CT_RN)) AS wd_rn_3MO, SUM( wd_cap) AS wd_cap_3MO FROM data1_wd WHERE ( 100*year)+month = &TY_3MO GROUP BY marsha;",RevPlanningData_mo.sas
" CREATE TABLE we_occ_3mo AS select marsha, SUM( ( WE_TR_RN+WE_GR_RN+WE_CT_RN)) AS we_rn_3MO, SUM( we_cap) AS we_cap_3MO FROM data1_we WHERE ( 100*year)+month = &TY_3MO GROUP BY marsha;",RevPlanningData_mo.sas
" CREATE TABLE fw_occ_3mo AS select marsha, SUM( ( FW_TR_RN+FW_GR_RN+FW_CT_RN)) AS fw_rn_3MO, SUM( fw_cap) AS fw_cap_3MO FROM data1_fw WHERE ( 100*year)+month = &TY_3MO GROUP BY marsha;",RevPlanningData_mo.sas
" CREATE TABLE wd_occ_1mo_ly AS select marsha, SUM( ( WD_TR_RN+WD_GR_RN+WD_CT_RN)) AS wd_rn_1MO_ly, SUM( wd_cap) AS wd_cap_1MO_ly FROM data1_wd WHERE ( 100*year)+month = &LY_1MO GROUP BY marsha;",RevPlanningData_mo.sas
" CREATE TABLE we_occ_1mo_ly AS select marsha, SUM( ( WE_TR_RN+WE_GR_RN+WE_CT_RN)) AS we_rn_1MO_ly, SUM( we_cap) AS we_cap_1MO_ly FROM data1_we WHERE ( 100*year)+month = &LY_1MO GROUP BY marsha;",RevPlanningData_mo.sas
" CREATE TABLE fw_occ_1mo_ly AS select marsha, SUM( ( FW_TR_RN+FW_GR_RN+FW_CT_RN)) AS fw_rn_1MO_ly, SUM( fw_cap) AS fw_cap_1MO_ly FROM data1_fw WHERE ( 100*year)+month = &LY_1MO GROUP BY marsha;",RevPlanningData_mo.sas
" CREATE TABLE wd_occ_2mo_ly AS select marsha, SUM( ( WD_TR_RN+WD_GR_RN+WD_CT_RN)) AS wd_rn_2MO_ly, SUM( wd_cap) AS wd_cap_2MO_ly FROM data1_wd WHERE ( 100*year)+month = &LY_2MO GROUP BY marsha;",RevPlanningData_mo.sas
" CREATE TABLE we_occ_2mo_ly AS select marsha, SUM( ( WE_TR_RN+WE_GR_RN+WE_CT_RN)) AS we_rn_2MO_ly, SUM( we_cap) AS we_cap_2MO_ly FROM data1_we WHERE ( 100*year)+month = &LY_2MO GROUP BY marsha;",RevPlanningData_mo.sas
" CREATE TABLE fw_occ_2mo_ly AS select marsha, SUM( ( FW_TR_RN+FW_GR_RN+FW_CT_RN)) AS fw_rn_2MO_ly, SUM( fw_cap) AS fw_cap_2MO_ly FROM data1_fw WHERE ( 100*year)+month = &LY_2MO GROUP BY marsha;",RevPlanningData_mo.sas
" CREATE TABLE wd_occ_3mo_ly AS select marsha, SUM( ( WD_TR_RN+WD_GR_RN+WD_CT_RN)) AS wd_rn_3MO_ly, SUM( wd_cap) AS wd_cap_3MO_ly FROM data1_wd WHERE ( 100*year)+month = &LY_3MO GROUP BY marsha;",RevPlanningData_mo.sas
" CREATE TABLE we_occ_3mo_ly AS select marsha, SUM( ( WE_TR_RN+WE_GR_RN+WE_CT_RN)) AS we_rn_3MO_ly, SUM( we_cap) AS we_cap_3MO_ly FROM data1_we WHERE ( 100*year)+month = &LY_3MO GROUP BY marsha;",RevPlanningData_mo.sas
" CREATE TABLE fw_occ_3mo_ly AS select marsha, SUM( ( FW_TR_RN+FW_GR_RN+FW_CT_RN)) AS fw_rn_3MO_ly, SUM( fw_cap) AS fw_cap_3MO_ly FROM data1_fw WHERE ( 100*year)+month = &LY_3MO GROUP BY marsha;",RevPlanningData_mo.sas
 CREATE TABLE hotels AS select distinct marsha FROM data1_fw;,RevPlanningData_mo.sas
" CREATE TABLE mams.allrpdata AS select a.*, b.*, c.*, b2.*, c2.*, d.*, e.*, wd1.*, we1.*, fw1.*, wd2.*, we2.*, fw2.*, wd3.*, we3.*, fw3.* , wd1_ly.*, we1_ly.*, fw1_ly.*, wd2_ly.*, we2_ly.*, fw2_ly.*, wd3_ly.*, we3_ly.*, fw3_ly.* FROM hotels AS a LEFT JOIN fw_1mo AS b ON a.marsha=b.marsha LEFT JOIN fw_1mo_ly AS c ON a.marsha=c.marsha LEFT JOIN fw_2mo AS b2 ON a.marsha=b2.marsha LEFT JOIN fw_2mo_ly AS c2 ON a.marsha=c2.marsha LEFT JOIN fw_3mo AS d ON a.marsha=d.marsha LEFT JOIN fw_3mo_ly AS e ON a.marsha=e.marsha LEFT JOIN wd_occ_1mo AS wd1 ON a.marsha=wd1.marsha LEFT JOIN we_occ_1mo AS we1 ON a.marsha=we1.marsha LEFT JOIN fw_occ_1mo AS fw1 ON a.marsha=fw1.marsha LEFT JOIN wd_occ_2mo AS wd2 ON a.marsha=wd2.marsha LEFT JOIN we_occ_2mo AS we2 ON a.marsha=we2.marsha LEFT JOIN fw_occ_2mo AS fw2 ON a.marsha=fw2.marsha LEFT JOIN wd_occ_3mo AS wd3 ON a.marsha=wd3.marsha LEFT JOIN we_occ_3mo AS we3 ON a.marsha=we3.marsha LEFT JOIN fw_occ_3mo AS fw3 ON a.marsha=fw3.marsha LEFT JOIN wd_occ_1mo_ly AS wd1_ly ON a.marsha=wd1_ly.marsha LEFT JOIN we_occ_1mo_ly AS we1_ly ON a.marsha=we1_ly.marsha LEFT JOIN fw_occ_1mo_ly AS fw1_ly ON a.marsha=fw1_ly.marsha LEFT JOIN wd_occ_2mo_ly AS wd2_ly ON a.marsha=wd2_ly.marsha LEFT JOIN we_occ_2mo_ly AS we2_ly ON a.marsha=we2_ly.marsha LEFT JOIN fw_occ_2mo_ly AS fw2_ly ON a.marsha=fw2_ly.marsha LEFT JOIN wd_occ_3mo_ly AS wd3_ly ON a.marsha=wd3_ly.marsha LEFT JOIN we_occ_3mo_ly AS we3_ly ON a.marsha=we3_ly.marsha LEFT JOIN fw_occ_3mo_ly AS fw3_ly ON a.marsha=fw3_ly.marsha;",RevPlanningData_mo.sas
 CREATE TABLE mams.PLU&plutimef AS  (  SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER_HIST Where asof_yrmo=&plutimef  )  ;,RevPlanningData_mo_new.sas
" CREATE TABLE data1_wd AS select b.MARSHA, b.brnd, month, year , SUM( ( AU_GR_DEF_RV + AU_GR_Ten_RV + AU_GR_Tobe_RV)) AS WD_GR_RV , SUM( AU_TR_RV) AS WD_TR_RV, SUM( AU_CT_RV) AS WD_CT_RV , SUM( ( AU_GR_DEF_RN + AU_GR_Ten_RN + AU_GR_Tobe_RN)) AS WD_GR_RN , SUM( AU_TR_RN) AS WD_TR_RN, SUM( AU_CT_RN) AS WD_CT_RN , SUM( capacity) AS WD_cap FROM Proj.Extractsum_mo AS a INNER JOIN mams.PLU&plutimef AS b ON a.prop_code=b.marsha WHERE ( 100*year)+month IN ( &TY_1MO , &TY_2MO , &TY_3MO , &LY_1MO , &LY_2MO , &LY_3MO) AND b.mf='M' AND b.region IN ( 'E_' 'S_' 'W_' 'C_') AND country IN ( 'United States' 'Canada') AND WDWE ='WD' GROUP BY b.marsha, b.brnd, month, year;",RevPlanningData_mo_new.sas
" CREATE TABLE data1_we AS select b.MARSHA, b.brnd, month, year , SUM( ( AU_GR_DEF_RV + AU_GR_Ten_RV + AU_GR_Tobe_RV)) AS WE_GR_RV , SUM( AU_TR_RV) AS WE_TR_RV, SUM( AU_CT_RV) AS WE_CT_RV , SUM( ( AU_GR_DEF_RN + AU_GR_Ten_RN + AU_GR_Tobe_RN)) AS WE_GR_RN , SUM( AU_TR_RN) AS WE_TR_RN, SUM( AU_CT_RN) AS WE_CT_RN , SUM( capacity) AS WE_cap FROM Proj.Extractsum_mo AS a INNER JOIN mams.PLU&plutimef AS b ON a.prop_code=b.marsha WHERE ( 100*year)+month IN ( &TY_1MO , &TY_2MO , &TY_3MO , &LY_1MO , &LY_2MO , &LY_3MO) AND b.mf='M' AND b.region IN ( 'E_' 'S_' 'W_' 'C_') AND country IN ( 'United States' 'Canada') AND WDWE ='WE' GROUP BY b.marsha, b.brnd, month, year;",RevPlanningData_mo_new.sas
" CREATE TABLE data1_fw AS select b.MARSHA, b.brnd, month, year , SUM( ( AU_GR_DEF_RV + AU_GR_Ten_RV + AU_GR_Tobe_RV)) AS FW_GR_RV , SUM( AU_TR_RV) AS FW_TR_RV, SUM( AU_CT_RV) AS FW_CT_RV , SUM( ( AU_GR_DEF_RN + AU_GR_Ten_RN + AU_GR_Tobe_RN)) AS FW_GR_RN , SUM( AU_TR_RN) AS FW_TR_RN, SUM( AU_CT_RN) AS FW_CT_RN , SUM( capacity) AS FW_cap FROM Proj.Extractsum_mo AS a INNER JOIN mams.PLU&plutimef AS b ON a.prop_code=b.marsha WHERE ( 100*year)+month IN ( &TY_1MO , &TY_2MO , &TY_3MO , &LY_1MO , &LY_2MO , &LY_3MO) AND b.mf='M' AND b.region IN ( 'E_' 'S_' 'W_' 'C_') AND country IN ( 'United States' 'Canada') GROUP BY b.marsha, b.brnd, month, year;",RevPlanningData_mo_new.sas
" CREATE TABLE fw_1mo AS select marsha, SUM( fw_gr_rn) AS fw_gr_rn_1MO FROM data1_fw WHERE ( 100*year)+month = &TY_1MO GROUP BY marsha;",RevPlanningData_mo_new.sas
" CREATE TABLE fw_1mo_ly AS select marsha, SUM( fw_gr_rn) AS fw_gr_rn_LY_1MO FROM data1_fw WHERE ( 100*year)+month = &LY_1MO GROUP BY marsha;",RevPlanningData_mo_new.sas
" CREATE TABLE fw_2mo AS select marsha, SUM( fw_gr_rn) AS fw_gr_rn_2MO FROM data1_fw WHERE ( 100*year)+month = &TY_2MO GROUP BY marsha;",RevPlanningData_mo_new.sas
" CREATE TABLE fw_2mo_ly AS select marsha, SUM( fw_gr_rn) AS fw_gr_rn_LY_2MO FROM data1_fw WHERE ( 100*year)+month = &LY_2MO GROUP BY marsha;",RevPlanningData_mo_new.sas
" CREATE TABLE fw_3mo AS select marsha, SUM( fw_gr_rn) AS fw_gr_rn_3MO FROM data1_fw WHERE ( 100*year)+month = &TY_3MO GROUP BY marsha;",RevPlanningData_mo_new.sas
" CREATE TABLE fw_3mo_ly AS select marsha, SUM( fw_gr_rn) AS fw_gr_rn_LY_3MO FROM data1_fw WHERE ( 100*year)+month = &LY_3MO GROUP BY marsha;",RevPlanningData_mo_new.sas
" CREATE TABLE wd_occ_1mo AS select marsha, SUM( ( WD_TR_RN+WD_GR_RN+WD_CT_RN)) AS wd_rn_1MO, SUM( wd_cap) AS wd_cap_1MO FROM data1_wd WHERE ( 100*year)+month = &TY_1MO GROUP BY marsha;",RevPlanningData_mo_new.sas
" CREATE TABLE we_occ_1mo AS select marsha, SUM( ( WE_TR_RN+WE_GR_RN+WE_CT_RN)) AS we_rn_1MO, SUM( we_cap) AS we_cap_1MO FROM data1_we WHERE ( 100*year)+month = &TY_1MO GROUP BY marsha;",RevPlanningData_mo_new.sas
" CREATE TABLE fw_occ_1mo AS select marsha, SUM( ( FW_TR_RN+FW_GR_RN+FW_CT_RN)) AS fw_rn_1MO, SUM( fw_cap) AS fw_cap_1MO FROM data1_fw WHERE ( 100*year)+month = &TY_1MO GROUP BY marsha;",RevPlanningData_mo_new.sas
" CREATE TABLE wd_occ_2mo AS select marsha, SUM( ( WD_TR_RN+WD_GR_RN+WD_CT_RN)) AS wd_rn_2MO, SUM( wd_cap) AS wd_cap_2MO FROM data1_wd WHERE ( 100*year)+month = &TY_2MO GROUP BY marsha;",RevPlanningData_mo_new.sas
" CREATE TABLE we_occ_2mo AS select marsha, SUM( ( WE_TR_RN+WE_GR_RN+WE_CT_RN)) AS we_rn_2MO, SUM( we_cap) AS we_cap_2MO FROM data1_we WHERE ( 100*year)+month = &TY_2MO GROUP BY marsha;",RevPlanningData_mo_new.sas
" CREATE TABLE fw_occ_2mo AS select marsha, SUM( ( FW_TR_RN+FW_GR_RN+FW_CT_RN)) AS fw_rn_2MO, SUM( fw_cap) AS fw_cap_2MO FROM data1_fw WHERE ( 100*year)+month = &TY_2MO GROUP BY marsha;",RevPlanningData_mo_new.sas
" CREATE TABLE wd_occ_3mo AS select marsha, SUM( ( WD_TR_RN+WD_GR_RN+WD_CT_RN)) AS wd_rn_3MO, SUM( wd_cap) AS wd_cap_3MO FROM data1_wd WHERE ( 100*year)+month = &TY_3MO GROUP BY marsha;",RevPlanningData_mo_new.sas
" CREATE TABLE we_occ_3mo AS select marsha, SUM( ( WE_TR_RN+WE_GR_RN+WE_CT_RN)) AS we_rn_3MO, SUM( we_cap) AS we_cap_3MO FROM data1_we WHERE ( 100*year)+month = &TY_3MO GROUP BY marsha;",RevPlanningData_mo_new.sas
" CREATE TABLE fw_occ_3mo AS select marsha, SUM( ( FW_TR_RN+FW_GR_RN+FW_CT_RN)) AS fw_rn_3MO, SUM( fw_cap) AS fw_cap_3MO FROM data1_fw WHERE ( 100*year)+month = &TY_3MO GROUP BY marsha;",RevPlanningData_mo_new.sas
" CREATE TABLE wd_occ_1mo_ly AS select marsha, SUM( ( WD_TR_RN+WD_GR_RN+WD_CT_RN)) AS wd_rn_1MO_ly, SUM( wd_cap) AS wd_cap_1MO_ly FROM data1_wd WHERE ( 100*year)+month = &LY_1MO GROUP BY marsha;",RevPlanningData_mo_new.sas
" CREATE TABLE we_occ_1mo_ly AS select marsha, SUM( ( WE_TR_RN+WE_GR_RN+WE_CT_RN)) AS we_rn_1MO_ly, SUM( we_cap) AS we_cap_1MO_ly FROM data1_we WHERE ( 100*year)+month = &LY_1MO GROUP BY marsha;",RevPlanningData_mo_new.sas
" CREATE TABLE fw_occ_1mo_ly AS select marsha, SUM( ( FW_TR_RN+FW_GR_RN+FW_CT_RN)) AS fw_rn_1MO_ly, SUM( fw_cap) AS fw_cap_1MO_ly FROM data1_fw WHERE ( 100*year)+month = &LY_1MO GROUP BY marsha;",RevPlanningData_mo_new.sas
" CREATE TABLE wd_occ_2mo_ly AS select marsha, SUM( ( WD_TR_RN+WD_GR_RN+WD_CT_RN)) AS wd_rn_2MO_ly, SUM( wd_cap) AS wd_cap_2MO_ly FROM data1_wd WHERE ( 100*year)+month = &LY_2MO GROUP BY marsha;",RevPlanningData_mo_new.sas
" CREATE TABLE we_occ_2mo_ly AS select marsha, SUM( ( WE_TR_RN+WE_GR_RN+WE_CT_RN)) AS we_rn_2MO_ly, SUM( we_cap) AS we_cap_2MO_ly FROM data1_we WHERE ( 100*year)+month = &LY_2MO GROUP BY marsha;",RevPlanningData_mo_new.sas
" CREATE TABLE fw_occ_2mo_ly AS select marsha, SUM( ( FW_TR_RN+FW_GR_RN+FW_CT_RN)) AS fw_rn_2MO_ly, SUM( fw_cap) AS fw_cap_2MO_ly FROM data1_fw WHERE ( 100*year)+month = &LY_2MO GROUP BY marsha;",RevPlanningData_mo_new.sas
" CREATE TABLE wd_occ_3mo_ly AS select marsha, SUM( ( WD_TR_RN+WD_GR_RN+WD_CT_RN)) AS wd_rn_3MO_ly, SUM( wd_cap) AS wd_cap_3MO_ly FROM data1_wd WHERE ( 100*year)+month = &LY_3MO GROUP BY marsha;",RevPlanningData_mo_new.sas
" CREATE TABLE we_occ_3mo_ly AS select marsha, SUM( ( WE_TR_RN+WE_GR_RN+WE_CT_RN)) AS we_rn_3MO_ly, SUM( we_cap) AS we_cap_3MO_ly FROM data1_we WHERE ( 100*year)+month = &LY_3MO GROUP BY marsha;",RevPlanningData_mo_new.sas
" CREATE TABLE fw_occ_3mo_ly AS select marsha, SUM( ( FW_TR_RN+FW_GR_RN+FW_CT_RN)) AS fw_rn_3MO_ly, SUM( fw_cap) AS fw_cap_3MO_ly FROM data1_fw WHERE ( 100*year)+month = &LY_3MO GROUP BY marsha;",RevPlanningData_mo_new.sas
 CREATE TABLE hotels AS select distinct marsha FROM data1_fw;,RevPlanningData_mo_new.sas
" CREATE TABLE mams.allrpdata AS select a.*, b.*, c.*, b2.*, c2.*, d.*, e.*, wd1.*, we1.*, fw1.*, wd2.*, we2.*, fw2.*, wd3.*, we3.*, fw3.* , wd1_ly.*, we1_ly.*, fw1_ly.*, wd2_ly.*, we2_ly.*, fw2_ly.*, wd3_ly.*, we3_ly.*, fw3_ly.* FROM hotels AS a LEFT JOIN fw_1mo AS b ON a.marsha=b.marsha LEFT JOIN fw_1mo_ly AS c ON a.marsha=c.marsha LEFT JOIN fw_2mo AS b2 ON a.marsha=b2.marsha LEFT JOIN fw_2mo_ly AS c2 ON a.marsha=c2.marsha LEFT JOIN fw_3mo AS d ON a.marsha=d.marsha LEFT JOIN fw_3mo_ly AS e ON a.marsha=e.marsha LEFT JOIN wd_occ_1mo AS wd1 ON a.marsha=wd1.marsha LEFT JOIN we_occ_1mo AS we1 ON a.marsha=we1.marsha LEFT JOIN fw_occ_1mo AS fw1 ON a.marsha=fw1.marsha LEFT JOIN wd_occ_2mo AS wd2 ON a.marsha=wd2.marsha LEFT JOIN we_occ_2mo AS we2 ON a.marsha=we2.marsha LEFT JOIN fw_occ_2mo AS fw2 ON a.marsha=fw2.marsha LEFT JOIN wd_occ_3mo AS wd3 ON a.marsha=wd3.marsha LEFT JOIN we_occ_3mo AS we3 ON a.marsha=we3.marsha LEFT JOIN fw_occ_3mo AS fw3 ON a.marsha=fw3.marsha LEFT JOIN wd_occ_1mo_ly AS wd1_ly ON a.marsha=wd1_ly.marsha LEFT JOIN we_occ_1mo_ly AS we1_ly ON a.marsha=we1_ly.marsha LEFT JOIN fw_occ_1mo_ly AS fw1_ly ON a.marsha=fw1_ly.marsha LEFT JOIN wd_occ_2mo_ly AS wd2_ly ON a.marsha=wd2_ly.marsha LEFT JOIN we_occ_2mo_ly AS we2_ly ON a.marsha=we2_ly.marsha LEFT JOIN fw_occ_2mo_ly AS fw2_ly ON a.marsha=fw2_ly.marsha LEFT JOIN wd_occ_3mo_ly AS wd3_ly ON a.marsha=wd3_ly.marsha LEFT JOIN we_occ_3mo_ly AS we3_ly ON a.marsha=we3_ly.marsha LEFT JOIN fw_occ_3mo_ly AS fw3_ly ON a.marsha=fw3_ly.marsha;",RevPlanningData_mo_new.sas
 CREATE TABLE prop_master AS  (  SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER A  ) ;,Rewards Percentages-AW.sas
" CREATE TABLE RWDDATA AS  (  SELECT property_cd AS Marsha_Code, CURR_MARKET_PREFIX_CD AS Market_Code_Prefix , STAY_RWDS_MEMBER_LEVEL_TXT AS Freq_Program_Level , SUM( CURR_ROOMS_QTY) AS rn, COUNT( property_cd) AS ty_stays , SUM( CURR_ROOM_REV_Local_SUB_AMT) AS rv_Local FROM AW_TGT_BUS_DBO.MRDW_BI_FACT_STAYED_PAID_NOS WHERE stay_year >= 2018 AND NOS_STATUS_CD='A' AND stay_dt >= '2019-09-01' AND stay_dt <= '2019-11-30' GROUP BY property_cd, CURR_MARKET_PREFIX_CD, STAY_RWDS_MEMBER_LEVEL_TXT  ) ;",Rewards Percentages-AW.sas
" CREATE TABLE tothotel AS select marsha_code AS marsha, SUM( rn) AS rn_tot FROM rwddata GROUP BY marsha_code;",Rewards Percentages-AW.sas
" CREATE TABLE totrwd AS select marsha_code AS marsha, SUM( rn) AS rn_rwd FROM rwddata WHERE Freq_Program_Level<>'Non-member' GROUP BY marsha_code;",Rewards Percentages-AW.sas
" CREATE TABLE totplat AS select marsha_code AS marsha, SUM( rn) AS rn_plat FROM rwddata WHERE Freq_Program_Level = 'Platinum' GROUP BY marsha_code;",Rewards Percentages-AW.sas
" CREATE TABLE totsc AS select marsha_code AS marsha, SUM( rn) AS rn_sc FROM rwddata WHERE Market_Code_Prefix='17' GROUP BY marsha_code;",Rewards Percentages-AW.sas
" CREATE TABLE scrwd AS select marsha_code AS marsha, SUM( rn) AS rn_sc_rwd FROM rwddata WHERE Market_Code_Prefix IN ( '17', '18') AND Freq_Program_Level<>'Non-member' GROUP BY marsha_code;",Rewards Percentages-AW.sas
" CREATE TABLE hot_tots AS select a.*, b.*, c.*, d.*, e.*, f.brnd FROM tothotel AS a LEFT JOIN totrwd AS b ON a.marsha=b.marsha LEFT JOIN totplat AS c ON a.marsha=c.marsha LEFT JOIN totsc AS d ON a.marsha=d.marsha LEFT JOIN scrwd AS e ON a.marsha=e.marsha INNER JOIN prop_master AS f ON a.marsha=f.marsha;",Rewards Percentages-AW.sas
" CREATE TABLE brndtots AS select brnd, SUM( rn_tot) AS brnd_rn_tot, SUM( rn_rwd) AS brnd_rn_rwd , SUM( rn_plat) AS brnd_rn_plat, SUM( rn_sc) AS brnd_rn_sc , SUM( rn_sc_rwd) AS brnd_rn_sc_rwd FROM hot_tots GROUP BY brnd CREATE TABLE mams.all_rwd_mamm_&yrmo. AS select a.*, b.* FROM hot_tots AS a LEFT JOIN brndtots AS b ON a.brnd=b.brnd;",Rewards Percentages-AW.sas
 CREATE TABLE esf.all_rwd_mamm_&yrmo. AS ( SELECT  *  FROM mams.all_rwd_mamm_&yrmo. );,Rewards Percentages-AW.sas
" CREATE TABLE DCHOTELS1 AS ( SELECT MARKET_NAME, AREA_NAME, MARSHA_CODE AS MARSHA, ORG_NAME AS ORGANIZATION_NAME FROM PRP_SNAP.AREASLS_PROP_&YEAR._&PERIOD.  WHERE UPPER( ORG_NAME)<>'CANADA');",SFO_Wholesale_Data_(FINAL).sas
CREATE TABLE DCHOTELS AS (SELECT DISTINCT * FROM DCHOTELS1 ORDER BY MARSHA);,SFO_Wholesale_Data_(FINAL).sas
" CREATE TABLE PROPS AS  ( select MARSHA, SFO_ORG, MISW_FLAG FROM AW_TGT_BUS_DBO.PROPERTY_MASTER_HIST WHERE ASOF_YRMO = &CURYRPD. AND SFO_ORG NOT IN ( '','CAL','CAN') ORDER BY MARSHA  )  ;",SFO_Wholesale_Data_(FINAL).sas
 CREATE TABLE PROPMERGE AS ( SELECT  *  FROM DCHOTELS A LEFT JOIN PROPS B ON  A.MARSHA =  B.MARSHA);,SFO_Wholesale_Data_(FINAL).sas
" CREATE TABLE WHOLESALE_MRDW_TOTAL1 AS SELECT PROPERTY_CD AS MARSHA, ( 100*YEAR_CAL_ID+MONTH_CAL_ID) AS YEARMO, SUM( ROOMNIGHTS_QTY) AS RN, SUM( NET_REV_USD_SUB_AMT) AS RV FROM NZTFP.MRDW_FACT_AGG_DR_REV_ANALYSIS WHERE YEAR_CAL_ID =&CURYR AND MONTH_CAL_ID BETWEEN 1 AND &SHORTPD AND PROPERTY_CD IN ( %PROPMAR) AND UPPER( MARKET_SEG_NM)='WHOLESALER' AND MARKET_PREFIX_CD='26' AND PROPERTY_CD NOT IN ( 'MCODW','MCOSI') GROUP BY MARSHA, YEARMO HAVING ( RN<>0 OR RV<>0) ORDER BY MARSHA, YEARMO;",SFO_Wholesale_Data_(FINAL).sas
" CREATE TABLE FINAL_DYNAMIC1 AS  ( SELECT PROP_CD AS MARSHA, RTRIM( TO_CHAR( RPT_YR,'9999')) || CASE WHEN RPT_PD_MO BETWEEN 1 AND 9 THEN '0'||RTRIM( TO_CHAR( RPT_PD_MO,'99')) ELSE RTRIM( TO_CHAR( RPT_PD_MO,'99')) END AS YEARMO, SUM( AP_TOT_RM_NTS) AS DYNAMIC_RN, SUM( AP_TOT_RM_REV) AS DYNAMIC_RV FROM SGR_FACT_SMRY_MGR_PRP_ACCT_PROD WHERE RPT_YR=&CURYR AND RPT_PD_MO BETWEEN 1 AND &SHORTPD AND ACCOUNT_FLG = 'W' AND LENGTH( ACCOUNT_ID)>5 AND PROP_CD IN ( %PROPMAR) AND PROP_CD NOT IN ( 'MCODW','MCOSI') GROUP BY RPT_YR, RPT_PD_MO, PROP_CD  ) ;",SFO_Wholesale_Data_(FINAL).sas
"CREATE TABLE FINAL_DYNAMIC AS ( SELECT  *, YEARMO AS YEARMO1, FORMAT(YEARMO1*1, INT)  AS YEARMO  FROM FINAL_DYNAMIC1 );",SFO_Wholesale_Data_(FINAL).sas
ALTER TABLE FINAL_DYNAMIC DROP COLUMN YEARMO1 ;,SFO_Wholesale_Data_(FINAL).sas
" CREATE TABLE WHOLESALE_MRDW_TOTAL_ANALYSIS AS SELECT COALESCE( A.MARSHA, B.MARSHA) AS MARSHA, COALESCE( A.YEARMO, B.YEARMO) AS YEARMO, COALESCE( A.RN,0) AS RN, COALESCE( A.RV,0) AS RV, COALESCE( B.DYNAMIC_RN,0) AS DYNAMIC_RN, COALESCE( B.DYNAMIC_RV,0) AS DYNAMIC_RV FROM WHOLESALE_MRDW_TOTAL1 A FULL JOIN FINAL_DYNAMIC B ON A.MARSHA=B.MARSHA AND A.YEARMO=B.YEARMO ;",SFO_Wholesale_Data_(FINAL).sas
" CREATE TABLE COMBINE_WHOLESALE AS ( SELECT  *  FROM WHOLESALE_MRDW_TOTAL1 UNION ALL SELECT  *, DYNAMIC_RN AS RN, DYNAMIC_RV AS RV FROM FINAL_DYNAMIC);",SFO_Wholesale_Data_(FINAL).sas
"CREATE TABLE WHOLESALE_MRDW_TOTAL AS (SELECT MARSHA, YEARMO, SUM(RN) AS RN, SUM(RV) AS RV FROM COMBINE_WHOLESALE GROUP BY MARSHA, YEARMO );",SFO_Wholesale_Data_(FINAL).sas
"CREATE TABLE ""\\HDQMDM1FPCL3V1\LODG-MKTFNAC\SHARED SERVICE\SOURCE DATA\WHOLESALE - MRDW & SFA\&CURYR.\YTD_SFO_MRDW_WHOLESALE_DATA_AS_OF_&CURYRPD..XLS"" AS ( SELECT *, MARSHA,YEARMO,RN,RV  FROM WHOLESALE_MRDW_TOTAL) ;",SFO_Wholesale_Data_(FINAL).sas
" CREATE TABLE CONTRACT_MRDW_TOTAL1 AS SELECT PROPERTY_CD AS MARSHA, ( 100*YEAR_CAL_ID+MONTH_CAL_ID) AS YEARMO, SUM( ROOMNIGHTS_QTY) AS RN, SUM( NET_REV_USD_SUB_AMT) AS RV FROM NZTFP.MRDW_FACT_AGG_DR_REV_ANALYSIS WHERE YEAR_CAL_ID IN ( &CURYR. ) AND MONTH_CAL_ID BETWEEN 1 AND &SHORTPD. AND PROPERTY_CD IN ( %PROPMAR) AND UPPER( MARKET_SEG_NM)='CONTRACT' AND MARKET_PREFIX_CD='CN' GROUP BY MARSHA, YEARMO HAVING ( RN<>0 OR RV<>0) ORDER BY MARSHA, YEARMO;",SFO_Wholesale_Data_(FINAL).sas
 CREATE TABLE COMBINE_AIRLINE AS ( SELECT  *  FROM CONTRACT_MRDW_TOTAL1 );,SFO_Wholesale_Data_(FINAL).sas
"CREATE TABLE AIRLINE_MRDW_TOTAL AS (SELECT MARSHA, YEARMO, SUM(RN) AS RN, SUM(RV) AS RV FROM COMBINE_AIRLINE GROUP BY MARSHA, YEARMO );",SFO_Wholesale_Data_(FINAL).sas
"CREATE TABLE CONTRACT_MRDW_TOTAL AS (SELECT * FROM AIRLINE_MRDW_TOTAL ORDER BY MARSHA ,YEARMO);",SFO_Wholesale_Data_(FINAL).sas
"CREATE TABLE ""\\HDQMDM1FPCL3V1\LODG-MKTFNAC\SHARED SERVICE\SOURCE DATA\WHOLESALE - MRDW & SFA\&CURYR.\YTD_SFO_MRDW_WHOLESALE_DATA_AS_OF_&CURYRPD..XLS"" AS ( SELECT *, MARSHA,YEARMO,RN,RV  FROM CONTRACT_MRDW_TOTAL) ;",SFO_Wholesale_Data_(FINAL).sas
" CREATE TABLE AW_Manual_Adjustments AS  ( select ADJ_YEAR_ID AS YEAR, ADJ_MONTH_ID AS month, SLS_MGR_NM AS EXECUTIVE_NAME, MARSHA_CD AS PROPERTY_CODE, SUM( NET_RM_NGTS) AS RN, SUM( NET_RM_REV) AS RV FROM AW_SLS_PRD_AM.MANUAL_ADJUSTMENTS WHERE ADJ_YEAR_ID=&CURYR. AND ADJ_MONTH_ID BETWEEN 1 AND &SHORTPD AND ACCT_COMP_TYPE IN ( 'Non Assigned Account IN Organization') AND SLS_MGR_ROLE IN ( 'Market Account Executive, Whsale/FIT/Tour & Travel') GROUP BY ADJ_YEAR_ID, ADJ_MONTH_ID, SLS_MGR_NM, MARSHA_CD  )  ;",SFO_Wholesale_Data_(FINAL).sas
" CREATE TABLE WHOLESALE_SFA AS  ( SELECT RPT_YR AS YEAR, RPT_PD_MO AS MONTH, SM_NAME AS EXECUTIVE_NAME, PROP_CD AS PROPERTY_CODE, SUM( PACE_RM_NTS) AS RN, SUM( PACE_RM_REV) AS RV FROM SGR_FACT_SMRY_MGR_PRP_PROD WHERE RPT_YR=&CURYR AND RPT_PD_MO BETWEEN 1 AND &SHORTPD AND UPPER( SM_ROLE_NM)='MARKET ACCOUNT EXECUTIVE, WHSALE/FIT/TOUR & TRAVEL' AND UPPER( ACT_COMP) NOT IN ( 'NON ASSIGNED ACCOUNT OUT OF ORGANIZATION', 'ASSIGNED ACCOUNT IN ORGANIZATION', 'ASSIGNED ACCOUNT OUT OF ORGANIZATION') GROUP BY RPT_YR, RPT_PD_MO, SM_NAME, PROP_CD  ) ;",SFO_Wholesale_Data_(FINAL).sas
 CREATE TABLE WHOLESALE_SFA AS ( SELECT  *  FROM WHOLESALE_SFA UNION ALL SELECT  *  FROM AW_Manual_Adjustments WHERE ( RN+RV)<>0);,SFO_Wholesale_Data_(FINAL).sas
"CREATE TABLE ""\\HDQMDM1FPCL3V1\LODG-MKTFNAC\SHARED SERVICE\SOURCE DATA\WHOLESALE - MRDW & SFA\&CURYR.\YTD_SFO_WHOLESALE_SFA_DATA_AS_OF_&CURYRPD..XLS"" AS ( SELECT * FROM WHOLESALE_SFA) ;",SFO_Wholesale_Data_(FINAL).sas
" CREATE TABLE props AS  ( SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER WHERE BRND IN ( 'AL','AR','CY','EL','FI','FP','RI','SH','TS') AND UCASE( REGION_NAME) IN ( 'AMERICAS EAST','AMERICAS WEST') AND MF='M'  )  ;",Special_Corporate.sas
" CREATE TABLE mrdwprod AS   ( select pr.property_cd AS Marsha, sd.year_cal AS year, sd.month_cal_id AS month, sd.qtr_cal_id AS qtr, CASE WHEN sd.weekend_ind = 1 THEN 'Weekend' ELSE 'Weekday' END AS Weekday_Weekend, sd.date_dt, sd.ab_day_of_week_cd, sd.week_acctg_id, CASE WHEN mr.market_type_cd IN ( 'G') THEN 'Group' when mr.market_type_cd IN ( 'C') THEN 'Contract' ELSE 'Transient' END AS Rate_Type, SUM( dr.rooms_qty) AS rn, SUM( CASE WHEN cc.exch_per_us_dlr_rte IN ( 0) THEN ROUND( dr.proj_net_local_rev_amt,2) ELSE ROUND( ( dr.proj_net_local_rev_amt/cc.exch_per_us_dlr_rte),0) END) AS rv FROM mrdw_fact_daily_revenue dr INNER JOIN mrdw_dim_currency_conversion cc ON ( dr.date_currency_stay_key = cc.date_currency_key) INNER JOIN mrdw_dim_date sd ON ( cc.date_key = sd.date_key) INNER JOIN mrdw_dim_market_rates mr ON ( dr.market_rate_key = mr.market_rate_key) INNER JOIN mrdw_dim_property pr ON ( mr.property_id = pr.property_id) INNER JOIN mrdw_dim_status_accom AS a19 ON ( a19.status_accom_key = DR.status_accom_key) WHERE ( 100*sd.year_cal+sd.month_cal_id >= 201510 AND 100*sd.year_cal+sd.month_cal_id <= &curyrpd. ) AND dr.proj_net_local_rev_amt/dr.rooms_qty NOT IN ( 999,999.99,9999,9999.99,99999,99999.99,999999,999999.99) AND a19.action_cd <> 'NR' AND pr.property_cd IN ( %prp_list) AND SUBSTRING( mr.market_cd,1,2) IN ( '15','17','18') GROUP BY Marsha, year, month, qtr, Weekday_Weekend, Rate_Type, sd.date_dt, ab_day_of_week_cd, sd.week_acctg_id ORDER BY Marsha, year, month, qtr  ) ;",Special_Corporate.sas
" CREATE TABLE mrdwprod2a AS select coalesce( a.marsha,b.marsha) AS marsha, coalesce( a.date_dt,b.date_dt+364) AS stay_date_ty format=date9., coalesce( b.date_dt,a.date_dt-364) AS stay_date_ly format=date9., a.month, a.qtr, a.year, coalesce( a.weekday_weekend,b.weekday_weekend) AS weekday_weekend, coalesce( a.ab_day_of_week_cd,b.ab_day_of_week_cd) AS dayofweek, coalesce( a.rate_type,b.rate_type) AS rate_type, coalesce( a.rn,0) AS rn, coalesce( a.rv,0) AS rv, coalesce( b.rn,0) AS rn_ly, coalesce( b.rv,0) AS rv_ly FROM mrdwprod AS a full JOIN mrdwprod AS b ON a.marsha=b.marsha AND a.date_dt=b.date_dt+364 AND a.ab_day_of_week_cd=b.ab_day_of_week_cd AND a.rate_type=b.rate_type WHERE coalesce( a.date_dt,b.date_dt+364) >= '01OCT2016'd AND coalesce( a.date_dt,b.date_dt+364) <= &LPDED.;",Special_Corporate.sas
" CREATE TABLE mrdwprod2b AS ( SELECT  *  , EXTRACT(WEEK FROM stay_date_ty ) AS week , EXTRACT(WEEK FROM stay_date_ly ) AS week_ly , EXTRACT(MONTH FROM stay_date_ly ) AS month_ly , EXTRACT(QUARTER FROM stay_date_ly ) AS qtr_ly , EXTRACT(YEAR FROM stay_date_ly ) AS year_ly , CASE WHEN  month=''  THEN month( stay_date_ty ) END AS month, CASE WHEN  qtr=''  THEN qtr( stay_date_ty ) END AS qtr, CASE WHEN  year=''  THEN year( stay_date_ty ) END AS year FROM mrdwprod2a );",Special_Corporate.sas
" CREATE TABLE mrdwprod3 AS select a.*, b.rd, b.region, b.region_name, b.owner, b.hotel_name, b.sfo_org, b.sfo_market, b.acomp, b.state, b.brnd, b.market_name FROM mrdwprod2b a LEFT JOIN props b ON ( a.marsha=b.marsha ) ;",Special_Corporate.sas
"CREATE TABLE special_corp AS ( SELECT  *  , FORMAT(Region, VARCHAR(4)) AS Region , FORMAT(AST, VARCHAR(30)) AS AST , FORMAT(MARSHA, VARCHAR(5)) AS MARSHA , FORMAT(WEEKDAY_WEEKEND, VARCHAR(7)) AS WEEKDAY_WEEKEND , FORMAT(DAYOFWEEK, VARCHAR(3)) AS DAYOFWEEK , FORMAT(RATE_TYPE, VARCHAR(9)) AS RATE_TYPE , FORMAT(OWNER, VARCHAR(50)) AS OWNER , FORMAT(ACOMP, VARCHAR(1)) AS ACOMP , FORMAT(MARKET, VARCHAR(37)) AS MARKET , FORMAT(RD, VARCHAR(30)) AS AD , FORMAT(AMERICAS_REGION, VARCHAR(25)) AS AMERICAS_REGION , FORMAT(HAWAII, VARCHAR(1)) AS HAWAII , market_name AS Market , Region_Name AS Americas_Region , CASE WHEN  sfo_org=''  THEN 'Non - Deployed' ELSE sfo_org || ' - ' || sfo_market END AS AST, CASE WHEN  Region = 'E_'  THEN 'East' WHEN  Region = 'W_'  THEN 'West' END AS Region, CASE WHEN  State = 'HI'  THEN 'Y' ELSE 'N' END AS Hawaii FROM mrdwprod3 );",Special_Corporate.sas
"ALTER TABLE special_corp DROP COLUMN sfo_org ,  sfo_market ,  market_name ,  region_name ,  state ,  RD ;",Special_Corporate.sas
"SELECT * FROM special_corp ORDER BY stay_date_ty ,marsha;",Special_Corporate.sas
 select max( modate) into :LastMoDate FROM dictionary.tables WHERE libname = 'FINANCE' select modate into :IDemEyeDate FROM dictionary.tables WHERE libname = 'INTL' AND memname='INTLDEMEYE';,State of the Hotel.sas
 CREATE TABLE prop_MISW  AS ( (  select * FROM AW_TGT_BUS_DBO.property_master_hist WHERE asof_yrmo = &ODYrMo. AND openflag = 'Y'  )  ) ;,State of the Hotel.sas
CREATE INDEX marsha ON prop_MISW(marsha);,State of the Hotel.sas
"CREATE TABLE owner.plu AS ( SELECT marsha, brnd, brnd2, mf, cluster_name, market_name, region, avp, adrm, rd, hotel_name , 'ME' AS when ( 'CY','FI','SH','FP','OX','AL') Brnd2 , 'ES' AS when ( 'ER','RI','TS','EL') Brnd2 , 'FS' AS otherwise Brnd2  FROM prop_misw  WHERE mf='M');",State of the Hotel.sas
CREATE INDEX marsha ON owner.plu(marsha);,State of the Hotel.sas
"CREATE TABLE WORK.Actuals_&file. AS ( SELECT MARSHA , Year , Month , PD_mo_IND , WDWE , Segment , Rms , REV , lcl_curr , PHSG_SOURCE_IND , FXRATEUSDperCU FROM ""G:\DSS\OY Rev Plan Data\MonthActuals\&file..txt"" MISSOVER lrecl=88 );",State of the Hotel.sas
" CREATE TABLE FX_by_hotel  AS select prop_code AS marsha, ( usd_au_tr_rv+usd_au_gr_def_rv) / ( au_tr_rv+au_gr_def_rv) AS FX_USD_to_Local FROM proj.Extractsum_mo_&ODYrMo._ActUpdt a WHERE wdwe='WD' AND a.year=&odYr. AND a.month=&Curmon.;",State of the Hotel.sas
CREATE INDEX marsha ON FX_by_hotel(marsha);,State of the Hotel.sas
" CREATE TABLE Currency_FillIn  AS select distinct marsha, lcl_curr FROM Actuals_NALO_&ODYrMo. WHERE lcl_curr is not null UNION select distinct marsha, lcl_curr FROM Actuals_ILO_&ODYrMo. WHERE lcl_curr is not null;",State of the Hotel.sas
CREATE INDEX marsha ON Currency_FillIn(marsha);,State of the Hotel.sas
" CREATE TABLE Actuals AS ( SELECT  *  , EXTRACT(QUARTER FROM mdy( month,1,year) ) AS Quarter , ifc( wdwe='F','MO','W' || WDWE ) AS WDWE , ifn( lcl_curr<>'USD',rev,.  ) AS Rev_local , ifn( lcl_curr='USD',rev,rev * FX_USD_to_Local ) AS Rev_USD , rms AS group_rms , Rev_local AS group_rev_local , Rev_USD AS group_rev , rms AS Contract_rms , Rev_local AS Contract_rev_local , Rev_USD AS contract_rev , rms AS Transient_rms , Rev_local AS Transient_Rev_Local , Rev_USD AS Transient_Rev , Rev_local AS Group_Rebates_local , Rev_USD AS Group_Rebates , rev_local AS Transient_Rebates_local , Rev_USD AS Transient_Rebates , rev_local AS Contract_Rebates_local , Rev_USD AS Contract_Rebates , rev_local AS Other_Rev_local , Rev_USD AS Other_Rev , Rev AS when ( 'GRP CTRG') Group_Catering , Rev AS when ( 'LCL CTRG') Local_Catering  FROM Actuals_NALO_&ODYrMo. UNION ALL SELECT  *  , EXTRACT(QUARTER FROM mdy( month,1,year) ) AS Quarter , ifc( wdwe='F','MO','W' || WDWE ) AS WDWE , ifn( lcl_curr<>'USD',rev,.  ) AS Rev_local , ifn( lcl_curr='USD',rev,rev * FX_USD_to_Local ) AS Rev_USD , rms AS group_rms , Rev_local AS group_rev_local , Rev_USD AS group_rev , rms AS Contract_rms , Rev_local AS Contract_rev_local , Rev_USD AS contract_rev , rms AS Transient_rms , Rev_local AS Transient_Rev_Local , Rev_USD AS Transient_Rev , Rev_local AS Group_Rebates_local , Rev_USD AS Group_Rebates , rev_local AS Transient_Rebates_local , Rev_USD AS Transient_Rebates , rev_local AS Contract_Rebates_local , Rev_USD AS Contract_Rebates , rev_local AS Other_Rev_local , Rev_USD AS Other_Rev , Rev AS when ( 'GRP CTRG') Group_Catering , Rev AS when ( 'LCL CTRG') Local_Catering  FROM Actuals_ilo_&ODYrMo.);",State of the Hotel.sas
"CREATE TABLE Actuals_Updatea AS (SELECT marsha, year, month, wdwe, lcl_curr, SUM(group_rms) AS group_rms, SUM(group_rev_local) AS group_rev_local, SUM(group_rev) AS group_rev, SUM(Contract_rms) AS Contract_rms, SUM(Contract_rev_local) AS Contract_rev_local, SUM(Contract_rev) AS Contract_rev, SUM(Transient_rms) AS Transient_rms, SUM(Transient_rev_local) AS Transient_rev_local, SUM(Transient_rev) AS Transient_rev, SUM(group_Rebates_local) AS group_Rebates_local, SUM(group_rebates) AS group_rebates, SUM(Contract_Rebates_local) AS Contract_Rebates_local, SUM(Contract_rebates) AS Contract_rebates, SUM(Transient_Rebates_local) AS Transient_Rebates_local, SUM(Transient_rebates) AS Transient_rebates, SUM(other_rev_local) AS other_rev_local, SUM(Other_Rev) AS Other_Rev, SUM(group_catering) AS group_catering, SUM(local_catering) AS local_catering FROM actuals GROUP BY marsha, year, month, wdwe, lcl_curr );",State of the Hotel.sas
" CREATE TABLE Rm_Projections AS select prop_code AS MARSHA, e.year,EXTRACT(QUARTER FROM mdy( e.month,1,e.year)) AS Quarter, e.WDWE, SUM( capacity) AS Capacity, SUM( coalesce( a.Group_Rms,( au_gr_ten_rn+ au_gr_tobe_rn+ au_gr_def_rn))) AS Group_Rms, SUM( CASE WHEN au_tr_rv<>usd_au_tr_rv THEN coalesce( a.Group_Rev_Local,( au_gr_ten_rv+ au_gr_tobe_rv+ au_gr_def_rv)) end) AS Group_Rev_local, SUM( coalesce( a.group_rev,(  usd_au_gr_ten_rv+ usd_au_gr_tobe_rv+ usd_au_gr_def_rv))) AS Group_Rev, SUM( coalesce( a.contract_rms,au_ct_rn)) AS Contract_Rms, SUM( CASE WHEN au_tr_rv<>usd_au_tr_rv THEN coalesce( a.contract_rev_local,au_ct_rv) end) AS Contract_Rev_local, SUM( coalesce( a.contract_rev,usd_au_ct_rv)) AS Contract_Rev, SUM( coalesce( a.transient_rms,au_tr_rn)) AS Transient_Rms, SUM( CASE WHEN au_tr_rv<>usd_au_tr_rv THEN coalesce( a.transient_rev_local,au_tr_rv) end) AS Transient_Rev_local, SUM( coalesce( a.transient_rev,usd_au_tr_rv)) AS Transient_Rev, SUM( CASE WHEN au_gr_reb<>au_gr_reb_usd THEN coalesce( a.group_rebates_local,au_gr_reb) end) AS Group_Rebates_local, SUM( CASE WHEN au_ct_reb<>au_ct_reb_usd THEN coalesce( a.contract_rebates_local,au_ct_reb) end) AS Contract_Rebates_local, SUM( CASE WHEN au_tr_reb<>au_tr_reb_usd THEN coalesce( a.transient_rebates_local,au_tr_reb) end) AS Transient_Rebates_local, SUM( CASE WHEN au_othrm_rv<>au_othrm_rv_usd THEN coalesce( a.other_rev_local,au_othrm_rv) end) AS Other_Rev_local, SUM( coalesce( a.group_rebates,usd_au_gr_reb)) AS Group_Rebates, SUM( coalesce( a.contract_rebates,usd_au_ct_reb)) AS Contract_Rebates, SUM( coalesce( a.transient_rebates,usd_au_tr_reb)) AS Transient_Rebates, SUM( coalesce( a.other_rev,usd_au_othrm_rv)) AS Other_Rev, SUM( CASE WHEN e.year < &ODYr. THEN ( au_gr_ten_rn+ au_gr_tobe_rn+ au_gr_def_rn) ELSE b_gr_rn end ) AS Budget_Group_Rms, SUM( CASE WHEN au_tr_rv<>usd_au_tr_rv AND e.year < &ODYr. THEN ( au_gr_ten_rv+ au_gr_tobe_rv+ au_gr_def_rv) when au_tr_rv<>usd_au_tr_rv THEN b_gr_rv end ) AS Budget_Group_Rev_local, SUM( CASE WHEN e.year < &ODYr. THEN ( usd_au_gr_ten_rv+ usd_au_gr_tobe_rv+ usd_au_gr_def_rv) ELSE usd_b_gr_rv end ) AS Budget_Group_Rev, SUM( CASE WHEN e.year < &ODYr. THEN au_ct_rn ELSE b_ct_rn end) AS Budget_Contract_Rms, SUM( CASE WHEN au_tr_rv<>usd_au_tr_rv AND e.year < &ODYr. THEN au_ct_rv when au_tr_rv<>usd_au_tr_rv THEN b_ct_rv end) AS Budget_Contract_Rev_local, SUM( CASE WHEN e.year < &ODYr. THEN usd_au_ct_rv ELSE usd_b_ct_rv end) AS Budget_Contract_Rev, SUM( CASE WHEN e.year < &ODYr. THEN au_tr_rn ELSE b_tr_rn end) AS Budget_Transient_Rms, SUM( CASE WHEN au_tr_rv<>usd_au_tr_rv AND e.year < &ODYr. THEN au_tr_rv when au_tr_rv<>usd_au_tr_rv THEN b_tr_rv end) AS Budget_Transient_Rev_local, SUM( CASE WHEN e.year < &ODYr. THEN usd_au_tr_rv ELSE usd_b_tr_rv end) AS Budget_Transient_Rev, SUM( CASE WHEN au_gr_reb<>au_gr_reb_usd AND e.year < &ODYr. THEN au_gr_reb when b_gr_reb<>usd_b_gr_reb THEN b_gr_reb end) AS Budget_Group_Rebates_local, SUM( CASE WHEN au_ct_reb<>au_ct_reb_usd AND e.year < &ODYr. THEN au_ct_reb when b_ct_reb<>usd_b_ct_reb THEN b_ct_reb end) AS Budget_Contract_Rebates_local, SUM( CASE WHEN au_tr_reb<>au_tr_reb_usd AND e.year < &ODYr. THEN au_tr_reb when b_tr_reb<>usd_b_tr_reb THEN b_tr_reb end) AS Budget_Transient_Rebates_local, SUM( CASE WHEN au_othrm_rv<>au_othrm_rv_usd AND e.year < &ODYr. THEN au_othrm_rv when b_othrm_rv<>usd_b_othrm_rv THEN b_othrm_rv end) AS Budget_Other_Rev_local, SUM( CASE WHEN e.year < &ODYr. THEN usd_au_gr_reb ELSE usd_b_gr_reb end) AS Budget_Group_Rebates, SUM( CASE WHEN e.year < &ODYr. THEN usd_au_ct_reb ELSE usd_b_ct_reb end) AS Budget_Contract_Rebates, SUM( CASE WHEN e.year < &ODYr. THEN usd_au_tr_reb ELSE usd_b_tr_reb end) AS Budget_Transient_Rebates, SUM( CASE WHEN e.year < &ODYr. THEN usd_au_othrm_rv ELSE usd_b_othrm_rv end) AS Budget_Other_Rev, SUM( CASE WHEN e.year < &ODYr. THEN Capacity ELSE budgCap end) AS Budget_Capacity FROM proj.Extractsum_mo_&ODYrMo._actupdt e LEFT JOIN Actuals_Update a ON e.prop_code=a.marsha AND e.year=a.year AND e.month=a.month AND e.wdwe=a.wdwe WHERE e.year between &OdYr.-1 AND &OdYr.+1 GROUP BY prop_code, e.year, calculated Quarter, e.WDWE;",State of the Hotel.sas
" CREATE TABLE fx_by_month AS select DISTINCT prop_code AS marsha, year, month, CURCY_LOCAL, CURCY_SELLING, FX_SELLING_PER_USD, FX FROM proj.Extractsum_mo_&ODYrMo._ActUpdt WHERE year >= %SUBSTRING( &odyr,1,4) ORDER BY MARSHA, YEAR DESC, MONTH DESC;",State of the Hotel.sas
"CREATE TABLE Catering_NALO AS ( SELECT MARSHA , Year , Month , GR_LY_Rev , LC_ProjAct_Rev , LC_Bgt_Rev , LC_LY_Rev , EXTRACT(QUARTER FROM mdy( month,1,year) ) AS Quarter , gr_ly_rev AS GR_ProjAct_Rev , gr_ly_rev AS GR_Bgt_Rev , ' ' AS gr_ly_rev , lc_ly_rev AS lc_projAct_Rev , lc_ly_rev AS lc_bgt_rev , ' ' AS lc_ly_re FROM ""\\hdqmdm1fpcl4v1\lodg-revmgmt\rm eanlys\reports\Owner Deck\data\&ODYrMo\CateringNALO_&ODYrMo..txt"" lrecl=938 missover firstobs=2  WHERE YEAR = %SUBSTRING( &ODYr,1,4));",State of the Hotel.sas
"CREATE TABLE Catering_ILO AS ( SELECT MARSHA , Year , Month , GR_LY_Rev , LC_ProjAct_Rev , LC_Bgt_Rev , LC_LY_Rev , EXTRACT(QUARTER FROM mdy( month,1,year) ) AS Quarter , gr_ly_rev AS GR_ProjAct_Rev , gr_ly_rev AS GR_Bgt_Rev , ' ' AS gr_ly_rev , lc_ly_rev AS lc_projAct_Rev , lc_ly_rev AS lc_bgt_rev , ' ' AS lc_ly_re FROM ""\\hdqmdm1fpcl4v1\lodg-revmgmt\rm eanlys\reports\Owner Deck\data\&ODYrMo\CateringILO_&ODYrMo..txt"" lrecl=938 missover firstobs=2  WHERE YEAR = %SUBSTRING( &ODYr,1,4));",State of the Hotel.sas
 CREATE TABLE catering AS ( SELECT  *  FROM catering_nalo UNION ALL SELECT  *  FROM catering_ilo);,State of the Hotel.sas
" CREATE TABLE Catering_Sum AS select f.curcy_local, c.marsha, c.year, c.quarter, 'MO' AS WDWE, SUM( CASE WHEN f.curcy_local='USD' THEN . ELSE coalesce( a.group_catering,c.gr_projAct_rev) * f.fx end) AS Group_Catering_local, SUM( CASE WHEN f.curcy_local='USD' THEN . ELSE coalesce( a.local_catering,c.lc_projAct_Rev) * f.fx end) AS Local_Catering_local, SUM( CASE WHEN f.curcy_local='USD' THEN . ELSE gr_bgt_rev * f.fx end) AS Budget_Group_Catering_local, SUM( CASE WHEN f.curcy_local='USD' THEN . ELSE lc_bgt_rev * f.fx end) AS Budget_Local_Catering_local, SUM( coalesce( a.group_catering,c.gr_projAct_rev) / fx_selling_per_usd) AS group_catering, SUM( coalesce( a.local_catering,c.lc_projAct_Rev) / fx_selling_per_usd) AS local_catering, SUM( gr_bgt_rev / fx_selling_per_usd) AS budget_group_catering, SUM( lc_bgt_rev / fx_selling_per_usd) AS budget_local_catering FROM catering c LEFT JOIN actuals_UPDATE a ON c.marsha=a.marsha AND c.year=a.year AND c.month=a.month AND a.wdwe='MO' LEFT JOIN fx_by_month2 f ON f.marsha=c.marsha AND f.year=c.year AND f.month=c.month GROUP BY f.curcy_local, c.marsha, c.year, c.quarter;",State of the Hotel.sas
" CREATE TABLE owner.Projections AS select p.*, r.*, c.*, &ODYrMo AS AsOf FROM rm_projections r LEFT JOIN catering_sum c ON r.marsha=c.marsha AND r.year=c.year AND r.quarter=c.quarter AND r.wdwe=c.wdwe RIGHT JOIN owner.plu p ON p.marsha=r.marsha;",State of the Hotel.sas
" CREATE TABLE STLY_Base AS  ( select marsha, int( stay_yr) AS Year, int( stay_qtr) AS Quarter, int( stay_pd) AS Month, WDWE, book_stat, SUM( rooms_Net) AS Rooms, SUM( rooms_rv_Gross) AS Gross_Rev, SUM( rooms_net_ly) AS Rooms_STLY, SUM( rooms_rv_ly) AS Gross_Rev_STLY, SUM( rooms_Gross) AS Gross_Rooms_TY, SUM( rooms_gross_LY) AS Gross_Rooms_STLY, SUM( CASE WHEN opp_type='G' THEN rooms_net end) AS Group_Rooms, SUM( CASE WHEN opp_type='G' THEN rooms_net_ly end) AS Group_Rooms_STLY, SUM( CASE WHEN opp_type='L' THEN catering_rv end) AS Catering_Rev_Local, SUM( CASE WHEN opp_type='G' THEN catering_rv end) AS Catering_Rev_Group, SUM( CASE WHEN opp_type='L' THEN catering_rv_ly end) AS Catering_Rev_Local_STLY, SUM( CASE WHEN opp_type='G' THEN catering_rv_ly end) AS Catering_Rev_Group_STLY, asof_yrmo AS AsOf FROM aw_tgt_bus_dbo.oy_groupbookingpace a WHERE a.asof_yrmo = &ODYrMo. AND a.stay_yr <= &ODYr. + 4 AND a.book_act_ind = '0' GROUP BY marsha, int( stay_yr), int( stay_qtr), int( stay_pd), WDWE, book_stat, a.asof_yrmo  ) ;",State of the Hotel.sas
 CREATE TABLE STLY_Props  AS select distinct marsha FROM STLY_Base;,State of the Hotel.sas
CREATE INDEX marsha ON STLY_Props(marsha);,State of the Hotel.sas
" CREATE TABLE STLY_Add AS ( SELECT marsha, stayyr, stayqtr, Gross_Rev_STLY, stayYr AS Year, stayQtr AS Quarter, staypd AS Month, '1' AS WDWE , 'D' AS Book_Stat , rmntsdefty AS Rooms , revdefty AS Gross_Rev , rmntsdefly AS Rooms_STLY , revdefly AS Gross_Rev_STLY , '1' AS book_stat , rmntstentty AS Rooms , revtentty AS Gross_Rev , rmntstently AS Rooms_STLY , revtently AS Gross_Rev_STLY  FROM AWPROD.ROLLINGDATA_MISW  WHERE reportingyr = &ODYr. AND reportingpd=&CurMon. AND (_iorc_ <> %sysrc( _sok))or );",State of the Hotel.sas
 CREATE TABLE STLY_Combined AS ( SELECT  *  FROM STLY_Base UNION ALL SELECT  *  FROM STLY_Add);,State of the Hotel.sas
" CREATE TABLE owner.stly AS select p.*, s.* FROM stly_Combined s RIGHT JOIN owner.plu p ON s.marsha=p.marsha WHERE book_stat <> 'Z';",State of the Hotel.sas
" CREATE TABLE DemEyeReg AS  (  select a.property_cd AS MARSHA, ( a.date_stay_dt >= &nzMoBeg. OR a.date_stay_dt between &nzMoLYBeg. AND &nzMoLYEnd) AS Mth, ( a.date_stay_dt >= &nzL3Beg. OR a.date_stay_dt between &nzL3LYBeg. AND &nzmoLYend. ) AS L3, ( a.year_cal_id=&ODyr. OR ( a.year_cal_id=&ODyr.-1 AND a.date_stay_dt <= &nzMoLYEnd. )) AS YTD, CASE WHEN a.year_cal_id=&odYr. OR a.date_stay_dt >= &Nzl3Beg THEN 'TY' ELSE 'LY' END AS TYLY, CASE WHEN a.ab_day_of_week_cd IN ( 'FRI','SAT') THEN 'WE' ELSE 'WD' END AS WDWE, CASE WHEN a.market_seg_nm IN ( 'Group','Contract','Complimentary') THEN a.market_seg_nm ELSE 'Transient' END AS Segment1, a.market_seg_nm AS Segment2, a.ab_tier_loa_txt AS LOS_Tier, SUM( a.roomnights_qty) AS rn, SUM( CASE WHEN p.currency_iso_cd='USD' THEN a.net_rev_usd_amt ELSE a.net_rev_local_amt end) AS rv, SUM( a.net_rev_usd_sub_amt) AS rv_usd FROM mrdw_fact_agg_dr_rev_analysis a INNER JOIN mrdw_dim_property p ON a.property_cd=p.property_cd WHERE a.date_stay_dt <= &nzMoEnd. AND ( a.year_cal_id IN (  &ODyr., &ODyr.-1) OR a.date_stay_dt >= &nzL3LYBeg. ) AND a.brand_cd IN ( 'FS', 'BR', 'CC', 'RZ', 'BG', 'EB', 'CY', 'RI', 'SH', 'TS', 'FI', 'AK', 'AR', 'ER', 'GE', 'AL','DE','EL','FP','LC','MD','OX','SI','TX','WH','WI','XR') GROUP BY a.property_cd, ( a.date_stay_dt >= &nzMoBeg. OR a.date_stay_dt between &nzMoLYBeg. AND &nzMoLYEnd), ( a.date_stay_dt >= &nzL3Beg. OR a.date_stay_dt between &nzL3LYBeg. AND &nzmoLYend. ), ( a.year_cal_id=&ODyr. OR ( a.year_cal_id=&ODyr.-1 AND a.date_stay_dt <= &nzMoLYEnd. )), CASE WHEN a.year_cal_id=&odYr. OR a.date_stay_dt >= &Nzl3Beg THEN 'TY' ELSE 'LY' end, WDWE, Segment1, a.market_seg_nm, a.ab_tier_loa_txt  )  ;",State of the Hotel.sas
"CREATE TABLE DemandRaw AS ( SELECT MARSHA , YrMo , WDWE , los_tier , Segment2 , Addl_Demand , ( yrmo = &ODYrMo. OR yrmo = ( &ODYrMo.-100) ) AS Mth , ( ( &ODYrMo >= yrmo >= &l2. ) OR ( ( &l2.-100) <= yrmo <= ( &ODYrMo.-100)) ) AS L3 , ( ( &ODYrMo >= yrmo >= &ODYr.01) OR ( &LYR.01 <= yrmo <= ( &ODYrMo.-100)) ) AS YTD , ifc( yrmo >= &ODYr.01 OR yrmo >= &l2.,'TY','LY' ) AS TYLY , ifc( Segment2 IN ( 'Group','Contract','Complimentary'), segment2, 'Transient' ) AS segment FROM ""G:\RM EAnlys\Reports\Owner Deck\data\&ODYrMo\State of the Hotel Addl Demand.csv"" );",State of the Hotel.sas
"CREATE TABLE Demand AS (SELECT marsha, tyly, ytd, l3, mth, wdwe, segment1, segment2, los_tier, SUM(Addl_demand) AS Addl_demand FROM demandRaw GROUP BY marsha, tyly, ytd, l3, mth, wdwe, segment1, segment2, los_tier );",State of the Hotel.sas
"SELECT * FROM demeyereg ORDER BY marsha ,tyly ,ytd ,l3 ,mth ,wdwe ,segment1 ,segment2 ,los_tier;",State of the Hotel.sas
"SELECT * FROM demand ORDER BY marsha ,tyly ,ytd ,l3 ,mth ,wdwe ,segment1 ,segment2 ,los_tier;",State of the Hotel.sas
" CREATE TABLE fx_mrdw  AS select marsha, mth, l3, ytd, SUM( rv_usd) / SUM( rv) AS fx_usd_per_selling FROM demeyereg WHERE tyly='TY' GROUP BY marsha, mth, l3, ytd;",State of the Hotel.sas
"CREATE INDEX idx ON fx_mrdw(marsha, mth, l3, ytd);",State of the Hotel.sas
" CREATE TABLE demeyereg_YoY AS ( SELECT  *, rv AS rv_local, rv_usd AS rv AS None, 1 AS fx_usd_per_selling , CASE WHEN  rv_LY <> rv_local_LY  THEN rv_local_ly * fx_usd_per_selling ELSE rv_local_ly END AS rv_ly FROM demeyereg A JOIN demeyereg B ON  A.marsha =  B.marsha AND  A.ytd =  B.ytd AND  A.L3 =  B.L3 AND  A.mth =  B.mth AND  A.wdwe =  B.wdwe AND  A.segment1 =  B.segment1 AND  A.segment2 =  B.segment2 AND  A.los_tier =  B.los_tier JOIN demand C ON  B.marsha =  C.marsha AND  B.ytd =  C.ytd AND  B.L3 =  C.L3 AND  B.mth =  C.mth AND  B.wdwe =  C.wdwe AND  B.segment1 =  C.segment1 AND  B.segment2 =  C.segment2 AND  B.los_tier =  C.los_tier JOIN demand D ON  C.marsha =  D.marsha AND  C.ytd =  D.ytd AND  C.L3 =  D.L3 AND  C.mth =  D.mth AND  C.wdwe =  D.wdwe AND  C.segment1 =  D.segment1 AND  C.segment2 =  D.segment2 AND  C.los_tier =  D.los_tier WHERE TYLY='TY') rename=( rv=rv_local rv_usd=rv demeyereg ( and=( tyly='LY') rename=( rn=rn_ly rv=rv_local_ly RV_USD=RV_LY demand ( and=( tyly='TY' demand ( and=( tyly='LY') rename=( addl_demand=addl_demand_ly AND _iorc_ = %sysrc( _dsenom)) AS ( SELECT  *  , 1 AS fx_usd_per_selling , CASE WHEN  rv_LY <> rv_local_LY  THEN rv_local_ly * fx_usd_per_selling ELSE rv_local_ly END AS rv_ly FROM fx_mrdw A JOIN key=idx B ON  A.marsha =  B.marsha AND  A.ytd =  B.ytd AND  A.L3 =  B.L3 AND  A.mth =  B.mth AND  A.wdwe =  B.wdwe AND  A.segment1 =  B.segment1 AND  A.segment2 =  B.segment2 AND  A.los_tier =  B.los_tier JOIN / C ON  B.marsha =  C.marsha AND  B.ytd =  C.ytd AND  B.L3 =  C.L3 AND  B.mth =  C.mth AND  B.wdwe =  C.wdwe AND  B.segment1 =  C.segment1 AND  B.segment2 =  C.segment2 AND  B.los_tier =  C.los_tier JOIN unique D ON  C.marsha =  D.marsha AND  C.ytd =  D.ytd AND  C.L3 =  D.L3 AND  C.mth =  D.mth AND  C.wdwe =  D.wdwe AND  C.segment1 =  D.segment1 AND  C.segment2 =  D.segment2 AND  C.los_tier =  D.los_tier WHERE TYLY='TY') rename=( rv=rv_local rv_usd=rv demeyereg ( and=( tyly='LY') rename=( rn=rn_ly rv=rv_local_ly RV_USD=RV_LY demand ( and=( tyly='TY' demand ( and=( tyly='LY') rename=( addl_demand=addl_demand_ly AND _iorc_ = %sysrc( _dsenom));",State of the Hotel.sas
"CREATE TABLE DemEyeReg_Sum AS (SELECT marsha, ytd, L3, mth, wdwe, segment1, segment2, SUM(rn:) AS rn:, SUM(rv:) AS rv:, SUM(addl_demand:) AS addl_demand: FROM demeyereg_yoy GROUP BY marsha, ytd, L3, mth, wdwe, segment1, segment2 );",State of the Hotel.sas
" CREATE TABLE owner.DemEyeReg  AS select p.*, CASE WHEN YTD=1 THEN 'YTD' when L3=1 THEN 'L3 ' when Mth=1 THEN 'MO ' END AS TimeFrame, d.*, &ODYrMo. AS AsOf FROM owner.plu p LEFT JOIN demeyereg_sum d ON p.marsha=d.marsha WHERE p.brnd not IN ( 'RI','TS','ER') AND ( ytd=1 OR L3=1 OR mth=1 ) ;",State of the Hotel.sas
"ALTER TABLE owner.DemEyeReg DROP COLUMN ytd,L3,mth ;",State of the Hotel.sas
" CREATE TABLE owner.DemEyeRegIntl AS select p.*, CASE WHEN i.timeframe='MN' THEN 'MO ' ELSE i.timeframe END AS timeframe, i.wdwe, d.mrdw_category_2 AS segment1, d.mrdw_category AS Segment2, i.rn, i.rv, i.rv_local, i.rn_ly, i.rv_ly, i.rv_local_ly FROM owner.plu p LEFT JOIN idemeye.intldemeye i ON p.marsha=i.marsha INNER JOIN ownroot.demeyemap d ON i.seg2=d.finance_category WHERE p.region='S_' ORDER BY i.marsha, calculated timeframe, i.wdwe, d.mrdw_category_2, d.mrdw_category ;",State of the Hotel.sas
" CREATE TABLE DemEyeES_YoY AS ( SELECT  * , CASE WHEN  los_tier <> 'LOA:1-4'  THEN 'WD' END AS WDWE FROM DemEyeReg_YoY );",State of the Hotel.sas
"CREATE TABLE DemEyeES_Sum AS (SELECT marsha, ytd, L3, mth, los_Tier, wdwe, segment1, segment2, SUM(rn:) AS rn:, SUM(rv:) AS rv:, SUM(addl_demand:) AS addl_demand: FROM demeyeES_yoy GROUP BY marsha, ytd, L3, mth, los_Tier, wdwe, segment1, segment2 );",State of the Hotel.sas
" CREATE TABLE owner.DemEyeES  AS select p.*, CASE WHEN YTD=1 THEN 'YTD' when L3=1 THEN 'L3 ' when Mth=1 THEN 'MO ' END AS TimeFrame, d.*, &ODYrMo. AS AsOf FROM owner.plu p LEFT JOIN demeyeES_sum d ON p.marsha=d.marsha WHERE p.brnd IN ( 'RI','TS','ER') AND ( ytd=1 OR L3=1 OR mth=1 ) ;",State of the Hotel.sas
"ALTER TABLE owner.DemEyeES DROP COLUMN ytd,L3,mth ;",State of the Hotel.sas
" CREATE TABLE fx_mrdw_MTH  AS select p.curr, SUM( rv_usd) / SUM( rv) AS fx_usd_per_selling FROM demeyereg d INNER JOIN prop_misw p ON d.marsha=p.marsha WHERE tyly='TY' AND MTH=1 GROUP BY p.curr;",State of the Hotel.sas
CREATE INDEX curr ON fx_mrdw_MTH(curr);,State of the Hotel.sas
" CREATE TABLE fx_mrdw_YTD  AS select p.curr, SUM( rv_usd) / SUM( rv) AS fx_usd_per_selling FROM demeyereg d INNER JOIN prop_misw p ON d.marsha=p.marsha WHERE tyly='TY' AND YTD=1 GROUP BY p.curr;",State of the Hotel.sas
CREATE INDEX curr ON fx_mrdw_YTD(curr);,State of the Hotel.sas
" CREATE TABLE ACT_CurrMo AS  (   select a.marsha_cd AS marsha, a.company_nm AS coname, SUM( comrn_ty) AS rnty_YTD, SUM( comrvlocal_ty) AS rvty_YTD_local, SUM( comrvusd_ty) AS rvty_YTD, SUM( comrn_ly) AS rnly_YTD, SUM( comrvlocal_ly) AS rvly_YTD_local, SUM( comrvusd_ly) AS rvly_YTD FROM nzedwprd_tgt.admin.mrdw_fact_act_prop_dtls a WHERE Tier not IN ( 'Ecommerce','GOVT','QUAL') AND year_id = &ODYr. AND month_id = &CurMon. GROUP BY a.marsha_cd, a.company_nm  ) ;",State of the Hotel.sas
" CREATE TABLE ACT_LastMo AS  (   select a.marsha_cd AS marsha, a.company_nm AS coname, SUM( comrn_ty) AS rnty_YTD, SUM( comrvlocal_ty) AS rvty_YTD_local, SUM( comrvusd_ty) AS rvty_YTD, SUM( comrn_ly) AS rnly_YTD, SUM( comrvlocal_ly) AS rvly_YTD_local, SUM( comrvusd_ly) AS rvly_YTD FROM nzedwprd_tgt.admin.mrdw_fact_act_prop_dtls a WHERE Tier not IN ( 'Ecommerce','GOVT','QUAL') AND year_id = %SUBSTRING( &L1.,1,4) AND month_id = %SUBSTRING( &L1.,5,2) GROUP BY a.marsha_cd, a.company_nm  ) ;",State of the Hotel.sas
" CREATE TABLE ACT_CurrMo2 AS select a.marsha, a.coname, a.rnty_ytd - coalesce( b.rnty_ytd,0) AS rnty_mn, a.rvty_ytd_local - coalesce( b.rvty_ytd_local,0) AS rvty_mn_local, a.rvty_YTD - coalesce( b.rvty_YTD,0) AS rvty_mn, a.rnly_YTD - coalesce( b.rnly_YTD,0) AS rnly_mn, a.rvly_YTD_local - coalesce( b.rvly_YTD_local,0) AS rvly_mn_local, a.rvly_YTD - coalesce( b.rvly_YTD,0) AS rvly_mn, a.rnty_YTD, a.rvty_YTD_local, a.rvty_YTD, a.rnly_YTD, a.rvly_YTD_local, a.rvly_YTD FROM act_currmo a LEFT JOIN act_LastMo b ON a.marsha=b.marsha AND a.coname=b.coname AND &ODYr = %SUBSTRING( &L1,1,4 ) ;",State of the Hotel.sas
 CREATE TABLE ACT AS ( SELECT * FROM ['ACT']);,State of the Hotel.sas
"CREATE TABLE ACT_rank AS SELECT * FROM ( SELECT *, RANK() OVER (  PARTITION BY marsha ORDER BY rnTY_YTD DESC  ) AS rank FROM ACT_rank) WHERE  rank between 1 AND 10;",State of the Hotel.sas
" CREATE TABLE owner.act_Top10  AS select p.*, a.* FROM owner.plu p LEFT JOIN Act_Rank a ON p.marsha=a.marsha ORDER BY p.marsha, rank;",State of the Hotel.sas
ALTER TABLE owner.act_Top10 DROP COLUMN rank ;,State of the Hotel.sas
" CREATE TABLE owner.STR AS select p.*, s.timef, s.maravail, s.marsold, s.marrev_str_usd AS marrev, s.marrev_lcl, s.mktavail, s.mktsold, s.mktrev_str_usd AS mktrev, s.mktrev_lcl, s.maravailLY, s.marsoldLY, s.marrevly_str_usd AS marrevLY, s.marrevly_lcl, s.mktavailLY, s.mktsoldLY, s.mktrevLY_str_usd AS mktrevLY, s.mktrevly_lcl FROM owner.plu p LEFT JOIN Str_cc.Nonvalidated_crunch_&L1. s ON p.marsha=s.marsha WHERE timef not like 'L12%';",State of the Hotel.sas
" CREATE TABLE otbty AS  (  select a.property_cd, date( date_trunc( 'month',CASE WHEN a.cal_yr=&ODYr. THEN a.stay_date ELSE a.stay_date+364 end)) AS MoDate_TY, c.market_seg_nm, ( CASE WHEN date_part( 'dow',a.stay_date) < 6 THEN 'WD' ELSE 'WE' end) AS wdwe, a.tier_los_ind, a.room_category_cd, SUM( CASE WHEN a.cal_yr=&ODYr. THEN a.room_nights ELSE 0 end) AS rn_TY, SUM( CASE WHEN a.cal_yr=&ODYr. THEN a.rev_net ELSE 0 end) AS rv_TY, SUM( CASE WHEN a.cal_yr=&ODYr. THEN a.rev_net_us ELSE 0 end) AS rv_usd_TY, SUM( CASE WHEN a.cal_yr=&LYR. THEN a.room_nights ELSE 0 end) AS rn_LY, SUM( CASE WHEN a.cal_yr=&LYR. THEN a.rev_net ELSE 0 end) AS rv_LY, SUM( CASE WHEN a.cal_yr=&LYR. THEN a.rev_net_us ELSE 0 end) AS rv_usd_LY FROM Mrdw_fact_otb_seg_extract_mn a INNER JOIN ( select distinct b.market_seg_nm, b.market_prefix_cd FROM mrdw_fact_agg_dr_rev_analysis b WHERE b.year_cal_id IN (  &ODyr. ) AND b.month_cal_id=&CurMon. ) c ON a.market_segment=c.market_prefix_cd WHERE ( a.cal_yr=&ODYr. AND a.cal_month=&Curmon. AND a.stay_date between &nzN1Beg. AND &nzN4End. ) OR ( a.cal_yr=&LYR. AND a.cal_month=&Curmon. AND a.stay_date between &nzN1LYBeg. AND &nzN4LYEnd. ) GROUP BY a.property_cd, MoDate_TY, c.market_seg_nm, wdwe, tier_los_ind,room_category_cd ORDER BY a.property_cd, MoDate_TY, c.market_seg_nm, wdwe, tier_los_ind,room_category_cd  )  ;",State of the Hotel.sas
" CREATE TABLE owner.OTB_All  AS select b.*, a.* FROM work.otbty AS a LEFT JOIN owner.plu AS b ON b.marsha=a.property_cd;",State of the Hotel.sas
ALTER TABLE owner.OTB_All DROP COLUMN property_cd ;,State of the Hotel.sas
 CREATE TABLE SFB.prop_master_ye2018 AS  (  SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER_HIST WHERE ASOF_YRMO=201812  ) ;,StaypaidNOS YOY SFB.sas
" CREATE TABLE SFB.prop_master_201812_CYNACmp AS ( SELECT MARSHA, MF, ACOMP, HCAP, REGION_NAME, STR_MARKET, HTYPE, GEN, HOTNAME, MARKET_NAME, MISW_FLAG, region2, CASE WHEN  region IN ( 'E_', 'W_', 'C_')  THEN 'US/Canada' WHEN   region='S_'  THEN region_name ELSE division_name END AS region2 FROM SFB.prop_master_ye2018  WHERE brnd='CY' AND ACOMP='Y' AND region2='US/Canada');",StaypaidNOS YOY SFB.sas
" CREATE TABLE SFB.SFBstpd_res_all AS  (  SELECT PROPERTY_CD AS MARSHA, CURR_MARKET_PREFIX_CD, CURR_MARKET_PREFIX_NM, CURR_RATE_PGM_CD, CURR_RATE_PGM_TXT , CASE WHEN stay_dow IN ( 'FRI','SAT') THEN 'WE' ELSE 'WD' END AS WDWE ,COUNT( *) AS cnt, SUM( CURR_ROOMS_QTY) AS rn, SUM( CURR_ROOM_REV_CUSD_SUB_AMT) AS rv_cusd FROM AW_TGT_BUS_DBO.MRDW_BI_FACT_STAYED_PAID_NOS A WHERE stay_year = 2018 AND CURR_MARKET_PREFIX_CD in( '21','23','24','26','30','34') GROUP BY PROPERTY_CD, CURR_MARKET_PREFIX_CD, CURR_MARKET_PREFIX_NM, CURR_RATE_PGM_CD, CURR_RATE_PGM_TXT , CASE WHEN stay_dow IN ( 'FRI','SAT') THEN 'WE' ELSE 'WD' end   ) ;",StaypaidNOS YOY SFB.sas
" CREATE TABLE SFB.SFBstpd_resly_all AS  (  SELECT PROPERTY_CD AS MARSHA, CURR_MARKET_PREFIX_CD, CURR_MARKET_PREFIX_NM, CURR_RATE_PGM_CD, CURR_RATE_PGM_TXT , CASE WHEN stay_dow IN ( 'FRI','SAT') THEN 'WE' ELSE 'WD' END AS WDWE ,COUNT( *) AS cntly,SUM( CURR_ROOMS_QTY) AS rnly, SUM( CURR_ROOM_REV_CUSD_SUB_AMT) AS rv_cusdly FROM AW_TGT_BUS_DBO.MRDW_BI_FACT_STAYED_PAID_NOS A WHERE stay_year IN ( 2017,2018) AND stay_dt >= '2017-01-02' AND stay_dt <= '2018-01-01' AND CURR_MARKET_PREFIX_CD in( '21','23','24','26','30','34') GROUP BY PROPERTY_CD, CURR_MARKET_PREFIX_CD, CURR_MARKET_PREFIX_NM, CURR_RATE_PGM_CD, CURR_RATE_PGM_TXT , CASE WHEN stay_dow IN ( 'FRI','SAT') THEN 'WE' ELSE 'WD' end   ) ;",StaypaidNOS YOY SFB.sas
"SELECT * FROM SFB.SFBstpd_res_all ORDER BY MARSHA ,CURR_MARKET_PREFIX_CD ,CURR_MARKET_PREFIX_NM ,CURR_RATE_PGM_CD ,CURR_RATE_PGM_TXT ,WDWE;",StaypaidNOS YOY SFB.sas
"SELECT * FROM SFB.SFBstpd_resly_all ORDER BY MARSHA ,CURR_MARKET_PREFIX_CD ,CURR_MARKET_PREFIX_NM ,CURR_RATE_PGM_CD ,CURR_RATE_PGM_TXT ,WDWE;",StaypaidNOS YOY SFB.sas
 CREATE TABLE SFB.SFBstpd_res_comb_all AS ( SELECT  *  FROM SFB.SFBstpd_res_all A JOIN SFB.SFBstpd_resly_all B ON  A.MARSHA =  B.MARSHA AND  A.CURR_MARKET_PREFIX_CD =  B.CURR_MARKET_PREFIX_CD AND  A.CURR_MARKET_PREFIX_NM =  B.CURR_MARKET_PREFIX_NM AND  A.CURR_RATE_PGM_CD =  B.CURR_RATE_PGM_CD AND  A.CURR_RATE_PGM_TXT =  B.CURR_RATE_PGM_TXT AND  A.WDWE =  B.WDWE);,StaypaidNOS YOY SFB.sas
SELECT * FROM SFB.SFBstpd_res_comb_all ORDER BY MARSHA;,StaypaidNOS YOY SFB.sas
SELECT * FROM SFB.prop_master_201812_CYNACmp ORDER BY MARSHA;,StaypaidNOS YOY SFB.sas
 CREATE TABLE SFB.SFBstpd_res_comb_CYNACmp AS ( SELECT  *  FROM SFB.SFBstpd_res_comb_all A INNER JOIN SFB.prop_master_201812_CYNACmp B ON  A.MARSHA =  B.MARSHA);,StaypaidNOS YOY SFB.sas
" CREATE TABLE SFB.SFBstpd_res_comb_CYNACmp AS ( SELECT  *, CURR_RATE_PGM_CD AS rpgm, CURR_MARKET_PREFIX_CD AS MARKET_CODE AS None FROM SFB.SFBstpd_res_comb_CYNACmp );",StaypaidNOS YOY SFB.sas
"SELECT * FROM SFB.SFBstpd_res_comb_CYNACmp ORDER BY MARKET_CODE ,rpgm;",StaypaidNOS YOY SFB.sas
" CREATE TABLE SFB.SFB_reg AS ( SELECT  *  , 'SFB' AS Tab  FROM SFB_reg );",StaypaidNOS YOY SFB.sas
" CREATE TABLE SFB.SFB_KidsEatFree AS ( SELECT  *  , 'SFB_KidsEatFree' AS Tab  FROM SFB_KidsEatFree );",StaypaidNOS YOY SFB.sas
" CREATE TABLE SFB.MbrsOthPkginclBKFST AS ( SELECT  *  , 'MbrsOthPkginclBKFST' AS Tab  FROM MbrsOthPkginclBKFST );",StaypaidNOS YOY SFB.sas
" CREATE TABLE SFB.OTAValueAdd AS ( SELECT  *  , 'OTAValueAdd' AS Tab  FROM OTAValueAdd );",StaypaidNOS YOY SFB.sas
" CREATE TABLE SFB.MembersSFB AS ( SELECT  *  , 'MembersSFB' AS Tab  FROM MembersSFB );",StaypaidNOS YOY SFB.sas
" CREATE TABLE SFB.OtherPkgsw_Bkfst AS ( SELECT  *  , 'OtherPkgsw_Bkfst' AS Tab  FROM OtherPkgsw_Bkfst );",StaypaidNOS YOY SFB.sas
" CREATE TABLE SFB.SFB_HPPFILE AS ( SELECT Tab, MARSHA, MARKET_CODE, rpgm, Experiences, RATE_OFFER, child_pricing_rule, child_pricing_rule_amount, parent1_rate_offer FROM SFB.SFB_reg UNION ALL SELECT Tab, MARSHA, MARKET_CODE, rpgm, Experiences, RATE_OFFER, child_pricing_rule, child_pricing_rule_amount, parent1_rate_offer FROM SFB.SFB_KidsEatFree UNION ALL SELECT Tab, MARSHA, MARKET_CODE, rpgm, Experiences, RATE_OFFER, child_pricing_rule, child_pricing_rule_amount, parent1_rate_offer FROM SFB.MbrsOthPkginclBKFST UNION ALL SELECT Tab, MARSHA, MARKET_CODE, rpgm, Experiences, RATE_OFFER, child_pricing_rule, child_pricing_rule_amount, parent1_rate_offer FROM SFB.OTAValueAdd UNION ALL SELECT Tab, MARSHA, MARKET_CODE, rpgm, Experiences, RATE_OFFER, child_pricing_rule, child_pricing_rule_amount, parent1_rate_offer FROM SFB.MembersSFB UNION ALL SELECT Tab, MARSHA, MARKET_CODE, rpgm, Experiences, RATE_OFFER, child_pricing_rule, child_pricing_rule_amount, parent1_rate_offer FROM SFB.OtherPkgsw_Bkfst);",StaypaidNOS YOY SFB.sas
"CREATE TABLE ""\\Hdqmdm1fpcl4v1\lodg-revmgmt\RM EAnlys\MikeS\SFB_HPPFILE.TXT"" AS ( SELECT * FROM SFB.SFB_HPPFILE) ;",StaypaidNOS YOY SFB.sas
"SELECT MARSHA, MARKET_CODE, rpgm, Experiences, RATE_OFFER, child_pricing_rule, child_pricing_rule_amount, parent1_rate_offer, Tab FROM SFB.SFB_HPPFILE ORDER BY MARSHA ,MARKET_CODE ,rpgm;",StaypaidNOS YOY SFB.sas
"CREATE TABLE SFB.SFB_HPPFILE AS ( SELECT  *  , LTRIM( RTRIM( MARKET_CODE) ) AS MARKET_CODE1  FROM SFB.SFB_HPPFILE );",StaypaidNOS YOY SFB.sas
ALTER TABLE SFB.SFB_HPPFILE DROP COLUMN MARKET_CODE ;,StaypaidNOS YOY SFB.sas
" CREATE TABLE SFB.SFB_HPPFILE AS ( SELECT  *, MARKET_CODE1 AS MARKET_CODE FROM SFB.SFB_HPPFILE );",StaypaidNOS YOY SFB.sas
"SELECT * FROM SFB.SFB_HPPFILE ORDER BY MARSHA ,MARKET_CODE ,rpgm;",StaypaidNOS YOY SFB.sas
"SELECT * FROM SFB.SFBstpd_res_comb_CYNACmp ORDER BY MARSHA ,MARKET_CODE ,rpgm;",StaypaidNOS YOY SFB.sas
 CREATE TABLE SFB.MFECY_res_comb AS ( SELECT  *  FROM SFB.SFBstpd_res_comb_CYNACmp  WHERE marsha='MFECY');,StaypaidNOS YOY SFB.sas
 CREATE TABLE SFB.MFECY_SFB_HPPFILE AS ( SELECT  *  FROM SFB.SFB_HPPFILE  WHERE marsha='MFECY');,StaypaidNOS YOY SFB.sas
"SELECT DISTINCT * FROM SFB.SFB_reg_stpd_res ORDER BY MARSHA ,CURR_MARKET_PREFIX_NM ,rpgm ,CURR_RATE_PGM_TXT ,WDWE ,CNT ,RN ,RV_CUSD ,CNTLY ,RNLY ,RV_CUSDLY ,RATE_OFFER;",StaypaidNOS YOY SFB.sas
"CREATE TABLE SFB.retadv AS ( SELECT  *  FROM SFB.SFBregstpdres_WE  WHERE child_pricing_rule<>'Fixed' AND parent1_rate_offer in( 'Retail Rate','Advance Purchase'));",StaypaidNOS YOY SFB.sas
"CREATE TABLE SFB.notret AS ( SELECT  *  FROM SFB.SFBregstpdres_WE  WHERE child_pricing_rule<>'Fixed' AND parent1_rate_offer not in( 'Retail Rate','Advance Purchase'));",StaypaidNOS YOY SFB.sas
" CREATE TABLE SFB.retadv AS ( SELECT  * , CASE WHEN  child_pricing_rule ='Equals'  THEN 0 WHEN  child_pricing_rule ='Amount Above'  THEN ( rn*child_pricing_rule_amount ) WHEN  child_pricing_rule ='Percent Above'  THEN ( rn*( ( RV_CUSD/RN)*child_pricing_rule_amount*0.01) ) WHEN  child_pricing_rule ='Amount Below'  THEN ( -1*rn*child_pricing_rule_amount ) WHEN  child_pricing_rule ='Percent Below'  THEN ( -1*rn*( ( RV_CUSD/RN)*child_pricing_rule_amount*0.01) ) END AS premium FROM SFB.retadv );",StaypaidNOS YOY SFB.sas
"SELECT * FROM SFB.retadv ORDER BY Marsha ,RATE_OFFER ,parent1_rate_offer;",StaypaidNOS YOY SFB.sas
"CREATE TABLE SFB.retadv_sum AS (SELECT MARSHA, RATE_OFFER, SUM(RN) AS RN, SUM(RV_CUSD) AS RV_CUSD, SUM(premium) AS premium FROM SFB.retadv GROUP BY MARSHA, RATE_OFFER );",StaypaidNOS YOY SFB.sas
" CREATE TABLE SFB.retadv_sum AS ( SELECT  *  , FORMAT(( premium/RN ), percent11.1) AS premave , FORMAT(( RV_CUSD/RN ), percent11.1) AS adr , FORMAT(( RV_CUSD/RN )noprem, percent11.1) AS ( ( RV_CUSD-premium)/RN ) , FORMAT(dollar11.2, percent11.1) AS dollar11.2 , FORMAT(( premave/adrnoprem ), percent11.1) AS prempct , adrnoprem*rn AS retail  FROM SFB.retadv_sum );",StaypaidNOS YOY SFB.sas
" CREATE TABLE SFB.retadv_sum_retmg AS ( SELECT marsha, adrnoprem, RATE_OFFER AS parent1_rate_offer, adr AS rtoff_adr FROM SFB.retadv_sum );",StaypaidNOS YOY SFB.sas
" CREATE TABLE SFB.retadv_sum_retmg_sfbsub AS ( SELECT marsha, adrnoprem, if, parent1_rate_offer=Stay, For, Breakfast\, RATE_OFFER AS parent1_rate_offer, adr AS rtoff_adr_sfbsub, premave AS parROave_sub FROM SFB.retadv_sum  WHERE parent1_rate_offer='Stay For Breakfast');",StaypaidNOS YOY SFB.sas
"SELECT * FROM SFB.retadv_sum_retmg_sfbsub ORDER BY marsha ,parent1_rate_offer;",StaypaidNOS YOY SFB.sas
" CREATE TABLE SFB.notret2 AS select a.*, b.premave AS parROave FROM SFB.notret AS a LEFT JOIN SFB.retadv_sum AS b ON a.marsha=b.marsha AND a.parent1_rate_offer=b.RATE_OFFER;",StaypaidNOS YOY SFB.sas
"SELECT * FROM SFB.notret2 ORDER BY MARSHA ,parent1_rate_offer;",StaypaidNOS YOY SFB.sas
"SELECT * FROM SFB.retadv_sum_retmg ORDER BY MARSHA ,parent1_rate_offer;",StaypaidNOS YOY SFB.sas
 CREATE TABLE SFB.notret2a AS ( SELECT  *  FROM SFB.notret2 A LEFT JOIN SFB.retadv_sum_retmg B ON  A.MARSHA =  B.MARSHA AND  A.parent1_rate_offer =  B.parent1_rate_offer);,StaypaidNOS YOY SFB.sas
" CREATE TABLE SFB.notret2b AS ( SELECT  *  , RV_CUSD/rn AS adr1 , adr1-parROave AS retrate , CASE WHEN  parROave in( 0,' ' )  THEN parROave_sub END AS parROave, CASE WHEN  rtoff_adr in( 0,' ' )  THEN rtoff_adr_sfbsub END AS rtoff_adr, CASE WHEN  adrnoprem in( 0,' ' )  THEN rtoff_adr_sfbsub-parROave_sub END AS adrnoprem FROM SFB.notret2a A LEFT JOIN SFB.retadv_sum_retmg_sfbsub B ON  A.MARSHA =  B.MARSHA);",StaypaidNOS YOY SFB.sas
" CREATE TABLE SFB.notret2c AS ( SELECT  *  , rn*premium_pn AS premium , rn*retrate AS retail , premium/retail AS prempct , CASE WHEN  child_pricing_rule ='Equals'  THEN parROave WHEN  child_pricing_rule ='Amount Above'  THEN ( child_pricing_rule_amount ) WHEN  child_pricing_rule ='Amount Below'  THEN ( -1*child_pricing_rule_amount ) WHEN  child_pricing_rule ='Percent Above'  THEN ( adr1*( child_pricing_rule_amount*.01) ) WHEN  child_pricing_rule ='Percent Below'  THEN ( adr1*( child_pricing_rule_amount*.01) ) END AS premium_pn FROM SFB.notret2b );",StaypaidNOS YOY SFB.sas
"SELECT * FROM SFB.notret2c ORDER BY Marsha ,RATE_OFFER ,parent1_rate_offer;",StaypaidNOS YOY SFB.sas
"CREATE TABLE SFB.notret2c_sum AS (SELECT MARSHA, RATE_OFFER, SUM(RN) AS RN, SUM(RV_CUSD) AS RV_CUSD, SUM(premium) AS premium, SUM(retail) AS retail FROM SFB.notret2c GROUP BY MARSHA, RATE_OFFER );",StaypaidNOS YOY SFB.sas
" CREATE TABLE SFB.notret2c_sum AS ( SELECT  *  , FORMAT(( premium/RN ), percent11.1) AS premave , FORMAT(( RV_CUSD/RN ), percent11.1) AS adr , FORMAT(( RV_CUSD/RN )noprem, percent11.1) AS ( ( RV_CUSD-premium)/RN ) , FORMAT(dollar11.2, percent11.1) AS dollar11.2 , FORMAT(( premave/adrnoprem ), percent11.1) AS premium/retail , adrnoprem*rn AS retail  FROM SFB.notret2c_sum );",StaypaidNOS YOY SFB.sas
" CREATE TABLE SFB.Marsha_RateOffers_fin1 AS ( SELECT  *  , premium/retail AS prempct  FROM SFB.retadv_sum UNION ALL SELECT  *  , premium/retail AS prempct  FROM SFB.notret2c_sum);",StaypaidNOS YOY SFB.sas
"SELECT * FROM SFB.Marsha_RateOffers_fin1 ORDER BY Marsha ,RATE_OFFER;",StaypaidNOS YOY SFB.sas
"CREATE TABLE SFB.Marsha_RateOffers_fin1_sum AS (SELECT MARSHA, RATE_OFFER, SUM(RN) AS RN, SUM(RV_CUSD) AS RV_CUSD, SUM(premium) AS premium FROM SFB.Marsha_RateOffers_fin1 GROUP BY MARSHA, RATE_OFFER );",StaypaidNOS YOY SFB.sas
" CREATE TABLE SFB.Marsha_RateOffers_fin1_sum AS ( SELECT  *  , FORMAT(( premium/RN ), percent11.1) AS premave , FORMAT(( RV_CUSD/RN ), percent11.1) AS adr , FORMAT(( RV_CUSD/RN )noprem, percent11.1) AS ( ( RV_CUSD-premium)/RN ) , FORMAT(dollar11.2, percent11.1) AS dollar11.2 , FORMAT(( premave/adrnoprem ), percent11.1) AS prempct  FROM SFB.Marsha_RateOffers_fin1_sum );",StaypaidNOS YOY SFB.sas
"CREATE TABLE SFB.Marsha_RateOffers_fin1_psum AS (SELECT MARSHA, _freq_ AS ratecnt, SUM(RN) AS RN, SUM(RV_CUSD) AS RV_CUSD, SUM(premium) AS premium FROM SFB.Marsha_RateOffers_fin1 GROUP BY MARSHA );",StaypaidNOS YOY SFB.sas
" CREATE TABLE SFB.Marsha_RateOffers_fin1_psum AS ( SELECT  *  , FORMAT(( premium/RN ), percent11.1) AS premave , FORMAT(( RV_CUSD/RN ), percent11.1) AS adr , FORMAT(( RV_CUSD/RN )noprem, percent11.1) AS ( ( RV_CUSD-premium)/RN ) , FORMAT(dollar11.2, percent11.1) AS dollar11.2 , FORMAT(( premave/adrnoprem ), percent11.1) AS prempct , ""Z Marsha Total"" AS RATE_OFFER , CASE WHEN  prempct <' '05  THEN '1 - Less Than 5%' WHEN   ' '05 <= prempct <' '10  THEN '2 - 5% to 10%' WHEN   ' '10 <= prempct  THEN '3 - Greater Than 10%' END AS prem_to_Ret_Cat FROM SFB.Marsha_RateOffers_fin1_psum );",StaypaidNOS YOY SFB.sas
SELECT * FROM SFB.Marsha_RateOffers_fin1_psum ORDER BY prem_to_Ret_Cat;,StaypaidNOS YOY SFB.sas
"CREATE TABLE SFB.RteOfr_fin1prp_premcat AS (SELECT prem_to_Ret_Cat, SUM(RN) AS RN, SUM(RV_CUSD) AS RV_CUSD, SUM(premium) AS premium FROM SFB.Marsha_RateOffers_fin1_psum GROUP BY prem_to_Ret_Cat );",StaypaidNOS YOY SFB.sas
" CREATE TABLE SFB.RteOfr_fin1prp_premcat AS ( SELECT  *  , FORMAT(( premium/RN ), percent11.1) AS premave , FORMAT(( RV_CUSD/RN ), percent11.1) AS adr , FORMAT(( RV_CUSD/RN )noprem, percent11.1) AS ( ( RV_CUSD-premium)/RN ) , FORMAT(dollar11.2, percent11.1) AS dollar11.2 , FORMAT(( premave/adrnoprem ), percent11.1) AS prempct  FROM SFB.RteOfr_fin1prp_premcat );",StaypaidNOS YOY SFB.sas
SELECT * FROM SFB.Marsha_RateOffers_fin1_psum ORDER BY ratecnt;,StaypaidNOS YOY SFB.sas
"CREATE TABLE SFB.RteOfr_fin1prp_ratecnt AS (SELECT ratecnt, _freq_ AS propcnt, SUM(RN) AS RN, SUM(RV_CUSD) AS RV_CUSD, SUM(premium) AS premium FROM SFB.Marsha_RateOffers_fin1_psum GROUP BY ratecnt );",StaypaidNOS YOY SFB.sas
" CREATE TABLE SFB.RteOfr_fin1prp_ratecnt AS ( SELECT  *  , FORMAT(( premium/RN ), percent11.1) AS premave , FORMAT(( RV_CUSD/RN ), percent11.1) AS adr , FORMAT(( RV_CUSD/RN )noprem, percent11.1) AS ( ( RV_CUSD-premium)/RN ) , FORMAT(dollar11.2, percent11.1) AS dollar11.2 , FORMAT(( premave/adrnoprem ), percent11.1) AS prempct  FROM SFB.RteOfr_fin1prp_ratecnt );",StaypaidNOS YOY SFB.sas
SELECT * FROM SFB.Marsha_RateOffers_fin1_psum ORDER BY ratecnt;,StaypaidNOS YOY SFB.sas
"CREATE TABLE SFB.RteOfr_fin1prp_ratecntall AS (SELECT _freq_ AS propcnt, SUM(RN) AS RN, SUM(RV_CUSD) AS RV_CUSD, SUM(premium) AS premium FROM SFB.Marsha_RateOffers_fin1_psum WHERE ratecnt > 1 );",StaypaidNOS YOY SFB.sas
" CREATE TABLE SFB.RteOfr_fin1prp_ratecntall AS ( SELECT  *  , FORMAT(( premium/RN ), percent11.1) AS premave , FORMAT(( RV_CUSD/RN ), percent11.1) AS adr , FORMAT(( RV_CUSD/RN )noprem, percent11.1) AS ( ( RV_CUSD-premium)/RN ) , FORMAT(dollar11.2, percent11.1) AS dollar11.2 , FORMAT(( premave/adrnoprem ), percent11.1) AS prempct  FROM SFB.RteOfr_fin1prp_ratecntall );",StaypaidNOS YOY SFB.sas
 CREATE TABLE SFB.Marsha_RateOffers_fin2_sum AS ( SELECT  *  FROM SFB.Marsha_RateOffers_fin1_psum UNION ALL SELECT  *  FROM SFB.Marsha_RateOffers_fin1_sum);,StaypaidNOS YOY SFB.sas
"SELECT * FROM SFB.Marsha_RateOffers_fin2_sum ORDER BY Marsha ,RATE_OFFER;",StaypaidNOS YOY SFB.sas
" CREATE TABLE SFB.ZZTMP1 AS ( SELECT  *  FROM SFB.Marsha_RateOffers_fin2_sum  WHERE marsha IN ( 'ABQCY','BWGCY','ABECY','YEGEW' ));",StaypaidNOS YOY SFB.sas
"CREATE TABLE ""\\Hdqmdm1fpcl4v1\lodg-revmgmt\RM EAnlys\MikeS\SFB\SFBV3\SFB_Marsha_RateOffers_fin2_sum.TXT"" AS ( SELECT * FROM SFB.Marsha_RateOffers_fin2_sum) ;",StaypaidNOS YOY SFB.sas
"CREATE TABLE ""\\Hdqmdm1fpcl4v1\lodg-revmgmt\RM EAnlys\MikeS\SFB\SFBV3\SFBregstpdres_WE.TXT"" AS ( SELECT * FROM SFB.SFBregstpdres_WE) ;",StaypaidNOS YOY SFB.sas
 CREATE TABLE SFB.aa_YEGEW_res AS ( SELECT  *  FROM SFB.SFB_reg_stpd_res  WHERE marsha='YEGEW' AND WDWE='WE');,StaypaidNOS YOY SFB.sas
"SELECT * FROM SFB.SFB_reg_stpd_res ORDER BY MARSHA ,WDWE;",StaypaidNOS YOY SFB.sas
"CREATE TABLE SFB.SFB_reg_stpd_res_sum AS (SELECT MARSHA, WDWE, SUM(RN) AS RN, SUM(RV_CUSD) AS RV_CUSD, SUM(CNTLY) AS CNTLY, SUM(RNLY) AS RNLY, SUM(RV_CUSDLY) AS RV_CUSDLY FROM SFB.SFB_reg_stpd_res GROUP BY MARSHA, WDWE );",StaypaidNOS YOY SFB.sas
 CREATE TABLE SFB.Rep_wdwe&YRMNTH._Data&asof_yrmo AS ( SELECT  *  FROM str.Rep_wdwe&YRMNTH._Data&asof_yrmo  WHERE TIMEF='LAST12_WE');,StaypaidNOS YOY SFB.sas
SELECT * FROM SFB.Marsha_RateOffers_fin1_psum ORDER BY MARSHA;,StaypaidNOS YOY SFB.sas
SELECT * FROM SFB.Rep_wdwe&YRMNTH._Data&asof_yrmo ORDER BY MARSHA;,StaypaidNOS YOY SFB.sas
" CREATE TABLE SFB.Marsha_RateOffers_fin1_psum_STR AS ( SELECT  *, rn AS sfb_rn, RV_CUSD AS SFB_RV_CUSD AS None, ( sfb_rn/MARSOLD ) AS SFBMIX , ( sfb_rn/MARAVAIL ) AS SFBOCC , CASE WHEN  a AND b  THEN 'both ' WHEN   a AND not b  THEN 'resonly' WHEN   b AND not a  THEN 'stronly' ELSE 'none' END AS flg, CASE WHEN  RPI < 90  THEN '1 - Less Than 90' WHEN   90 <= RPI < 100  THEN '2 - 90 to 100' WHEN   100 <= RPI < 110  THEN '3 - 100 to 110' WHEN   110 <= RPI  THEN '4 Greater than 110' END AS RPI_WE_CAT, CASE WHEN  SFBMIX < ' '01  THEN '1 - Less Than 1%' WHEN   ' '01 <= SFBMIX < ' '02  THEN '2 - 1% to 2%' WHEN   ' '02 <= SFBMIX < ' '03  THEN '3 - 2% to 3%' WHEN   ' '03 <= SFBMIX < ' '04  THEN '4 - 3% to 4%' WHEN   ' '04 <= SFBMIX < ' '05  THEN '5 - 4% to 5%' WHEN   ' '05 <= SFBMIX  THEN '6 - Greater Than 5%' END AS SFB_WE_MIX_CAT FROM SFB.Marsha_RateOffers_fin1_psum A JOIN SFB.Rep_wdwe&YRMNTH._Data&asof_yrmo B ON  A.MARSHA =  B.MARSHA WHERE flg='both');",StaypaidNOS YOY SFB.sas
SELECT * FROM SFB.Marsha_RateOffers_fin1_psum_STR ORDER BY SFB_WE_MIX_CAT;,StaypaidNOS YOY SFB.sas
"CREATE TABLE SFB.SFB_WE_MIX_CAT_RteOfr_psum_STR AS (SELECT SFB_WE_MIX_CAT, _freq_ AS propcnt, SUM(sfb_rn) AS sfb_rn, SUM(SFB_RV_CUSD) AS SFB_RV_CUSD, SUM(premium) AS premium, SUM(RPI) AS RPI, SUM(OI) AS OI, SUM(AI) AS AI FROM SFB.Marsha_RateOffers_fin1_psum_STR GROUP BY SFB_WE_MIX_CAT );",StaypaidNOS YOY SFB.sas
" CREATE TABLE SFB.SFB_WE_MIX_CAT_RteOfr_psum_STR AS ( SELECT  *  , FORMAT(( premium/sfb_rn ), percent11.1) AS premave , FORMAT(( SFB_RV_CUSD/sfb_rn ), percent11.1) AS adr , FORMAT(( SFB_RV_CUSD/sfb_rn )noprem, percent11.1) AS ( ( SFB_RV_CUSD-premium)/sfb_rn ) , FORMAT(dollar11.2, percent11.1) AS dollar11.2 , FORMAT(( premave/adrnoprem ), percent11.1) AS prempct , ( RPI/propcnt ) AS RPIavg , ( OI/propcnt ) AS OIavg , ( AI/propcnt ) AS AIavg , ( sfb_rn/propcnt ) AS sfb_rn_ave  FROM SFB.SFB_WE_MIX_CAT_RteOfr_psum_STR );",StaypaidNOS YOY SFB.sas
SELECT * FROM SFB.Marsha_RateOffers_fin1_psum_STR ORDER BY RPI_WE_CAT;,StaypaidNOS YOY SFB.sas
"CREATE TABLE SFB.RPI_WE_CAT_RteOfr_fin1_psum_STR AS (SELECT RPI_WE_CAT, _freq_ AS propcnt, SUM(sfb_rn) AS sfb_rn, SUM(SFB_RV_CUSD) AS SFB_RV_CUSD, SUM(premium) AS premium FROM SFB.Marsha_RateOffers_fin1_psum_STR GROUP BY RPI_WE_CAT );",StaypaidNOS YOY SFB.sas
" CREATE TABLE SFB.RPI_WE_CAT_RteOfr_fin1_psum_STR AS ( SELECT  *  , FORMAT(( premium/sfb_rn ), percent11.1) AS premave , FORMAT(( SFB_RV_CUSD/sfb_rn ), percent11.1) AS adr , FORMAT(( SFB_RV_CUSD/sfb_rn )noprem, percent11.1) AS ( ( SFB_RV_CUSD-premium)/sfb_rn ) , FORMAT(dollar11.2, percent11.1) AS dollar11.2 , FORMAT(( premave/adrnoprem ), percent11.1) AS prempct , ( sfb_rn/propcnt ) AS sfb_rn_ave  FROM SFB.RPI_WE_CAT_RteOfr_fin1_psum_STR );",StaypaidNOS YOY SFB.sas
CREATE TABLE SFB.TOP30 AS (SELECT * FROM SFB.Marsha_RateOffers_fin1_psum_STR ORDER BY SFBMIX desc);,StaypaidNOS YOY SFB.sas
 CREATE TABLE SFB.TOP30 AS ( SELECT  *  FROM SFB.TOP30  WHERE RPI > 110 AND SFBMIX > ' '0295);,StaypaidNOS YOY SFB.sas
" CREATE TABLE plu AS ( SELECT marsha, PHONE, GM FROM plu.Allprop_misw_201812 );",StaypaidNOS YOY SFB.sas
SELECT * FROM plu ORDER BY marsha;,StaypaidNOS YOY SFB.sas
SELECT * FROM SFB.TOP30 ORDER BY marsha;,StaypaidNOS YOY SFB.sas
 CREATE TABLE SFB.TOP30 AS ( SELECT  *  FROM SFB.TOP30 A LEFT JOIN plu B ON  A.marsha =  B.marsha);,StaypaidNOS YOY SFB.sas
SELECT * FROM SFB.SFB_reg_stpd_res_sum_STR_WE ORDER BY SFBMIX desc;,StaypaidNOS YOY SFB.sas
 CREATE TABLE SFB.aa_YEGEW_SFB_reg_stpd_res_SUMSTR AS ( SELECT  *  FROM SFB.SFB_reg_stpd_res_sum_STR_WE  WHERE marsha='YEGEW');,StaypaidNOS YOY SFB.sas
"CREATE TABLE ""\\Hdqmdm1fpcl4v1\lodg-revmgmt\RM EAnlys\MikeS\SFB\SFBV3\SFB_reg_stpd_res_sum_STR_WE.TXT"" AS ( SELECT * FROM SFB.SFB_reg_stpd_res_sum_STR_WE) ;",StaypaidNOS YOY SFB.sas
"SELECT * FROM SFB.stpd_res_comb_CYNACmp ORDER BY Marsha ,WDWE;",StaypaidNOS YOY SFB.sas
"CREATE TABLE SFB.stpd_comb_sum AS (SELECT Marsha, WDWE, SUM(RN) AS RN, SUM(RV_CUSD) AS RV_CUSD, SUM(RNLY) AS RNLY, SUM(RV_CUSDLY) AS RV_CUSDLY FROM SFB.stpd_res_comb_CYNACmp GROUP BY Marsha, WDWE );",StaypaidNOS YOY SFB.sas
" CREATE TABLE sfb.stpd_comb_sumwd AS ( SELECT  *, TOT_RN AS TOT_WD_RN, TOT_RVCUSD AS TOT_WD_RVCUSD, TOT_RNLY AS TOT_WD_RNLY, TOT_RVCUSDLY AS TOT_WD_RVCUSDLY FROM SFB.stpd_comb_sum  WHERE WDWE='WD');",StaypaidNOS YOY SFB.sas
" CREATE TABLE sfb.stpd_comb_sumwe AS ( SELECT  *, TOT_RN AS TOT_WE_RN, TOT_RVCUSD AS TOT_WE_RVCUSD, TOT_RNLY AS TOT_WE_RNLY, TOT_RVCUSDLY AS TOT_WE_RVCUSDLY FROM SFB.stpd_comb_sum  WHERE WDWE='WE');",StaypaidNOS YOY SFB.sas
" CREATE TABLE SFB.STR&YRMNTH._Data&asof_yrmo AS  (  select a.MARSHA, b.MARSHA_NEW AS MARSHA, b.BRND, b.MF, a.TIMEF, a.SCOMP , b.HOTEL_NAME, b.REGION, b.DIVISION_NAME, b.REGION_NAME, b.DOMINT, a.YRMNTH, a.asof_yrmo , MARAVAIL, MARSOLD, MARREV, MKTAVAIL, MKTSOLD, MKTREV, MARAVAILLY, MARSOLDLY, MARREVLY, MKTAVAILLY, MKTSOLDLY, MKTREVLY FROM AW_CMP_DBO.STR_MONTHLY_DATA AS a LEFT JOIN AW_TGT_BUS_DBO.PROPERTY_MASTER_MISW_HIST AS b ON a.MARSHA = b.MARSHA_NEW AND a.asof_yrmo = b.asof_yrmo WHERE a.TIMEF =&TIMEF AND a.DATA_CATEGORY = 'Rooms' AND a.CURRENCY_TYPE = 'Constant USD' AND a.YRMNTH = &YRMNTH AND a.asof_yrmo = &asof_yrmo  ) ;",StaypaidNOS YOY SFB.sas
SELECT * FROM SFB.STR&YRMNTH._Data&asof_yrmo ORDER BY MARSHA;,StaypaidNOS YOY SFB.sas
SELECT * FROM SFB.prop_master_201812_CYNACmp ORDER BY MARSHA;,StaypaidNOS YOY SFB.sas
"CREATE TABLE SFB.STR_CYNACmp AS ( SELECT  *  , ( MARSOLD/MARAVAIL ) AS OCC , ( MARREV/MARSOLD ) AS ADR , ( MARREV/MARAVAIL ) AS REVPAR , ( MKTSOLD/MKTAVAIL ) AS MOCC , ( MKTREV/MKTSOLD ) AS MADR , ( MKTREV/MKTAVAIL ) AS MREVPAR , ( REVPAR/MREVPAR)*100 AS RPI , ( ADR/MADR)*100 AS AI , ( OCC/MOCC)*100 AS OI , ( MARSOLDLY/MARAVAILLY ) AS OCCLY , ( MARREVLY/MARSOLDLY ) AS ADRLY , ( MARREVLY/MARAVAILLY ) AS REVPARLY , ( MKTSOLDLY/MKTAVAILLY ) AS MOCCLY , ( MKTREVLY/MKTSOLDLY ) AS MADRLY , ( MKTREVLY/MKTAVAILLY ) AS MREVPARLY , ( REVPARLY/MREVPARLY)*100 AS RPILY , ( ADRLY/MADRLY)*100 AS AILY , ( OCCLY/MOCCLY)*100 AS OILY , RPI-RPILY AS RPI_ptchg , RPI_ptchg/RPILY AS RPI_pctchg , AI-AILY AS AI_ptchg , AI_ptchg/AILY AS AI_pctchg , OI-OILY AS OI_ptchg , OI_ptchg/OILY AS OI_pctchg  FROM SFB.STR&YRMNTH._Data&asof_yrmo A INNER JOIN SFB.prop_master_201812_CYNACmp B ON  A.MARSHA =  B.MARSHA);",StaypaidNOS YOY SFB.sas
"ALTER TABLE SFB.STR_CYNACmp DROP COLUMN MARAVAIL ,  MARSOLD ,  MARREV ,  MKTAVAIL ,  MKTSOLD ,  MKTREV ,  MARAVAILLY ,  MARSOLDLY ,  MARREVLY ,  MKTAVAILLY ,  MKTSOLDLY ,  MKTREVLY ;",StaypaidNOS YOY SFB.sas
" CREATE TABLE SFB.STR&YRMNTH._Data&asof_yrmo._WE AS  (  select a.MARSHA, b.MARSHA_NEW AS MARSHA, b.BRND, b.MF, a.TIMEF, a.SCOMP , b.HOTEL_NAME, b.REGION, b.DIVISION_NAME, b.REGION_NAME, b.DOMINT, a.YRMNTH, a.asof_yrmo , MARAVAIL, MARSOLD, MARREV, MKTAVAIL, MKTSOLD, MKTREV, MARAVAILLY, MARSOLDLY, MARREVLY, MKTAVAILLY, MKTSOLDLY, MKTREVLY FROM AW_CMP_DBO.STR_MONTHLY_DATA AS a LEFT JOIN AW_TGT_BUS_DBO.PROPERTY_MASTER_MISW_HIST AS b ON a.MARSHA = b.MARSHA_NEW AND a.asof_yrmo = b.asof_yrmo WHERE a.TIMEF ='YTD_WE' AND a.DATA_CATEGORY = 'WDWE_Rooms' AND a.CURRENCY_TYPE = 'Constant USD' AND a.YRMNTH = &YRMNTH AND a.asof_yrmo = &asof_yrmo  ) ;",StaypaidNOS YOY SFB.sas
SELECT * FROM SFB.STR&YRMNTH._Data&asof_yrmo._WE ORDER BY MARSHA;,StaypaidNOS YOY SFB.sas
SELECT * FROM SFB.prop_master_201812_CYNACmp ORDER BY MARSHA;,StaypaidNOS YOY SFB.sas
"CREATE TABLE SFB.STR_CYNACmp_WE AS ( SELECT  *  , ( MARSOLD/MARAVAIL ) AS OCCWE , ( MARREV/MARSOLD ) AS ADRWE , ( MARREV/MARAVAIL ) AS REVPARWE , ( MKTSOLD/MKTAVAIL ) AS MOCCWE , ( MKTREV/MKTSOLD ) AS MADRWE , ( MKTREV/MKTAVAIL ) AS MREVPARWE , ( REVPARWE/MREVPARWE)*100 AS RPIWE , ( ADRWE/MADRWE)*100 AS AIWE , ( OCCWE/MOCCWE)*100 AS OIWE , ( MARSOLDLY/MARAVAILLY ) AS OCCLYWE , ( MARREVLY/MARSOLDLY ) AS ADRLYWE , ( MARREVLY/MARAVAILLY ) AS REVPARLYWE , ( MKTSOLDLY/MKTAVAILLY ) AS MOCCLYWE , ( MKTREVLY/MKTSOLDLY ) AS MADRLYWE , ( MKTREVLY/MKTAVAILLY ) AS MREVPARLYWE , ( REVPARLYWE/MREVPARLYWE)*100 AS RPILYWE , ( ADRLYWE/MADRLYWE)*100 AS AILYWE , ( OCCLYWE/MOCCLYWE)*100 AS OILYWE , RPIWE-RPILYWE AS RPIWE_ptchg , RPIWE_ptchg/RPILYWE AS RPIWE_pctchg , AIWE-AILYWE AS AIWE_ptchg , AIWE_ptchg/AILYWE AS AIWE_pctchg , OIWE-OILYWE AS OIWE_ptchg , OIWE_ptchg/OILYWE AS OIWE_pctchg  FROM SFB.STR&YRMNTH._Data&asof_yrmo._WE A INNER JOIN SFB.prop_master_201812_CYNACmp B ON  A.MARSHA =  B.MARSHA);",StaypaidNOS YOY SFB.sas
"ALTER TABLE SFB.STR_CYNACmp_WE DROP COLUMN MARAVAIL ,  MARSOLD ,  MARREV ,  MKTAVAIL ,  MKTSOLD ,  MKTREV ,  MARAVAILLY ,  MARSOLDLY ,  MARREVLY ,  MKTAVAILLY ,  MKTSOLDLY ,  MKTREVLY ;",StaypaidNOS YOY SFB.sas
CREATE TABLE sfb.SFB_ALL AS ( SELECT * FROM ['sfb.SFB_ALL']);,StaypaidNOS YOY SFB.sas
ALTER TABLE sfb.SFB_ALL DROP COLUMN WDWE ;,StaypaidNOS YOY SFB.sas
"CREATE TABLE ""\\Hdqmdm1fpcl4v1\lodg-revmgmt\RM EAnlys\MikeS\SFB_ALL_WPLU_STRWE.TXT"" AS ( SELECT * FROM sfb.SFB_ALL) ;",StaypaidNOS YOY SFB.sas
"CREATE TABLE ""\\Hdqmdm1fpcl4v1\lodg-revmgmt\RM EAnlys\MikeS\SFB.aa_YEGEW_res.TXT"" AS ( SELECT * FROM SFB.aa_YEGEW_res) ;",StaypaidNOS YOY SFB.sas
" CREATE TABLE sfb.OTA2018_retail AS  (  select b.brnd, a.market_segment_nm, channel_aggregate_cd, SUM( room_nights_qty) AS rn FROM AW_TGT_BUS_DBO.RES_STAYEDPAID AS a INNER JOIN AW_TGT_BUS_DBO.PROPERTY_MASTER_MISW_HIST AS b ON a.MARSHA=b.marsha WHERE b.BRND='CY' AND b.REGION IN ( 'E_', 'W_', 'C_') AND a.MARKET_SEGMENT_NM='Retail' AND b.ACOMP='Y' AND stay_dt >= '2018-01-01' AND stay_dt <= '2018-12-31' AND b.ASOF_YRMO=201812 GROUP BY b.brnd, a.market_segment_nm, channel_aggregate_cd   ) ;",StaypaidNOS YOY SFB.sas
" CREATE TABLE str.Rep&YRMNTH._Data&asof_yrmo AS  (  select a.MARSHA, b.BRND, b.MF, a.TIMEF, a.SCOMP , b.HOTEL_NAME, b.REGION, b.DIVISION_NAME, b.REGION_NAME, b.DOMINT, a.YRMNTH, a.asof_yrmo , MARAVAIL, MARSOLD, MARREV, MKTAVAIL, MKTSOLD, MKTREV, MARAVAILLY, MARSOLDLY, MARREVLY, MKTAVAILLY, MKTSOLDLY, MKTREVLY FROM AW_CMP_DBO.STR_MONTHLY_DATA AS a LEFT JOIN AW_TGT_BUS_DBO.PROPERTY_MASTER_HIST AS b ON a.MARSHA = b.MARSHA AND a.asof_yrmo = b.asof_yrmo WHERE a.TIMEF =&TIMEF AND a.DATA_CATEGORY = 'Rooms' AND a.CURRENCY_TYPE = 'Constant USD' AND a.YRMNTH = &YRMNTH AND a.asof_yrmo = &asof_yrmo AND b.BRND in( 'WI','BR','MD') AND a.SCOMP='Y'  ) ;",STR Adhoc brand Post MISW.sas
" CREATE TABLE str.Rep&YRMNTH._Data&asof_yrmo AS ( SELECT  * , CASE WHEN  region IN ( 'E_', 'W_', 'C_')  THEN 'US/Canada' WHEN   region='S_'  THEN region_name ELSE division_name END AS region2, CASE WHEN  region2='US/Canada'  THEN '1' WHEN   region2='Asia Pacific'  THEN '2' WHEN   region2='Caribbean Latin America'  THEN '3' WHEN   region2='Europe'  THEN '4' WHEN   region2='Middle East Africa'  THEN '5' END AS regorder FROM str.Rep&YRMNTH._Data&asof_yrmo );",STR Adhoc brand Post MISW.sas
"SELECT * FROM str.Rep&YRMNTH._Data&asof_yrmo ORDER BY BRND ,SCOMP ,TIMEF ,YRMNTH ,asof_yrmo;",STR Adhoc brand Post MISW.sas
"CREATE TABLE str.Rep&YRMNTH._Data&asof_yrmo._sumBR AS (SELECT BRND, SCOMP, TIMEF, YRMNTH, asof_yrmo, _freq_ AS Hotcnt, SUM(MARAVAIL) AS MARAVAIL, SUM(MARSOLD) AS MARSOLD, SUM(MARREV) AS MARREV, SUM(MKTAVAIL) AS MKTAVAIL, SUM(MKTSOLD) AS MKTSOLD, SUM(MKTREV) AS MKTREV, SUM(MARAVAILLY) AS MARAVAILLY, SUM(MARSOLDLY) AS MARSOLDLY, SUM(MARREVLY) AS MARREVLY, SUM(MKTAVAILLY) AS MKTAVAILLY, SUM(MKTSOLDLY) AS MKTSOLDLY, SUM(MKTREVLY) AS MKTREVLY FROM str.Rep&YRMNTH._Data&asof_yrmo GROUP BY BRND, SCOMP, TIMEF, YRMNTH, asof_yrmo );",STR Adhoc brand Post MISW.sas
" CREATE TABLE str.Rep&YRMNTH._Data&asof_yrmo._sumBR AS ( SELECT  *  , 'ALL' AS region2 , '0' AS regorder , ( MARSOLD/MARAVAIL ) AS OCC , ( MARREV/MARSOLD ) AS ADR , ( MARREV/MARAVAIL ) AS REVPAR , ( MKTSOLD/MKTAVAIL ) AS MOCC , ( MKTREV/MKTSOLD ) AS MADR , ( MKTREV/MKTAVAIL ) AS MREVPAR , ( REVPAR/MREVPAR)*100 AS RPI , ( ADR/MADR)*100 AS AI , ( OCC/MOCC)*100 AS OI , ( MARSOLDLY/MARAVAILLY ) AS OCCLY , ( MARREVLY/MARSOLDLY ) AS ADRLY , ( MARREVLY/MARAVAILLY ) AS REVPARLY , ( MKTSOLDLY/MKTAVAILLY ) AS MOCCLY , ( MKTREVLY/MKTSOLDLY ) AS MADRLY , ( MKTREVLY/MKTAVAILLY ) AS MREVPARLY , ( REVPARLY/MREVPARLY)*100 AS RPILY , ( ADRLY/MADRLY)*100 AS AILY , ( OCCLY/MOCCLY)*100 AS OILY , RPI-RPILY AS RPI_ptchg , RPI_ptchg/RPILY AS RPI_pctchg  FROM str.Rep&YRMNTH._Data&asof_yrmo._sumBR );",STR Adhoc brand Post MISW.sas
"SELECT * FROM str.Rep&YRMNTH._Data&asof_yrmo ORDER BY BRND ,regorder ,region2 ,SCOMP ,TIMEF ,YRMNTH ,asof_yrmo;",STR Adhoc brand Post MISW.sas
"CREATE TABLE str.Rep&YRMNTH._Data&asof_yrmo.sum_BRReg AS (SELECT BRND, regorder, region2, SCOMP, TIMEF, YRMNTH, asof_yrmo, _freq_ AS Hotcnt, SUM(MARAVAIL) AS MARAVAIL, SUM(MARSOLD) AS MARSOLD, SUM(MARREV) AS MARREV, SUM(MKTAVAIL) AS MKTAVAIL, SUM(MKTSOLD) AS MKTSOLD, SUM(MKTREV) AS MKTREV, SUM(MARAVAILLY) AS MARAVAILLY, SUM(MARSOLDLY) AS MARSOLDLY, SUM(MARREVLY) AS MARREVLY, SUM(MKTAVAILLY) AS MKTAVAILLY, SUM(MKTSOLDLY) AS MKTSOLDLY, SUM(MKTREVLY) AS MKTREVLY FROM str.Rep&YRMNTH._Data&asof_yrmo GROUP BY BRND, regorder, region2, SCOMP, TIMEF, YRMNTH, asof_yrmo );",STR Adhoc brand Post MISW.sas
" CREATE TABLE str.Rep&YRMNTH._Data&asof_yrmo.sum_BRReg AS ( SELECT  *  , ( MARSOLD/MARAVAIL ) AS OCC , ( MARREV/MARSOLD ) AS ADR , ( MARREV/MARAVAIL ) AS REVPAR , ( MKTSOLD/MKTAVAIL ) AS MOCC , ( MKTREV/MKTSOLD ) AS MADR , ( MKTREV/MKTAVAIL ) AS MREVPAR , ( REVPAR/MREVPAR)*100 AS RPI , ( ADR/MADR)*100 AS AI , ( OCC/MOCC)*100 AS OI , ( MARSOLDLY/MARAVAILLY ) AS OCCLY , ( MARREVLY/MARSOLDLY ) AS ADRLY , ( MARREVLY/MARAVAILLY ) AS REVPARLY , ( MKTSOLDLY/MKTAVAILLY ) AS MOCCLY , ( MKTREVLY/MKTSOLDLY ) AS MADRLY , ( MKTREVLY/MKTAVAILLY ) AS MREVPARLY , ( REVPARLY/MREVPARLY)*100 AS RPILY , ( ADRLY/MADRLY)*100 AS AILY , ( OCCLY/MOCCLY)*100 AS OILY , RPI-RPILY AS RPI_ptchg , RPI_ptchg/RPILY AS RPI_pctchg  FROM str.Rep&YRMNTH._Data&asof_yrmo.sum_BRReg );",STR Adhoc brand Post MISW.sas
 CREATE TABLE str.Rep&YRMNTH._Data&asof_yrmo._Final AS ( SELECT  *  FROM str.Rep&YRMNTH._Data&asof_yrmo._sumBR UNION ALL ;,STR Adhoc brand Post MISW.sas
"SELECT * FROM str.Rep&YRMNTH._Data&asof_yrmo._Final ORDER BY BRND ,regorder ,region2;",STR Adhoc brand Post MISW.sas
"CREATE TABLE ""\\Hdqmdm1fpcl4v1\lodg-revmgmt\RM EAnlys\MikeS\Adhocoutput\str.Rep&YRMNTH._Data&asof_yrmo._Final.TXT"" AS ( SELECT * FROM str.Rep&YRMNTH._Data&asof_yrmo._Final) ;",STR Adhoc brand Post MISW.sas
" CREATE TABLE str.Rep_wdwe&YRMNTH._Data&asof_yrmo AS  (  select a.MARSHA, b.BRND, b.MF, a.TIMEF, a.SCOMP , b.HOTEL_NAME, b.REGION, b.DIVISION_NAME, b.REGION_NAME, b.DOMINT, a.YRMNTH, a.asof_yrmo, a.DATA_CATEGORY, a.DATA_TYPE , MARAVAIL, MARSOLD, MARREV, MKTAVAIL, MKTSOLD, MKTREV, MARAVAILLY, MARSOLDLY, MARREVLY, MKTAVAILLY, MKTSOLDLY, MKTREVLY FROM AW_CMP_DBO.STR_MONTHLY_DATA AS a LEFT JOIN AW_TGT_BUS_DBO.PROPERTY_MASTER_HIST AS b ON a.MARSHA = b.MARSHA AND a.asof_yrmo = b.asof_yrmo WHERE a.TIMEF in( 'MONTH_WE') AND a.DATA_CATEGORY='WDWE_Rooms' AND b.BRND in( 'CY') AND a.CURRENCY_TYPE = 'Constant USD' AND a.YRMNTH = &YRMNTH AND a.asof_yrmo = &asof_yrmo  ) ;",STR Adhoc wdwe.sas
" CREATE TABLE str.Rep_wdwe&YRMNTH._Data&asof_yrmo AS ( SELECT  * , CASE WHEN  region IN ( 'E_', 'W_', 'C_')  THEN 'US/Canada' WHEN   region='S_'  THEN region_name ELSE division_name END AS region2, CASE WHEN  region2='US/Canada'  THEN '1' WHEN   region2='Asia Pacific'  THEN '2' WHEN   region2='Caribbean Latin America'  THEN '3' WHEN   region2='Europe'  THEN '4' WHEN   region2='Middle East Africa'  THEN '5' END AS regorder FROM str.Rep_wdwe&YRMNTH._Data&asof_yrmo  WHERE region IN ( 'E_', 'W_', 'C_' ));",STR Adhoc wdwe.sas
" CREATE TABLE str.Rep_wdwe&YRMNTH._Data&asof_yrmo AS ( SELECT  *  , ( MARSOLD/MARAVAIL ) AS OCC , ( MARREV/MARSOLD ) AS ADR , ( MARREV/MARAVAIL ) AS REVPAR , ( MKTSOLD/MKTAVAIL ) AS MOCC , ( MKTREV/MKTSOLD ) AS MADR , ( MKTREV/MKTAVAIL ) AS MREVPAR , ( REVPAR/MREVPAR)*100 AS RPI , ( ADR/MADR)*100 AS AI , ( OCC/MOCC)*100 AS OI , ( MARSOLDLY/MARAVAILLY ) AS OCCLY , ( MARREVLY/MARSOLDLY ) AS ADRLY , ( MARREVLY/MARAVAILLY ) AS REVPARLY , ( MKTSOLDLY/MKTAVAILLY ) AS MOCCLY , ( MKTREVLY/MKTSOLDLY ) AS MADRLY , ( MKTREVLY/MKTAVAILLY ) AS MREVPARLY , ( REVPARLY/MREVPARLY)*100 AS RPILY , ( ADRLY/MADRLY)*100 AS AILY , ( OCCLY/MOCCLY)*100 AS OILY , RPI-RPILY AS RPI_ptchg , RPI_ptchg/RPILY AS RPI_pctchg , CASE WHEN  TIMEF='LAST12_WE'  THEN 'WE' WHEN  TIMEF='YTD_WE'  THEN 'WE' WHEN  TIMEF='LAST12_WD'  THEN 'WD' WHEN  TIMEF='YTD_WD'  THEN 'WD' END AS WDWE FROM str.Rep_wdwe&YRMNTH._Data&asof_yrmo );",STR Adhoc wdwe.sas
"SELECT * FROM str.Rep_wdwe&YRMNTH._Data&asof_yrmo ORDER BY BRND ,SCOMP ,TIMEF ,YRMNTH ,asof_yrmo;",STR Adhoc wdwe.sas
"CREATE TABLE str.Rep_wdwe&YRMNTH._Data&asof_yrmo._sumBR AS (SELECT BRND, SCOMP, TIMEF, YRMNTH, asof_yrmo, _freq_ AS Hotcnt, SUM(MARAVAIL) AS MARAVAIL, SUM(MARSOLD) AS MARSOLD, SUM(MARREV) AS MARREV, SUM(MKTAVAIL) AS MKTAVAIL, SUM(MKTSOLD) AS MKTSOLD, SUM(MKTREV) AS MKTREV, SUM(MARAVAILLY) AS MARAVAILLY, SUM(MARSOLDLY) AS MARSOLDLY, SUM(MARREVLY) AS MARREVLY, SUM(MKTAVAILLY) AS MKTAVAILLY, SUM(MKTSOLDLY) AS MKTSOLDLY, SUM(MKTREVLY) AS MKTREVLY FROM str.Rep_wdwe&YRMNTH._Data&asof_yrmo GROUP BY BRND, SCOMP, TIMEF, YRMNTH, asof_yrmo );",STR Adhoc wdwe.sas
" CREATE TABLE str.Rep_wdwe&YRMNTH._Data&asof_yrmo._sumBR AS ( SELECT  *  , 'ALL' AS region2 , '0' AS regorder , ( MARSOLD/MARAVAIL ) AS OCC , ( MARREV/MARSOLD ) AS ADR , ( MARREV/MARAVAIL ) AS REVPAR , ( MKTSOLD/MKTAVAIL ) AS MOCC , ( MKTREV/MKTSOLD ) AS MADR , ( MKTREV/MKTAVAIL ) AS MREVPAR , ( REVPAR/MREVPAR)*100 AS RPI , ( ADR/MADR)*100 AS AI , ( OCC/MOCC)*100 AS OI , ( MARSOLDLY/MARAVAILLY ) AS OCCLY , ( MARREVLY/MARSOLDLY ) AS ADRLY , ( MARREVLY/MARAVAILLY ) AS REVPARLY , ( MKTSOLDLY/MKTAVAILLY ) AS MOCCLY , ( MKTREVLY/MKTSOLDLY ) AS MADRLY , ( MKTREVLY/MKTAVAILLY ) AS MREVPARLY , ( REVPARLY/MREVPARLY)*100 AS RPILY , ( ADRLY/MADRLY)*100 AS AILY , ( OCCLY/MOCCLY)*100 AS OILY , RPI-RPILY AS RPI_ptchg , RPI_ptchg/RPILY AS RPI_pctchg  FROM str.Rep_wdwe&YRMNTH._Data&asof_yrmo._sumBR );",STR Adhoc wdwe.sas
"SELECT * FROM str.Rep&YRMNTH._Data&asof_yrmo ORDER BY BRND ,regorder ,region2 ,SCOMP ,TIMEF ,YRMNTH ,asof_yrmo;",STR Adhoc wdwe.sas
"CREATE TABLE str.Rep&YRMNTH._Data&asof_yrmo.sum_BRReg AS (SELECT BRND, regorder, region2, SCOMP, TIMEF, YRMNTH, asof_yrmo, _freq_ AS Hotcnt, SUM(MARAVAIL) AS MARAVAIL, SUM(MARSOLD) AS MARSOLD, SUM(MARREV) AS MARREV, SUM(MKTAVAIL) AS MKTAVAIL, SUM(MKTSOLD) AS MKTSOLD, SUM(MKTREV) AS MKTREV, SUM(MARAVAILLY) AS MARAVAILLY, SUM(MARSOLDLY) AS MARSOLDLY, SUM(MARREVLY) AS MARREVLY, SUM(MKTAVAILLY) AS MKTAVAILLY, SUM(MKTSOLDLY) AS MKTSOLDLY, SUM(MKTREVLY) AS MKTREVLY FROM str.Rep&YRMNTH._Data&asof_yrmo GROUP BY BRND, regorder, region2, SCOMP, TIMEF, YRMNTH, asof_yrmo );",STR Adhoc wdwe.sas
" CREATE TABLE str.Rep&YRMNTH._Data&asof_yrmo.sum_BRReg AS ( SELECT  *  , ( MARSOLD/MARAVAIL ) AS OCC , ( MARREV/MARSOLD ) AS ADR , ( MARREV/MARAVAIL ) AS REVPAR , ( MKTSOLD/MKTAVAIL ) AS MOCC , ( MKTREV/MKTSOLD ) AS MADR , ( MKTREV/MKTAVAIL ) AS MREVPAR , ( REVPAR/MREVPAR)*100 AS RPI , ( ADR/MADR)*100 AS AI , ( OCC/MOCC)*100 AS OI , ( MARSOLDLY/MARAVAILLY ) AS OCCLY , ( MARREVLY/MARSOLDLY ) AS ADRLY , ( MARREVLY/MARAVAILLY ) AS REVPARLY , ( MKTSOLDLY/MKTAVAILLY ) AS MOCCLY , ( MKTREVLY/MKTSOLDLY ) AS MADRLY , ( MKTREVLY/MKTAVAILLY ) AS MREVPARLY , ( REVPARLY/MREVPARLY)*100 AS RPILY , ( ADRLY/MADRLY)*100 AS AILY , ( OCCLY/MOCCLY)*100 AS OILY , RPI-RPILY AS RPI_ptchg , RPI_ptchg/RPILY AS RPI_pctchg  FROM str.Rep&YRMNTH._Data&asof_yrmo.sum_BRReg );",STR Adhoc wdwe.sas
 CREATE TABLE str.Rep&YRMNTH._Data&asof_yrmo._Final AS ( SELECT  *  FROM str.Rep&YRMNTH._Data&asof_yrmo._sumBR UNION ALL ;,STR Adhoc wdwe.sas
"SELECT * FROM str.Rep&YRMNTH._Data&asof_yrmo._Final ORDER BY BRND ,regorder ,region2;",STR Adhoc wdwe.sas
"CREATE TABLE ""\\Hdqmdm1fpcl4v1\lodg-revmgmt\RM EAnlys\MikeS\Adhocoutput\str.Rep&YRMNTH._Data&asof_yrmo._Final.TXT"" AS ( SELECT * FROM str.Rep&YRMNTH._Data&asof_yrmo._Final) ;",STR Adhoc wdwe.sas
 CREATE TABLE YRMNTH AS select max( ASOF_YRMO) AS YRMNTH FROM CMP.STR_GLOBAL_CENSUS;,Supply Growth AW - WS.sas
 CREATE TABLE combined_census_pipe AS ( SELECT  *  FROM CMP.STR_Combined_Census_Pipe  WHERE continent = 'Americas');,Supply Growth AW - WS.sas
" CREATE TABLE identify_dupes AS select a.STR_NUM, COUNT( a.STR_NUM) AS prop_count FROM combined_census_pipe a GROUP BY a.STR_NUM;",Supply Growth AW - WS.sas
 CREATE TABLE deduped AS select a.* FROM combined_census_pipe a LEFT JOIN identify_dupes AS b ON a.STR_NUM = b.STR_NUM WHERE b.prop_count = 1 OR ( a.status = 'Existing' AND b.prop_count = 2 ) ;,Supply Growth AW - WS.sas
" CREATE TABLE comp_coordinates AS ( SELECT  *  , CAST( latitude, 20. ) * constant( 'pi')/180 AS lat_comp_rad , CAST( longitude, 20. ) * constant( 'pi')/180 AS long_comp_rad  FROM deduped  WHERE ( latitude <> '' AND longitude <> '') OR ( status = 'Pipeline' AND Open_Date is NULL ) );",Supply Growth AW - WS.sas
" CREATE TABLE MI_coordinates AS ( SELECT marsha, STR_ID , latitude * constant( 'pi')/180 AS lat_MI_rad , longitude * constant( 'pi')/180 AS long_MI_rad  FROM TGT_BUS.property_master_hist  WHERE division = 'AM' AND openflag = 'Y' AND status = 'O' AND asof_yrmo = &yrmnth.);",Supply Growth AW - WS.sas
" CREATE TABLE dist AS ( Select a.marsha, b.STR_NUM, b.chain_scale , long_comp_rad, long_MI_rad, lat_comp_rad, lat_MI_rad ,3956 * sqrt( ( long_comp_rad - long_MI_rad) * cos( ( lat_MI_rad + lat_comp_rad) / 2) + ( lat_comp_rad - lat_MI_rad) * ( lat_comp_rad - lat_MI_rad)) AS distance FROM MI_coordinates a, comp_coordinates b WHERE calculated distance < 20  ) ;",Supply Growth AW - WS.sas
"SELECT * FROM dist ORDER BY marsha ,distance;",Supply Growth AW - WS.sas
" CREATE TABLE dist2 AS select b.marsha, b.brnd_name, b.mf, b.domint, b.hotname, b.rd, b.ADRM, b.region, b.sub_brand, b.gen, b.owner, b.market_name , a.chain_scale , e.STR_NUM, e.Status, e.Market, e.Tract, e.Affiliation , e.Parent_Company, e.open_date , e.hotel_name AS hotel_name2 , CASE WHEN b.brnd IN ( ""CY"", ""RI"", ""SH"", ""AR"", ""FP"", ""EL"", ""AL"") AND e.chain_scale_CLASS in( ""Upper Midscale Class"", ""Upscale Class"", ""Upper Upscale Class"") THEN ""Y"" when b.brnd IN ( ""FI"", ""TS"", ""OX"", ""PR"") AND e.chain_scale_CLASS IN ( ""Midscale Class"", ""Upper Midscale Class"", ""Upscale Class"") THEN ""Y"" when ( b.brnd IN ( ""FS"", ""BR"", ""GE"", ""AK"", ""DE"", ""CC"", ""ER"", ""SI"", ""MD"", ""WI"", ""TX"") AND b.sub_brand not IN ( ""JW"", ""JW/Resort"")) AND e.chain_scale_CLASS IN ( ""Upscale Class"", ""Upper Upscale Class"", ""Luxury Class"") THEN ""Y"" when ( b.brnd IN ( ""RZ"", ""EB"", ""BG"", ""JW"", ""WH"", ""XR"", ""LC"") OR b.sub_brand IN ( ""JW"", ""JW/Resort"")) AND e.chain_scale_CLASS IN ( ""Luxury Class"") THEN ""Y"" ELSE ""N"" END AS CLASS_match , CASE WHEN b.brnd IN ( ""CY"", ""RI"", ""SH"", ""AR"", ""FP"", ""EL"", ""AL"") AND e.chain_scale_CLASS = ""Upper Upscale Class"" THEN e.rooms*.7 ELSE e.rooms END AS rooms , a.distance FROM dist a LEFT JOIN TGT_BUS.property_master_hist AS b ON a.marsha = b.marsha LEFT JOIN comp_coordinates AS e ON a.STR_NUM = e.STR_NUM WHERE a.STR_NUM <> b.STR_ID AND b.asof_yrmo = &yrmnth. ORDER BY b.marsha, a.distance;",Supply Growth AW - WS.sas
" CREATE TABLE dist2 AS ( SELECT  *  FROM dist2  WHERE CLASS_match = ""Y"");",Supply Growth AW - WS.sas
" CREATE TABLE dist3_1 AS ( SELECT  * , CASE WHEN  SUBSTRING( open_date,1,4) = ( &budget_yr. - 2)  THEN rooms END AS new_last_year_supply, CASE WHEN  SUBSTRING( open_date,1,4) = ( &budget_yr. - 1)  THEN rooms END AS new_current_year_supply, CASE WHEN  SUBSTRING( open_date,1,4) = &budget_yr.  THEN rooms END AS new_budget_year_supply, CASE WHEN  parent_company = ""Marriott International"" AND SUBSTRING( open_date,1,4) = ( &budget_yr. - 2)  THEN rooms END AS new_MI_last_year_supply, CASE WHEN  parent_company = ""Marriott International"" AND SUBSTRING( open_date,1,4) = ( &budget_yr. - 1)  THEN rooms END AS new_MI_current_year_supply, CASE WHEN  parent_company = ""Marriott International"" AND SUBSTRING( open_date,1,4) = &budget_yr.  THEN rooms END AS new_MI_budget_year_supply FROM dist2  WHERE CLASS_match = ""Y"");",Supply Growth AW - WS.sas
"SELECT * FROM dist3_1 ORDER BY marsha ,distance ,hotname ,rooms;",Supply Growth AW - WS.sas
" CREATE TABLE work.distance_1 AS ( SELECT  * , CASE  ELSE rnk+1 END AS rnk FROM dist3_1) ORDER BY marsha ;",Supply Growth AW - WS.sas
 CREATE TABLE distance2_1 AS ( SELECT  *  FROM distance_1  WHERE rnk<=15 OR distance <= 1);,Supply Growth AW - WS.sas
" CREATE TABLE hotel_list2 AS select a.MARSHA, a.HOTNAME, a.BRND_NAME, a.MF, a.DOMINT, a.REGION, a.MARKET_NAME , a.RD, a.ADRM, a.STR_NUM, a.HOTEL_NAME2, a.CHAIN_SCALE, a.AFFILIATION , a.PARENT_COMPANY, a.DISTANCE, a.ROOMS, a.OPEN_DATE , SUBSTRING( cat( OPEN_DATE),1,4) AS OPEN_YEAR , SUM( a.rooms) AS total_new_supply FROM distance2_1 a WHERE OPEN_DATE <= ( &budget_yr. * 100 + 12) AND OPEN_DATE >= ( &budget_yr. - 3) * 100 GROUP BY a.marsha;",Supply Growth AW - WS.sas
"CREATE TABLE ""\\hdqmdm1fpcl3v2\LODG-SMPS\Reporting Analysis\Sales Comp Analysis\Kathryn\Supply Impact\Data Tab for Maria &UPDATE_date..xlsx"" AS ( SELECT * FROM hotel_list2) ;",Supply Growth AW - WS.sas
 CREATE TABLE missing_datapoints AS ( SELECT  *  FROM combined_census_pipe  WHERE ( status = 'Pipeline') AND ( latitude = '' OR longitude = '' OR Open_Date is NULL ) );,Supply Growth AW - WS.sas
"CREATE TABLE ""\\hdqmdm1fpcl3v2\LODG-SMPS\Reporting Analysis\Sales Comp Analysis\Kathryn\Supply Impact\Data Tab for Maria &Update_Date..xlsx"" AS ( SELECT * FROM missing_datapoints) ;",Supply Growth AW - WS.sas
" CREATE TABLE max_distance AS select a.marsha, max( distance) AS max_distance FROM distance2_1 a GROUP BY a.marsha;",Supply Growth AW - WS.sas
" CREATE TABLE independents AS select b.marsha, b.brnd, b.mf, b.domint, b.hotname, b.rd, b.region , b.sub_brand, b.gen, b.owner, b.market_name , a.chain_scale , f.STR_NUM, f.status, f.market, f.tract, f.AFFILIATION , f.Parent_Company, f.open_date, f.hotel_name , ""N"" AS CLASS_match, a.distance, f.rooms FROM dist a LEFT JOIN TGT_BUS.property_master_hist AS b ON a.marsha = b.marsha LEFT JOIN comp_coordinates AS f ON a.STR_NUM = f.STR_NUM LEFT JOIN max_distance AS e ON b.marsha = e.marsha WHERE a.chain_scale = ""Independents"" AND f.status = 'Pipeline' AND a.distance < e.max_distance AND f.OPEN_DATE <= ( &budget_yr. * 100 + 12) AND f.OPEN_DATE >= ( &budget_yr. - 3) * 100 AND b.asof_yrmo = &yrmnth. ORDER BY b.marsha, a.distance;",Supply Growth AW - WS.sas
"CREATE TABLE ""\\hdqmdm1fpcl3v2\LODG-SMPS\Reporting Analysis\Sales Comp Analysis\Kathryn\Supply Impact\Data Tab for Maria &UPDATE_date..xlsx"" AS ( SELECT * FROM independents) ;",Supply Growth AW - WS.sas
" CREATE TABLE market_summary AS select a.market, a.chain_scale, a.chain_scale_CLASS AS CLASS , CASE WHEN OPEN_DATE < ( &budget_yr. - 3) * 100 THEN 'existing' ELSE SUBSTRING( cat( a.OPEN_DATE),1,4) END AS OPEN_YEAR , SUM( a.rooms) AS supply FROM deduped a GROUP BY a.market, a.chain_scale, a.chain_scale_CLASS, calculated open_year;",Supply Growth AW - WS.sas
"CREATE TABLE ""\\hdqmdm1fpcl3v2\LODG-SMPS\Reporting Analysis\Sales Comp Analysis\Kathryn\Supply Impact\Data Tab for Maria &UPDATE_date..xlsx"" AS ( SELECT * FROM market_summary) ;",Supply Growth AW - WS.sas
" CREATE TABLE sum_by_open_year AS select a.marsha, a.brnd_name, a.mf, a.domint, a.hotname, a.rd, a.adrm , a.region, a.sub_brand, a.gen, a.owner, a.Market_Name , CASE WHEN OPEN_DATE < ( &budget_yr. - 3) * 100 THEN 'existing' ELSE SUBSTRING( cat( a.OPEN_DATE),1,4) END AS OPEN_YEAR , SUM( a.rooms) AS supply , COUNT( a.hotel_name2) AS num_competitors FROM distance2_1 a GROUP BY a.marsha, a.brnd_name, a.mf, a.domint, a.hotname, a.rd, a.adrm , a.region, a.sub_brand, a.gen, a.owner, a.Market_Name , calculated open_year;",Supply Growth AW - WS.sas
"CREATE TABLE ""\\hdqmdm1fpcl3v2\LODG-SMPS\Reporting Analysis\Sales Comp Analysis\Kathryn\Supply Impact\Data Tab for Maria &Update_Date..xlsx"" AS ( SELECT * FROM sum_by_open_year) ;",Supply Growth AW - WS.sas
" CREATE TABLE hotels_with_new_supply AS select a.MARSHA, SUM( a.TOTAL_NEW_SUPPLY) AS TOTAL_NEW_SUPPLY FROM hotel_list2 a WHERE a.Open_Date - 2 < &yrmnth. GROUP BY a.MARSHA;",Supply Growth AW - WS.sas
" CREATE TABLE RPI_DATA AS select a.MARSHA , b.MISW_Flag, b.MF, b.DOMINT, b.REGION, b.BRND, b.HCLASS2,EXTRACT(YEAR FROM b.OPENDATE) AS OPEN_YEAR , b.MARKET_NAME, b.OWNER , CASE WHEN b.BRND IN ( 'CY', 'PR', 'SH', 'FP', 'FI', 'RI', 'TS', 'AR', 'AL', 'OX', 'EL', 'AC') THEN 'Select' when b.BRND IN ( 'JW', 'XR', 'RZ', 'WH', 'LC', 'EB', 'BG') THEN 'Luxury' ELSE 'Premium' END AS Brand_Tier , a.SCOMP, a.TIMEF , a.MARAVAIL, a.MARSOLD, a.MARREV, a.MARAVAILLY, a.MARSOLDLY, a.MARREVLY , a.MKTAVAIL, a.MKTSOLD, a.MKTREV, a.MKTAVAILLY, a.MKTSOLDLY, a.MKTREVLY , CASE WHEN c.total_new_supply > 0 THEN ""Y"" ELSE ""N"" END AS Supply_Impacted FROM CMP.STR_MONTHLY_DATA a LEFT JOIN TGT_BUS.PROPERTY_MASTER_HIST AS b ON a.MARSHA = b.MARSHA LEFT JOIN hotels_with_new_supply AS c ON b.MARSHA = c.MARSHA WHERE b.asof_yrmo = &yrmnth. AND a.asof_yrmo = &yrmnth. AND a.yrmnth = &yrmnth. AND a.currency_type = 'Constant USD' AND a.data_category = 'Rooms' AND b.Division = 'AM' ORDER BY a.MARSHA;",Supply Growth AW - WS.sas
"CREATE TABLE ""\\hdqmdm1fpcl3v2\lodg-smps\Reporting Analysis\Sales Comp Analysis\Kathryn\Supply Impact\Data tabs for Mark &UPDATE_date..xlsb"" AS ( SELECT * FROM RPI_DATA) ;",Supply Growth AW - WS.sas
 CREATE TABLE hotel_list_MARK AS ( SELECT  *  FROM hotel_list2  WHERE Open_Date - 2 < &yrmnth.);,Supply Growth AW - WS.sas
"CREATE TABLE ""\\hdqmdm1fpcl3v2\lodg-smps\Reporting Analysis\Sales Comp Analysis\Kathryn\Supply Impact\Data tabs for Mark &UPDATE_date..xlsb"" AS ( SELECT * FROM hotel_list_MARK) ;",Supply Growth AW - WS.sas
 CREATE TABLE fx_rates AS ( SELECT  *  FROM fx.fxrates );,Threat Assessment Codev4.sas
 CREATE TABLE prop_misw AS  (  SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER A  ) ;,Threat Assessment Codev4.sas
" CREATE TABLE resdata_2019 AS  (  SELECT property_cd, CURR_MARKET_PREFIX_CD, c.SEGMENT_MISW, stay_dt , SUM( CURR_ROOMS_QTY) AS rn, SUM( CURR_ROOM_REV_USD_SUB_AMT) AS rv_usd , SUM( CURR_ROOM_REV_Local_SUB_AMT) AS rv_Local FROM AW_TGT_BUS_DBO.MRDW_BI_FACT_STAYED_PAID_NOS A INNER JOIN aw_rev_dbo.mi_mrdw_segment_map_sw C ON a.CURR_MARKET_PREFIX_CD=C.MARKET_PREFIX_CD WHERE stay_year IN ( 2019, 2018) AND NOS_STATUS_CD='A' AND stay_dt >= '2018-12-01' AND stay_dt <= '2019-11-30' AND INTERFACE_PMS_CD = '2' GROUP BY property_cd, CURR_MARKET_PREFIX_CD, c.SEGMENT_MISW, stay_dt  ) ;",Threat Assessment Codev4.sas
" CREATE TABLE resdata_2018 AS  (  SELECT property_cd, CURR_MARKET_PREFIX_CD, c.SEGMENT_MISW, stay_dt , SUM( CURR_ROOMS_QTY) AS rn_ly, SUM( CURR_ROOM_REV_USD_SUB_AMT) AS rv_usd_ly , SUM( CURR_ROOM_REV_Local_SUB_AMT) AS rv_Local_ly FROM AW_TGT_BUS_DBO.MRDW_BI_FACT_STAYED_PAID_NOS A INNER JOIN aw_rev_dbo.mi_mrdw_segment_map_sw C ON a.CURR_MARKET_PREFIX_CD=C.MARKET_PREFIX_CD WHERE stay_year IN ( 2017, 2018) AND NOS_STATUS_CD='A' AND stay_dt >= '2017-12-02' AND stay_dt <= '2018-12-01' AND INTERFACE_PMS_CD = '2' GROUP BY property_cd, CURR_MARKET_PREFIX_CD, c.SEGMENT_MISW, stay_dt  ) ;",Threat Assessment Codev4.sas
" CREATE TABLE resdata_comb AS select coalesce( a.property_cd, b.property_cd) AS marsha , coalesce ( a.curr_market_prefix_cd, b.curr_market_prefix_cd) AS curr_market_prefix_cd , coalesce ( a.segment_misw, b.segment_misw) AS segment_misw , coalesce ( a.stay_dt, b.stay_dt+364) AS date format date9. , rn ,rv_usd, rv_local, rn_ly, rv_usd_ly, rv_local_ly FROM resdata_2019 AS a full JOIN resdata_2018 AS b ON a.property_cd = b.property_cd AND a.curr_market_prefix_cd = b.curr_market_prefix_cd AND a.segment_misw = b.segment_misw AND a.stay_dt = b.stay_dt+364 ;",Threat Assessment Codev4.sas
" CREATE TABLE demand AS  (  select CASE WHEN c.property_cd='SJUDB' THEN 'SJUDO' ELSE c.property_cd END AS marsha , b.date_dt AS date , SUM( a.qy_addl_demand_adjstd) AS demand FROM mrdw_fact_ddm_stat_unconstrain a JOIN mrdw_dim_date b ON a.id_date_stay=b.date_key JOIN mrdw_dim_property AS c ON a.id_property=c.property_id WHERE b.year_cal IN (  2019, 2018, 2017) GROUP BY marsha, b.date_dt  )  ;",Threat Assessment Codev4.sas
" CREATE TABLE demand2 AS select coalesce( a.marsha, b.marsha) AS marsha ,coalesce( a.date, b.date+364) AS date ,a.demand AS demand ,b.demand AS demand_ly FROM demand a full JOIN demand b ON a.marsha = b.marsha AND a.date = b.date +364 WHERE a.date >= '01DEC2018'D AND a.date <= '30NOV2019'D;",Threat Assessment Codev4.sas
" CREATE TABLE resdata_comb_demand AS select marsha , date , SUM( rn)as rn , SUM( rn_ly) AS rn_ly FROM resdata_comb GROUP BY marsha, date;",Threat Assessment Codev4.sas
" CREATE TABLE demand3 AS select a.marsha , a.date , a.demand , a.demand_ly , ( a.demand+ b.rn) AS total_demand , ( a.demand_ly+ b.rn_ly) AS total_demand_ly FROM demand2 AS a LEFT JOIN resdata_comb_demand AS b ON a.marsha = b.marsha AND a.date = b.date;",Threat Assessment Codev4.sas
" CREATE TABLE demand4 AS select a.marsha , b.hcap * 365 AS cap , SUM( total_demand) AS total_demand , SUM( total_demand_ly) AS total_demand_ly , SUM( total_demand)/SUM( total_demand_ly)-1 AS demand_pct_chg , SUM( total_demand) - SUM( total_demand_ly)-1 AS demand_pt_chg FROM demand3 AS a LEFT JOIN prop_misw AS b ON a.marsha = b.marsha GROUP BY a.marsha, b.hcap;",Threat Assessment Codev4.sas
" CREATE TABLE demand5 AS select * , total_demand/cap AS demand_factor FROM demand4;",Threat Assessment Codev4.sas
" CREATE TABLE resdata_comb_demand_l3 AS select marsha , date , SUM( rn)as rn , SUM( rn_ly) AS rn_ly FROM resdata_comb WHERE date >= '01SEP2019'D GROUP BY marsha, date;",Threat Assessment Codev4.sas
" CREATE TABLE demand3_l3 AS select a.marsha , a.date format date9. , a.demand , a.demand_ly , ( a.demand+ b.rn) AS total_demand , ( a.demand_ly+ b.rn_ly) AS total_demand_ly FROM demand2 AS a LEFT JOIN resdata_comb_demand_l3 AS b ON a.marsha = b.marsha AND a.date = b.date WHERE a.date >= '01SEP2019'D;",Threat Assessment Codev4.sas
" CREATE TABLE demand4_l3 AS select a.marsha , b.hcap * 91 AS cap , SUM( total_demand) AS total_demand , SUM( total_demand_ly) AS total_demand_ly , SUM( total_demand)/SUM( total_demand_ly)-1 AS demand_pct_chg , SUM( total_demand) - SUM( total_demand_ly)-1 AS demand_pt_chg FROM demand3_l3 AS a LEFT JOIN prop_misw AS b ON a.marsha = b.marsha GROUP BY a.marsha, b.hcap;",Threat Assessment Codev4.sas
" CREATE TABLE demand5_l3 AS select * , total_demand/cap AS demand_factor FROM demand4_l3;",Threat Assessment Codev4.sas
" CREATE TABLE res_datal12 AS select a.marsha , a.date , b.hotel_name , b.brnd_name , b.str_chain_scale , b.mf , b.opendate , b.curr , b.cluster_name , CASE WHEN grmrs_hotel <> '' THEN 'Y' ELSE 'N' END AS RMAS , b.acomp , b.hcap , segment_misw , curr_market_prefix_cd , rn , rv_local/c.fx AS rv_usd , rv_local_ly/c.fx AS rv_usd_ly FROM resdata_comb AS a LEFT JOIN prop_misw AS b ON a.marsha = b.marsha LEFT JOIN fx_rates AS c ON b.curr = c.code andEXTRACT(MONTH FROM a.date) = c.mn WHERE b.region IN ( 'E_' 'W_' 'C_') AND b.openflag = 'Y';",Threat Assessment Codev4.sas
" CREATE TABLE res_datal12v2 AS select marsha , hotel_name , brnd_name , str_chain_scale , mf , opendate , curr , cluster_name , RMAS , acomp , SUM( rn) AS rn , SUM( rv_usd) AS rv_usd , SUM( rv_usd_ly) AS rv_usd_ly , calculated rv_usd/calculated rv_usd_ly-1 AS rv_chg , calculated rv_usd - calculated rv_usd_ly AS rv_diff FROM res_datal12 AS a GROUP BY marsha , hotel_name , brnd_name , str_chain_scale , mf , opendate , curr , cluster_name , RMAS , acomp;",Threat Assessment Codev4.sas
" CREATE TABLE res_datal3 AS select a.marsha , a.date , b.hotel_name , b.brnd_name , b.str_chain_scale , b.mf , b.opendate , b.curr , b.cluster_name , CASE WHEN grmrs_hotel <> '' THEN 'Y' ELSE 'N' END AS RMAS , b.acomp , b.hcap , segment_misw , curr_market_prefix_cd , rn , rv_local/c.fx AS rv_usd , rv_local_ly/c.fx AS rv_usd_ly FROM resdata_comb AS a LEFT JOIN prop_misw AS b ON a.marsha = b.marsha LEFT JOIN fx_rates AS c ON b.curr = c.code andEXTRACT(MONTH FROM a.date) = c.mn WHERE b.region IN ( 'E_' 'W_' 'C_') AND b.openflag = 'Y' AND a.date >= '01SEP2019'D ;",Threat Assessment Codev4.sas
" CREATE TABLE res_datal3v2 AS select marsha , hotel_name , brnd_name , str_chain_scale , mf , opendate , curr , cluster_name , RMAS , acomp , SUM( rn) AS rn , SUM( rv_usd) AS rv_usd , SUM( rv_usd_ly) AS rv_usd_ly , calculated rv_usd/calculated rv_usd_ly-1 AS rv_chg , calculated rv_usd - calculated rv_usd_ly AS rv_diff FROM res_datal3 AS a GROUP BY marsha , hotel_name , brnd_name , str_chain_scale , mf , opendate , curr , cluster_name , RMAS , acomp;",Threat Assessment Codev4.sas
" CREATE TABLE Rep&YRMNTH._Data&asof_yrmo AS  (  select a.MARSHA, b.BRND, b.MF, a.TIMEF, a.SCOMP , b.HOTEL_NAME, b.REGION, b.REGION_NAME, a.YRMNTH, a.asof_yrmo , MARSOLD/MKTSOLD AS OI, MARSOLDLY/MKTSOLDLY AS OI_LY, ( MARSOLD/MKTSOLD*100)-( MARSOLDLY/MKTSOLDLY*100) AS OI_PT_CHG , ( MARREV/MARSOLD)/( MKTREV/MKTSOLD) AS AI, ( MARREVLY/MARSOLDLY)/( MKTREVLY/MKTSOLDLY) AS AI_LY, ( ( MARREV/MARSOLD)/( MKTREV/MKTSOLD)*100)- ( ( MARREVLY/MARSOLDLY)/( MKTREVLY/MKTSOLDLY)*100) AS AI_PT_CHG , MARREV/MKTREV*100 AS RPI, MARREVLY/MKTREVLY*100 AS RPI_LY, ( MARREV/MKTREV*100)-( MARREVLY/MKTREVLY*100) AS RPI_PT_CHG FROM AW_CMP_DBO.STR_MONTHLY_DATA AS a LEFT JOIN AW_TGT_BUS_DBO.PROPERTY_MASTER_HIST AS b ON a.MARSHA = b.MARSHA AND a.asof_yrmo = b.asof_yrmo WHERE a.TIMEF =&TIMEF AND a.DATA_CATEGORY = 'Rooms' AND a.CURRENCY_TYPE = 'Constant USD' AND a.YRMNTH = &YRMNTH AND a.asof_yrmo = &asof_yrmo AND b.REGION in( 'E_','W_','C_') AND a.SCOMP='Y'  ) ;",Threat Assessment Codev4.sas
" CREATE TABLE Rep&YRMNTH._Data&asof_yrmo.l3 AS  (  select a.MARSHA, b.BRND, b.MF, a.TIMEF, a.SCOMP , b.HOTEL_NAME, b.REGION, b.REGION_NAME, a.YRMNTH, a.asof_yrmo , MARSOLD/MKTSOLD AS OI, MARSOLDLY/MKTSOLDLY AS OI_LY, ( MARSOLD/MKTSOLD*100)-( MARSOLDLY/MKTSOLDLY*100) AS OI_PT_CHG , ( MARREV/MARSOLD)/( MKTREV/MKTSOLD) AS AI, ( MARREVLY/MARSOLDLY)/( MKTREVLY/MKTSOLDLY) AS AI_LY, ( ( MARREV/MARSOLD)/( MKTREV/MKTSOLD)*100)- ( ( MARREVLY/MARSOLDLY)/( MKTREVLY/MKTSOLDLY)*100) AS AI_PT_CHG , MARREV/MKTREV*100 AS RPI, MARREVLY/MKTREVLY*100 AS RPI_LY, ( MARREV/MKTREV*100)-( MARREVLY/MKTREVLY*100) AS RPI_PT_CHG FROM AW_CMP_DBO.STR_MONTHLY_DATA AS a LEFT JOIN AW_TGT_BUS_DBO.PROPERTY_MASTER_HIST AS b ON a.MARSHA = b.MARSHA AND a.asof_yrmo = b.asof_yrmo WHERE a.TIMEF =&TIMEF2 AND a.DATA_CATEGORY = 'Rooms' AND a.CURRENCY_TYPE = 'Constant USD' AND a.YRMNTH = &YRMNTH AND a.asof_yrmo = &asof_yrmo AND b.REGION in( 'E_','W_','C_') AND a.SCOMP='Y'  ) ;",Threat Assessment Codev4.sas
" CREATE TABLE datacomb AS select a.marsha , a.hotel_name , a.brnd_name , a.str_chain_scale , a.mf , a.curr , a.rmas , a.acomp , c.demand_factor AS demand_factorl12 , d.demand_factor AS demand_factorl3 , a.rv_usd/a.rv_usd_ly - 1 AS revpar_chg_l12 , b.rv_usd/b.rv_usd_ly - 1 AS revpar_chg_l3 , e.RPI_PT_CHG AS RPI_PT_CHGl12 , f.RPI_PT_CHG AS RPI_PT_CHGl3 , g.transpace_revchg FROM res_datal12v2 AS a full JOIN res_datal3v2 AS b ON a.marsha = b.marsha LEFT JOIN demand5 AS c ON coalesce( a.marsha, b.marsha) = c.marsha LEFT JOIN demand5_l3 AS d ON coalesce( a.marsha, b.marsha) = d.marsha LEFT JOIN Rep&YRMNTH._Data&asof_yrmo AS e ON coalesce( a.marsha, b.marsha) = e.marsha LEFT JOIN Rep&YRMNTH._Data&asof_yrmo.l3 AS f ON coalesce( a.marsha, b.marsha) = f.marsha LEFT JOIN allotb2 AS g ON coalesce( a.marsha,b.marsha) = g.marsha WHERE a.brnd_name IN ( 'Courtyard' 'Fairfield Inn' 'SpringHill Suites' 'Residence Inn' 'TownePlace Suites' 'Sheraton' 'Element' 'AC Hotels by Marriott' 'Aloft' 'Four Points' 'Moxy Hotels' ) ;",Threat Assessment Codev4.sas
 CREATE TABLE prop_misw AS  (  SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER A  ) ;,Transient Pace for Threat Assessment.sas
" CREATE TABLE trn_otb_ty AS select snapshot_dt AS asof_week, property_cd, stay_dt , CASE WHEN weekday( stay_dt) IN ( 6,7) THEN 'WE' ELSE 'WD' END AS wdwe , SEG_CD AS market_segment, SUM( ROOM_NIGHTS) AS rn, SUM( REVENUE) AS rev FROM AWPROD2.MRDW_FACT_SEG10_DETAILS a, prop_misw prop WHERE a.property_cd = prop.marsha AND prop.region IN ( 'E_', 'W_', 'C_') AND snapshot_dt = &otbAsOfDate AND a.stay_dt >= &OTBstrTY AND a.stay_dt <= &OTBendTY GROUP BY snapshot_dt, property_cd, stay_dt, seg_cd, calculated wdwe ORDER BY snapshot_dt, property_cd, stay_dt, seg_cd, calculated wdwe;",Transient Pace for Threat Assessment.sas
" CREATE TABLE trn_otb_date AS select snapshot_dt +365 AS asof_week, property_cd, stay_dt+365 AS stay_dt format date9. , CASE WHEN weekday( stay_dt) IN ( 6,7) THEN 'WE' ELSE 'WD' END AS wdwe , SEG_CD AS market_segment, SUM( ROOM_NIGHTS) AS rn, SUM( REVENUE) AS rv FROM AWPROD2.MRDW_FACT_SEG10_DETAILS a, prop_misw prop WHERE a.property_cd = prop.marsha AND prop.region IN ( 'E_', 'W_', 'C_') AND snapshot_dt = &otbAsOfDate -365 AND a.stay_dt >= &OTBstrTY -365 AND a.stay_dt <= &OTBendTY -365 GROUP BY snapshot_dt, property_cd, stay_dt, seg_cd, calculated wdwe ORDER BY snapshot_dt, property_cd, stay_dt, seg_cd, calculated wdwe;",Transient Pace for Threat Assessment.sas
" CREATE TABLE stella3_trn_otb AS select coalesce( a.property_cd,b.property_cd) AS marsha ,coalesce( a.stay_dt, b.stay_dt) AS stay_date ,coalesce( a.market_segment,b.market_segment) AS mcpref ,coalesce( a.wdwe,b.wdwe) AS wdwe ,a.rn AS rn ,a.rev AS rv ,b.rn AS rn_ly ,b.rv AS rv_ly FROM trn_otb_ty AS a full JOIN trn_otb_date AS b ON a.property_cd = b.property_cd AND a.stay_dt=b.stay_dt AND a.market_segment = b.market_segment AND a.wdwe = b.wdwe ;",Transient Pace for Threat Assessment.sas
" CREATE TABLE allotb AS select marsha,EXTRACT(YEAR FROM stay_date) AS yr,EXTRACT(MONTH FROM stay_date) AS mn, SUM( rn) AS rn, SUM( rv) AS rv, SUM( rn_ly) AS rn_ly, SUM( rv_ly) AS rv_ly FROM stella3_trn_otb WHERE 100 * calculated yr + calculated mn IN ( 201909, 201910, 201911) AND mcpref IN ( 'PRG', 'BEN', 'ECH', 'SPC', 'WHS', 'GOV', 'WES', 'AAA', 'PKG', 'ADV', 'SRD','MAR', 'RWD','ODS') GROUP BY marsha, yr, mn;",Transient Pace for Threat Assessment.sas
" CREATE TABLE allotb2 AS select marsha , SUM( rv) AS rv , SUM( rv_ly) AS rv_ly , calculated rv/calculated rv_ly - 1 AS transpace_revchg FROM allotb GROUP BY marsha;",Transient Pace for Threat Assessment.sas
" select ""'"" || CAST( yr AS VARCHAR(4) ) || ""'"", ""'"" || compress( CAST( pd AS VARCHAR(2) )) || ""'"", ""'"" || CAST( wk AS VARCHAR(1) ) || ""'"" into :TY_YR, :TY_PD, :TY_WK FROM share.periods WHERE sasdate = date( )-7 select ""'"" || CAST( yr AS VARCHAR(4) ) || ""'"", ""'"" || compress( CAST( pd AS VARCHAR(2) )) || ""'"", ""'"" || CAST( wk AS VARCHAR(1) ) || ""'"" into :LY_YR, :LY_PD, :LY_WK FROM share.periods WHERE sasdate = date( )-7-364;",transientpace_wk v7_aw load vAW.sas
" CREATE TABLE otb_ty AS select property_cd AS MARSHA, stay_date, CASE WHEN market_segment IN ( '10', '12', '30', '34', '37', '20', '23', '24', '21') THEN 'NQ' when market_segment IN ( '16') THEN 'Govt' when market_segment IN ( '17', '18', '15') THEN 'SpecCorp' when market_segment IN ( 'GR') THEN 'Group' when market_segment like '5%' THEN 'Contract' when market_segment IN ( '35','38') THEN 'Adv Purch' when market_segment IN ( '25') THEN 'MRewards' ELSE 'Other Trans' END AS Seg, SUM( room_nights) AS RNTY, SUM( rev_net) AS RVTY, SUM( rev_net_us) AS rv_usdTY FROM aw_prxy.Mrdw_fact_otb_seg_extract_pd WHERE acctg_yr=&TY_YR AND acctg_pd=&TY_PD AND acctg_wk=&TY_WK GROUP BY property_cd, stay_date, Seg;",transientpace_wk v7_aw load vAW.sas
" CREATE TABLE otb_ly AS select property_cd AS MARSHA, stay_date+364 AS stay_date, CASE WHEN market_segment IN ( '10', '12', '30', '34', '37', '20', '23', '24', '21') THEN 'NQ' when market_segment IN ( '16') THEN 'Govt' when market_segment IN ( '17', '18', '15') THEN 'SpecCorp' when market_segment IN ( 'GR') THEN 'Group' when market_segment like '5%' THEN 'Contract' when market_segment IN ( '35','38') THEN 'Adv Purch' when market_segment IN ( '25') THEN 'MRewards' ELSE 'Other Trans' END AS Seg, SUM( room_nights) AS RNLY, SUM( rev_net) AS RVLY , SUM( rev_net_us) AS rv_usdLY FROM aw_prxy.Mrdw_fact_otb_seg_extract_pd WHERE acctg_yr=&LY_YR AND acctg_pd=&LY_PD AND acctg_wk=&LY_WK GROUP BY property_cd, stay_date, seg;",transientpace_wk v7_aw load vAW.sas
" CREATE TABLE lw_ty AS select a.property_cd AS MARSHA, stay_dt AS stay_date, CASE WHEN CURR_MARKET_PREFIX_CD IN ( '10', '12', '30', '34', '37', '20', '23', '24', '21') THEN 'NQ' when CURR_MARKET_PREFIX_CD IN ( '16') THEN 'Govt' when CURR_MARKET_PREFIX_CD IN ( '17', '18', '15') THEN 'SpecCorp' when CURR_MARKET_CATEGORY_NM='GROUP' THEN 'Group' when CURR_MARKET_CATEGORY_NM='CONTRACT/OWNERS' THEN 'Contract' when CURR_MARKET_PREFIX_CD IN ( '35','38') THEN 'Adv Purch' when CURR_MARKET_PREFIX_CD IN ( '25') THEN 'MRewards' ELSE 'Other Trans' END AS Seg, SUM( CURR_ROOMS_QTY) AS rnTY, SUM( CURR_ROOM_REV_USD_SUB_AMT) AS rv_usdTY, SUM( CURR_ROOM_REV_Local_SUB_AMT) AS RVTY FROM AW_TGT_BUS_DBO.MRDW_BI_FACT_STAYED_PAID_NOS a WHERE stay_year=&ty_yr. AND NOS_STATUS_CD='A' AND stay_dt between &ty_lwbeg. AND &ty_lwend. GROUP BY a.property_cd, stay_dt, CASE WHEN CURR_MARKET_PREFIX_CD IN ( '10', '12', '30', '34', '37', '20', '23', '24', '21') THEN 'NQ' when CURR_MARKET_PREFIX_CD IN ( '16') THEN 'Govt' when CURR_MARKET_PREFIX_CD IN ( '17', '18', '15') THEN 'SpecCorp' when CURR_MARKET_CATEGORY_NM='GROUP' THEN 'Group' when CURR_MARKET_CATEGORY_NM='CONTRACT/OWNERS' THEN 'Contract' when CURR_MARKET_PREFIX_CD IN ( '35','38') THEN 'Adv Purch' when CURR_MARKET_PREFIX_CD IN ( '25') THEN 'MRewards' ELSE 'Other Trans' end;",transientpace_wk v7_aw load vAW.sas
" CREATE TABLE lw_ly AS select a.property_cd AS MARSHA, stay_dt+364 AS stay_date, CASE WHEN CURR_MARKET_PREFIX_CD IN ( '10', '12', '30', '34', '37', '20', '23', '24', '21') THEN 'NQ' when CURR_MARKET_PREFIX_CD IN ( '16') THEN 'Govt' when CURR_MARKET_PREFIX_CD IN ( '17', '18', '15') THEN 'SpecCorp' when CURR_MARKET_CATEGORY_NM='GROUP' THEN 'Group' when CURR_MARKET_CATEGORY_NM='CONTRACT/OWNERS' THEN 'Contract' when CURR_MARKET_PREFIX_CD IN ( '35','38') THEN 'Adv Purch' when CURR_MARKET_PREFIX_CD IN ( '25') THEN 'MRewards' ELSE 'Other Trans' END AS Seg, SUM( CURR_ROOMS_QTY) AS rnLY, SUM( CURR_ROOM_REV_Local_SUB_AMT) AS RVLY, SUM( CURR_ROOM_REV_USD_SUB_AMT) AS rv_usdLY FROM mrdw_fact_agg_dr_rev_analysis WHERE stay_year=&ly_yr. AND NOS_STATUS_CD='A' AND stay_dt between &ly_lwbeg. AND &ly_lwend. GROUP BY a.property_cd, stay_dt, CASE WHEN CURR_MARKET_PREFIX_CD IN ( '10', '12', '30', '34', '37', '20', '23', '24', '21') THEN 'NQ' when CURR_MARKET_PREFIX_CD IN ( '16') THEN 'Govt' when CURR_MARKET_PREFIX_CD IN ( '17', '18', '15') THEN 'SpecCorp' when CURR_MARKET_CATEGORY_NM='GROUP' THEN 'Group' when CURR_MARKET_CATEGORY_NM='CONTRACT/OWNERS' THEN 'Contract' when CURR_MARKET_PREFIX_CD IN ( '35','38') THEN 'Adv Purch' when CURR_MARKET_PREFIX_CD IN ( '25') THEN 'MRewards' ELSE 'Other Trans' end;",transientpace_wk v7_aw load vAW.sas
 CREATE TABLE ty AS ( SELECT  *  FROM lw_ty UNION ALL SELECT  *  FROM otb_ty);,transientpace_wk v7_aw load vAW.sas
 CREATE TABLE ly AS ( SELECT  *  FROM lw_ly UNION ALL SELECT  *  FROM otb_ly);,transientpace_wk v7_aw load vAW.sas
" CREATE TABLE fx  AS select marsha, SUM( rv_usdty)/SUM( rvty) AS FX_Sell_to_USD FROM ty GROUP BY marsha;",transientpace_wk v7_aw load vAW.sas
CREATE INDEX marsha ON fx(marsha);,transientpace_wk v7_aw load vAW.sas
"SELECT * FROM ty ORDER BY marsha ,stay_date ,seg;",transientpace_wk v7_aw load vAW.sas
"SELECT * FROM ly ORDER BY marsha ,stay_date ,seg;",transientpace_wk v7_aw load vAW.sas
 select min( stay_date) into :firstDt FROM otb_ty;,transientpace_wk v7_aw load vAW.sas
" CREATE TABLE group_stly_wk AS select hotel_cd AS marsha, mdy( stay_mon,stay_day,stay_yr) AS stay_date, SUM( ty_rm) AS rnTY, SUM( ty_rev) AS rvty, SUM( ly_rm_dow) AS rnly, SUM( ly_rev_dow) AS rvly FROM tomc.euro_pace WHERE calculated stay_date >= &firstdt. GROUP BY marsha, stay_date ORDER BY marsha, stay_date;",transientpace_wk v7_aw load vAW.sas
 CREATE TABLE bbmarsha AS select distinct marsha FROM group_stly_wk;,transientpace_wk v7_aw load vAW.sas
" CREATE TABLE group_stly_wk2 AS select b.*, ""Group"" AS Seg, a.* FROM bbdates b LEFT JOIN group_stly_wk a ON b.marsha=a.marsha AND b.stay_date=a.stay_date;",transientpace_wk v7_aw load vAW.sas
CREATE TABLE plu AS ( SELECT  *  FROM share.plu );,transientpace_wk v7_aw load vAW.sas
CREATE INDEX marsha ON plu(marsha);,transientpace_wk v7_aw load vAW.sas
"CREATE TABLE eupace.Total_Pace_&ExtractDt AS ( SELECT  *  , rvty * fx_sell_to_usd AS rv_usdty , rvly * fx_sell_to_usd AS rv_usdly , &ExtractDt AS snapshot_dt  FROM group_stly_wk2 A JOIN in=c) B ON  A.marsha =  B.marsha AND  A.stay_date =  B.stay_date AND  A.Seg =  B.Seg JOIN eupace.total_pace_&LastFile C ON  B.marsha =  C.marsha AND  B.stay_date =  C.stay_date AND  B.Seg =  C.Seg WHERE _iorc_=%sysrc( _dsenom)) AS ( SELECT marsha, mf, acomp, region , rvty * fx_sell_to_usd AS rv_usdty , rvly * fx_sell_to_usd AS rv_usdly , &ExtractDt AS snapshot_dt  FROM plu A JOIN key=marsha B ON  A.marsha =  B.marsha AND  A.stay_date =  B.stay_date AND  A.Seg =  B.Seg JOIN / C ON  B.marsha =  C.marsha AND  B.stay_date =  C.stay_date AND  B.Seg =  C.Seg JOIN unique D ON  C.marsha =  D.marsha AND  C.stay_date =  D.stay_date AND  C.Seg =  D.Seg WHERE _iorc_=%sysrc( _dsenom));",transientpace_wk v7_aw load vAW.sas
ALTER TABLE eupace.Total_Pace_&ExtractDt DROP COLUMN fx_sell_to_usd ;,transientpace_wk v7_aw load vAW.sas
DROP TABLE AWPROD.Weekly_Pace_Intl_STG;,transientpace_wk v7_aw load vAW.sas
 CREATE TABLE sourceData AS select * FROM eupace.Total_Pace_&ExtractDt whereEXTRACT(YEAR FROM stay_date)>2018;,transientpace_wk v7_aw load vAW.sas
" CREATE TABLE SASDSEXcon AS ( SELECT Name, vFormat, VARNUM , compress( LENGTH ) AS x , CASE WHEN  compress( FORMAT)=""$""  THEN compress( ""Varchar( ""||x||"")"" ) WHEN   type=2  THEN compress( ""Varchar( ""||x||"")"" ) WHEN   compress( FORMAT)=""DATE""  THEN ""Date"" ELSE ""Integer"" END AS vFormat FROM temp );",transientpace_wk v7_aw load vAW.sas
SELECT * FROM SASDSEXcon ORDER BY VARNUM;,transientpace_wk v7_aw load vAW.sas
   TRUNCATE table AW_REV_DBO.Weekly_Pace_Intl_EU ) by odbc ;,transientpace_wk v7_aw load vAW.sas
    INSERT INTO AW_REV_DBO.Weekly_Pace_Intl_EU Select * FROM AW_REV_DBO.Weekly_Pace_Intl_STG WHERE region='R_' ) by odbc ;,transientpace_wk v7_aw load vAW.sas
   TRUNCATE table AW_REV_DBO.Weekly_Pace_Intl_AP ) by odbc ;,transientpace_wk v7_aw load vAW.sas
"    INSERT INTO AW_REV_DBO.Weekly_Pace_Intl_AP Select * FROM AW_REV_DBO.Weekly_Pace_Intl_STG WHERE region IN ( 'EC','GC' )  ) by odbc ;",transientpace_wk v7_aw load vAW.sas
   TRUNCATE table AW_REV_DBO.Weekly_Pace_Intl_MEA ) by odbc ;,transientpace_wk v7_aw load vAW.sas
"    INSERT INTO AW_REV_DBO.Weekly_Pace_Intl_MEA Select * FROM AW_REV_DBO.Weekly_Pace_Intl_STG WHERE region IN ( 'ML','AF' )  ) by odbc ;",transientpace_wk v7_aw load vAW.sas
   TRUNCATE table AW_REV_DBO.Weekly_Pace_Intl_S ) by odbc ;,transientpace_wk v7_aw load vAW.sas
    INSERT INTO AW_REV_DBO.Weekly_Pace_Intl_S Select * FROM AW_REV_DBO.Weekly_Pace_Intl_STG WHERE region IN ( 'S_' )  ) by odbc ;,transientpace_wk v7_aw load vAW.sas
   TRUNCATE table AW_REV_DBO.Weekly_Pace_Intl_US ) by odbc ;,transientpace_wk v7_aw load vAW.sas
"    INSERT INTO AW_REV_DBO.Weekly_Pace_Intl_US Select * FROM AW_REV_DBO.Weekly_Pace_Intl_STG WHERE region IN ( 'E_','W_','C_' )  ) by odbc ;",transientpace_wk v7_aw load vAW.sas
    INSERT INTO AW_REV_DBO.WEEKLY_PACE_EUROPE_HIST Select * FROM AW_REV_DBO.Weekly_Pace_Intl_EU ) by odbc ;,transientpace_wk v7_aw load vAW.sas
    INSERT INTO AW_REV_DBO.WEEKLY_PACE_AP_HIST Select * FROM AW_REV_DBO.Weekly_Pace_Intl_AP ) by odbc ;,transientpace_wk v7_aw load vAW.sas
    INSERT INTO AW_REV_DBO.WEEKLY_PACE_MEA_HIST Select * FROM AW_REV_DBO.Weekly_Pace_Intl_MEA ) by odbc ;,transientpace_wk v7_aw load vAW.sas
    INSERT INTO AW_REV_DBO.WEEKLY_PACE_CALA_HIST Select * FROM AW_REV_DBO.Weekly_Pace_Intl_S ) by odbc ;,transientpace_wk v7_aw load vAW.sas
    INSERT INTO AW_REV_DBO.WEEKLY_PACE_US_CA_HIST Select * FROM AW_REV_DBO.Weekly_Pace_Intl_US ) by odbc ;,transientpace_wk v7_aw load vAW.sas
" CREATE TABLE AW_Manual_Adjustments AS  ( select ASOF_YEAR_ID AS REPORT_YEAR, ASOF_MONTH_ID AS REPORT_MONTH, CASE WHEN SLS_MGR_ROLE = 'Market Account Executive, Association' THEN 'Association ( Pace)' WHEN SLS_MGR_ROLE = 'Area Account Executive, Affinity' THEN 'Affinity ( Pace)' WHEN SLS_MGR_ROLE = 'Area Account Executive, Government' THEN 'Government ( Pace)' END AS SEGMENT , MARSHA_CD AS MARSHA , SUM( NET_RM_NGTS) AS RN , SUM( NET_RM_REV) AS RV , CASE WHEN ORG_NM IN ( 'Canada') THEN 'CAD' ELSE 'USD' END AS RV_CURRENCY FROM AW_SLS_PRD_AM.MANUAL_ADJUSTMENTS WHERE ASOF_YEAR_ID IN ( &CURYR.-3, &CURYR.-2, &CURYR.-1, &CURYR. ) AND SLS_MGR_ROLE IN ( 'Market Account Executive, Association', 'Area Account Executive, Affinity', 'Area Account Executive, Government') GROUP BY ASOF_YEAR_ID, ASOF_MONTH_ID, SLS_MGR_ROLE, MARSHA_CD, ORG_NM  ) ;",US_Account_Sales_ASAR_Project.sas
" CREATE TABLE AW_MANUAL_ADDS_SUM AS SELECT REPORT_YEAR, REPORT_MONTH, SEGMENT, MARSHA, SUM( RN) AS RN, SUM( RV) AS RV, RV_CURRENCY FROM AW_MANUAL_ADJUSTMENTS GROUP BY REPORT_YEAR, REPORT_MONTH, SEGMENT, MARSHA, RV_CURRENCY ;",US_Account_Sales_ASAR_Project.sas
" CREATE TABLE AW_MANUAL_ADJ_%EVAL( &CURYR.-&HOWMANY. ) AS SELECT A.REPORT_YEAR, A.REPORT_MONTH, A.SEGMENT, A.MARSHA, ( A.RN+0) AS RN_TY, ( B.RN+0) AS RN_LY, ( A.RV+0) AS RV_TY, ( B.RV+0) AS RV_LY, A.RV_CURRENCY FROM AW_MANUAL_ADDS_SUM A LEFT JOIN ( SELECT * FROM AW_MANUAL_ADDS_SUM WHERE REPORT_YEAR=%EVAL( &CURYR.-&ONEMORE. )) B ON A.REPORT_MONTH=B.REPORT_MONTH AND A.SEGMENT=B.SEGMENT AND A.MARSHA=B.MARSHA AND A.RV_CURRENCY=B.RV_CURRENCY WHERE A.REPORT_YEAR = %EVAL( &CURYR.-&HOWMANY. ) ;",US_Account_Sales_ASAR_Project.sas
" CREATE TABLE Quote_Detail AS  ( select REPORT_YEAR, REPORT_MONTH, CASE WHEN AREA_SALES_MANAGER_SEGMENT = 'Association' THEN 'Association ( Pace)' WHEN AREA_SALES_MANAGER_SEGMENT = 'Affinity' THEN 'Affinity ( Pace)' WHEN AREA_SALES_MANAGER_SEGMENT = 'Government' THEN 'Government ( Pace)' END AS SEGMENT , MARSHA_CODE AS MARSHA , SUM( NET_ROOMNIGHTS) AS RN , SUM( NET_ROOM_REVENUE) AS RV , CASE WHEN AREA_SALES_MANAGER_ORG_NAME IN ( 'Canada') THEN 'CAD' ELSE 'USD' END AS RV_CURRENCY FROM AW_SLS_PRD_AM.QUOTE_DETAIL WHERE REPORT_YEAR IN ( &CURYR.-3, &CURYR.-2, &CURYR.-1, &CURYR. ) AND AREA_SALES_MANAGER_SEGMENT IN ( 'Association', 'Affinity', 'Government') GROUP BY REPORT_YEAR, REPORT_MONTH, AREA_SALES_MANAGER_SEGMENT, MARSHA_CODE, AREA_SALES_MANAGER_ORG_NAME  ) ;",US_Account_Sales_ASAR_Project.sas
" CREATE TABLE AW_QUOTE_DETAIL_SUM AS SELECT REPORT_YEAR, REPORT_MONTH, SEGMENT, MARSHA, SUM( RN) AS RN, SUM( RV) AS RV, RV_CURRENCY FROM QUOTE_DETAIL GROUP BY REPORT_YEAR, REPORT_MONTH, SEGMENT, MARSHA, RV_CURRENCY ;",US_Account_Sales_ASAR_Project.sas
" CREATE TABLE AW_QUOTE_DETAIL_%EVAL( &CURYR.-&HOWMANY. ) AS SELECT A.REPORT_YEAR, A.REPORT_MONTH, A.SEGMENT, A.MARSHA, ( A.RN+0) AS RN_TY, ( B.RN+0) AS RN_LY, ( A.RV+0) AS RV_TY, ( B.RV+0) AS RV_LY, A.RV_CURRENCY FROM AW_QUOTE_DETAIL_SUM A LEFT JOIN ( SELECT * FROM AW_QUOTE_DETAIL_SUM WHERE REPORT_YEAR=%EVAL( &CURYR.-&ONEMORE. )) B ON A.REPORT_MONTH=B.REPORT_MONTH AND A.SEGMENT=B.SEGMENT AND A.MARSHA=B.MARSHA AND A.RV_CURRENCY=B.RV_CURRENCY WHERE A.REPORT_YEAR = %EVAL( &CURYR.-&HOWMANY. ) ;",US_Account_Sales_ASAR_Project.sas
 CREATE TABLE GROUP_PACE2 AS ( SELECT  *  FROM QUOTE_DETAIL UNION ALL SELECT  *  FROM MANUAL_ADJUSTMENTS);,US_Account_Sales_ASAR_Project.sas
" CREATE TABLE GROUP_PACE AS SELECT REPORT_YEAR, REPORT_MONTH, SEGMENT, MARSHA, RV_CURRENCY, SUM( RN_TY) AS RN_TY, SUM( RV_TY) AS RV_TY, SUM( RN_LY) AS RN_LY, SUM( RV_LY) AS RV_LY FROM GROUP_PACE2 GROUP BY REPORT_YEAR, REPORT_MONTH, SEGMENT, MARSHA, RV_CURRENCY ;",US_Account_Sales_ASAR_Project.sas
" CREATE TABLE AP_DATASET_%EVAL( &CURYR.-&HOWMANY. ) AS  ( SELECT %EVAL( &CURYR.-&HOWMANY. ) AS REPORT_YEAR, STAY_PD_MO AS REPORT_MONTH, CASE WHEN ROLE_TITLE IN ( 'Market Account Executive, Mid-Market','Area Account Executive, Mid-Market') THEN 'Mid-Market' WHEN ROLE_TITLE='Market Account Executive, EST' THEN 'EST' WHEN ROLE_TITLE='Market Account Executive, Airline' THEN 'Airline' WHEN ROLE_TITLE='Market Account Executive, Prospect' THEN 'Prospect' WHEN ROLE_TITLE='Market Account Executive, Whsale/FIT/Tour & Travel' THEN 'Wholesale' END AS SEGMENT , MARSHA , SUM( RN) AS RN , SUM( ROOM_REVENUE) AS RV , CASE WHEN MGR_ORG_NAME IN ( 'Canada') THEN 'CAD' ELSE 'USD' END AS RV_CURRENCY FROM AW_SLS_PRD_AM.AP_COMBINED_MISW_%EVAL( &CURYR.-&HOWMANY. ) WHERE ROLE_TITLE IN ( 'Market Account Executive, Mid-Market','Area Account Executive, Mid-Market','Market Account Executive, EST','Market Account Executive, Airline', 'Market Account Executive, Prospect','Market Account Executive, Whsale/FIT/Tour & Travel') GROUP BY REPORT_YEAR, STAY_PD_MO, ROLE_TITLE, MARSHA, MGR_ORG_NAME  ) ;",US_Account_Sales_ASAR_Project.sas
" CREATE TABLE ACCOUNT_PRODUCTION_SUM AS SELECT REPORT_YEAR, REPORT_MONTH, SEGMENT, MARSHA, SUM( RN) AS RN, SUM( RV) AS RV, RV_CURRENCY FROM AP_DATASET GROUP BY REPORT_YEAR, REPORT_MONTH, SEGMENT, MARSHA, RV_CURRENCY ;",US_Account_Sales_ASAR_Project.sas
" CREATE TABLE ACCOUNT_PRODUCTION_%EVAL( &CURYR.-&HOWMANY. ) AS SELECT A.REPORT_YEAR, A.REPORT_MONTH, A.SEGMENT, A.MARSHA, ( A.RN+0) AS RN_TY, ( B.RN+0) AS RN_LY, ( A.RV+0) AS RV_TY, ( B.RV+0) AS RV_LY, A.RV_CURRENCY FROM ACCOUNT_PRODUCTION_SUM A LEFT JOIN ( SELECT * FROM ACCOUNT_PRODUCTION_SUM WHERE REPORT_YEAR=%EVAL( &CURYR.-&ONEMORE. )) B ON A.REPORT_MONTH=B.REPORT_MONTH AND A.SEGMENT=B.SEGMENT AND A.MARSHA=B.MARSHA AND A.RV_CURRENCY=B.RV_CURRENCY WHERE A.REPORT_YEAR = %EVAL( &CURYR.-&HOWMANY. ) ;",US_Account_Sales_ASAR_Project.sas
" CREATE TABLE COMBINED_DATASETS AS ( SELECT  * , CASE WHEN  MARSHA='1189'  THEN 'PDXWI' WHEN  MARSHA='142'  THEN 'FRASI' WHEN  MARSHA='1439'  THEN 'TIASI' WHEN  MARSHA='1452'  THEN 'RIOSR' WHEN  MARSHA='357'  THEN 'BKKLC' WHEN  MARSHA='3894'  THEN 'SSASB' WHEN  MARSHA='828'  THEN 'PVDSI' WHEN  MARSHA='3571'  THEN 'CANWI' END AS MARSHA FROM GROUP_PACE UNION ALL SELECT  * , CASE WHEN  MARSHA='1189'  THEN 'PDXWI' WHEN  MARSHA='142'  THEN 'FRASI' WHEN  MARSHA='1439'  THEN 'TIASI' WHEN  MARSHA='1452'  THEN 'RIOSR' WHEN  MARSHA='357'  THEN 'BKKLC' WHEN  MARSHA='3894'  THEN 'SSASB' WHEN  MARSHA='828'  THEN 'PVDSI' WHEN  MARSHA='3571'  THEN 'CANWI' END AS MARSHA FROM ACCOUNT_PRODUCTION);",US_Account_Sales_ASAR_Project.sas
CREATE TABLE VALIDATE_PROPS AS ( SELECT  *  FROM COMBINED_DATASETS  WHERE MARSHA <= '99999');,US_Account_Sales_ASAR_Project.sas
CREATE TABLE VALID_PROP_DATA AS ( SELECT  *  FROM COMBINED_DATASETS  WHERE MARSHA <<> '99999');,US_Account_Sales_ASAR_Project.sas
CREATE TABLE VALIDATE_PROPS_NODUPE AS (SELECT DISTINCT MARSHA FROM VALIDATE_PROPS ORDER BY MARSHA);,US_Account_Sales_ASAR_Project.sas
" CREATE TABLE FIX_MARSHA_CODES AS SELECT A.REPORT_YEAR, A.REPORT_MONTH, A.SEGMENT, A.MARSHA, A.RN_TY, A.RN_LY, A.RV_TY, A.RV_LY, A.RV_CURRENCY FROM VALID_PROP_DATA A ;",US_Account_Sales_ASAR_Project.sas
" CREATE TABLE ACCOUNT_SALES_SUMMARY_LOAD1 AS ( SELECT  *  , FORMAT(AS_DATE, INT)  AS AS_DATE , FORMAT(RV_TY, FLOAT(10, 2))  AS RV_TY , FORMAT(RV_LY, FLOAT(10, 2))  AS RV_LY , FORMAT(SEGMENT, VARCHAR(100)) AS SEGMENT , FORMAT(RV_CURRENCY, VARCHAR(5)) AS RV_CURRENCY  FROM FIX_MARSHA_CODES  WHERE REPORT_MONTH < 10 AND REPORT_YEAR<&CURYR. OR ( REPORT_YEAR=&CURYR. AND REPORT_MONTH<=&SHORTPD. ) );",US_Account_Sales_ASAR_Project.sas
 CREATE TABLE MAX_DATE_TABLE AS SELECT MAX( AS_DATE) AS MAX_RPT_DATE FROM ACCOUNT_SALES_SUMMARY_LOAD1 ;,US_Account_Sales_ASAR_Project.sas
" CREATE TABLE ACCOUNT_SALES_SUMMARY_LOAD AS ( SELECT  *  , &MAX_DATE AS AS_DATE  FROM ACCOUNT_SALES_SUMMARY_LOAD1 );",US_Account_Sales_ASAR_Project.sas
"CREATE TABLE ACCOUNT_SLS_SUMMARY_CNT AS (SELECT AS_DATE, COUNT(AS_DATE),  FROM ACCOUNT_SALES_SUMMARY_LOAD GROUP BY AS_DATE );",US_Account_Sales_ASAR_Project.sas
"CREATE TABLE ""\\hdqmdm1fpcl4v1\dev-dss\Dev-dss\SalesForce1\Account_Sales_Project\&CURYRPD.\mrdw_fact_agg_us_account_sales.dat"" DATA=ACCOUNT_SALES_SUMMARY_LOAD AS ( SELECT * FROM ACCOUNT_SALES_SUMMARY_LOAD) ;",US_Account_Sales_ASAR_Project.sas
"CREATE TABLE ""\\hdqmdm1fpcl4v1\dev-dss\Dev-dss\SalesForce1\Account_Sales_Project\&CURYRPD.\mrdw_fact_agg_us_account_sales_control.dat"" DATA=ACCOUNT_SLS_SUMMARY_CNT AS ( SELECT * FROM ACCOUNT_SLS_SUMMARY_CNT) ;",US_Account_Sales_ASAR_Project.sas
" CREATE TABLE work.WDWE AS  (  select plu.marsha ,plu.brnd ,plu.hotname ,plu.MF ,plu.domint ,plu.RD ,str.SCOMP AS WCOMP ,'OCT' AS MNTH ,'' AS Custom ,str.timef ,plu.region ,SUM( str.maravail) AS maravail ,SUM( str.marsold) AS marsold ,SUM( str.marrev) AS marrev ,SUM( str.maravailly) AS maravailly ,SUM( str.marsoldly) AS marsoldly ,SUM( str.marrevly) AS marrevly ,SUM( str.mktavail) AS mktavail ,SUM( str.mktsold) AS mktsold ,SUM( str.mktrev) AS mktrev ,SUM( str.mktavailly) AS mktavailly ,SUM( str.mktsoldly) AS mktsoldly ,SUM( str.mktrevly) AS mktrevly , 1 AS Include ,CASE WHEN (  SUM( str.maravail) <> 0 AND SUM( str.mktavail) <> 0 ) THEN SUM( str.marrev) / SUM( str.maravail) / (  SUM ( str.mktrev) / SUM( str.mktavail) ) 100 ELSE NULL END AS RevPAR_Index, CASE WHEN (  SUM( str.maravail) <> 0 AND SUM( str.mktavail) <> 0 AND SUM( str.maravailly) <> 0 AND SUM( str.mktavailly) <> 0 ) THEN SUM( str.marrev) / SUM( str.maravail) / (  SUM( str.mktrev) / SUM( str.mktavail) ) * 100 / (  SUM( str.marrevly) / SUM( str.maravailly) / (  SUM( str.mktrevly) / SUM( str.mktavailly) ) * 100 ) - 1 ELSE NULL END AS RPI_chg, CASE WHEN (  SUM( str.marsold) <> 0 AND SUM( str.mktsold) <> 0 ) THEN (  SUM( str.marsold) / SUM( str.mktsold) ) * 100 ELSE NULL END AS Occ_Index, CASE WHEN (  SUM( str.marsold) <> 0 AND SUM( str.mktsold) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.mktsoldly) <> 0 ) THEN (  (  SUM( str.marsold) / SUM( str.mktsold) ) * 100 ) / (  (  SUM( str.marsoldly) / SUM( str.mktsoldly) ) * 100 ) - 1 ELSE NULL END AS OI_chg, CASE WHEN (  SUM( str.marsold) <> 0 AND SUM( str.mktsold) <> 0 ) THEN SUM( str.marrev) / SUM( str.marsold) / (  SUM( str.mktrev) / SUM( str.mktsold) ) * 100 ELSE NULL END AS ADR_Index, CASE WHEN (  SUM( str.marsold) <> 0 AND SUM( str.mktsold) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.mktsoldly) <> 0 AND SUM( str.marrevly) <> 0 AND SUM( str.mktrev) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.mktrevly) <> 0 AND SUM( str.mktsoldly) <> 0 ) THEN SUM( str.marrev) / SUM( str.marsold) / (  SUM( str.mktrev) / SUM( str.mktsold) ) * 100 / (  SUM( str.marrevly) / SUM( str.marsoldly) / (  SUM( str.mktrevly) / SUM( str.mktsoldly) ) * 100 ) - 1 ELSE NULL END AS ADR_chg ,CASE WHEN ( SUM( str.maravail) <> 0 AND SUM( str.marsold) <> 0) THEN SUM( str.marsold)/SUM( str.maravail) END AS MarOcc ,CASE WHEN ( SUM( str.marsold) <> 0 ) THEN SUM( str.marrev)/SUM( str.marsold) END AS MarADR ,CASE WHEN ( SUM( str.marsold) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.marrevly) <> 0 ) THEN ( ( SUM( str.marrev)/SUM( str.marsold))- ( SUM( str.marrevly)/SUM( str.marsoldly)))/( SUM( str.marrevly)/SUM( str.marsoldly)) END AS MarADRChg ,CASE WHEN ( SUM( str.maravail) <> 0) THEN SUM( str.marrev)/SUM( str.maravail) END AS MarRevPar , CASE WHEN ( SUM( str.maravail) <> 0 AND SUM( str.maravailly) <> 0 AND SUM( str.marrevly) <> 0 ) THEN ( ( SUM( str.marrev)/SUM( str.maravail))- ( SUM( str.marrevly)/SUM( str.maravailly)))/( SUM( str.marrevly)/SUM( str.maravailly)) END AS MarREVPARChg , CASE WHEN ( SUM( str.mktavail) <> 0) THEN SUM( str.mktsold) /SUM( str.mktavail) END AS MktOcc , CASE WHEN ( SUM( str.mktsold) <> 0 ) THEN SUM( str.mktrev)/SUM( str.mktsold) END AS MktADR ,CASE WHEN ( SUM( str.mktavail) <> 0) THEN SUM( str.mktrev)/SUM( str.mktavail) END AS MktRevPar ,CASE WHEN (  SUM( str.maravail) <> 0 AND SUM( str.mktavail) <> 0 AND SUM( str.maravailly) <> 0 AND SUM( str.mktavailly) <> 0 AND SUM( str.mktrev) <> 0 AND SUM( str.mktrevly) <> 0 AND SUM( str.marrev) <> 0 AND SUM( str.marrevly) <> 0 ) THEN CASE WHEN SUM( str.marrev) / SUM( str.maravail) / (  SUM( str.mktrev) / SUM( str.mktavail) ) * 100 / (  SUM( str.marrevly) / SUM( str.maravailly) / (  SUM( str.mktrevly) / SUM( str.mktavailly) ) * 100 ) - 1 >= 0 THEN 1 ELSE 0 END ELSE NULL END AS RPI_Up, CASE WHEN (  SUM( str.maravail) <> 0 AND SUM( str.mktavail) <> 0 AND SUM( str.maravailly) <> 0 AND SUM( str.mktavailly) <> 0 AND SUM( str.mktrev) <> 0 AND SUM( str.mktrevly) <> 0 AND SUM( str.marrev) <> 0 AND SUM( str.marrevly) <> 0 ) THEN CASE WHEN SUM( str.marrev) / SUM( str.maravail) / (  SUM( str.mktrev) / SUM( str.mktavail) ) * 100 / (  SUM( str.marrevly) / SUM( str.maravailly) / (  SUM( str.mktrevly) / SUM( str.mktavailly) ) * 100 ) - 1 >= 0 THEN 0 ELSE 1 END ELSE NULL END AS RPI_Down, CASE WHEN (  SUM( str.marsold) <> 0 AND SUM( str.mktsold) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.mktsoldly) <> 0 ) THEN CASE WHEN (  (  SUM( str.marsold) / SUM( str.mktsold) ) * 100 ) / (  (  SUM( str.marsoldly) / SUM( str.mktsoldly) ) * 100 ) - 1 > 0 THEN 1 ELSE 0 END ELSE NULL END AS OI_Up, CASE WHEN (  SUM( str.marsold) <> 0 AND SUM( str.mktsold) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.mktsoldly) <> 0 ) THEN CASE WHEN (  (  SUM( str.marsold) / SUM( str.mktsold) ) * 100 ) / (  (  SUM( str.marsoldly) / SUM( str.mktsoldly) ) * 100 ) - 1 > 0 THEN 0 ELSE 1 END ELSE NULL END AS OI_Down, CASE WHEN (  SUM( str.marsold) <> 0 AND SUM( str.mktsold) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.mktsoldly) <> 0 AND SUM( str.marrevly) <> 0 AND SUM( str.mktrev) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.mktrevly) <> 0 AND SUM( str.mktsoldly) <> 0 ) THEN CASE WHEN SUM( str.marrev) / SUM( str.marsold) / (  SUM( str.mktrev) / SUM( str.mktsold) ) * 100 / (  SUM( str.marrevly) / SUM( str.marsoldly) / (  SUM( str.mktrevly) / SUM( str.mktsoldly) ) * 100 ) - 1 > 0 THEN 1 ELSE 0 END ELSE NULL END AS ADR_UP, CASE WHEN (  SUM( str.marsold) <> 0 AND SUM( str.mktsold) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.mktsoldly) <> 0 AND SUM( str.marrevly) <> 0 AND SUM( str.mktrev) <> 0 AND SUM( str.marsoldly) <> 0 AND SUM( str.mktrevly) <> 0 AND SUM( str.mktsoldly) <> 0 ) THEN CASE WHEN SUM( str.marrev) / SUM( str.marsold) / (  SUM( str.mktrev) / SUM( str.mktsold) ) * 100 / (  SUM( str.marrevly) / SUM( str.marsoldly) / (  SUM( str.mktrevly) / SUM( str.mktsoldly) ) * 100 ) - 1 > 0 THEN 0 ELSE 1 END ELSE NULL END AS ADR_Down, plu.acomp, plu.owner, plu.manager, plu.franchisee, plu.rd, plu.str_market, plu.cluster_name, plu.opendate, '' AS high_impact, plu.mvp, '' AS redo_mn, '' AS redo_ytd, plu.gen, plu.sfo_area, '' AS sfo_leader, plu.sfo_market, '' AS sfogroup, plu.hCLASS, plu.avp, plu.sub_brand, plu.misw_flag, plu.division FROM aw_cmp_dbo.STR_MONTHLY_DATA str LEFT JOIN aw_TGT_BUS_DBO.PROPERTY_MASTER_HIST PLU ON str.marsha = plu.marsha AND str.asof_yrmo = plu.asof_yrmo WHERE str.timef IN ( 'MONTH_WD','MONTH_WE','LAST3_WD','LAST3_WE','LAST12_WD','LAST12_WE','YTD_WD','YTD_WE') AND str.Currency_type = 'Constant USD' AND str.asof_yrmo = ( select max( asof_yrmo)from aw_cmp_dbo.STR_MONTHLY_DATA) AND str.yrmnth = ( select max( yrmnth)from aw_cmp_dbo.STR_MONTHLY_DATA) GROUP BY plu.marsha, plu.brnd, str.scomp, str.timef, plu.hotname, plu.mf, plu.domint, plu.rd, plu.acomp, plu.region, plu.owner, plu.manager, plu.franchisee, plu.rd, plu.str_market, plu.cluster_name, plu.opendate, plu.mvp, plu.gen, plu.sfo_area, plu.sfo_market, plu.hCLASS, plu.avp, plu.sub_brand, plu.misw_flag, plu.division ORDER BY MARSHA   ) ;",wcomp aw.sas
"CREATE TABLE WDWECRUNCH AS ( SELECT  * , CASE WHEN  maravail<>0  THEN marsold/maravail ELSE 0 END AS MAROCC, CASE WHEN  MARAVAILLY<>0  THEN MARSOLDLY/MARAVAILLY ELSE 0 END AS MAROCCLY FROM WDWE );",wcomp aw.sas
ALTER TABLE WDWECRUNCH DROP COLUMN marocc ;,wcomp aw.sas
" CREATE TABLE WDWECRUNCH AS ( SELECT  *  , ( MAROCC - MAROCCLY ) AS MARPTCHG  FROM WDWECRUNCH );",wcomp aw.sas
CREATE TABLE WDWECRUNCH AS ( SELECT  *  FROM WDWECRUNCH );,wcomp aw.sas
ALTER TABLE WDWECRUNCH DROP COLUMN MAROCCLY ;,wcomp aw.sas
" CREATE TABLE WDWECRUNCH_FINAL AS SELECT MARSHA, BRND, HOTNAME, MF, DOMINT, RD, WCOMP, MNTH, CUSTOM, TIMEF, REGION, MARAVAIL, MARSOLD, MARREV, MARAVAILLY, MARSOLDLY, MARREVLY, MKTAVAIL, MKTSOLD, MKTREV, MKTAVAILLY, MKTSOLDLY, MKTREVLY, INCLUDE, REVPAR_INDEX, RPI_CHG, OCC_INDEX, OI_CHG, ADR_INDEX, ADR_CHG, MAROCC, MARPTCHG, MARADR, MARADRCHG, MARREVPAR, MARREVPARCHG, MKTOCC, MKTADR, MKTREVPAR, RPI_UP, RPI_DOWN, OI_UP, OI_DOWN, ADR_UP, ADR_DOWN, ACOMP, OWNER, MANAGER, FRANCHISEE, RD, STR_MARKET, CLUSTER_NAME, OPENDATE, HIGH_IMPACT, RD AS RD_1, MVP, REDO_MN, REDO_YTD, GEN, SFO_AREA, SFO_LEADER, SFO_MARKET, SFOGROUP, HCLASS, AVP, SUB_BRAND, MISW_FLAG, DIVISION FROM WDWECRUNCH;",wcomp aw.sas
" CREATE TABLE WDWECRUNCH_FINAL AS ( SELECT  * , CASE WHEN  TIMEF = 'LAST12_WD'  THEN 'L12-WD' WHEN  TIMEF = 'LAST12_WE'  THEN 'L12-WE' WHEN  TIMEF = 'LAST3_WD'  THEN 'L3-WD' WHEN  TIMEF = 'LAST3_WE'  THEN 'L3-WE' WHEN  TIMEF = 'MONTH_WD'  THEN 'MN-WD' WHEN  TIMEF = 'MONTH_WE'  THEN 'MN-WE' WHEN  TIMEF = 'YTD_WD'  THEN 'YTD-WD' WHEN  TIMEF = 'YTD_WE'  THEN 'YTD-WE' END AS TIMEF FROM WDWECRUNCH_FINAL );",wcomp aw.sas
"SELECT * FROM WDWECRUNCH_FINAL ORDER BY MARSHA ,TIMEF;",wcomp aw.sas
CREATE TABLE '\\Hdqmdm1fpcl4v1\lodg-bi\Production\Star_Reporting_Monthly\02_CC\WDWE_CRUNCH\WDWE_AW.csv' AS ( SELECT * FROM WDWECRUNCH_FINAL) ;,wcomp aw.sas
 CREATE TABLE prop_master AS  (  SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER  ) ;,Weekender Gross Tracking.sas
" CREATE TABLE rateoffer2 AS select distinct Property_Code, Rate_Program, Product_Code, Rate_Offer_Name FROM rateoffer;",Weekender Gross Tracking.sas
"SELECT DISTINCT * FROM rateoffer2 ORDER BY property_code ,rate_program;",Weekender Gross Tracking.sas
" CREATE TABLE weekender_loaded AS select distinct property_code, 'Yes' AS Weekender_Loaded FROM rateoffer2 WHERE Product_Code='P04747';",Weekender Gross Tracking.sas
 CREATE TABLE rawgross AS  (  SELECT * FROM AW_TGT_BUS_DBO.MRDW_BI_FACT_Gross_NOS WHERE stay_year = 2019 fetch first 1000 rows only  ) ;,Weekender Gross Tracking.sas
" CREATE TABLE grossdata_package AS  (  SELECT property_cd AS marsha, CONFO_CREATE_DT AS date_dt, RATE_PGM_CD , CASE WHEN STAY_DOW IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' END AS wdwe , SUM( ROOMS_QTY) AS rn, SUM( ROOM_REV_CUSD_SUB_AMT) AS room_rv , SUM( TOT_REV_CUSD_SUB_AMT) AS tot_rv FROM AW_TGT_BUS_DBO.MRDW_BI_FACT_Gross_NOS A WHERE stay_year >= 2018 AND CONFO_CREATE_DT >= '2018-01-01' AND CONFO_CREATE_DT <= &enddt. AND a.MARKET_PREFIX_CD IN ( '21', '23', '24') AND BRAND_CD='CY' AND DIVISION_TXT='AMERICAS' GROUP BY property_cd, CONFO_CREATE_DT, RATE_PGM_CD , CASE WHEN STAY_DOW IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' end  ) ;",Weekender Gross Tracking.sas
" CREATE TABLE grossdata_allpkg AS  (  SELECT property_cd AS marsha, CONFO_CREATE_DT AS date_dt , CASE WHEN STAY_DOW IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' END AS wdwe , SUM( ROOMS_QTY) AS pkg_rn, SUM( ROOM_REV_CUSD_SUB_AMT) AS pkg_rv FROM AW_TGT_BUS_DBO.MRDW_BI_FACT_Gross_NOS A WHERE stay_year >= 2018 AND CONFO_CREATE_DT >= '2018-01-01' AND CONFO_CREATE_DT <= &enddt. AND a.MARKET_PREFIX_CD IN ( '21', '23', '24') AND BRAND_CD='CY' AND DIVISION_TXT='AMERICAS' GROUP BY property_cd, CONFO_CREATE_DT , CASE WHEN STAY_DOW IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' end  ) ;",Weekender Gross Tracking.sas
" CREATE TABLE grossdata_NQ AS  (  SELECT property_cd AS marsha, CONFO_CREATE_DT AS date_dt , CASE WHEN STAY_DOW IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' END AS wdwe , SUM( ROOMS_QTY) AS nq_rn, SUM( ROOM_REV_CUSD_SUB_AMT) AS nq_rv FROM AW_TGT_BUS_DBO.MRDW_BI_FACT_Gross_NOS A WHERE stay_year >= 2018 AND CONFO_CREATE_DT >= '2018-01-01' AND CONFO_CREATE_DT <= &enddt. AND a.MARKET_PREFIX_CD IN ( '10', '12', '30', '34', '37', '20', '22', '23', '24', '21') AND BRAND_CD='CY' AND DIVISION_TXT='AMERICAS' GROUP BY property_cd, CONFO_CREATE_DT , CASE WHEN STAY_DOW IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' end  ) ;",Weekender Gross Tracking.sas
" CREATE TABLE grossdata_TR AS  (  SELECT property_cd AS marsha, CONFO_CREATE_DT AS date_dt , CASE WHEN STAY_DOW IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' END AS wdwe , SUM( ROOMS_QTY) AS tr_rn, SUM( ROOM_REV_CUSD_SUB_AMT) AS tr_rv FROM AW_TGT_BUS_DBO.MRDW_BI_FACT_Gross_NOS A WHERE stay_year >= 2018 AND CONFO_CREATE_DT >= '2018-01-01' AND CONFO_CREATE_DT <= &enddt. AND BRAND_CD='CY' AND DIVISION_TXT='AMERICAS' AND MARKET_CATEGORY_NM='TRANSIENT/RENTALS' GROUP BY property_cd, CONFO_CREATE_DT , CASE WHEN STAY_DOW IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' end  ) ;",Weekender Gross Tracking.sas
" CREATE TABLE grossdata_all AS  (  SELECT property_cd AS marsha, CONFO_CREATE_DT AS date_dt , CASE WHEN STAY_DOW IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' END AS wdwe , SUM( ROOMS_QTY) AS all_rn, SUM( ROOM_REV_CUSD_SUB_AMT) AS all_rv FROM AW_TGT_BUS_DBO.MRDW_BI_FACT_Gross_NOS A WHERE stay_year >= 2018 AND CONFO_CREATE_DT >= '2018-01-01' AND CONFO_CREATE_DT <= &enddt. AND BRAND_CD='CY' AND DIVISION_TXT='AMERICAS' GROUP BY property_cd, CONFO_CREATE_DT , CASE WHEN STAY_DOW IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' end  ) ;",Weekender Gross Tracking.sas
" CREATE TABLE weekender AS select a.marsha, a.date_dt, a.wdwe , SUM( rn) AS rn, SUM( room_rv) AS room_rv , SUM( tot_rv) AS tot_rv FROM grossdata_package AS a INNER JOIN rateoffer2 AS b ON a.marsha=b.property_code AND a.rate_pgm_cd=b.rate_program WHERE b.Product_Code='P04747' GROUP BY a.marsha, a.date_dt, a.wdwe;",Weekender Gross Tracking.sas
" CREATE TABLE allgross AS select a.*, b.rn, b.room_rv, b.tot_rv , c.pkg_rn, c.pkg_rv , d.nq_rn, d.nq_rv , e.tr_rn, e.tr_rv FROM grossdata_all AS a LEFT JOIN weekender AS b ON a.marsha=b.marsha AND a.date_dt=b.date_dt AND a.wdwe=b.wdwe LEFT JOIN grossdata_allpkg AS c ON a.marsha=c.marsha AND a.date_dt=c.date_dt AND a.wdwe=c.wdwe LEFT JOIN grossdata_NQ AS d ON a.marsha=d.marsha AND a.date_dt=d.date_dt AND a.wdwe=d.wdwe LEFT JOIN grossdata_TR AS e ON a.marsha=e.marsha AND a.date_dt=e.date_dt AND a.wdwe=e.wdwe;",Weekender Gross Tracking.sas
" CREATE TABLE allgross2 AS select coalesce( a.marsha,b.marsha) AS marsha , coalesce( a.date_dt,b.date_dt+364) AS book_date format date9. , coalesce( a.wdwe,b.wdwe) AS wdwe , a.all_rn, a.all_rv , a.rn, a.room_rv, a.tot_rv , a.pkg_rn, a.pkg_rv , a.nq_rn, a.nq_rv , a.tr_rn, a.tr_rv , b.all_rn AS all_rn_ly, b.all_rv AS all_rv_ly , b.rn AS rn_ly, b.room_rv AS room_rv_ly, b.tot_rv AS tot_rv_ly , b.pkg_rn AS pkg_rn_ly, b.pkg_rv AS pkg_rv_ly , b.nq_rn AS nq_rn_ly, b.nq_rv AS nq_rv_ly , b.tr_rn AS tr_rn_ly, b.tr_rv AS tr_rv_ly FROM allgross AS a full JOIN allgross AS b ON a.marsha=b.marsha AND a.date_dt=b.date_dt+364 AND a.wdwe=b.wdwe;",Weekender Gross Tracking.sas
" CREATE TABLE allgross3 AS select marsha, wdwe , CASE WHEN book_date >= '01jan2019'd AND book_date <= '22jun2019'd THEN 'Jan 1 - Jun 22, 2019' when book_date >= '23jun2019'd AND book_date <= '03aug2019'd THEN 'Jun 23 - Aug 3, 2019' when book_date >= '04aug2019'd AND book_date <= '10aug2019'd THEN 'August 4 - 10, 2019' when book_date >= '11aug2019'd AND book_date <= &enddt2. THEN &dt_rng. END AS timeframe , SUM( all_rn) AS all_rn, SUM( all_rv) AS all_rv , SUM( rn) AS weekender_rn, SUM( room_rv) AS weekender_rm_rv , SUM( tot_rv) AS weekender_tot_rv , SUM( pkg_rn) AS pkg_rn, SUM( pkg_rv) AS pkg_rv , SUM( nq_rn) AS nq_rn, SUM( nq_rv) AS nq_rv , SUM( tr_rn) AS tr_rn, SUM( tr_rv) AS tr_rv , SUM( all_rn_ly) AS all_rn_ly, SUM( all_rv_ly) AS all_rv_ly , SUM( rn_ly) AS weekender_rn_ly, SUM( room_rv_ly) AS weekender_rm_rv_ly , SUM( tot_rv_ly) AS weekender_tot_rv_ly , SUM( pkg_rn_ly) AS pkg_rn_ly, SUM( pkg_rv_ly) AS pkg_rv_ly , SUM( nq_rn_ly) AS nq_rn_ly, SUM( nq_rv_ly) AS nq_rv_ly , SUM( tr_rn_ly) AS tr_rn_ly, SUM( tr_rv_ly) AS tr_rv_ly FROM allgross2 WHERE book_date>= '01jan2019'd AND book_date <= &enddt2. GROUP BY marsha, wdwe, calculated timeframe;",Weekender Gross Tracking.sas
" CREATE TABLE allgross4 AS select b.marsha, b.brnd, b.region, b.division, b.country, b.str_market, b.hotel_name, b.hcap, b.acomp, b.mf, b.hCLASS , b.state, b.country, b.owner, b.manager, b.avp, b.rd, b.adrm, b.GRMRS_HOTEL, b.GRMRS_REVMGR, b.GRMRS_TMLDR , c.weekender_loaded , a.* FROM allgross3 AS a INNER JOIN prop_master AS b ON a.marsha=b.marsha LEFT JOIN weekender_loaded AS c ON a.marsha=c.property_code WHERE b.brnd='CY' AND b.region IN ( 'E_', 'W_', 'C_' ) ;",Weekender Gross Tracking.sas
" CREATE TABLE rn_tw AS select distinct marsha, 'Yes' AS This_Week_Production FROM allgross4 WHERE timeframe=&dt_rng. AND weekender_rn>0;",Weekender Gross Tracking.sas
" CREATE TABLE allgross5 AS select a.*, b.this_week_production FROM allgross4 AS a LEFT JOIN rn_tw AS b ON a.marsha=b.marsha;",Weekender Gross Tracking.sas
 CREATE TABLE wkender.rn_tw AS ( SELECT  *  FROM rn_tw );,Weekender Gross Tracking.sas
 CREATE TABLE wkender.allgross4 AS ( SELECT  *  FROM allgross4 );,Weekender Gross Tracking.sas
 CREATE TABLE wkender.allgross3 AS ( SELECT  *  FROM allgross3 );,Weekender Gross Tracking.sas
 CREATE TABLE wkender.allgross2 AS ( SELECT  *  FROM allgross2 );,Weekender Gross Tracking.sas
 CREATE TABLE wkender.allgross AS ( SELECT  *  FROM allgross );,Weekender Gross Tracking.sas
 CREATE TABLE prop_master AS  (  SELECT * FROM AW_TGT_BUS_DBO.PROPERTY_MASTER  ) ;,Weekender Std & Pd.sas
" CREATE TABLE rateoffer2 AS select distinct Property_Code, Rate_Program, Product_Code, Rate_Offer_Name FROM rateoffer;",Weekender Std & Pd.sas
"SELECT DISTINCT * FROM rateoffer2 ORDER BY property_code ,rate_program;",Weekender Std & Pd.sas
" CREATE TABLE weekender_loaded AS select distinct property_code, 'Yes' AS Weekender_Loaded FROM rateoffer2 WHERE Product_Code='P04747';",Weekender Std & Pd.sas
 CREATE TABLE rawstdpd AS  (  SELECT * FROM AW_TGT_BUS_DBO.MRDW_BI_FACT_STAYED_PAID_NOS WHERE stay_year = 2019 fetch first 1000 rows only  ) ;,Weekender Std & Pd.sas
" CREATE TABLE stdpddata_package AS  (  SELECT property_cd AS marsha, STAY_DT AS date_dt, CURR_RATE_PGM_CD , CASE WHEN STAY_DOW IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' END AS wdwe , SUM( CURR_ROOMS_QTY) AS rn, SUM( CURR_ROOM_REV_CUSD_SUB_AMT) AS room_rv , SUM( CURR_TOT_REV_CUSD_SUB_AMT) AS tot_rv FROM AW_TGT_BUS_DBO.MRDW_BI_FACT_STAYED_PAID_NOS A WHERE stay_year >= 2018 AND STAY_DT >= '2018-01-01' AND STAY_DT <= &enddt. AND a.CURR_MARKET_PREFIX_CD IN ( '21', '23', '24') AND BRAND_CD='CY' AND DIVISION_TXT='AMERICAS' AND nos_status_cd = 'A' GROUP BY property_cd, STAY_DT, CURR_RATE_PGM_CD , CASE WHEN STAY_DOW IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' end  ) ;",Weekender Std & Pd.sas
" CREATE TABLE stdpddata_allpkg AS  (  SELECT property_cd AS marsha, STAY_DT AS date_dt , CASE WHEN STAY_DOW IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' END AS wdwe , SUM( CURR_ROOMS_QTY) AS pkg_rn, SUM( CURR_ROOM_REV_CUSD_SUB_AMT) AS pkg_rv FROM AW_TGT_BUS_DBO.MRDW_BI_FACT_STAYED_PAID_NOS A WHERE stay_year >= 2018 AND STAY_DT >= '2018-01-01' AND STAY_DT <= &enddt. AND a.CURR_MARKET_PREFIX_CD IN ( '37','21', '23', '24') AND BRAND_CD='CY' AND DIVISION_TXT='AMERICAS' AND nos_status_cd = 'A' GROUP BY property_cd, STAY_DT , CASE WHEN STAY_DOW IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' end  ) ;",Weekender Std & Pd.sas
" CREATE TABLE stdpddata_NQ AS  (  SELECT property_cd AS marsha, STAY_DT AS date_dt , CASE WHEN STAY_DOW IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' END AS wdwe , SUM( CURR_ROOMS_QTY) AS nq_rn, SUM( CURR_ROOM_REV_CUSD_SUB_AMT) AS nq_rv FROM AW_TGT_BUS_DBO.MRDW_BI_FACT_STAYED_PAID_NOS A WHERE stay_year >= 2018 AND STAY_DT >= '2018-01-01' AND STAY_DT <= &enddt. AND a.CURR_MARKET_PREFIX_CD IN ( '10', '12', '30', '34', '37', '20', '22', '23', '24', '21') AND BRAND_CD='CY' AND DIVISION_TXT='AMERICAS' AND nos_status_cd = 'A' GROUP BY property_cd, STAY_DT , CASE WHEN STAY_DOW IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' end  ) ;",Weekender Std & Pd.sas
" CREATE TABLE stdpddata_TR AS  (  SELECT property_cd AS marsha, STAY_DT AS date_dt , CASE WHEN STAY_DOW IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' END AS wdwe , SUM( CURR_ROOMS_QTY) AS tr_rn, SUM( CURR_ROOM_REV_CUSD_SUB_AMT) AS tr_rv FROM AW_TGT_BUS_DBO.MRDW_BI_FACT_STAYED_PAID_NOS A WHERE stay_year >= 2018 AND STAY_DT >= '2018-01-01' AND STAY_DT <= &enddt. AND BRAND_CD='CY' AND DIVISION_TXT='AMERICAS' AND CURR_MARKET_CATEGORY_NM='TRANSIENT/RENTALS' AND nos_status_cd = 'A' GROUP BY property_cd, STAY_DT , CASE WHEN STAY_DOW IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' end  ) ;",Weekender Std & Pd.sas
" CREATE TABLE stdpddata_all AS  (  SELECT property_cd AS marsha, STAY_DT AS date_dt , CASE WHEN STAY_DOW IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' END AS wdwe , SUM( CURR_ROOMS_QTY) AS all_rn, SUM( CURR_ROOM_REV_CUSD_SUB_AMT) AS all_rv FROM AW_TGT_BUS_DBO.MRDW_BI_FACT_STAYED_PAID_NOS A WHERE stay_year >= 2018 AND STAY_DT >= '2018-01-01' AND STAY_DT <= &enddt. AND BRAND_CD='CY' AND DIVISION_TXT='AMERICAS' AND nos_status_cd = 'A' GROUP BY property_cd, STAY_DT , CASE WHEN STAY_DOW IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' end  ) ;",Weekender Std & Pd.sas
" CREATE TABLE weekender AS select a.marsha, a.date_dt, a.wdwe , SUM( rn) AS we_rn, SUM( room_rv) AS we_room_rv , SUM( tot_rv) AS we_tot_rv FROM stdpddata_package AS a INNER JOIN rateoffer2 AS b ON a.marsha=b.property_code AND a.CURR_RATE_PGM_CD=b.rate_program WHERE b.Product_Code='P04747' GROUP BY a.marsha, a.date_dt, a.wdwe;",Weekender Std & Pd.sas
" CREATE TABLE stdpddata_2KED AS  (  SELECT property_cd AS marsha, STAY_DT AS date_dt , CASE WHEN STAY_DOW IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' END AS wdwe , SUM( CURR_ROOMS_QTY) AS TKED_rn, SUM( CURR_ROOM_REV_CUSD_SUB_AMT) AS TKED_rv , SUM( CURR_TOT_REV_CUSD_SUB_AMT) AS TKED_tot_rv FROM AW_TGT_BUS_DBO.MRDW_BI_FACT_STAYED_PAID_NOS A WHERE stay_year >= 2019 AND a.stay_month > 6 AND STAY_DT >= &C2k_beg. AND STAY_DT <= &enddt. AND a.curr_rate_pgm_cd IN ( 'UBUN','UBUP','UBUR','UBUS','UBUT','UBUX') AND BRAND_CD='CY' AND DIVISION_TXT='AMERICAS' AND nos_status_cd = 'A' GROUP BY property_cd, STAY_DT , CASE WHEN STAY_DOW IN ( 'FRI', 'SAT') THEN 'WE' ELSE 'WD' end  ) ;",Weekender Std & Pd.sas
" CREATE TABLE allstdpd AS select a.*, b.we_rn, b.we_room_rv, b.we_tot_rv , c.pkg_rn, c.pkg_rv , d.nq_rn, d.nq_rv , e.tr_rn, e.tr_rv , f.TKED_RN, f.TKED_RV, f.TKED_TOT_RV FROM stdpddata_all AS a LEFT JOIN weekender AS b ON a.marsha=b.marsha AND a.date_dt=b.date_dt AND a.wdwe=b.wdwe LEFT JOIN stdpddata_allpkg AS c ON a.marsha=c.marsha AND a.date_dt=c.date_dt AND a.wdwe=c.wdwe LEFT JOIN stdpddata_NQ AS d ON a.marsha=d.marsha AND a.date_dt=d.date_dt AND a.wdwe=d.wdwe LEFT JOIN stdpddata_TR AS e ON a.marsha=e.marsha AND a.date_dt=e.date_dt AND a.wdwe=e.wdwe LEFT JOIN stdpddata_2KED AS f ON a.marsha=f.marsha AND a.date_dt=f.date_dt AND a.wdwe=f.wdwe ;",Weekender Std & Pd.sas
" CREATE TABLE allstdpd2 AS select coalesce( a.marsha,b.marsha) AS marsha , coalesce( a.date_dt,b.date_dt+364) AS book_date format date9. , coalesce( a.wdwe,b.wdwe) AS wdwe , a.all_rn, a.all_rv , a.we_rn, a.we_room_rv, a.we_tot_rv , a.pkg_rn, a.pkg_rv , a.nq_rn, a.nq_rv , a.tr_rn, a.tr_rv , a.TKED_RN, a.TKED_RV, a.TKED_TOT_RV , b.all_rn AS all_rn_ly, b.all_rv AS all_rv_ly , b.pkg_rn AS pkg_rn_ly, b.pkg_rv AS pkg_rv_ly , b.nq_rn AS nq_rn_ly, b.nq_rv AS nq_rv_ly , b.tr_rn AS tr_rn_ly, b.tr_rv AS tr_rv_ly FROM allstdpd AS a full JOIN allstdpd AS b ON a.marsha=b.marsha AND a.date_dt=b.date_dt+364 AND a.wdwe=b.wdwe;",Weekender Std & Pd.sas
" CREATE TABLE allstdpd3 AS select marsha, wdwe , CASE WHEN book_date >= '01jan2019'd AND book_date <= '22jun2019'd THEN 'Jan 1 - Jun 22, 2019' when book_date >= '23jun2019'd AND book_date <= '03aug2019'd THEN 'Jun 23 - Aug 3, 2019' when book_date >= '04aug2019'd AND book_date <= '10aug2019'd THEN 'August 4 - 10, 2019' when book_date >= '11aug2019'd AND book_date <= &enddt2. THEN &dt_rng. END AS timeframe , SUM( all_rn) AS all_rn, SUM( all_rv) AS all_rv , SUM( we_rn) AS weekender_rn, SUM( we_room_rv) AS weekender_rm_rv , SUM( we_tot_rv) AS weekender_tot_rv , SUM( pkg_rn) AS pkg_rn, SUM( pkg_rv) AS pkg_rv , SUM( nq_rn) AS nq_rn, SUM( nq_rv) AS nq_rv , SUM( tr_rn) AS tr_rn, SUM( tr_rv) AS tr_rv , SUM( TKED_RN) AS TKED_rn, SUM( TKED_RV) AS TKED_rm_rv,SUM( TKED_TOT_RV) AS TKED_tot_rv , SUM( all_rn_ly) AS all_rn_ly, SUM( all_rv_ly) AS all_rv_ly , SUM( pkg_rn_ly) AS pkg_rn_ly, SUM( pkg_rv_ly) AS pkg_rv_ly , SUM( nq_rn_ly) AS nq_rn_ly, SUM( nq_rv_ly) AS nq_rv_ly , SUM( tr_rn_ly) AS tr_rn_ly, SUM( tr_rv_ly) AS tr_rv_ly FROM allstdpd2 WHERE book_date>= '01jan2019'd AND book_date <= &enddt2. GROUP BY marsha, wdwe, calculated timeframe;",Weekender Std & Pd.sas
" CREATE TABLE allstdpd4 AS select b.marsha, b.brnd, b.region, b.division, b.country, b.str_market, b.hotel_name, b.hcap, b.acomp, b.mf, b.hCLASS , b.state, b.country, b.owner, b.manager, b.avp, b.rd, b.adrm, b.GRMRS_HOTEL, b.GRMRS_REVMGR, b.GRMRS_TMLDR , c.weekender_loaded , a.* FROM allstdpd3 AS a INNER JOIN prop_master AS b ON a.marsha=b.marsha LEFT JOIN weekender_loaded AS c ON a.marsha=c.property_code WHERE b.brnd='CY' AND b.region IN ( 'E_', 'W_', 'C_' ) ;",Weekender Std & Pd.sas
" CREATE TABLE rn_tw AS select distinct marsha, 'Yes' AS This_Week_Production FROM allstdpd4 WHERE timeframe=&dt_rng. AND weekender_rn>0;",Weekender Std & Pd.sas
" CREATE TABLE allstdpd5 AS select a.*, b.this_week_production FROM allstdpd4 AS a LEFT JOIN rn_tw AS b ON a.marsha=b.marsha;",Weekender Std & Pd.sas
 CREATE TABLE allstdpd6_twonly AS ( SELECT  *  FROM allstdpd5  WHERE This_Week_Production='Yes');,Weekender Std & Pd.sas
"SELECT * FROM allstdpd6_twonly ORDER BY MARSHA ,BRND ,REGION ,DIVISION ,COUNTRY ,STR_MARKET ,HOTEL_NAME ,HCAP ,ACOMP ,MF ,HCLASS ,STATE ,OWNER ,MANAGER ,AVP ,RD ,ADRM ,GRMRS_HOTEL ,GRMRS_REVMGR ,GRMRS_TMLDR ,Weekender_Loaded ,wdwe ,timeframe ,This_Week_Production;",Weekender Std & Pd.sas
"CREATE TABLE wkender.allstdpd6_twonly_sum AS (SELECT STATE, OWNER, MANAGER, AVP, RD, ADRM, GRMRS_HOTEL, GRMRS_REVMGR, GRMRS_TMLDR, Weekender_Loaded, SUM(all_rn) AS all_rn, SUM(all_rv) AS all_rv, SUM(weekender_rn) AS weekender_rn, SUM(weekender_rm_rv) AS weekender_rm_rv, SUM(weekender_tot_rv) AS weekender_tot_rv, SUM(TKED_rn) AS TKED_rn, SUM(TKED_rm_rv) AS TKED_rm_rv, SUM(TKED_tot_rv) AS TKED_tot_rv, SUM(pkg_rn) AS pkg_rn, SUM(pkg_rv) AS pkg_rv, SUM(nq_rn) AS nq_rn, SUM(nq_rv) AS nq_rv, SUM(tr_rn) AS tr_rn, SUM(tr_rv) AS tr_rv, SUM(all_rn_ly) AS all_rn_ly, SUM(all_rv_ly) AS all_rv_ly, SUM(pkg_rn_ly) AS pkg_rn_ly, SUM(pkg_rv_ly) AS pkg_rv_ly, SUM(nq_rn_ly) AS nq_rn_ly, SUM(nq_rv_ly) AS nq_rv_ly, SUM(tr_rn_ly) AS tr_rn_ly, SUM(tr_rv_ly) AS tr_rv_ly FROM allstdpd6_twonly WHERE timeframe='Aug 11 - Dec 7, 2019' AND wdwe='WE' GROUP BY STATE, OWNER, MANAGER, AVP, RD, ADRM, GRMRS_HOTEL, GRMRS_REVMGR, GRMRS_TMLDR, Weekender_Loaded );",Weekender Std & Pd.sas
" CREATE TABLE wkender.allstdpd6_twonly_sum AS ( SELECT  * , CASE WHEN  all_rn=' '  THEN 0 END AS all_rn, CASE WHEN  all_rv=' '  THEN 0 END AS all_rv, CASE WHEN  weekender_rn=' '  THEN 0 END AS weekender_rn, CASE WHEN  weekender_rm_rv=' '  THEN 0 END AS weekender_rm_rv, CASE WHEN  weekender_tot_rv=' '  THEN 0 END AS weekender_tot_rv, CASE WHEN  TKED_rn=' '  THEN 0 END AS TKED_rn, CASE WHEN  TKED_rm_rv=' '  THEN 0 END AS TKED_rm_rv, CASE WHEN  TKED_tot_rv=' '  THEN 0 END AS TKED_tot_rv, CASE WHEN  pkg_rn=' '  THEN 0 END AS pkg_rn, CASE WHEN  pkg_rv=' '  THEN 0 END AS pkg_rv, CASE WHEN  nq_rn=' '  THEN 0 END AS nq_rn, CASE WHEN  nq_rv=' '  THEN 0 END AS nq_rv, CASE WHEN  tr_rn=' '  THEN 0 END AS tr_rn, CASE WHEN  tr_rv=' '  THEN 0 END AS tr_rv, CASE WHEN  all_rn_ly=' '  THEN 0 END AS all_rn_ly, CASE WHEN  all_rv_ly=' '  THEN 0 END AS all_rv_ly, CASE WHEN  pkg_rn_ly=' '  THEN 0 END AS pkg_rn_ly, CASE WHEN  pkg_rv_ly=' '  THEN 0 END AS pkg_rv_ly, CASE WHEN  nq_rn_ly=' '  THEN 0 END AS nq_rn_ly, CASE WHEN  nq_rv_ly=' '  THEN 0 END AS nq_rv_ly, CASE WHEN  tr_rn_ly=' '  THEN 0 END AS tr_rn_ly, CASE WHEN  tr_rv_ly=' '  THEN 0 END AS tr_rv_ly, CASE WHEN  all_rn_ly=0  THEN 0 ELSE ( all_rn-all_rn_ly)/all_rn_ly END AS all_rn_yoy, CASE WHEN  all_rv_ly=0  THEN 0 ELSE ( all_rv-all_rv_ly)/all_rv_ly END AS all_rv_yoy, CASE WHEN  pkg_rn_ly=0  THEN 0 ELSE ( pkg_rn-pkg_rn_ly)/pkg_rn_ly END AS pkg_rn_yoy, CASE WHEN  pkg_rv_ly=0  THEN 0 ELSE ( pkg_rv-pkg_rv_ly)/pkg_rv_ly END AS pkg_rev_yoy, CASE WHEN  nq_rn_ly=0  THEN 0 ELSE ( nq_rn-nq_rn_ly)/nq_rn_ly END AS nqrn_yoy, CASE WHEN  nq_rv_ly=0  THEN 0 ELSE ( nq_rv-nq_rv_ly)/nq_rv_ly END AS nqrv_yoy, CASE WHEN  tr_rn_ly=0  THEN 0 ELSE ( tr_rn-tr_rn_ly)/tr_rn_ly END AS trrn_yoy, CASE WHEN  tr_rv_ly=0  THEN 0 ELSE ( tr_rv-tr_rv_ly)/tr_rv_ly END AS trrv_yoy, CASE WHEN  tr_rn=0  THEN 0 ELSE ( weekender_rn/tr_rn ) END AS wkend_rn_trmix, CASE WHEN  tr_rn=0  THEN 0 ELSE ( TKED_rn/tr_rn ) END AS TKED_rn_trmix FROM wkender.allstdpd6_twonly_sum  WHERE acomp='Y');",Weekender Std & Pd.sas
" CREATE TABLE wkender.RPI_MONTH_WE2019_0910 AS  (  select a.MARSHA, b.BRND, b.MF, a.TIMEF, a.SCOMP , b.HOTEL_NAME, b.REGION, b.DIVISION_NAME, b.REGION_NAME, b.DOMINT, a.YRMNTH, a.asof_yrmo, a.DATA_CATEGORY, a.DATA_TYPE , MARAVAIL, MARSOLD, MARREV, MKTAVAIL, MKTSOLD, MKTREV, MARAVAILLY, MARSOLDLY, MARREVLY, MKTAVAILLY, MKTSOLDLY, MKTREVLY FROM AW_CMP_DBO.STR_MONTHLY_DATA AS a LEFT JOIN AW_TGT_BUS_DBO.PROPERTY_MASTER_HIST AS b ON a.MARSHA = b.MARSHA AND a.asof_yrmo = b.asof_yrmo WHERE a.TIMEF in( 'MONTH_WE') AND a.DATA_CATEGORY='WDWE_Rooms' AND b.BRND in( 'CY') AND a.CURRENCY_TYPE = 'Constant USD' AND a.YRMNTH in( 201909,201910) AND a.asof_yrmo = 201910  ) ;",Weekender Std & Pd.sas
SELECT * FROM wkender.RPI_MONTH_WE2019_0910 ORDER BY MARSHA;,Weekender Std & Pd.sas
"CREATE TABLE wkender.RPI_MONTH_WE2019_0910_sum AS (SELECT MARSHA, SUM(MARAVAIL) AS MARAVAIL, SUM(MARSOLD) AS MARSOLD, SUM(MARREV) AS MARREV, SUM(MKTAVAIL) AS MKTAVAIL, SUM(MKTSOLD) AS MKTSOLD, SUM(MKTREV) AS MKTREV, SUM(MARAVAILLY) AS MARAVAILLY, SUM(MARSOLDLY) AS MARSOLDLY, SUM(MARREVLY) AS MARREVLY, SUM(MKTAVAILLY) AS MKTAVAILLY, SUM(MKTSOLDLY) AS MKTSOLDLY, SUM(MKTREVLY) AS MKTREVLY FROM wkender.RPI_MONTH_WE2019_0910 GROUP BY MARSHA );",Weekender Std & Pd.sas
" CREATE TABLE wkender.RPI_MONTH_WE2019_0910_sumst AS ( SELECT  *  , ( MARSOLD/MARAVAIL ) AS OCC , ( MARREV/MARSOLD ) AS ADR , ( MARREV/MARAVAIL ) AS REVPAR , ( MKTSOLD/MKTAVAIL ) AS MOCC , ( MKTREV/MKTSOLD ) AS MADR , ( MKTREV/MKTAVAIL ) AS MREVPAR , ( REVPAR/MREVPAR)*100 AS RPI , ( ADR/MADR)*100 AS AI , ( OCC/MOCC)*100 AS OI , ( MARSOLDLY/MARAVAILLY ) AS OCCLY , ( MARREVLY/MARSOLDLY ) AS ADRLY , ( MARREVLY/MARAVAILLY ) AS REVPARLY , ( MKTSOLDLY/MKTAVAILLY ) AS MOCCLY , ( MKTREVLY/MKTSOLDLY ) AS MADRLY , ( MKTREVLY/MKTAVAILLY ) AS MREVPARLY , ( REVPARLY/MREVPARLY)*100 AS RPILY , ( ADRLY/MADRLY)*100 AS AILY , ( OCCLY/MOCCLY)*100 AS OILY , RPI-RPILY AS RPI_ptchg , RPI_ptchg/RPILY AS RPI_pctchg , AI-AILY AS AI_ptchg , AI_ptchg/AILY AS AI_pctchg , OI-OILY AS OI_ptchg , OI_ptchg/OILY AS OI_pctchg  FROM wkender.RPI_MONTH_WE2019_0910_sum );",Weekender Std & Pd.sas
" CREATE TABLE wkender.RPI_MONTH_WE2019_0910_sumfin AS ( SELECT MARSHA, SCOMP, YRMNTH, DATA_TYPE, RPI, RPI_ptchg, RPI_pctchg, AI_pctchg, OI_pctchg FROM wkender.RPI_MONTH_WE2019_0910_sumst );",Weekender Std & Pd.sas
SELECT * FROM wkender.allstdpd6_twonly_sum ORDER BY marsha;,Weekender Std & Pd.sas
SELECT * FROM wkender.RPI_MONTH_WE2019_0910_sumfin ORDER BY marsha;,Weekender Std & Pd.sas
SELECT * FROM wkender.RPI_MONTH_WE2019_0910_sum ORDER BY marsha;,Weekender Std & Pd.sas
" CREATE TABLE wkender.final_marsha AS ( SELECT  * , CASE WHEN  b  THEN 'Y' ELSE 'N' END AS stdta FROM wkender.allstdpd6_twonly_sum A LEFT JOIN wkender.RPI_MONTH_WE2019_0910_sumfin B ON  A.marsha =  B.marsha whereacomp='Y' AND scomp='Y');",Weekender Std & Pd.sas
"CREATE TABLE wkender.final_marsha_TKEDrnk AS SELECT * FROM ( SELECT *, RANK() OVER (  ORDER BY TKED_rn_trmix DESC  ) AS TKED_rn_trmixRank FROM wkender.final_marsha_TKEDrnk);",Weekender Std & Pd.sas
" CREATE TABLE wkender.final_marsha_TKEDrnk AS ( SELECT marsha, TKED_rn_trmixRank FROM wkender.final_marsha_TKEDrnk1 );",Weekender Std & Pd.sas
"CREATE TABLE wkender.final_marsha_WErnk AS SELECT * FROM ( SELECT *, RANK() OVER (  ORDER BY wkend_rn_trmix DESC  ) AS wkend_rn_trmixRank FROM wkender.final_marsha_WErnk);",Weekender Std & Pd.sas
SELECT DISTINCT * FROM wkender.final_marsha_TKEDrnk ORDER BY marsha;,Weekender Std & Pd.sas
SELECT DISTINCT * FROM wkender.final_marsha_WErnk ORDER BY marsha;,Weekender Std & Pd.sas
 CREATE TABLE wkender.final_marsha_WETKEDrnk AS ( SELECT  *  FROM wkender.final_marsha_WErnk A INNER JOIN wkender.final_marsha_TKEDrnk B ON  A.marsha =  B.marsha);,Weekender Std & Pd.sas
"CREATE TABLE ""\\Hdqmdm1fpcl4v1\lodg-revmgmt\RM EAnlys\MikeS\Weekender\final_marsha_WETKEDrnk.TXT"" AS ( SELECT * FROM wkender.final_marsha_WETKEDrnk) ;",Weekender Std & Pd.sas
" CREATE TABLE wkender.final4agg AS ( SELECT  * , CASE WHEN  b  THEN 'Y' ELSE 'N' END AS stdta FROM wkender.final_marsha_WETKEDrnk A LEFT JOIN wkender.RPI_MONTH_WE2019_0910_sum B ON  A.marsha =  B.marsha);",Weekender Std & Pd.sas
SELECT * FROM wkender.final4agg ORDER BY TKED_rn_trmixRank;,Weekender Std & Pd.sas
"CREATE TABLE wkender.TKED_rn_trmxRnksum AS (SELECT TKED_rn_trmixRank, _freq_ AS hotcnt, SUM(all_rn) AS all_rn, SUM(all_rv) AS all_rv, SUM(weekender_rn) AS weekender_rn, SUM(weekender_rm_rv) AS weekender_rm_rv, SUM(weekender_tot_rv) AS weekender_tot_rv, SUM(TKED_rn) AS TKED_rn, SUM(TKED_rm_rv) AS TKED_rm_rv, SUM(TKED_tot_rv) AS TKED_tot_rv, SUM(pkg_rn) AS pkg_rn, SUM(pkg_rv) AS pkg_rv, SUM(nq_rn) AS nq_rn, SUM(nq_rv) AS nq_rv, SUM(tr_rn) AS tr_rn, SUM(tr_rv) AS tr_rv, SUM(all_rn_ly) AS all_rn_ly, SUM(all_rv_ly) AS all_rv_ly, SUM(pkg_rn_ly) AS pkg_rn_ly, SUM(pkg_rv_ly) AS pkg_rv_ly, SUM(nq_rn_ly) AS nq_rn_ly, SUM(nq_rv_ly) AS nq_rv_ly, SUM(tr_rn_ly) AS tr_rn_ly, SUM(tr_rv_ly) AS tr_rv_ly, SUM(MARAVAIL) AS MARAVAIL, SUM(MARSOLD) AS MARSOLD, SUM(MARREV) AS MARREV, SUM(MKTAVAIL) AS MKTAVAIL, SUM(MKTSOLD) AS MKTSOLD, SUM(MKTREV) AS MKTREV, SUM(MARAVAILLY) AS MARAVAILLY, SUM(MARSOLDLY) AS MARSOLDLY, SUM(MARREVLY) AS MARREVLY, SUM(MKTAVAILLY) AS MKTAVAILLY, SUM(MKTSOLDLY) AS MKTSOLDLY, SUM(MKTREVLY) AS MKTREVLY FROM wkender.final4agg GROUP BY TKED_rn_trmixRank );",Weekender Std & Pd.sas
" CREATE TABLE wkender.TKED_rn_trmxRnksum AS ( SELECT  *  , ( MARSOLD/MARAVAIL ) AS OCC , ( MARREV/MARSOLD ) AS ADR , ( MARREV/MARAVAIL ) AS REVPAR , ( MKTSOLD/MKTAVAIL ) AS MOCC , ( MKTREV/MKTSOLD ) AS MADR , ( MKTREV/MKTAVAIL ) AS MREVPAR , ( REVPAR/MREVPAR)*100 AS RPI , ( ADR/MADR)*100 AS AI , ( OCC/MOCC)*100 AS OI , ( MARSOLDLY/MARAVAILLY ) AS OCCLY , ( MARREVLY/MARSOLDLY ) AS ADRLY , ( MARREVLY/MARAVAILLY ) AS REVPARLY , ( MKTSOLDLY/MKTAVAILLY ) AS MOCCLY , ( MKTREVLY/MKTSOLDLY ) AS MADRLY , ( MKTREVLY/MKTAVAILLY ) AS MREVPARLY , ( REVPARLY/MREVPARLY)*100 AS RPILY , ( ADRLY/MADRLY)*100 AS AILY , ( OCCLY/MOCCLY)*100 AS OILY , RPI-RPILY AS RPI_ptchg , RPI_ptchg/RPILY AS RPI_pctchg , AI-AILY AS AI_ptchg , AI_ptchg/AILY AS AI_pctchg , OI-OILY AS OI_ptchg , OI_ptchg/OILY AS OI_pctchg , CASE WHEN  tr_rn=0  THEN 0 ELSE ( weekender_rn/tr_rn ) WHEN  tr_rn=0  THEN 0 ELSE ( weekender_rn/tr_rn ) END AS wkend_rn_trmix, CASE WHEN  all_rn=' '  THEN 0 END AS all_rn, CASE WHEN  all_rv=' '  THEN 0 END AS all_rv, CASE WHEN  weekender_rn=' '  THEN 0 END AS weekender_rn, CASE WHEN  weekender_rm_rv=' '  THEN 0 END AS weekender_rm_rv, CASE WHEN  weekender_tot_rv=' '  THEN 0 END AS weekender_tot_rv, CASE WHEN  pkg_rn=' '  THEN 0 END AS pkg_rn, CASE WHEN  pkg_rv=' '  THEN 0 END AS pkg_rv, CASE WHEN  nq_rn=' '  THEN 0 END AS nq_rn, CASE WHEN  nq_rv=' '  THEN 0 END AS nq_rv, CASE WHEN  tr_rn=' '  THEN 0 END AS tr_rn, CASE WHEN  tr_rv=' '  THEN 0 END AS tr_rv, CASE WHEN  all_rn_ly=' '  THEN 0 END AS all_rn_ly, CASE WHEN  all_rv_ly=' '  THEN 0 END AS all_rv_ly, CASE WHEN  weekender_rn_ly=' '  THEN 0 END AS weekender_rn_ly, CASE WHEN  weekender_rm_rv_ly=' '  THEN 0 END AS weekender_rm_rv_ly, CASE WHEN  weekender_tot_rv_ly=' '  THEN 0 END AS weekender_tot_rv_ly, CASE WHEN  pkg_rn_ly=' '  THEN 0 END AS pkg_rn_ly, CASE WHEN  pkg_rv_ly=' '  THEN 0 END AS pkg_rv_ly, CASE WHEN  nq_rn_ly=' '  THEN 0 END AS nq_rn_ly, CASE WHEN  nq_rv_ly=' '  THEN 0 END AS nq_rv_ly, CASE WHEN  tr_rn_ly=' '  THEN 0 END AS tr_rn_ly, CASE WHEN  tr_rv_ly=' '  THEN 0 END AS tr_rv_ly, CASE WHEN  all_rn_ly=0  THEN 0 ELSE ( all_rn-all_rn_ly)/all_rn_ly END AS all_rn_yoy, CASE WHEN  all_rv_ly=0  THEN 0 ELSE ( all_rv-all_rv_ly)/all_rv_ly END AS all_rv_yoy, CASE WHEN  weekender_rn_ly=0  THEN 0 ELSE ( weekender_rn-weekender_rn_ly)/weekender_rn_ly END AS wkendrn_yoy, CASE WHEN  weekender_rm_rv_ly=0  THEN 0 ELSE ( weekender_rm_rv-weekender_rm_rv_ly)/weekender_rm_rv_ly END AS wkendrmrev_yoy, CASE WHEN  weekender_tot_rv_ly=0  THEN 0 ELSE ( weekender_tot_rv-weekender_tot_rv_ly)/weekender_tot_rv_ly END AS wkendtotrev_yoy, CASE WHEN  pkg_rn_ly=0  THEN 0 ELSE ( pkg_rn-pkg_rn_ly)/pkg_rn_ly END AS pkg_rn_yoy, CASE WHEN  pkg_rv_ly=0  THEN 0 ELSE ( pkg_rv-pkg_rv_ly)/pkg_rv_ly END AS pkg_rev_yoy, CASE WHEN  nq_rn_ly=0  THEN 0 ELSE ( nq_rn-nq_rn_ly)/nq_rn_ly END AS nqrn_yoy, CASE WHEN  nq_rv_ly=0  THEN 0 ELSE ( nq_rv-nq_rv_ly)/nq_rv_ly END AS nqrv_yoy, CASE WHEN  tr_rn_ly=0  THEN 0 ELSE ( tr_rn-tr_rn_ly)/tr_rn_ly END AS trrn_yoy, CASE WHEN  tr_rv_ly=0  THEN 0 ELSE ( tr_rv-tr_rv_ly)/tr_rv_ly END AS trrv_yoy FROM wkender.TKED_rn_trmxRnksum );",Weekender Std & Pd.sas
"CREATE TABLE ""\\Hdqmdm1fpcl4v1\lodg-revmgmt\RM EAnlys\MikeS\Weekender\final_trmix_rnksum..TXT"" AS ( SELECT * FROM wkender.final_trmix_rnksum) ;",Weekender Std & Pd.sas
"CREATE TABLE wkender.final_trmix_rnksum_subgrp AS (SELECT _freq_ AS hotcnt, SUM(all_rn) AS all_rn, SUM(all_rv) AS all_rv, SUM(weekender_rn) AS weekender_rn, SUM(weekender_rm_rv) AS weekender_rm_rv, SUM(weekender_tot_rv) AS weekender_tot_rv, SUM(TKED_rn) AS TKED_rn, SUM(TKED_rm_rv) AS TKED_rm_rv, SUM(TKED_tot_rv) AS TKED_tot_rv, SUM(pkg_rn) AS pkg_rn, SUM(pkg_rv) AS pkg_rv, SUM(nq_rn) AS nq_rn, SUM(nq_rv) AS nq_rv, SUM(tr_rn) AS tr_rn, SUM(tr_rv) AS tr_rv, SUM(all_rn_ly) AS all_rn_ly, SUM(all_rv_ly) AS all_rv_ly, SUM(pkg_rn_ly) AS pkg_rn_ly, SUM(pkg_rv_ly) AS pkg_rv_ly, SUM(nq_rn_ly) AS nq_rn_ly, SUM(nq_rv_ly) AS nq_rv_ly, SUM(tr_rn_ly) AS tr_rn_ly, SUM(tr_rv_ly) AS tr_rv_ly, SUM(MARAVAIL) AS MARAVAIL, SUM(MARSOLD) AS MARSOLD, SUM(MARREV) AS MARREV, SUM(MKTAVAIL) AS MKTAVAIL, SUM(MKTSOLD) AS MKTSOLD, SUM(MKTREV) AS MKTREV, SUM(MARAVAILLY) AS MARAVAILLY, SUM(MARSOLDLY) AS MARSOLDLY, SUM(MARREVLY) AS MARREVLY, SUM(MKTAVAILLY) AS MKTAVAILLY, SUM(MKTSOLDLY) AS MKTSOLDLY, SUM(MKTREVLY) AS MKTREVLY FROM wkender.final4agg WHERE wkend_rn_trmixRank in( 1,2,3,4 ) );",Weekender Std & Pd.sas
" CREATE TABLE wkender.final_trmix_rnksum_subgrp AS ( SELECT  *  , ( MARSOLD/MARAVAIL ) AS OCC , ( MARREV/MARSOLD ) AS ADR , ( MARREV/MARAVAIL ) AS REVPAR , ( MKTSOLD/MKTAVAIL ) AS MOCC , ( MKTREV/MKTSOLD ) AS MADR , ( MKTREV/MKTAVAIL ) AS MREVPAR , ( REVPAR/MREVPAR)*100 AS RPI , ( ADR/MADR)*100 AS AI , ( OCC/MOCC)*100 AS OI , ( MARSOLDLY/MARAVAILLY ) AS OCCLY , ( MARREVLY/MARSOLDLY ) AS ADRLY , ( MARREVLY/MARAVAILLY ) AS REVPARLY , ( MKTSOLDLY/MKTAVAILLY ) AS MOCCLY , ( MKTREVLY/MKTSOLDLY ) AS MADRLY , ( MKTREVLY/MKTAVAILLY ) AS MREVPARLY , ( REVPARLY/MREVPARLY)*100 AS RPILY , ( ADRLY/MADRLY)*100 AS AILY , ( OCCLY/MOCCLY)*100 AS OILY , RPI-RPILY AS RPI_ptchg , RPI_ptchg/RPILY AS RPI_pctchg , AI-AILY AS AI_ptchg , AI_ptchg/AILY AS AI_pctchg , OI-OILY AS OI_ptchg , OI_ptchg/OILY AS OI_pctchg , CASE WHEN  tr_rn=0  THEN 0 ELSE ( weekender_rn/tr_rn ) WHEN  tr_rn=0  THEN 0 ELSE ( weekender_rn/tr_rn ) END AS wkend_rn_trmix, CASE WHEN  all_rn=' '  THEN 0 END AS all_rn, CASE WHEN  all_rv=' '  THEN 0 END AS all_rv, CASE WHEN  weekender_rn=' '  THEN 0 END AS weekender_rn, CASE WHEN  weekender_rm_rv=' '  THEN 0 END AS weekender_rm_rv, CASE WHEN  weekender_tot_rv=' '  THEN 0 END AS weekender_tot_rv, CASE WHEN  pkg_rn=' '  THEN 0 END AS pkg_rn, CASE WHEN  pkg_rv=' '  THEN 0 END AS pkg_rv, CASE WHEN  nq_rn=' '  THEN 0 END AS nq_rn, CASE WHEN  nq_rv=' '  THEN 0 END AS nq_rv, CASE WHEN  tr_rn=' '  THEN 0 END AS tr_rn, CASE WHEN  tr_rv=' '  THEN 0 END AS tr_rv, CASE WHEN  all_rn_ly=' '  THEN 0 END AS all_rn_ly, CASE WHEN  all_rv_ly=' '  THEN 0 END AS all_rv_ly, CASE WHEN  weekender_rn_ly=' '  THEN 0 END AS weekender_rn_ly, CASE WHEN  weekender_rm_rv_ly=' '  THEN 0 END AS weekender_rm_rv_ly, CASE WHEN  weekender_tot_rv_ly=' '  THEN 0 END AS weekender_tot_rv_ly, CASE WHEN  pkg_rn_ly=' '  THEN 0 END AS pkg_rn_ly, CASE WHEN  pkg_rv_ly=' '  THEN 0 END AS pkg_rv_ly, CASE WHEN  nq_rn_ly=' '  THEN 0 END AS nq_rn_ly, CASE WHEN  nq_rv_ly=' '  THEN 0 END AS nq_rv_ly, CASE WHEN  tr_rn_ly=' '  THEN 0 END AS tr_rn_ly, CASE WHEN  tr_rv_ly=' '  THEN 0 END AS tr_rv_ly, CASE WHEN  all_rn_ly=0  THEN 0 ELSE ( all_rn-all_rn_ly)/all_rn_ly END AS all_rn_yoy, CASE WHEN  all_rv_ly=0  THEN 0 ELSE ( all_rv-all_rv_ly)/all_rv_ly END AS all_rv_yoy, CASE WHEN  weekender_rn_ly=0  THEN 0 ELSE ( weekender_rn-weekender_rn_ly)/weekender_rn_ly END AS wkendrn_yoy, CASE WHEN  weekender_rm_rv_ly=0  THEN 0 ELSE ( weekender_rm_rv-weekender_rm_rv_ly)/weekender_rm_rv_ly END AS wkendrmrev_yoy, CASE WHEN  weekender_tot_rv_ly=0  THEN 0 ELSE ( weekender_tot_rv-weekender_tot_rv_ly)/weekender_tot_rv_ly END AS wkendtotrev_yoy, CASE WHEN  pkg_rn_ly=0  THEN 0 ELSE ( pkg_rn-pkg_rn_ly)/pkg_rn_ly END AS pkg_rn_yoy, CASE WHEN  pkg_rv_ly=0  THEN 0 ELSE ( pkg_rv-pkg_rv_ly)/pkg_rv_ly END AS pkg_rev_yoy, CASE WHEN  nq_rn_ly=0  THEN 0 ELSE ( nq_rn-nq_rn_ly)/nq_rn_ly END AS nqrn_yoy, CASE WHEN  nq_rv_ly=0  THEN 0 ELSE ( nq_rv-nq_rv_ly)/nq_rv_ly END AS nqrv_yoy, CASE WHEN  tr_rn_ly=0  THEN 0 ELSE ( tr_rn-tr_rn_ly)/tr_rn_ly END AS trrn_yoy, CASE WHEN  tr_rv_ly=0  THEN 0 ELSE ( tr_rv-tr_rv_ly)/tr_rv_ly END AS trrv_yoy FROM wkender.final_trmix_rnksum_subgrp );",Weekender Std & Pd.sas
"CREATE TABLE ""\\Hdqmdm1fpcl4v1\lodg-revmgmt\RM EAnlys\MikeS\Weekender\final_trmix_rnksum_subgrp.TXT"" AS ( SELECT * FROM wkender.final_trmix_rnksum_subgrp) ;",Weekender Std & Pd.sas
"CREATE TABLE wkender.final_trmix_rnksum_subgrp2 AS (SELECT _freq_ AS hotcnt, SUM(all_rn) AS all_rn, SUM(all_rv) AS all_rv, SUM(weekender_rn) AS weekender_rn, SUM(weekender_rm_rv) AS weekender_rm_rv, SUM(weekender_tot_rv) AS weekender_tot_rv, SUM(TKED_rn) AS TKED_rn, SUM(TKED_rm_rv) AS TKED_rm_rv, SUM(TKED_tot_rv) AS TKED_tot_rv, SUM(pkg_rn) AS pkg_rn, SUM(pkg_rv) AS pkg_rv, SUM(nq_rn) AS nq_rn, SUM(nq_rv) AS nq_rv, SUM(tr_rn) AS tr_rn, SUM(tr_rv) AS tr_rv, SUM(all_rn_ly) AS all_rn_ly, SUM(all_rv_ly) AS all_rv_ly, SUM(pkg_rn_ly) AS pkg_rn_ly, SUM(pkg_rv_ly) AS pkg_rv_ly, SUM(nq_rn_ly) AS nq_rn_ly, SUM(nq_rv_ly) AS nq_rv_ly, SUM(tr_rn_ly) AS tr_rn_ly, SUM(tr_rv_ly) AS tr_rv_ly, SUM(MARAVAIL) AS MARAVAIL, SUM(MARSOLD) AS MARSOLD, SUM(MARREV) AS MARREV, SUM(MKTAVAIL) AS MKTAVAIL, SUM(MKTSOLD) AS MKTSOLD, SUM(MKTREV) AS MKTREV, SUM(MARAVAILLY) AS MARAVAILLY, SUM(MARSOLDLY) AS MARSOLDLY, SUM(MARREVLY) AS MARREVLY, SUM(MKTAVAILLY) AS MKTAVAILLY, SUM(MKTSOLDLY) AS MKTSOLDLY, SUM(MKTREVLY) AS MKTREVLY FROM wkender.final4agg WHERE wkend_rn_trmixRank in( 1,2 ) );",Weekender Std & Pd.sas
" CREATE TABLE wkender.final_trmix_rnksum_subgrp2 AS ( SELECT  *  , ( MARSOLD/MARAVAIL ) AS OCC , ( MARREV/MARSOLD ) AS ADR , ( MARREV/MARAVAIL ) AS REVPAR , ( MKTSOLD/MKTAVAIL ) AS MOCC , ( MKTREV/MKTSOLD ) AS MADR , ( MKTREV/MKTAVAIL ) AS MREVPAR , ( REVPAR/MREVPAR)*100 AS RPI , ( ADR/MADR)*100 AS AI , ( OCC/MOCC)*100 AS OI , ( MARSOLDLY/MARAVAILLY ) AS OCCLY , ( MARREVLY/MARSOLDLY ) AS ADRLY , ( MARREVLY/MARAVAILLY ) AS REVPARLY , ( MKTSOLDLY/MKTAVAILLY ) AS MOCCLY , ( MKTREVLY/MKTSOLDLY ) AS MADRLY , ( MKTREVLY/MKTAVAILLY ) AS MREVPARLY , ( REVPARLY/MREVPARLY)*100 AS RPILY , ( ADRLY/MADRLY)*100 AS AILY , ( OCCLY/MOCCLY)*100 AS OILY , RPI-RPILY AS RPI_ptchg , RPI_ptchg/RPILY AS RPI_pctchg , AI-AILY AS AI_ptchg , AI_ptchg/AILY AS AI_pctchg , OI-OILY AS OI_ptchg , OI_ptchg/OILY AS OI_pctchg , CASE WHEN  tr_rn=0  THEN 0 ELSE ( weekender_rn/tr_rn ) WHEN  tr_rn=0  THEN 0 ELSE ( weekender_rn/tr_rn ) END AS wkend_rn_trmix, CASE WHEN  all_rn=' '  THEN 0 END AS all_rn, CASE WHEN  all_rv=' '  THEN 0 END AS all_rv, CASE WHEN  weekender_rn=' '  THEN 0 END AS weekender_rn, CASE WHEN  weekender_rm_rv=' '  THEN 0 END AS weekender_rm_rv, CASE WHEN  weekender_tot_rv=' '  THEN 0 END AS weekender_tot_rv, CASE WHEN  pkg_rn=' '  THEN 0 END AS pkg_rn, CASE WHEN  pkg_rv=' '  THEN 0 END AS pkg_rv, CASE WHEN  nq_rn=' '  THEN 0 END AS nq_rn, CASE WHEN  nq_rv=' '  THEN 0 END AS nq_rv, CASE WHEN  tr_rn=' '  THEN 0 END AS tr_rn, CASE WHEN  tr_rv=' '  THEN 0 END AS tr_rv, CASE WHEN  all_rn_ly=' '  THEN 0 END AS all_rn_ly, CASE WHEN  all_rv_ly=' '  THEN 0 END AS all_rv_ly, CASE WHEN  weekender_rn_ly=' '  THEN 0 END AS weekender_rn_ly, CASE WHEN  weekender_rm_rv_ly=' '  THEN 0 END AS weekender_rm_rv_ly, CASE WHEN  weekender_tot_rv_ly=' '  THEN 0 END AS weekender_tot_rv_ly, CASE WHEN  pkg_rn_ly=' '  THEN 0 END AS pkg_rn_ly, CASE WHEN  pkg_rv_ly=' '  THEN 0 END AS pkg_rv_ly, CASE WHEN  nq_rn_ly=' '  THEN 0 END AS nq_rn_ly, CASE WHEN  nq_rv_ly=' '  THEN 0 END AS nq_rv_ly, CASE WHEN  tr_rn_ly=' '  THEN 0 END AS tr_rn_ly, CASE WHEN  tr_rv_ly=' '  THEN 0 END AS tr_rv_ly, CASE WHEN  all_rn_ly=0  THEN 0 ELSE ( all_rn-all_rn_ly)/all_rn_ly END AS all_rn_yoy, CASE WHEN  all_rv_ly=0  THEN 0 ELSE ( all_rv-all_rv_ly)/all_rv_ly END AS all_rv_yoy, CASE WHEN  weekender_rn_ly=0  THEN 0 ELSE ( weekender_rn-weekender_rn_ly)/weekender_rn_ly END AS wkendrn_yoy, CASE WHEN  weekender_rm_rv_ly=0  THEN 0 ELSE ( weekender_rm_rv-weekender_rm_rv_ly)/weekender_rm_rv_ly END AS wkendrmrev_yoy, CASE WHEN  weekender_tot_rv_ly=0  THEN 0 ELSE ( weekender_tot_rv-weekender_tot_rv_ly)/weekender_tot_rv_ly END AS wkendtotrev_yoy, CASE WHEN  pkg_rn_ly=0  THEN 0 ELSE ( pkg_rn-pkg_rn_ly)/pkg_rn_ly END AS pkg_rn_yoy, CASE WHEN  pkg_rv_ly=0  THEN 0 ELSE ( pkg_rv-pkg_rv_ly)/pkg_rv_ly END AS pkg_rev_yoy, CASE WHEN  nq_rn_ly=0  THEN 0 ELSE ( nq_rn-nq_rn_ly)/nq_rn_ly END AS nqrn_yoy, CASE WHEN  nq_rv_ly=0  THEN 0 ELSE ( nq_rv-nq_rv_ly)/nq_rv_ly END AS nqrv_yoy, CASE WHEN  tr_rn_ly=0  THEN 0 ELSE ( tr_rn-tr_rn_ly)/tr_rn_ly END AS trrn_yoy, CASE WHEN  tr_rv_ly=0  THEN 0 ELSE ( tr_rv-tr_rv_ly)/tr_rv_ly END AS trrv_yoy FROM wkender.final_trmix_rnksum_subgrp2 );",Weekender Std & Pd.sas
"CREATE TABLE ""\\Hdqmdm1fpcl4v1\lodg-revmgmt\RM EAnlys\MikeS\Weekender\final_trmix_rnksum_subgrp.TXT"" AS ( SELECT * FROM wkender.final_trmix_rnksum_subgrp2) ;",Weekender Std & Pd.sas
" CREATE TABLE TMC_Parent_IATA AS ( SELECT  *  , 'TMC' AS data_src  FROM Consortia );",W_Consortia_Production.sas
"CREATE TABLE NYC_Props AS ( SELECT  *, Organization AS MARSHA FROM Properties  WHERE associate_eid = 'AMAQB233');",W_Consortia_Production.sas
CREATE TABLE Other AS ( SELECT  *  FROM Properties  WHERE associate_eid <> 'AMAQB233');,W_Consortia_Production.sas
" CREATE TABLE W_CONSORTIA_PROPS AS ( SELECT HOTEL_NAME, BRND, MARSHA AS MARSHA, PROP_MASTER_ID AS OLD_MARSHA, MISW_FLAG AS COMPANY, SFO_ORG AS ORG_ACRONYM, FORMAT(ORG_NAME, VARCHAR(50)) AS ORG_NAME , CASE WHEN  SFO_ORG='ENE'  THEN 'East Northeast' WHEN   SFO_ORG='MA'  THEN 'Mid Atlantic' WHEN   SFO_ORG='NMA'  THEN 'Northern Mid-America' WHEN   SFO_ORG='WMP'  THEN 'Western Mountain Pacific' WHEN   SFO_ORG='WSW'  THEN 'West Southwest' WHEN   SFO_ORG='WSC'  THEN 'West South Central' WHEN   SFO_ORG='SSE'  THEN 'South Southeast' WHEN   SFO_ORG='FL'  THEN 'Florida' END AS ORG_NAME FROM AWPROD.PROPERTY_MASTER_HIST  WHERE BRND='WH' AND SFO_ORG not IN ( 'CAL','') AND MF='M' AND COUNTRY_CD='US' AND OPENFLAG='Y' AND ASOF_YRMO=&CURYRPD.);",W_Consortia_Production.sas
 CREATE TABLE AllProps AS ( SELECT MARSHA FROM NYC_Props UNION ALL SELECT MARSHA FROM W_Consortia_Props);,W_Consortia_Production.sas
CREATE TABLE dedupe_TMC_PARENT_IATA AS (SELECT DISTINCT P_IATA FROM TMC_PARENT_IATA ORDER BY P_IATA);,W_Consortia_Production.sas
 CREATE TABLE STARS_Luminous_List AS ( SELECT IATA_8_digit AS IATA_Number FROM STARS UNION ALL SELECT IATA_8_digit AS IATA_Number FROM Luminous);,W_Consortia_Production.sas
CREATE TABLE dedupe_STARS_Luminous_List AS (SELECT DISTINCT IATA_Number FROM STARS_Luminous_List ORDER BY IATA_Number);,W_Consortia_Production.sas
" CREATE TABLE W_Consortia_Detail AS  ( select a15.intermediary_id AS IATA_Number, a17.brand_cd AS Brand_Code, a17.property_cd AS MARSHA_Code, a17.property_nm AS Property_Name, a17.city_nm AS Property_City, a17.ab_state_cd AS Property_State, a16.market_cd AS Market_Code, a17.country_cd AS Property_Country_Code, a15.intermediary_company_nm AS intermediary_company_nm, a15.city_nm AS IATA_City, a15.ab_state_cd AS IATA_State, a15.country_cd AS IATA_Country, a20.parent_iata_cd AS Parent_IATA_Number, a20.tmc_nm AS Parent_TMC_Name, RTRIM( to_char( a13.year_cal,'9999')) || CASE WHEN a13.month_cal_id between 1 AND 9 THEN '0'|| RTRIM( to_char( a13.month_cal_id,'99')) ELSE RTRIM( to_char( a13.month_cal_id,'99')) END AS YrMonth, a13.month_cal_id AS Month, SUM( a12.rooms_qty) AS Roomnights_TY, SUM( a12.proj_gr_local_rev_amt / a11.exch_per_us_dlr_rte) AS Gross_USD_Rev_TY, SUM( a12.proj_net_local_rev_amt / a11.exch_per_us_dlr_rte) AS Net_USD_Rev_TY, CASE WHEN a13.month_cal_id between 1 AND 3 THEN 1 when a13.month_cal_id between 4 AND 6 THEN 2 when a13.month_cal_id between 7 AND 9 THEN 3 when a13.month_cal_id between 10 AND 12 THEN 4 END AS Qtr FROM mrdw_dim_currency_conversion AS a11 JOIN mrdw_fact_daily_revenue AS a12 ON ( a11.date_currency_key = a12.date_currency_stay_key) JOIN mrdw_dim_date AS a13 ON ( a11.date_key = a13.date_key) JOIN mrdw_dim_date AS a21 ON ( a12.date_arrival_key = a21.date_key) JOIN mrdw_brg_intermediary AS a14 ON ( a12.confo_num_curr_id = a14.confo_num_curr_id AND a12.confo_num_orig_id = a14.confo_num_orig_id AND a12.date_create_key = a14.date_create_key) JOIN mrdw_dim_intermediary AS a15 ON ( a14.intermediary_key = a15.intermediary_key AND a14.intermediary_type_resv_cd = a15.intermediary_type_cd) JOIN Mrdw_dim_tmc_vs_biata_rel AS a10 ON ( a15.intermediary_id = a10.booking_iata_cd) JOIN Mrdw_dim_tmc_parent_master AS a20 ON ( a10.parent_iata_cd = a20.parent_iata_cd) JOIN mrdw_dim_market_rates AS a16 ON ( a12.market_rate_key = a16.market_rate_key) JOIN mrdw_dim_property AS a17 ON ( a16.property_id = a17.property_id) JOIN mrdw_dim_status_accom AS a19 ON ( a12.status_accom_key = a19.status_accom_key) WHERE a13.year_cal=&curyr. AND a13.month_cal_id = &shortpd. AND a15.intermediary_type_cd='IA' AND a20.parent_iata_cd IN ( %PIATAList) AND a17.property_cd IN ( %MARSHAList) AND SUBSTRING( a16.market_cd,1,2) IN ( '10','11','12','19','20','21','22','23','24','33','35','43','90') AND a19.action_cd <> 'NR' AND ( a21.date_dt between a10.start_dt AND a10.end_dt) GROUP BY a15.intermediary_id, a15.intermediary_company_nm, a17.brand_cd, a16.market_cd, a15.city_nm, a15.ab_state_cd, a15.country_cd, a17.property_cd, a17.property_nm, a17.city_nm, a17.ab_state_cd, a17.country_cd, a20.parent_iata_cd, a20.tmc_nm, YrMonth, Month, Qtr ORDER BY a15.intermediary_id, a15.intermediary_company_nm, a17.brand_cd, a16.market_cd, a17.property_cd, YrMonth ) ;",W_Consortia_Production.sas
" CREATE TABLE Consortia_Final AS select a.IATA_Number, a.Brand_Code, a.MARSHA_Code, a.Property_Name, a.Property_City, a.Property_State, a.Market_Code, a.Property_Country_Code, a.intermediary_company_nm, a.IATA_City, a.IATA_State, a.IATA_Country, a.Parent_IATA_Number, a.Parent_TMC_Name, a.YrMonth LENGTH=6 format=$6., a.Month, a.Roomnights_TY, a.Gross_USD_Rev_TY, a.Net_USD_Rev_TY, a.Qtr, CASE WHEN c.sfo_org='ENE' THEN 'East Northeast' ELSE 'Other' END AS org_name, b.associate, b.associate_eid FROM w_consortia_detail a INNER JOIN nyc_props b ON a.marsha_code = b.marsha INNER JOIN ( select * FROM AWPROD.PROPERTY_MASTER_HIST WHERE sfo_org='ENE' AND asof_yrmo=&curyrpd. ) c ON a.marsha_code = c.marsha UNION ALL select a.*, b.org_name, c.associate, c.associate_eid FROM w_consortia_detail a INNER JOIN w_consortia_props b ON a.marsha_code = b.marsha INNER JOIN ( select * FROM properties WHERE associate_eid not IN ( 'AMAQB233')) c ON b.org_name = c.organization ;",W_Consortia_Production.sas
" CREATE TABLE Luxury_Data_RateProgram_Only AS SELECT C.ASSOCIATE, C.ASSOCIATE_EID, A1.PROPERTY_CD AS MARSHA, A1.RATE_PGM_TXT, A1.MARKET_CD, CASE WHEN B.SFO_ORG = 'ENE' THEN 'East Northeast' ELSE 'Other' END AS ORG_NAME, ( 100*A1.YEAR_CAL_ID+A1.MONTH_CAL_ID) AS YEARMO, SUM( A1.ROOMNIGHTS_QTY) AS RN, SUM( A1.NET_REV_USD_SUB_AMT) AS RV FROM NZTFP.MRDW_FACT_AGG_DR_REV_ANALYSIS A1 INNER JOIN ( SELECT * FROM AWPROD.PROPERTY_MASTER_HIST WHERE SFO_ORG='ENE' AND ASOF_YRMO=&CURYRPD. ) B ON A1.PROPERTY_CD = B.MARSHA INNER JOIN NYC_PROPS C ON A1.PROPERTY_CD = C.MARSHA WHERE A1.YEAR_CAL_ID = &curyr. AND A1.MONTH_CAL_ID = &shortpd. AND A1.PROPERTY_CD IN ( %MARSHAList) AND A1.MARKET_PREFIX_CD='22' GROUP BY C.ASSOCIATE, C.ASSOCIATE_EID, A1.PROPERTY_CD, A1.RATE_PGM_TXT, A1.MARKET_CD, YEARMO, ORG_NAME UNION ALL SELECT C.ASSOCIATE, C.ASSOCIATE_EID, A2.PROPERTY_CD AS MARSHA, A2.RATE_PGM_TXT, A2.MARKET_CD, B.ORG_NAME, ( 100*A2.YEAR_CAL_ID+A2.MONTH_CAL_ID) AS YEARMO, SUM( A2.ROOMNIGHTS_QTY) AS RN, SUM( A2.NET_REV_USD_SUB_AMT) AS RV FROM NZTFP.MRDW_FACT_AGG_DR_REV_ANALYSIS A2 INNER JOIN W_CONSORTIA_PROPS B ON A2.PROPERTY_CD = B.MARSHA INNER JOIN ( SELECT * FROM PROPERTIES WHERE ASSOCIATE_EID NOT IN ( 'AMAQB233')) C ON B.ORG_NAME = C.ORGANIZATION WHERE A2.YEAR_CAL_ID = &curyr. AND A2.MONTH_CAL_ID = &shortpd. AND A2.PROPERTY_CD IN ( %MARSHAList) AND A2.MARKET_PREFIX_CD='22' GROUP BY C.ASSOCIATE, C.ASSOCIATE_EID, A2.PROPERTY_CD, A2.RATE_PGM_TXT, A2.MARKET_CD, YEARMO, B.ORG_NAME ;",W_Consortia_Production.sas
 CREATE TABLE TMCLUX.LUX_RateProgram_Only_&curyrpd AS ( SELECT  *  FROM Luxury_Data_RateProgram_Only );,W_Consortia_Production.sas
 CREATE TABLE TMCLUX.Consortia_Production_&curyrpd AS ( SELECT  *  FROM Consortia_Final );,W_Consortia_Production.sas
" CREATE TABLE Luxury_Data_RP_Details AS SELECT A1.INTERMEDIARY_ID, A1.INTERMEDIARY_COMPANY_NM, A1.INTERMEDIARY_CITY_NM, A1.CURR_TMC_PARENT_IATA_ID, A1.CURR_TMC_PARENT_NM, C.ASSOCIATE, C.ASSOCIATE_EID, A1.PROPERTY_CD AS MARSHA, A1.CURR_RATE_PGM_TXT, A1.CURR_MARKET_CD, CASE WHEN B.SFO_ORG = 'ENE' THEN 'East Northeast' ELSE 'Other' END AS ORG_NAME, ( 100*A1.STAY_YEAR+A1.STAY_MONTH) AS YEARMO, SUM( A1.CURR_ROOMS_QTY) AS RN, SUM( A1.CURR_TOT_REV_USD_SUB_AMT) AS RV FROM AWPROD.MRDW_BI_FACT_STAYED_PAID_NOS A1 INNER JOIN ( SELECT * FROM AWPROD.PROPERTY_MASTER_HIST WHERE SFO_ORG='ENE' AND ASOF_YRMO=&CURYRPD. ) B ON A1.PROPERTY_CD = B.MARSHA INNER JOIN NYC_PROPS C ON A1.PROPERTY_CD = C.MARSHA WHERE A1.STAY_YEAR = &curyr. AND A1.STAY_MONTH = &shortpd. AND A1.PROPERTY_CD IN ( %MARSHAList) AND A1.CURR_MARKET_PREFIX_CD='22' GROUP BY A1.INTERMEDIARY_ID, A1.INTERMEDIARY_COMPANY_NM, A1.INTERMEDIARY_CITY_NM, A1.CURR_TMC_PARENT_IATA_ID, A1.CURR_TMC_PARENT_NM, C.ASSOCIATE, C.ASSOCIATE_EID, A1.PROPERTY_CD, A1.CURR_RATE_PGM_TXT, A1.CURR_MARKET_CD, YEARMO, ORG_NAME UNION ALL SELECT A2.INTERMEDIARY_ID, A2.INTERMEDIARY_COMPANY_NM, A2.INTERMEDIARY_CITY_NM, A2.CURR_TMC_PARENT_IATA_ID, A2.CURR_TMC_PARENT_NM, C.ASSOCIATE, C.ASSOCIATE_EID, A2.PROPERTY_CD AS MARSHA, A2.CURR_RATE_PGM_TXT, A2.CURR_MARKET_CD, B.ORG_NAME, ( 100*A2.STAY_YEAR+A2.STAY_MONTH) AS YEARMO, SUM( A2.CURR_ROOMS_QTY) AS RN, SUM( A2.CURR_TOT_REV_USD_SUB_AMT) AS RV FROM AWPROD.MRDW_BI_FACT_STAYED_PAID_NOS A2 INNER JOIN W_CONSORTIA_PROPS B ON A2.PROPERTY_CD = B.MARSHA INNER JOIN ( SELECT * FROM PROPERTIES WHERE ASSOCIATE_EID NOT IN ( 'AMAQB233')) C ON B.ORG_NAME = C.ORGANIZATION WHERE A2.STAY_YEAR = &curyr. AND A2.STAY_MONTH = &shortpd. AND A2.PROPERTY_CD IN ( %MARSHAList) AND A2.CURR_MARKET_PREFIX_CD='22' GROUP BY A2.INTERMEDIARY_ID, A2.INTERMEDIARY_COMPANY_NM, A2.INTERMEDIARY_CITY_NM, A2.CURR_TMC_PARENT_IATA_ID, A2.CURR_TMC_PARENT_NM, C.ASSOCIATE, C.ASSOCIATE_EID, A2.PROPERTY_CD, A2.CURR_RATE_PGM_TXT, A2.CURR_MARKET_CD, YEARMO, B.ORG_NAME ;",W_Consortia_Production.sas
 CREATE TABLE TMCLUX.LUX_RP_Details_&curyrpd AS ( SELECT  *  FROM Luxury_Data_RP_Details );,W_Consortia_Production.sas
" CREATE TABLE AW_Manual_Adjustments AS  ( select MARSHA_CD AS MARSHA, SLS_MGR_ROLE, SUM( NET_RM_NGTS) AS MAN_ADJ_RNS FROM AW_SLS_PRD_AM.MANUAL_ADJUSTMENTS WHERE ADJ_YEAR_ID=&CURYR. AND ACCT_COMP_TYPE NOT IN ( 'Assigned Account IN Organization','Non Assigned Account IN Organization') AND SLS_MGR_ROLE NOT IN ( 'Sales Executive') GROUP BY MARSHA_CD, SLS_MGR_ROLE  )  ;",YTD_Cost_Allocation.sas
"CREATE TABLE MANUAL_ADJUSTMENTS2 AS ( SELECT  *  , RTRIM( SUBSTRING( SLS_MGR_ROLE,( INDEX( SLS_MGR_ROLE,"","")+1),RTRIM( LENGTH( SLS_MGR_ROLE))) ) AS SLS_SEGMENT  FROM AW_MANUAL_ADJUSTMENTS );",YTD_Cost_Allocation.sas
ALTER TABLE MANUAL_ADJUSTMENTS2 DROP COLUMN SLS_MGR_ROLE ;,YTD_Cost_Allocation.sas
"CREATE INDEX SLS_MGR_ROLE,"","" ON MANUAL_ADJUSTMENTS2(SLS_MGR_ROLE,"","");",YTD_Cost_Allocation.sas
" CREATE TABLE MANUAL_ADJUSTMENTS AS SELECT MARSHA, SUM( CASE WHEN SLS_SEGMENT='Association' THEN MAN_ADJ_RNS ELSE 0 END) AS ASSOC_MAN_ADJ_RNS, SUM( CASE WHEN SLS_SEGMENT NOT IN ( 'Association') THEN MAN_ADJ_RNS ELSE 0 END) AS OTHER_MAN_ADJ_RNS, SUM( MAN_ADJ_RNS) AS TOTAL_MAN_ADJ_RNS FROM MANUAL_ADJUSTMENTS2 GROUP BY MARSHA ;",YTD_Cost_Allocation.sas
" CREATE TABLE Cost_Allocation1 AS select TimeFrame format=$15. LENGTH=15 , Organization_Name format=$25. LENGTH=25 , MARSHA , Property_Name , Property_Unit_Number , Total_Group_RNs2 , Association_RNs , Other_Group_RNs_Total_Pre_Cap2 label='Other Group RNs Total Pre-Cap', Other_Group_RNs_Total_Post_Cap2 label='Other Group RNs Total Post-Cap', Special_Corp_RNs_Total_Pre_Cap label='Special Corp RNs Total Pre-Cap', Special_Corp_RNs_Total_Post_Cap label='Special Corp RNs Post-Cap', Special_Corp_RNs_Org_Percent_Cap format=4.2 label='Special Corp RNs Organization % Cap', Ttl_Othr_Grp_SpCorp_RNs_Pre label='Total Other Group AND Sp Corp RNs Pre-Cap', Ttl_Othr_Grp_SpCorp_RNs_Post label='Total Other Group AND Sp Corp RNs Post-Cap' FROM  ( select 'YTD '||( to_char( to_date( &shortpd.,'MM'),'MONTH')) AS TimeFrame, organization_name AS Organization_Name, marsha_cd AS MARSHA, property_nm AS Property_Name, product_no AS Property_Unit_Number, SUM( association_rm+other_grp_rm_tot_pre_cap) AS Total_Group_RNs2, SUM( association_rm) AS Association_RNs, SUM( other_grp_rm_tot_pre_cap) AS Other_Group_RNs_Total_Pre_Cap2, SUM( other_grp_rm_tot_post_cap) AS Other_Group_RNs_Total_Post_Cap2, SUM( spcl_corp_rm_tot_pre_cap) AS Special_Corp_RNs_Total_Pre_Cap, SUM( spcl_corp_rm_tot_post_cap) AS Special_Corp_RNs_Total_Post_Cap, SUM( spcl_corp_org_pct_cap) AS Special_Corp_RNs_Org_Percent_Cap, SUM( tot_oth_grp_spcl_corp_rm_pre) AS Ttl_Othr_Grp_SpCorp_RNs_Pre, SUM( tot_oth_grp_spcl_corp_rm_post) AS Ttl_Othr_Grp_SpCorp_RNs_Post FROM sgr_fact_smry_cost_alloc_v WHERE snapshot_pd_mo = &shortpd. AND snapshot_year=&curyr. AND organization_name not IN ( 'Canada') GROUP BY organization_name, marsha_cd, property_nm, product_no ORDER BY organization_name, marsha_cd  ) ;",YTD_Cost_Allocation.sas
" CREATE TABLE Cost_Allocation AS select TimeFrame, Organization_Name format=$35. LENGTH=35 , a.MARSHA , Property_Name , Property_Unit_Number , CASE WHEN total_man_adj_rns IN ( 0,. ) THEN total_group_rns2 ELSE SUM( total_man_adj_rns+total_group_rns2) END AS Total_Group_RNs label='Total Group RNs - No Citywide', SUM( 0) AS Citywide_Group_RNs , CASE WHEN assoc_man_adj_rns IN ( 0,. ) THEN 0 ELSE SUM( assoc_man_adj_rns) END AS Manual_Adj_Association_RNs , Association_RNs , CASE WHEN other_man_adj_rns IN ( 0,. ) THEN 0 ELSE SUM( other_man_adj_rns) END AS Manual_Adj_Other_RNs , CASE WHEN other_man_adj_rns IN ( 0,. ) THEN Other_Group_RNs_Total_Pre_Cap2 ELSE SUM( other_man_adj_rns+Other_Group_RNs_Total_Pre_Cap2) END AS Other_Group_RNs_Total_Pre_Cap label='Other Group RNs Total Pre-Cap', CASE WHEN other_man_adj_rns IN ( 0,. ) THEN Other_Group_RNs_Total_Post_Cap2 ELSE SUM( other_man_adj_rns+Other_Group_RNs_Total_Post_Cap2) END AS Other_Group_RNs_Total_Post_Cap label='Other Group RNs Total Post-Cap', Special_Corp_RNs_Total_Pre_Cap label='Special Corp RNs Pre-Cap', Special_Corp_RNs_Total_Post_Cap label='Special Corp RNs Post-Cap', Special_Corp_RNs_Org_Percent_Cap format=4.2 label='Special Corp RNs Organization % Cap', Ttl_Othr_Grp_SpCorp_RNs_Pre label='Total Other Group AND Sp Corp RNs Pre-Cap', Ttl_Othr_Grp_SpCorp_RNs_Post label='Total Other Group AND Sp Corp RNs Post-Cap' FROM Cost_Allocation1 a LEFT JOIN Manual_Adjustments b ON a.marsha=b.marsha GROUP BY organization_name, a.marsha, Property_Name, Property_Unit_Number ORDER BY organization_name, a.marsha ;",YTD_Cost_Allocation.sas
"CREATE TABLE ""&COST.SLS_TRANS_&CURYRPD..XLS"" AS ( SELECT * FROM Cost_Allocation) ;",YTD_Cost_Allocation.sas
